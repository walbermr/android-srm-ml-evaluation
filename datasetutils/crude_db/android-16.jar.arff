@relation trainingmethods

@attribute '<Method is part of a STATIC class>' {true,false}
@attribute '<Permission name is GLOBAL_SEARCH>' {true,false}
@attribute '<Parameter to sink method bind>' {true,false}
@attribute '<Permission name is READ_CALL_LOG>' {true,false}
@attribute '<Parameter to sink method replace>' {true,false}
@attribute '<Method starts with on and has void/bool return type>' {true,false}
@attribute '<Permission name is READ_CALENDAR>' {true,false}
@attribute '<Return type is com.android.internal.telephony.Connection>' {true,false}
@attribute '<Permission name is READ_SMS>' {true,false}
@attribute '<Permission name is DEVICE_POWER>' {true,false}
@attribute '<Parameter type contains android.content.intent>' {true,false}
@attribute '<Permission name is WRITE_EXTERNAL_STORAGE>' {true,false}
@attribute '<Parameter to sink method broadcast>' {true,false}
@attribute '<Method name starts with dump>' {true,false}
@attribute '<Method name starts with onClick>' {true,false}
@attribute '<Permission name is BLUETOOTH_ADMIN>' {true,false}
@attribute '<Return type is android.database.Cursor>' {true,false}
@attribute '<Parameter to sink method connect>' {true,false}
@attribute '<Value from source method is to return>' {true,false}
@attribute '<Parameter type contains com.android.inputmethod.keyboard.key>' {true,false}
@attribute '<Value from method parameter to native method>' {true,false}
@attribute '<Permission name is GET_TASKS>' {true,false}
@attribute '<Parameter to sink method enable>' {true,false}
@attribute '<Permission name is RESTART_PACKAGES>' {true,false}
@attribute '<Permission name is SET_DEBUG_APP>' {true,false}
@attribute '<Method name starts with get>' {true,false}
@attribute '<Method is part of class that ends with Manager>' {true,false}
@attribute '<Base name of class package name: accounts>' {true,false}
@attribute '<Permission name is MODIFY_PHONE_STATE>' {true,false}
@attribute '<Method name starts with put>' {true,false}
@attribute 'Method starting with \'insert\' invoked' {true,false}
@attribute '<Permission name is RECORD_AUDIO>' {true,false}
@attribute '<Method name starts with delete>' {true,false}
@attribute '<Permission name is ADD_VOICEMAIL>' {true,false}
@attribute '<Method is part of class that ends with Loader>' {true,false}
@attribute '<Method is lone getter or setter>' {true,false}
@attribute '<Method name starts with unregister>' {true,false}
@attribute '<Parameter type contains android.filterfw.core.filtercontext>' {true,false}
@attribute '<Method name starts with perform>' {true,false}
@attribute '<Permission name is CALL_PHONE>' {true,false}
@attribute '<Parameter to abstract sink>' {true,false}
@attribute '<Method is part of class that ends with View>' {true,false}
@attribute '<Method name starts with enable>' {true,false}
@attribute '<Parameter to sink method show>' {true,false}
@attribute '<Permission name is GET_ACCOUNTS>' {true,false}
@attribute '<Method is part of class android.app.BroadcastReceiver>' {true,false}
@attribute '<Permission name is SYSTEM_ALERT_WINDOW>' {true,false}
@attribute '<Base name of class package name: telephony>' {true,false}
@attribute '<Parameter to sink method perform>' {true,false}
@attribute '<Parameter to sink method create>' {true,false}
@attribute '<Method name starts with do>' {true,false}
@attribute '<Method name starts with clear>' {true,false}
@attribute '<Value from source method obtainMessage to return>' {true,false}
@attribute '<Method name starts with set>' {true,false}
@attribute '<Method is part of a ABSTRACT class>' {true,false}
@attribute '<Permission name is READ_CONTACTS>' {true,false}
@attribute '<Permission name is REBOOT>' {true,false}
@attribute '<Parameter to sink method dispatch>' {true,false}
@attribute '<Permission name is UPDATE_DEVICE_STATS>' {true,false}
@attribute '<Method name starts with open>' {true,false}
@attribute '<Permission name is USE_CREDENTIALS>' {true,false}
@attribute '<Method is thread runner>' {true,false}
@attribute '<Parameter to sink method save>' {true,false}
@attribute '<Parameter type contains android.content.contentresolver>' {true,false}
@attribute '<Permission name is WRITE_USER_DICTIONARY>' {true,false}
@attribute '<Permission name is WRITE_SOCIAL_STREAM>' {true,false}
@attribute '<Value from source method create to return>' {true,false}
@attribute '<Method name starts with disable>' {true,false}
@attribute '<Parameter type contains java.io.filedescriptor>' {true,false}
@attribute '<Method name starts with update>' {true,false}
@attribute '<Method name starts with close>' {true,false}
@attribute '<Permission name is SET_WALLPAPER_COMPONENT>' {true,false}
@attribute '<Method name starts with apply>' {true,false}
@attribute '<Method is part of class that ends with Factory>' {true,false}
@attribute '<Parameter to sink method disable>' {true,false}
@attribute '<Method name starts with remove>' {true,false}
@attribute '<Method name starts with add>' {true,false}
@attribute '<Method is part of class android.app.ContentProvider>' {true,false}
@attribute '<Permission name is RECEIVE_SMS>' {true,false}
@attribute '<Return type is int>' {true,false}
@attribute '<Parameter to sink method send>' {true,false}
@attribute '<Permission name is WRITE_SETTINGS>' {true,false}
@attribute '<Value from source method query to return>' {true,false}
@attribute '<Parameter type contains java.io.>' {true,false}
@attribute '<Method is part of a PRIVATE class>' {true,false}
@attribute '<Method is part of class android.app.Activity>' {true,false}
@attribute '<Value from source method writeToParcel to return>' {true,false}
@attribute '<Method name starts with bind>' {true,false}
@attribute '<Permission name is AUTHENTICATE_ACCOUNTS>' {true,false}
@attribute '<Method name starts with send>' {true,false}
@attribute '<Method is part of a PROTECTED class>' {true,false}
@attribute '<Parameter to sink method start>' {true,false}
@attribute '<Parameter to sink method println>' {true,false}
@attribute '<Permission name is ACCESS_NETWORK_STATE>' {true,false}
@attribute '<Method name starts with is>' {true,false}
@attribute '<Permission name is CHANGE_WIFI_STATE>' {true,false}
@attribute '<Permission name is CALL_PRIVILEGED>' {true,false}
@attribute '<Method name ends with Messenger>' {true,false}
@attribute '<Permission name is WRITE_SMS>' {true,false}
@attribute '<Permission name is READ_SOCIAL_STREAM>' {true,false}
@attribute '<Parameter to sink method onCreate>' {true,false}
@attribute '<Permission name is KILL_BACKGROUND_PROCESSES>' {true,false}
@attribute '<Method name starts with <init>>' {true,false}
@attribute '<Return type is java.util.List>' {true,false}
@attribute '<Method modifier is STATIC>' {true,false}
@attribute '<Parameter type contains com.google.common.io>' {true,false}
@attribute '<Permission name is VIBRATE>' {true,false}
@attribute '<Parameter to sink method clear>' {true,false}
@attribute '<Permission name is WRITE_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Parameter type contains android.content.context>' {true,false}
@attribute '<Method is part of class that ends with Service>' {true,false}
@attribute '<Method modifier is PROTECTED>' {true,false}
@attribute '<Parameter to sink method restore>' {true,false}
@attribute '<Permission name is SEND_SMS>' {true,false}
@attribute '<Permission name is WAKE_LOCK>' {true,false}
@attribute '<Permission name is READ_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Method name starts with handle>' {true,false}
@attribute '<Return type is java.util.Map>' {true,false}
@attribute '<Method is part of class android.content.Context>' {true,false}
@attribute '<Method name starts with supply>' {true,false}
@attribute '<Method is part of class that ends with Handler>' {true,false}
@attribute '<Parameter to sink method insert>' {true,false}
@attribute '<Permission name is CAMERA>' {true,false}
@attribute '<Parameter to sink method setup>' {true,false}
@attribute '<Return type is boolean>' {true,false}
@attribute '<Parameter to sink method write>' {true,false}
@attribute '<Parameter type contains android.database.cursor>' {true,false}
@attribute '<Parameter to sink method enqueue>' {true,false}
@attribute '<Method name starts with request>' {true,false}
@attribute '<Method modifier is FINAL>' {true,false}
@attribute '<Method has parameters>' {true,false}
@attribute '<Return type is void>' {true,false}
@attribute '<Method is part of an anonymous class>' {true,false}
@attribute '<Permission name is ACCESS_FINE_LOCATION>' {true,false}
@attribute '<Method is part of class that contains the name com.google.common.io>' {true,false}
@attribute '<Method returns constant>' {true,false}
@attribute '<Method name starts with query>' {true,false}
@attribute '<Permission name is MODIFY_AUDIO_SETTINGS>' {true,false}
@attribute '<Permission name is READ_EXTERNAL_STORAGE>' {true,false}
@attribute '<Method name starts with note>' {true,false}
@attribute '<Permission name is DISABLE_KEYGUARD>' {true,false}
@attribute '<Parameter to sink method dump>' {true,false}
@attribute '<Method name starts with process>' {true,false}
@attribute '<Permission name is STOP_APP_SWITCHES>' {true,false}
@attribute '<Permission name is CHANGE_CONFIGURATION>' {true,false}
@attribute '<Value from source method get to return>' {true,false}
@attribute '<Permission name is ACCESS_COARSE_LOCATION>' {true,false}
@attribute '<Base name of class package name: io>' {true,false}
@attribute '<Parameter type contains event>' {true,false}
@attribute '<Permission name is BROADCAST_STICKY>' {true,false}
@attribute '<Parameter to sink method sync>' {true,false}
@attribute '<Permission name is ACCESS_WIFI_STATE>' {true,false}
@attribute '<Method name starts with load>' {true,false}
@attribute '<Method modifier is PUBLIC>' {true,false}
@attribute '<Parameter to sink method remove>' {true,false}
@attribute '<Permission name is SET_WALLPAPER>' {true,false}
@attribute '<Parameter to sink method adjust>' {true,false}
@attribute '<Permission name is NFC>' {true,false}
@attribute '<Permission name is READ_SYNC_STATS>' {true,false}
@attribute '<Permission name is READ_SYNC_SETTINGS>' {true,false}
@attribute '<Parameter to sink method update>' {true,false}
@attribute '<Method name starts with register>' {true,false}
@attribute '<Parameter to sink method put>' {true,false}
@attribute '<Permission name is BACKUP>' {true,false}
@attribute '<Method is part of class that contains the name java.io.>' {true,false}
@attribute '<Permission name is READ_USER_DICTIONARY>' {true,false}
@attribute '<Permission name is SET_TIME_ZONE>' {true,false}
@attribute '<Parameter to sink method com.android.internal.telephony.CommandsInterface>' {true,false}
@attribute '<Parameter is interface>' {true,false}
@attribute '<Parameter type contains android.net.uri>' {true,false}
@attribute '<Method is part of class that ends with Context>' {true,false}
@attribute '<Method is part of a PUBLIC class>' {true,false}
@attribute '<Method is part of a FINAL class>' {true,false}
@attribute '<Method name starts with release>' {true,false}
@attribute '<Method name starts with toggle>' {true,false}
@attribute '<Return type is byte[]>' {true,false}
@attribute '<Permission name is MOUNT_UNMOUNT_FILESYSTEMS>' {true,false}
@attribute '<Base name of class package name: music>' {true,false}
@attribute '<Permission name is CLEAR_APP_USER_DATA>' {true,false}
@attribute '<Permission name is READ_PHONE_STATE>' {true,false}
@attribute '<Value from method get to sink method>' {true,false}
@attribute '<Method name starts with finish>' {true,false}
@attribute '<Permission name is MANAGE_ACCOUNTS>' {true,false}
@attribute '<Method name starts with insert>' {true,false}
@attribute '<Permission name is MANAGE_APP_TOKENS>' {true,false}
@attribute '<Method name starts with run>' {true,false}
@attribute '<Method name starts with notify>' {true,false}
@attribute '<Return type is android.os.Parcelable>' {true,false}
@attribute '<Method name starts with restore>' {true,false}
@attribute '<Permission name is DUMP>' {true,false}
@attribute '<Permission name is WRITE_SYNC_SETTINGS>' {true,false}
@attribute '<Method name starts with dispatch>' {true,false}
@attribute '<Return type is android.net.Uri>' {true,false}
@attribute '<Parameter type contains java.lang.string>' {true,false}
@attribute '<Permission name is WRITE_CONTACTS>' {true,false}
@attribute '<Parameter to sink method delete>' {true,false}
@attribute '<Parameter to sink method notify>' {true,false}
@attribute '<Method is part of class android.app.Service>' {true,false}
@attribute '<Parameter type contains writer>' {true,false}
@attribute '<Permission name is INTERNET>' {true,false}
@attribute '<Parameter type contains observer>' {true,false}
@attribute '<Permission name is RECEIVE_BOOT_COMPLETED>' {true,false}
@attribute '<Permission name is ACCESS_LOCATION_EXTRA_COMMANDS>' {true,false}
@attribute '<Parameter to sink method transact>' {true,false}
@attribute '<Base name of class package name: webkit>' {true,false}
@attribute '<Parameter to sink method dial>' {true,false}
@attribute '<Parameter to sink method set>' {true,false}
@attribute '<Permission name is USE_SIP>' {true,false}
@attribute '<Method is part of class android.content.ContentResolver>' {true,false}
@attribute '<Method name starts with start>' {true,false}
@attribute '<Permission name is CHANGE_NETWORK_STATE>' {true,false}
@attribute '<Permission name is BLUETOOTH>' {true,false}
@attribute '<Permission name is WRITE_CALENDAR>' {true,false}
@attribute class {source,sink,neithernor}
@attribute id {'<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>','<android.app.Dialog: void onStart()>','<android.webkit.WebView: boolean canGoForward()>','<com.android.ex.variablespeed.EngineParameters: float getInitialRate()>','<android.util.Log$TerribleFailure: void <init>(java.lang.String,java.lang.Throwable)>','<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>','<com.android.internal.widget.SlidingTab$Slider: void hideTarget()>','<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>','<android.renderscript.Element: android.renderscript.Element U32_4(android.renderscript.RenderScript)>','<android.net.wifi.WifiStateMachine$3: void <init>(android.net.wifi.WifiStateMachine)>','<android.net.http.RequestQueue$ActivePool: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>','<android.inputmethodservice.Keyboard$Key: void onPressed()>','<android.view.IOnKeyguardExitResult$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.wifi.WifiStateMachine: void access$15500(android.net.wifi.WifiStateMachine,android.net.wifi.WifiConfiguration)>','<android.net.Credentials: int getPid()>','<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState access$1500(android.net.wifi.WifiWatchdogStateMachine)>','<android.location.LocationManager$ListenerTransport$2: void <init>(android.location.LocationManager$ListenerTransport,android.os.Looper,android.location.LocationManager)>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForEriFileLoaded(android.os.Handler,int,java.lang.Object)>','<android.os.StrictMode$AndroidCloseGuardReporter: void <init>(android.os.StrictMode$1)>','<com.android.server.pm.UserManager: void clearUserDataForAllUsers(java.lang.String)>','<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>','<android.webkit.HTML5VideoFullScreen: android.widget.FrameLayout access$800()>','<android.view.GLES20Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>','<com.android.server.DeviceStorageMonitorService: void access$000(com.android.server.DeviceStorageMonitorService,boolean)>','<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,int)>','<android.server.BluetoothService: int getRemoteClass(java.lang.String)>','<com.android.server.am.ActivityManagerService$2: void handleMessage(android.os.Message)>','<android.content.pm.IPackageManager$Stub$Proxy: void updateExternalMediaStatus(boolean,boolean)>','<android.widget.TextView: android.graphics.Typeface getTypeface()>','<android.graphics.Matrix$1: boolean preTranslate(float,float)>','<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>','<android.webkit.ZoomManager: void setZoomCenter(float,float)>','<com.android.internal.telephony.DataConnection$DcDefaultState: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<android.view.Surface: int describeContents()>','<android.media.ToneGenerator: void finalize()>','<com.android.internal.telephony.sip.SipPhoneBase: void setRadioPower(boolean)>','<android.bluetooth.BluetoothHealthAppConfiguration$1: void <init>()>','<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.pm.PackageManagerService: int checkSignatures(java.lang.String,java.lang.String)>','<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<android.net.wifi.WifiManager: int getWifiState()>','<android.webkit.WebViewClassic: boolean access$4602(android.webkit.WebViewClassic,boolean)>','<android.widget.ListPopupWindow$DropDownListView: boolean hasWindowFocus()>','<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>','<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)>','<android.filterfw.core.OutputPort: void open()>','<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)>','<com.android.ex.variablespeed.VariableSpeed: java.util.concurrent.CountDownLatch access$300(com.android.ex.variablespeed.VariableSpeed)>','<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>','<com.android.server.IntentResolver: void sortResults(java.util.List)>','<android.app.BackStackRecord: android.app.FragmentTransaction hide(android.app.Fragment)>','<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,boolean)>','<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence)>','<android.net.Uri$Builder: void <init>()>','<android.content.IntentFilter: boolean debugCheck()>','<com.android.server.PowerManagerService: int access$1302(com.android.server.PowerManagerService,int)>','<android.widget.GridView: int computeVerticalScrollRange()>','<android.view.KeyEvent: android.view.KeyEvent obtain(android.view.KeyEvent)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: boolean finishUpdate()>','<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>','<android.content.res.StringBlock$StyleIDs: int access$600(android.content.res.StringBlock$StyleIDs)>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String access$100(byte[])>','<android.preference.Preference: boolean hasKey()>','<android.view.Window: void setWindowAnimations(int)>','<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>','<android.app.IBackupAgent$Stub: void <init>()>','<com.android.internal.widget.multiwaveview.PointCloud: void draw(android.graphics.Canvas)>','<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.cat.DisplayTextParams: boolean setIcon(android.graphics.Bitmap)>','<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)>','<android.app.ResultInfo: void <init>(android.os.Parcel)>','<com.android.server.connectivity.Tethering: void limitReached(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void access$400(com.android.server.am.ActivityManagerService)>','<com.android.server.pm.PackageManagerService: void verifyPendingInstall(int,int)>','<android.view.WindowManagerImpl: boolean isHardwareAccelerated()>','<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>','<android.os.DropBoxManager$Entry$1: void <init>()>','<android.webkit.WebViewCore$EventHub: void access$7400(android.webkit.WebViewCore$EventHub,int)>','<com.android.internal.util.FastXmlSerializer: void ignorableWhitespace(java.lang.String)>','<android.view.MotionEvent: boolean isTouchEvent()>','<android.net.ProxyProperties: java.lang.String toString()>','<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen,com.android.internal.policy.impl.SimPukUnlockScreen$1)>','<android.view.inputmethod.ExtractedTextRequest: void <clinit>()>','<android.widget.Editor$EasyEditSpanController$1: void run()>','<android.hardware.usb.UsbRequest: void <init>()>','<com.android.server.wm.WindowManagerService$3: void onKeyguardExitResult(boolean)>','<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOffLocked()>','<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownPropertyNameSet()>','<android.view.View: boolean callOnClick()>','<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>','<com.android.server.wm.WindowManagerService: boolean isWallpaperVisible(com.android.server.wm.WindowState)>','<android.os.Parcel: void setDataPosition(int)>','<com.android.server.NetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.webkit.CallbackProxy$3: void onCancel(android.content.DialogInterface)>','<android.view.View: android.view.View findFocus()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePattern(int)>','<android.view.ViewTreeObserver$InternalInsetsInfo: int hashCode()>','<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$ProcessedMessageInfo getProcessedMessageInfo(int)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.sip.SipPhone$SipCall access$300(com.android.internal.telephony.sip.SipPhone)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailNumber()>','<com.android.internal.telephony.BaseCommands: void unregisterForExitEmergencyCallbackMode(android.os.Handler)>','<android.webkit.Plugin$DefaultClickHandler: void <init>(android.webkit.Plugin,android.webkit.Plugin$1)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec: void <init>(int,java.lang.String)>','<android.provider.ContactsContract$CommonDataKinds$Im: int getProtocolLabelResource(int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void clearDefaults(java.lang.String)>','<android.widget.PopupWindow: void setIgnoreCheekPress()>','<android.view.View: int getOverScrollMode()>','<com.android.internal.policy.impl.KeyguardViewManager: void hide()>','<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>','<com.android.internal.telephony.ISms$Stub$Proxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColor(int)>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>','<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>','<android.content.CursorEntityIterator: void close()>','<android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState: boolean processMessage(android.os.Message)>','<android.app.admin.DeviceAdminInfo: java.lang.String toString()>','<com.android.internal.policy.impl.GlobalActions$3: boolean showBeforeProvisioning()>','<android.graphics.Rect: void <init>(int,int,int,int)>','<com.android.server.MountService: java.util.ArrayList access$1300(com.android.server.MountService)>','<android.webkit.HTML5VideoFullScreen$1: void surfaceCreated(android.view.SurfaceHolder)>','<com.android.internal.telephony.PhoneProxy: void rejectCall()>','<android.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)>','<android.app.ApplicationPackageManager$ResourceName: void <init>(android.content.pm.ApplicationInfo,int)>','<android.bluetooth.BluetoothTetheringDataTracker: void privateDnsRouteSet(boolean)>','<android.app.IActivityManager$ContentProviderHolder$1: void <init>()>','<android.text.HtmlToSpannedConverter$Font: void <init>(java.lang.String,java.lang.String)>','<android.webkit.DeviceOrientationService: void <clinit>()>','<android.content.IntentFilter$1: android.content.IntentFilter[] newArray(int)>','<com.android.server.wm.WindowState: boolean showLw(boolean)>','<com.android.server.PowerManagerService: long access$6802(com.android.server.PowerManagerService,long)>','<android.inputmethodservice.Keyboard: void resize(int,int)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: void clearDirectory(java.lang.String)>','<android.view.GLES20Canvas: void drawCircle(float,float,float,android.graphics.Paint)>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void initialize(java.lang.String)>','<android.app.ContextImpl$ApplicationContentResolver: boolean releaseProvider(android.content.IContentProvider)>','<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>','<android.net.wifi.WifiNative: boolean setModelName(java.lang.String)>','<android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState)>','<android.server.BluetoothService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,int,int)>','<android.net.sip.SipSession$1: void onRegistrationDone(android.net.sip.ISipSession,int)>','<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>','<android.net.http.SslCertificate: void <clinit>()>','<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>','<android.webkit.WebSettingsClassic: void setDoubleTapZoom(int)>','<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>','<android.view.InputDevice$MotionRange: int getSource()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void updateStatusLines(boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: boolean isTargetPresent(int)>','<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>','<android.view.ViewTreeObserver: void dispatchOnTouchModeChanged(boolean)>','<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.bluetooth.IBluetoothStateChangeCallback asInterface(android.os.IBinder)>','<com.android.internal.telephony.PhoneProxy: void unregisterForNumberInfo(android.os.Handler)>','<android.net.sip.ISipService$Stub$Proxy: boolean isOpened(java.lang.String)>','<android.os.Handler: void dump(android.util.Printer,java.lang.String)>','<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String,java.lang.String)>','<android.webkit.WebView$HitTestResult: void setExtra(java.lang.String)>','<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String)>','<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>','<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>','<com.android.internal.view.menu.MenuItemImpl: int getOrder()>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.os.BatteryStatsImpl: void initDischarge()>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getPhoneName()>','<com.android.ex.variablespeed.VariableSpeed: boolean isPlaying()>','<android.widget.AbsListView: int access$1200(android.widget.AbsListView)>','<android.app.ActivityThread$2: void onLowMemory()>','<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>','<android.graphics.PointF: float length(float,float)>','<android.widget.SearchView: android.widget.ImageView access$600(android.widget.SearchView)>','<android.media.MediaRecorder: void prepare()>','<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache access$400(android.widget.RemoteViewsAdapter)>','<android.text.method.WordIterator: void <init>()>','<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>','<android.view.WindowManager$LayoutParams: void <init>()>','<com.android.internal.policy.impl.KeyguardViewBase$1: void setColorFilter(android.graphics.ColorFilter)>','<android.server.BluetoothAdapterStateMachine: void access$5600(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.app.Activity: android.view.WindowManager getWindowManager()>','<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>','<android.widget.SuggestionsAdapter$1: long getPostingDelay(java.lang.CharSequence)>','<android.net.wifi.WifiConfiguration$ProxySettings: void <clinit>()>','<android.media.IAudioService$Stub$Proxy: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>','<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>','<android.location.Country: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void hangup()>','<android.location.ILocationManager$Stub$Proxy: void reportLocation(android.location.Location,boolean)>','<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.BaseCommands: void unSetOnNewGsmBroadcastSms(android.os.Handler)>','<android.content.pm.PermissionGroupInfo: void <init>()>','<com.android.server.WallpaperManagerService: void <clinit>()>','<android.net.wifi.WifiManager: java.util.List getScanResults()>','<com.android.vcard.VCardParserImpl_V21: void handleAgent(com.android.vcard.VCardProperty)>','<android.opengl.GLLogWrapper: void glFrontFace(int)>','<android.app.LoaderManagerImpl: void doDestroy()>','<android.graphics.Matrix$1: void setValues(float[])>','<android.view.animation.Animation: void setDetachWallpaper(boolean)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onPhoneStateChanged(int)>','<com.android.server.PowerManagerService: int access$5300(com.android.server.PowerManagerService)>','<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean)>','<android.widget.Toast: void setGravity(int,int,int)>','<android.app.ActivityThread: void access$1200(android.app.ActivityThread,android.os.IBinder,boolean,int,boolean)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel access$15400(android.net.wifi.WifiStateMachine)>','<android.view.GLES20Canvas: void drawPoint(float,float,android.graphics.Paint)>','<android.view.ViewRootImpl$TrackballAxis: void <init>()>','<android.webkit.HTML5VideoFullScreen: android.widget.MediaController access$200(android.webkit.HTML5VideoFullScreen)>','<android.net.Uri$OpaqueUri: java.lang.String getAuthority()>','<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String,int)>','<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>','<android.bluetooth.BluetoothDeviceProfileState: void access$3600(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.widget.TextView: void cancelLongPress()>','<android.app.Dialog$ListenersHandler: void <init>(android.app.Dialog)>','<android.opengl.GLLogWrapper: void glOrthox(int,int,int,int,int,int)>','<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>','<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()>','<android.view.ViewConfiguration: int getDoubleTapTimeout()>','<android.widget.SearchView$7: boolean onKey(android.view.View,int,android.view.KeyEvent)>','<com.android.server.ShutdownActivity: void <init>()>','<android.widget.ExpandableListConnector$GroupMetadata: android.widget.ExpandableListConnector$GroupMetadata obtain(int,int,int,long)>','<android.webkit.WebViewCore: boolean jsConfirm(java.lang.String,java.lang.String)>','<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)>','<com.android.internal.telephony.RIL: void separateConnection(int,android.os.Message)>','<android.media.DecoderCapabilities: java.util.List getVideoDecoders()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.util.List newInstance(java.lang.String)>','<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>','<android.view.Display: int getWidth()>','<android.server.BluetoothService: java.lang.Integer getAuthorizationAgentRequestData(java.lang.String)>','<android.os.storage.StorageVolume: int describeContents()>','<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void start()>','<android.security.IKeyChainAliasCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.AbsSeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>','<android.os.Build: void <init>()>','<com.android.internal.os.storage.ExternalStorageFormatter$2: void run()>','<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>','<android.content.pm.UserInfo: int describeContents()>','<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()>','<android.bluetooth.BluetoothTetheringDataTracker: boolean isDefaultRouteSet()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>','<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onPackageAdded(java.lang.String,int)>','<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>','<android.widget.AbsListView: void setFastScrollEnabled(boolean)>','<android.renderscript.RenderScript: int nAllocationCreateFromBitmap(int,int,android.graphics.Bitmap,int)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onClockVisibilityChanged()>','<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)>','<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)>','<android.speech.tts.UtteranceProgressListener$1: void onStart(java.lang.String)>','<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>','<com.android.vcard.VCardUtils: boolean containsOnlyAlphaDigitHyphen(java.util.Collection)>','<android.os.Debug: void startNativeTracing()>','<android.graphics.Bitmap: int[] getLayoutBounds()>','<android.webkit.WebStorageClassic: void access$100(java.lang.String)>','<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>','<android.view.VolumePanel: void onStartTrackingTouch(android.widget.SeekBar)>','<android.webkit.WebViewClassic: boolean access$6800(android.webkit.WebViewClassic)>','<com.android.internal.telephony.cat.Menu: void <init>()>','<android.view.KeyEvent: int getDeadChar(int,int)>','<android.graphics.RectF: void offsetTo(float,float)>','<com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>','<android.view.ViewRootImpl: void requestTransparentRegion(android.view.View)>','<android.net.sip.SipSessionAdapter: void onRegistrationDone(android.net.sip.ISipSession,int)>','<android.net.wifi.SupplicantStateTracker$DormantState: void <init>(android.net.wifi.SupplicantStateTracker)>','<android.telephony.JapanesePhoneNumberFormatter: void <init>()>','<android.webkit.WebSettingsClassic: java.lang.String getUserAgentString()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String maybeUnescapeText(java.lang.String)>','<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getLanguageCode()>','<android.media.RingtoneManager: int inferStreamType()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message)>','<com.android.internal.telephony.PhoneProxy: void unregisterForMmiInitiate(android.os.Handler)>','<com.android.server.wm.DimAnimator: void <init>(android.view.SurfaceSession)>','<com.android.internal.widget.multiwaveview.Ease$Cubic$1: float getInterpolation(float)>','<android.server.BluetoothService: java.lang.String[] listInState(int)>','<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>','<com.android.server.InputMethodManagerService: void <clinit>()>','<com.android.server.wm.Session: void performDeferredDestroy(android.view.IWindow)>','<android.location.Address: java.lang.String getSubAdminArea()>','<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>','<com.android.server.am.ActivityManagerService: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)>','<com.android.server.input.InputFilter: void uninstall()>','<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>','<android.webkit.GeolocationPermissionsClassic: android.webkit.GeolocationPermissionsClassic getInstance()>','<android.net.wifi.p2p.WifiP2pConfig: void <clinit>()>','<android.widget.ScrollView: void measureChild(android.view.View,int,int)>','<android.widget.Editor: void onScrollChanged()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentLength(int)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: android.view.View getView()>','<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ScrollDelegate getScrollDelegate()>','<android.os.IMessenger$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastDisabled(int)>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.android.internal.view.menu.MenuPopupHelper,com.android.internal.view.menu.MenuBuilder)>','<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>','<com.android.server.MountService$DefaultContainerConnection: void <init>(com.android.server.MountService)>','<android.bluetooth.BluetoothDevice: java.lang.String toString()>','<android.graphics.Matrix$1: boolean preScale(float,float,float,float)>','<com.android.internal.telephony.IccCard: void access$200(com.android.internal.telephony.IccCard,android.os.AsyncResult)>','<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>','<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void attachEngine(android.service.wallpaper.IWallpaperEngine)>','<android.view.VolumePanel: void postHasNewRemotePlaybackInfo()>','<android.graphics.drawable.Drawable: boolean setState(int[])>','<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>','<android.webkit.WebViewClassic: android.webkit.WebBackForwardListClient getWebBackForwardListClient()>','<android.text.method.DateKeyListener: void <clinit>()>','<android.view.Choreographer: long subtractFrameDelay(long)>','<com.android.server.pm.PackageManagerService: void readPermissions()>','<android.net.nsd.NsdServiceInfo: java.lang.String toString()>','<android.media.AudioService: boolean access$7002(android.media.AudioService,boolean)>','<android.text.method.BaseKeyListener: int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean)>','<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>','<android.view.textservice.SuggestionsInfo: int getCookie()>','<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)>','<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)>','<android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)>','<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)>','<android.view.MenuInflater: java.lang.Object[] access$300(android.view.MenuInflater)>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage newFromParcel(android.os.Parcel)>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String toString()>','<android.widget.TextView: void setGravity(int)>','<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>','<android.widget.AbsListView: void reclaimViews(java.util.List)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>','<android.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()>','<com.android.server.wm.WindowStateAnimator: java.lang.String toString()>','<android.opengl.GLLogWrapper: void glAlphaFuncx(int,int)>','<android.nfc.INfcAdapter$Stub$Proxy: void setNdefPushCallback(android.nfc.INdefPushCallback)>','<android.server.BluetoothA2dpService: int getPriority(android.bluetooth.BluetoothDevice)>','<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,int[],int)>','<android.widget.AdapterViewAnimator: void checkForAndHandleDataChanged()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.util.NtpTrustedTime: long getCacheAge()>','<android.util.LogPrinter: void println(java.lang.String)>','<android.app.FragmentState$1: android.app.FragmentState createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.Phone$DataState: void <clinit>()>','<android.bluetooth.BluetoothHealthCallback: void <init>()>','<android.server.BluetoothBondState: void setBondState(java.lang.String,int,int)>','<android.bluetooth.BluetoothClass$Device$Major: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getEsn()>','<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>','<android.content.ContentService$ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)>','<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>','<android.net.http.Headers: java.lang.String getEtag()>','<android.view.IWindowManager$Stub$Proxy: void freezeRotation(int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder newBuilder()>','<android.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>','<android.webkit.WebView: void pauseTimers()>','<android.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.content.res.XmlBlock: void <init>(byte[],int,int)>','<android.preference.Preference: int getOrder()>','<com.android.internal.telephony.IPhoneSubInfo$Stub: void <init>()>','<android.nfc.TechListParcel: void <clinit>()>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>','<android.view.ViewRootImpl$ViewRootHandler: java.lang.String getMessageName(android.os.Message)>','<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>','<com.android.internal.telephony.sip.SipPhone: android.telephony.SignalStrength getSignalStrength()>','<android.widget.PopupWindow$1: void onScrollChanged()>','<android.text.TextLine: void draw(android.graphics.Canvas,float,int,int,int)>','<android.view.SurfaceView: void draw(android.graphics.Canvas)>','<android.os.Debug: void startMethodTracingDdms(int,int)>','<android.webkit.ZoomManager$ScaleDetectorListener: boolean onScale(android.view.ScaleGestureDetector)>','<com.android.server.usb.UsbService: void <init>(android.content.Context)>','<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>','<android.net.wifi.WifiManager: boolean startWifi()>','<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>','<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService self()>','<android.view.View: void setBackgroundColor(int)>','<com.android.server.wm.WindowManagerService$PolicyThread: void run()>','<android.bluetooth.BluetoothTetheringDataTracker: boolean setRadio(boolean)>','<android.app.Activity: void onContextMenuClosed(android.view.Menu)>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void sendResult()>','<android.os.Binder: boolean isBinderAlive()>','<com.android.internal.view.IInputMethod$Stub$Proxy: void unbindInput()>','<android.widget.ProgressBar: void setProgress(int)>','<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onCancel()>','<com.android.internal.policy.impl.KeyguardViewManager: void setNeedsInput(boolean)>','<com.android.server.pm.UserManager: void <clinit>()>','<com.android.internal.telephony.PhoneProxy: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.net.http.IdleCache$Entry: void <init>(android.net.http.IdleCache)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.WifiStateMachine: void enableRssiPolling(boolean)>','<com.android.internal.telephony.DataConnection$DcDisconnectingState: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<com.android.ex.variablespeed.EngineParameters: int getStartPositionMillis()>','<android.net.wifi.WifiStateMachine: void reconnectCommand()>','<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>','<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>','<android.text.TextLine: void <init>()>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>','<android.webkit.WebViewClassic: float tileProfilingStop()>','<android.content.ContentService$ObserverNode$ObserverEntry: void binderDied()>','<android.net.wifi.WifiStateTracker: android.net.NetworkInfo$State access$400(android.net.wifi.WifiStateTracker)>','<android.net.EthernetDataTracker: void setDependencyMet(boolean)>','<android.widget.Toast: void setText(java.lang.CharSequence)>','<com.android.server.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt()>','<android.view.GLES20Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>','<android.widget.Editor$PositionListener: void removeSubscriber(android.widget.Editor$TextViewPositionListener)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void log(java.lang.String)>','<android.app.IThumbnailRetriever$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.pm.PackageStats)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean canBeForceHidden(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)>','<android.net.wifi.WifiStateMachine$DriverStartingState: boolean processMessage(android.os.Message)>','<com.android.internal.telephony.CallManager: void unregisterForRingbackTone(android.os.Handler)>','<com.android.server.am.ActivityManagerService$5$1: void run()>','<android.util.SparseArray: int size()>','<com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>','<android.location.Location: android.os.Bundle access$1102(android.location.Location,android.os.Bundle)>','<android.location.Location: void distanceBetween(double,double,double,double,float[])>','<com.android.server.PowerManagerService$WakeLock: void <init>(com.android.server.PowerManagerService,int,android.os.IBinder,java.lang.String,int,int)>','<android.app.Activity: boolean showDialog(int,android.os.Bundle)>','<android.webkit.HTML5VideoFullScreen: android.view.View access$902(android.view.View)>','<android.text.method.LinkMovementMethod: void <init>()>','<com.android.server.TelephonyRegistry: void notifyServiceState(android.telephony.ServiceState)>','<android.text.BoringLayout: int getEllipsisCount(int)>','<android.text.HtmlToSpannedConverter: void characters(char[],int,int)>','<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList access$700(android.animation.ValueAnimator$AnimationHandler)>','<android.media.Metadata: void <init>()>','<com.android.server.am.UsageStatsService$1: void run()>','<com.android.internal.policy.impl.PhoneWindowManager: void layoutWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams,android.view.WindowManagerPolicy$WindowState)>','<com.android.internal.widget.PointerLocationView$PointerState: boolean access$100(com.android.internal.widget.PointerLocationView$PointerState)>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onUnbindMethod(int)>','<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int hashCode()>','<android.app.BackStackState: android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)>','<com.android.server.InputMethodManagerService$6: void onClick(android.content.DialogInterface,int)>','<android.util.LogWriter: void <init>(int,java.lang.String,int)>','<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>','<android.graphics.drawable.ScaleDrawable: void <init>()>','<com.android.server.NetworkManagementService: void clearInterfaceAddresses(java.lang.String)>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.os.storage.StorageManager$ListenerDelegate: android.os.storage.StorageEventListener getListener()>','<android.content.Intent: void writeToParcel(android.os.Parcel,int)>','<android.content.SyncResult: boolean hasError()>','<com.android.server.NetworkManagementSocketTagger$SocketTags: void <init>()>','<com.android.server.location.LocationProviderProxy$Connection: void onServiceDisconnected(android.content.ComponentName)>','<android.webkit.HTML5VideoView: int getDuration()>','<android.database.ContentObserver$Transport: void releaseContentObserver()>','<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.widget.FastScroller$ScrollFade: int getAlpha()>','<com.android.internal.telephony.test.ModelInterpreter: void setNextDialFailImmediately(boolean)>','<android.graphics.drawable.RotateDrawable: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1)>','<android.webkit.PluginFullScreenHolder: void <init>(android.webkit.WebViewClassic,int,int)>','<com.android.server.MountService: boolean isExternalStorageEmulated()>','<android.database.CursorWrapper: boolean moveToNext()>','<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>','<android.widget.MediaController: android.widget.TextView access$1000(android.widget.MediaController)>','<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>','<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>','<android.speech.tts.TextToSpeech$Connection: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean)>','<android.net.EthernetDataTracker: boolean reconnect()>','<android.content.pm.PackageInfoLite: void writeToParcel(android.os.Parcel,int)>','<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>','<android.webkit.WebViewClassic: int pinLocX(int)>','<android.text.PackedObjectVector: void deleteAt(int,int)>','<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(android.content.res.Resources,int)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>','<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>','<android.webkit.WebView$PrivateAccess: void setMeasuredDimension(int,int)>','<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec: void <init>(int,int,int,int)>','<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>','<android.net.wifi.WifiNative: boolean clearBlacklist()>','<android.widget.CompoundButton: void setButtonDrawable(int)>','<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.server.ProcessMap: void <init>()>','<com.android.server.PowerManagerService: com.android.server.PowerManagerService$LockList access$500(com.android.server.PowerManagerService)>','<android.webkit.Plugin: void setPath(java.lang.String)>','<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>','<android.view.GLES20RecordingCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>','<android.util.XmlPullAttributes: int getAttributeNameResource(int)>','<android.net.NetworkIdentity: int getType()>','<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>','<com.android.internal.policy.impl.AccountUnlockScreen: void access$500(com.android.internal.policy.impl.AccountUnlockScreen,boolean)>','<com.android.internal.http.HttpDateTime: void <init>()>','<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>','<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>','<android.app.INotificationManager$Stub: void <init>()>','<android.view.InputDevice$MotionRange: int access$200(android.view.InputDevice$MotionRange)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean matchContainer(java.lang.String)>','<com.android.internal.telephony.cat.AppInterface$CommandType: void <clinit>()>','<com.android.server.sip.SipWakeupTimer: void cancel(java.lang.Runnable)>','<com.android.server.sip.SipWakeupTimer$MyEvent: java.lang.String toString()>','<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()>','<android.bluetooth.BluetoothDeviceProfileState: void access$4100(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.webkit.WebViewClassic: boolean isRectFitOnScreen(android.graphics.Rect)>','<android.content.res.Resources: java.lang.String getQuantityString(int,int)>','<android.widget.ImageView: void setMaxWidth(int)>','<android.server.BluetoothService: boolean setRemoteOutOfBandData(java.lang.String)>','<android.os.RemoteCallback$DeliverResult: void run()>','<android.view.MotionEvent: void setAction(int)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void loge(java.lang.String)>','<android.hardware.usb.UsbAccessory$1: void <init>()>','<com.android.server.am.ReceiverList: void binderDied()>','<android.widget.Editor$SuggestionsPopupWindow: void measureContent()>','<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: int getRememberedPosition()>','<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>','<android.app.Instrumentation: void addMonitor(android.app.Instrumentation$ActivityMonitor)>','<com.android.server.MountService: void <clinit>()>','<android.content.ContentQueryMap: void close()>','<android.media.MediaRouter$RouteInfo: void <init>(android.media.MediaRouter$RouteCategory)>','<android.view.View: void setTranslationY(float)>','<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>','<android.app.IAlarmManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.View$BaseSavedState: void <clinit>()>','<android.widget.TextView$2: void <init>(android.widget.TextView)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>','<com.android.server.pm.PackageVerificationState: boolean isVerificationComplete()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$2: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>','<com.android.server.am.ActivityManagerService$12: void run()>','<android.widget.TextView: void setTextSize(int,float)>','<android.app.Instrumentation$ActivityResult: int getResultCode()>','<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>','<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>','<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>','<com.android.server.am.ActivityManagerService: void access$200(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>','<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()>','<android.widget.ListView: void setItemsCanFocus(boolean)>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>','<android.appwidget.AppWidgetHostView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.app.LoaderManagerImpl$LoaderInfo: void reportStart()>','<android.view.ViewStub: void setLayoutResource(int)>','<android.net.sip.SimpleSessionDescription: void setAddress(java.lang.String)>','<android.content.res.Resources: java.lang.String getString(int)>','<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>','<android.provider.Telephony$Mms: void <clinit>()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2200(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handlePhoneStateChanged(java.lang.String)>','<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String getDialogTitle(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification,android.content.Context)>','<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int,boolean)>','<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.net.sip.SimpleSessionDescription$Fields: void setBandwidth(java.lang.String,int)>','<android.widget.HorizontalScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.server.AppWidgetService$ServiceConnectionProxy: void <init>(android.util.Pair,android.os.IBinder)>','<android.hardware.input.IInputDevicesChangedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.media.RemoteControlClient: void setPlaybackState(int)>','<android.content.pm.ParceledListSlice$1: android.content.pm.ParceledListSlice[] newArray(int)>','<android.appwidget.AppWidgetProviderInfo$1: android.appwidget.AppWidgetProviderInfo createFromParcel(android.os.Parcel)>','<android.widget.TextView: void setMarqueeRepeatLimit(int)>','<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$002(android.graphics.drawable.LevelListDrawable$LevelListState,int[])>','<android.app.ActivityThread: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)>','<android.view.View: boolean canScrollHorizontally(int)>','<com.android.internal.logging.AndroidHandler: void close()>','<android.webkit.HTML5VideoView: void setOnPreparedListener(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.widget.LockPatternView: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>','<android.text.Layout: int getLineVisibleEnd(int)>','<com.android.server.sip.SipSessionGroup: void processResponse(javax.sip.ResponseEvent)>','<android.webkit.WebViewClassic: boolean access$5000(android.webkit.WebViewClassic)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>','<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>','<android.hardware.SystemSensorManager$SensorThread$SensorThreadRunnable: void <init>(android.hardware.SystemSensorManager$SensorThread)>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(int,java.lang.String)>','<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()>','<android.net.wifi.WifiStateMachine$DisconnectedState: void enter()>','<android.net.wifi.WifiStateMachine: void access$9800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: com.android.server.usb.UsbSettingsManager$DeviceFilter read(org.xmlpull.v1.XmlPullParser)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>','<android.renderscript.RenderScript: int nScriptCCreate(java.lang.String,java.lang.String,byte[],int)>','<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>','<android.view.KeyCharacterMap: int get(int,int)>','<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>','<android.accounts.AccountManagerResponse: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothService: java.lang.String getProperty(java.lang.String,boolean)>','<android.provider.BrowserContract$Settings: void setSyncEnabled(android.content.Context,boolean)>','<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>','<android.webkit.WebViewClassic: void setSelection(int,int)>','<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.usb.UsbHostManager$1: void <init>(com.android.server.usb.UsbHostManager)>','<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.webkit.ZoomManager: boolean zoomIn()>','<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRinging()>','<com.android.internal.os.RuntimeInit$1: void <init>()>','<android.nfc.NdefRecord: java.lang.String validateTnf(short,byte[],byte[],byte[])>','<android.provider.ContactsContract$Groups: void <clinit>()>','<android.util.SparseLongArray: void clear()>','<android.os.IHardwareService$Stub$Proxy: void setFlashlightEnabled(boolean)>','<com.android.server.usb.UsbSettingsManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String)>','<android.view.ViewDebug: void stopHierarchyTracing()>','<android.view.View: void onResolvedTextAlignmentChanged()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void <init>(com.android.server.sip.SipService,com.android.server.sip.SipService$1)>','<android.widget.ListView: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>','<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void dispose(android.os.Handler)>','<com.android.internal.app.AlertController: android.widget.Button access$000(com.android.internal.app.AlertController)>','<android.graphics.Path: int ni()>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCall getBackgroundCall()>','<android.database.AbstractCursor: void deactivate()>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()>','<android.media.AudioService: int getValueForVibrateSetting(int,int,int)>','<android.preference.PreferenceGroup: void addItemFromInflater(java.lang.Object)>','<android.widget.Editor$PositionListener: int getPositionY()>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: boolean checkExternalFreeStorage(android.net.Uri,boolean)>','<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>','<com.android.server.InputMethodManagerService$3: void onReceive(android.content.Context,android.content.Intent)>','<android.location.Location: double getLongitude()>','<android.webkit.ViewManager: void access$000(android.webkit.ViewManager,android.webkit.ViewManager$ChildView)>','<android.content.pm.IPackageManager$Stub$Proxy: void performBootDexOpt()>','<com.android.internal.view.BaseIWindow: void dispatchAppVisibility(boolean)>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>','<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.VolumePanel: void access$100(android.view.VolumePanel)>','<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>','<com.android.server.am.ProcessRecord: java.lang.String toString()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$1: java.util.Iterator iterator()>','<android.app.INotificationManager$Stub: android.app.INotificationManager asInterface(android.os.IBinder)>','<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>','<com.android.server.wm.Session: void <init>(com.android.server.wm.WindowManagerService,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>','<com.android.internal.widget.EditableInputConnection: boolean commitText(java.lang.CharSequence,int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getFormat()>','<android.view.GLES20Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>','<com.android.internal.policy.impl.PhoneWindowManager: android.content.Intent createHomeDockIntent()>','<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode: boolean shouldShowStatusLines()>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>','<android.net.wifi.WifiStateMachine: boolean syncDisableNetwork(com.android.internal.util.AsyncChannel,int)>','<android.app.ActionBar: void <init>()>','<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>','<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>','<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>','<com.android.server.pm.Settings: void readStoppedLPw()>','<android.widget.TextView$Marquee: boolean isStopped()>','<android.opengl.GLLogWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>','<android.widget.AdapterViewAnimator$SavedState: java.lang.String toString()>','<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>','<android.net.sip.SimpleSessionDescription$Media: int getBandwidth(java.lang.String)>','<android.net.LocalSocketImpl: void accept(android.net.LocalSocketImpl)>','<android.webkit.WebViewCore$GeolocationPermissionsData: void <init>()>','<android.net.NetworkStatsHistory: void dump(com.android.internal.util.IndentingPrintWriter,boolean)>','<android.net.wifi.WifiConfiguration: java.lang.String toString()>','<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()>','<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()>','<android.hardware.Sensor: void setRange(float,float)>','<com.android.internal.telephony.cat.CatCmdMessage$1: com.android.internal.telephony.cat.CatCmdMessage[] newArray(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationRepeat(android.animation.Animator)>','<com.android.server.NsdService$ClientInfo: com.android.internal.util.AsyncChannel access$2700(com.android.server.NsdService$ClientInfo)>','<com.android.server.NotificationManagerService$ToastRecord: java.lang.String toString()>','<android.filterpacks.base.FrameSource: void performProcess(android.filterfw.core.FilterContext)>','<android.opengl.GLLogWrapper: void glFrustumf(float,float,float,float,float,float)>','<android.net.LinkAddress: int getNetworkPrefixLength()>','<android.hardware.Camera$Parameters: void setAutoExposureLock(boolean)>','<android.text.method.DialerKeyListener: int getInputType()>','<android.widget.Editor$SuggestionsPopupWindow: boolean isShowingUp()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long)>','<android.widget.ArrayAdapter: void addAll(java.lang.Object[])>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getId()>','<android.webkit.WebViewCore: void access$2800(android.webkit.WebViewCore,int)>','<android.view.ViewPropertyAnimator: long getDuration()>','<android.content.res.AssetManager: void access$400(android.content.res.AssetManager,int)>','<com.android.server.pm.PackageSettingBase: void setInstallStatus(int)>','<com.android.server.am.ActivityManagerService$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName)>','<com.android.internal.telephony.cdma.CdmaInformationRecords: void <init>(android.os.Parcel)>','<com.android.internal.widget.LockPatternView: void enableInput()>','<android.view.GLES20DisplayList: void setTranslationX(float)>','<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>','<com.android.vcard.VCardComposer: java.lang.String getErrorReason()>','<android.net.Uri$StringUri: java.lang.String toString()>','<com.android.internal.telephony.PhoneBase: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceId()>','<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtain(int,int,int,int)>','<com.android.server.TelephonyRegistry: void notifyOtaspChanged(int)>','<com.android.internal.telephony.RIL: void setTTYMode(int,android.os.Message)>','<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>','<android.telephony.SmsCbEtwsInfo: int describeContents()>','<android.webkit.WebViewClassic$FocusTransitionDrawable: int getOpacity()>','<android.net.nsd.NsdManager: void setEnabled(boolean)>','<android.view.View: boolean canResolveTextDirection()>','<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()>','<android.webkit.WebSettingsClassic: void setAllowFileAccess(boolean)>','<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>','<com.android.internal.telephony.IccPhoneBookInterfaceManager$1: void handleMessage(android.os.Message)>','<android.webkit.WebViewClassic$2: void onCancel(android.content.DialogInterface)>','<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)>','<android.inputmethodservice.ExtractEditLayout$1: void <init>(android.inputmethodservice.ExtractEditLayout)>','<com.android.uiautomator.core.InteractionController$3: void <init>(com.android.uiautomator.core.InteractionController,int,int,int,int,int)>','<android.widget.HorizontalScrollView: boolean pageScroll(int)>','<android.view.View$AttachInfo: void <init>(android.view.IWindowSession,android.view.IWindow,android.view.ViewRootImpl,android.os.Handler,android.view.View$AttachInfo$Callbacks)>','<com.android.server.ConnectivityService$1: void <init>(com.android.server.ConnectivityService)>','<android.widget.RemoteViews$SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>','<android.net.wifi.WifiStateMachine$DriverUnloadedState: boolean processMessage(android.os.Message)>','<com.android.server.wm.WindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,int,boolean)>','<com.android.internal.os.LoggingPrintStream: void print(double)>','<android.preference.Preference: android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()>','<android.net.wifi.WifiStateMachine: void access$10400(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.gsm.GsmCall: void <init>(com.android.internal.telephony.gsm.GsmCallTracker)>','<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)>','<com.android.server.wm.ScreenRotationAnimation: boolean setRotation(int,android.view.SurfaceSession,long,float,int,int)>','<android.view.inputmethod.EditorInfo: void <init>()>','<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List,boolean)>','<com.android.internal.telephony.DataConnectionAc: java.lang.String cmdToString(int)>','<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)>','<com.android.server.MountService: android.os.Parcelable[] getVolumeList()>','<com.android.internal.telephony.PhoneProxy: boolean isMinInfoReady()>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: void onBindMethod(com.android.internal.view.InputBindResult)>','<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>','<android.filterfw.core.FinalPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>','<android.animation.ValueAnimator: long getDuration()>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo access$300(android.bluetooth.BluetoothTetheringDataTracker)>','<android.webkit.WebViewClassic$Factory: java.lang.String findAddress(java.lang.String)>','<com.android.internal.telephony.cat.ToneSettings: void <clinit>()>','<android.net.DummyDataStateTracker: void privateDnsRouteSet(boolean)>','<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>','<com.android.server.EventLogTags: void writeBatteryStatus(int,int,int,int,java.lang.String)>','<com.android.vcard.VCardComposer: boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String)>','<android.view.View$TransformationInfo: android.graphics.Camera access$1502(android.view.View$TransformationInfo,android.graphics.Camera)>','<android.widget.ExpandableListView$SavedState: void <init>(android.os.Parcelable,java.util.ArrayList)>','<android.app.ApplicationThreadProxy: void scheduleConfigurationChanged(android.content.res.Configuration)>','<com.android.server.pm.ShutdownThread$CloseDialogReceiver: void onDismiss(android.content.DialogInterface)>','<android.webkit.WebViewInputDispatcher$UiHandler: void handleMessage(android.os.Message)>','<android.hardware.ISerialManager$Stub: android.os.IBinder asBinder()>','<android.net.sip.SipSession: java.lang.String getCallId()>','<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()>','<com.android.internal.telephony.RIL: void queryCdmaRoamingPreference(android.os.Message)>','<com.android.server.ShutdownActivity: void onCreate(android.os.Bundle)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothEventLoop access$2500(android.server.BluetoothAdapterStateMachine)>','<com.android.internal.statusbar.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>','<com.android.server.net.NetworkStatsCollection: boolean isEmpty()>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>','<android.media.MediaRouter$RouteInfo: void setTag(java.lang.Object)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$200(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>','<com.android.internal.util.ArrayUtils: void <clinit>()>','<android.widget.AbsListView: void setVisibleRangeHint(int,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void saveClirSetting(int)>','<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>','<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>','<android.preference.Preference: void setIcon(int)>','<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>','<android.location.Location: void setAccuracy(float)>','<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceInPackage(int,android.content.Intent,java.lang.String)>','<android.widget.AbsListView: int getCheckedItemPosition()>','<android.opengl.GLLogWrapper: void glGenTextures(int,java.nio.IntBuffer)>','<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$SipCall,android.net.sip.SipProfile,java.lang.String)>','<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()>','<android.view.InputDevice: boolean isFullKeyboard()>','<android.content.pm.FeatureInfo: int describeContents()>','<com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction: com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction[] values()>','<android.database.CursorWindow: double getDouble(int,int)>','<android.net.sip.SipAudioCall: int access$1000(android.net.sip.SipAudioCall)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isNANPACountry(java.lang.String)>','<com.android.internal.os.ProcessStats$1: int compare(com.android.internal.os.ProcessStats$Stats,com.android.internal.os.ProcessStats$Stats)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: com.android.internal.util.State getState()>','<android.os.Debug: int setAllocationLimit(int)>','<android.view.HardwareRenderer: boolean isAvailable()>','<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)>','<android.app.FragmentManagerImpl$1: void <init>(android.app.FragmentManagerImpl)>','<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$1)>','<android.widget.RemoteViews$SetOnClickFillInIntent$1: void onClick(android.view.View)>','<android.webkit.HTML5VideoView: void start()>','<com.android.server.PowerManagerService$7: void <init>(com.android.server.PowerManagerService)>','<com.android.internal.util.FastMath: void <init>()>','<com.android.server.am.ActivityStack: void scheduleIdleLocked()>','<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.preference.Preference$BaseSavedState$1: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: void finalize()>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void draw(android.graphics.Canvas)>','<android.text.style.SuperscriptSpan: int getSpanTypeId()>','<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<android.webkit.L10nUtils: void <init>()>','<com.android.server.am.ActivityManagerService: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.app.ActivityThread$2: void onTrimMemory(int)>','<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.LinkCapabilities)>','<com.android.internal.telephony.RIL: void queryAvailableBandMode(android.os.Message)>','<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>','<android.bluetooth.BluetoothDeviceProfileState: void access$11200(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>','<android.webkit.WebStorage$Origin: void <init>(java.lang.String,long,long)>','<com.android.server.AlarmManagerService: int access$000(com.android.server.AlarmManagerService)>','<android.hardware.usb.IUsbManager$Stub: android.hardware.usb.IUsbManager asInterface(android.os.IBinder)>','<android.media.MediaRouter$UserRouteInfo: void requestSetVolume(int)>','<android.webkit.WebViewClassic$DestroyNativeRunnable: void <init>(int)>','<com.android.server.Watchdog: void run()>','<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>','<android.net.Uri$Builder: android.net.Uri$Builder encodedOpaquePart(java.lang.String)>','<android.widget.AbsSeekBar: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.internal.os.LoggingPrintStream: void println()>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.PatternUnlockScreen$FooterMode: com.android.internal.policy.impl.PatternUnlockScreen$FooterMode valueOf(java.lang.String)>','<android.app.WallpaperManager: void clear()>','<com.android.internal.telephony.RIL: void writeSmsToRuim(int,java.lang.String,android.os.Message)>','<android.bluetooth.BluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.widget.Editor$InsertionHandleView: void onDetached()>','<android.widget.TextView: void setAutoLinkMask(int)>','<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnNumber()>','<android.view.ViewConfiguration: int getWindowTouchSlop()>','<android.app.PendingIntent: void send(int)>','<android.os.Debug: void stopAllocCounting()>','<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getQueryActionMsg()>','<com.android.server.AlarmManagerService: java.util.HashMap access$2000(com.android.server.AlarmManagerService)>','<com.android.server.Watchdog: void rebootSystem(java.lang.String)>','<android.widget.TextView: void setMaxWidth(int)>','<android.webkit.WebViewCore$MotionUpData: void <init>()>','<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>','<android.net.NetworkState: void <init>(android.os.Parcel)>','<android.graphics.Bitmap: void setLayoutBounds(int[])>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputLocked(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>','<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>','<android.os.StrictMode$5: void <init>()>','<android.location.Criteria: int access$202(android.location.Criteria,int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void access$1100(com.android.internal.policy.impl.KeyguardStatusViewManager,int)>','<android.widget.ScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.os.FileObserver$ObserverThread: void onEvent(int,int,java.lang.String)>','<com.android.server.am.ActivityManagerService$14: int compare(com.android.server.am.ActivityManagerService$MemItem,com.android.server.am.ActivityManagerService$MemItem)>','<com.android.internal.widget.PointerLocationView: void <init>(android.content.Context)>','<android.app.INotificationManager$Stub$Proxy: void cancelNotificationWithTag(java.lang.String,java.lang.String,int)>','<android.widget.Editor: void stopSelectionActionMode()>','<com.android.internal.telephony.gsm.GsmCallTracker: void conference()>','<android.view.View: void setVisibility(int)>','<android.view.ViewRootImpl$RunQueue: void removeCallbacks(java.lang.Runnable)>','<com.android.internal.os.BatteryStatsImpl$Counter: int getCountLocked(int)>','<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isViablePhoneNumber(java.lang.String)>','<android.widget.ProgressBar: void access$100(android.widget.ProgressBar,int,int,boolean,boolean)>','<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>','<android.media.AudioService$VolumeStreamState: void applyAllVolumes()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>','<android.widget.Spinner: java.lang.CharSequence getPrompt()>','<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>','<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>','<com.android.internal.widget.WaveView: int access$700(com.android.internal.widget.WaveView)>','<android.text.method.CharacterPickerDialog$OptionsAdapter: int getCount()>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>','<android.net.wifi.WifiNative: boolean p2pStopFind()>','<android.view.IApplicationToken$Stub$Proxy: void <init>(android.os.IBinder)>','<android.hardware.usb.UsbDevice$1: android.hardware.usb.UsbDevice[] newArray(int)>','<android.webkit.WebBackForwardList: void setCurrentIndex(int)>','<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.net.wifi.WifiStateMachine: boolean access$7800(android.net.wifi.WifiStateMachine)>','<android.hardware.input.IInputManager$Stub: android.hardware.input.IInputManager asInterface(android.os.IBinder)>','<android.app.Notification$Action: int describeContents()>','<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>','<android.media.RemoteControlClient: void access$900(android.media.RemoteControlClient)>','<com.android.vcard.VCardConfig: boolean isDoCoMo(int)>','<android.server.BluetoothHealthProfileHandler: java.util.HashMap access$600(android.server.BluetoothHealthProfileHandler)>','<com.android.ex.variablespeed.EngineParameters: int getAudioStreamType()>','<android.view.View$8: void setValue(java.lang.Object,float)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: boolean isPlaying(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void conference()>','<android.app.backup.BackupDataInput: java.lang.String getKey()>','<android.view.ViewRootImpl$W: void windowFocusChanged(boolean,boolean)>','<com.android.server.IntentResolver$1: int compare(java.lang.Object,java.lang.Object)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void <init>(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1)>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void logd(java.lang.String)>','<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>','<android.text.method.TextKeyListener: void release()>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>','<com.android.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>','<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>','<android.app.ApplicationErrorReport$RunningServiceInfo: void <init>()>','<android.text.method.ArrowKeyMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>','<android.provider.Settings$Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)>','<android.renderscript.Sampler$Value: android.renderscript.Sampler$Value valueOf(java.lang.String)>','<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsUid(int)>','<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: void startUpdate()>','<android.webkit.WebViewClassic: int access$4202(android.webkit.WebViewClassic,int)>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal: void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1)>','<android.content.res.XmlBlock$Parser: int getDepth()>','<android.widget.Scroller: float getCurrVelocity()>','<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>','<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>','<android.view.GLES20DisplayList: void offsetTopBottom(int)>','<android.webkit.WebSettingsClassic: java.lang.String getSerifFontFamily()>','<android.webkit.HTML5VideoFullScreen: void showControllerInFullScreen()>','<android.net.wifi.WifiStateMachine: boolean access$1102(android.net.wifi.WifiStateMachine,boolean)>','<android.net.wifi.IWifiManager$Stub$Proxy: void disconnect()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,boolean)>','<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>','<com.android.server.EventLogTags: void writeNetstatsWifiSample(long,long,long,long,long,long,long,long,long,long,long,long,long)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getPhoneName()>','<android.net.Uri$PathSegments: java.lang.String get(int)>','<com.android.server.WifiService: com.android.internal.util.AsyncChannel access$702(com.android.server.WifiService,com.android.internal.util.AsyncChannel)>','<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>','<android.bluetooth.IBluetoothCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.GLES20Layer: void destroy()>','<com.android.server.PowerManagerService: void setBacklightBrightness(int)>','<android.webkit.WebViewClassic$4: void <init>(android.webkit.WebViewClassic,android.os.Message)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void bindInput(android.view.inputmethod.InputBinding)>','<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>','<android.inputmethodservice.ExtractEditLayout: void <init>(android.content.Context)>','<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Dialog: void onAttachedToWindow()>','<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>','<android.opengl.GLLogWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: int getLastError()>','<com.android.internal.os.RuntimeInit$UncaughtHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>','<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>','<android.app.SearchDialog: boolean onTouchEvent(android.view.MotionEvent)>','<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: boolean isSelected()>','<com.android.internal.telephony.PhoneBase: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>','<android.net.DummyDataStateTracker: boolean isDefaultRouteSet()>','<com.android.internal.os.BatteryStatsImpl$Counter: void writeSummaryFromParcelLocked(android.os.Parcel)>','<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isCancelable()>','<android.webkit.WebSettings: void setNavDump(boolean)>','<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>','<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>','<android.text.format.DateUtils: java.lang.String getStandaloneMonthString(int,int)>','<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()>','<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>','<android.widget.Switch: void onDraw(android.graphics.Canvas)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>','<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.net.LinkProperties: void <init>()>','<android.server.BluetoothService: boolean isDiscovering()>','<android.filterfw.core.SimpleFrame: void setGenericObjectValue(java.lang.Object)>','<android.net.DhcpInfoInternal: android.net.DhcpInfo makeDhcpInfo()>','<android.renderscript.Sampler: float getAnisotropy()>','<android.app.ContextImpl$4: void <init>()>','<android.media.IAudioService$Stub$Proxy: boolean isBluetoothA2dpOn()>','<android.media.AudioManager: java.lang.Object access$000(android.media.AudioManager)>','<android.os.Bundle: short getShort(java.lang.String,short)>','<android.app.ActivityThread$AppBindData: void <init>()>','<com.android.internal.os.SamplingProfilerIntegration: boolean isEnabled()>','<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>','<android.widget.AdapterView: void <init>(android.content.Context)>','<android.widget.RemoteViews$BitmapReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getExtension()>','<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>','<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>','<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMessageWaiting(int,int)>','<com.android.internal.telephony.IccCardStatus: int getGsmUmtsSubscriptionAppIndex()>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$2: void onClick(android.content.DialogInterface,int)>','<android.os.ZygoteStartFailedEx: void <init>()>','<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.util.LogWriter: void <init>(int,java.lang.String)>','<android.webkit.WebStorageClassic: void access$500(android.webkit.WebStorageClassic,android.os.Message)>','<com.android.internal.widget.multiwaveview.Tweener: void access$000(android.animation.Animator)>','<android.hardware.SerialManager: java.lang.String[] getSerialPorts()>','<com.android.internal.telephony.RetryManager: void resetRetryCount()>','<android.widget.ZoomButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.cdma.sms.BearerData$Gsm7bitCodingResult: void <init>(com.android.internal.telephony.cdma.sms.BearerData$1)>','<android.telephony.ServiceState: boolean isGsm(int)>','<android.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)>','<android.media.AudioService: int access$3600(android.media.AudioService)>','<android.app.ActivityThread$ApplicationThread: void setCoreSettings(android.os.Bundle)>','<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()>','<android.text.method.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>','<android.net.NetworkStats: android.net.NetworkStats clone()>','<com.android.internal.app.AlertController: android.widget.ListView access$1402(com.android.internal.app.AlertController,android.widget.ListView)>','<android.view.VelocityTracker: void <clinit>()>','<android.content.res.XmlBlock$Parser: void defineEntityReplacementText(java.lang.String,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$1702(android.bluetooth.BluetoothDeviceProfileState,boolean)>','<android.view.ViewGroup: int getChildDrawingOrder(int,int)>','<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int)>','<com.android.server.wm.WindowManagerService: void pauseRotationLocked()>','<android.app.LoadedApk$ServiceDispatcher$InnerConnection: void connected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.pm.Settings$1: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>','<android.webkit.WebSettingsClassic: boolean getShowVisualIndicator()>','<android.view.View: boolean isSoundEffectsEnabled()>','<com.android.server.AppWidgetServiceImpl: void loadAppWidgetList()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void unplug(long,long)>','<android.bluetooth.BluetoothDeviceProfileState: void access$10700(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.hardware.usb.UsbDeviceConnection: boolean releaseInterface(android.hardware.usb.UsbInterface)>','<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)>','<com.android.server.StatusBarManagerService$DisableRecord: void <init>(com.android.server.StatusBarManagerService,com.android.server.StatusBarManagerService$1)>','<android.graphics.Paint: void <clinit>()>','<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>','<android.webkit.WebViewCore$4: void <init>(android.webkit.WebViewCore)>','<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()>','<android.content.pm.ManifestDigest: int hashCode()>','<android.content.ClipData: int describeContents()>','<com.android.internal.util.XmlUtils: java.util.HashSet readSetXml(java.io.InputStream)>','<com.android.server.location.PassiveProvider: long getStatusUpdateTime()>','<android.view.IRotationWatcher$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.ContentProviderOperation$1: android.content.ContentProviderOperation[] newArray(int)>','<android.inputmethodservice.InputMethodService: void updateExtractFrameVisibility()>','<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>','<com.android.internal.telephony.DataConnection$1: void <clinit>()>','<com.android.internal.os.LoggingPrintStream: void write(byte[],int,int)>','<android.media.AudioService: void setBluetoothScoOn(boolean)>','<com.android.internal.view.menu.ActionMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>','<android.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)>','<android.server.BluetoothEventLoop$2: void <init>(android.server.BluetoothEventLoop)>','<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>','<com.android.vcard.VCardParserImpl_V30: java.lang.String unescapeText(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void setUnitTestMode(boolean)>','<android.graphics.Path: void toggleInverseFillType()>','<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>','<android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext: void <init>(javax.microedition.khronos.egl.EGLContext)>','<com.android.internal.os.LoggingPrintStream$1: void <init>()>','<android.opengl.GLLogWrapper: void glCurrentPaletteMatrixOES(int)>','<android.location.LocationManager$GpsStatusListenerTransport: void <init>(android.location.LocationManager,android.location.GpsStatus$NmeaListener)>','<com.android.internal.util.FastXmlSerializer: void endDocument()>','<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()>','<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>','<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>','<android.net.wifi.WifiNative: boolean connectToSupplicant()>','<com.android.internal.textservice.ITextServicesSessionListener$Stub: com.android.internal.textservice.ITextServicesSessionListener asInterface(android.os.IBinder)>','<android.view.ViewDebug$2: void run(java.lang.Object[])>','<android.content.res.StringBlock$StyleIDs: int access$1002(android.content.res.StringBlock$StyleIDs,int)>','<android.net.DhcpStateMachine: void access$2300(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>','<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>','<android.app.IActivityManager$WaitResult$1: void <init>()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimEprlLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.text.style.StyleSpan: void <init>(android.os.Parcel)>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailNumber()>','<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean)>','<com.android.internal.content.PackageHelper: boolean destroySdDir(java.lang.String)>','<com.android.internal.telephony.RIL: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>','<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>','<android.content.ISyncContext$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiStateMachine: void access$2200(android.net.wifi.WifiStateMachine,int)>','<android.content.IntentFilter: int describeContents()>','<android.os.TokenWatcher: boolean isAcquired()>','<android.widget.ExpandableListView$SavedState$1: void <init>()>','<com.android.internal.os.BatteryStatsImpl: void stopAllSignalStrengthTimersLocked(int)>','<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>','<android.content.res.Resources: void finishPreloading()>','<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>','<android.widget.RemoteViewsAdapter: boolean handleMessage(android.os.Message)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiOn()>','<android.text.StaticLayout: int getLineStart(int)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopWakeLocked(int,java.lang.String,int)>','<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>','<com.android.internal.telephony.cat.CatLog: void d(java.lang.String,java.lang.String)>','<android.net.DummyDataStateTracker: boolean setRadio(boolean)>','<android.app.ContextImpl$4: java.lang.Object createService(android.app.ContextImpl)>','<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByViewId(int,long,int)>','<com.android.internal.policy.impl.GlobalActions$1: void <init>(com.android.internal.policy.impl.GlobalActions,int,int,int,int,int)>','<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)>','<com.android.internal.policy.impl.SimPukUnlockScreen: android.widget.TextView access$500(com.android.internal.policy.impl.SimPukUnlockScreen)>','<android.webkit.CookieManagerClassic: void setAcceptFileSchemeCookiesImpl(boolean)>','<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>','<android.view.textservice.SuggestionsInfo: int describeContents()>','<android.net.INetworkStatsService$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)>','<android.widget.ImageView: boolean getAdjustViewBounds()>','<com.android.server.am.PendingIntentRecord: void finalize()>','<android.app.ContextImpl: void init(android.content.res.Resources,android.app.ActivityThread)>','<android.widget.Switch: void <clinit>()>','<android.view.ViewRootImpl: void dumpGfxInfo(int[])>','<android.content.res.StringBlock$StyleIDs: int access$402(android.content.res.StringBlock$StyleIDs,int)>','<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>','<android.hardware.Sensor: void <init>()>','<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>','<android.view.MotionEvent: float getOrientation()>','<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>','<android.os.StrictMode$ViolationInfo: void dump(android.util.Printer,java.lang.String)>','<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaEriText()>','<android.net.nsd.NsdManager: java.util.concurrent.CountDownLatch access$200(android.net.nsd.NsdManager)>','<android.webkit.GeolocationPermissionsClassic: void access$100(android.webkit.GeolocationPermissionsClassic,android.os.Message)>','<android.webkit.WebSettingsClassic: boolean supportMultipleWindows()>','<com.android.server.PowerManagerService: com.android.server.LightsService$Light access$4800(com.android.server.PowerManagerService)>','<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>','<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)>','<android.content.ContextWrapper: android.content.Context getApplicationContext()>','<android.webkit.WebViewClassic: void access$200(android.webkit.WebViewClassic)>','<com.android.internal.telephony.cdma.CDMAPhone: void getEnhancedVoicePrivacy(android.os.Message)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int describeContents()>','<android.filterfw.core.OutputPort: java.lang.String toString()>','<android.database.AbstractCursor: java.lang.String getColumnName(int)>','<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.SignalStrength getSignalStrength()>','<android.webkit.WebSettingsClassic: void setRenderPriority(android.webkit.WebSettings$RenderPriority)>','<android.os.MemoryFile$MemoryInputStream: void mark(int)>','<android.inputmethodservice.Keyboard: int getMinWidth()>','<android.os.INetworkManagementService$Stub$Proxy: void enableNat(java.lang.String,java.lang.String)>','<android.os.Parcel: int[] createIntArray()>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setScaleY(float)>','<android.media.AudioService: void unregisterAudioFocusClient(java.lang.String)>','<android.view.KeyEvent: int getScanCode()>','<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt)>','<com.android.server.net.NetworkPolicyManagerService: java.util.HashSet access$1700(com.android.server.net.NetworkPolicyManagerService)>','<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>','<android.server.BluetoothAdapterStateMachine: void access$3000(android.server.BluetoothAdapterStateMachine)>','<com.android.server.ConnectivityService$SettingsObserver: void <init>(android.os.Handler,int)>','<android.app.Dialog: void dispatchOnCreate(android.os.Bundle)>','<android.telephony.SmsCbCmasInfo: void writeToParcel(android.os.Parcel,int)>','<android.webkit.ZoomManager: void init(float)>','<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: boolean process(java.util.EventObject)>','<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>','<android.content.ContentProviderOperation$Builder: android.net.Uri access$100(android.content.ContentProviderOperation$Builder)>','<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript$RSMessageHandler)>','<android.net.http.RequestQueue: void access$300(android.net.http.RequestQueue)>','<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>','<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>','<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean access$1800(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getDomesticCarrierCodeFormattingRule()>','<android.webkit.WebSettingsClassic$EventHandler$1: void <init>(android.webkit.WebSettingsClassic$EventHandler)>','<com.android.internal.telephony.CallManager: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>','<android.os.DropBoxManager$Entry$1: android.os.DropBoxManager$Entry[] newArray(int)>','<android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>','<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)>','<android.security.IKeyChainAliasCallback$Stub$Proxy: void alias(java.lang.String)>','<com.android.internal.widget.LockPatternUtils: int computePasswordQuality(java.lang.String)>','<android.app.SearchDialog: void <init>(android.content.Context,android.app.SearchManager)>','<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>','<android.app.Instrumentation: android.content.ComponentName getComponentName()>','<com.android.server.pm.PendingPackage: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int,int)>','<android.os.IVibratorService$Stub$Proxy: boolean hasVibrator()>','<android.text.util.Linkify$3: void <init>()>','<android.view.IWindowSession$Stub$Proxy: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAttribute(java.lang.String)>','<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>','<android.webkit.PluginManager: java.lang.String getPluginsAPKName(java.lang.String)>','<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType[] values()>','<android.text.Layout: boolean isRtlCharAt(int)>','<android.net.MobileDataStateTracker: void setDependencyMet(boolean)>','<android.view.ScaleGestureDetector$SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>','<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean moveInputMethodWindowsIfNeededLocked(boolean)>','<android.app.ActivityGroup: void onCreate(android.os.Bundle)>','<android.opengl.ManagedEGLContext: void execTerminate()>','<com.android.internal.telephony.IPhoneStateListener$Stub: void <init>()>','<android.location.ILocationProvider$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.cdma.RuimRecords: void finalize()>','<android.net.sip.SimpleSessionDescription$Fields: void access$200(android.net.sip.SimpleSessionDescription$Fields,java.lang.StringBuilder)>','<com.android.internal.util.MemInfoReader: void readMemInfo()>','<android.view.View: int getBaseline()>','<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.app.ActivityManager$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.View$AttachInfo$InvalidateInfo$1: void onReleased(android.view.View$AttachInfo$InvalidateInfo)>','<com.android.internal.telephony.cdma.CdmaMmiCode: boolean isUssdRequest()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getStorageEncryption(android.content.ComponentName)>','<android.widget.ZoomButtonsController: void <clinit>()>','<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>','<android.view.HardwareRenderer$GlRenderer: boolean initialize(android.view.SurfaceHolder)>','<com.android.internal.widget.multiwaveview.GlowPadView: void resumeAnimations()>','<android.webkit.KeyStoreHandler: void <init>(java.lang.String)>','<android.media.MediaRouter$RouteInfo: int getPlaybackType()>','<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>','<com.android.internal.policy.impl.GlobalActions$SilentModeToggleAction: void onToggle(boolean)>','<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>','<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)>','<com.android.internal.widget.SlidingTab$Slider: void hide()>','<android.view.View: void onCloseSystemDialogs(java.lang.String)>','<android.net.wifi.WifiApConfigStore: android.os.Messenger getMessenger()>','<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$1: void <init>(com.android.internal.telephony.gsm.GsmServiceStateTracker)>','<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>','<android.media.AudioRoutesInfo: void <init>(android.media.AudioRoutesInfo)>','<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>','<android.net.ConnectivityManager: void setMobileDataEnabled(boolean)>','<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName getGlobalProxyAdmin()>','<android.bluetooth.BluetoothDeviceProfileState: void access$5800(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitleOptionalHint(boolean)>','<android.content.res.XmlBlock: int access$800(int,int)>','<com.android.server.am.ActivityStack: void checkReadyForSleepLocked()>','<android.content.SyncManager$5: void onReceive(android.content.Context,android.content.Intent)>','<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>','<android.view.InputDevice: int getGeneration()>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)>','<android.content.Intent: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)>','<android.view.FocusFinder: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>','<android.os.Bundle: void putIBinder(java.lang.String,android.os.IBinder)>','<android.database.sqlite.SQLiteConnection: void close()>','<android.text.format.Time: void set(int,int,int)>','<com.android.internal.policy.impl.AccountUnlockScreen$2: void <init>(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.app.DownloadManager$Query: android.app.DownloadManager$Query orderBy(java.lang.String,int)>','<android.view.animation.RotateAnimation: void <init>(float,float)>','<com.android.server.connectivity.Vpn: void access$600(com.android.server.connectivity.Vpn,com.android.internal.net.VpnConfig,java.lang.String,android.graphics.Bitmap)>','<android.widget.Editor$SelectionStartHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.os.Parcel: boolean hasFileDescriptors()>','<com.android.server.wm.WindowState: boolean hideLw(boolean,boolean)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneSignalStrength(android.telephony.SignalStrength)>','<android.content.pm.RegisteredServicesCache: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.pm.XmlSerializerAndParser)>','<android.nfc.Tag: void writeBytesWithNull(android.os.Parcel,byte[])>','<android.opengl.GLLogWrapper: void glPushMatrix()>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$6700(android.bluetooth.BluetoothDeviceProfileState,int,boolean)>','<android.view.View$BaseSavedState$1: android.view.View$BaseSavedState createFromParcel(android.os.Parcel)>','<android.widget.TextView: float getShadowDx()>','<android.filterfw.core.OutputPort: void pushFrame(android.filterfw.core.Frame)>','<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>','<android.accounts.AccountManagerService: java.util.LinkedHashMap access$1400(android.accounts.AccountManagerService)>','<com.android.internal.policy.impl.PhoneWindowManager: void setUserRotationMode(int,int)>','<android.net.wifi.ScanResult$1: void <init>()>','<com.android.internal.telephony.gsm.GsmCall: boolean update(com.android.internal.telephony.gsm.GsmConnection,com.android.internal.telephony.DriverCall)>','<android.view.accessibility.AccessibilityRecord: boolean isSealed()>','<android.app.ContextImpl$9: void <init>()>','<android.view.View: int getHorizontalScrollbarHeight()>','<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>','<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[])>','<android.util.SynchronizedPool: void <init>(android.util.Pool)>','<android.media.MediaRouter: void <clinit>()>','<android.app.Instrumentation$ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation$ActivityResult,boolean)>','<android.app.ActivityManager$TaskThumbnails$1: android.app.ActivityManager$TaskThumbnails[] newArray(int)>','<android.server.BluetoothService$3: void <init>(android.server.BluetoothService)>','<android.webkit.ZoomManager: void keepZoomPickerVisible()>','<com.android.server.LocationManagerService: int access$2500(com.android.server.LocationManagerService)>','<android.os.Bundle: void putIntArray(java.lang.String,int[])>','<android.animation.Animator: void setTarget(java.lang.Object)>','<android.net.NetworkQuotaInfo: void <init>(android.os.Parcel)>','<android.test.IsolatedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>','<com.android.internal.telephony.cat.ComprehensionTlvTag: void <clinit>()>','<com.android.internal.policy.impl.LockPatternKeyguardView: android.os.Parcelable access$1402(com.android.internal.policy.impl.LockPatternKeyguardView,android.os.Parcelable)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<android.telephony.ServiceState: void setRoaming(boolean)>','<android.location.Location$1: void <init>()>','<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean deletePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCleanUpConnection(boolean,int,java.lang.String)>','<android.webkit.WebIconDatabaseClassic: void access$200()>','<android.view.KeyEvent: int getDeviceId()>','<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1)>','<android.content.pm.RegisteredServicesCache$1: void <init>(android.content.pm.RegisteredServicesCache)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()>','<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>','<android.speech.tts.UtteranceProgressListener$1: void onDone(java.lang.String)>','<com.android.server.wm.ScreenRotationAnimation: int deltaRotation(int,int)>','<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()>','<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>','<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiAutomatorBridge getAutomatorBridge()>','<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>','<android.widget.SeekBar: void onStartTrackingTouch()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>','<android.media.IAudioService$Stub$Proxy: void setStreamMute(int,boolean,android.os.IBinder)>','<com.android.internal.widget.DigitalClock: void <clinit>()>','<android.net.sip.SipProfile: java.lang.String access$602(android.net.sip.SipProfile,java.lang.String)>','<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>','<com.android.vcard.VCardUtils$TextUtilsPort: void <init>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8300(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState access$2000(android.net.wifi.WifiWatchdogStateMachine)>','<android.provider.Downloads$Impl: boolean isStatusInformational(int)>','<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>','<android.media.AudioService: java.util.Stack access$8300(android.media.AudioService)>','<android.view.InputEventReceiver: void dispose()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$4000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.nsd.WifiP2pServiceResponse)>','<android.widget.ZoomButtonsController: int access$400()>','<com.android.vcard.VCardParser: void <init>()>','<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>','<com.android.server.sip.SipSessionGroup: void setWakeupTimer(com.android.server.sip.SipWakeupTimer)>','<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<android.content.ClipDescription: java.lang.String toString()>','<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailNumber()>','<android.content.res.AssetFileDescriptor: void <init>(android.os.Parcel)>','<android.view.MotionEvent$PointerProperties: void copyFrom(android.view.MotionEvent$PointerProperties)>','<android.net.ProxyProperties: void <init>(java.lang.String,int,java.lang.String)>','<android.widget.SearchView: void setIconified(boolean)>','<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,int,int)>','<android.view.View: void setOnDragListener(android.view.View$OnDragListener)>','<android.widget.AutoCompleteTextView$PopupDataSetObserver: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1)>','<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>','<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>','<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1400(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.internal.telephony.IccCard$State: void <clinit>()>','<com.android.server.net.NetworkStatsRecorder: android.net.NetworkStats$Entry getTotalSinceBootLocked(android.net.NetworkTemplate)>','<android.app.IActivityManager$ContentProviderHolder$1: android.app.IActivityManager$ContentProviderHolder[] newArray(int)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: java.lang.String toString()>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()>','<android.widget.OverScroller$SplineOverScroller: void fling(int,int,int,int,int)>','<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.net.sip.ISipService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)>','<android.net.NetworkInfo: int describeContents()>','<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>','<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)>','<android.app.Dialog: void setContentView(android.view.View)>','<android.server.BluetoothHealthProfileHandler: android.server.BluetoothHealthProfileHandler getInstance(android.content.Context,android.server.BluetoothService)>','<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int)>','<com.android.internal.telephony.IccCardStatus$CardState: boolean isCardPresent()>','<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>','<android.accounts.AccountManagerService$Session: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean)>','<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState: boolean processMessage(android.os.Message)>','<android.widget.Editor: void <clinit>()>','<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()>','<android.view.GLES20Canvas: void restore()>','<android.location.Location: boolean hasBearing()>','<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>','<com.android.server.am.ActivityManagerService: void killApplicationProcess(java.lang.String,int)>','<android.app.SearchableInfo$ActionKeyInfo: int getKeyCode()>','<com.android.server.WifiService$WifiLock: void <init>(com.android.server.WifiService,int,java.lang.String,android.os.IBinder,android.os.WorkSource)>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarOverlayLayout access$600(com.android.internal.app.ActionBarImpl)>','<android.net.Proxy: void setHttpProxySystemProperty(android.net.ProxyProperties)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void setInstructionText(java.lang.String)>','<android.app.Notification$Style: void checkBuilder()>','<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>','<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>','<android.bluetooth.IBluetoothCallback$Stub$Proxy: void onRfcommChannelFound(int)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>','<android.app.Activity: void removeDialog(int)>','<android.filterfw.core.ProgramPort: void transfer(android.filterfw.core.FilterContext)>','<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)>','<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>','<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>','<android.hardware.SensorManager: float getAltitude(float,float)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$3600(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<com.android.internal.telephony.IccRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$1: void run()>','<android.graphics.RectF: int hashCode()>','<com.android.server.usb.UsbSettingsManager: void <init>(android.content.Context)>','<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>','<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)>','<android.widget.ListView: void <init>(android.content.Context)>','<com.android.internal.os.storage.ExternalStorageFormatter: void updateProgressState()>','<android.view.View$7: java.lang.Object get(java.lang.Object)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()>','<com.android.internal.telephony.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>','<android.animation.ValueAnimator$AnimationHandler: void run()>','<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>','<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>','<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>','<android.renderscript.ProgramRaster$CullMode: android.renderscript.ProgramRaster$CullMode[] values()>','<com.android.server.sip.SipSessionGroup$MakeCallCommand: int getTimeout()>','<android.webkit.WebViewClassic: void onWindowVisibilityChanged(int)>','<android.view.ViewGroup$ChildListForAccessibility: int getChildIndex(android.view.View)>','<android.app.ActivityGroup: void finishFromChild(android.app.Activity)>','<android.widget.RemoteViews$ViewGroupAction: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>','<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>','<com.android.internal.telephony.IWapPushManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.graphics.drawable.AnimatedRotateDrawable: boolean isRunning()>','<android.view.InputDevice: void <clinit>()>','<android.view.HardwareRenderer$GlRenderer: int getWidth()>','<android.bluetooth.IBluetooth$Stub$Proxy: int getBondState(java.lang.String)>','<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>','<android.app.ISearchManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiManager: java.lang.String getConfigFile()>','<com.android.server.InputMethodManagerService: java.util.ArrayList access$1800(android.view.inputmethod.InputMethodInfo)>','<android.widget.LinearLayout: void setBaselineAligned(boolean)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request addRequestHeader(java.lang.String,java.lang.String)>','<android.widget.MediaController: void access$800(android.widget.MediaController)>','<android.view.WindowManagerImpl$1: void run()>','<android.text.style.EasyEditSpan: void <init>()>','<android.database.AbstractCursor: int getColumnCount()>','<android.net.wifi.WifiStateTracker: boolean isPrivateDnsRouteSet()>','<android.view.View: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>','<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.util.Log: void <clinit>()>','<com.android.internal.widget.DrawableHolder: float getScaleX()>','<android.text.style.TextAppearanceSpan: int getSpanTypeId()>','<android.view.HardwareRenderer$GlRenderer: void updateSurface(android.view.SurfaceHolder)>','<android.app.WallpaperManager$Globals: void onWallpaperChanged()>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.PowerManagerService: void reboot(java.lang.String)>','<android.server.BluetoothBondState: int getBondState(java.lang.String)>','<android.webkit.WebViewCore: void access$600(android.webkit.WebViewCore)>','<android.net.NetworkStatsHistory$DataStreamUtils: long[] readVarLongArray(java.io.DataInputStream)>','<android.webkit.BrowserFrame: void addJavascriptInterface(java.lang.Object,java.lang.String)>','<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>','<android.app.AppGlobals: void <init>()>','<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>','<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.SignalStrength getSignalStrength()>','<android.view.Window: boolean isDestroyed()>','<android.app.ActivityManager$RunningTaskInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.net.Uri$AbstractPart: java.lang.String getDecoded()>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int)>','<android.inputmethodservice.KeyboardView: boolean isShifted()>','<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>','<android.webkit.HTML5VideoFullScreen$3: void onCustomViewHidden()>','<android.webkit.ZoomManager: void invokeZoomPicker()>','<android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus valueOf(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: boolean processMessage(android.os.Message)>','<android.net.http.Request: void addHeaders(java.util.Map)>','<android.widget.ZoomButtonsController: android.widget.ZoomButtonsController$OnZoomListener access$600(android.widget.ZoomButtonsController)>','<android.content.pm.PermissionGroupInfo: java.lang.String toString()>','<android.app.ActivityThread$H: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>','<android.net.Uri$OpaqueUri: java.lang.String getQuery()>','<android.preference.PreferenceGroup: void sortPreferences()>','<com.android.internal.widget.ActionBarView: com.android.internal.widget.ActionBarView$HomeView access$700(com.android.internal.widget.ActionBarView)>','<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>','<android.content.pm.ComponentInfo: boolean isEnabled()>','<android.webkit.CallbackProxy: void onIsSupportedCallback(boolean)>','<android.text.DynamicLayout: boolean getLineContainsTab(int)>','<android.net.Uri$1: android.net.Uri[] newArray(int)>','<android.renderscript.Element: android.renderscript.Element I8_4(android.renderscript.RenderScript)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>(com.android.server.usb.UsbDeviceManager,android.os.Looper)>','<android.webkit.FindActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>','<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>','<android.database.CursorWindow: void setStartPosition(int)>','<android.media.AudioManager: int getMasterMaxVolume()>','<android.webkit.WebViewClassic: boolean updateScrollCoordinates(int,int)>','<android.app.Instrumentation$ActivityMonitor: boolean isBlocking()>','<com.android.server.location.LocationProviderProxy: int access$900(com.android.server.location.LocationProviderProxy)>','<android.content.BroadcastReceiver$PendingResult$1: void run()>','<android.webkit.WebViewCore: void access$5400(android.webkit.WebViewCore)>','<android.media.AudioService: void access$3000(android.media.AudioService,android.os.Handler,int,int,int,java.lang.Object,int)>','<android.net.wifi.WifiStateMachine$ObtainingIpState: void enter()>','<com.android.internal.telephony.sip.SipCommandInterface: void queryAvailableBandMode(android.os.Message)>','<android.net.http.Headers: void setExpires(java.lang.String)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>','<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>','<android.opengl.GLLogWrapper: void glGenBuffers(int,java.nio.IntBuffer)>','<android.database.AbstractWindowedCursor: boolean isString(int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.content.ContentResolver access$400(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: void revokeSelf()>','<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>','<android.media.AudioManager: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.text.style.SpellCheckSpan: void <init>(android.os.Parcel)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: com.android.internal.util.State access$1500(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<com.android.internal.telephony.gsm.SIMRecords: void fetchSimRecords()>','<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>','<android.accounts.AccountManager$6: void doWork()>','<com.android.internal.statusbar.StatusBarIconList$1: com.android.internal.statusbar.StatusBarIconList createFromParcel(android.os.Parcel)>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: boolean cancel(boolean)>','<android.text.BoringLayout: void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$State getState(java.lang.String)>','<android.webkit.CookieSyncManager: void syncFromRamToFlash()>','<com.android.internal.telephony.cat.Item: void writeToParcel(android.os.Parcel,int)>','<android.net.NetworkIdentity: java.lang.String scrubSubscriberId(java.lang.String)>','<android.content.SyncOperation: boolean isExpedited()>','<android.view.MotionEvent: int getActionIndex()>','<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>','<android.view.ViewRootImpl$TrackballAxis: void reset(int)>','<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>','<android.os.Messenger: void <init>(android.os.Handler)>','<com.android.server.location.PassiveProvider: boolean supportsSpeed()>','<android.view.AccessibilityInteractionController$1: void <init>(android.view.AccessibilityInteractionController)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String[] getIsimImpu()>','<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element$DataType,android.renderscript.Element$DataKind)>','<android.net.wifi.WifiStateMachine$L2ConnectedState: void enter()>','<android.net.NetworkStatsHistory: void <init>(long)>','<android.widget.RelativeLayout$DependencyGraph: void printViewId(android.content.res.Resources,android.view.View)>','<android.webkit.OverScrollGlow: void <init>(android.webkit.WebViewClassic)>','<com.android.internal.util.AsyncChannel: void access$000(com.android.internal.util.AsyncChannel,int)>','<android.server.BluetoothService: boolean notifyIncomingHidConnection(java.lang.String)>','<android.view.InputQueue: void <init>(android.view.InputChannel)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void setCurrentFunction(java.lang.String,boolean)>','<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>','<android.view.GLES20DisplayList: int getSize()>','<android.content.pm.UserInfo: boolean isGuest()>','<android.webkit.GeolocationPermissionsClassic$1: void <init>(android.webkit.GeolocationPermissionsClassic)>','<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>','<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>','<android.widget.Spinner$DialogPopup: int getVerticalOffset()>','<android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo acquire()>','<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>','<com.android.internal.telephony.sip.SipPhone: void conference(com.android.internal.telephony.Call)>','<android.hardware.Camera: android.hardware.Camera$PreviewCallback access$300(android.hardware.Camera)>','<com.android.internal.telephony.PhoneProxy: boolean handlePinMmi(java.lang.String)>','<android.widget.AdapterView: int getCount()>','<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>','<com.android.internal.telephony.RIL: void onRadioAvailable()>','<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>','<android.util.LongSparseArray: void append(long,java.lang.Object)>','<com.android.server.LocationManagerService: void run()>','<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>','<android.text.method.PasswordTransformationMethod: void <init>()>','<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp access$2702(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp)>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,int,int,int,int,int,int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: void writeExternal(java.io.ObjectOutput)>','<com.android.internal.widget.ActionBarContextView: void onAnimationStart(android.animation.Animator)>','<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void onTrigger(android.view.View,int)>','<android.view.View: void setScrollBarFadeDuration(int)>','<android.widget.Editor$SuggestionsPopupWindow: int clipVertically(int)>','<android.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)>','<android.location.Address$1: void <init>()>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols()>','<android.view.InputDevice: boolean isExternal()>','<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>','<android.graphics.Region$1: void <init>()>','<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>','<com.android.server.am.ActivityStack: void awakeFromSleepingLocked()>','<com.android.internal.telephony.DataConnection$DcDefaultState: boolean processMessage(android.os.Message)>','<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int radioTechnologyToDataServiceState(int)>','<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbCmasInfo getCmasInfo()>','<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryDev()>','<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)>','<android.speech.tts.TextToSpeech: void shutdown()>','<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>','<android.text.Layout: float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int)>','<com.android.server.am.ActivityManagerService$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison,int)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>','<android.bluetooth.BluetoothHealthAppConfiguration$1: android.bluetooth.BluetoothHealthAppConfiguration[] newArray(int)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setWindowCrop(android.graphics.Rect)>','<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>','<android.media.MediaRecorder: void setCaptureRate(double)>','<android.server.BluetoothService: java.util.List getConnectedPanDevices()>','<android.media.MediaRouter$RouteInfo: int getVolumeHandling()>','<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)>','<android.server.BluetoothHealthProfileHandler: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<com.android.server.MountService: void access$2800(com.android.server.MountService,com.android.server.MountService$ObbState)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>','<android.database.CursorToBulkCursorAdaptor: void deactivate()>','<android.widget.TextView: int getMinHeight()>','<android.preference.Preference: boolean persistInt(int)>','<com.android.internal.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)>','<com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener from(java.lang.Object,long,java.lang.Object[])>','<android.content.SyncStorageEngine: long getLongColumn(android.database.Cursor,java.lang.String)>','<android.net.wifi.WifiStateMachine$DriverLoadingState$1: void <init>(android.net.wifi.WifiStateMachine$DriverLoadingState,android.os.Message)>','<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(java.lang.Object)>','<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>','<com.android.server.am.ActivityRecord: void setSleeping(boolean)>','<android.webkit.WebViewCore: void exitFullscreenVideo()>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean isDualBandSupported()>','<com.android.server.am.ActivityManagerService$ServiceMap: void putServiceByName(android.content.ComponentName,int,com.android.server.am.ServiceRecord)>','<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])>','<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()>','<android.accounts.AccountAuthenticatorCache$MySerializer: android.accounts.AuthenticatorDescription createFromXml(org.xmlpull.v1.XmlPullParser)>','<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>','<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebSettings: java.lang.String getDatabasePath()>','<com.android.server.AppWidgetServiceImpl: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)>','<com.android.server.WifiService$DeathRecipient: void <init>(com.android.server.WifiService,int,java.lang.String,android.os.IBinder,android.os.WorkSource)>','<com.android.server.LocationManagerService: int access$2502(com.android.server.LocationManagerService,int)>','<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>','<com.android.server.location.GpsLocationProvider: java.lang.String getName()>','<com.android.server.am.ActivityManagerService$ServiceMap: java.util.Collection getAllServices(int)>','<com.android.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>','<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)>','<com.android.internal.telephony.BaseCommands: void registerForCdmaOtaProvision(android.os.Handler,int,java.lang.Object)>','<android.view.GLES20Canvas: void setDisplayListName(int,java.lang.String)>','<android.view.GLES20Canvas: void restoreToCount(int)>','<com.android.server.DevicePolicyManagerService: boolean isActivePasswordSufficient()>','<android.text.StaticLayout: int getTopPadding()>','<android.widget.GridView: boolean arrowScroll(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void writeToParcelLocked(android.os.Parcel,long)>','<android.database.sqlite.SQLiteProgram: void clearBindings()>','<com.android.internal.telephony.IPhoneSubInfo$Stub: com.android.internal.telephony.IPhoneSubInfo asInterface(android.os.IBinder)>','<android.text.PackedIntVector: void insertAt(int,int[])>','<android.widget.ListView: android.widget.ListAdapter getAdapter()>','<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>','<android.view.View$TransformationInfo: android.graphics.Matrix access$1600(android.view.View$TransformationInfo)>','<com.android.internal.policy.impl.AccountUnlockScreen: android.content.Context access$100(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.net.wifi.WifiStateMachine$SoftApStartingState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.SmsHeader$PortAddrs: void <init>()>','<android.content.SyncResult: boolean madeSomeProgress()>','<android.widget.GridView: int lookForSelectablePosition(int,boolean)>','<com.android.server.sip.SipService: void open(android.net.sip.SipProfile)>','<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getTabAt(int)>','<android.graphics.Bitmap: int getGenerationId()>','<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>','<android.graphics.Bitmap: void setHasAlpha(boolean)>','<android.os.Process: int getParentPid(int)>','<android.webkit.ZoomManager: boolean access$1002(android.webkit.ZoomManager,boolean)>','<com.android.server.location.MockProvider: boolean isEnabled()>','<android.net.NetworkStatsHistory$1: android.net.NetworkStatsHistory[] newArray(int)>','<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>','<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)>','<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.UUSInfo getUUSInfo()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.net.Uri$Part: void <init>(java.lang.String,java.lang.String,android.net.Uri$1)>','<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>','<android.net.sip.SipSessionAdapter: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyMessageWaitingChanged(com.android.internal.telephony.Phone)>','<android.view.inputmethod.InputMethodSubtype: void <clinit>()>','<android.view.IWindowManager$Stub$Proxy: void moveAppToken(int,android.os.IBinder)>','<android.widget.ArrayAdapter: void add(java.lang.Object)>','<com.android.internal.net.LegacyVpnInfo: int describeContents()>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void destroy()>','<android.widget.OverScroller: boolean isOverScrolled()>','<com.android.server.am.ActivityStack$ScheduleDestroyArgs: void <init>(com.android.server.am.ProcessRecord,boolean,java.lang.String)>','<android.widget.Switch: void setThumbResource(int)>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void cancel()>','<android.widget.Editor$SelectionModifierCursorController: void onTouchModeChanged(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String)>','<android.widget.ScrollView: int computeVerticalScrollRange()>','<com.android.internal.telephony.DataConnection: void access$3200(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.graphics.Matrix: boolean postScale(float,float,float,float)>','<android.webkit.WebViewInputDispatcher$TouchStream: boolean isCancelNeeded()>','<com.android.internal.telephony.cat.ResultException: java.lang.String explanation()>','<android.app.ActivityManagerProxy: void unhandledBack()>','<android.opengl.GLLogWrapper: void glTexGenf(int,int,float)>','<com.android.server.input.InputFilter: void sendInputEvent(android.view.InputEvent,int)>','<android.text.LoginFilter$UsernameFilterGeneric: void <init>()>','<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getMsisdn()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>','<android.webkit.JWebCoreJavaBridge: void pause()>','<android.accessibilityservice.UiTestAutomationBridge: void disconnect()>','<android.view.GLES20DisplayList: void clear()>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>','<com.android.internal.os.BatteryStatsImpl: void noteNetworkInterfaceTypeLocked(java.lang.String,int)>','<com.android.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>','<android.app.ContextImpl$14: void <init>()>','<android.view.KeyCharacterMap: char getNumber(int)>','<android.filterfw.core.SyncRunner: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.FilterGraph,java.lang.Class)>','<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void createCopyFile()>','<com.android.internal.widget.TransportControlView$1: void <init>(com.android.internal.widget.TransportControlView)>','<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int getChangingConfigurations()>','<com.android.internal.util.AsyncChannel: void <clinit>()>','<android.net.wifi.WifiApConfigStore$ActiveState: void <init>(android.net.wifi.WifiApConfigStore)>','<android.content.ContentProvider$Transport: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)>','<android.webkit.WebSettingsClassic: void setSupportZoom(boolean)>','<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void sessionCreated(android.view.inputmethod.InputMethodSession)>','<com.android.server.am.FactoryErrorDialog: void onStop()>','<android.webkit.WebViewCore: void access$2200(android.webkit.WebViewCore,android.view.KeyEvent,int,boolean)>','<android.view.IWindowManager$Stub$Proxy: boolean stopViewServer()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPuk(java.lang.String,java.lang.String)>','<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>','<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>','<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredExtnPrefix()>','<android.view.ViewRootImpl: void requestDisallowInterceptTouchEvent(boolean)>','<android.graphics.Matrix$1: boolean preScale(float,float)>','<android.animation.LayoutTransition$5: void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup)>','<android.filterfw.core.GLFrame: void setInts(int[])>','<android.server.BluetoothAdapterStateMachine: void access$5300(android.server.BluetoothAdapterStateMachine)>','<android.webkit.WebViewClassic: boolean onGenericMotionEvent(android.view.MotionEvent)>','<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>','<com.android.server.connectivity.Tethering: boolean access$200(com.android.server.connectivity.Tethering)>','<android.webkit.AccessibilityInjector$CallbackHandler: void <init>(java.lang.String,android.webkit.AccessibilityInjector$1)>','<android.content.pm.PackageParser: void setOnlyCoreApps(boolean)>','<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>','<com.android.server.am.BatteryStatsService: void notePhoneOn()>','<com.android.internal.widget.DigitalClock: void <init>(android.content.Context)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>','<android.telephony.PhoneNumberUtils: java.lang.String convertPreDial(java.lang.String)>','<com.android.internal.policy.impl.SimUnlockScreen: void onClick(android.view.View)>','<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>','<com.android.internal.statusbar.StatusBarIconList: void readFromParcel(android.os.Parcel)>','<android.webkit.ZoomManager: void setHardwareAccelerated()>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,int,int,int[],int)>','<com.android.server.InputMethodManagerService$SessionState: java.lang.String toString()>','<com.android.internal.telephony.DataConnection: void access$2700(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.view.HardwareRenderer: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.cdma.SmsMessage$SubmitPdu,android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>','<com.android.server.am.CompatModePackages$1: void handleMessage(android.os.Message)>','<android.webkit.WebViewClassic: android.app.AlertDialog access$7902(android.webkit.WebViewClassic,android.app.AlertDialog)>','<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>','<android.webkit.OverScrollGlow: void absorbGlow(int,int,int,int,int,int)>','<android.view.animation.Animation: void <clinit>()>','<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>','<android.view.MotionEvent: java.lang.String toolTypeToString(int)>','<com.android.server.pm.Installer: int movedex(java.lang.String,java.lang.String)>','<android.net.Uri$Builder: java.lang.String toString()>','<android.provider.Telephony$Sms$Draft: void <init>()>','<android.text.style.SuggestionSpan$1: android.text.style.SuggestionSpan[] newArray(int)>','<android.server.BluetoothAdapterStateMachine: void access$3600(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.view.View: void setBackgroundResource(int)>','<android.filterpacks.videosrc.MediaSource$2: void <init>(android.filterpacks.videosrc.MediaSource)>','<android.content.ClipboardManager$1: void <init>(android.content.ClipboardManager)>','<android.widget.AutoCompleteTextView: void setThreshold(int)>','<android.graphics.RectF: boolean intersect(android.graphics.RectF)>','<com.android.internal.policy.impl.AccountUnlockScreen$1: void run()>','<android.content.IIntentReceiver$Stub: android.os.IBinder asBinder()>','<android.view.View: void dispatchDetachedFromWindow()>','<android.text.TextUtils$Reverser: java.lang.String toString()>','<android.view.View: boolean onDragEvent(android.view.DragEvent)>','<android.preference.PreferenceFragment$3: void <init>(android.preference.PreferenceFragment)>','<com.android.internal.telephony.AdnRecord: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>','<com.android.internal.telephony.cdma.CDMAPhone$1: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<com.android.internal.os.BatteryStatsImpl: void writeHistory(android.os.Parcel,boolean)>','<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>','<com.android.server.wm.WindowState: void disposeInputChannel()>','<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>','<com.android.server.location.GpsLocationProvider$ProviderHandler: void <init>(com.android.server.location.GpsLocationProvider,com.android.server.location.GpsLocationProvider$1)>','<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>','<android.view.accessibility.AccessibilityRecord: void setSealed(boolean)>','<android.media.SoundPool$EventHandler: void <init>(android.media.SoundPool,android.media.SoundPool,android.os.Looper)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getUan()>','<android.view.View: void setBottom(int)>','<android.webkit.WebViewCore: void reducePriority()>','<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>','<com.android.internal.policy.impl.GlobalActions: boolean access$1100(com.android.internal.policy.impl.GlobalActions)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(java.util.ArrayList,boolean,boolean)>','<android.speech.tts.TextToSpeech$EngineInfo: java.lang.String toString()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPassword(byte[],int)>','<android.graphics.Bitmap$1: android.graphics.Bitmap[] newArray(int)>','<android.graphics.Paint: boolean isFilterBitmap()>','<com.android.internal.widget.PasswordEntryKeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.content.IntentFilter: int countCategories()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>','<android.content.Intent: java.lang.String getAction()>','<android.webkit.WebViewCore: boolean jsInterrupt()>','<android.view.ViewRootImpl: void invalidateDisplayLists()>','<android.net.wifi.WifiConfiguration: void <init>()>','<android.provider.MediaStore$Audio$Playlists$Members: boolean moveItem(android.content.ContentResolver,long,int,int)>','<android.graphics.NinePatch: void <init>(android.graphics.NinePatch)>','<android.app.Activity: void setVisible(boolean)>','<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>','<android.widget.Filter$RequestHandler: void handleMessage(android.os.Message)>','<android.widget.ListPopupWindow$DropDownListView: boolean isFocused()>','<com.android.internal.telephony.IccRecords: boolean getRecordsLoaded()>','<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment)>','<android.location.LocationManager$GpsStatusListenerTransport: android.location.GpsStatus$NmeaListener access$400(android.location.LocationManager$GpsStatusListenerTransport)>','<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>','<android.net.LocalSocketImpl$SocketInputStream: int read()>','<android.filterpacks.videosrc.MediaSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,int[],int)>','<android.content.pm.ContainerEncryptionParams: boolean equals(java.lang.Object)>','<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine access$300(com.android.internal.util.StateMachine$SmHandler)>','<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>','<android.view.View: void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>','<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()>','<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>','<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)>','<android.view.GLES20Canvas: boolean isAvailable()>','<android.os.Bundle: char[] getCharArray(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>','<com.android.server.InputMethodManagerService: void finishInput(com.android.internal.view.IInputMethodClient)>','<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>','<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiManager$Channel,int,android.net.wifi.WifiManager$ActionListener)>','<android.webkit.WebViewClassic: void dumpRenderTree(boolean)>','<android.location.GpsStatus$1: java.util.Iterator iterator()>','<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>','<android.app.ActivityThread: void access$1900(android.app.ActivityThread,android.app.ActivityThread$ServiceArgsData)>','<com.android.server.location.LocationProviderProxy: void <init>(android.content.Context,java.lang.String,java.lang.String,android.os.Handler)>','<com.android.internal.location.DummyLocationProvider: int getPowerRequirement()>','<android.bluetooth.BluetoothPan: void close()>','<android.app.LoaderManagerImpl: java.lang.String toString()>','<android.widget.ArrayAdapter: java.util.ArrayList access$102(android.widget.ArrayAdapter,java.util.ArrayList)>','<com.android.server.PowerManagerService: void access$2800(com.android.server.PowerManagerService,int)>','<android.text.format.Formatter: java.lang.String formatIpAddress(int)>','<android.media.IAudioService$Stub$Proxy: void dispatchMediaKeyEvent(android.view.KeyEvent)>','<android.webkit.HTML5VideoView: int getVideoLayerId()>','<android.text.method.ScrollingMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>','<android.view.MotionEvent$1: android.view.MotionEvent[] newArray(int)>','<com.android.server.pm.PackageManagerService: java.util.List queryContentProviders(java.lang.String,int,int)>','<android.text.style.SuggestionSpan: int getUnderlineColor()>','<com.android.internal.policy.impl.PasswordUnlockScreen$5: void <init>(com.android.internal.policy.impl.PasswordUnlockScreen,long,long)>','<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.filterfw.core.FilterGraph: void flushFrames()>','<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>','<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: void setCardEmulationRoute(java.lang.String,int)>','<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>','<android.net.nsd.NsdServiceInfo: void <init>()>','<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>','<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>','<android.content.res.AssetManager: long access$600(android.content.res.AssetManager,int,long,int)>','<com.android.server.wm.WindowStateAnimator: void hide()>','<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmConnection)>','<android.widget.Spinner: void setOnItemClickListenerInt(android.widget.AdapterView$OnItemClickListener)>','<android.view.View$11: java.lang.Float get(android.view.View)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTimeToNowLocked(long)>','<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>','<android.animation.LayoutTransition: java.util.HashMap access$100(android.animation.LayoutTransition)>','<android.webkit.WebSettingsClassic: int getDoubleTapToastCount()>','<com.android.server.NotificationManagerService: void cancelAllNotifications(java.lang.String)>','<android.webkit.WebSettingsClassic: void onDestroyed()>','<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>','<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(java.lang.String,boolean,boolean,int,int)>','<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager access$400(com.android.server.InputMethodManagerService)>','<android.view.VelocityTracker: android.view.VelocityTracker obtain(java.lang.String)>','<android.graphics.drawable.Drawable$ConstantState: void <init>()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>','<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardViewManager$1)>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void exit()>','<android.media.IRemoteVolumeObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.view.FocusFinder$SequentialFocusComparator: int compare(android.view.View,android.view.View)>','<android.net.http.RequestQueue: void startTiming()>','<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>','<com.android.internal.telephony.cat.ItemsIconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>','<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>','<com.android.internal.telephony.gsm.GsmSmsCbMessage: android.telephony.SmsCbMessage createSmsCbMessage(android.telephony.SmsCbLocation,byte[][])>','<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)>','<android.media.IAudioService$Stub$Proxy: int getMasterVolume()>','<android.app.Instrumentation: void stopProfiling()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void keyguardDoneDrawing()>','<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>','<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>','<android.graphics.Canvas: int getMaximumBitmapWidth()>','<android.os.StrictMode$AndroidBlockGuardPolicy: void handleViolation(android.os.StrictMode$ViolationInfo)>','<android.nfc.TransceiveResult: void <init>(int,byte[])>','<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>','<com.android.server.location.GpsLocationProvider: boolean hasMonetaryCost()>','<com.android.server.usb.UsbDeviceManager$UsbHandler$1: void onReceive(android.content.Context,android.content.Intent)>','<android.net.wifi.WifiNative: boolean p2pServiceAdd(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>','<com.android.server.am.ActivityManagerService: void performAppGcsIfAppropriateLocked()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.RIL: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<android.widget.TextView: void dispatchFinishTemporaryDetach()>','<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.server.PowerManagerService$SettingsObserver: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.net.wifi.WifiConfiguration$EnterpriseField: java.lang.String varName()>','<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: boolean reset()>','<android.view.View: boolean destroyLayer(boolean)>','<android.animation.ValueAnimator: void start()>','<android.net.Uri$Builder: android.net.Uri$Builder fragment(java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void toggleRadioOnOff()>','<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>','<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>','<android.text.style.TypefaceSpan: void <init>(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: void setRadioPower(boolean)>','<android.widget.TextView: void setAllCaps(boolean)>','<android.opengl.GLLogWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>','<com.android.internal.widget.multiwaveview.GlowPadView$5: void <init>(com.android.internal.widget.multiwaveview.GlowPadView)>','<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>','<com.android.server.pm.PackageManagerService: void performBootDexOpt()>','<android.net.http.Request: void <clinit>()>','<com.android.internal.util.AsyncChannel: int fullyConnectSync(android.content.Context,android.os.Handler,android.os.Handler)>','<android.app.PendingIntent: void <init>(android.content.IIntentSender)>','<android.util.XmlPullAttributes: java.lang.String getIdAttribute()>','<android.graphics.Path: void <init>(android.graphics.Path)>','<android.util.NoSuchPropertyException: void <init>(java.lang.String)>','<android.app.ExpandableListActivity: void onGroupCollapse(int)>','<android.graphics.Typeface: void finalize()>','<android.telephony.TelephonyManager: java.lang.String getDeviceId()>','<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>','<com.android.server.ConnectivityService$FeatureUser: java.lang.String toString()>','<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.os.TokenWatcher: int access$102(android.os.TokenWatcher,int)>','<android.util.EventLog$Event: void <init>(byte[])>','<android.view.View: void setNextFocusLeftId(int)>','<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getMsisdn()>','<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setCurrentClientId(int,android.app.PendingIntent,boolean)>','<android.os.INetworkManagementService$Stub$Proxy: void addRoute(java.lang.String,android.net.RouteInfo)>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isServiceCodeCallForwarding(java.lang.String)>','<com.android.server.LocationManagerService: void systemReady()>','<com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.util.ArrayList,boolean)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: boolean isSpellCheckerEnabled()>','<android.app.ActivityManager$RunningTaskInfo: void <clinit>()>','<android.content.SyncStorageEngine: void setOnSyncRequestListener(android.content.SyncStorageEngine$OnSyncRequestListener)>','<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>','<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>','<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>','<com.android.internal.util.StateMachine: boolean isDbg()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isShortCode()>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceId()>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>','<android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation[] values()>','<android.webkit.ClientCertRequestHandler: android.webkit.BrowserFrame access$100(android.webkit.ClientCertRequestHandler)>','<com.android.internal.app.IUsageStats$Stub$Proxy: void noteResumeComponent(android.content.ComponentName)>','<android.app.Dialog: void closeOptionsMenu()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isMMI()>','<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>','<android.content.SyncStatusInfo$1: android.content.SyncStatusInfo createFromParcel(android.os.Parcel)>','<android.webkit.WebViewClassic: android.webkit.WebViewInputDispatcher access$4102(android.webkit.WebViewClassic,android.webkit.WebViewInputDispatcher)>','<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>','<android.net.RouteInfo: void <clinit>()>','<com.android.server.WifiService: int getWifiApEnabledState()>','<com.android.server.StatusBarManagerService: void disable(int,android.os.IBinder,java.lang.String)>','<com.android.internal.database.SortCursor: java.lang.String getString(int)>','<android.os.storage.StorageVolume: long getMaxFileSize()>','<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media newMedia(java.lang.String,int,int,java.lang.String)>','<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>','<com.android.internal.app.AlertController: void setIcon(android.graphics.drawable.Drawable)>','<android.content.res.XmlBlock$Parser: java.lang.String getPrefix()>','<android.view.AccessibilityInteractionController: void performAccessibilityActionClientThread(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.LinearLayout: void <init>(android.content.Context)>','<android.graphics.RectF: void union(android.graphics.RectF)>','<android.webkit.ZoomControlEmbedded: void <init>(android.webkit.ZoomManager,android.webkit.WebViewClassic)>','<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult valueOf(java.lang.String)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.FloatKeyframeSet)>','<android.telephony.ServiceState: int getCdmaRoamingIndicator()>','<com.android.internal.os.ProcessStats: long getCpuTimeForPid(int)>','<com.android.internal.policy.impl.LockScreen: void access$700(com.android.internal.policy.impl.LockScreen)>','<com.android.server.wm.WindowManagerService: boolean viewServerListWindows(java.net.Socket)>','<android.nfc.NfcAdapter: boolean enableNdefPush()>','<android.hardware.Camera$EventHandler: void handleMessage(android.os.Message)>','<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>','<android.view.ViewPropertyAnimator: android.view.View access$200(android.view.ViewPropertyAnimator)>','<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>','<android.widget.TextView: void onMeasure(int,int)>','<com.android.vcard.VCardUtils$DecoderException: void <init>(java.lang.String)>','<android.webkit.WebViewClassic$PrivateHandler: void showTapHighlight(boolean)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void write(byte[],int,int)>','<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>','<android.app.Dialog: void setTitle(int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>','<com.android.internal.telephony.cdma.CdmaConnection: void access$000(com.android.internal.telephony.cdma.CdmaConnection)>','<android.app.Notification: android.app.Notification$Action[] access$200(android.app.Notification)>','<android.widget.TextView: int getCompoundPaddingBottom()>','<android.telephony.GsmCellIdentity$1: android.telephony.GsmCellIdentity[] newArray(int)>','<com.android.server.wm.ViewServer: boolean isRunning()>','<com.android.internal.telephony.GsmAlphabet: char gsmExtendedToChar(int)>','<android.graphics.RectF: boolean contains(android.graphics.RectF)>','<android.util.Log: int println(int,java.lang.String,java.lang.String)>','<android.os.Looper: void removeSyncBarrier(int)>','<android.os.Bundle: void <init>(java.lang.ClassLoader)>','<android.media.RemoteControlClient: int[] access$000()>','<android.os.WorkSource: int describeContents()>','<com.android.internal.telephony.cat.RilMessage: void <init>(int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pDeviceList: boolean clear()>','<android.net.wifi.WifiNative: boolean stopDriver()>','<android.ddm.DdmHandleAppName: void setAppName(java.lang.String)>','<android.net.MobileDataStateTracker: android.net.LinkCapabilities access$802(android.net.MobileDataStateTracker,android.net.LinkCapabilities)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int stop(android.os.IBinder)>','<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>','<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()>','<com.android.internal.telephony.PhoneFactory: void <init>()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getMsisdn()>','<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>','<android.net.wifi.p2p.WifiP2pService: void connectivityServiceReady()>','<com.android.internal.telephony.DataConnection: void <clinit>()>','<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Phone getPhone()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>','<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>','<com.android.internal.policy.impl.PasswordUnlockScreen$2: void <init>(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.database.sqlite.SQLiteConnection: void dumpUnsafe(android.util.Printer,boolean)>','<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.telephony.TelephonyManager: int getCdmaEriIconMode()>','<android.location.Geocoder: boolean isPresent()>','<android.view.SurfaceView$1: void handleMessage(android.os.Message)>','<android.content.IntentFilter: boolean hasAction(java.lang.String)>','<android.app.ActivityManager: com.android.internal.os.PkgUsageStats[] getAllPackageUsageStats()>','<android.app.Application: void dispatchActivityPaused(android.app.Activity)>','<android.graphics.drawable.LevelListDrawable$LevelListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<com.android.server.NetworkManagementSocketTagger: int kernelToTag(java.lang.String)>','<com.android.server.MountService: void mountObb(java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>','<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>','<android.app.WallpaperInfo: void <init>(android.os.Parcel)>','<android.webkit.HttpAuthHandler: boolean suppressDialog()>','<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>','<android.os.IVibratorService$Stub: android.os.IBinder asBinder()>','<android.view.View: void setEnabled(boolean)>','<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>','<com.android.server.sip.SipSessionGroup: void access$1200(com.android.server.sip.SipSessionGroup,com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<android.os.Handler: boolean post(java.lang.Runnable)>','<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>','<android.net.wifi.WifiStateMachine$SupplicantStartingState: void enter()>','<android.os.MessageQueue: void removeMessages(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>','<android.app.WallpaperManager$FastBitmapDrawable: void setFilterBitmap(boolean)>','<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)>','<com.android.internal.view.IInputConnectionWrapper$MyHandler: void handleMessage(android.os.Message)>','<android.media.AudioService: int getMasterStreamType()>','<android.content.res.TypedArray: void recycle()>','<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: boolean isConnected(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailNumber()>','<android.app.LoadedApk: java.io.File getDataDirFile()>','<android.net.NetworkStats: int findIndex(java.lang.String,int,int,int)>','<android.app.ActivityThread$ApplicationThread: void setSchedulingGroup(int)>','<android.widget.SearchView: void clearFocus()>','<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)>','<android.os.Handler: boolean hasMessages(int)>','<android.webkit.HTML5VideoFullScreen: boolean fullScreenExited()>','<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap access$4000(android.media.AudioService$VolumeStreamState)>','<android.text.method.DialerKeyListener: void <init>()>','<android.preference.Preference: int getWidgetLayoutResource()>','<android.graphics.drawable.ShapeDrawable$ShapeState: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: boolean access$100(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<com.android.internal.widget.ActionBarView: void onFinishInflate()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.widget.AdapterView: int findSyncPosition()>','<android.graphics.drawable.TransitionDrawable$TransitionState: void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources)>','<android.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()>','<android.net.NetworkStatsHistory: void <init>(android.net.NetworkStatsHistory,long)>','<android.widget.ExpandableListView: long getExpandableListPosition(int)>','<android.app.AlertDialog: void setCustomTitle(android.view.View)>','<com.android.internal.widget.multiwaveview.Ease$Quart: void <init>()>','<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>','<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownTypeSet()>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>','<android.view.View: void setHorizontalScrollBarEnabled(boolean)>','<com.android.internal.telephony.BaseCommands: void registerForExitEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>','<android.net.Uri$OpaqueUri: java.lang.String getPath()>','<android.os.TokenWatcher$Death: void binderDied()>','<android.server.BluetoothService: void setRemoteDeviceProperty(java.lang.String,java.lang.String,java.lang.String)>','<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>','<android.speech.tts.TextToSpeech$1: void <init>(android.speech.tts.TextToSpeech)>','<com.android.vcard.VCardParserImpl_V30: int getVersion()>','<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)>','<com.android.internal.telephony.UUSInfo: void setType(int)>','<android.webkit.HTML5VideoInline: boolean surfaceTextureDeleted()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo createFromParcel(android.os.Parcel)>','<android.webkit.WebStorage$Origin: long getUsage()>','<android.provider.Settings$System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>','<android.view.animation.Animation: long getDuration()>','<android.media.RemoteControlClient: void access$1100(android.media.RemoteControlClient)>','<android.net.LinkProperties: boolean isIdenticalInterfaceName(android.net.LinkProperties)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.String)>','<android.database.AbstractWindowedCursor: int getType(int)>','<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context,com.android.internal.net.VpnConfig)>','<android.text.style.URLSpan: void <init>(android.os.Parcel)>','<android.security.Credentials: void install(android.content.Context,java.security.KeyPair)>','<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>','<android.view.inputmethod.CompletionInfo: void <clinit>()>','<com.android.internal.telephony.DataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void <init>(android.widget.RemoteViewsAdapter)>','<android.net.DhcpInfo$1: android.net.DhcpInfo createFromParcel(android.os.Parcel)>','<com.android.uiautomator.core.UiSelector: java.lang.String getString(int)>','<com.android.internal.telephony.RIL: void setLocationUpdates(boolean,android.os.Message)>','<android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm valueOf(java.lang.String)>','<android.telephony.SmsMessage: boolean isMWIClearMessage()>','<com.android.internal.view.menu.ActionMenuItem: int getOrder()>','<android.media.AudioService: int access$3800(android.media.AudioService,int,int,int)>','<android.net.http.LoggingEventHandler: void requestSent()>','<android.location.Address: android.os.Bundle access$1902(android.location.Address,android.os.Bundle)>','<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)>','<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: void finalize()>','<android.filterfw.core.SyncRunner: int step()>','<com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.Phone$State convertCallState(int)>','<com.android.server.EventLogTags: void writeBatteryDischarge(long,int,int)>','<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)>','<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<android.bluetooth.BluetoothA2dp: boolean shouldSendVolumeKeys(android.bluetooth.BluetoothDevice)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>','<android.server.BluetoothAdapterStateMachine: void access$4000(android.server.BluetoothAdapterStateMachine,int,java.lang.Object)>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>','<android.view.InputEventReceiver: void onInputEvent(android.view.InputEvent)>','<android.widget.PopupWindow: void setOutsideTouchable(boolean)>','<android.os.BatteryStats$HistoryItem: void <init>()>','<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster$Builder setPointSpriteEnabled(boolean)>','<android.webkit.WebViewClassic: boolean access$2600(android.webkit.WebViewClassic)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIII(int,int,int,int,int)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMsisdn()>','<android.opengl.GLLogWrapper: void glLoadPaletteFromModelViewMatrixOES()>','<android.telephony.SmsCbLocation: void <init>()>','<android.content.res.XmlBlock$Parser: int getStyleAttribute()>','<android.view.textservice.SpellCheckerSubtype$1: void <init>()>','<android.content.ClipDescription: java.lang.String[] filterMimeTypes(java.lang.String)>','<com.android.internal.telephony.gsm.GsmCall: void connectionDisconnected(com.android.internal.telephony.gsm.GsmConnection)>','<android.net.http.RequestQueue$ActivePool: void disablePersistence()>','<android.webkit.ZoomManager: float access$1600(android.webkit.ZoomManager)>','<com.android.server.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>','<android.view.ViewGroup: void setDescendantFocusability(int)>','<com.android.server.location.GpsLocationProvider$Listener: void <init>(com.android.server.location.GpsLocationProvider,android.location.IGpsStatusListener)>','<com.android.server.AlarmManagerService: android.os.PowerManager$WakeLock access$1500(com.android.server.AlarmManagerService)>','<android.graphics.Interpolator: void finalize()>','<android.content.SyncManager$SyncTimeTracker: long timeSpentSyncing()>','<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4400(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.net.DhcpStateMachine$WaitBeforeRenewalState: void exit()>','<android.net.wifi.WifiConfiguration$1: android.net.wifi.WifiConfiguration[] newArray(int)>','<com.android.server.pm.PackageManagerService: boolean access$1800(com.android.server.pm.PackageManagerService,java.lang.String,android.content.pm.PackageStats)>','<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>','<android.util.Pair: int hashCode()>','<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>','<android.media.CamcorderProfile: void <clinit>()>','<android.opengl.GLLogWrapper: void glBindTexture(int,int)>','<android.net.wifi.WifiStateMachine$TetheringState: void <init>(android.net.wifi.WifiStateMachine)>','<android.view.View: void hackTurnOffWindowResizeAnim(boolean)>','<com.android.server.wm.WindowState: boolean isOnScreen()>','<com.android.internal.widget.EditableInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>','<android.text.format.Formatter: void <init>()>','<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>','<android.net.MobileDataStateTracker: boolean reconnect()>','<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>','<com.android.server.sip.SipSessionListenerProxy$13: void run()>','<android.graphics.Paint$Style: android.graphics.Paint$Style valueOf(java.lang.String)>','<com.android.server.am.ActivityManagerService: void unhandledBack()>','<com.android.internal.telephony.PhoneProxy: void registerFoT53ClirlInfo(android.os.Handler,int,java.lang.Object)>','<android.widget.TextView: void onWindowFocusChanged(boolean)>','<android.content.res.AssetManager$AssetInputStream: void finalize()>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void onServiceDisconnected()>','<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>','<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.ScanResult$1: android.net.wifi.ScanResult[] newArray(int)>','<android.view.GLES20DisplayList: boolean hasNativeDisplayList()>','<android.net.wifi.WifiNative: boolean p2pServiceFlush()>','<com.android.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>','<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()>','<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>','<com.android.internal.view.InputBindResult: void <init>(android.os.Parcel)>','<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$1400(android.bluetooth.BluetoothDeviceProfileState)>','<android.net.DhcpStateMachine: android.app.AlarmManager access$1600(android.net.DhcpStateMachine)>','<com.android.server.ConnectivityService: java.lang.Object access$2900(com.android.server.ConnectivityService)>','<android.webkit.BrowserFrame: boolean committed()>','<com.android.server.MountService: void finishMediaUpdate()>','<android.webkit.WebViewClassic: boolean onTouchEvent(android.view.MotionEvent)>','<android.app.Instrumentation: void sendStringSync(java.lang.String)>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener access$802(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener)>','<android.net.rtp.RtpStream: void <init>(java.net.InetAddress)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendIms(java.util.List)>','<com.android.internal.widget.PointerLocationView: void onDraw(android.graphics.Canvas)>','<android.util.IntProperty: void <init>(java.lang.String)>','<android.view.animation.Animation: boolean hasAlpha()>','<android.webkit.WebView: void onMeasure(int,int)>','<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>','<android.widget.ListPopupWindow$ResizePopupRunnable: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1)>','<android.webkit.WebViewClassic: void invokeZoomPicker()>','<android.nfc.INdefPushCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.gsm.GSMPhone: void acceptCall()>','<android.app.BackStackRecord: android.app.FragmentTransaction show(android.app.Fragment)>','<com.android.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)>','<android.net.DhcpStateMachine$StoppedState: boolean processMessage(android.os.Message)>','<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()>','<com.android.server.NetworkManagementService: void disableNat(java.lang.String,java.lang.String)>','<android.util.SparseBooleanArray: boolean get(int)>','<android.util.Xml: android.util.Xml$Encoding findEncodingByName(java.lang.String)>','<com.android.internal.view.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>(java.util.HashMap)>','<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>','<android.net.INetworkPolicyManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.pm.IPackageManager$Stub$Proxy: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$2300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.internal.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.opengl.GLLogWrapper: void glFlush()>','<android.widget.LinearLayout: boolean isMeasureWithLargestChildEnabled()>','<android.net.ConnectivityManager: void <init>(android.net.IConnectivityManager)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager$1: void <init>(com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager)>','<android.app.NotificationManager: android.app.INotificationManager getService()>','<android.bluetooth.BluetoothClass$1: void <init>()>','<com.android.server.am.UsageStatsService$TimeStats: void <init>()>','<android.net.wifi.WifiStateMachine: void access$5000(android.net.wifi.WifiStateMachine,boolean)>','<android.media.TimedText: void <init>(android.os.Parcel)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: void bindWapPushManager()>','<android.media.AudioManager: void startBluetoothSco()>','<com.android.vcard.VCardConfig: boolean onlyOneNoteFieldIsAvailable(int)>','<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)>','<com.android.server.input.InputManagerService: void tryPointerSpeed(int)>','<android.net.IConnectivityManager$Stub$Proxy: int getNetworkPreference()>','<android.util.SparseIntArray: void removeAt(int)>','<android.view.View: boolean isVerticalScrollBarHidden()>','<android.os.ResultReceiver$1: android.os.ResultReceiver createFromParcel(android.os.Parcel)>','<android.widget.Toast: void setView(android.view.View)>','<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>','<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>','<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>','<android.widget.Switch: void <init>(android.content.Context)>','<android.filterfw.core.Filter: android.filterfw.core.Frame pullInput(java.lang.String)>','<android.media.MediaRouter$VolumeCallback: void <init>()>','<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconMode()>','<com.android.server.wm.AppWindowToken: void <init>(com.android.server.wm.WindowManagerService,android.view.IApplicationToken)>','<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>','<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$3: void onClick(android.content.DialogInterface,int)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void log(java.lang.String)>','<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)>','<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsPbc(android.net.wifi.WpsInfo)>','<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)>','<android.view.animation.Transformation: void setTransformationType(int)>','<com.android.server.am.ActivityManagerService: void moveTaskToBack(int)>','<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>','<android.webkit.WebViewClassic: boolean isPaused()>','<android.hardware.usb.IUsbManager$Stub: void <init>()>','<android.net.NetworkPolicy: void <init>(android.os.Parcel)>','<com.android.server.pm.PackageManagerService: boolean access$3100(com.android.server.pm.PackageManagerService,java.lang.String)>','<android.widget.Spinner$DropDownAdapter: int getItemViewType(int)>','<com.android.server.sip.SipSessionListenerProxy$6: void run()>','<com.android.server.WifiService: android.net.DhcpInfo getDhcpInfo()>','<android.widget.Switch: void setTextOff(java.lang.CharSequence)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenBrightness(int)>','<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)>','<com.android.server.pm.PackageManagerService$2: void <init>(com.android.server.pm.PackageManagerService,long,android.content.IntentSender)>','<android.widget.TextView: int getSelectionStart()>','<android.net.http.AndroidHttpClient: java.lang.String access$500(org.apache.http.client.methods.HttpUriRequest,boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$5900(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.View: int[] getDrawableState()>','<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>','<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>','<android.widget.AbsSeekBar: void jumpDrawablesToCurrentState()>','<android.view.View: boolean isDuplicateParentStateEnabled()>','<android.location.Address: java.lang.String getPostalCode()>','<android.telephony.ServiceState: void <clinit>()>','<android.view.ViewDebug$2: void run(java.lang.Void[])>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getImei()>','<android.webkit.WebViewCore: void destroy()>','<android.graphics.drawable.StateListDrawable$StateListState: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources)>','<com.android.uiautomator.core.UiDevice: void setTypeAsPhone(boolean)>','<android.webkit.WebViewClassic: int computeMaxScrollY()>','<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>','<com.android.server.ConnectivityService: int untether(java.lang.String)>','<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>','<android.net.ConnectivityManager: boolean getMobileDataEnabled()>','<com.android.internal.telephony.ApnContext: int getWaitingApnsPermFailCount()>','<android.view.ViewGroup: void finishAnimatingView(android.view.View,android.view.animation.Animation)>','<com.android.server.wm.WindowManagerService: void updateWallpaperVisibilityLocked()>','<android.widget.Editor: android.widget.Editor$PositionListener access$1000(android.widget.Editor)>','<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String decodeUTF8String(byte[])>','<android.view.View$13: void setValue(android.view.View,float)>','<com.android.internal.os.LoggingPrintStream: void println(java.lang.Object)>','<android.webkit.HTML5VideoView: void prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.view.BaseSurfaceHolder: void setSizeFromLayout()>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void exit()>','<android.net.EthernetDataTracker: boolean setRadio(boolean)>','<android.telephony.TelephonyManager: boolean hasIccCard()>','<android.net.wifi.WifiStateMachine: android.net.wifi.SupplicantState access$7200(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.widget.OverScroller: int getFinalX()>','<android.view.View: int getPaddingTop()>','<android.util.LogPrinter: void <init>(int,java.lang.String)>','<android.view.View: void setScaleX(float)>','<android.animation.AnimatorSet: void playSequentially(java.util.List)>','<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>','<android.os.StrictMode$ViolationInfo: int hashCode()>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>','<android.webkit.WebViewClassic: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>','<com.android.internal.telephony.IccRecords: boolean getVoiceCallForwardingFlag()>','<android.view.View$TransformationInfo: android.graphics.Matrix access$1802(android.view.View$TransformationInfo,android.graphics.Matrix)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActiveAdmin(android.content.ComponentName,boolean)>','<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void removeReferences()>','<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaSubscriptionSource(int,android.os.Message)>','<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailNumber(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)>','<com.android.server.wm.WindowManagerService: int adjustWallpaperWindowsLocked()>','<android.webkit.SearchBoxImpl: void onresize(android.webkit.SearchBox$SearchBoxListener)>','<com.android.server.MountService$4: void <init>(com.android.server.MountService,java.lang.String)>','<android.view.View: java.lang.CharSequence getContentDescription()>','<com.android.server.location.MockProvider: void disable()>','<com.android.server.am.ActivityManagerService$2$1: void <init>(com.android.server.am.ActivityManagerService$2)>','<android.widget.ExpandableListConnector: void setMaxExpGroupCount(int)>','<android.media.effect.EffectContext: void release()>','<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>','<com.android.internal.telephony.RIL: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>','<android.graphics.Rect: void union(int,int,int,int)>','<android.net.wifi.WifiNative: java.lang.String getMacAddress()>','<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>','<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>','<com.android.internal.telephony.cat.TextMessage: void <init>()>','<android.bluetooth.IBluetoothStateChangeCallback$Stub: void <init>()>','<com.android.internal.policy.impl.KeyguardViewMediator$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.Phone$State: void <clinit>()>','<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>','<com.android.server.wm.WindowManagerService: void statusBarVisibilityChanged(int)>','<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>','<com.android.server.am.BroadcastFilter: void dumpInReceiverList(java.io.PrintWriter,android.util.Printer,java.lang.String)>','<android.location.Criteria: boolean access$602(android.location.Criteria,boolean)>','<android.view.MotionEvent: int getFlags()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleDeviceProvisioned()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: boolean isSecure()>','<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>','<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>','<android.widget.ScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()>','<android.accounts.IAccountAuthenticator$Stub: android.os.IBinder asBinder()>','<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>','<com.android.server.input.InputManagerService: void onVibratorTokenDied(com.android.server.input.InputManagerService$VibratorToken)>','<com.android.server.wm.DragState: void reset()>','<android.graphics.drawable.LayerDrawable$LayerState: int getOpacity()>','<android.widget.Spinner$DropdownPopup: void show()>','<android.media.AudioService$ScoClient: void clearCount(boolean)>','<com.android.server.am.ActivityManagerService: void activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)>','<com.android.server.DeviceStorageMonitorService$1: void <init>(com.android.server.DeviceStorageMonitorService)>','<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()>','<android.widget.AbsListView$RecycleBin: void fillActiveViews(int,int)>','<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>','<com.android.vcard.exception.VCardAgentNotSupportedException: void <init>()>','<android.view.View: void setTag(int,java.lang.Object)>','<android.content.res.CompatibilityInfo: boolean isScalingRequired()>','<com.android.internal.telephony.PhoneProxy: void acceptCall()>','<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>','<android.webkit.BrowserFrame: boolean getShouldStartScrolledRight()>','<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>','<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallForwardingChanged(boolean)>','<android.net.LocalSocketImpl: void listen(int)>','<android.view.HardwareRenderer$GlRenderer: void dumpGfxInfo(java.io.PrintWriter)>','<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$BatteryStatus: void <init>(int,int,int,int)>','<android.view.KeyCharacterMap$FallbackAction: android.view.KeyCharacterMap$FallbackAction obtain()>','<com.android.server.wm.WindowAnimator: void startDimming(com.android.server.wm.WindowStateAnimator,float,int,int)>','<com.android.internal.content.PackageHelper: java.lang.String mountSdDir(java.lang.String,java.lang.String,int)>','<android.view.VelocityTracker$Estimator: void <init>()>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: void unregisterCallback(com.android.internal.policy.IFaceLockCallback)>','<android.hardware.input.KeyboardLayout: int describeContents()>','<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>','<android.os.Parcel: void writeTypedList(java.util.List)>','<android.widget.TextView: void setScroller(android.widget.Scroller)>','<android.view.View: int getVisibility()>','<android.server.BluetoothBondState$1: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesReceived(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8700(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.internal.util.TypedProperties: java.lang.Object parseValue(java.io.StreamTokenizer,int)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPin(java.lang.String,byte[])>','<android.net.sip.SipSession$1: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<android.webkit.ZoomManager$PostScale: void run()>','<com.android.internal.telephony.PhoneBase: void queryAvailableBandMode(android.os.Message)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccCard getIccCard()>','<android.view.GLES20Canvas: int getSaveCount()>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>','<com.android.internal.telephony.PhoneSubInfo: void dispose()>','<com.android.server.NetworkManagementService: void systemReady()>','<android.webkit.GeolocationPermissionsClassic: void getOrigins(android.webkit.ValueCallback)>','<android.bluetooth.BluetoothHealthAppConfiguration: void <clinit>()>','<android.content.SyncAdapterType: void <init>(android.os.Parcel)>','<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)>','<android.net.sip.ISipService$Stub$Proxy: void open(android.net.sip.SipProfile)>','<android.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)>','<android.media.MediaRouter$RouteGroup: void requestSetVolume(int)>','<com.android.internal.policy.impl.GlobalActions$SilentModeToggleAction: boolean showBeforeProvisioning()>','<com.android.server.wm.InputMonitor: void <init>(com.android.server.wm.WindowManagerService)>','<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getNationalPrefixFormattingRule()>','<com.android.internal.telephony.gsm.GSMPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.os.BatteryStatsImpl: void noteAudioOffLocked(int)>','<android.content.pm.ParceledListSlice$1: void <init>()>','<com.android.internal.telephony.IccCard: void registerForRuimReady(android.os.Handler,int,java.lang.Object)>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.bluetooth.BluetoothDevice: boolean setRemoteOutOfBandData()>','<android.app.ActivityThread: void access$2500(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo)>','<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.server.BluetoothAdapterStateMachine: void access$1300(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.content.IntentSender: java.lang.String getTargetPackage()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.location.GpsLocationProvider: boolean access$1200(com.android.server.location.GpsLocationProvider)>','<android.app.ActivityManager: void <clinit>()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailAlphaTag()>','<android.location.Address: int describeContents()>','<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>','<android.net.NetworkStatsHistory$1: void <init>()>','<android.widget.AbsListView: int access$3100(android.widget.AbsListView)>','<android.webkit.ViewManager$ChildView: void access$100(android.webkit.ViewManager$ChildView)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setCurrentClientId(int,android.app.PendingIntent,boolean)>','<android.widget.Editor: void onFocusChanged(boolean,int)>','<android.text.Layout: float getSecondaryHorizontal(int)>','<android.webkit.WebViewClassic: void refreshPlugins(boolean)>','<android.content.BroadcastReceiver$PendingResult: void setResultData(java.lang.String)>','<com.android.server.StatusBarManagerService$4: void run()>','<com.android.server.net.NetworkStatsCollection: void <init>(long)>','<com.android.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.content.pm.ContainerEncryptionParams$1: android.content.pm.ContainerEncryptionParams createFromParcel(android.os.Parcel)>','<android.opengl.GLLogWrapper: void glLightModelxv(int,int[],int)>','<com.android.server.WifiService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.renderscript.RSDriverException: void <init>(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>','<android.server.BluetoothService: boolean isFixedPinZerosAutoPairKeyboard(java.lang.String)>','<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>','<android.app.SearchableInfo: int getSettingsDescriptionId()>','<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>','<com.android.internal.policy.impl.GlobalActions$2: void onPress()>','<android.view.InputChannel: void <clinit>()>','<android.util.StateSet: boolean stateSetMatches(int[],int[])>','<android.widget.MediaController$3: void <init>(android.widget.MediaController)>','<com.android.internal.telephony.RIL: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>','<android.media.IRemoteControlClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.vcard.VCardProperty: java.lang.String getName()>','<android.widget.ArrayAdapter: java.lang.Object getItem(int)>','<com.android.server.NativeDaemonEvent: int getCmdNumber()>','<android.net.wifi.WifiNative: java.lang.String p2pGetDeviceAddress()>','<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipWakeupTimer access$2700(com.android.server.sip.SipSessionGroup)>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getSubscriberId()>','<android.graphics.Paint: java.util.Locale getTextLocale()>','<android.content.pm.PackageParser$Package: java.lang.String toString()>','<com.android.server.sip.SipSessionGroup: java.util.EventObject access$1800()>','<android.text.format.DateUtils: void assign(java.util.Calendar,java.util.Calendar)>','<android.filterfw.core.FilterGraph: void setTypeCheckMode(int)>','<android.webkit.FindActionModeCallback: void onTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.util.CharSequences$2: void <init>(byte[],int,int)>','<android.service.dreams.IDreamManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.KeyguardManager$KeyguardLock: void reenableKeyguard()>','<android.widget.RemoteViewsAdapter: android.os.Handler access$1000(android.widget.RemoteViewsAdapter)>','<com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>','<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$800(android.bluetooth.BluetoothDeviceProfileState,int)>','<com.android.server.am.ActivityStack: void destroyActivitiesLocked(com.android.server.am.ProcessRecord,boolean,java.lang.String)>','<android.security.KeyStore: byte[] get(java.lang.String)>','<android.webkit.WebViewClassic: boolean zoomIn()>','<com.android.server.PowerManagerService: int[] access$3400(com.android.server.PowerManagerService)>','<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>','<android.net.EthernetDataTracker: boolean access$100()>','<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>','<android.text.style.CharacterStyle$Passthrough: void <init>(android.text.style.CharacterStyle)>','<com.android.server.WifiService: boolean access$2202(com.android.server.WifiService,boolean)>','<android.media.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>','<android.widget.PopupWindow: void dismiss()>','<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void onRelease(int)>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>','<android.webkit.CallbackProxy: void onReceivedTouchIconUrl(java.lang.String,boolean)>','<android.content.SyncManager: android.content.SyncStorageEngine access$600(android.content.SyncManager)>','<com.android.internal.widget.DrawableHolder: void setY(float)>','<android.content.IContentService$Stub$Proxy: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName access$2600(com.android.server.pm.PackageManagerService,java.lang.String,java.util.List)>','<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>','<com.android.server.location.LocationProviderProxy$Connection: com.android.internal.location.DummyLocationProvider getCachedAttributes()>','<android.app.backup.IRestoreSession$Stub$Proxy: void endRestoreSession()>','<android.webkit.HTML5VideoFullScreen$3: void <init>(android.webkit.HTML5VideoFullScreen)>','<android.widget.ZoomControls: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)>','<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>','<android.graphics.Paint: int getTextGlyphs(java.lang.String,int,int,int,int,int,char[])>','<com.android.internal.content.PackageHelper: int extractPublicFiles(java.lang.String,java.io.File)>','<android.database.AbstractCursor$SelfContentObserver: boolean deliverSelfNotifications()>','<com.android.internal.telephony.RetryManager: int getRetryTimer()>','<com.android.internal.statusbar.StatusBarIconList: void defineSlots(java.lang.String[])>','<com.android.internal.telephony.PhoneBase: int enableApnType(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>','<com.android.internal.telephony.IccRecords: com.android.internal.telephony.AdnRecordCache getAdnCache()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onResponse(boolean)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>','<android.graphics.Interpolator: android.graphics.Interpolator$Result timeToValues(int,float[])>','<android.graphics.RegionIterator: void finalize()>','<android.text.method.DialerKeyListener: char[] getAcceptedChars()>','<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)>','<android.content.res.XmlBlock$Parser: void finalize()>','<android.view.View$4: java.lang.Float get(android.view.View)>','<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>','<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>','<android.view.ViewGroup: void dispatchFinishTemporaryDetach()>','<android.view.inputmethod.ExtractedText$1: android.view.inputmethod.ExtractedText createFromParcel(android.os.Parcel)>','<com.android.internal.policy.impl.PhoneWindowManager: void removeStartingWindow(android.os.IBinder,android.view.View)>','<android.widget.ListView: void setAdapter(android.widget.Adapter)>','<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>','<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>','<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>','<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>','<android.webkit.ZoomManager: void saveZoomState(android.os.Bundle)>','<android.graphics.Matrix: int ni()>','<android.app.backup.RestoreSet: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.util.XmlUtils: boolean convertValueToBoolean(java.lang.CharSequence,boolean)>','<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>','<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getSubtitle()>','<android.graphics.Region$1: android.graphics.Region[] newArray(int)>','<android.server.BluetoothA2dpService: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: int getNumberPresentation()>','<android.webkit.HTML5VideoViewProxy: android.webkit.HTML5VideoViewProxy getInstance(android.webkit.WebViewCore,int)>','<android.webkit.ZoomManager: float access$502(android.webkit.ZoomManager,float)>','<android.view.View: void setFlags(int,int)>','<android.content.IIntentReceiver$Stub: void <init>()>','<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,int,long,long,long,long,long)>','<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>','<com.android.uiautomator.core.InteractionController$2: void <init>(com.android.uiautomator.core.InteractionController)>','<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$900(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>','<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: java.lang.String peekLine()>','<com.android.internal.policy.impl.PhoneWindowManager: void setInitialDisplaySize(android.view.Display,int,int)>','<android.os.ServiceManagerProxy: java.lang.String[] listServices()>','<android.bluetooth.IBluetoothCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.location.GpsLocationProvider: void access$600(com.android.server.location.GpsLocationProvider)>','<android.view.View: void resetResolvedTextAlignment()>','<android.view.inputmethod.CorrectionInfo: void <init>(android.os.Parcel,android.view.inputmethod.CorrectionInfo$1)>','<com.android.server.LightsService$Light: void <init>(com.android.server.LightsService,int,com.android.server.LightsService$1)>','<android.bluetooth.BluetoothAdapter: boolean isEnabled()>','<com.android.internal.telephony.SmsRawData$1: void <init>()>','<android.media.AudioService: void adjustSuggestedStreamVolume(int,int,int)>','<android.os.Vibrator: void <init>()>','<com.android.uiautomator.core.UiDevice: boolean pressDPadDown()>','<com.android.internal.telephony.BaseCommands: void unSetOnSmsStatus(android.os.Handler)>','<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.PhoneBase: boolean isCspPlmnEnabled()>','<android.view.HardwareRenderer: android.view.HardwareRenderer createGlRenderer(int,boolean)>','<com.android.internal.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)>','<android.view.View: int[] mergeDrawableStates(int[],int[])>','<android.app.WallpaperManager$FastBitmapDrawable: int getOpacity()>','<android.os.Handler: void <init>(android.os.Handler$Callback)>','<com.android.internal.textservice.ITextServicesSessionListener$Stub: void <init>()>','<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>','<android.text.util.Linkify$4: boolean equals(java.lang.Object)>','<com.android.server.pm.PackageManagerService$MoveParams: void handleServiceError()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void access$1000(com.android.internal.policy.impl.KeyguardStatusViewManager,com.android.internal.telephony.IccCard$State)>','<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)>','<android.inputmethodservice.KeyboardView$2: void <init>(android.inputmethodservice.KeyboardView)>','<com.android.server.location.MockProvider: int getAccuracy()>','<android.widget.AbsListView: boolean setFrame(int,int,int,int)>','<com.android.server.pm.ShutdownThread$CloseDialogReceiver: void <init>(android.content.Context)>','<android.content.Context: void <init>()>','<android.webkit.AccessibilityInjector: boolean supportsAccessibilityAction(int)>','<android.view.SurfaceView$MyWindow: void <init>(android.view.SurfaceView)>','<android.app.ActivityManager$TaskThumbnails: void writeToParcel(android.os.Parcel,int)>','<android.text.HtmlToSpannedConverter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>','<android.text.AutoText: void <clinit>()>','<com.android.server.am.ActivityManagerService$9: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.am.ActivityManagerService$9$1: void <init>(com.android.server.am.ActivityManagerService$9)>','<com.android.internal.telephony.ApnContext: void <init>(java.lang.String,java.lang.String)>','<android.widget.Scroller: int getFinalY()>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendSipAddresses(java.util.List)>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean setComposingRegion(int,int)>','<android.net.http.ConnectionThread: java.lang.String toString()>','<android.server.BluetoothA2dpService: void access$300(android.server.BluetoothA2dpService,android.bluetooth.BluetoothDevice,int,int)>','<android.server.BluetoothService: java.lang.String access$602(android.server.BluetoothService,java.lang.String)>','<com.android.internal.widget.LockPatternView$Cell: int getColumn()>','<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>','<android.content.ContextWrapper: java.lang.String[] databaseList()>','<android.renderscript.RenderScript: int nMeshCreate(int[],int[],int[])>','<com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode valueOf(java.lang.String)>','<android.content.pm.ManifestDigest$1: void <init>()>','<android.net.http.CertificateChainValidator: void <clinit>()>','<android.renderscript.Element$DataType: void <clinit>()>','<com.android.i18n.phonenumbers.RegexCache$LRUCache$1: boolean removeEldestEntry(java.util.Map$Entry)>','<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>','<android.widget.Editor$InsertionHandleView: boolean onTouchEvent(android.view.MotionEvent)>','<android.os.INetworkManagementService$Stub$Proxy: void removeRoute(java.lang.String,android.net.RouteInfo)>','<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>','<android.preference.Preference: boolean persistBoolean(boolean)>','<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)>','<com.android.internal.telephony.PhoneProxy: void setNetworkSelectionModeAutomatic(android.os.Message)>','<android.net.sip.SimpleSessionDescription: void setAttribute(java.lang.String,java.lang.String)>','<android.view.View: android.view.ViewPropertyAnimator animate()>','<com.android.server.LocationManagerService: android.content.Context access$100(com.android.server.LocationManagerService)>','<android.net.EthernetDataTracker: void privateDnsRouteSet(boolean)>','<com.android.server.am.ReceiverList: java.lang.String toString()>','<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>','<android.net.wifi.WifiApConfigStore: void access$700(android.net.wifi.WifiApConfigStore,com.android.internal.util.IState)>','<com.android.internal.telephony.cdma.CdmaCall: void hangup()>','<com.android.internal.os.LoggingPrintStream: void setError()>','<android.net.wifi.WifiStateMachine$SupplicantStoppingState: void <init>(android.net.wifi.WifiStateMachine)>','<android.net.wifi.p2p.WifiP2pService$ClientInfo: void <init>(android.net.wifi.p2p.WifiP2pService,android.os.Messenger,android.net.wifi.p2p.WifiP2pService$1)>','<android.view.View$AttachInfo$InvalidateInfo$1: void <init>()>','<android.net.wifi.WifiStateMachine$DisconnectingState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.server.MountService: java.util.HashMap access$700(com.android.server.MountService)>','<android.net.wifi.WifiMonitor: void access$400(int)>','<android.net.wifi.WifiInfo: java.lang.String access$002(android.net.wifi.WifiInfo,java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: void getCellBroadcastSmsConfig(android.os.Message)>','<android.net.sip.SipAudioCall: void <clinit>()>','<android.telephony.ServiceState: void setStateOff()>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: void enter()>','<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>','<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>','<android.graphics.NinePatch: boolean hasAlpha()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: android.net.http.RequestHandle access$400(android.webkit.HTML5VideoViewProxy$PosterDownloader)>','<android.inputmethodservice.ExtractEditText: void setSpan_internal(java.lang.Object,int,int,int)>','<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUriForPath(java.lang.String)>','<android.hardware.usb.UsbInterface$1: void <init>()>','<android.view.IWindowSession$Stub$Proxy: void performDeferredDestroy(android.view.IWindow)>','<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>','<com.android.internal.policy.impl.SimUnlockScreen: void onPause()>','<com.android.server.am.TransferPipe: void closeFd(int)>','<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>','<com.android.internal.telephony.RIL: void getVoiceRegistrationState(android.os.Message)>','<com.android.internal.app.AlertController: void setTitle(java.lang.CharSequence)>','<android.content.res.StringBlock: void finalize()>','<android.content.IntentSender: java.lang.String toString()>','<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData[] newArray(int)>','<android.net.DhcpStateMachine: void access$1400(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.view.Window: android.view.Window access$200(android.view.Window)>','<com.android.internal.telephony.IccFileTypeMismatch: void <init>(java.lang.String)>','<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>','<com.android.server.WifiService: boolean access$2800(com.android.server.WifiService,android.os.IBinder)>','<com.android.internal.net.NetworkStatsFactory: void <init>(java.io.File)>','<com.android.internal.telephony.RIL: void explicitCallTransfer(android.os.Message)>','<android.os.Parcel: void writeNoException()>','<android.content.IntentFilter: java.lang.String getAction(int)>','<android.widget.AbsListView$AdapterDataSetObserver: void onInvalidated()>','<android.app.backup.BackupHelperDispatcher: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>','<android.util.MathUtils: float max(int,int)>','<com.android.internal.telephony.PhoneBase: java.lang.String getMsisdn()>','<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>','<android.view.accessibility.AccessibilityRecord: void <clinit>()>','<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>','<android.database.AbstractWindowedCursor: boolean isNull(int)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$100(com.android.internal.telephony.gsm.GsmServiceStateTracker)>','<com.android.server.AlarmManagerService: java.util.ArrayList access$900(com.android.server.AlarmManagerService)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>','<android.media.MediaRouter$SimpleCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)>','<android.view.GLES20DisplayList: void setStaticMatrix(android.graphics.Matrix)>','<android.text.DynamicLayout: int getEllipsizedWidth()>','<android.app.FragmentManagerImpl: void attachActivity(android.app.Activity)>','<com.android.internal.telephony.cdma.sms.BearerData: com.android.internal.telephony.cdma.sms.BearerData decode(byte[])>','<android.media.AudioService: void setStreamVolume(int,int,int)>','<com.android.server.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow: void <init>(android.widget.Editor$SuggestionsPopupWindow,android.content.Context,int)>','<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>','<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>','<android.bluetooth.BluetoothTetheringDataTracker: void setDependencyMet(boolean)>','<com.android.internal.policy.impl.PatternUnlockScreen$1: void <init>(com.android.internal.policy.impl.PatternUnlockScreen)>','<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>','<android.net.wifi.WifiStateMachine: android.os.Message access$3600(android.net.wifi.WifiStateMachine)>','<android.widget.PopupWindow: boolean access$600(android.widget.PopupWindow)>','<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.connectivity.Tethering: void handleTetherIfaceChange()>','<android.webkit.GeolocationPermissions: void <init>()>','<android.widget.ListView: void onSizeChanged(int,int,int,int)>','<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>','<android.net.Uri$OpaqueUri: java.lang.String getHost()>','<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.Object[] getValues()>','<android.net.http.Request: java.lang.String getHostPort()>','<android.view.View: int getSuggestedMinimumHeight()>','<com.android.internal.view.IInputContext$Stub$Proxy: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>','<com.android.server.wm.ScreenRotationAnimation: void createRotationMatrix(int,int,int,android.graphics.Matrix)>','<android.widget.AbsSpinner: void onMeasure(int,int)>','<android.view.ViewGroup: void setClipToPadding(boolean)>','<android.bluetooth.BluetoothTetheringDataTracker$1: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.view.Window: android.view.WindowManager getWindowManager()>','<android.media.effect.SingleFilterEffect: void release()>','<com.android.internal.telephony.cat.ResultCode: void <clinit>()>','<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture getSurfaceTexture()>','<android.app.Fragment: void onLowMemory()>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDescription(java.lang.CharSequence)>','<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>','<android.net.INetworkPolicyListener$Stub$Proxy: void onMeteredIfacesChanged(java.lang.String[])>','<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_FRONT(android.renderscript.RenderScript)>','<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>','<android.webkit.WebSettingsClassic: void setAutoFillEnabled(boolean)>','<com.android.server.pm.Installer: int setForwardLockPerm(java.lang.String,int)>','<android.app.ContextImpl$ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>','<android.view.View: boolean isShown()>','<android.widget.SearchView$4: void <init>(android.widget.SearchView)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void onScreenTurnedOff()>','<android.view.ViewRootImpl$2: void removeCallback(android.view.SurfaceHolder$Callback)>','<android.server.BluetoothHealthProfileHandler: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>','<com.android.internal.widget.ActionBarView: boolean hasExpandedActionView()>','<android.filterfw.core.NativeBuffer: void attachToFrame(android.filterfw.core.Frame)>','<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>','<android.view.ViewRootImpl: void die(boolean)>','<android.widget.Scroller: int getCurrX()>','<android.database.sqlite.SQLiteOpenHelper: void <clinit>()>','<com.android.server.PowerManagerService: boolean access$7200(com.android.server.PowerManagerService)>','<android.widget.RemoteViews$OnClickHandler: void <init>()>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findFocus(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>','<android.os.FileUtils: void <clinit>()>','<android.widget.TextView$BufferType: android.widget.TextView$BufferType[] values()>','<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)>','<android.net.INetworkPolicyManager$Stub$Proxy: void snoozeLimit(android.net.NetworkTemplate)>','<android.nfc.tech.IsoDep: int getTimeout()>','<android.server.BluetoothBondState: void <init>(android.content.Context,android.server.BluetoothService)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$2: void <clinit>()>','<android.widget.RelativeLayout$DependencyGraph$Node: boolean isPooled()>','<android.renderscript.RenderScript: void nScriptSetVarI(int,int,int)>','<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>','<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.server.AppWidgetService$AppWidgetId: void <init>()>','<com.android.internal.app.AlertController: android.widget.Button access$400(com.android.internal.app.AlertController)>','<com.android.server.WifiService: com.android.server.WifiService$LockList access$2700(com.android.server.WifiService)>','<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>','<com.android.internal.view.IInputContext$Stub$Proxy: void commitText(java.lang.CharSequence,int)>','<com.android.server.am.ActivityRecord: void applyOptionsLocked()>','<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.cat.TextMessage$1: com.android.internal.telephony.cat.TextMessage createFromParcel(android.os.Parcel)>','<android.webkit.WebViewCore: android.webkit.DeviceMotionService getDeviceMotionService()>','<android.os.INetworkManagementService$Stub: void <init>()>','<android.view.AccessibilityInteractionController: void focusSearchClientThread(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.content.SyncResult$1: android.content.SyncResult createFromParcel(android.os.Parcel)>','<android.webkit.ViewManager: void endZoom()>','<com.android.internal.telephony.gsm.GSMPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>','<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getPendingMmiCodes()>','<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String,boolean)>','<com.android.server.EventLogTags: void writeBackupTransportFailure(java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>','<android.content.pm.VerifierInfo$1: android.content.pm.VerifierInfo createFromParcel(android.os.Parcel)>','<android.widget.Spinner: android.content.Context access$300(android.widget.Spinner)>','<android.webkit.WebSettingsClassic: boolean getLightTouchEnabled()>','<android.view.InflateException: void <init>(java.lang.String)>','<android.webkit.WebView: void onWindowFocusChanged(boolean)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>','<com.android.internal.telephony.test.ModelInterpreter: void progressConnectingToActive()>','<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>','<android.webkit.WebViewCore: void access$2500(android.webkit.WebViewCore,int,boolean,int,int)>','<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.telephony.ServiceState: void setState(int)>','<android.graphics.RectF: boolean intersect(float,float,float,float)>','<android.widget.Editor$PinnedPopupWindow: void <init>(android.widget.Editor)>','<android.bluetooth.BluetoothDeviceProfileState$2: void <init>(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.server.MountService$MountObbAction: void handleError()>','<android.view.HardwareRenderer: void setEnabled(boolean)>','<android.media.AudioService: int[] access$3200(android.media.AudioService)>','<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean)>','<android.app.Dialog: void setCancelable(boolean)>','<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int getStarts(int)>','<android.renderscript.RenderScript$RSMessageHandler: void <init>()>','<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,int)>','<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)>','<com.android.server.net.NetworkStatsService: void <init>(android.content.Context,android.os.INetworkManagementService,android.app.IAlarmManager)>','<com.android.server.wm.WindowManagerService: void bulkSetParameters(int,int)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>','<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>','<android.content.pm.Signature: java.lang.String toCharsString()>','<android.view.WindowOrientationListener$SensorEventListenerImpl: int getProposedRotation()>','<com.android.internal.telephony.sip.SipCommandInterface: void acknowledgeIncomingGsmSmsWithPdu(boolean,java.lang.String,android.os.Message)>','<android.widget.TextView$2: void run()>','<android.media.AudioService$SoundPoolListenerThread: void run()>','<com.android.internal.policy.impl.PatternUnlockScreen: int access$700(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.internal.telephony.PhoneBase: void notifyDataActivity()>','<com.android.internal.view.BaseSurfaceHolder: void <init>()>','<android.content.res.StringBlock$StyleIDs: void <init>()>','<android.view.View: int getSystemUiVisibility()>','<android.app.PendingIntent: android.content.IntentSender getIntentSender()>','<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)>','<android.view.ViewRootImpl$1: void run()>','<com.android.server.wm.WindowState: boolean getGivenInsetsPendingLw()>','<android.net.wifi.WifiManager: boolean saveConfiguration()>','<android.os.Parcel: int dataPosition()>','<android.net.http.Headers: void setLocation(java.lang.String)>','<android.text.style.TypefaceSpan: int describeContents()>','<android.text.method.DigitsKeyListener: void <clinit>()>','<android.view.animation.Animation: boolean isFillEnabled()>','<android.webkit.WebViewClassic: boolean canZoomOut()>','<android.view.ViewRootImpl$ResizedInfo: void <init>(android.view.ViewRootImpl)>','<com.android.internal.widget.EditableInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>','<android.filterfw.core.FrameFormat: void <init>(int,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void updateServiceLocation()>','<android.os.DropBoxManager$Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>','<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>','<android.view.GLES20Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType)>','<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()>','<android.util.MathUtils: int random(int)>','<com.android.internal.telephony.Connection: java.lang.String getCnapName()>','<android.view.animation.Animation$2: void run()>','<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>','<android.net.SntpClient: boolean requestTime(java.lang.String,int)>','<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>','<android.net.EthernetDataTracker$InterfaceObserver: void interfaceRemoved(java.lang.String)>','<android.text.SpannableStringBuilder: void <init>()>','<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>','<android.graphics.Path: void transform(android.graphics.Matrix)>','<android.widget.TextView$ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.telephony.PhoneProxy: void setUnitTestMode(boolean)>','<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequestHandler,java.lang.String)>','<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void readFromParcelLocked(android.os.Parcel)>','<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<android.webkit.WebViewClassic$ProxyReceiver: void <init>(android.webkit.WebViewClassic$1)>','<android.content.res.Resources$Theme: void dump(int,java.lang.String,java.lang.String)>','<android.util.EventLog: void <init>()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$2700(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.filterfw.core.GLFrame: int getFboId()>','<android.text.style.BulletSpan: void <init>(int,int)>','<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>','<android.media.IAudioService$Stub$Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String)>','<android.view.PointerIcon$1: android.view.PointerIcon createFromParcel(android.os.Parcel)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void showSoftInput(int,android.os.ResultReceiver)>','<android.content.SyncStorageEngine: boolean equals(android.os.Bundle,android.os.Bundle)>','<android.view.inputmethod.CompletionInfo$1: android.view.inputmethod.CompletionInfo createFromParcel(android.os.Parcel)>','<android.view.HardwareRenderer$Gl20Renderer: android.graphics.SurfaceTexture createSurfaceTexture(android.view.HardwareLayer)>','<android.util.AndroidException: void <init>(java.lang.String,java.lang.Throwable)>','<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.widget.AbsListView$SavedState$1: android.widget.AbsListView$SavedState createFromParcel(android.os.Parcel)>','<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar,java.lang.StringBuilder)>','<android.webkit.WebViewClassic: boolean access$3100(android.webkit.WebViewClassic,int,int,boolean,int)>','<android.graphics.Bitmap$1: void <init>()>','<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>','<android.app.LoadedApk$ServiceDispatcher$RunConnection: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder,int)>','<android.media.AudioService: android.media.AudioService$SoundPoolCallback access$1702(android.media.AudioService,android.media.AudioService$SoundPoolCallback)>','<android.view.GLES20RecordingCanvas: void drawPoint(float,float,android.graphics.Paint)>','<android.os.Parcel: void writeMapInternal(java.util.Map)>','<android.opengl.GLLogWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: boolean moreDataPresent()>','<android.media.RemoteControlClient: void access$1500(android.media.RemoteControlClient)>','<android.text.StaticLayout: void finish()>','<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>','<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>','<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>','<android.service.dreams.IDreamManager$Stub$Proxy: void setDreamComponent(android.content.ComponentName)>','<android.widget.HorizontalScrollView: void fling(int)>','<android.view.View: int getMeasuredHeightAndState()>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void onPause()>','<android.net.http.RequestHandle: void setRedirectCount(int)>','<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>','<android.app.backup.IBackupManager$Stub$Proxy: void fullRestore(android.os.ParcelFileDescriptor)>','<android.widget.AdapterViewAnimator: int modulo(int,int)>','<android.app.KeyguardManager$1: void <init>(android.app.KeyguardManager,android.app.KeyguardManager$OnKeyguardExitResult)>','<android.telephony.ServiceState: int getNetworkType()>','<com.android.server.AlarmManagerService: void removeLocked(android.app.PendingIntent)>','<android.telephony.ServiceState$1: android.telephony.ServiceState[] newArray(int)>','<android.view.accessibility.AccessibilityRecord: void setScrollX(int)>','<android.graphics.Rect: boolean equals(java.lang.Object)>','<com.android.internal.telephony.CallManager: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<android.speech.tts.TextToSpeech$6: void <init>(android.speech.tts.TextToSpeech)>','<android.media.AudioService$ScoClient: void decCount()>','<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void <init>(java.util.Locale,android.view.AccessibilityIterators$1)>','<android.widget.Spinner: int getDropDownHorizontalOffset()>','<android.net.NetworkUtils: int prefixLengthToNetmaskInt(int)>','<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.opengl.GLLogWrapper: void glColorMask(boolean,boolean,boolean,boolean)>','<android.app.LoaderManagerImpl$LoaderInfo: void onLoadCanceled(android.content.Loader)>','<android.net.wifi.ScanResult: int describeContents()>','<android.test.mock.MockContentResolver: boolean releaseProvider(android.content.IContentProvider)>','<android.content.res.ObbInfo: java.lang.String toString()>','<com.android.server.StatusBarManagerService: void onPanelRevealed()>','<android.accessibilityservice.UiTestAutomationBridge: void waitForIdle(long,long)>','<com.android.server.wm.WindowState: boolean getNeedsMenuLw(android.view.WindowManagerPolicy$WindowState)>','<android.view.GLES20Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>','<android.webkit.WebViewClassic$InvokeListBox: void <init>(android.webkit.WebViewClassic,java.lang.String[],int[],int[],android.webkit.WebViewClassic$1)>','<android.widget.TextView: void setMinLines(int)>','<android.app.backup.IBackupManager$Stub$Proxy: void dataChanged(java.lang.String)>','<android.app.admin.IDevicePolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.IInstrumentationWatcher$Stub: android.os.IBinder asBinder()>','<android.text.Layout$Ellipsizer: char charAt(int)>','<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()>','<com.android.server.net.NetworkPolicyManagerService$7: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.app.SharedPreferencesImpl$EditorImpl: void <init>(android.app.SharedPreferencesImpl)>','<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>','<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.view.View: void saveHierarchyState(android.util.SparseArray)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$302(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>','<android.net.http.HttpsConnection: void initializeEngine(java.io.File)>','<android.net.DhcpStateMachine: com.android.internal.util.State access$1200(android.net.DhcpStateMachine)>','<android.view.ScaleGestureDetector$SimpleOnScaleGestureListener: void <init>()>','<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>','<android.database.sqlite.SQLiteSession: void endTransaction(android.os.CancellationSignal)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void verifyUnlock()>','<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)>','<android.app.Activity: android.app.FragmentManager getFragmentManager()>','<com.android.internal.policy.impl.PhoneWindowManager$14: void onShown(android.os.IBinder)>','<com.android.internal.telephony.RIL: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.view.IInputConnectionWrapper: void setComposingText(java.lang.CharSequence,int)>','<android.os.PerformanceCollector: void setPerformanceResultsWriter(android.os.PerformanceCollector$PerformanceResultsWriter)>','<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>','<android.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)>','<android.content.OperationApplicationException: void <init>(int)>','<com.android.server.input.InputManagerService$5: void <init>(com.android.server.input.InputManagerService,android.hardware.input.KeyboardLayout[])>','<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>','<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.os.HandlerThread: boolean quit()>','<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>','<android.widget.ListView: boolean isOpaque()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>','<com.android.server.am.ActivityRecord: void windowsDrawn()>','<android.net.wifi.WifiStateMachine$DriverLoadingState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.server.WifiService: int getFrequencyBand()>','<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.telephony.PhoneNumberUtils: void <clinit>()>','<android.view.Window$LocalWindowManager: void <init>(android.view.Window,android.view.WindowManager,boolean)>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>','<android.view.CompatibilityInfoHolder: void set(android.content.res.CompatibilityInfo)>','<android.telephony.SmsCbMessage: boolean isEtwsMessage()>','<com.android.internal.telephony.DefaultPhoneNotifier: int convertCallState(com.android.internal.telephony.Phone$State)>','<android.content.IClipboard$Stub$Proxy: boolean hasPrimaryClip()>','<android.net.wifi.IWifiManager$Stub$Proxy: void acquireMulticastLock(android.os.IBinder,java.lang.String)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>','<android.widget.TextView: void resolveDrawables()>','<android.widget.SearchView$2: void run()>','<com.android.internal.policy.impl.KeyguardViewMediator$2: void <init>(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: java.lang.String toString()>','<android.view.accessibility.AccessibilityRecord: boolean isImportantForAccessibility()>','<android.media.effect.EffectContext: android.media.effect.EffectContext createWithCurrentGlContext()>','<android.hardware.LegacySensorManager$LegacyListener: void onAccuracyChanged(android.hardware.Sensor,int)>','<android.webkit.WebViewClassic: int findAll(java.lang.String)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void notifyInputDevicesChanged(int[])>','<android.view.View: boolean isScrollbarFadingEnabled()>','<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>','<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: void noteStopSensorLocked(int,int)>','<android.provider.ContactsContract$Directory: void notifyDirectoryChange(android.content.ContentResolver)>','<com.android.server.InputMethodManagerService: com.android.server.wm.WindowManagerService access$1000(com.android.server.InputMethodManagerService)>','<android.webkit.CallbackProxy$11: void <clinit>()>','<android.webkit.ViewManager$ChildView: void access$500(android.webkit.ViewManager$ChildView)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>','<android.os.AsyncTask$2: void <init>(android.os.AsyncTask)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiStoppedLocked()>','<android.view.GLES20RecordingCanvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>','<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.Drawable newDrawable()>','<android.content.pm.PackageStats: void <init>(java.lang.String)>','<android.webkit.WebView: void requestImageRef(android.os.Message)>','<android.telephony.GsmCellIdentity: int getMcc()>','<android.view.ViewRootImpl: void dispatchCheckFocus()>','<com.android.server.input.InputManagerService$4: void <init>(com.android.server.input.InputManagerService,java.util.ArrayList)>','<com.android.server.location.LocationBasedCountryDetector$1: void <init>(com.android.server.location.LocationBasedCountryDetector)>','<com.android.internal.telephony.DataConnectionTracker$DataRoamingSettingObserver: void <init>(com.android.internal.telephony.DataConnectionTracker,android.os.Handler)>','<com.android.uiautomator.core.QueryController: void <clinit>()>','<android.content.Context: void sendBroadcast(android.content.Intent,int)>','<android.widget.TextView: int getImeActionId()>','<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)>','<android.widget.OverScroller: int getStartY()>','<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>','<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>','<android.net.sip.SimpleSessionDescription$Media: void removeRtpPayload(int)>','<com.android.server.PowerManagerService$12: void <init>(com.android.server.PowerManagerService)>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: com.android.server.usb.UsbSettingsManager$AccessoryFilter read(org.xmlpull.v1.XmlPullParser)>','<android.content.SyncStorageEngine$DayStats: void <init>(int)>','<android.webkit.ViewManager$1: void <init>(android.webkit.ViewManager,android.view.SurfaceView)>','<android.view.SurfaceView$MyWindow: void dispatchGetNewSurface()>','<android.webkit.WebViewClassic$8: java.lang.Object doInBackground(java.lang.Object[])>','<android.widget.RemoteViews: void showPrevious(int)>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>','<android.net.wifi.WifiStateMachine$TetheredState: void enter()>','<com.android.internal.policy.impl.GlobalActions: boolean access$000(com.android.internal.policy.impl.GlobalActions)>','<android.server.BluetoothA2dpService: boolean access$400(android.server.BluetoothA2dpService,android.bluetooth.BluetoothDevice)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>','<android.os.Binder: java.lang.String getInterfaceDescriptor()>','<com.android.internal.app.ActionBarImpl: void removeTabAt(int)>','<android.view.textservice.SpellCheckerInfo: int describeContents()>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$FindAllRequest access$6400(android.webkit.WebViewClassic)>','<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>','<com.android.internal.telephony.RestrictedState: void setCsNormalRestricted(boolean)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void viewClicked(boolean)>','<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionInfo)>','<android.filterfw.core.VertexFrame: float[] getFloats()>','<android.app.ActivityManager: int getFrontActivityScreenCompatMode()>','<com.android.server.AlarmManagerService: int access$1408(com.android.server.AlarmManagerService)>','<android.media.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasPremiumRate()>','<com.android.internal.view.BaseSurfaceHolder: void removeCallback(android.view.SurfaceHolder$Callback)>','<android.renderscript.RenderScript: void nContextBindProgramVertex(int)>','<android.widget.AbsListView: boolean onRemoteAdapterConnected()>','<com.android.server.am.BatteryStatsService: boolean isOnBattery()>','<com.android.server.AppWidgetServiceImpl: void deleteHostLocked(com.android.server.AppWidgetServiceImpl$Host)>','<com.android.internal.policy.impl.IconUtilities: void <init>(android.content.Context)>','<com.android.server.input.PersistentDataStore: java.lang.String[] getKeyboardLayouts(java.lang.String)>','<com.android.internal.widget.TransportControlView: void onFinishInflate()>','<android.nfc.INfcTag$Stub$Proxy: boolean isPresent(int)>','<android.os.Process: void <init>()>','<android.media.AudioService$RcClientDeathHandler: void <init>(android.media.AudioService,android.os.IBinder,android.app.PendingIntent)>','<android.view.KeyEvent: int getFlags()>','<android.os.BatteryStats$Uid$Proc: void <init>()>','<android.net.nsd.NsdServiceInfo: void setPort(int)>','<android.widget.TextView$Drawables: void <init>()>','<android.os.Bundle: double getDouble(java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>','<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()>','<android.net.http.RequestQueue$SyncFeeder: boolean haveRequest(org.apache.http.HttpHost)>','<com.android.internal.telephony.Connection: int getCnapNamePresentation()>','<android.content.Context: java.lang.String getString(int,java.lang.Object[])>','<android.app.Activity: void onLowMemory()>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.view.InputBindResult$1: void <init>()>','<android.media.IRemoteVolumeObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <clinit>()>','<android.os.PatternMatcher: void <clinit>()>','<android.net.http.Request: void cancel()>','<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceRxThrottle(java.lang.String)>','<android.os.ParcelFileDescriptor: int getFd()>','<android.widget.AbsListView$SavedState: void writeToParcel(android.os.Parcel,int)>','<com.android.vcard.VCardConfig: boolean shouldUseQuotedPrintable(int)>','<com.android.internal.widget.LockPatternUtils: java.lang.String patternToString(java.util.List)>','<com.android.internal.view.IInputConnectionWrapper: void beginBatchEdit()>','<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>','<android.net.NetworkStats: long getElapsedRealtimeAge()>','<android.os.storage.StorageVolume: void setStorageId(int)>','<android.view.HardwareLayer: android.view.DisplayList getDisplayList()>','<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>','<android.webkit.DeviceMotionService: java.lang.Runnable access$300(android.webkit.DeviceMotionService)>','<com.android.internal.util.CharSequences$1: java.lang.String toString()>','<android.webkit.WebViewClassic$Factory: android.webkit.WebViewFactoryProvider$Statics getStatics()>','<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>','<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>','<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>','<com.android.internal.widget.PointerLocationView: void onInputDeviceChanged(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isKeyguardLocked()>','<com.android.server.wm.WindowManagerService$AnimationRunnable: void run()>','<com.android.internal.content.PackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>','<android.net.LinkCapabilities: void <init>(android.net.LinkCapabilities)>','<android.net.wifi.WifiStateTracker: boolean isTeardownRequested()>','<com.android.internal.telephony.DataConnectionAc: int getRefCountSync()>','<com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$1700(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo[] newArray(int)>','<android.server.BluetoothService: void disconnectDevices()>','<android.webkit.WebSettingsClassic: void setBlockNetworkLoads(boolean)>','<com.android.server.WifiService$LockList: int access$2500(com.android.server.WifiService$LockList)>','<android.graphics.PointF: void offset(float,float)>','<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>','<com.android.server.am.ActivityRecord$Token: void windowsVisible()>','<com.android.server.pm.PackageManagerService: java.lang.String access$2200(com.android.server.pm.PackageManagerService)>','<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>','<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec: java.lang.String toString()>','<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>','<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray$1: android.appwidget.AppWidgetHostView$ParcelableSparseArray createFromParcel(android.os.Parcel)>','<com.android.uiautomator.core.QueryController: int getPatternCount(com.android.uiautomator.core.UiSelector)>','<android.widget.ExpandableListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>','<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.util.SparseIntArray: int indexOfKey(int)>','<android.accounts.IAccountManagerResponse$Stub: void <init>()>','<com.android.internal.telephony.GsmAlphabet: void setEnabledSingleShiftTables(int[])>','<com.android.server.wm.WindowState: boolean isVisibleOrBehindKeyguardLw()>','<android.server.BluetoothService: boolean notifyIncomingA2dpConnection(java.lang.String,boolean)>','<android.bluetooth.BluetoothUuid: boolean isAvrcpController(android.os.ParcelUuid)>','<android.widget.AdapterViewAnimator: int access$000(android.widget.AdapterViewAnimator)>','<android.media.AudioService: void adjustMasterVolume(int,int)>','<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long)>','<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: int getMetadataCount()>','<android.widget.Editor: void setFrame()>','<com.android.server.NotificationManagerService$NotificationRecord: java.lang.String toString()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLetters(android.content.ComponentName,int)>','<android.nfc.NdefRecord: android.nfc.NdefRecord[] parse(java.nio.ByteBuffer,boolean)>','<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>','<android.net.wifi.WifiWatchdogStateMachine$3: void onChange(boolean)>','<android.view.ViewGroup: void addView(android.view.View,int)>','<android.util.SparseIntArray: int valueAt(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>','<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress)>','<android.view.GLES20RecordingCanvas: void drawCircle(float,float,float,android.graphics.Paint)>','<android.app.Activity: void onRestart()>','<com.android.server.wm.WindowManagerService$LayoutFields: float access$1302(com.android.server.wm.WindowManagerService$LayoutFields,float)>','<com.android.internal.telephony.BaseCommands: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<android.widget.Editor$SelectionModifierCursorController: void onDetached()>','<android.app.ContextImpl$28: java.lang.Object createService(android.app.ContextImpl)>','<android.filterfw.core.FilterFunction: java.lang.String toString()>','<com.android.server.connectivity.Vpn: void <init>(android.content.Context,com.android.server.ConnectivityService$VpnCallback)>','<android.view.HardwareRenderer$Gl20Renderer$1: void <init>(android.view.HardwareRenderer$Gl20Renderer,android.view.View)>','<android.content.IntentSender$1: android.content.IntentSender[] newArray(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: com.android.internal.os.BatteryStatsImpl$Timer getWakeTime(int)>','<com.android.server.AppWidgetServiceImpl: void updateAppWidgetOptions(int,android.os.Bundle)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailAlphaTag()>','<android.webkit.WebViewClassic: void findNext(boolean)>','<android.webkit.WebViewDatabaseClassic: boolean hasFormData()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoicemail()>','<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$302(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.text.style.ForegroundColorSpan: int getForegroundColor()>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.hardware.usb.UsbEndpoint$1: android.hardware.usb.UsbEndpoint createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cdma.CDMAPhone: void startDtmf(char)>','<android.telephony.NeighboringCellInfo: int getLac()>','<android.widget.RemoteViews: void <clinit>()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$7400(android.net.wifi.WifiStateMachine)>','<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>','<android.view.ScaleGestureDetector: float getScaleFactor()>','<android.bluetooth.BluetoothDeviceProfileState: void access$10600(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.app.IActivityManager$WaitResult$1: android.app.IActivityManager$WaitResult[] newArray(int)>','<android.webkit.SearchBox$SearchBoxListener: void <init>()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean handleInCallMmiCommands(java.lang.String)>','<android.hardware.usb.UsbDevice: void <clinit>()>','<android.inputmethodservice.Keyboard: int access$300(android.inputmethodservice.Keyboard)>','<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>','<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: java.lang.String access$202(android.preference.PreferenceGroupAdapter$PreferenceLayout,java.lang.String)>','<android.text.HtmlToSpannedConverter: void endPrefixMapping(java.lang.String)>','<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>','<android.database.CursorWrapper: boolean moveToFirst()>','<com.android.internal.telephony.AdnRecord: void <init>(java.lang.String,java.lang.String,java.lang.String[])>','<android.os.Parcel: void writeDoubleArray(double[])>','<com.android.server.wm.WindowManagerService: boolean updateRotationUncheckedLocked(boolean)>','<android.widget.ExpandableListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)>','<android.webkit.CookieManagerClassic$1: java.lang.Void doInBackground(java.lang.Void[])>','<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.location.GpsLocationProvider: void access$200(com.android.server.location.GpsLocationProvider)>','<android.net.wifi.WifiStateMachine$DriverLoadedState: boolean processMessage(android.os.Message)>','<com.android.internal.util.StateMachine: int getProcessedMessagesCount()>','<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>','<android.database.AbstractWindowedCursor: short getShort(int)>','<android.webkit.WebViewClassic: int getVisibleTitleHeight()>','<com.android.internal.util.StateMachine$ProcessedMessages: int size()>','<android.net.sip.SipAudioCall$Listener: void onReadyToCall(android.net.sip.SipAudioCall)>','<com.android.server.PowerManagerService: boolean isScreenOn()>','<android.media.MediaRouter$Static$1: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>','<android.content.Intent$FilterComparison: int hashCode()>','<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>','<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)>','<android.net.wifi.WifiStateMachine: android.app.PendingIntent access$9302(android.net.wifi.WifiStateMachine,android.app.PendingIntent)>','<android.widget.Editor: android.graphics.drawable.Drawable access$2400(android.widget.Editor)>','<android.server.BluetoothService: java.lang.String getRemoteName(java.lang.String)>','<android.content.pm.PackageParser$Activity: java.lang.String toString()>','<android.hardware.Camera$Parameters: int getMinExposureCompensation()>','<android.accounts.IAccountManager$Stub$Proxy: android.accounts.Account[] getAccounts(java.lang.String)>','<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: boolean isLatinLetter(char)>','<android.webkit.BrowserFrame$2: void proceed()>','<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)>','<android.webkit.ZoomManager$ScaleDetectorListener: void <init>(android.webkit.ZoomManager,android.webkit.ZoomManager$1)>','<android.content.ContentProviderOperation$1: void <init>()>','<com.android.internal.policy.impl.SimPukUnlockScreen: android.app.ProgressDialog access$100(com.android.internal.policy.impl.SimPukUnlockScreen)>','<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>','<android.animation.ObjectAnimator: void setFloatValues(float[])>','<com.android.internal.telephony.sip.SipCommandInterface: void setLocationUpdates(boolean,android.os.Message)>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy: void onError(int,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: void hideBootMessages()>','<android.util.MathUtils: float abs(float)>','<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])>','<com.android.server.am.BackupRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.pm.ApplicationInfo,int)>','<android.webkit.CallbackProxy: boolean uiOverrideKeyEvent(android.view.KeyEvent)>','<android.location.GpsStatus: void setTimeToFirstFix(int)>','<android.app.SharedPreferencesImpl: java.util.WeakHashMap access$500(android.app.SharedPreferencesImpl)>','<com.android.internal.telephony.test.ModelInterpreter: void setAutoProgressConnectingCall(boolean)>','<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker$Estimator)>','<android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>','<android.net.wifi.WifiNative: boolean p2pFlush()>','<com.android.server.PowerManagerService: int access$2076(com.android.server.PowerManagerService,int)>','<com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap: void <init>()>','<android.util.NtpTrustedTime: boolean hasCache()>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProfileName(java.lang.String)>','<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.animation.IntKeyframeSet: int getIntValue(float)>','<android.net.wifi.WifiNative: boolean startFilteringMulticastV4Packets()>','<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()>','<com.android.server.BatteryService: int getPlugType()>','<com.android.internal.telephony.cat.ResponseData: void <init>()>','<com.android.server.PreferredComponent: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>','<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternDetected(java.util.List)>','<android.database.sqlite.SQLiteDatabase: void <clinit>()>','<com.android.server.am.ActivityManagerService$1: boolean allowFilterResult(com.android.server.am.BroadcastFilter,java.util.List)>','<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChanged(int[],int)>','<android.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.view.View: void onResolvedTextAlignmentReset()>','<com.android.server.LocationManagerService: void validatePendingIntent(android.app.PendingIntent)>','<android.hardware.LegacySensorManager$LegacyListener: void onSensorChanged(android.hardware.SensorEvent)>','<android.content.res.XmlBlock$Parser: int getAttributeIntValue(int,int)>','<com.android.internal.statusbar.StatusBarIconList: void removeIcon(int)>','<com.android.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>','<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>','<android.widget.ImageView: void jumpDrawablesToCurrentState()>','<com.android.server.wm.WindowManagerService: void removeWindowLocked(com.android.server.wm.Session,com.android.server.wm.WindowState)>','<com.android.server.pm.PackageManagerService: void access$1500(com.android.server.pm.PackageManagerService,java.lang.String,android.content.pm.PackageParser$Package,int)>','<com.android.internal.os.AndroidPrintStream: void log(java.lang.String)>','<android.webkit.WebViewCore: void setInstallableWebApp()>','<com.android.server.ConnectivityService: void access$2000(com.android.server.ConnectivityService)>','<android.graphics.Picture$RecordingCanvas: void <init>(android.graphics.Picture,int)>','<android.animation.AnimatorSet$1: void <init>(android.animation.AnimatorSet,java.util.ArrayList)>','<com.android.internal.telephony.sip.SipPhone: void updateServiceLocation()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void dispose()>','<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.widget.ActionBarContextView: void onMeasure(int,int)>','<android.app.Activity: void onPostResume()>','<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<com.android.server.WifiService: void enforceWakeSourcePermission(int,int)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>','<android.webkit.DeviceOrientationService: void start()>','<android.graphics.Path: android.graphics.Path$FillType getFillType()>','<android.view.InputEvent: void prepareForReuse()>','<android.content.res.Configuration: int hashCode()>','<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.widget.ImageView: boolean getBaselineAlignBottom()>','<android.hardware.input.InputManager: void access$100(android.hardware.input.InputManager,int[])>','<android.app.ContextImpl: void grantUriPermission(java.lang.String,android.net.Uri,int)>','<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()>','<android.graphics.Rect: void scale(float)>','<com.android.server.am.PendingIntentRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.PendingIntentRecord$Key,int)>','<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>','<com.android.server.wm.Session: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>','<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)>','<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>','<android.app.ContextImpl$23: java.lang.Object createService(android.app.ContextImpl)>','<com.android.internal.telephony.cat.ItemsIconId: void <init>()>','<android.os.StrictMode$Span: void finish()>','<android.hardware.Camera$Parameters: boolean isAutoExposureLockSupported()>','<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>','<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int)>','<android.widget.CursorAdapter: android.database.Cursor getCursor()>','<com.android.server.sip.SipWakeupTimer: void stop()>','<com.android.server.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int)>','<android.text.PackedIntVector: void <init>(int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>','<android.filterfw.core.CachedFrameManager: void clearCache()>','<android.net.sip.SipAudioCall$1: void onCallChangeFailed(android.net.sip.SipSession,int,java.lang.String)>','<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState findMainWindow()>','<android.accounts.AccountManagerService$8: java.lang.String toDebugString(long)>','<android.app.ApplicationErrorReport$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void <init>(com.android.server.sip.SipService,android.net.sip.SipProfile,int,int)>','<android.inputmethodservice.InputMethodService: void <init>()>','<android.text.Editable$Factory: void <init>()>','<android.view.ViewConfiguration: int getKeyRepeatTimeout()>','<com.android.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>','<android.webkit.CallbackProxy$7: void onClick(android.content.DialogInterface,int)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeDown()>','<android.media.AudioManager: boolean isMicrophoneMute()>','<android.net.wifi.WifiNative: boolean p2pGroupAdd()>','<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>','<com.android.server.wm.DimSurface: void hide()>','<com.android.internal.widget.LockPatternUtils: void removeUser(int)>','<android.content.ClipData$Item: void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri)>','<android.app.Notification$1: void <init>()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>','<android.widget.RemoteViews$ViewGroupAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>','<android.net.Uri$AbstractHierarchicalUri: int getPort()>','<android.view.IWindowSession$Stub: android.view.IWindowSession asInterface(android.os.IBinder)>','<com.android.server.LocationManagerService: java.util.HashSet access$1600(com.android.server.LocationManagerService)>','<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void setTimeout(long)>','<android.inputmethodservice.KeyboardView$2: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>','<android.media.AudioService: java.lang.Object access$5500(android.media.AudioService)>','<android.os.StrictMode: void access$1200(int)>','<android.graphics.Rect: boolean contains(int,int,int,int)>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer access$200(com.android.internal.app.ActionBarImpl)>','<android.app.ActivityManager: int getMemoryClass()>','<android.webkit.WebViewClassic: boolean canGoBack()>','<android.speech.tts.TextToSpeech$3: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<com.android.uiautomator.core.UiDevice: boolean pressRecentApps()>','<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>','<com.android.internal.policy.impl.FaceUnlock: boolean isRunning()>','<android.view.View: void setScrollBarSize(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void separateConnection(int,android.os.Message)>','<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>','<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>','<com.android.internal.telephony.PhoneProxy: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>','<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipHelper access$300(com.android.server.sip.SipSessionGroup)>','<android.widget.AutoCompleteTextView$DropDownItemClickListener: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1)>','<android.filterfw.core.GLFrame: void flushGPU(java.lang.String)>','<android.view.View: boolean hasStaticLayer()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<com.android.server.LightsService$1: boolean getFlashlightEnabled()>','<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>','<android.net.wifi.WifiStateMachine: android.os.INetworkManagementService access$300(android.net.wifi.WifiStateMachine)>','<android.webkit.HTML5VideoView: void setOnErrorListener(android.webkit.HTML5VideoViewProxy)>','<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>','<android.view.accessibility.AccessibilityEvent: void setAction(int)>','<android.filterfw.core.GLFrame: void init(android.filterfw.core.GLEnvironment)>','<android.webkit.WebViewClassic: void setNetworkAvailable(boolean)>','<android.telephony.SmsCbMessage: int getSerialNumber()>','<com.android.vcard.exception.VCardInvalidCommentLineException: void <init>()>','<com.android.internal.telephony.ISms$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>','<com.android.internal.telephony.SmsMessageBase$TextEncodingDetails: java.lang.String toString()>','<com.android.server.BatteryService: boolean isPowered(int)>','<android.widget.AbsListView: android.view.View focusSearch(int)>','<android.os.Parcel: char[] createCharArray()>','<android.webkit.WebView: boolean overlayHorizontalScrollbar()>','<android.app.Activity: boolean hasWindowFocus()>','<android.net.DhcpStateMachine$WaitBeforeRenewalState: void <init>(android.net.DhcpStateMachine)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: int access$1202(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,int)>','<android.widget.TextView: int getMinEms()>','<com.android.internal.telephony.gsm.GSMPhone: boolean isCspPlmnEnabled()>','<android.view.GLES20RecordingCanvas: void recycle()>','<com.android.internal.view.IInputContext$Stub$Proxy: void deleteSurroundingText(int,int)>','<android.widget.FastScroller: java.lang.Object[] getSections()>','<android.view.MotionEvent: int findPointerIndex(int)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>','<com.android.internal.policy.impl.PasswordUnlockScreen$3: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.app.ContextImpl$28: void <init>()>','<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>','<android.app.ActivityManagerProxy: boolean testIsSystemReady()>','<com.android.server.wm.StartingData: void <init>(java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int)>','<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>','<com.android.internal.util.AsyncService: void <init>()>','<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>','<android.content.IntentSender$1: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>','<android.os.Parcel: void readException(int,java.lang.String)>','<android.widget.AbsListView: void positionSelector(int,android.view.View)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportFailedPasswordAttempt()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>','<com.android.server.pm.Settings: void writeLPr()>','<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getIMSI()>','<com.android.server.am.ActivityManagerService: void scheduleAppGcLocked(com.android.server.am.ProcessRecord)>','<android.content.ContentProviderNative: void <init>()>','<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void activateCellBroadcastSms(int,android.os.Message)>','<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>','<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.NetworkStatsHistory: long getBucketDuration()>','<com.android.internal.telephony.cat.Duration$1: com.android.internal.telephony.cat.Duration createFromParcel(android.os.Parcel)>','<android.widget.ListPopupWindow: int getHeight()>','<android.app.AlertDialog: com.android.internal.app.AlertController access$000(android.app.AlertDialog)>','<android.location.Address: void setPostalCode(java.lang.String)>','<android.app.ActivityThread: void freeTextLayoutCachesIfNeeded(int)>','<android.app.IServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Fragment: void onHiddenChanged(boolean)>','<android.provider.Telephony$Mms$Inbox: void <clinit>()>','<android.widget.AbsListView$FlingRunnable: android.widget.OverScroller access$1000(android.widget.AbsListView$FlingRunnable)>','<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils$InsertHelper,int)>','<android.os.Registrant: android.os.Handler getHandler()>','<android.net.InterfaceConfiguration: int describeContents()>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setSpellCheckerEnabled(boolean)>','<android.telephony.CellIdentity: void <init>(android.telephony.CellIdentity)>','<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()>','<com.android.internal.os.ProcessStats: void onLoadChanged(float,float,float)>','<android.os.IMessenger$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.NotificationManagerService: void <clinit>()>','<android.util.MathUtils: float max(float,float)>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: int getChangingConfigurations()>','<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)>','<com.android.server.wm.WindowStateAnimator: boolean stepAnimationLocked(long)>','<android.view.View: void setPivotY(float)>','<com.android.internal.policy.impl.RecentApplicationsDialog$1: void run()>','<android.net.LinkProperties: java.lang.String toString()>','<com.android.internal.telephony.cdma.CdmaMmiCode: void handleMessage(android.os.Message)>','<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>','<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,long)>','<com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler: java.lang.Object access$300(com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler)>','<android.os.Debug: int getThreadAllocSize()>','<android.animation.LayoutTransition: void setStagger(int,long)>','<android.net.ProxyProperties: java.net.Proxy makeProxy()>','<android.app.ActivityThread$ContextCleanupInfo: void <init>()>','<android.telephony.SmsCbMessage: void <clinit>()>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiNative access$1300(android.net.wifi.WifiStateMachine)>','<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>','<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>','<android.app.FragmentManagerImpl: int reverseTransit(int)>','<android.webkit.CallbackProxy$3: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean endCall()>','<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>','<android.text.method.ArrowKeyMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>','<android.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>','<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerRing(java.lang.String)>','<android.graphics.Region: android.graphics.Rect getBounds()>','<android.os.MessageQueue: void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>','<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)>','<com.android.internal.view.menu.MenuBuilder: void flagActionItems()>','<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>','<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>','<android.os.RegistrantList: void remove(android.os.Handler)>','<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)>','<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>','<android.hardware.ISerialManager$Stub: void <init>()>','<android.webkit.WebViewClassic: java.lang.String getUrl()>','<android.view.textservice.TextInfo: int getSequence()>','<android.media.IRingtonePlayer$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.http.AndroidHttpClient$1: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<android.view.ViewStub: void <init>(android.content.Context,int)>','<android.webkit.WebViewClassic: void onSizeChanged(int,int,int,int)>','<android.widget.Editor$SelectionModifierCursorController: int getMinTouchOffset()>','<android.util.SparseIntArray: void put(int,int)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)>','<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>','<android.content.IntentFilter: void <init>(android.os.Parcel,android.content.IntentFilter$1)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()>','<android.content.pm.PackageParser: java.lang.String access$100(java.lang.String,java.lang.String,java.lang.CharSequence,int,java.lang.String[],java.lang.String[])>','<android.graphics.drawable.AnimationDrawable: void run()>','<android.os.storage.IMountService$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.ViewRootImpl: android.view.IWindowSession getWindowSession(android.os.Looper)>','<android.view.Choreographer: long getFrameTime()>','<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.net.http.Request: void setConnection(android.net.http.Connection)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()>','<com.android.internal.telephony.CallManager: java.util.List getAllPhones()>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>','<android.inputmethodservice.IInputMethodSessionWrapper: void viewClicked(boolean)>','<android.media.AudioService$4: void <init>(android.media.AudioService)>','<android.os.StrictMode$VmPolicy: void <clinit>()>','<android.widget.RelativeLayout$DependencyGraph: void clear()>','<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>','<android.content.OperationApplicationException: void <init>(java.lang.String,int)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendEmails(java.util.List)>','<com.android.server.wm.WindowState: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getSubscriberId()>','<android.media.AudioService: void adjustVolume(int,int)>','<com.android.server.sip.SipSessionGroup: void processDialogTerminated(javax.sip.DialogTerminatedEvent)>','<android.view.View: void needGlobalAttributesUpdate(boolean)>','<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHostAddress(int,byte[])>','<android.webkit.WebViewCore: void pauseTimers()>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)>','<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>','<android.widget.ListPopupWindow$ListSelectorHider: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1)>','<android.webkit.WebSettings$RenderPriority: android.webkit.WebSettings$RenderPriority[] values()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getFullWifiLockTime(long,int)>','<android.net.nsd.NsdServiceInfo: void <init>(java.lang.String,java.lang.String,android.net.nsd.DnsSdTxtRecord)>','<android.database.sqlite.SQLiteDatabase: void finalize()>','<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>','<com.android.server.net.NetworkStatsCollection: void readLegacyNetwork(java.io.File)>','<android.app.ApplicationPackageManager$ResourceName: void <init>(android.content.pm.ComponentInfo,int)>','<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.os.Debug: void resetAllCounts()>','<android.net.wifi.WifiMonitor: void notifyNetworkStateChange(android.net.NetworkInfo$DetailedState,java.lang.String,int)>','<android.app.backup.BackupAgent: void fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)>','<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>','<android.view.animation.Animation: void start()>','<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>','<android.text.method.ScrollingMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>','<android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)>','<android.content.pm.IPackageManager$Stub$Proxy: void finishPackageInstall(int)>','<com.android.server.PowerManagerService: int access$2900(com.android.server.PowerManagerService)>','<com.android.internal.view.menu.BaseMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter$Callback)>','<android.util.SparseIntArray: void <init>()>','<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)>','<com.android.internal.telephony.gsm.SimTlv: boolean isValidObject()>','<android.text.method.DateTimeKeyListener: void <clinit>()>','<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>','<android.content.ISyncAdapter$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.cat.CatCmdMessage: void <init>(android.os.Parcel)>','<android.view.FocusFinder: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>','<android.app.BackStackState$1: android.app.BackStackState createFromParcel(android.os.Parcel)>','<android.widget.AbsListView$3: boolean reportFullscreenMode(boolean)>','<android.net.http.Headers: java.lang.String getContentType()>','<android.view.PointerIcon: android.view.PointerIcon getNullIcon()>','<com.android.internal.telephony.CallManager: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>','<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>','<android.view.View: boolean isLayoutRequested()>','<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.am.ActivityRecord,android.app.IServiceConnection,int,int,android.app.PendingIntent)>','<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>','<android.os.storage.IMountService$Stub$Proxy: void mountObb(java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>','<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()>','<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>','<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>','<android.widget.Spinner: void setPromptId(int)>','<android.text.AndroidBidi: android.text.Layout$Directions directions(int,byte[],int,char[],int,int)>','<android.app.ExpandableListActivity: void <init>()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>','<com.android.internal.telephony.DataConnectionAc: void reqReset()>','<com.android.internal.telephony.DataConnectionTracker: void setEnabled(int,boolean)>','<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>','<com.android.i18n.phonenumbers.NumberParseException$ErrorType: void <clinit>()>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getSystemSharedLibraryNames()>','<android.view.ViewPropertyAnimator$2: void <init>(android.view.ViewPropertyAnimator)>','<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>','<android.os.storage.IMountServiceListener$Stub$Proxy: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>','<android.content.res.AssetManager: android.content.res.AssetManager getSystem()>','<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.media.AudioService: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>','<android.net.wifi.WifiStateMachine: void access$2400(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.webkit.WebHistoryItem: java.lang.String getTitle()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>','<android.webkit.WebViewInputDispatcher: void dispatchUiEvents()>','<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>','<com.android.vcard.VCardParserImpl_V21: void handleType(com.android.vcard.VCardProperty,java.lang.String)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isPossibleNumber(java.lang.String,java.lang.String)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcastRange(int,int)>','<android.net.LocalSocket: void setSoTimeout(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>','<android.net.DummyDataStateTracker: void setDependencyMet(boolean)>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>','<com.android.server.wm.WindowManagerService: boolean viewServerGetFocusedWindow(java.net.Socket)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()>','<android.webkit.WebViewClassic: android.content.Context access$600(android.webkit.WebViewClassic)>','<com.android.server.pm.PackageManagerService: java.lang.String access$3200(com.android.server.pm.PackageManagerService)>','<android.app.DownloadManager$Request: void allowScanningByMediaScanner()>','<android.view.GLES20RecordingCanvas$1: void onAcquired(android.view.GLES20RecordingCanvas)>','<android.database.StaleDataException: void <init>(java.lang.String)>','<android.server.BluetoothService: boolean removeBond(java.lang.String)>','<android.database.sqlite.SQLiteConnection$PreparedStatementCache: void dump(android.util.Printer)>','<android.graphics.drawable.Drawable: boolean isStateful()>','<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>','<android.util.SparseArray: void removeAt(int)>','<android.webkit.HTML5VideoView: void <clinit>()>','<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailAlphaTag()>','<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpirationTimeout(android.content.ComponentName)>','<com.android.internal.app.ActionBarImpl: boolean hasNonEmbeddedTabs()>','<com.android.server.ConnectivityService: java.util.HashSet access$500(com.android.server.ConnectivityService)>','<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)>','<android.net.wifi.WifiStateMachine: void access$3900(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.view.Display: int getHeight()>','<android.webkit.CookieManagerClassic: boolean hasCookies()>','<com.android.internal.telephony.ApnContext: boolean isDisconnected()>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.Duration retrieveDuration(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.server.connectivity.Vpn: boolean prepare(java.lang.String,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void getPreferredNetworkType(android.os.Message)>','<android.util.SparseArray: void <init>()>','<android.net.wifi.WifiManager: boolean reassociate()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pDevice access$7902(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pDevice)>','<android.net.http.HttpLog: void e(java.lang.String)>','<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.view.View: void transformRect(android.graphics.Rect)>','<com.android.server.AlarmManagerService: long timeToNextAlarm()>','<android.widget.Editor$InsertionHandleView$1: void run()>','<android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>','<android.widget.Editor: void beginBatchEdit()>','<android.server.BluetoothAdapterStateMachine: void access$6400(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>','<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>','<android.filterfw.core.StopWatchMap: void stop(java.lang.String)>','<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider$VisibilityListener)>','<android.filterpacks.videoproc.BackDropperFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>','<android.widget.GridView: void layoutChildren()>','<android.widget.SearchView: android.widget.SearchView$SearchAutoComplete access$1200(android.widget.SearchView)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClick(java.lang.String,java.lang.String,int)>','<android.app.Application: void dispatchActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>','<com.android.internal.app.ActionBarImpl: android.content.Context access$1200(com.android.internal.app.ActionBarImpl)>','<android.telephony.SmsCbCmasInfo: void <init>(int,int,int,int,int,int)>','<com.android.server.wm.Session: void dragRecipientExited(android.view.IWindow)>','<android.webkit.WebView: void access$201(android.webkit.WebView)>','<com.android.server.InputMethodManagerService: void access$000(com.android.server.InputMethodManagerService)>','<com.android.internal.os.ProcessStats: int getLastIdleTime()>','<com.android.internal.widget.DigitalClock: void access$200(com.android.internal.widget.DigitalClock)>','<android.app.ActivityManager$RunningServiceInfo: void <init>()>','<android.view.VolumePanel: void <clinit>()>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void executeMessage(android.os.Message)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>','<com.android.internal.telephony.cdma.CDMAPhone: void setRadioPower(boolean)>','<android.text.PackedObjectVector: int size()>','<android.bluetooth.BluetoothProfileState: android.bluetooth.BluetoothDevice access$302(android.bluetooth.BluetoothProfileState,android.bluetooth.BluetoothDevice)>','<android.net.ConnectivityManager: int tether(java.lang.String)>','<android.net.http.SslError: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>','<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)>','<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$6: boolean accept(java.io.File,java.lang.String)>','<android.view.ViewRootImpl: void debug()>','<android.server.BluetoothService: android.server.BluetoothDeviceProperties getDeviceProperties()>','<com.android.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)>','<android.widget.AbsListView: void clearTextFilter()>','<android.app.LoadedApk$WarningContextClassLoader: void setDefaultAssertionStatus(boolean)>','<android.provider.Settings$System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector clickable(boolean)>','<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>','<android.net.nsd.INsdManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.StrictMode$Span: long access$2002(android.os.StrictMode$Span,long)>','<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>','<android.widget.ScrollBarDrawable: void onBoundsChange(android.graphics.Rect)>','<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>','<android.view.GLES20Canvas: void drawPaint(android.graphics.Paint)>','<com.android.internal.view.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl getBatteryStats()>','<android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>','<android.view.Window: void setType(int)>','<com.android.internal.policy.impl.KeyguardViewMediator: void <init>(android.content.Context,com.android.internal.policy.impl.PhoneWindowManager,android.os.LocalPowerManager)>','<com.android.internal.telephony.gsm.GSMPhone: boolean handlePinMmi(java.lang.String)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getProtocol()>','<android.bluetooth.IBluetooth$Stub$Proxy: int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>','<com.android.internal.telephony.BaseCommands: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>','<com.android.internal.widget.ActionBarView$HomeView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>','<android.net.DhcpStateMachine$WaitBeforeStartState: boolean processMessage(android.os.Message)>','<android.net.sip.SimpleSessionDescription: void setEncryption(java.lang.String,java.lang.String)>','<android.view.HardwareRenderer$GlRenderer: void access$100(android.view.HardwareRenderer$GlRenderer,android.view.View$AttachInfo,int)>','<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>','<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>','<android.bluetooth.BluetoothClass$1: android.bluetooth.BluetoothClass[] newArray(int)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeTokenText(int)>','<android.webkit.ZoomControlExternal: boolean isVisible()>','<android.app.Activity: android.content.Intent getIntent()>','<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isErasure()>','<com.android.internal.telephony.gsm.SIMFileHandler: void handleMessage(android.os.Message)>','<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.net.ConnectivityManager: void setNetworkPreference(int)>','<android.provider.Telephony$Mms$Addr: void <init>()>','<android.os.NullVibrator: android.os.NullVibrator getInstance()>','<android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)>','<android.view.KeyEvent: void <init>(long,long,int,int,int)>','<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>','<android.widget.TextView: int getCurrentTextColor()>','<android.app.ProgressDialog: void setProgress(int)>','<android.net.DhcpStateMachine$WaitBeforeRenewalState: void enter()>','<com.android.server.location.GpsLocationProvider: boolean requiresNetwork()>','<com.android.i18n.phonenumbers.PhoneNumberMatch: int end()>','<android.widget.AbsListView$SavedState: java.lang.String toString()>','<android.os.storage.StorageManager$ObbListenerDelegate: int access$200(android.os.storage.StorageManager$ObbListenerDelegate)>','<android.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>','<android.webkit.CallbackProxy: void shutdown()>','<com.android.server.StatusBarManagerService: void updateNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>','<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: long calculateDirectorySize(java.lang.String)>','<android.content.ContextWrapper: java.io.File getObbDir()>','<com.android.internal.util.FileRotator: void rewriteActive(com.android.internal.util.FileRotator$Rewriter,long)>','<android.view.Window: void setBackgroundDrawableResource(int)>','<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>','<android.os.SystemProperties: long getLong(java.lang.String,long)>','<android.webkit.ZoomControlExternal$2: void onClick(android.view.View)>','<android.content.pm.ManifestDigest: void <init>(android.os.Parcel,android.content.pm.ManifestDigest$1)>','<android.app.Fragment: void unregisterForContextMenu(android.view.View)>','<com.android.vcard.VCardParserImpl_V30: void handleParams(com.android.vcard.VCardProperty,java.lang.String)>','<android.net.sip.ISipSession$Stub$Proxy: int getState()>','<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>','<android.util.Base64$Decoder: boolean process(byte[],int,int,boolean)>','<android.graphics.Shader: void <init>()>','<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinished(java.lang.String,boolean)>','<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>','<android.os.UserId: int getUserId(int)>','<android.net.sip.SipProfile: java.lang.String access$1202(android.net.sip.SipProfile,java.lang.String)>','<android.content.res.XmlBlock$Parser: char[] getTextCharacters(int[])>','<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>','<com.android.server.ConnectivityService: void access$2400(com.android.server.ConnectivityService,int,boolean)>','<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,java.lang.String,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean)>','<com.android.vcard.VCardBuilder: void <init>(int)>','<android.location.Location: double access$102(android.location.Location,double)>','<android.widget.SearchView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()>','<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>','<android.renderscript.Element$DataKind: android.renderscript.Element$DataKind valueOf(java.lang.String)>','<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>','<com.android.server.wm.WindowState: boolean isReadyForDisplayIgnoringKeyguard()>','<com.android.internal.util.StateMachine$SmHandler: int access$1800(com.android.internal.util.StateMachine$SmHandler)>','<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)>','<com.android.server.AlarmManagerService$ClockReceiver: void scheduleTimeTickEvent()>','<android.bluetooth.BluetoothDeviceProfileState: void access$6000(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.graphics.Rect$1: android.graphics.Rect createFromParcel(android.os.Parcel)>','<android.util.Log: int w(java.lang.String,java.lang.Throwable)>','<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()>','<com.android.internal.os.AtomicFile: byte[] readFully()>','<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>','<android.telephony.GsmCellIdentity$1: void <init>()>','<android.text.method.TextKeyListener: java.lang.ref.WeakReference access$000(android.text.method.TextKeyListener)>','<android.provider.ContactsContract$DataUsageFeedback: void <clinit>()>','<android.net.IThrottleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.gsm.GsmCallTracker: void handleMessage(android.os.Message)>','<android.content.res.ColorStateList: void <init>(int[][],int[])>','<android.net.INetworkPolicyManager$Stub$Proxy: void unregisterListener(android.net.INetworkPolicyListener)>','<com.android.server.location.GpsLocationProvider: void access$1500(com.android.server.location.GpsLocationProvider,int)>','<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>','<android.app.backup.IRestoreObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.widget.ActionBarContextView: void onAnimationCancel(android.animation.Animator)>','<android.os.IPowerManager$Stub$Proxy: void goToSleepWithReason(long,int)>','<android.inputmethodservice.InputMethodService$1: void <init>(android.inputmethodservice.InputMethodService)>','<com.android.internal.telephony.PhoneProxy: void setMute(boolean)>','<android.net.wifi.WifiStateMachine$5: void run()>','<com.android.server.am.UriPermissionOwner: void addReadPermission(com.android.server.am.UriPermission)>','<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>','<android.os.ICancellationSignal$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.wifi.WpsInfo$1: android.net.wifi.WpsInfo[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void registerForVoiceCallEnded(android.os.Handler,int,java.lang.Object)>','<com.android.server.location.MockProvider: boolean requestSingleShotFix()>','<com.android.internal.app.AlertController: int access$900(com.android.internal.app.AlertController)>','<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>','<android.server.BluetoothEventLoop: void onPropertyChanged(java.lang.String[])>','<android.widget.AdapterView: void checkFocus()>','<com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState[] values()>','<com.android.server.pm.Settings$1: void <init>(com.android.server.pm.Settings)>','<android.nfc.TechListParcel: java.lang.String[][] getTechLists()>','<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>','<android.net.wifi.WifiNative: java.lang.String p2pServDiscReq(java.lang.String,java.lang.String)>','<android.widget.LinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>','<android.graphics.SurfaceTexture: void detachFromGLContext()>','<android.view.View: boolean hasWindowFocus()>','<android.app.SharedPreferencesImpl: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>','<android.app.WallpaperManager: void setStream(java.io.InputStream)>','<com.android.internal.telephony.MccTable: void <init>()>','<android.accounts.AccountManager$BaseFutureTask$1: java.lang.Object call()>','<android.net.wifi.WifiMonitor: void notifySupplicantStateChange(int,java.lang.String,java.lang.String,android.net.wifi.SupplicantState)>','<android.net.wifi.WifiStateMachine: void enableBackgroundScanCommand(boolean)>','<android.view.ViewGroup: void bringChildToFront(android.view.View)>','<android.location.ILocationManager$Stub$Proxy: boolean sendNiResponse(int,int)>','<android.database.AbstractCursor: boolean isBeforeFirst()>','<android.widget.ListPopupWindow: android.os.Handler access$900(android.widget.ListPopupWindow)>','<android.media.effect.effects.BackDropperEffect$1: void onLearningDone(android.filterpacks.videoproc.BackDropperFilter)>','<com.android.internal.policy.impl.AccountUnlockScreen: void onResume()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>','<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>','<com.android.server.wm.WindowState: boolean hideLw(boolean)>','<com.android.internal.telephony.test.ModelInterpreter: void shutdown()>','<android.widget.BaseAdapter: boolean isEnabled(int)>','<com.android.server.am.ActivityManagerService: boolean getPackageAskScreenCompat(java.lang.String)>','<android.webkit.WebViewDatabase: boolean hasFormData()>','<android.view.View: void getLocationOnScreen(int[])>','<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request)>','<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>','<com.android.server.Watchdog$RebootRequestReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>','<android.webkit.WebView: void postUrl(java.lang.String,byte[])>','<android.server.BluetoothA2dpService: void access$000(android.server.BluetoothA2dpService)>','<android.content.pm.IPackageManager$Stub$Proxy: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: int access$1200(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<android.speech.tts.TextToSpeech: int setSpeechRate(float)>','<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>','<android.webkit.BrowserFrame: android.webkit.SearchBox getSearchBox()>','<android.hardware.usb.UsbDevice: void <init>(java.lang.String,int,int,int,int,int,android.os.Parcelable[])>','<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider()>','<android.os.Parcel: void readByteArray(byte[])>','<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)>','<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String access$100()>','<android.media.AudioService$VolumeStreamState: boolean adjustIndex(int,int)>','<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)>','<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>','<com.android.i18n.phonenumbers.RegexCache$LRUCache: void put(java.lang.Object,java.lang.Object)>','<android.bluetooth.BluetoothSocket$SdpHelper: int doSdp()>','<com.android.internal.telephony.PhoneProxy: void queryCdmaRoamingPreference(android.os.Message)>','<com.android.internal.location.DummyLocationProvider: void setAccuracy(int)>','<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.internal.util.AsyncChannel$1ConnectAsync: void <init>(com.android.internal.util.AsyncChannel,android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>','<android.widget.ProgressBar$RefreshData: void <clinit>()>','<com.android.internal.telephony.DataConnection$DcActiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause)>','<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.widget.ScrollView: boolean pageScroll(int)>','<com.android.internal.os.HandlerCaller$MyHandler: void <init>(com.android.internal.os.HandlerCaller,android.os.Looper)>','<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.hardware.LegacySensorManager$LmsFilter: void <init>()>','<android.graphics.Matrix$1: boolean preRotate(float)>','<com.android.server.net.NetworkPolicyManagerService: void unregisterListener(android.net.INetworkPolicyListener)>','<android.location.ILocationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.util.TypedValue: float getFloat()>','<android.app.ContextImpl: java.io.File getExternalCacheDir()>','<com.android.server.sip.SipSessionGroup: boolean access$2100(java.lang.String,java.util.EventObject)>','<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>','<com.android.internal.statusbar.StatusBarNotification: void <init>()>','<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>','<android.app.ContextImpl$23: void <init>()>','<android.view.accessibility.AccessibilityRecord: void enforceNotSealed()>','<android.accounts.AccountManagerService$Session: void onResult(android.os.Bundle)>','<android.app.IBackupAgent$Stub: android.os.IBinder asBinder()>','<com.android.internal.os.AtomicFile: java.io.File getBaseFile()>','<android.animation.ValueAnimator$AnimationHandler: void start()>','<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>','<com.android.server.MountService$MountServiceHandler: void handleMessage(android.os.Message)>','<android.view.ViewGroup$ViewLocationHolder: void <clinit>()>','<android.database.AbstractWindowedCursor: long getLong(int)>','<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>','<com.android.server.sip.SipSessionGroup$RegisterCommand: void <init>(com.android.server.sip.SipSessionGroup,int)>','<android.view.accessibility.AccessibilityNodeInfoCache: void <init>()>','<android.webkit.CallbackProxy: void doUpdateVisitedHistory(java.lang.String,boolean)>','<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>','<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>','<android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parsePackageLite(java.lang.String,int)>','<android.net.sip.SipAudioCall: boolean isOnHold()>','<com.android.server.am.BatteryStatsService$1: void <init>(com.android.server.am.BatteryStatsService)>','<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>','<android.webkit.HTML5VideoViewProxy: boolean access$000(android.graphics.SurfaceTexture,int,int,int,int)>','<android.speech.tts.TextToSpeech$8: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)>','<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void cleanUp()>','<android.webkit.ViewManager$3: void <init>(android.webkit.ViewManager)>','<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>','<android.widget.HorizontalScrollView: void requestLayout()>','<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>','<com.android.internal.telephony.DataConnectionAc: void resetSync()>','<android.net.sip.SipAudioCall: boolean access$800(android.net.sip.SipAudioCall)>','<com.android.internal.telephony.CallManager: int getServiceState()>','<android.text.style.SuggestionSpan$1: void <init>()>','<android.media.AudioService: void playSoundEffectVolume(int,float)>','<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>','<android.view.View: void onWindowVisibilityChanged(int)>','<com.android.server.am.AppErrorResult: void <init>()>','<com.android.server.wm.WindowManagerService: void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerService$OnHardKeyboardStatusChangeListener)>','<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveCpuLocked(java.lang.String,long,long)>','<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>','<android.webkit.WebViewClassic: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.ActivityThread$ApplicationThread: void scheduleResumeActivity(android.os.IBinder,boolean)>','<android.bluetooth.BluetoothAdapter: int getConnectionState()>','<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>','<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>','<com.android.internal.util.StateMachine$SmHandler: void <init>(android.os.Looper,com.android.internal.util.StateMachine,com.android.internal.util.StateMachine$1)>','<com.android.server.pm.UserManager: java.util.List getUsers()>','<com.android.server.input.InputManagerService: int access$700(com.android.server.input.InputManagerService)>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] getIsimImpu()>','<android.app.Instrumentation: java.lang.Object access$200(android.app.Instrumentation)>','<android.text.style.SuggestionRangeSpan: void <init>()>','<android.server.BluetoothA2dpService: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>','<com.android.internal.telephony.PhoneBase: void unregisterForT53AudioControlInfo(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOnLocked()>','<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>','<android.nfc.tech.IsoDep: void <init>(android.nfc.Tag)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByViewId(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.graphics.drawable.RotateDrawable: void <init>()>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>','<android.app.DownloadManager: void <clinit>()>','<android.widget.ZoomButtonsController: void access$200(android.widget.ZoomButtonsController)>','<com.android.internal.os.RuntimeInit$UncaughtHandler: void <init>(com.android.internal.os.RuntimeInit$1)>','<android.accounts.AccountManagerResponse: void onError(int,java.lang.String)>','<android.webkit.WebSettingsClassic: void setSyntheticLinksEnabled(boolean)>','<com.android.internal.widget.LockPatternUtils: boolean isPukUnlockScreenEnable()>','<android.graphics.Path: void quadTo(float,float,float,float)>','<android.content.IIntentReceiver$Stub: android.content.IIntentReceiver asInterface(android.os.IBinder)>','<com.android.internal.policy.impl.PhoneWindowManager: int getSystemDecorRectLw(android.graphics.Rect)>','<com.android.internal.telephony.IccCardStatus$CardState: com.android.internal.telephony.IccCardStatus$CardState[] values()>','<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>','<android.server.BluetoothAdapterStateMachine$BluetoothOn: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()>','<android.net.wifi.p2p.WifiP2pGroup: void setOwner(android.net.wifi.p2p.WifiP2pDevice)>','<com.android.internal.telephony.gsm.GSMPhone: void setMute(boolean)>','<com.android.server.am.ServiceRecord: void cancelNotification()>','<com.android.internal.view.IInputContextCallback$Stub: android.os.IBinder asBinder()>','<com.android.internal.os.storage.ExternalStorageFormatter: void updateProgressDialog(int)>','<android.bluetooth.BluetoothClass$Service: void <init>()>','<com.android.internal.app.ActionBarImpl: void <init>(android.app.Dialog)>','<android.view.View: void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable,android.graphics.Region)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>','<android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$9700(android.net.wifi.WifiStateMachine)>','<android.net.wifi.WifiManager: boolean isDualBandSupported()>','<android.bluetooth.BluetoothClass: int hashCode()>','<android.widget.TextView: void setText(int)>','<android.animation.PropertyValuesHolder: void calculateValue(float)>','<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>','<android.graphics.ColorMatrix: void set(float[])>','<com.android.server.MountService: int mountVolume(java.lang.String)>','<android.filterfw.core.InputPort: void setSourcePort(android.filterfw.core.OutputPort)>','<android.filterfw.core.Frame: void markReadOnly()>','<android.database.sqlite.SQLiteDirectCursorDriver: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal)>','<android.app.ApplicationPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>','<android.filterpacks.base.FrameBranch: void process(android.filterfw.core.FilterContext)>','<android.webkit.ViewManager$ChildView: void setBounds(int,int,int,int)>','<android.app.ActivityManager$MemoryInfo$1: void <init>()>','<android.view.ViewGroup: void removeViewsInLayout(int,int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean handlePinMmi(java.lang.String)>','<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean isLeadingZeroPossible()>','<android.webkit.CallbackProxy$2: void onClick(android.content.DialogInterface,int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>','<android.widget.TextView: float getTextScaleX()>','<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>','<android.app.LoadedApk: android.app.IServiceConnection forgetServiceDispatcher(android.content.Context,android.content.ServiceConnection)>','<android.webkit.WebViewCore: void access$5200(android.webkit.WebViewCore,int)>','<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>','<android.accounts.AccountManagerResponse: void <clinit>()>','<android.view.Window: void setContainer(android.view.Window)>','<android.media.MediaRouter$RouteInfo$1: void dispatchRemoteVolumeUpdate(int,int)>','<android.os.TokenWatcher: java.lang.String access$200(android.os.TokenWatcher)>','<android.preference.PreferenceFragment: android.widget.ListView getListView()>','<com.android.server.net.NetworkPolicyManagerService: void snoozeLimit(android.net.NetworkTemplate)>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: void exit()>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void reset()>','<android.hardware.usb.UsbInterface: int getInterfaceClass()>','<android.telephony.PhoneStateListener: void onOtaspChanged(int)>','<android.net.wifi.WifiWatchdogStateMachine: int access$4004(android.net.wifi.WifiWatchdogStateMachine)>','<android.animation.ValueAnimator: void <clinit>()>','<android.content.pm.PackageParser: android.content.pm.Signature stringToSignature(java.lang.String)>','<android.text.format.Time: java.lang.String format(java.lang.String)>','<android.view.InputDevice$MotionRange: float access$600(android.view.InputDevice$MotionRange)>','<android.net.wifi.WifiStateMachine: void access$16800(android.net.wifi.WifiStateMachine)>','<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>','<android.accounts.AccountManagerService: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>','<com.android.internal.os.BatteryStatsImpl$Uid: void initUserActivityLocked()>','<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()>','<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>','<android.app.Dialog: void onStop()>','<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void write(java.io.OutputStream)>','<android.net.ConnectivityManager: boolean requestRouteToHostAddress(int,java.net.InetAddress)>','<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>','<android.app.ActivityThread: void access$1800(android.app.ActivityThread,android.app.ActivityThread$BindServiceData)>','<android.os.Debug: int getThreadAllocCount()>','<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>','<android.security.KeyStore: boolean unlock(java.lang.String)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String)>','<android.webkit.WebSettingsClassic: void setSavePassword(boolean)>','<com.android.internal.policy.impl.PhoneWindowManager: void updateOrientationListenerLp()>','<android.widget.FrameLayout: int getForegroundGravity()>','<android.content.pm.PackageParser$Provider: java.lang.String toString()>','<com.android.server.pm.PackageManagerService$MeasureParams: void handleReturnCode()>','<android.media.AudioService: int getStreamVolume(int)>','<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.ViewGroup$ViewLocationHolder: int compareTo(java.lang.Object)>','<android.webkit.WebViewCore$EventHub: int access$800(android.webkit.WebViewCore$EventHub)>','<android.text.TextDirectionHeuristics$TriState: android.text.TextDirectionHeuristics$TriState valueOf(java.lang.String)>','<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>','<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList,android.os.Parcel)>','<com.android.internal.telephony.DefaultPhoneNotifier: int convertDataState(com.android.internal.telephony.Phone$DataState)>','<android.net.DhcpStateMachine$RunningState: boolean processMessage(android.os.Message)>','<android.content.res.ObbInfo: void <init>()>','<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>','<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendRinging(javax.sip.RequestEvent,java.lang.String)>','<android.app.ContextImpl$10: java.lang.Object createStaticService()>','<android.net.wifi.WifiManager: boolean startScan()>','<android.net.wifi.WifiStateMachine: void access$10800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: void parseType1EmailFile(int)>','<android.net.wifi.WifiConfiguration: int getAuthType()>','<android.widget.LinearLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyDeath()>','<android.nfc.TechListParcel: void writeToParcel(android.os.Parcel,int)>','<android.widget.AdapterViewAnimator$1$1: void run()>','<com.android.internal.policy.impl.LockScreen: android.media.AudioManager access$300(com.android.internal.policy.impl.LockScreen)>','<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)>','<android.view.KeyCharacterMap: void <init>(android.os.Parcel,android.view.KeyCharacterMap$1)>','<android.filterfw.core.FrameFormat: boolean mayBeCompatibleWith(android.filterfw.core.FrameFormat)>','<android.telephony.SignalStrength: boolean isGsm()>','<android.app.ApplicationPackageManager: void grantPermission(java.lang.String,java.lang.String)>','<com.android.internal.app.ActionBarImpl: void removeAllTabs()>','<android.widget.ListPopupWindow: boolean isShowing()>','<android.webkit.WebCoreThreadWatchdog: void resume()>','<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)>','<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.policy.impl.PhoneWindowManager: int checkAddPermission(android.view.WindowManager$LayoutParams)>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(java.lang.String,java.lang.Object[])>','<android.app.SearchDialog$5: void <init>(android.app.SearchDialog)>','<android.os.AsyncTask$SerialExecutor: void scheduleNext()>','<android.net.wifi.WifiStateMachine: void sendBluetoothAdapterStateChange(int)>','<android.widget.RemoteViews$Action: void <init>(android.widget.RemoteViews$1)>','<com.android.server.location.PassiveProvider: int getAccuracy()>','<com.android.internal.widget.SlidingTab$2: void <init>(com.android.internal.widget.SlidingTab,boolean,int,int)>','<android.widget.RemoteViews$SetDrawableParameters: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.content.IntentFilter: java.util.Iterator schemesIterator()>','<android.net.wifi.p2p.WifiP2pConfig: void <init>(android.net.wifi.p2p.WifiP2pConfig)>','<android.net.Uri$HierarchicalUri: java.lang.String getScheme()>','<android.os.Parcel: android.os.Bundle readBundle()>','<android.net.http.Headers: void setEtag(java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$1: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)>','<android.webkit.WebSettingsClassic: boolean getBlockNetworkLoads()>','<android.view.View: void setMinimumWidth(int)>','<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(java.lang.String)>','<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbEtwsInfo getEtwsInfo()>','<android.server.BluetoothEventLoop$1: void handleMessage(android.os.Message)>','<android.os.PowerManager: void userActivity(long,boolean)>','<android.filterfw.core.SyncRunner: void beginProcessing()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>','<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendOptions(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String)>','<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String)>','<android.widget.CheckedTextView: void onPaddingChanged(int)>','<android.hardware.usb.UsbInterface$1: android.hardware.usb.UsbInterface[] newArray(int)>','<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>','<com.android.server.BatteryService: android.content.Context access$200(com.android.server.BatteryService)>','<android.webkit.ZoomManager: boolean isZoomPickerVisible()>','<android.view.ViewGroup: void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean)>','<android.net.wifi.SupplicantStateTracker: android.net.wifi.WifiConfigStore access$900(android.net.wifi.SupplicantStateTracker)>','<com.android.internal.telephony.PhoneProxy: boolean isCspPlmnEnabled()>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: void <init>()>','<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab getSelectedTab()>','<android.opengl.GLLogWrapper: void glPointParameterf(int,float)>','<android.content.pm.IPackageMoveObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>','<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>','<android.content.ClipData$Item: java.lang.CharSequence coerceToText(android.content.Context)>','<android.hardware.input.KeyboardLayout: int compareTo(android.hardware.input.KeyboardLayout)>','<android.accounts.Account: int describeContents()>','<android.content.pm.InstrumentationInfo$1: android.content.pm.InstrumentationInfo createFromParcel(android.os.Parcel)>','<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>','<android.hardware.LegacySensorManager: void <init>(android.hardware.SensorManager)>','<android.net.wifi.p2p.WifiP2pManager$Channel: void <init>(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>','<com.android.server.PowerManagerService: android.content.BroadcastReceiver access$3900(com.android.server.PowerManagerService)>','<android.net.wifi.WifiStateMachine: void access$10100(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.content.SyncResult: void <clinit>()>','<com.android.internal.telephony.test.ModelInterpreter: void <init>(java.io.InputStream,java.io.OutputStream)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1$1: void <init>(android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1)>','<com.android.server.am.ActivityManagerService: void access$500(com.android.server.am.ActivityManagerService,int,int)>','<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>','<android.text.Layout: int getLineEnd(int)>','<com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState valueOf(java.lang.String)>','<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>','<com.android.internal.telephony.BaseCommands: void unregisterForVoiceRadioTechChanged(android.os.Handler)>','<android.view.Choreographer: void doScheduleVsync()>','<android.widget.ImageView: int getImageAlpha()>','<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>','<android.content.Intent: void <init>()>','<android.os.storage.StorageManager: void registerListener(android.os.storage.StorageEventListener)>','<android.widget.AbsListView: int getListPaddingBottom()>','<android.inputmethodservice.IInputMethodSessionWrapper: void finishInput()>','<android.media.IAudioService$Stub$Proxy: void adjustLocalOrRemoteStreamVolume(int,int)>','<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>','<android.view.KeyCharacterMap$1: android.view.KeyCharacterMap createFromParcel(android.os.Parcel)>','<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>','<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)>','<android.filterfw.core.SyncRunner: void run()>','<android.graphics.Region: boolean set(android.graphics.Rect)>','<android.os.ParcelFormatException: void <init>(java.lang.String)>','<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult$Status)>','<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.PendingIntent$1: void <init>()>','<com.android.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>','<android.webkit.WebIconDatabaseClassic: void close()>','<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1)>','<com.android.server.usb.UsbDeviceManager$UsbHandler$1: void <init>(com.android.server.usb.UsbDeviceManager$UsbHandler)>','<android.widget.AdapterViewAnimator: void applyTransformForChildAtIndex(android.view.View,int)>','<com.android.server.LightsService$2: void handleMessage(android.os.Message)>','<android.server.BluetoothService: boolean setName(java.lang.String)>','<android.nfc.NdefMessage: void <clinit>()>','<android.widget.AbsSeekBar: int getKeyProgressIncrement()>','<android.app.IBackupAgent$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectCustomSlowCalls()>','<com.android.internal.telephony.cdma.CdmaCall: void connectionDisconnected(com.android.internal.telephony.cdma.CdmaConnection)>','<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>','<android.widget.AbsSpinner: void resetList()>','<android.widget.AdapterViewAnimator: void advance()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void finishInput()>','<android.os.StrictMode: void decrementExpectedActivityCount(java.lang.Class)>','<android.location.ILocationManager$Stub$Proxy: void setTestProviderLocation(java.lang.String,android.location.Location)>','<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>','<android.util.SparseIntArray: int size()>','<com.android.server.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>','<android.content.res.TypedArray: boolean hasValue(int)>','<android.text.TextPaint: void <init>(android.graphics.Paint)>','<android.media.IAudioService$Stub$Proxy: int getRemoteStreamMaxVolume()>','<android.location.GpsStatus: java.lang.Iterable getSatellites()>','<android.webkit.WebView: android.view.View getZoomControls()>','<android.net.Uri$StringUri: java.lang.String getPath()>','<com.android.internal.telephony.sip.SipPhone: void queryTTYMode(android.os.Message)>','<android.speech.tts.TextToSpeech: android.content.Context access$1100(android.speech.tts.TextToSpeech)>','<android.app.backup.IBackupManager$Stub: void <init>()>','<android.os.StrictMode: java.lang.ThreadLocal access$700()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>','<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>','<android.content.pm.PermissionGroupInfo$1: android.content.pm.PermissionGroupInfo createFromParcel(android.os.Parcel)>','<android.view.View$3: void <init>(android.view.View,int)>','<android.app.Instrumentation: android.app.Instrumentation$ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation$ActivityResult,boolean)>','<android.content.res.AssetManager$AssetInputStream: void <init>(android.content.res.AssetManager,int,android.content.res.AssetManager$1)>','<android.app.ApplicationPackageManager: void updateUserName(int,java.lang.String)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType valueOf(java.lang.String)>','<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()>','<android.net.http.RequestQueue$ActivePool: void logState()>','<com.android.internal.widget.LockPatternUtils: long setLockoutAttemptDeadline()>','<android.os.storage.IObbActionListener$Stub: android.os.IBinder asBinder()>','<android.view.accessibility.AccessibilityEvent$1: android.view.accessibility.AccessibilityEvent createFromParcel(android.os.Parcel)>','<com.android.server.am.TransferPipe: void setBufferPrefix(java.lang.String)>','<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionMethod()>','<android.webkit.ClientCertRequestHandler$1: void run()>','<com.android.internal.telephony.sip.SipCommandInterface: void writeSmsToRuim(int,java.lang.String,android.os.Message)>','<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)>','<android.animation.AnimatorInflater: void <init>()>','<android.content.ClipData$Item: void <init>(android.content.Intent)>','<android.database.BulkCursorDescriptor: void <clinit>()>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>','<com.android.internal.telephony.PhoneBase: int disableApnType(java.lang.String)>','<android.net.http.LoggingEventHandler: void data(byte[],int)>','<android.preference.PreferenceManager: void dispatchActivityStop()>','<android.webkit.WebViewCore: void access$1000(android.webkit.WebViewCore,int)>','<android.app.Service: void startForeground(int,android.app.Notification)>','<android.text.BoringLayout: boolean getLineContainsTab(int)>','<android.graphics.PixelFormat: void <clinit>()>','<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter$Callback)>','<android.server.BluetoothAdapterStateMachine: void access$4700(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.server.BluetoothHealthProfileHandler: android.server.BluetoothService access$200(android.server.BluetoothHealthProfileHandler)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: android.content.Context access$600(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getEsn()>','<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener)>','<android.server.BluetoothBondState: int getAttempt(java.lang.String)>','<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>','<android.content.IntentFilter$1: void <init>()>','<android.webkit.HTML5VideoViewProxy: void access$1300(android.webkit.HTML5VideoViewProxy,int)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>','<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)>','<com.android.server.am.ActivityManagerService$5: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<android.webkit.WebViewClassic: void setCertificate(android.net.http.SslCertificate)>','<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>','<android.net.wifi.SupplicantStateTracker$HandshakeState: void enter()>','<com.android.internal.policy.impl.PhoneWindowManager$12: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCellInfoChanged(android.telephony.CellInfo)>','<android.view.IWindowSession$Stub$Proxy: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>','<android.os.PerformanceCollector: android.os.Bundle endSnapshot()>','<android.net.TrafficStats: void incrementOperationCount(int)>','<android.bluetooth.BluetoothDeviceProfileState: int access$1000(android.bluetooth.BluetoothDeviceProfileState)>','<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>','<com.android.internal.util.HexDump: void <clinit>()>','<android.webkit.WebSettingsClassic: void setLightTouchEnabled(boolean)>','<android.location.Location: void setAltitude(double)>','<android.widget.TextView: void setLines(int)>','<android.app.ActivityManager$MemoryInfo: void readFromParcel(android.os.Parcel)>','<com.android.internal.view.IInputContext$Stub$Proxy: void performPrivateCommand(java.lang.String,android.os.Bundle)>','<com.android.server.location.GpsLocationProvider: void access$1000(com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: void writeExternal(java.io.ObjectOutput)>','<android.net.wifi.SupplicantStateTracker$DisconnectedState: void <init>(android.net.wifi.SupplicantStateTracker)>','<com.android.internal.telephony.sip.SipPhoneBase: void updateServiceLocation()>','<android.app.Dialog: android.app.ActionBar getActionBar()>','<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptime()>','<android.database.sqlite.SQLiteSession: void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>','<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)>','<android.media.AudioManager: void unloadSoundEffects()>','<android.content.ContentProviderOperation$Builder: java.lang.Integer access$500(android.content.ContentProviderOperation$Builder)>','<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>','<android.nfc.tech.NfcB: boolean isConnected()>','<android.accounts.AccountManager$BaseFutureTask: void <init>(android.accounts.AccountManager,android.os.Handler)>','<android.graphics.RectF: void union(float,float)>','<android.os.Binder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>','<com.android.uiautomator.core.InteractionController$4: boolean apply(java.lang.Object)>','<android.webkit.WebViewCore$JSInterfaceData: void <init>()>','<android.content.pm.PackageParser$Package: boolean hasComponentClassName(java.lang.String)>','<android.content.IClipboard$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.wm.Session: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>','<android.webkit.ClientCertRequestHandler$2: void run()>','<com.android.server.net.NetworkStatsRecorder: void <init>(com.android.internal.util.FileRotator,android.net.NetworkStats$NonMonotonicObserver,android.os.DropBoxManager,java.lang.String,long,boolean)>','<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void onAnimationRepeat(android.animation.Animator)>','<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)>','<com.android.uiautomator.core.UiDevice: boolean isInWatcherContext()>','<com.android.internal.policy.impl.PhoneWindowManager$19: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.database.sqlite.SQLiteConnectionPool: void <clinit>()>','<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>','<android.net.DhcpStateMachine$DhcpAction: android.net.DhcpStateMachine$DhcpAction[] values()>','<android.inputmethodservice.IInputMethodWrapper: void attachToken(android.os.IBinder)>','<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>','<android.os.storage.IMountServiceListener$Stub$Proxy: void onUsbMassStorageConnectionChanged(boolean)>','<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>','<android.bluetooth.BluetoothA2dp: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.app.Service: void stopSelf(int)>','<com.android.server.location.PassiveProvider: int getStatus(android.os.Bundle)>','<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)>','<android.graphics.Paint: boolean isDither()>','<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>','<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.filterpacks.videosrc.MediaSource: int access$200(android.filterpacks.videosrc.MediaSource)>','<com.android.internal.widget.WaveView: int getSuggestedMinimumHeight()>','<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>','<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()>','<com.android.internal.telephony.PhoneProxy: void activateCellBroadcastSms(int,android.os.Message)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: boolean isCreated()>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>','<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()>','<android.os.storage.IMountService$Stub$Proxy: boolean isObbMounted(java.lang.String)>','<com.android.vcard.VCardParser_V30: void parse(java.io.InputStream)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)>','<android.widget.Scroller: void startScroll(int,int,int,int,int)>','<android.animation.ValueAnimator$AnimationHandler: void <init>(android.animation.ValueAnimator$1)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState$1: com.android.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.sip.SipCommandInterface: void reportSmsMemoryStatus(boolean,android.os.Message)>','<android.accounts.IAccountManagerResponse$Stub: android.accounts.IAccountManagerResponse asInterface(android.os.IBinder)>','<android.net.wifi.WifiStateMachine$WpsRunningState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.server.am.ActivityManagerService$AThread: void <init>()>','<com.android.internal.widget.WaveView$1: void run()>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getMsisdn()>','<android.graphics.Paint: float measureText(java.lang.String)>','<android.filterfw.io.TextGraphReader$ConnectCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.content.Intent: boolean hasCategory(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions$SinglePressAction: boolean isEnabled()>','<android.os.storage.StorageManager$MountServiceBinderListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>','<android.renderscript.RenderScript: void nContextResume()>','<android.telephony.SignalStrength: int getGsmLevel()>','<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>','<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>','<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>','<android.bluetooth.BluetoothInputStream: void <init>(android.bluetooth.BluetoothSocket)>','<android.content.res.Configuration: int describeContents()>','<android.webkit.WebSettingsClassic: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>','<com.android.server.net.NetworkStatsService: int access$1402(com.android.server.net.NetworkStatsService,int)>','<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>','<android.webkit.WebViewClassic$PrivateHandler: void handleMessage(android.os.Message)>','<com.android.server.location.MockProvider: java.lang.String getInternalState()>','<com.android.server.PowerManagerService: int access$5902(com.android.server.PowerManagerService,int)>','<com.android.server.wm.WindowManagerService$H: void handleMessage(android.os.Message)>','<android.net.wifi.WifiStateMachine: int access$4304(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.CallManager: void unregisterForSubscriptionInfoReady(android.os.Handler)>','<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<android.content.ContentProviderResult$1: void <init>()>','<android.net.MobileDataStateTracker: void privateDnsRouteSet(boolean)>','<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>','<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()>','<android.widget.TextView: int getCurrentHintTextColor()>','<android.view.Choreographer$CallbackQueue: boolean hasDueCallbacksLocked(long)>','<com.android.server.wm.WindowManagerService$4: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder)>','<android.net.wifi.WifiManager$WifiLock: boolean isHeld()>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getAction(int)>','<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.widget.AbsSpinner$SavedState: void <init>(android.os.Parcel,android.widget.AbsSpinner$1)>','<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>','<com.android.server.wm.WindowManagerService: boolean okToDisplay()>','<android.app.Activity: android.content.ComponentName getCallingActivity()>','<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>','<android.opengl.GLLogWrapper: void glMaterialfv(int,int,float[],int)>','<android.view.Surface$OutOfResourcesException: void <init>(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<android.util.XmlPullAttributes: int getAttributeCount()>','<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>','<android.widget.PopupWindow: void setAnimationStyle(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getHealthDevicesMatchingConnectionStates(int[])>','<android.app.backup.RestoreSet: void <init>(java.lang.String,java.lang.String,long)>','<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>','<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>','<android.graphics.Point: boolean equals(int,int)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean isShowingAndNotHidden()>','<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,float[],int)>','<android.view.View: void setPadding(int,int,int,int)>','<android.server.BluetoothService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>','<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>','<android.os.TokenWatcher$1: void <init>(android.os.TokenWatcher)>','<android.location.INetInitiatedListener$Stub: android.location.INetInitiatedListener asInterface(android.os.IBinder)>','<com.android.internal.telephony.cat.Tone: int describeContents()>','<android.view.Window: void setFlags(int,int)>','<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>','<android.graphics.PixelFormat: void <init>()>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>','<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>','<android.net.wifi.WifiStateMachine$DisconnectedState: void exit()>','<android.webkit.WebIconDatabaseClassic: void access$100(java.lang.String)>','<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$1002(com.android.internal.widget.TransportControlView$Metadata,java.lang.String)>','<android.app.ActivityOptions$1$1: void run()>','<android.media.MediaFile: boolean isPlayListFileType(int)>','<com.android.server.AlarmManagerService$FilterStats: void <init>(com.android.server.AlarmManagerService$1)>','<android.webkit.WebViewClassic$TrustStorageListener: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.RemoteViews: void showNext(int)>','<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopRunningLocked()>','<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>','<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>','<android.telephony.SmsMessage: boolean isMWISetMessage()>','<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>','<android.app.FragmentManagerImpl: android.app.Fragment$SavedState saveFragmentInstanceState(android.app.Fragment)>','<android.net.sip.SimpleSessionDescription$Fields: void setEncryption(java.lang.String,java.lang.String)>','<android.view.View: void onAnimationEnd()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.WifiMonitor access$1500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>','<android.view.KeyEvent: void recycleIfNeededAfterDispatch()>','<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<android.location.Criteria: void setSpeedAccuracy(int)>','<com.android.internal.telephony.RIL: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>','<android.database.CursorWindow: java.lang.String getName()>','<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest createFromParcel(android.os.Parcel)>','<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int,int)>','<android.content.ContextWrapper: android.os.Looper getMainLooper()>','<android.bluetooth.BluetoothDeviceProfileState: void access$8300(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.internal.telephony.RIL: void changeBarringPassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: void onBluetoothStateChange(boolean)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()>','<com.android.internal.telephony.BaseCommands: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getNumberFormat(int)>','<android.bluetooth.BluetoothSocket: boolean isConnected()>','<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>','<android.content.pm.ParceledListSlice: void <init>(android.os.Parcel,int,boolean,android.content.pm.ParceledListSlice$1)>','<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: void exit()>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>','<com.android.internal.telephony.cat.PlayToneParams: boolean setIcon(android.graphics.Bitmap)>','<android.app.ApplicationThreadProxy: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>','<android.graphics.Paint: boolean isStrikeThruText()>','<android.view.View$TransformationInfo: boolean access$1200(android.view.View$TransformationInfo)>','<android.view.WindowManager$LayoutParams: java.lang.String toString()>','<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>','<android.net.wifi.WifiStateMachine: void access$15100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.util.LruCache: int maxSize()>','<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.location.GpsLocationProvider: int access$1872(com.android.server.location.GpsLocationProvider,int)>','<com.android.server.am.UsageStatsService: void noteLaunchTime(android.content.ComponentName,int)>','<android.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,java.lang.String)>','<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)>','<android.graphics.Matrix$1: void reset()>','<android.text.method.BaseMovementMethod: boolean scrollPageDown(android.widget.TextView,android.text.Spannable)>','<com.android.server.am.ActivityManagerService: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$10300(android.net.wifi.WifiStateMachine)>','<com.android.internal.widget.PointerLocationView$PointerState: float access$902(com.android.internal.widget.PointerLocationView$PointerState,float)>','<android.webkit.WebViewClassic: void access$5800(android.webkit.WebViewClassic,android.webkit.WebViewCore$WebKitHitTest)>','<android.webkit.WebSettingsClassic: void setFixedFontFamily(java.lang.String)>','<android.webkit.WebSettingsClassic: boolean getPluginsEnabled()>','<android.net.sip.SipProfile: java.lang.String getProxyAddress()>','<android.content.res.CompatibilityInfo$1: void <init>()>','<android.net.EthernetDataTracker$InterfaceObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>','<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>','<com.android.internal.os.SamplingProfilerIntegration: java.util.concurrent.atomic.AtomicBoolean access$100()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>','<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>','<android.opengl.GLLogWrapper: void glTexParameteri(int,int,int)>','<android.server.BluetoothBondState: android.bluetooth.BluetoothA2dp access$002(android.server.BluetoothBondState,android.bluetooth.BluetoothA2dp)>','<android.os.Debug: void resetGlobalAllocCount()>','<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.content.res.CompatibilityInfo$Translator: void translateWindowLayout(android.view.WindowManager$LayoutParams)>','<android.accounts.AccountManager$10: void doWork()>','<com.android.internal.content.PackageMonitor: void onPackageDisappeared(java.lang.String,int)>','<android.app.ActivityThread: boolean isProfiling()>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$TabListener getCallback()>','<android.telephony.NeighboringCellInfo: int getRssi()>','<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>','<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context)>','<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)>','<com.android.internal.widget.SlidingTab$Slider: void showTarget()>','<android.view.textservice.SpellCheckerSubtype: void <init>(android.os.Parcel)>','<android.app.BackStackState: void <init>(android.os.Parcel)>','<android.net.Proxy: int getDefaultPort()>','<android.net.http.Connection: byte[] getBuf()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothHeadset access$1302(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothHeadset)>','<android.net.wifi.WifiManager: boolean disableNetwork(int)>','<com.android.internal.telephony.DataConnection$DcDisconnectingState: boolean processMessage(android.os.Message)>','<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_BACK(android.renderscript.RenderScript)>','<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>','<android.net.wifi.WifiStateMachine: android.os.Messenger getMessenger()>','<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>','<android.app.PendingIntent$CanceledException: void <init>()>','<android.server.BluetoothEventLoop: void start()>','<android.view.ViewGroup: android.view.View findViewByAccessibilityIdTraversal(int)>','<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,int,int,int)>','<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>','<android.content.ClipboardManager: android.os.Handler access$000(android.content.ClipboardManager)>','<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>','<android.database.AbstractWindowedCursor: byte[] getBlob(int)>','<com.android.server.usb.UsbDeviceManager: void access$200(com.android.server.usb.UsbDeviceManager)>','<android.app.ActivityManagerProxy: void killApplicationWithUid(java.lang.String,int)>','<com.android.server.pm.ShutdownThread: void shutdownInner(android.content.Context,boolean)>','<com.android.server.location.MockProvider: long getStatusUpdateTime()>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>','<android.widget.Editor$EasyEditPopupWindow: void setEasyEditSpan(android.text.style.EasyEditSpan)>','<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<com.android.server.pm.PackageManagerService: void finishPackageInstall(int)>','<android.net.wifi.WifiStateMachine: void access$7600(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>','<android.animation.AnimatorSet$AnimatorSetListener: void onAnimationStart(android.animation.Animator)>','<android.graphics.PointF: void set(float,float)>','<com.android.internal.telephony.BaseCommands: void unregisterForLineControlInfo(android.os.Handler)>','<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dispose()>','<com.android.internal.telephony.cat.Input: void <init>()>','<com.android.server.net.NetworkStatsCollection$Key: int compareTo(java.lang.Object)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopGps(int)>','<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isAlphanumeric()>','<android.content.ContentResolver$CursorWrapperInner: void finalize()>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>','<android.net.Uri$HierarchicalUri: android.net.Uri readFrom(android.os.Parcel)>','<android.view.IWindowManager$Stub$Proxy: void thawRotation()>','<com.android.internal.widget.multiwaveview.GlowPadView: void ping()>','<android.media.AudioManager: void setMasterVolume(int,int)>','<android.os.INetworkManagementService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.sip.SipCommandInterface: void getVoiceRegistrationState(android.os.Message)>','<android.view.Display: int getRawWidth()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getVersionString()>','<android.view.View$AttachInfo$InvalidateInfo$1: void onReleased(android.util.Poolable)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,int)>','<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>','<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>','<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: boolean shouldWrite()>','<android.hardware.input.InputManager: android.hardware.input.IInputManager access$200(android.hardware.input.InputManager)>','<android.text.method.TextKeyListener$Capitalize: void <clinit>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$1900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.app.IActivityController$Stub$Proxy: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>','<android.util.EventLog$Event: long getTimeNanos()>','<android.database.sqlite.SQLiteConnection: void onCancel()>','<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>','<android.view.inputmethod.CorrectionInfo: int describeContents()>','<android.os.storage.IMountService$Stub$Proxy: int finalizeSecureContainer(java.lang.String)>','<com.android.internal.telephony.IccRecords: void registerForNetworkSelectionModeAutomatic(android.os.Handler,int,java.lang.Object)>','<android.webkit.WebViewClassic$InvokeListBox$2: void onClick(android.content.DialogInterface,int)>','<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.BaseCommands: void setOnSmsStatus(android.os.Handler,int,java.lang.Object)>','<com.android.internal.util.FileRotator$1: void <init>(com.android.internal.util.FileRotator,com.android.internal.util.FileRotator$Reader,com.android.internal.util.FileRotator$Writer)>','<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: long getItemId(int)>','<com.android.server.sip.SipService: boolean access$1600(com.android.server.sip.SipService,java.lang.String)>','<android.ddm.DdmHandleHeap: void register()>','<android.content.ContentValues: void <init>(java.util.HashMap,android.content.ContentValues$1)>','<android.os.OperationCanceledException: void <init>()>','<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>','<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>','<android.nfc.TransceiveResult$1: android.nfc.TransceiveResult createFromParcel(android.os.Parcel)>','<android.inputmethodservice.KeyboardView: void invalidateKey(int)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.WifiService: void releaseMulticastLock()>','<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>','<android.net.LocalSocketImpl$SocketInputStream: void close()>','<android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc[] values()>','<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>','<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>','<android.preference.Preference: boolean persistFloat(float)>','<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: boolean isSecure()>','<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>','<com.android.internal.util.FastXmlSerializer: boolean getFeature(java.lang.String)>','<android.view.ViewRootImpl: void invalidateWorld(android.view.View)>','<com.android.internal.telephony.IccCard$1: void onClick(android.content.DialogInterface,int)>','<android.speech.tts.TextToSpeech: int setPitch(float)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(java.lang.Class)>','<com.android.server.wm.WindowManagerService: void getWindowDisplayFrame(com.android.server.wm.Session,android.view.IWindow,android.graphics.Rect)>','<android.accounts.IAccountManager$Stub$Proxy: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>','<android.widget.ProgressBar$AccessibilityEventSender: void run()>','<android.text.method.BaseKeyListener: void <clinit>()>','<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)>','<android.widget.ExpandableListView: int getFlatListPosition(long)>','<android.media.Metadata: java.util.Date getDate(int)>','<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()>','<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>','<android.view.View: void clearFocus()>','<android.media.AudioService: int[][] access$4500(android.media.AudioService)>','<com.android.server.am.ContentProviderConnection: java.lang.String toClientString()>','<android.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>','<android.net.wifi.WifiNative: boolean setSerialNumber(java.lang.String)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams: void <init>(int,android.view.textservice.TextInfo[],int,boolean)>','<com.android.internal.widget.SlidingTab$2: void onAnimationStart(android.view.animation.Animation)>','<android.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>','<android.os.FileObserver: void <init>(java.lang.String,int)>','<com.android.internal.telephony.sip.SipConnectionBase$1: void <clinit>()>','<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>','<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>','<android.accounts.AccountManagerService$Session: void bind()>','<android.text.style.StrikethroughSpan: void <init>()>','<android.widget.SearchView: void setInputType(int)>','<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>','<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>','<android.view.textservice.TextInfo: void <init>(android.os.Parcel)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: java.lang.String access$600(android.server.BluetoothPanProfileHandler$BluetoothPanDevice)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyDropBox()>','<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.os.Debug: int getLoadedClassCount()>','<com.android.internal.widget.TransportControlView$Metadata: void <init>(com.android.internal.widget.TransportControlView)>','<android.location.LocationManager: java.util.List getProviders(boolean)>','<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>','<android.app.ApplicationPackageManager: android.content.pm.UserInfo getUser(int)>','<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>','<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>','<android.widget.ProgressBar$RefreshData$1: void onAcquired(android.util.Poolable)>','<android.webkit.WebStorageClassic: void getOrigins(android.webkit.ValueCallback)>','<android.webkit.WebViewClassic$Factory: void <init>()>','<android.webkit.WebView: boolean overlayVerticalScrollbar()>','<android.view.DisplayEventReceiver: void scheduleVsync()>','<android.net.DhcpStateMachine: void registerForPreDhcpNotification()>','<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>','<android.view.animation.GridLayoutAnimationController: float getRowDelay()>','<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>','<android.net.Uri$HierarchicalUri: boolean isRelative()>','<com.android.internal.policy.impl.FaceUnlock: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardScreenCallback)>','<com.android.server.input.InputManagerService$InputManagerHandler: void handleMessage(android.os.Message)>','<android.test.IsolatedContext$MockAccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>','<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimImpi()>','<com.android.internal.telephony.PhoneProxy: void setCellBroadcastSmsConfig(int[],android.os.Message)>','<android.view.GestureDetector$GestureHandler: void <init>(android.view.GestureDetector,android.os.Handler)>','<android.view.View: boolean isHorizontalScrollBarEnabled()>','<com.android.internal.telephony.ATResponseParser: int nextInt()>','<android.app.ActivityThread: void access$500(android.app.ActivityThread,java.io.FileDescriptor)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.HashMap access$800(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<android.webkit.WebViewClassic: android.graphics.drawable.Drawable access$2200(android.webkit.WebViewClassic)>','<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.content.pm.IPackageManager$Stub$Proxy: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>','<android.widget.PopupWindow: void setInputMethodMode(int)>','<android.text.Annotation: int getSpanTypeId()>','<android.provider.MediaStore$Audio$Playlists: void <clinit>()>','<com.android.server.net.NetworkPolicyManagerService$2: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()>','<android.app.ContextImpl: void setActivityToken(android.os.IBinder)>','<com.android.internal.net.VpnConfig: int describeContents()>','<android.media.MediaRouter$SimpleCallback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)>','<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>','<com.android.server.ConnectivityService: android.net.ProxyProperties getGlobalProxy()>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.WifiManager$ChannelListener)>','<android.widget.OverScroller: int timePassed()>','<android.server.BluetoothDeviceProperties: void setProperty(java.lang.String,java.lang.String,java.lang.String)>','<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>','<android.net.http.ErrorStrings: int getResource(int)>','<com.android.server.am.AppErrorDialog: com.android.server.am.AppErrorResult access$100(com.android.server.am.AppErrorDialog)>','<android.view.GLES20Canvas: void <clinit>()>','<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>','<android.accounts.AccountManagerService$Session: android.accounts.IAccountManagerResponse getResponseAndClose()>','<android.speech.tts.TextToSpeech$3: void <init>(android.speech.tts.TextToSpeech,java.lang.String,int,java.util.HashMap)>','<com.android.internal.telephony.sip.SipCommandInterface: void setTTYMode(int,android.os.Message)>','<android.graphics.Interpolator$Result: android.graphics.Interpolator$Result[] values()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean isDataPossible(java.lang.String)>','<android.os.AsyncTask: void publishProgress(java.lang.Object[])>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()>','<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: boolean processMessage(android.os.Message)>','<android.widget.AdapterViewAnimator: void refreshChildren()>','<android.telephony.SmsMessage: java.lang.String getMessageBody()>','<com.android.internal.telephony.IccCardStatus$PinState: boolean isPinRequired()>','<android.graphics.Rect: void readFromParcel(android.os.Parcel)>','<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>','<android.provider.Telephony$Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean,long)>','<android.view.animation.Animation: void restrictDuration(long)>','<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>','<android.widget.HeaderViewListAdapter: void <clinit>()>','<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>','<android.server.BluetoothService: java.util.List getInputDevicesMatchingConnectionStates(int[])>','<android.service.wallpaper.IWallpaperService$Stub: android.os.IBinder asBinder()>','<com.android.internal.widget.WaveView$2: void <init>(com.android.internal.widget.WaveView)>','<com.android.internal.telephony.sip.SipPhone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<android.location.Address: java.lang.String access$802(android.location.Address,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryContentProviders(java.lang.String,int,int)>','<android.net.sip.SimpleSessionDescription$Fields: void setAttribute(java.lang.String,java.lang.String)>','<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()>','<com.android.server.PowerManagerService$BatteryReceiver: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.content.pm.PathPermission$1: android.content.pm.PathPermission createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>','<android.net.wifi.WifiWatchdogStateMachine: void access$3600(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.os.StrictMode$Span: android.os.StrictMode$Span access$1800(android.os.StrictMode$Span)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean)>','<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>','<com.android.internal.util.BitwiseOutputStream: void <init>(int)>','<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>','<com.android.server.wm.WindowState: boolean isWinVisibleLw()>','<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$3200(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.sip.SipPhone: java.util.List getCurrentDataConnectionList()>','<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>','<android.inputmethodservice.InputMethodService: void setBackDisposition(int)>','<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions: void onDismiss(android.content.DialogInterface)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.widget.ZoomButtonsController$4: void <init>(android.widget.ZoomButtonsController)>','<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>','<android.app.SearchableInfo$ActionKeyInfo: void <init>(android.os.Parcel,android.app.SearchableInfo$1)>','<android.accounts.IAccountManager$Stub$Proxy: void addAcount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void <init>(com.android.server.connectivity.Vpn,com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>','<android.content.IntentSender: android.content.IIntentSender getTarget()>','<android.webkit.WebViewClassic: void onDraw(android.graphics.Canvas)>','<android.net.ConnectivityManager: int setUsbTethering(boolean)>','<android.net.http.IdleCache$IdleReaper: void <init>(android.net.http.IdleCache,android.net.http.IdleCache$1)>','<com.android.server.EventLogTags: void writeBackupPackage(java.lang.String,int)>','<com.android.vcard.VCardParserImpl_V40: int getVersion()>','<android.webkit.WebSettingsClassic: void setXSSAuditorEnabled(boolean)>','<android.app.Fragment: void onTrimMemory(int)>','<android.webkit.DeviceMotionService: boolean access$502(android.webkit.DeviceMotionService,boolean)>','<android.app.ProgressDialog: void <init>(android.content.Context)>','<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>','<com.android.server.MountService: java.util.concurrent.CountDownLatch access$1700(com.android.server.MountService)>','<android.view.textservice.SpellCheckerInfo$1: android.view.textservice.SpellCheckerInfo createFromParcel(android.os.Parcel)>','<android.preference.Preference$BaseSavedState$1: android.preference.Preference$BaseSavedState[] newArray(int)>','<android.location.Address: void setLatitude(double)>','<android.app.QueuedWork: void waitToFinish()>','<com.android.internal.widget.PointerLocationView: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.statusbar.StatusBarIconList: java.lang.String getSlot(int)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void invalidate()>','<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String)>','<android.accounts.AccountManagerService: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>','<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void addCountAtomic(long)>','<android.view.View: boolean isFocused()>','<android.app.backup.RestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>','<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>','<android.location.INetInitiatedListener$Stub: void <init>()>','<com.android.internal.telephony.gsm.SIMRecords: void loge(java.lang.String)>','<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>','<android.os.storage.IMountServiceListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()>','<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String,boolean)>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.String)>','<com.android.internal.os.storage.ExternalStorageFormatter$2: void <init>(com.android.internal.os.storage.ExternalStorageFormatter,android.os.storage.IMountService,java.lang.String)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String copyResourceToContainer(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>','<android.util.StateSet: void <clinit>()>','<com.android.server.am.CompatModePackages$1: void <init>(com.android.server.am.CompatModePackages)>','<android.bluetooth.BluetoothDeviceProfileState: void access$2500(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.internal.policy.impl.SimPukUnlockScreen: boolean needsInput()>','<android.content.res.StringBlock$StyleIDs: int access$200(android.content.res.StringBlock$StyleIDs)>','<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>','<android.content.ClipDescription: java.lang.CharSequence getLabel()>','<android.os.MemoryFile$MemoryInputStream: void <init>(android.os.MemoryFile,android.os.MemoryFile$1)>','<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>','<android.filterpacks.videoproc.BackDropperFilter: void <init>(java.lang.String)>','<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>','<android.app.FragmentState: void <init>(android.os.Parcel)>','<android.telephony.SmsCbLocation: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.app.AlertController: int access$1302(com.android.internal.app.AlertController,int)>','<android.content.Loader: void reset()>','<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>','<android.webkit.ViewManager: boolean access$400(android.webkit.ViewManager)>','<android.webkit.ZoomManager: void access$1700(android.webkit.ZoomManager,float,boolean,boolean)>','<com.android.internal.app.AlertController: android.widget.ListAdapter access$1202(com.android.internal.app.AlertController,android.widget.ListAdapter)>','<com.android.internal.widget.TransportControlView$SavedState$1: com.android.internal.widget.TransportControlView$SavedState createFromParcel(android.os.Parcel)>','<android.os.Registrant: void notifyResult(java.lang.Object)>','<android.text.TextUtils$1: java.lang.CharSequence createFromParcel(android.os.Parcel)>','<android.content.PeriodicSync$1: android.content.PeriodicSync createFromParcel(android.os.Parcel)>','<android.opengl.GLLogWrapper: void glPopMatrix()>','<com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>','<android.widget.PopupWindow: void setHeight(int)>','<android.view.ViewRootImpl$TakenSurfaceHolder: void onUpdateSurface()>','<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)>','<android.net.wifi.WpsResult: int describeContents()>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1100(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void recreateMe(android.content.res.Configuration)>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void run()>','<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>','<android.view.IWindowSession$Stub$Proxy: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>','<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>','<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>','<android.net.wifi.WifiStateMachine$DriverStartedState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.internal.os.storage.ExternalStorageFormatter: void <init>()>','<android.widget.ExpandableListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>','<android.provider.ContactsContract$CommonDataKinds$SipAddress: int getTypeLabelResource(int)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>','<com.android.internal.widget.multiwaveview.Ease$Quad$1: float getInterpolation(float)>','<android.accounts.AccountManager$1: void doWork()>','<com.android.internal.widget.multiwaveview.Ease$Quad$1: void <init>()>','<android.net.wifi.p2p.WifiP2pService: android.net.NetworkInfo access$2300(android.net.wifi.p2p.WifiP2pService)>','<com.android.internal.telephony.DataConnectionTracker: boolean isEmergency()>','<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)>','<android.provider.Telephony$Sms$Sent: void <init>()>','<android.net.WebAddress: java.lang.String getAuthInfo()>','<com.android.server.NotificationManagerService: void cancelToast(java.lang.String,android.app.ITransientNotification)>','<android.view.HardwareRenderer$GlRenderer: int getHeight()>','<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>','<android.filterfw.geometry.Point: void <init>()>','<android.webkit.WebIconDatabaseClassic: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<android.webkit.PluginFullScreenHolder$CustomFrameLayout: void <init>(android.webkit.PluginFullScreenHolder,android.content.Context)>','<android.widget.TextView: int getVerticalOffset(boolean)>','<android.widget.TextView: int getLineCount()>','<android.view.View$9: java.lang.Float get(android.view.View)>','<android.widget.FastScroller$1: void <init>(android.widget.FastScroller)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void animateExpand()>','<android.util.LogPrinter: void <init>(int,java.lang.String,int)>','<com.android.internal.widget.LockPatternView: boolean isTactileFeedbackEnabled()>','<com.android.server.WallpaperManagerService: void detachWallpaperLocked(com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.widget.multiwaveview.GlowPadView: void access$400(com.android.internal.widget.multiwaveview.GlowPadView)>','<com.android.internal.telephony.test.CallInfo: boolean isActiveOrHeld()>','<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>','<android.widget.GridView: boolean pageScroll(int)>','<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>','<android.animation.AnimatorSet: java.util.ArrayList access$000(android.animation.AnimatorSet)>','<android.app.ActivityThread: void access$2300(android.app.ActivityThread,android.app.ActivityThread$CreateBackupAgentData)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>','<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics)>','<com.android.server.am.ActivityManagerService: boolean dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package access$1400(com.android.server.pm.PackageManagerService,java.io.File,int,int,long)>','<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>','<com.android.server.connectivity.Tethering: boolean access$600(com.android.server.connectivity.Tethering,boolean)>','<android.app.SearchableInfo: boolean queryAfterZeroResults()>','<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()>','<com.android.internal.telephony.gsm.GsmConnection: void finalize()>','<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String)>','<com.android.server.connectivity.Vpn: java.lang.String access$200(com.android.server.connectivity.Vpn)>','<android.widget.TextView: boolean bringPointIntoView(int)>','<android.net.LocalSocket: boolean isInputShutdown()>','<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>','<com.android.internal.telephony.PhoneBase: int getLteOnCdmaMode()>','<android.widget.ZoomButton: void setEnabled(boolean)>','<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>','<android.widget.AbsListView: boolean isPaddingOffsetRequired()>','<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)>','<android.hardware.Camera$CameraInfo: void <init>()>','<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>','<android.provider.MediaStore$Audio$Genres$Members: void <init>()>','<android.view.accessibility.AccessibilityRecord: void enforceSealed()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock(int)>','<android.widget.RemoteViewsAdapter: boolean access$000(android.widget.RemoteViewsAdapter)>','<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<com.android.internal.view.IInputContext$Stub$Proxy: void commitCorrection(android.view.inputmethod.CorrectionInfo)>','<com.android.server.net.NetworkStatsService: void forceUpdate()>','<android.view.View: boolean isFocusable()>','<android.view.View: float getVerticalScrollFactor()>','<android.view.View: int getLeftPaddingOffset()>','<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)>','<android.media.AudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryPermissionsByGroup(java.lang.String,int)>','<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>','<com.android.server.AppWidgetService: int[] getAppWidgetIds(android.content.ComponentName)>','<android.os.Bundle: int size()>','<android.os.StrictMode: void enableDeathOnNetwork()>','<android.graphics.RectF: boolean isEmpty()>','<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>','<com.android.internal.policy.impl.PasswordUnlockScreen: boolean needsInput()>','<android.content.pm.ResolveInfo: int getIconResource()>','<com.android.internal.telephony.PhoneBase: boolean isMinInfoReady()>','<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>','<android.webkit.WebSettingsClassic: void setUserAgent(int)>','<android.nfc.FormatException: void <init>(java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.content.pm.ResolveInfo newResult(android.content.pm.PackageParser$ActivityIntentInfo,int,int)>','<android.view.accessibility.AccessibilityNodeInfo: void recycle()>','<android.bluetooth.BluetoothOutputStream: void close()>','<android.server.BluetoothService: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>','<com.android.internal.telephony.PhoneBase: boolean isDataConnectivityPossible(java.lang.String)>','<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>','<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>','<com.android.server.location.GpsLocationProvider: void disable()>','<com.android.internal.telephony.SmsHeader$ConcatRef: void <init>()>','<com.android.server.am.BroadcastQueue$1: void <init>(com.android.server.am.BroadcastQueue)>','<android.bluetooth.BluetoothProfileState: android.bluetooth.BluetoothProfileState$StableState access$800(android.bluetooth.BluetoothProfileState)>','<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>','<android.content.SyncStorageEngine: boolean deleteFromPending(android.content.SyncStorageEngine$PendingOperation)>','<com.android.internal.telephony.PhoneBase: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<android.util.LruCache: int missCount()>','<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter$Callback)>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)>','<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>','<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.AsyncChannel access$900(android.net.wifi.WifiWatchdogStateMachine)>','<android.widget.RemoteViews$ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)>','<com.android.server.AppWidgetServiceImpl: void loadStateLocked()>','<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.content.res.TypedArray: int length()>','<android.widget.Spinner$DialogPopup: void <init>(android.widget.Spinner,android.widget.Spinner$1)>','<android.database.sqlite.SQLiteConnectionPool: void collectDbStats(java.util.ArrayList)>','<android.content.pm.ManifestDigest: int describeContents()>','<com.android.server.wm.Session: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>','<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>','<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>','<com.android.server.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.RIL: void getBasebandVersion(android.os.Message)>','<android.filterpacks.videosrc.MediaSource: boolean access$102(android.filterpacks.videosrc.MediaSource,boolean)>','<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(android.widget.ExpandableListConnector$GroupMetadata)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader$1: void run()>','<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getXtPersistBytes(long)>','<android.location.ILocationProvider$Stub$Proxy: boolean requiresNetwork()>','<com.android.internal.os.BatteryStatsImpl: void setBatteryState(int,int,int,int,int,int)>','<android.os.UEventObserver$UEvent: java.lang.String toString()>','<android.graphics.drawable.ScaleDrawable: boolean onStateChange(int[])>','<android.webkit.WebStorage: void deleteAllData()>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionX()>','<com.android.server.am.BroadcastQueue: void broadcastTimeoutLocked(boolean)>','<android.net.LinkProperties: boolean isIdenticalRoutes(android.net.LinkProperties)>','<android.location.Address: void setSubLocality(java.lang.String)>','<com.android.server.location.MockProvider: boolean supportsSpeed()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>','<com.android.server.LightsService$Light: void turnOff()>','<com.android.internal.telephony.sip.SipCommandInterface: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.net.http.AndroidHttpClient$1: void <init>()>','<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>','<com.android.internal.view.IInputContext$Stub$Proxy: void reportFullscreenMode(boolean)>','<com.android.server.WifiService: void disconnect()>','<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>','<android.view.GLES20RecordingCanvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>','<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreSetsAvailable(android.app.backup.RestoreSet[])>','<com.android.uiautomator.core.InteractionController: boolean isScreenOn()>','<com.android.internal.policy.impl.LockPatternKeyguardView$1: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.server.BatteryService$2: void onUEvent(android.os.UEventObserver$UEvent)>','<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State valueOf(java.lang.String)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setTitle(int)>','<com.android.server.pm.PackageManagerService$4: int compare(java.lang.Object,java.lang.Object)>','<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(android.net.wifi.p2p.WifiP2pDeviceList)>','<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.bluetooth.BluetoothProfileState: void access$1000(android.bluetooth.BluetoothProfileState,android.os.Message)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void headers(android.net.http.Headers)>','<android.graphics.Paint: float measureText(char[],int,int)>','<android.view.GLES20RecordingCanvas: void drawPoints(float[],android.graphics.Paint)>','<com.android.internal.os.ProcessStats: long[] getLastCpuSpeedTimes()>','<android.view.View: void clearAnimation()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$400(com.android.internal.policy.impl.KeyguardViewMediator,int)>','<android.widget.AbsListView: android.widget.FastScroller access$3500(android.widget.AbsListView)>','<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDitherEnabled(boolean)>','<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>','<com.android.internal.util.StateMachine: void <init>(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$6900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<com.android.internal.telephony.gsm.GsmCallTracker: void clearDisconnected()>','<com.android.server.AlarmManagerService$ClockReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.ServiceStateTracker: void enableSingleLocationUpdate()>','<android.hardware.LegacySensorManager$LegacyListener: boolean unregisterSensor(int)>','<android.preference.Preference$BaseSavedState: void <init>(android.os.Parcelable)>','<android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>','<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBluetoothOn()>','<android.filterfw.geometry.Point: java.lang.String toString()>','<android.view.DragEvent: void <clinit>()>','<android.content.pm.InstrumentationInfo: void <clinit>()>','<android.widget.HorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.text.Annotation: int describeContents()>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: com.android.internal.widget.PointerLocationView$FasterStringBuilder clear()>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void unlock()>','<com.android.internal.policy.impl.PhoneWindowManager: void <clinit>()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: com.android.internal.util.State access$1100(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>','<android.app.ActivityManager$TaskThumbnails: void <init>()>','<com.android.uiautomator.core.UiDevice: void wakeUp()>','<android.util.PrefixPrinter: void println(java.lang.String)>','<android.database.CursorWindow: int describeContents()>','<android.os.Environment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)>','<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()>','<android.widget.LinearLayout$LayoutParams: java.lang.String debug(java.lang.String)>','<android.widget.MediaController: void <init>(android.content.Context)>','<com.android.server.LightsService$1: void setFlashlightEnabled(boolean)>','<android.webkit.ViewManager: void scaleAll()>','<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String)>','<com.android.server.IntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<android.location.ICountryDetector$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.ResultReceiver: int describeContents()>','<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>','<android.net.wifi.WifiInfo: boolean getHiddenSSID()>','<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>','<android.net.INetworkStatsSession$Stub$Proxy: void close()>','<com.android.vcard.VCardParser_V30: void <init>()>','<android.webkit.HttpAuthHandler: void <init>()>','<android.widget.RemoteViews: java.lang.String getPackage()>','<android.widget.Editor$SuggestionsPopupWindow: void createPopupWindow()>','<android.provider.BrowserContract$Bookmarks: android.net.Uri buildFolderUri(long)>','<android.util.Slog: int v(java.lang.String,java.lang.String)>','<android.renderscript.RenderScript: void nElementGetNativeData(int,int[])>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(java.lang.String)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: void <init>(android.content.Context,com.android.server.InputMethodManagerService)>','<android.net.DhcpStateMachine: com.android.internal.util.State access$600(android.net.DhcpStateMachine)>','<android.view.accessibility.AccessibilityInteractionClient: void setPerformAccessibilityActionResult(boolean,int)>','<android.app.IUiModeManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.AudioManager: void setRouting(int,int,int)>','<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>','<android.media.AudioService$SetModeDeathHandler: void setMode(int)>','<android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>','<android.opengl.GLLogWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>','<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>','<android.webkit.WebViewClassic: void loadUrl(java.lang.String,java.util.Map)>','<android.webkit.WebView: void onResume()>','<android.view.View: void addTouchables(java.util.ArrayList)>','<android.telephony.TelephonyManager: boolean isVoiceCapable()>','<android.view.Display: void getRealSize(android.graphics.Point)>','<com.android.server.ConnectivityService: void requestNetworkTransitionWakelock(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>','<com.android.internal.os.BatteryStatsImpl: void reportExcessiveWakeLocked(int,java.lang.String,long,long)>','<android.view.ViewGroup: void scheduleLayoutAnimation()>','<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>','<android.widget.ExpandableListConnector: int getViewTypeCount()>','<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternStart()>','<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>','<android.content.SyncOperation: boolean ignoreBackoff()>','<android.graphics.Matrix$1: void setRotate(float,float,float)>','<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>','<com.android.server.location.MockProvider: void removeListener(int)>','<com.android.server.NetworkManagementService: void access$400(com.android.server.NetworkManagementService,java.lang.String)>','<com.android.internal.util.BitwiseInputStream: void <init>(byte[])>','<com.android.server.sip.SipSessionGroup: void onConnectivityChanged()>','<android.content.OperationApplicationException: void <init>(java.lang.String)>','<android.content.pm.ActivityInfo: int getThemeResource()>','<android.widget.MediaController: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.SearchableInfo: android.app.SearchableInfo$ActionKeyInfo findActionKey(int)>','<com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>','<android.widget.Switch: int getCompoundPaddingRight()>','<android.hardware.usb.UsbDevice$1: void <init>()>','<android.net.wifi.WifiNative: boolean saveConfig()>','<android.view.ViewRootImpl: void handleDispatchDoneAnimating()>','<android.graphics.drawable.DrawableContainer: void setAlpha(int)>','<android.view.ViewGroup$ChildListForAccessibility: android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean)>','<android.app.Activity: android.view.Window getWindow()>','<com.android.internal.telephony.BaseCommands: void unregisterForCdmaSubscriptionChanged(android.os.Handler)>','<android.net.wifi.WifiNative: void closeSupplicantConnection()>','<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>','<android.os.Message: boolean isAsynchronous()>','<com.android.internal.telephony.PhoneBase: void setTTYMode(int,android.os.Message)>','<android.view.AbsSavedState$2: android.view.AbsSavedState createFromParcel(android.os.Parcel)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>','<android.os.Debug$MemoryInfo: java.lang.String getOtherLabel(int)>','<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>','<com.android.internal.telephony.Phone$SuppService: void <clinit>()>','<android.widget.TextView: void spanChange(android.text.Spanned,java.lang.Object,int,int,int,int)>','<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void <init>(com.android.internal.policy.impl.PhoneWindowManager,android.os.Handler)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_NONE(android.renderscript.RenderScript)>','<android.content.ContentProviderNative: android.content.IContentProvider asInterface(android.os.IBinder)>','<android.accounts.AccountManagerService: java.lang.String access$1900(int)>','<android.accounts.AccountManagerService: java.lang.Integer access$1700(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account)>','<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.view.MotionEvent: void scale(float)>','<android.view.View: boolean canHaveDisplayList()>','<android.app.SharedPreferencesImpl$EditorImpl$3: void <init>(android.app.SharedPreferencesImpl$EditorImpl,android.app.SharedPreferencesImpl$MemoryCommitResult)>','<com.android.internal.policy.impl.GlobalActions: void access$1500(com.android.internal.policy.impl.GlobalActions)>','<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>','<android.text.method.BaseMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>','<android.accounts.AccountManagerService$RemoveAccountSession: void run()>','<com.android.server.sip.SipService: android.content.Context access$700(com.android.server.sip.SipService)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: void enter()>','<com.android.server.wm.WindowStateAnimator: boolean isDummyAnimation()>','<android.app.FragmentManager: void enableDebugLogging(boolean)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>','<android.os.RegistrantList: java.lang.Object get(int)>','<android.database.CursorWindow: boolean allocRow()>','<android.renderscript.ProgramStore$BlendSrcFunc: void <clinit>()>','<android.speech.tts.UtteranceProgressListener: void <init>()>','<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()>','<android.filterfw.core.SimpleFrame: void setInts(int[])>','<android.text.util.Linkify$3: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>','<android.net.wifi.WifiStateMachine$ConnectModeState: boolean processMessage(android.os.Message)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingHid access$3300(android.bluetooth.BluetoothDeviceProfileState)>','<android.net.Uri$StringUri: java.lang.String getQuery()>','<com.android.internal.telephony.cat.TextColor: com.android.internal.telephony.cat.TextColor[] values()>','<com.android.server.PowerManagerService: int getStayOnConditionsLocked()>','<android.widget.ZoomButtonsController$3: void <init>(android.widget.ZoomButtonsController)>','<com.android.internal.policy.impl.GlobalActions: java.util.ArrayList access$900(com.android.internal.policy.impl.GlobalActions)>','<android.widget.Editor$1: void run()>','<android.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>','<android.app.PendingIntent: boolean isTargetedToPackage()>','<android.webkit.WebViewCore: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)>','<android.text.method.QwertyKeyListener: int getInputType()>','<android.net.Uri$OpaqueUri: void writeToParcel(android.os.Parcel,int)>','<android.net.sip.SipSession: int getState()>','<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder)>','<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>','<android.os.Parcel: void writeBundle(android.os.Bundle)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean doesForceHide(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)>','<com.android.internal.telephony.IccCard: void unregisterForLocked(android.os.Handler)>','<android.database.CursorWrapper: java.lang.String getString(int)>','<android.app.ActivityThread$ApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>','<com.android.internal.util.TypedProperties: short getShort(java.lang.String)>','<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)>','<android.net.http.RequestQueue$1: void onReceive(android.content.Context,android.content.Intent)>','<android.net.NetworkInfo: java.lang.String access$502(android.net.NetworkInfo,java.lang.String)>','<android.view.GLES20DisplayList: void end()>','<android.view.ViewGroup: boolean updateLocalSystemUiVisibility(int,int)>','<android.preference.Preference: android.content.SharedPreferences$Editor getEditor()>','<android.app.SharedPreferencesImpl: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void call(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void enter()>','<android.webkit.WebViewDatabaseClassic: void <clinit>()>','<android.media.effect.effects.CropEffect: void apply(int,int,int,int)>','<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<android.webkit.WebStorageClassic$2: void <init>(android.webkit.WebStorageClassic)>','<com.android.internal.policy.impl.PhoneWindowManager: void access$000(com.android.internal.policy.impl.PhoneWindowManager)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<android.view.IWindowManager$Stub$Proxy: void resumeKeyDispatching(android.os.IBinder)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy build()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatNumberForMobileDialing(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,boolean)>','<com.android.internal.telephony.DataConnectionTracker: void resetAllRetryCounts()>','<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void markHeaderEnd()>','<android.content.pm.IPackageInstallObserver$Stub$Proxy: void packageInstalled(java.lang.String,int)>','<android.widget.GridView: void setHorizontalSpacing(int)>','<android.net.wifi.p2p.WifiP2pService: byte access$9200(android.net.wifi.p2p.WifiP2pService)>','<com.android.internal.statusbar.StatusBarIcon: void readFromParcel(android.os.Parcel)>','<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForPsRestrictedDisabled(android.os.Handler)>','<com.android.internal.policy.impl.KeyguardViewManager: boolean isShowing()>','<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1: void <init>(java.lang.String,int)>','<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>','<android.view.ViewRootImpl: void playSoundEffect(int)>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceId()>','<com.android.server.pm.PackageManagerService: void updateExternalMediaStatus(boolean,boolean)>','<android.view.View: void setLayoutInsets(android.graphics.Insets)>','<android.os.MemoryFile: int getSize(java.io.FileDescriptor)>','<com.android.server.LocationManagerService$LpAccuracyComparator: int compare(java.lang.Object,java.lang.Object)>','<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener,android.os.Handler)>','<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.database.DatabaseUtils$InsertHelper: void prepareForInsert()>','<android.os.Bundle: java.lang.Object get(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>','<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>','<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>','<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.lang.String[],int)>','<android.widget.ScrollView: boolean arrowScroll(int)>','<android.media.RemoteControlClient: void access$1800(android.media.RemoteControlClient,android.media.IRemoteControlDisplay)>','<com.android.internal.widget.multiwaveview.Ease$Quad$2: float getInterpolation(float)>','<android.view.Window: int getFeatures()>','<com.android.server.sip.SipHelper: javax.sip.ClientTransaction handleChallenge(javax.sip.ResponseEvent,gov.nist.javax.sip.clientauthutils.AccountManager)>','<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()>','<android.webkit.WebViewClassic: boolean sendViewSizeZoom(boolean)>','<com.android.server.wm.DragState: void sendDragStartedIfNeededLw(com.android.server.wm.WindowState)>','<android.view.GLES20Canvas: void resetDisplayListRenderer()>','<android.os.Parcel: double[] createDoubleArray()>','<android.app.admin.DevicePolicyManager: void reportFailedPasswordAttempt()>','<android.graphics.RectF: void <init>(android.graphics.RectF)>','<android.provider.Downloads$Impl$RequestHeaders: void <init>()>','<android.nfc.tech.IsoDep: void connect()>','<android.app.ActivityOptions: int getCustomExitResId()>','<android.provider.Settings$Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)>','<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$OnFrameAvailableListener access$000(android.graphics.SurfaceTexture)>','<com.android.internal.policy.impl.KeyguardViewMediator$1: void onClockVisibilityChanged()>','<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>','<android.media.AudioRoutesInfo$1: void <init>()>','<android.webkit.ZoomManager: android.webkit.WebViewClassic access$600(android.webkit.ZoomManager)>','<android.preference.PreferenceManager: android.app.Activity getActivity()>','<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>','<com.android.vcard.VCardComposer: boolean init(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,android.net.Uri)>','<android.content.ISyncContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.media.AudioService: void access$2200(android.media.AudioService)>','<com.android.internal.telephony.gsm.GsmCall: void onHangupLocal()>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.Bitmap: void setNinePatchChunk(byte[])>','<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>','<com.android.internal.widget.SlidingTab$1: void onAnimationEnd(android.view.animation.Animation)>','<android.content.Intent: android.content.ComponentName getComponent()>','<android.renderscript.RenderScript: void setupDiskCache(java.io.File)>','<android.renderscript.Element: android.renderscript.Element F64_3(android.renderscript.RenderScript)>','<android.accounts.AccountManagerService$6: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,android.accounts.Account,android.os.Bundle)>','<android.app.ActivityThread$ProviderClientRecord: void <init>(android.app.ActivityThread,java.lang.String[],android.content.IContentProvider,android.content.ContentProvider,android.app.IActivityManager$ContentProviderHolder)>','<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int,float,float)>','<android.widget.AbsListView$CheckForLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>','<android.net.wifi.WifiStateMachine: void setCountryCode(java.lang.String,boolean)>','<android.view.Display: int getDisplayId()>','<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)>','<com.android.server.MountService: int[] getStorageUsers(java.lang.String)>','<android.view.Surface$CompatibleCanvas: void setMatrix(android.graphics.Matrix)>','<android.widget.GridView: int getVerticalSpacing()>','<android.view.GLES20Layer: int getLayer()>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollStateDone()>','<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>','<android.widget.AdapterViewAnimator: void onMeasure(int,int)>','<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void setState(int)>','<com.android.server.wm.WindowState: void setInputChannel(android.view.InputChannel)>','<android.app.ActivityThread: void access$400(android.app.ActivityThread,int,java.lang.Object,int)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceId()>','<com.android.internal.telephony.GsmAlphabet: char gsmToChar(int)>','<android.inputmethodservice.KeyboardView: boolean access$800(android.inputmethodservice.KeyboardView)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: int getCount()>','<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)>','<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)>','<android.app.StatusBarManager: void removeIcon(java.lang.String)>','<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>','<android.content.res.StringBlock$Height: void <clinit>()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>','<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>','<android.net.sip.SimpleSessionDescription: void setBandwidth(java.lang.String,int)>','<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>','<com.android.internal.telephony.PhoneProxy: void unregisterForCallWaiting(android.os.Handler)>','<android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>','<android.view.ViewGroup$3: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>','<com.android.internal.telephony.IccCard: void changeIccFdnPassword(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.http.AndroidHttpClient$LoggingConfiguration: boolean access$400(android.net.http.AndroidHttpClient$LoggingConfiguration)>','<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>','<android.animation.Keyframe$FloatKeyframe: void <init>(float,float)>','<android.filterfw.core.FilterPort: void setBlocking(boolean)>','<com.android.internal.app.ActionBarImpl: void setIcon(android.graphics.drawable.Drawable)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void unbind(android.content.Context,int,android.content.Intent)>','<android.view.View$5: void <init>(java.lang.String)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: void startUi(android.os.IBinder,int,int,int,int,boolean)>','<android.widget.ListView: android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View)>','<com.android.server.WallpaperManagerService: void <init>(android.content.Context)>','<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>','<android.webkit.WebViewCore$ReplaceTextData: void <init>()>','<com.android.internal.telephony.gsm.SmsMessage: boolean isTypeZero()>','<android.net.Uri$PathSegments: int size()>','<com.android.internal.telephony.CallManager: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>','<android.net.sip.SipSession$Listener: void onCallChangeFailed(android.net.sip.SipSession,int,java.lang.String)>','<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>','<android.view.View: float getTranslationY()>','<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.server.BluetoothHealthProfileHandler: java.util.List lookupHealthDevicesMatchingStates(int[])>','<com.android.internal.policy.impl.PhoneWindowManager: void initializeHdmiState()>','<android.net.wifi.WifiStateMachine: boolean access$16000(android.net.wifi.WifiStateMachine,java.util.ArrayList)>','<android.hardware.input.IInputManager$Stub: android.os.IBinder asBinder()>','<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>','<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfGeographicalAreaCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.inputmethodservice.KeyboardView: void access$1400(android.inputmethodservice.KeyboardView)>','<android.os.BatteryStats: long getRadioDataUptimeMs()>','<android.hardware.SystemSensorManager$SensorThread: void <init>()>','<android.webkit.WebIconDatabaseClassic: void open(java.lang.String)>','<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteScanWifiLockReleasedLocked()>','<android.view.MotionEvent: android.view.MotionEvent split(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.media.MediaPlayer: int getIntParameter(int)>','<android.server.BluetoothService: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>','<android.opengl.GLLogWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>','<android.webkit.WebViewClassic: android.webkit.PluginList getPluginList()>','<com.android.server.net.NetworkPolicyManagerService$10: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>','<android.widget.ExpandableListConnector: boolean collapseGroup(int)>','<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>','<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.location.Address: boolean hasLatitude()>','<android.text.style.LeadingMarginSpan$Standard: int getLeadingMargin(boolean)>','<com.android.internal.os.BatteryStatsImpl$Counter: void unplug(long,long)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec: void <init>(int,int,int,int)>','<android.preference.PreferenceManager: void registerOnActivityStopListener(android.preference.PreferenceManager$OnActivityStopListener)>','<android.app.ApplicationPackageManager: void freeStorage(long,android.content.IntentSender)>','<com.android.server.WifiService$AsyncServiceHandler: void <init>(com.android.server.WifiService,android.os.Looper)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>','<android.view.inputmethod.InputMethodManager: void scheduleCheckFocusLocked(android.view.View)>','<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>','<android.widget.AbsListView$PositionScroller$2: void run()>','<android.service.wallpaper.IWallpaperService$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.Uri$OpaqueUri: int compareTo(java.lang.Object)>','<com.android.vcard.VCardConfig: void <clinit>()>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: android.os.IBinder asBinder()>','<android.app.PendingIntent$1: android.app.PendingIntent[] newArray(int)>','<android.accounts.IAccountManager$Stub$Proxy: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>','<android.widget.MediaController$4: void onClick(android.view.View)>','<android.os.storage.IMountService$Stub$Proxy: void setUsbMassStorageEnabled(boolean)>','<android.bluetooth.BluetoothClass: void <init>(int)>','<android.util.LongSparseArray: long keyAt(int)>','<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()>','<com.android.internal.telephony.IntRangeManager$ClientRange: boolean equals(java.lang.Object)>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4000(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.os.storage.IObbActionListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>','<android.webkit.SearchBoxImpl: void <init>(android.webkit.WebViewCore,android.webkit.CallbackProxy)>','<android.graphics.Rect: float exactCenterY()>','<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>','<android.accounts.AccountAuthenticatorCache: android.accounts.AuthenticatorDescription parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>','<android.net.wifi.WifiStateMachine: long access$6602(android.net.wifi.WifiStateMachine,long)>','<com.android.server.wm.WindowState: boolean showLw(boolean,boolean)>','<com.android.internal.telephony.OperatorInfo$1: void <init>()>','<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>','<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.util.MathUtils: float degrees(float)>','<com.android.internal.telephony.PhoneProxy: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: void <init>(android.content.Context)>','<com.android.internal.telephony.IccCard: void setIccLockEnabled(boolean,java.lang.String,android.os.Message)>','<com.android.internal.util.XmlUtils: int convertValueToList(java.lang.CharSequence,java.lang.String[],int)>','<android.webkit.WebSettingsClassic: boolean access$202(android.webkit.WebSettingsClassic,boolean)>','<android.net.sip.ISipService$Stub$Proxy: boolean isRegistered(java.lang.String)>','<android.util.LruCache: void <init>(int)>','<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.NsdService$NsdStateMachine: void <init>(com.android.server.NsdService,java.lang.String)>','<android.location.Address: java.lang.String access$402(android.location.Address,java.lang.String)>','<android.net.Uri: java.lang.String encode(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onEnableNewApn()>','<android.view.ViewDebug$RecyclerTraceType: android.view.ViewDebug$RecyclerTraceType[] values()>','<android.widget.RemoteViews: void setTextColor(int,int)>','<android.media.AudioService: void unloadSoundEffects()>','<android.content.res.XmlBlock$Parser: void <init>(android.content.res.XmlBlock,int,android.content.res.XmlBlock)>','<android.graphics.RectF$1: android.graphics.RectF[] newArray(int)>','<android.net.ConnectivityManager: int getNetworkPreference()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimMdnLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.app.ContextImpl: java.lang.String[] fileList()>','<android.view.HardwareRenderer$Gl20Renderer: void setSurfaceTexture(android.view.HardwareLayer,android.graphics.SurfaceTexture)>','<android.accounts.AccountManagerService$MessageHandler: void <init>(android.accounts.AccountManagerService,android.os.Looper)>','<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>','<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>','<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo createFromParcel(android.os.Parcel)>','<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>','<android.inputmethodservice.KeyboardView: void swipeDown()>','<com.android.server.AppWidgetService: void <init>(android.content.Context)>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)>','<android.view.View: int getDrawingCacheQuality()>','<android.media.AudioService: java.lang.Object access$7800()>','<android.net.LinkCapabilities: boolean containsKey(int)>','<android.widget.TextView: void onLocaleChanged()>','<android.view.animation.AlphaAnimation: boolean hasAlpha()>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>','<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,java.lang.String,android.os.ParcelFileDescriptor,boolean)>','<com.android.server.wm.WindowManagerService: boolean canBeImeTarget(com.android.server.wm.WindowState)>','<android.widget.Editor: void access$2000(android.widget.Editor,int,int,boolean)>','<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>','<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1)>','<com.android.internal.telephony.gsm.GsmCallTracker: void registerForVoiceCallStarted(android.os.Handler,int,java.lang.Object)>','<android.webkit.PluginFullScreenHolder: int access$100(android.webkit.PluginFullScreenHolder)>','<com.android.internal.telephony.ServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.DataConnectionTracker)>','<android.widget.AbsListView: void setChoiceMode(int)>','<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>','<android.net.wifi.WifiStateMachine: void access$14100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>','<android.os.Environment: boolean isEncryptedFilesystemEnabled()>','<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>','<android.content.ContentValues$1: android.content.ContentValues createFromParcel(android.os.Parcel)>','<android.content.pm.RegisteredServicesCache$2: void <init>(android.content.pm.RegisteredServicesCache,android.content.pm.RegisteredServicesCacheListener,java.lang.Object,boolean)>','<com.android.internal.statusbar.StatusBarIconList: void dump(java.io.PrintWriter)>','<android.content.IntentFilter: int countDataTypes()>','<android.net.sip.SimpleSessionDescription$Fields: void setAddress(java.lang.String)>','<android.net.EthernetDataTracker$1: void <init>(android.net.EthernetDataTracker)>','<android.widget.RadioButton: void toggle()>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()>','<android.media.AudioService$SoundPoolCallback: void onLoadComplete(android.media.SoundPool,int,int)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getDeviceSvn()>','<android.widget.Editor$PinnedPopupWindow: boolean isShowing()>','<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>','<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>','<android.widget.AbsSpinner: void recycleAllViews()>','<android.text.MeasuredText: float measure(int,int)>','<android.net.wifi.WifiStateMachine: boolean access$16400(android.net.wifi.WifiStateMachine,java.util.ArrayList)>','<android.view.View: void setId(int)>','<android.location.ILocationListener$Stub: android.os.IBinder asBinder()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting peekPackageLPr(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<android.app.Activity: boolean isChangingConfigurations()>','<android.widget.CompoundButton: int[] onCreateDrawableState(int)>','<com.android.internal.os.ProcessStats: int getLastSystemTime()>','<android.view.accessibility.AccessibilityManager: void <clinit>()>','<android.widget.ListView: void setFooterDividersEnabled(boolean)>','<android.content.res.Configuration: boolean equals(java.lang.Object)>','<android.view.DragEvent: android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>','<android.app.Activity: void onPanelClosed(int,android.view.Menu)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void animateTo(int,int,int,int)>','<android.webkit.WebViewClassic$7$1: void <init>(android.webkit.WebViewClassic$7,android.graphics.Picture)>','<android.widget.CheckedTextView: void <init>(android.content.Context)>','<android.view.PointerIcon: android.graphics.Bitmap getBitmap()>','<com.android.internal.telephony.RIL: java.lang.String responseToString(int)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeExtensionMedia(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void getCallForwardingOption(int,android.os.Message)>','<com.android.internal.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.content.ContentProviderResult: void <init>(android.os.Parcel)>','<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>','<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>','<android.view.Window: boolean requestFeature(int)>','<android.widget.FastScroller: void onSectionsChanged()>','<android.view.ViewRootImpl$W: void doneAnimating()>','<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothService: boolean isAirplaneModeOn()>','<android.view.ViewRootImpl$CalledFromWrongThreadException: void <init>(java.lang.String)>','<android.graphics.Matrix: void mapVectors(float[])>','<com.android.internal.telephony.BaseCommands: void unSetOnSignalStrengthUpdate(android.os.Handler)>','<android.media.AudioService: android.bluetooth.BluetoothProfile$ServiceListener access$7300(android.media.AudioService)>','<android.graphics.PointF: void readFromParcel(android.os.Parcel)>','<android.widget.ArrayAdapter: java.util.ArrayList access$100(android.widget.ArrayAdapter)>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnAlphaTag()>','<android.app.Activity: void takeKeyEvents(boolean)>','<android.preference.PreferenceFragment: void access$000(android.preference.PreferenceFragment)>','<android.database.AbstractCursor$SelfContentObserver: void onChange(boolean)>','<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>','<android.app.Instrumentation$EmptyRunnable: void run()>','<android.server.BluetoothAdapterStateMachine: void access$4600(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.os.FileObserver$ObserverThread: void <init>()>','<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.nfc.INfcAdapter$Stub$Proxy: boolean isNdefPushEnabled()>','<android.webkit.WebViewClassic: int getPageBackgroundColor()>','<com.android.uiautomator.core.UiSelector: int getInstance()>','<android.webkit.URLUtil: void <clinit>()>','<com.android.server.am.BatteryStatsService: void noteStopWakelock(int,int,java.lang.String,int)>','<android.inputmethodservice.InputMethodService: void doStartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,boolean)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningChangedLocked(android.os.WorkSource,android.os.WorkSource)>','<android.os.WorkSource$1: android.os.WorkSource[] newArray(int)>','<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>','<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>','<android.webkit.WebViewClassic: void onPageFinished(java.lang.String)>','<android.view.HardwareRenderer: boolean isRequested()>','<android.webkit.JniUtil: android.content.Context getContext()>','<android.net.wifi.WifiApConfigStore$DefaultState: void <init>(android.net.wifi.WifiApConfigStore)>','<android.preference.GenericInflater$FactoryMerger: void <init>(android.preference.GenericInflater$Factory,android.preference.GenericInflater$Factory)>','<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)>','<com.android.server.InputMethodManagerService: void access$900(com.android.server.InputMethodManagerService)>','<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>','<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)>','<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>','<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownValueSet()>','<com.android.server.AlarmManagerService: void setTime(long)>','<com.android.internal.telephony.IccCard: void changeIccLockPassword(java.lang.String,java.lang.String,android.os.Message)>','<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>','<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)>','<com.android.server.AppWidgetService: void updateAppWidgetIds(int[],android.widget.RemoteViews)>','<android.graphics.Region$Op: android.graphics.Region$Op valueOf(java.lang.String)>','<android.animation.LayoutTransition: long getDuration(int)>','<android.widget.AdapterViewAnimator$1: void <init>(android.widget.AdapterViewAnimator,android.view.View,android.widget.AdapterViewAnimator$ViewAndMetaData)>','<android.app.Fragment: boolean isDetached()>','<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>','<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>','<android.content.ContentProviderResult$1: android.content.ContentProviderResult[] newArray(int)>','<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>','<android.media.AudioService$ForceControlStreamClient: void <init>(android.media.AudioService,android.os.IBinder)>','<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>','<android.net.TrafficStats: long getRxPackets(java.lang.String)>','<android.view.View: void setSaveEnabled(boolean)>','<com.android.internal.telephony.PhoneBase: void unregisterForMmiComplete(android.os.Handler)>','<android.renderscript.Element: android.renderscript.Element I8_3(android.renderscript.RenderScript)>','<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>','<android.media.IAudioService$Stub$Proxy: void adjustStreamVolume(int,int,int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$9600(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.app.ActivityThread$NewIntentData: void <init>()>','<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>','<com.android.uiautomator.core.InteractionController: void freezeRotation()>','<android.filterfw.core.OutputPort: void setBasePort(android.filterfw.core.InputPort)>','<android.bluetooth.BluetoothDeviceProfileState: void access$7400(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.server.PowerManagerService: void noteStopWakeLocked(com.android.server.PowerManagerService$WakeLock,android.os.WorkSource)>','<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>','<com.android.server.am.ActivityManagerService$PermissionController: boolean checkPermission(java.lang.String,int,int)>','<android.util.Xml: void <clinit>()>','<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>','<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>','<android.view.GLES20Canvas: void getMatrix(android.graphics.Matrix)>','<android.webkit.DeviceMotionService: void stop()>','<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.io.OutputStream)>','<com.android.internal.telephony.DataConnectionAc: void reqLinkProperties()>','<android.app.IWallpaperManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.DataConnection: void retryForeverUsingLastTimeout()>','<android.telephony.PhoneStateListener: void onCellInfoChanged(android.telephony.CellInfo)>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord activityIdleInternal(android.os.IBinder,boolean,android.content.res.Configuration)>','<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>','<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.location.LocationManager$ListenerTransport$1: void handleMessage(android.os.Message)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void <init>(com.android.server.connectivity.Tethering,java.lang.String,android.os.Looper)>','<android.net.DhcpStateMachine: com.android.internal.util.StateMachine access$500(android.net.DhcpStateMachine)>','<android.view.ViewRootImpl: android.view.ViewParent getParent()>','<com.android.internal.os.LoggingPrintStream: void print(char[])>','<com.android.internal.policy.impl.PhoneWindowManager$5: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>','<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)>','<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.bluetooth.BluetoothDeviceProfileState: void access$2600(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>','<com.android.server.am.ContentProviderConnection: java.lang.String toString()>','<android.server.search.SearchManagerService$GlobalSearchProviderObserver: void onChange(boolean)>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)>','<android.animation.AnimatorSet$DependencyListener: void onAnimationEnd(android.animation.Animator)>','<android.net.wifi.SupplicantState$1: android.net.wifi.SupplicantState[] newArray(int)>','<com.android.internal.policy.impl.GlobalActions: void <init>(android.content.Context,android.view.WindowManagerPolicy$WindowManagerFuncs)>','<com.android.server.net.NetworkIdentitySet: void <init>(java.io.DataInputStream)>','<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>','<android.content.res.CompatibilityInfo$Translator: void <init>(android.content.res.CompatibilityInfo,float,float)>','<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)>','<android.content.IContentService$Stub$Proxy: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.view.Choreographer$FrameDisplayEventReceiver: void run()>','<android.net.MobileDataStateTracker: java.lang.String toString()>','<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>','<android.view.textservice.SpellCheckerSession$InternalListener: void <init>(android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl)>','<android.content.pm.ApplicationInfo: void <init>()>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int)>','<android.graphics.RegionIterator: void <init>(android.graphics.Region)>','<com.android.internal.widget.ScrollingTabContainerView: void <clinit>()>','<com.android.server.LocationManagerService: void <init>(android.content.Context)>','<com.android.internal.util.CharSequences$2: java.lang.String toString()>','<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)>','<com.android.internal.widget.multiwaveview.GlowPadView: int access$500(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>','<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)>','<android.widget.ListView: boolean canAnimate()>','<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.os.StrictMode$4: void run()>','<android.net.wifi.WifiWatchdogStateMachine: com.android.internal.util.IState access$500(android.net.wifi.WifiWatchdogStateMachine)>','<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.filterfw.core.SerializedFrame: float[] getFloats()>','<android.server.BluetoothAdapterStateMachine$PowerOff: boolean processMessage(android.os.Message)>','<com.android.internal.telephony.cat.GetInkeyInputResponseData: void <init>(java.lang.String,boolean,boolean)>','<android.server.BluetoothAdapterStateMachine$Switching: void enter()>','<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>','<android.hardware.Camera$Parameters: float getHorizontalViewAngle()>','<com.android.server.EventLogTags: void writeNotificationCancel(java.lang.String,int,java.lang.String,int,int)>','<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>','<android.renderscript.Element: android.renderscript.Element getSubElement(int)>','<android.widget.Toast$TN$1: void <init>(android.widget.Toast$TN)>','<android.inputmethodservice.InputMethodService$2: void onClick(android.view.View)>','<android.net.wifi.SupplicantStateTracker$DisconnectedState: void enter()>','<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>','<android.app.SearchableInfo$ActionKeyInfo: int describeContents()>','<android.widget.ExpandableListConnector$PositionMetadata: void <clinit>()>','<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToRGB(byte[],int,boolean,byte[])>','<com.android.internal.telephony.cdma.sms.UserData: byte[] stringToAscii(java.lang.String)>','<android.widget.TextView: boolean getHorizontallyScrolling()>','<android.view.ViewGroup: android.view.animation.Animation$AnimationListener access$200(android.view.ViewGroup)>','<android.opengl.GLLogWrapper: void glBindFramebufferOES(int,int)>','<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>','<com.android.server.wm.WindowManagerService: float getAnimationScale(int)>','<android.widget.AbsListView: void onDisplayHint(int)>','<android.content.Entity$NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>','<android.webkit.DeviceOrientationService$1: void <init>(android.webkit.DeviceOrientationService)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getConnectedDevices()>','<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>','<android.telephony.GsmCellIdentity: int getLac()>','<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>','<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>','<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>','<android.net.Uri$OpaqueUri: java.lang.String toString()>','<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,com.android.internal.util.Predicate,long)>','<com.android.internal.view.IInputMethodSession$Stub: com.android.internal.view.IInputMethodSession asInterface(android.os.IBinder)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,java.util.HashMap,java.util.ArrayList)>','<android.app.Activity: void openContextMenu(android.view.View)>','<android.graphics.RectF: void union(float,float,float,float)>','<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)>','<android.widget.TextView: void setLinkTextColor(int)>','<android.net.http.Connection: android.net.http.SslCertificate getCertificate()>','<android.util.LongSparseArray: void delete(long)>','<android.telephony.JapanesePhoneNumberFormatter: void format(android.text.Editable)>','<android.view.ViewStub: int getLayoutResource()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int)>','<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)>','<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.opengl.GLLogWrapper: void glActiveTexture(int)>','<com.android.internal.telephony.DataConnectionTracker$State: void <clinit>()>','<android.webkit.HTML5VideoViewProxy: android.content.Context getContext()>','<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>','<com.android.server.WifiService$NotificationEnabledSettingObserver: void <init>(com.android.server.WifiService,android.os.Handler)>','<android.animation.LayoutTransition: void layoutChange(android.view.ViewGroup)>','<android.net.wifi.WifiStateMachine$DriverUnloadingState$1: void <init>(android.net.wifi.WifiStateMachine$DriverUnloadingState,android.os.Message)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void cleanUp()>','<android.content.Intent: java.lang.String toString()>','<android.widget.Spinner: void <init>(android.content.Context)>','<com.android.internal.util.TypedProperties$TypeException: void <init>(java.lang.String,java.lang.Object,java.lang.String)>','<android.speech.tts.TextToSpeech$Engine: void <init>(android.speech.tts.TextToSpeech)>','<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>','<android.webkit.ZoomControlExternal$1: void <init>(android.webkit.ZoomControlExternal)>','<com.android.internal.telephony.CallManager: void unregisterForIncomingRing(android.os.Handler)>','<android.media.AudioService: void setMasterMute(boolean,int,android.os.IBinder)>','<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)>','<android.widget.Editor$HandleView$1: void run()>','<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<android.location.ILocationManager$Stub$Proxy: java.util.List getAllProviders()>','<com.android.internal.telephony.gsm.GSMPhone: boolean canTransfer()>','<android.filterfw.core.SerializedFrame: boolean hasNativeAllocation()>','<android.net.MobileDataStateTracker: java.lang.String access$200(android.net.MobileDataStateTracker)>','<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>','<android.widget.ListView: int getMaxScrollAmount()>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>','<android.content.ContentService$ObserverNode: void collectObserversLocked(android.net.Uri,int,android.database.IContentObserver,boolean,java.util.ArrayList)>','<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void status(int,int,int,java.lang.String)>','<android.util.LruCache: int evictionCount()>','<com.android.server.input.InputManagerService$8: void <init>(com.android.server.input.InputManagerService,java.lang.String[])>','<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)>','<android.net.wifi.WifiStateMachine: void clearBlacklist()>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskReads()>','<com.android.internal.telephony.IccCardApplication$AppType: void <clinit>()>','<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>','<android.widget.GridView: int computeVerticalScrollOffset()>','<android.graphics.Matrix$1: void setSinCos(float,float)>','<android.view.animation.AnimationSet: boolean hasAlpha()>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>','<android.widget.Editor$1: void <init>(android.widget.Editor)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setVisibleInDownloadsUi(boolean)>','<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void <clinit>()>','<android.app.KeyguardManager$KeyguardLock: void <init>(android.app.KeyguardManager,java.lang.String)>','<android.animation.LayoutTransition$2: void <init>(android.animation.LayoutTransition,android.view.View)>','<android.net.sip.SimpleSessionDescription$Fields: void <init>(java.lang.String)>','<com.android.server.DevicePolicyManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.view.ViewRootImpl: void invalidateChild(android.view.View,android.graphics.Rect)>','<com.android.server.sip.SipService$SipSessionGroupExt: void setWakeupTimer(com.android.server.sip.SipWakeupTimer)>','<android.app.ActivityManager$TaskThumbnails: void <clinit>()>','<android.webkit.CallbackProxy: void onUnhandledKeyEvent(android.view.KeyEvent)>','<com.android.server.DevicePolicyManagerService: void updateMaximumTimeToLockLocked()>','<com.android.internal.statusbar.IStatusBarService$Stub: void <init>()>','<android.text.SpannableStringBuilder: void <clinit>()>','<com.android.internal.app.AlertController: void setInverseBackgroundForced(boolean)>','<android.net.wifi.WifiStateMachine: void access$13600(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.view.View$TransformationInfo: boolean access$1702(android.view.View$TransformationInfo,boolean)>','<android.webkit.WebSettingsClassic: void setDefaultTextEncodingName(java.lang.String)>','<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] listAllTransports()>','<android.os.StrictMode: boolean access$800()>','<android.os.storage.StorageManager$StorageStateChangedStorageEvent: void <init>(android.os.storage.StorageManager,java.lang.String,java.lang.String,java.lang.String)>','<android.text.method.ScrollingMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>','<android.media.AudioService$RemoteControlStackEntry: void <init>(android.app.PendingIntent,android.content.ComponentName)>','<android.animation.AnimatorSet: java.util.HashMap access$100(android.animation.AnimatorSet)>','<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.server.BluetoothService: void makeServiceChannelCallbacks(java.lang.String)>','<android.view.KeyEvent: void <init>(int,int)>','<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakInstalled()>','<android.view.InputDevice: int getKeyboardType()>','<android.filterfw.core.FilterGraph: void beginProcessing()>','<com.android.internal.telephony.WspTypeDecoder: long getValue32()>','<android.app.ActivityManager$MemoryInfo: int describeContents()>','<com.android.internal.content.PackageMonitor: int isPackageDisappearing(java.lang.String)>','<android.widget.AbsListView: int access$200(android.widget.AbsListView)>','<android.provider.ContactsContract$SyncState: void <clinit>()>','<com.android.internal.telephony.cat.GetInputParams: boolean setIcon(android.graphics.Bitmap)>','<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<android.webkit.HTML5VideoView: boolean getPlayerBuffering()>','<com.android.internal.telephony.DriverCall: void <init>()>','<com.android.server.location.MockProvider: boolean requiresCell()>','<android.util.MathUtils: float min(int,int)>','<android.server.BluetoothService: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>','<android.app.IThumbnailRetriever$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>','<android.os.Looper: android.os.Looper getMainLooper()>','<android.text.style.MetricAffectingSpan$Passthrough: android.text.style.MetricAffectingSpan getUnderlying()>','<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)>','<com.android.server.AppWidgetService: android.widget.RemoteViews getAppWidgetViews(int)>','<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.filterfw.core.FilterGraph: void <init>()>','<android.widget.FrameLayout: void setForegroundGravity(int)>','<com.android.internal.os.LoggingPrintStream: void close()>','<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>','<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)>','<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>','<android.webkit.PluginFullScreenHolder: void setContentView(android.view.View)>','<android.app.Activity: void performSaveInstanceState(android.os.Bundle)>','<android.net.wifi.WifiStateMachine: void access$1500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.RelativeLayout$LayoutParams: void addRule(int,int)>','<android.animation.ValueAnimator: boolean isStarted()>','<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>','<android.view.GLES20RenderLayer: void resize(int,int)>','<android.os.storage.StorageVolume: int hashCode()>','<android.webkit.WebView: void reload()>','<com.android.internal.widget.DrawableHolder: float getY()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])>','<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<android.accounts.AccountManager$11: void run()>','<android.os.Handler: void removeCallbacks(java.lang.Runnable)>','<com.android.server.wm.WindowManagerService: void setInputMethodAnimLayerAdjustment(int)>','<com.android.internal.telephony.gsm.GSMPhone: void queryCdmaRoamingPreference(android.os.Message)>','<android.graphics.RectF: void set(android.graphics.Rect)>','<android.view.animation.Animation: void setBackgroundColor(int)>','<android.text.util.LinkSpec: void <init>()>','<com.android.server.input.InputManagerService: void systemReady(android.server.BluetoothService)>','<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()>','<android.net.http.AndroidHttpClient: void disableCurlLogging()>','<android.view.GLES20Canvas: boolean clipRect(int,int,int,int)>','<android.widget.TextView: int getInputType()>','<android.util.Slog: int d(java.lang.String,java.lang.String)>','<com.android.server.StatusBarManagerService$7: void <init>(com.android.server.StatusBarManagerService)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void clearDisconnected()>','<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>','<com.android.server.wm.WindowManagerService: void debugLayoutRepeats(java.lang.String,int)>','<android.view.View: void setLayerType(int,android.graphics.Paint)>','<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>','<android.nfc.NdefMessage: java.lang.String toString()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getConnectedInputDevices()>','<android.app.ApplicationPackageManager: void handlePackageBroadcast(int,java.lang.String[],boolean)>','<android.net.wifi.WifiWatchdogStateMachine: void access$2300(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.DataConnectionAc: void reqAddApnContext(com.android.internal.telephony.ApnContext)>','<android.webkit.ClientCertRequestHandler$3: void <init>(android.webkit.ClientCertRequestHandler,byte[],byte[][])>','<android.text.style.MetricAffectingSpan: void <init>()>','<android.webkit.WebViewClassic$RequestFormData: void run()>','<com.android.server.wm.WindowState$DeathRecipient: void binderDied()>','<android.webkit.WebViewCore: android.webkit.WebSettingsClassic getSettings()>','<android.app.ContextImpl$14: java.lang.Object createStaticService()>','<android.location.Country: java.lang.String toString()>','<android.webkit.WebSettingsClassic: java.lang.String getCursiveFontFamily()>','<android.telephony.SmsCbMessage: void <init>(android.os.Parcel)>','<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>','<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$900(com.android.internal.policy.impl.KeyguardUpdateMonitor,android.content.Intent)>','<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>','<android.content.pm.IPackageManager$Stub$Proxy: void enterSafeMode()>','<android.view.ViewConfiguration: int getEdgeSlop()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode()>','<android.net.wifi.WifiApConfigStore$ActiveState$1: void <init>(android.net.wifi.WifiApConfigStore$ActiveState)>','<android.view.animation.LayoutAnimationController: float getDelay()>','<android.webkit.WebView: void onAttachedToWindow()>','<android.widget.Editor$ActionPopupWindow: void createPopupWindow()>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int,int)>','<android.view.View: void onFinishInflate()>','<android.media.MediaRouter$UserRouteInfo: void setIconDrawable(android.graphics.drawable.Drawable)>','<android.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>','<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>','<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()>','<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>','<android.view.View: int getRight()>','<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>','<android.webkit.WebView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.content.Intent: android.content.Intent getSelector()>','<com.android.internal.widget.multiwaveview.GlowPadView: void onMeasure(int,int)>','<com.android.internal.os.IResultReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: void disconnect()>','<android.content.Context: boolean isRestricted()>','<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>','<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>','<com.android.server.MountService: com.android.server.pm.PackageManagerService access$300(com.android.server.MountService)>','<com.android.internal.telephony.PhoneProxy: int enableApnType(java.lang.String)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)>','<com.android.internal.telephony.sip.SipPhoneBase: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<android.content.pm.ConfigurationInfo: java.lang.String toString()>','<android.app.Dialog: void onContentChanged()>','<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int doPostInstall(int,int)>','<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void setDefaultTouchRecepient(android.view.View)>','<com.android.internal.widget.AbsActionBarView: void setSplitView(com.android.internal.widget.ActionBarContainer)>','<android.media.AudioManager: void setBluetoothScoOn(boolean)>','<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>','<android.view.animation.LayoutAnimationController: void setDelay(float)>','<com.android.server.WifiService: void acquireMulticastLock(android.os.IBinder,java.lang.String)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void setSrcDevice(android.net.wifi.p2p.WifiP2pDevice)>','<android.content.pm.ProviderInfo: void <clinit>()>','<android.app.Activity: android.content.SharedPreferences getPreferences(int)>','<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>','<android.graphics.Picture: void <init>()>','<android.server.BluetoothHealthProfileHandler$HealthChannel: android.os.ParcelFileDescriptor access$1600(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<android.net.wifi.p2p.WifiP2pConfig$1: void <init>()>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean access$3900(com.android.server.pm.PackageManagerService$AsecInstallArgs)>','<android.provider.Telephony$Mms$Outbox: void <clinit>()>','<android.net.wifi.WifiStateMachine: void access$3700(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.policy.IFaceLockInterface$Stub: void <init>()>','<android.net.wifi.IWifiManager$Stub$Proxy: int getFrequencyBand()>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void access$200(boolean)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectNetwork()>','<android.webkit.WebView: android.graphics.Bitmap getFavicon()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager$1: void handleMessage(android.os.Message)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void onDetachedFromWindow()>','<android.os.StrictMode$Span: java.lang.String access$1900(android.os.StrictMode$Span)>','<android.text.TextPaint: void set(android.text.TextPaint)>','<com.android.server.NotificationManagerService$WorkerHandler: void handleMessage(android.os.Message)>','<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>','<com.android.server.IntentResolver$1: void <init>()>','<android.app.ActivityManager$RunningServiceInfo: void <clinit>()>','<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()>','<android.media.AudioService: void setVibrateSetting(int,int)>','<com.android.internal.telephony.RIL: void setNetworkSelectionModeAutomatic(android.os.Message)>','<android.net.wifi.p2p.WifiP2pService: com.android.internal.util.AsyncChannel access$9300(android.net.wifi.p2p.WifiP2pService)>','<android.view.View$ListenerInfo: android.view.View$OnDragListener access$600(android.view.View$ListenerInfo)>','<com.android.internal.telephony.IccFileHandler: void loadEFTransparent(int,android.os.Message)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: void <init>(com.android.internal.telephony.IccFileHandler,com.android.internal.telephony.AdnRecordCache)>','<com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.animation.ValueAnimator: long getCurrentPlayTime()>','<android.content.res.XmlBlock: int access$1400(int)>','<android.os.StrictMode$Span: android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span)>','<com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState[] values()>','<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>','<android.accounts.IAccountManager$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>','<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>','<com.android.internal.telephony.gsm.GsmConnection: boolean isIncoming()>','<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>','<android.widget.TextView: void setFreezesText(boolean)>','<com.android.internal.widget.WaveView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>','<android.content.SyncStorageEngine: void removeAuthority(android.accounts.Account,int,java.lang.String)>','<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>','<com.android.server.am.BatteryStatsService: void noteScreenOff()>','<android.view.textservice.SpellCheckerSubtype: void <init>(int,java.lang.String,java.lang.String)>','<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>','<com.android.internal.telephony.DataConnection$DcActiveState: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<com.android.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>','<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)>','<android.os.RegistrantList: int size()>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getDeviceSvn()>','<com.android.internal.policy.impl.SimUnlockScreen$1: void onSimLockChangedResponse(boolean)>','<android.view.VelocityTracker: float getYVelocity()>','<android.net.sip.SipSession: void answerCall(java.lang.String,int)>','<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>','<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>','<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder asBinder()>','<android.webkit.ZoomManager: boolean supportsMultiTouchZoom()>','<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater$Factory)>','<android.webkit.WebCoreThreadWatchdog: android.os.Handler access$100(android.webkit.WebCoreThreadWatchdog)>','<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>','<com.android.internal.telephony.gsm.GsmCall: java.util.List getConnections()>','<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void log(java.lang.String)>','<android.app.DownloadManager$Request: void <init>(android.net.Uri)>','<android.database.AbstractCursor: boolean isFirst()>','<com.android.internal.os.BatteryStatsImpl: long getTotalTcpBytesSent(int)>','<com.android.internal.telephony.cdma.sms.BearerData: com.android.internal.telephony.cdma.sms.BearerData decode(byte[],int)>','<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>','<android.widget.ProgressBar: void onMeasure(int,int)>','<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>','<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>','<android.provider.Downloads$Impl: java.lang.String statusToString(int)>','<android.graphics.Matrix$1: void set(android.graphics.Matrix)>','<android.media.AudioManager: int getMasterStreamType()>','<com.android.internal.telephony.DataConnectionAc: void addApnContextSync(com.android.internal.telephony.ApnContext)>','<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>','<android.inputmethodservice.KeyboardView$3: void onText(java.lang.CharSequence)>','<com.android.internal.os.PowerProfile: void <init>(android.content.Context)>','<android.location.IGpsStatusListener$Stub: android.os.IBinder asBinder()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>','<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>','<com.android.internal.telephony.PhoneProxy: void setCdmaSubscription(int,android.os.Message)>','<android.view.animation.LayoutAnimationController$AnimationParameters: void <init>()>','<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.ZoomButton: void <init>(android.content.Context)>','<android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>','<android.widget.Editor: void makeBlink()>','<android.webkit.Plugin: java.lang.String toString()>','<android.renderscript.ProgramRaster$CullMode: android.renderscript.ProgramRaster$CullMode valueOf(java.lang.String)>','<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSystemAudioRoute()>','<android.server.BluetoothService: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.test.mock.MockContentResolver: void unstableProviderDied(android.content.IContentProvider)>','<android.accounts.AccountManagerService$UserAccounts: java.util.HashMap access$400(android.accounts.AccountManagerService$UserAccounts)>','<android.content.SyncManager$1: void <init>(android.content.SyncManager)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>','<android.bluetooth.BluetoothDevice: boolean createBond()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothPbap access$1502(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothPbap)>','<com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>','<com.android.server.am.ActivityStack: boolean finishActivityAffinityLocked(android.os.IBinder)>','<android.net.DhcpStateMachine: boolean access$800(android.net.DhcpStateMachine,android.net.DhcpStateMachine$DhcpAction)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader$1: void <init>(android.webkit.HTML5VideoViewProxy$PosterDownloader)>','<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>','<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>','<android.app.ApplicationErrorReport$AnrInfo: void dump(android.util.Printer,java.lang.String)>','<android.view.View: void <init>(android.content.Context)>','<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>','<android.telephony.TelephonyManager: void disableLocationUpdates()>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>','<android.view.ViewGroup$2: void run()>','<android.widget.ZoomButton: void setZoomSpeed(long)>','<com.android.internal.view.menu.MenuItemImpl: boolean isActionButton()>','<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.Activity: void setPersistent(boolean)>','<com.android.internal.telephony.IccFileNotFound: void <init>(java.lang.String)>','<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>','<android.accounts.AccountManagerService$4: void onResult(android.os.Bundle)>','<android.server.BluetoothService: java.lang.String readDockBluetoothAddress()>','<android.database.sqlite.SQLiteConnection: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>','<android.graphics.drawable.ColorDrawable$ColorState: int getChangingConfigurations()>','<com.android.internal.telephony.test.ModelInterpreter: void println(java.lang.String)>','<com.android.internal.content.PackageMonitor: void onPackagesAvailable(java.lang.String[])>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onGrabbed(android.view.View,int)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean saveConfiguration()>','<com.android.server.am.ActivityStack: java.util.ArrayList processStoppingActivitiesLocked(boolean)>','<com.android.internal.policy.impl.PatternUnlockScreen: void access$800(com.android.internal.policy.impl.PatternUnlockScreen,long)>','<com.android.internal.telephony.cat.CatService: void onCmdResponse(com.android.internal.telephony.cat.CatResponseMessage)>','<android.net.wifi.WifiStateMachine: void access$10600(android.net.wifi.WifiStateMachine,java.lang.String)>','<android.webkit.ZoomManager: void onPageFinished(java.lang.String)>','<android.text.format.Time: int getActualMaximum(int)>','<com.android.vcard.VCardParserImpl_V21: void handleParams(com.android.vcard.VCardProperty,java.lang.String)>','<android.hardware.usb.UsbDevice: int getDeviceClass()>','<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getPossibleNumberPattern()>','<android.database.DatabaseUtils: int findRowIdColumnIndex(java.lang.String[])>','<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>','<android.view.PointerIcon: android.view.PointerIcon createCustomIcon(android.graphics.Bitmap,float,float)>','<android.net.LocalSocketImpl: void <init>()>','<android.animation.LayoutTransition: java.util.LinkedHashMap access$1200(android.animation.LayoutTransition)>','<com.android.internal.view.IInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection)>','<android.content.ContentService$ObserverNode: boolean removeObserverLocked(android.database.IContentObserver)>','<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>','<android.view.FocusFinder: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void enter()>','<android.location.Address: void setLongitude(double)>','<android.renderscript.Element: int getSubElementCount()>','<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>','<com.android.internal.policy.impl.SimUnlockScreen: android.widget.TextView access$400(com.android.internal.policy.impl.SimUnlockScreen)>','<android.content.pm.UserInfo: boolean isPrimary()>','<android.app.backup.RestoreSession$RestoreObserverWrapper$1: void <init>(android.app.backup.RestoreSession$RestoreObserverWrapper,android.os.Looper,android.app.backup.RestoreSession)>','<android.widget.RemoteViewsAdapter: void access$1400(android.widget.RemoteViewsAdapter)>','<com.android.internal.telephony.RIL: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>','<com.android.server.ConnectivityService$VpnCallback: void override(java.util.List,java.util.List)>','<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>','<android.os.Debug$InstructionCount: void <init>()>','<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>','<android.content.pm.IPackageMoveObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.ViewRootImpl: boolean scrollToRectOrFocus(android.graphics.Rect,boolean)>','<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>','<android.app.IInstrumentationWatcher$Stub: void <init>()>','<com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State[] values()>','<android.webkit.ZoomManager: float access$500(android.webkit.ZoomManager)>','<android.hardware.LegacySensorManager$LegacyListener: boolean registerSensor(int)>','<android.app.ContextImpl$18: java.lang.Object getService(android.app.ContextImpl)>','<com.android.server.sip.SipSessionGroup: void resetExternalAddress()>','<android.bluetooth.BluetoothDeviceProfileState: void access$3000(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.view.ViewPropertyAnimator: java.util.HashMap access$700(android.view.ViewPropertyAnimator)>','<com.android.server.pm.Installer: int deleteCacheFiles(java.lang.String)>','<android.hardware.Camera: void finalize()>','<com.android.server.PowerManagerService: android.content.Intent access$3800(com.android.server.PowerManagerService)>','<android.net.LinkAddress: java.lang.String toString()>','<android.database.CursorWindow: boolean putNull(int,int)>','<android.webkit.WebSettingsClassic: boolean getJavaScriptCanOpenWindowsAutomatically()>','<android.view.textservice.SuggestionsInfo$1: android.view.textservice.SuggestionsInfo createFromParcel(android.os.Parcel)>','<android.net.wifi.SupplicantStateTracker$CompletedState: void <init>(android.net.wifi.SupplicantStateTracker)>','<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()>','<android.view.VolumePanel: void onRemoteVolumeUpdateIfShown()>','<android.nfc.NdefRecord: byte[] getPayload()>','<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String)>','<android.net.DhcpStateMachine: void access$1000(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>','<android.view.ViewGroup: void onViewRemoved(android.view.View)>','<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>','<com.android.internal.widget.DrawableHolder: void setX(float)>','<android.widget.ExpandableListPosition: void recycle()>','<com.android.internal.os.LoggingPrintStream: void print(int)>','<com.android.internal.telephony.CallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)>','<android.view.View$MeasureSpec: int getMode(int)>','<com.android.server.pm.Settings: void removeDisabledSystemPackageLPw(java.lang.String)>','<android.content.SyncManager: android.content.SyncStorageEngine getSyncStorageEngine()>','<com.android.server.NsdService$NsdStateMachine$DisabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<android.widget.AbsListView$ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimCdmaHomeLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: boolean equals(java.lang.Object)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String)>','<android.media.effect.effects.BlackWhiteEffect: void apply(int,int,int,int)>','<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>','<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View)>','<android.net.wifi.WifiStateMachine: void addToBlacklist(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.PhoneBase access$800(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.speech.tts.ITextToSpeechCallback$Stub: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.text.style.CharacterStyle$Passthrough: void updateDrawState(android.text.TextPaint)>','<android.app.LocalActivityManager: void dispatchStop()>','<android.content.res.ColorStateList: java.lang.String toString()>','<android.os.RemoteCallback$LocalCallback: void <init>(android.os.RemoteCallback)>','<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>','<android.view.Surface: void <init>(android.view.SurfaceSession,int,int,int,int,int,int)>','<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>','<com.android.internal.os.BatteryStatsImpl: void setOnBatteryLocked(boolean,int,int)>','<android.content.ContentProvider$Transport: void <init>(android.content.ContentProvider)>','<android.widget.MediaController: void <init>(android.content.Context,boolean)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int,java.lang.String)>','<android.widget.SearchView: void onQueryRefine(java.lang.CharSequence)>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcInactiveState access$200(com.android.internal.telephony.DataConnection)>','<android.widget.TextView: void setTextSize(float)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>','<android.view.accessibility.IAccessibilityManagerClient$Stub: android.os.IBinder asBinder()>','<android.content.SyncAdapterType: void <clinit>()>','<android.webkit.WebViewClassic: android.webkit.WebBackForwardList copyBackForwardList()>','<android.graphics.Interpolator: android.graphics.Interpolator$Result timeToValues(float[])>','<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean access$602(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>','<android.net.wifi.p2p.WifiP2pGroup: void <init>()>','<android.media.AudioManager: void requestAudioFocusForCall(int,int)>','<android.content.res.Configuration$1: android.content.res.Configuration[] newArray(int)>','<android.content.pm.ConfigurationInfo: void <clinit>()>','<com.android.server.input.InputManagerService$VibratorToken: void <init>(com.android.server.input.InputManagerService,int,android.os.IBinder,int)>','<com.android.internal.app.IUsageStats$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodInfo: void <clinit>()>','<com.android.server.net.NetworkStatsService$8: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.am.ActivityManagerService: void activitySlept(android.os.IBinder)>','<android.webkit.GeolocationPermissions: void allow(java.lang.String)>','<android.widget.AbsListView$PositionScroller: void run()>','<android.content.IContentService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.accounts.AccountManager$AmsTask$1: void <init>(android.accounts.AccountManager)>','<android.widget.MediaController$5: void onStopTrackingTouch(android.widget.SeekBar)>','<android.widget.ListView: boolean recycleOnMeasure()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataConnectionDetached()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getLeadingDigits()>','<android.app.Activity: void setResult(int,android.content.Intent)>','<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<android.net.wifi.WifiNative: boolean enableNetwork(int,boolean)>','<android.util.SparseBooleanArray: void <init>()>','<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)>','<com.android.internal.telephony.IccFileHandler: void <init>(com.android.internal.telephony.IccCard,java.lang.String,com.android.internal.telephony.CommandsInterface)>','<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>','<com.android.internal.telephony.Call$State: void <clinit>()>','<com.android.internal.telephony.ApnContext: boolean isEnabled()>','<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>','<android.view.GLES20Canvas: void scale(float,float)>','<android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>','<android.content.SyncManager$11: void <init>(android.content.SyncManager)>','<android.widget.Editor$ActionPopupWindow: void onClick(android.view.View)>','<android.os.AsyncTask$SerialExecutor: void execute(java.lang.Runnable)>','<android.provider.Telephony$Sms: void <init>()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checked(boolean)>','<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>','<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PeerListListener)>','<com.android.server.WifiService: java.util.List getScanResults()>','<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)>','<android.view.View: int getFadeHeight(boolean)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void <init>(com.android.ex.variablespeed.MediaPlayerProxy)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>','<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimImsimLoaded: java.lang.String getEfName()>','<android.net.wifi.WifiStateMachine$DriverFailedState: boolean processMessage(android.os.Message)>','<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>','<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: java.lang.String toString()>','<android.widget.AutoCompleteTextView: boolean enoughToFilter()>','<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>','<android.util.StateSet: boolean stateSetMatches(int[],int)>','<com.android.internal.telephony.IccFileHandler: void loadEFImgLinearFixed(int,android.os.Message)>','<com.android.server.pm.PackageVerificationState: boolean isInstallAllowed()>','<com.android.internal.telephony.cdma.CDMAPhone: void stopDtmf()>','<android.view.WindowManager$LayoutParams$1: void <init>()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <clinit>()>','<android.view.View: void clearAccessibilityFocusNoCallbacks()>','<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void <init>(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<android.webkit.WebViewClassic$SelectionHandleAlpha: void <init>(android.webkit.WebViewClassic,android.webkit.WebViewClassic$1)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>','<android.webkit.WebView: void access$1001(android.webkit.WebView,android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.gsm.GSMPhone: void notifyLocationChanged()>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>','<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>','<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>','<android.graphics.Bitmap: boolean isRecycled()>','<android.content.res.CompatibilityInfo$2: android.content.res.CompatibilityInfo[] newArray(int)>','<android.net.wifi.WifiManager$MulticastLock: void acquire()>','<android.app.backup.BackupAgentHelper: void unregisterReceiver(android.content.BroadcastReceiver)>','<android.text.HtmlToSpannedConverter$Header: int access$900(android.text.HtmlToSpannedConverter$Header)>','<com.android.server.net.NetworkStatsService: java.lang.Object access$100(com.android.server.net.NetworkStatsService)>','<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int allocateAppWidgetId(java.lang.String,int)>','<android.view.HardwareRenderer: void disable(boolean)>','<android.webkit.CallbackProxy: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)>','<android.media.AudioManager: void adjustVolume(int,int)>','<android.os.ParcelFileDescriptor$1: android.os.ParcelFileDescriptor createFromParcel(android.os.Parcel)>','<com.android.server.LocationManagerService: void access$400(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver)>','<android.server.BluetoothService: void onCreatePairedDeviceResult(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void access$700(com.android.server.am.ActivityManagerService,android.content.Intent)>','<android.webkit.WebSettingsClassic: void setStandardFontFamily(java.lang.String)>','<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.BrowserFrame: void <init>(android.content.Context,android.webkit.WebViewCore,android.webkit.CallbackProxy,android.webkit.WebSettingsClassic,java.util.Map)>','<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onDeviceProvisioned()>','<android.view.MotionEvent: void setSource(int)>','<android.webkit.WebViewCore: void access$6700(android.webkit.WebViewCore,java.io.OutputStream,android.webkit.ValueCallback)>','<android.content.IOnPrimaryClipChangedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.Environment: java.lang.String getExternalStorageState()>','<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>','<android.view.View: boolean isVerticalScrollBarEnabled()>','<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State access$1000(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<com.android.internal.telephony.cat.SelectItemParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.Menu,boolean)>','<android.widget.SpellChecker: void access$1000(android.widget.SpellChecker)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>','<android.net.wifi.WifiManager: boolean reconnect()>','<android.app.IProcessObserver$Stub$Proxy: void onProcessDied(int,int)>','<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)>','<android.os.RecoverySystem: java.lang.String handleAftermath()>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void access$500(com.android.server.InputMethodManagerService$InputMethodFileManager,java.lang.String)>','<android.webkit.WebViewClassic: void resetTrackballTime()>','<android.preference.Preference: void setIntent(android.content.Intent)>','<com.android.internal.util.FastXmlSerializer: java.lang.String getName()>','<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.media.AudioService$AudioHandler: void access$4700(android.media.AudioService$AudioHandler,android.media.MediaPlayer)>','<android.net.http.AndroidHttpClient$LoggingConfiguration: void access$600(android.net.http.AndroidHttpClient$LoggingConfiguration,java.lang.String)>','<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>','<com.android.internal.telephony.sip.SipPhone$SipCall: android.net.rtp.AudioGroup access$1500(com.android.internal.telephony.sip.SipPhone$SipCall)>','<android.content.pm.VerifierDeviceIdentity: void <clinit>()>','<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.cat.Item$1: void <init>()>','<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()>','<com.android.internal.telephony.CallManager: void unregisterForCdmaOtaStatusChange(android.os.Handler)>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.ItemsIconId retrieveItemsIconId(com.android.internal.telephony.cat.ComprehensionTlv)>','<android.view.animation.AnimationUtils: void <init>()>','<android.graphics.Paint: android.graphics.Xfermode getXfermode()>','<android.view.Display: int getExternalRotation()>','<android.content.SyncManager: void access$3000(android.content.SyncManager,android.content.SyncOperation)>','<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewStub: void setInflatedId(int)>','<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset access$002(com.android.server.am.BatteryStatsService,android.bluetooth.BluetoothHeadset)>','<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>','<com.android.internal.telephony.CallManager: void setAudioMode()>','<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>','<android.os.PowerManager$WakeLock: void acquire(long)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void separate(com.android.internal.telephony.cdma.CdmaConnection)>','<android.net.wifi.p2p.WifiP2pConfig$Persist: void <clinit>()>','<android.hardware.Camera: void release()>','<android.webkit.ZoomControlExternal$3: void onClick(android.view.View)>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.appwidget.AppWidgetManager: void <clinit>()>','<android.renderscript.ProgramRaster: boolean isPointSpriteEnabled()>','<android.view.VelocityTracker: void finalize()>','<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>','<android.widget.AbsSeekBar: void onKeyChange()>','<android.util.LruCache: int hitCount()>','<android.net.http.Request: void reset()>','<android.net.LinkProperties: java.util.Collection getDnses()>','<android.server.BluetoothPanProfileHandler: android.server.BluetoothPanProfileHandler getInstance(android.content.Context,android.server.BluetoothService)>','<android.webkit.WebViewClassic: boolean selectText()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void onKeyboardChange(boolean)>','<com.android.server.am.ActivityManagerService$12: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.String,java.lang.StringBuilder,java.io.File,android.app.ApplicationErrorReport$CrashInfo,java.lang.String,android.os.DropBoxManager)>','<com.android.server.MountService: java.util.concurrent.CountDownLatch access$1702(com.android.server.MountService,java.util.concurrent.CountDownLatch)>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)>','<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>','<android.app.Instrumentation$ActivityWaiter: void <init>(android.content.Intent)>','<com.android.internal.telephony.BaseCommands: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>','<android.graphics.drawable.InsetDrawable$InsetState: int getChangingConfigurations()>','<com.android.vcard.VCardParser_V21: void <init>(int)>','<android.widget.RemoteViews: void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.widget.RemoteViews$1)>','<com.android.server.PowerManagerService: int getSupportedWakeLockFlags()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>','<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>','<com.android.internal.view.InputConnectionWrapper: boolean setSelection(int,int)>','<android.net.nsd.NsdManager: android.net.nsd.NsdServiceInfo access$300(android.net.nsd.NsdManager,int)>','<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>','<android.view.VelocityTracker$1: android.view.VelocityTracker newInstance()>','<com.android.internal.policy.IFaceLockInterface$Stub: com.android.internal.policy.IFaceLockInterface asInterface(android.os.IBinder)>','<android.net.TrafficStats: void clearThreadStatsUid()>','<android.view.HardwareLayer: void setDisplayList(android.view.DisplayList)>','<android.graphics.Color: int green(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectHeadset(java.lang.String)>','<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean hasGrantedPolicy(android.content.ComponentName,int)>','<android.widget.AutoCompleteTextView: void access$500(android.widget.AutoCompleteTextView,android.view.View,int,long)>','<android.net.wifi.WifiStateMachine$DriverUnloadingState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap: java.util.Map getCountryCodeToRegionCodeMap()>','<android.view.View: float getTranslationX()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>','<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>','<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiStateMachine$ScanModeState: boolean processMessage(android.os.Message)>','<android.media.RemoteControlClient: void <clinit>()>','<android.webkit.BrowserFrame: void removeJavascriptInterface(java.lang.String)>','<com.android.server.location.PassiveProvider: boolean requiresSatellite()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)>','<com.android.server.wm.WindowState: boolean isDisplayedLw()>','<com.android.server.am.ActivityManagerService: void monitor()>','<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>','<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>','<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.RIL: void resetRadio(android.os.Message)>','<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()>','<com.android.internal.telephony.cdma.RuimRecords: void <init>(com.android.internal.telephony.IccCard,android.content.Context,com.android.internal.telephony.CommandsInterface)>','<android.net.wifi.WifiConfigStore: boolean selectNetwork(int)>','<android.widget.EditText: void selectAll()>','<com.android.internal.widget.DigitalClock$FormatChangeObserver: void <init>(com.android.internal.widget.DigitalClock)>','<android.widget.ListView: void setDividerHeight(int)>','<com.android.internal.app.AlertController$AlertParams$2: void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController)>','<android.widget.PopupWindow: void setClippingEnabled(boolean)>','<android.server.BluetoothService: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>','<android.graphics.Paint$FontMetricsInt: java.lang.String toString()>','<android.app.Fragment$SavedState: int describeContents()>','<android.view.WindowOrientationListener: boolean access$000()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPersonalNumber()>','<android.webkit.WebHistoryItem: void setTouchIconUrl(java.lang.String,boolean)>','<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>','<android.webkit.WebViewCore$EventHub: void access$7200(android.webkit.WebViewCore$EventHub,android.os.Message)>','<com.android.server.AppWidgetServiceImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.sip.ISipSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.bluetooth.BluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>','<com.android.server.am.BatteryStatsService: void noteScanWifiLockReleasedFromSource(android.os.WorkSource)>','<android.media.AudioService: int access$2402(android.media.AudioService,int)>','<android.webkit.PluginManager: android.webkit.PluginManager getInstance(android.content.Context)>','<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.server.BatteryService: int access$300(com.android.server.BatteryService)>','<com.android.server.InputMethodManagerService$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<android.location.CountryDetector$ListenerTransport: void onCountryDetected(android.location.Country)>','<android.webkit.WebSettings: boolean getDomStorageEnabled()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String format(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)>','<android.widget.SeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.RIL: void deleteSmsOnRuim(int,android.os.Message)>','<android.renderscript.RenderScript: void nTypeGetNativeData(int,int[])>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isDeactivate()>','<android.telephony.ServiceState: int getState()>','<android.webkit.ZoomControlEmbedded$ZoomListener: void onVisibilityChanged(boolean)>','<android.filterfw.core.GLFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<android.content.ContentProvider$1: void <init>(android.content.ContentProvider,android.content.ContentProvider$PipeDataWriter,android.os.ParcelFileDescriptor[],android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>','<android.os.AsyncTask: void <init>()>','<com.android.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>','<android.app.Activity: void onUserInteraction()>','<com.android.server.PowerManagerService: boolean isScreenBright()>','<com.android.internal.telephony.sip.SipPhoneBase: java.util.List getCurrentDataConnectionList()>','<android.view.MotionEvent: void setDownTime(long)>','<android.view.GLES20Canvas: int save(int)>','<android.bluetooth.BluetoothOutputStream: void write(int)>','<android.widget.TextView: int getBottomPaddingOffset()>','<com.android.internal.telephony.BaseCommands: void registerForNotAvailable(android.os.Handler,int,java.lang.Object)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver$1: void run()>','<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>','<android.opengl.GLLogWrapper: void glGetFixedv(int,int[],int)>','<android.net.wifi.WifiManager: boolean isMulticastEnabled()>','<android.view.IWindowManager$Stub$Proxy: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int)>','<com.android.server.net.NetworkStatsCollection: void recordData(com.android.server.net.NetworkIdentitySet,int,int,int,long,long,android.net.NetworkStats$Entry)>','<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>','<com.android.server.AppWidgetServiceImpl: void addProvidersForPackageLocked(java.lang.String)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$1000(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.server.sip.SipSessionGroup: void processTransactionTerminated(javax.sip.TransactionTerminatedEvent)>','<android.view.ViewRootImpl: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<com.android.uiautomator.core.UiDevice: int getDisplayHeight()>','<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>','<android.location.Address: double access$1402(android.location.Address,double)>','<android.graphics.drawable.AnimationDrawable$AnimationState: android.graphics.drawable.Drawable newDrawable()>','<android.view.WindowManagerImpl$CompatModeWrapper: void <init>(android.view.WindowManager,android.view.CompatibilityInfoHolder)>','<android.view.View$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>','<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable$Orientation)>','<com.android.internal.policy.impl.PhoneWindowManager$11$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$11,android.os.Looper,android.content.ServiceConnection)>','<android.widget.OverScroller: float getCurrVelocity()>','<com.android.internal.util.FileRotator$1: void write(java.io.OutputStream)>','<android.text.TextUtils: boolean isPrintableAsciiOnly(java.lang.CharSequence)>','<android.net.INetworkStatsSession$Stub: void <init>()>','<android.renderscript.Element: android.renderscript.Element I32_4(android.renderscript.RenderScript)>','<android.webkit.WebViewClassic: void findAllAsync(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pDevice access$7900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.PowerManagerService$10: void run()>','<android.widget.FastScroller: void stop()>','<android.view.GestureDetector: android.view.GestureDetector$OnGestureListener access$100(android.view.GestureDetector)>','<android.app.Dialog: void setContentView(int)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focused(boolean)>','<android.os.Build$VERSION: void <clinit>()>','<android.webkit.WebIconDatabaseClassic$EventHandler$1: void <init>(android.webkit.WebIconDatabaseClassic$EventHandler)>','<com.android.server.MountService: void access$600(com.android.server.MountService,java.lang.String,java.lang.String,int,int)>','<com.android.internal.telephony.SmsMessageBase$TextEncodingDetails: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1AlphaTag()>','<android.webkit.WebChromeClient: boolean onJsTimeout()>','<android.content.IntentFilter: boolean matchAction(java.lang.String)>','<com.android.server.AppWidgetServiceImpl: void readStateFromFileLocked(java.io.FileInputStream)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)>','<android.view.View: void setDrawingCacheQuality(int)>','<com.android.vcard.VCardParserImpl_V40: java.lang.String unescapeText(java.lang.String)>','<android.animation.Keyframe$IntKeyframe: void <init>(float)>','<android.accessibilityservice.UiTestAutomationBridge: java.lang.Object access$000(android.accessibilityservice.UiTestAutomationBridge)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs: com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs fromIntent(android.content.Intent)>','<android.view.HardwareRenderer: void setRequested(boolean)>','<android.telephony.SmsCbLocation: void <clinit>()>','<android.os.RegistrantList: void notifyResult(java.lang.Object)>','<android.telephony.SmsCbCmasInfo: java.lang.String toString()>','<com.android.server.am.UsageStatsService: void <init>(java.lang.String)>','<com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>','<android.app.SearchDialog: void launchQuerySearch()>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean addKeyboardLayout(java.lang.String)>','<com.android.vcard.exception.VCardException: void <init>(java.lang.String)>','<android.view.GLES20RecordingCanvas: void drawLines(float[],android.graphics.Paint)>','<android.filterfw.core.StopWatchMap: void <init>()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setSubtitle(int)>','<android.view.ViewPropertyAnimator: void cancel()>','<android.widget.AbsSpinner$RecycleBin: void <init>(android.widget.AbsSpinner)>','<com.android.server.am.TransferPipe: void run()>','<com.android.server.NativeDaemonConnector$Command: void <init>(java.lang.String,java.lang.Object[])>','<android.view.ContextThemeWrapper: void <init>()>','<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>','<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesReceived()>','<android.text.style.SuggestionSpan: void setFlags(int)>','<com.android.internal.widget.multiwaveview.Tweener: com.android.internal.widget.multiwaveview.Tweener to(java.lang.Object,long,java.lang.Object[])>','<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>','<android.widget.RemoteViews$SetDrawableParameters: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.text.SpannedString: int nextSpanTransition(int,int,java.lang.Class)>','<android.webkit.HTML5VideoFullScreen$FullScreenMediaController: void <init>(android.content.Context,android.view.View)>','<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>','<android.net.sip.SipAudioCall: void endCall()>','<android.app.ActivityManager$MemoryInfo: void <init>()>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setActive(boolean)>','<com.android.server.wm.WindowAnimator: void <init>(com.android.server.wm.WindowManagerService,android.content.Context,android.view.WindowManagerPolicy)>','<android.content.BroadcastReceiver$PendingResult: void checkSynchronousHint()>','<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>','<android.webkit.HTML5VideoFullScreen: android.view.SurfaceView access$700(android.webkit.HTML5VideoFullScreen)>','<android.webkit.BrowserFrame$2$2: void run()>','<com.android.internal.telephony.gsm.GsmConnection: void onHangupLocal()>','<android.webkit.WebViewCore: java.lang.String jsPrompt(java.lang.String,java.lang.String,java.lang.String)>','<android.database.DataSetObserver: void onChanged()>','<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>','<android.view.MotionEvent: int getMetaState()>','<android.security.SystemKeyStore: void <clinit>()>','<android.widget.RemoteViews: void <init>(android.os.Parcel)>','<com.android.internal.util.StateMachine: android.os.HandlerThread access$400(com.android.internal.util.StateMachine)>','<android.widget.AbsListView$PositionScroller: void scrollToVisible(int,int,int)>','<android.app.SuperNotCalledException: void <init>(java.lang.String)>','<android.server.BluetoothAdapterStateMachine: void access$1800(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.bluetooth.BluetoothDevice: boolean getTrustState()>','<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>','<android.text.method.PasswordTransformationMethod: char access$100()>','<android.telephony.CellIdentity: void writeToParcel(android.os.Parcel,int)>','<android.widget.AbsListView: void smoothScrollToPosition(int)>','<android.webkit.ZoomManager: void <init>(android.webkit.WebViewClassic,android.webkit.CallbackProxy)>','<com.android.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.view.View: void setFocusable(boolean)>','<com.android.server.MountService$ObbState: void <init>(com.android.server.MountService,java.lang.String,int,android.os.storage.IObbActionListener,int)>','<android.content.ContentService$ObserverNode: void <init>(java.lang.String)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>','<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>','<com.android.server.WifiService: android.content.Context access$200(com.android.server.WifiService)>','<android.text.TextDirectionHeuristics$TriState: android.text.TextDirectionHeuristics$TriState[] values()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction$State: boolean inTransition()>','<android.view.View: void computeOpaqueFlags()>','<android.widget.TextView$1: void run()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getScanWifiLockTime(long,int)>','<android.widget.AbsListView: int getListPaddingRight()>','<com.android.internal.telephony.IccCardStatus$PinState: com.android.internal.telephony.IccCardStatus$PinState valueOf(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccCard getIccCard()>','<android.server.BluetoothEventLoop: android.bluetooth.BluetoothA2dp access$102(android.server.BluetoothEventLoop,android.bluetooth.BluetoothA2dp)>','<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(android.net.Uri$Part)>','<android.content.pm.ResolveInfo: void <init>()>','<android.media.Metadata: boolean getBoolean(int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.sip.SipProfile access$800(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)>','<com.android.internal.telephony.RIL: void getLastDataCallFailCause(android.os.Message)>','<android.view.View: int getSolidColor()>','<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.accounts.AccountManagerService$DatabaseHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>','<android.graphics.drawable.DrawableContainer: boolean isStateful()>','<android.graphics.drawable.Drawable: void <clinit>()>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$BrowserSettings getBrowserSettings()>','<com.android.internal.telephony.cat.Item: void <clinit>()>','<android.os.MemoryFile: int access$200(android.os.MemoryFile)>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: char charAt(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: java.util.Map getServiceStats()>','<android.util.SparseArray: java.lang.Object valueAt(int)>','<com.android.internal.policy.impl.AccountUnlockScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.net.sip.SipSessionAdapter: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<android.net.NetworkStatsHistory$Entry: void <init>()>','<android.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void <init>(android.filterfw.core.SerializedFrame,int)>','<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>','<com.android.vcard.exception.VCardNotSupportedException: void <init>(java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1800(com.android.internal.policy.impl.KeyguardViewMediator,int)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: boolean isSpeaking()>','<com.android.internal.policy.impl.AccountUnlockScreen: void onClick(android.view.View)>','<android.animation.LayoutTransition: java.util.ArrayList access$1100(android.animation.LayoutTransition)>','<com.android.internal.policy.impl.PhoneWindowManager$19: void run()>','<android.accounts.AccountManagerService: java.lang.String getAccountLabel(java.lang.String)>','<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>','<com.android.server.MountService$ObbState: android.os.IBinder getBinder()>','<com.android.server.input.PersistentDataStore$InputDeviceState: void <init>(com.android.server.input.PersistentDataStore$1)>','<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.IBinder asBinder()>','<android.content.SyncManager: android.app.PendingIntent access$3600(android.content.SyncManager)>','<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.LinearLayout: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>','<android.graphics.Rect: int hashCode()>','<android.view.accessibility.AccessibilityRecord: void <init>()>','<com.android.server.LocationManagerService$SettingsObserver: void <init>(com.android.server.LocationManagerService,com.android.server.LocationManagerService$1)>','<android.app.SearchableInfo$1: android.app.SearchableInfo[] newArray(int)>','<android.view.WindowManagerImpl: void removeViewImmediate(android.view.View)>','<com.android.internal.telephony.RIL: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>','<com.android.internal.telephony.GsmAlphabet: int charToGsmExtended(char)>','<android.widget.ScrollView: float getTopFadingEdgeStrength()>','<com.android.server.PowerManagerService$LockList: int getIndex(android.os.IBinder)>','<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>','<android.app.Activity: void startActivity(android.content.Intent)>','<android.net.http.RequestQueue$ActivePool: void startup()>','<com.android.server.ConnectivityService: void access$1800(com.android.server.ConnectivityService,int)>','<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo)>','<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>','<android.location.ILocationManager$Stub$Proxy: void setTestProviderEnabled(java.lang.String,boolean)>','<com.android.server.pm.PackageSettingBase: boolean getStopped(int)>','<com.android.internal.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)>','<android.text.method.ScrollingMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>','<android.os.IRemoteCallback$Stub$Proxy: void sendResult(android.os.Bundle)>','<com.android.internal.widget.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.gsm.GsmDataConnection findReadyDataConnection(com.android.internal.telephony.ApnSetting)>','<android.view.IApplicationToken$Stub: android.view.IApplicationToken asInterface(android.os.IBinder)>','<com.android.server.wm.WindowAnimator$SetAnimationParams: void <init>(com.android.server.wm.WindowStateAnimator,android.view.animation.Animation,int,int)>','<com.android.internal.telephony.GsmAlphabet: void <clinit>()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>','<android.view.GLES20DisplayList: void setClipChildren(boolean)>','<android.view.ViewGroup: void removeViewAt(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addCpuTimeLocked(int,int)>','<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] following(int)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>','<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>','<android.filterfw.core.FilterPort: boolean isOpen()>','<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()>','<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>','<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>','<android.location.IGpsStatusProvider$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.inputmethod.ExtractedTextRequest$1: android.view.inputmethod.ExtractedTextRequest createFromParcel(android.os.Parcel)>','<com.android.server.am.ActivityStack: void scheduleDestroyActivities(com.android.server.am.ProcessRecord,boolean,java.lang.String)>','<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CDMAPhone: void unsetOnEcbModeExitResponse(android.os.Handler)>','<android.location.ICountryListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()>','<com.android.internal.policy.impl.SimUnlockScreen: android.widget.TextView access$500(com.android.internal.policy.impl.SimUnlockScreen)>','<android.view.View: void setWillNotCacheDrawing(boolean)>','<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet access$1500(android.widget.RemoteViewsAdapter)>','<android.view.View$11: void <init>(java.lang.String)>','<com.android.internal.policy.IFaceLockCallback$Stub: void <init>()>','<android.net.NetworkConfig: void <init>(java.lang.String)>','<android.widget.OverScroller: int getStartX()>','<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>','<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>','<com.android.internal.os.ProcessStats: void init()>','<com.android.server.am.ActivityManagerService$1: java.lang.String packageForFilter(android.content.IntentFilter)>','<android.os.Environment: java.io.File getExternalStorageDirectory()>','<android.webkit.JWebCoreJavaBridge: void resume()>','<android.webkit.AccessibilityInjectorFallback: void <init>(android.webkit.WebViewClassic)>','<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,boolean)>','<android.inputmethodservice.IInputMethodSessionWrapper: void toggleSoftInput(int,int)>','<com.android.internal.telephony.IccCardStatus: void addApplication(com.android.internal.telephony.IccCardApplication)>','<android.ddm.DdmHandleNativeHeap: void <clinit>()>','<android.webkit.HTML5VideoFullScreen: void switchProgressView(boolean)>','<android.filterfw.io.TextGraphReader$InitFilterCommand: void execute(android.filterfw.io.TextGraphReader)>','<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>','<com.android.server.sip.SipService: int access$1002(com.android.server.sip.SipService,int)>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$6600(android.bluetooth.BluetoothDeviceProfileState)>','<android.filterfw.core.KeyValueMap: android.filterfw.core.KeyValueMap fromKeyValues(java.lang.Object[])>','<com.android.internal.view.menu.MenuBuilder: void close()>','<android.view.IWindow$Stub$Proxy: void dispatchSystemUiVisibilityChanged(int,int,int,int)>','<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>','<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>','<android.text.style.TypefaceSpan: int getSpanTypeId()>','<android.opengl.GLLogWrapper: void glTranslatex(int,int,int)>','<android.app.ContextImpl$37: void <init>()>','<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>','<android.text.method.TextKeyListener: void <clinit>()>','<android.net.wifi.p2p.WifiP2pGroup$1: android.net.wifi.p2p.WifiP2pGroup createFromParcel(android.os.Parcel)>','<android.view.View: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>','<com.android.internal.util.CharSequences: void validate(int,int,int)>','<com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>','<android.nfc.NfcActivityManager: void onActivityStarted(android.app.Activity)>','<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>','<com.android.server.am.TransferPipe: void goDump(android.os.IBinder,java.io.FileDescriptor,java.lang.String[],long)>','<android.view.AccessibilityInteractionController: void access$900(android.view.AccessibilityInteractionController,android.os.Message)>','<android.widget.HeaderViewListAdapter: int getItemViewType(int)>','<android.webkit.WebViewCore: void setShouldMonitorWebCoreThread()>','<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.text.StaticLayout: int getLineTop(int)>','<android.os.Bundle: java.util.Set keySet()>','<android.app.Fragment$SavedState: void <init>(android.os.Bundle)>','<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>','<android.bluetooth.BluetoothDevice: java.lang.String getName()>','<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(int[],android.widget.RemoteViews)>','<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: java.lang.String access$500(android.server.BluetoothPanProfileHandler$BluetoothPanDevice)>','<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,java.lang.String,java.lang.String)>','<android.net.MobileDataStateTracker: void setUserDataEnable(boolean)>','<android.widget.Filter$ResultsHandler: void handleMessage(android.os.Message)>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(int)>','<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>','<android.graphics.Region: boolean getBounds(android.graphics.Rect)>','<com.android.internal.app.ActionBarImpl$2: void <init>(com.android.internal.app.ActionBarImpl)>','<android.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAccountAndAuthority(android.accounts.Account,int,java.lang.String)>','<android.content.SyncManager$10: int compare(java.lang.Object,java.lang.Object)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>','<android.widget.Spinner$DropdownPopup: void setPromptText(java.lang.CharSequence)>','<android.os.Process: void killProcessQuiet(int)>','<android.media.RemoteControlClient$MetadataEditor: java.lang.Object clone()>','<com.android.server.net.NetworkStatsRecorder: void dumpLocked(com.android.internal.util.IndentingPrintWriter,boolean)>','<android.net.LinkAddress: java.net.InetAddress getAddress()>','<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<com.android.internal.database.SortCursor: void close()>','<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getWakelockStats()>','<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<com.android.server.WifiService: boolean access$1800(com.android.server.WifiService)>','<com.android.server.am.TaskRecord: void setIntent(android.content.Intent,android.content.pm.ActivityInfo)>','<android.view.SurfaceView$4: void <init>(android.view.SurfaceView)>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.CharSequence subSequence(int,int)>','<com.android.internal.os.BatteryStatsImpl: android.net.NetworkStats access$100(com.android.internal.os.BatteryStatsImpl)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int enableApnType(java.lang.String)>','<android.util.Log$1: void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure)>','<android.media.MediaRouter$RouteGroup: void memberVolumeChanged(android.media.MediaRouter$RouteInfo)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int getUpdateVersion()>','<com.android.internal.telephony.PhoneProxy: int getLteOnCdmaMode()>','<android.app.ActivityThread: void access$2400(android.app.ActivityThread,android.app.ActivityThread$CreateBackupAgentData)>','<android.renderscript.RenderScript: int nAllocationGetType(int)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>','<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>','<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()>','<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,int)>','<com.android.server.am.ActivityManagerService$13: void <init>()>','<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>','<android.view.View: void dispatchSetActivated(boolean)>','<android.content.SyncManager$ActiveSyncContext: void binderDied()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: void <clinit>()>','<android.graphics.SurfaceTexture$OutOfResourcesException: void <init>()>','<android.database.AbstractCursor: boolean isAfterLast()>','<android.graphics.Canvas: boolean isHardwareAccelerated()>','<android.util.LongSparseArray: void clear()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: int access$900(com.android.internal.telephony.cdma.CdmaLteUiccRecords,int)>','<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>','<com.android.internal.telephony.PhoneBase: void disableDnsCheck(boolean)>','<android.widget.AdapterViewAnimator$1: void run()>','<com.android.server.pm.PackageManagerService$5: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$InstallArgs)>','<android.widget.AutoCompleteTextView: void onDisplayHint(int)>','<com.android.internal.widget.LockPatternUtils: void setCurrentUser(int)>','<android.filterfw.core.NativeFrame: boolean hasNativeAllocation()>','<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>','<com.android.server.NotificationManagerService$WorkerHandler: void <init>(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$1)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isDisconnected()>','<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)>','<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>','<android.view.ViewRootImpl$TakenSurfaceHolder: void <init>(android.view.ViewRootImpl)>','<android.webkit.WebCoreThreadWatchdog: void pause()>','<android.content.ContentProvider$Transport: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)>','<android.webkit.ZoomManager: boolean isFixedLengthAnimationInProgress()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState: boolean processMessage(android.os.Message)>','<com.android.server.am.ActivityRecord$Token: boolean keyDispatchingTimedOut()>','<com.android.internal.util.StateMachine: void transitionToHaltingState()>','<android.net.DhcpStateMachine$1: void <init>(android.net.DhcpStateMachine)>','<android.net.wifi.WifiWatchdogStateMachine: void access$2200(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>','<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>','<android.net.sip.SipAudioCall$Listener: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>','<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>','<android.view.View: boolean canScrollVertically(int)>','<android.widget.TextView: void setLinksClickable(boolean)>','<android.webkit.WebSettingsClassic: boolean getSavePassword()>','<com.android.internal.telephony.sip.SipCommandInterface: void handleCallSetupRequestFromSim(boolean,android.os.Message)>','<android.view.VelocityTracker$1: void <init>()>','<android.view.ViewGroup: android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF)>','<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>','<android.media.effect.FilterEffect: void beginGLEffect()>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>','<com.android.internal.policy.impl.PatternUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,int)>','<android.widget.ProgressBar: int getMax()>','<android.content.res.Resources: int[] getIntArray(int)>','<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>','<android.webkit.GeolocationPermissionsClassic: boolean access$200(java.lang.String)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelDiscovery()>','<com.android.server.sip.SipService$MyExecutor: void execute(java.lang.Runnable)>','<com.android.internal.telephony.ApnSetting: java.lang.String toString()>','<com.android.internal.util.StateMachine$SmHandler: void handleMessage(android.os.Message)>','<android.webkit.WebViewClassic: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection build()>','<android.inputmethodservice.InputMethodService: void onDestroy()>','<com.android.internal.telephony.DriverCall: int compareTo(java.lang.Object)>','<android.app.PendingIntent: void cancel()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>','<com.android.internal.policy.impl.LockScreen$1: void onRingerModeChanged(int)>','<android.view.View: boolean isActionableForAccessibility()>','<android.widget.MediaController: android.view.View makeControllerView()>','<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>','<android.view.View: int getAccessibilityViewId()>','<android.view.SurfaceView: void onMeasure(int,int)>','<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasPattern()>','<com.android.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>','<android.net.wifi.IWifiManager$Stub$Proxy: void releaseMulticastLock()>','<com.android.server.MountService: int unmountSecureContainer(java.lang.String,boolean)>','<com.android.internal.telephony.sip.SipPhone: boolean disableDataConnectivity()>','<com.android.server.PowerManagerService: void setPokeLock(int,android.os.IBinder,java.lang.String)>','<com.android.internal.telephony.DataConnectionTracker: void onResetDone(android.os.AsyncResult)>','<android.media.DecoderCapabilities: void <clinit>()>','<android.widget.AbsListView: long[] getCheckedItemIds()>','<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.provider.Downloads$Impl: boolean isStatusError(int)>','<android.webkit.JWebCoreJavaBridge: void updateProxy(android.net.ProxyProperties)>','<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)>','<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>','<android.graphics.drawable.AnimationDrawable: void start()>','<android.net.INetworkPolicyManager$Stub$Proxy: int[] getAppsWithPolicy(int)>','<com.android.internal.telephony.gsm.SmsCbHeader: int getGeographicalScope()>','<android.view.KeyEvent: java.lang.String getCharacters()>','<com.android.internal.widget.multiwaveview.GlowPadView: boolean replaceTargetDrawablesIfPresent(android.content.ComponentName,java.lang.String,int)>','<android.widget.Editor$InsertionHandleView: int getCurrentCursorOffset()>','<android.net.EthernetDataTracker: void setUserDataEnable(boolean)>','<android.net.http.Headers: void setContentDisposition(java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: int getActions()>','<com.android.internal.telephony.cdma.CdmaMmiCode: boolean isRegister()>','<com.android.vcard.VCardParser_V40: void <init>(int)>','<android.content.pm.PackageParser$Component: java.lang.String getComponentShortName()>','<com.android.internal.widget.TransportControlView: void access$300(com.android.internal.widget.TransportControlView,int)>','<android.app.ActivityGroup: void finish()>','<android.telephony.ServiceState$1: void <init>()>','<android.view.inputmethod.ExtractedTextRequest$1: android.view.inputmethod.ExtractedTextRequest[] newArray(int)>','<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewGroup: void layout(int,int,int,int)>','<android.view.WindowManagerImpl: android.view.WindowManager getDefault(android.view.CompatibilityInfoHolder)>','<com.android.server.ConnectivityService: android.util.SparseIntArray access$400(com.android.server.ConnectivityService)>','<android.filterfw.core.Filter: void closeOutputPort(java.lang.String)>','<android.content.ContextWrapper: int getThemeResId()>','<android.view.View: float getLeftFadingEdgeStrength()>','<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>','<android.view.Choreographer$FrameHandler: void handleMessage(android.os.Message)>','<android.webkit.WebView$PrivateAccess: boolean super_setFrame(int,int,int,int)>','<com.android.internal.telephony.PhoneBase: void handleMessage(android.os.Message)>','<android.net.http.LoggingEventHandler: void locationChanged(java.lang.String,boolean)>','<android.widget.TextView: boolean canPaste()>','<android.opengl.GLLogWrapper: void glPointSize(float)>','<com.android.internal.util.AsyncChannel: void connect(com.android.internal.util.AsyncService,android.os.Messenger)>','<com.android.internal.telephony.IntRangeManager$ClientRange: int hashCode()>','<android.widget.RemoteViews$TextViewSizeAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.net.sip.SimpleSessionDescription$Media: int getPort()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.util.List getInstalledProviders()>','<android.bluetooth.BluetoothInputStream: int read(byte[],int,int)>','<android.content.pm.IPackageManager$Stub$Proxy: void revokePermission(java.lang.String,java.lang.String)>','<com.android.internal.telephony.IccCard$3: void <clinit>()>','<com.android.server.sip.SipSessionListenerProxy$4: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,java.lang.String)>','<android.net.LocalSocketAddress: void <init>(java.lang.String)>','<android.webkit.WebView: int getContentHeight()>','<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)>','<android.widget.TextView: void invalidateCursorPath()>','<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.view.IWindowSession$Stub: android.os.IBinder asBinder()>','<android.widget.Toast: float getVerticalMargin()>','<android.media.MediaRouter$RouteGroup: void addRoute(android.media.MediaRouter$RouteInfo,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: java.util.List getMetadataList()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>','<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock access$1700(com.android.server.location.GpsLocationProvider)>','<android.net.DhcpInfo: void <init>()>','<android.webkit.HTML5VideoViewProxy: void loadPoster(java.lang.String)>','<android.filterfw.core.KeyValueMap: void <init>()>','<com.android.server.sip.SipSessionGroup: boolean access$1900(java.util.EventObject)>','<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)>','<android.os.Debug: int getThreadExternalAllocSize()>','<com.android.server.am.ActivityManagerService: boolean refContentProvider(android.os.IBinder,int,int)>','<android.widget.ScrollView: void fling(int)>','<android.view.ViewRootImpl: void access$600(android.view.ViewRootImpl,android.view.DragEvent)>','<android.view.KeyCharacterMap$FallbackAction: void recycle()>','<android.location.Criteria: void setAccuracy(int)>','<android.view.Choreographer: void postFrameCallback(android.view.Choreographer$FrameCallback)>','<android.text.format.DateUtils: boolean isToday(long)>','<android.app.Activity: void finishFromChild(android.app.Activity)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1200(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>','<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>','<com.android.internal.telephony.IccFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>','<android.os.Parcel: long readLong()>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.accounts.IAccountManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void setEnabled(int,boolean)>','<com.android.internal.app.AlertController: void setIcon(int)>','<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)>','<com.android.internal.telephony.cat.ResultException: void <init>(com.android.internal.telephony.cat.ResultCode,int)>','<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)>','<android.widget.TextView: boolean selectAllText()>','<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void <init>(com.android.internal.widget.multiwaveview.PointCloud)>','<android.webkit.CallbackProxy: void onSearchboxDispatchCompleteCallback(java.lang.String,int,boolean)>','<com.android.server.sip.SipService: void access$600(com.android.server.sip.SipService,android.net.sip.ISipSession)>','<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>','<android.webkit.DeviceMotionService: void <init>(android.webkit.DeviceMotionAndOrientationManager,android.content.Context)>','<android.net.wifi.NetworkUpdateResult: void setProxyChanged(boolean)>','<com.android.internal.view.menu.MenuBuilder: int size()>','<android.preference.Preference: long getPersistedLong(long)>','<com.android.server.am.ActivityManagerService: java.lang.StringBuilder access$900(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityStack: void activityPaused(android.os.IBinder,boolean)>','<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>','<android.hardware.input.InputManager$InputDevicesChangedListener: void onInputDevicesChanged(int[])>','<android.hardware.ISerialManager$Stub: android.hardware.ISerialManager asInterface(android.os.IBinder)>','<android.server.BluetoothService: boolean cancelPairingUserInput(java.lang.String)>','<com.android.server.AppWidgetService: android.os.Bundle getAppWidgetOptions(int)>','<com.android.internal.util.AsyncService: void onDestroy()>','<android.widget.Editor$SelectionEndHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>','<android.app.ApplicationPackageManager: void removePermission(java.lang.String)>','<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>','<android.webkit.WebViewClassic: void clearViewState()>','<android.text.SpannableStringBuilder: java.lang.String toString()>','<android.net.wifi.WifiConfigStore: void <init>(android.content.Context,android.net.wifi.WifiNative)>','<com.android.internal.telephony.AdnRecord: java.lang.String getNumber()>','<android.webkit.WebViewClassic$WebViewInputConnection: void <init>(android.webkit.WebViewClassic)>','<android.webkit.ZoomControlExternal$1: void run()>','<android.bluetooth.BluetoothTetheringDataTracker: java.lang.Object Clone()>','<com.android.internal.widget.PasswordEntryKeyboard$LatinKey: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>','<android.net.http.LoggingEventHandler: void <init>()>','<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: int getViewHeightWithTitle()>','<android.os.Debug: void resetGlobalClassInitCount()>','<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String)>','<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>','<android.telephony.cdma.CdmaCellLocation: int hashCode()>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>','<android.widget.FastScroller: void setAlwaysShow(boolean)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaMin()>','<com.android.internal.telephony.cat.ValueParser: void <init>()>','<android.server.BluetoothBondState$1: void <init>(android.server.BluetoothBondState)>','<android.graphics.Region: void scale(float)>','<com.android.internal.telephony.PhoneSubInfoProxy: void <init>(com.android.internal.telephony.PhoneSubInfo)>','<android.renderscript.RenderScript: void nElementGetSubElements(int,int[],java.lang.String[],int[])>','<android.widget.ProgressBar: void setProgress(int,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsDialog()>','<com.android.server.wm.WindowManagerService$LayoutFields: float access$1402(com.android.server.wm.WindowManagerService$LayoutFields,float)>','<android.content.ContentProvider$Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>','<android.service.dreams.IDreamManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>','<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()>','<com.android.internal.net.NetworkStatsFactory: void <init>()>','<android.widget.AbsListView: void requestDisallowInterceptTouchEvent(boolean)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()>','<com.android.uiautomator.core.UiDevice: void sleep()>','<android.content.Intent: android.content.Intent getIntent(java.lang.String)>','<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>','<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(long)>','<android.database.CursorWindow: int getType(int,int)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean explicitCallTransfer()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1700(com.android.internal.policy.impl.KeyguardViewMediator,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>','<android.net.sip.SipProfile: int describeContents()>','<android.app.ContextImpl$33: void <init>()>','<android.opengl.GLLogWrapper: void glClearColor(float,float,float,float)>','<android.net.wifi.WifiStateMachine: void access$12200(android.net.wifi.WifiStateMachine)>','<android.view.View$6: void setValue(android.view.View,float)>','<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>','<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>','<android.database.sqlite.SQLiteSession: boolean yieldTransaction(long,boolean,android.os.CancellationSignal)>','<android.accounts.AccountManagerService$3: java.lang.String toDebugString(long)>','<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>','<android.content.SyncQueue: void onBackoffChanged(android.accounts.Account,int,java.lang.String,long)>','<android.app.ActivityManagerProxy: void moveTaskToBack(int)>','<android.app.IUiModeManager$Stub$Proxy: int getCurrentModeType()>','<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>','<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>','<android.speech.tts.TextToSpeech: java.util.Map access$400(android.speech.tts.TextToSpeech)>','<android.widget.EdgeEffect: boolean isFinished()>','<android.app.ActivityThread$ApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)>','<android.os.Messenger: void send(android.os.Message)>','<android.app.ActivityManagerProxy: void setProcessLimit(int)>','<android.webkit.WebSettingsClassic: void setPluginsEnabled(boolean)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager create(android.content.Context,android.os.Handler)>','<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>','<com.android.internal.telephony.gsm.GSMPhone: boolean getDataRoamingEnabled()>','<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>','<android.webkit.ZoomManager: boolean willScaleTriggerZoom(float)>','<com.android.vcard.exception.VCardInvalidLineException: void <init>(java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.cat.ComprehensionTlv: boolean isComprehensionRequired()>','<com.android.uiautomator.core.UiDevice: boolean waitForWindowUpdate(java.lang.String,long)>','<android.webkit.WebViewClassic$1: void <init>(android.webkit.WebViewClassic)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: void <init>(android.content.Context)>','<android.net.Uri: android.net.Uri normalizeScheme()>','<com.android.server.LightsService$Light: void setBrightness(int)>','<com.android.internal.telephony.gsm.VoiceMailConstants: boolean containsCarrier(java.lang.String)>','<com.android.internal.util.StateMachine: void quit()>','<android.view.ViewRootImpl$TakenSurfaceHolder: boolean isCreating()>','<android.os.Parcel: void writeStringArray(java.lang.String[])>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceSvn()>','<android.content.ClipData$Item: void toShortString(java.lang.StringBuilder)>','<android.provider.BrowserContract$Accounts: void <init>()>','<android.net.rtp.AudioGroup: void <init>()>','<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>','<android.widget.TextView: android.text.Layout getHintLayout()>','<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>','<android.provider.BrowserContract: void <init>()>','<android.app.backup.IRestoreSession$Stub$Proxy: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat clearNationalPrefixFormattingRule()>','<com.android.server.location.GpsLocationProvider$ProviderHandler: void handleMessage(android.os.Message)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>','<android.net.MobileDataStateTracker: android.net.NetworkInfo access$300(android.net.MobileDataStateTracker)>','<android.webkit.ClientCertRequestHandler: void <init>(android.webkit.BrowserFrame,int,java.lang.String,android.webkit.SslClientCertLookupTable)>','<com.android.server.am.AppErrorDialog$1: void <init>(com.android.server.am.AppErrorDialog)>','<android.view.inputmethod.EditorInfo: void makeCompatible(int)>','<android.widget.CursorAdapter: void onContentChanged()>','<android.view.IWindowSession$Stub$Proxy: void remove(android.view.IWindow)>','<android.view.ViewGroup: void detachViewFromParent(int)>','<android.widget.TextView: void jumpDrawablesToCurrentState()>','<com.android.internal.os.AtomicFile: java.io.FileOutputStream startWrite()>','<android.server.BluetoothHealthProfileHandler: java.util.List getConnectedHealthDevices()>','<android.server.BluetoothAdapterStateMachine$PerProcessState: void enter()>','<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>','<android.text.style.AlignmentSpan$Standard: void <init>(android.os.Parcel)>','<android.text.style.BulletSpan: int getSpanTypeId()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean hasBindAppWidgetPermission(java.lang.String)>','<android.view.View: void notifyAccessibilityStateChanged()>','<android.net.wifi.WifiStateMachine$4: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.TextView: int getCompoundPaddingTop()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pGroup access$800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.os.MemoryFile$MemoryOutputStream: void <init>(android.os.MemoryFile,android.os.MemoryFile$1)>','<android.os.HandlerThread: void <init>(java.lang.String,int)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>','<android.net.rtp.AudioStream: int getDtmfType()>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: int addClient(android.view.accessibility.IAccessibilityManagerClient)>','<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean)>','<android.widget.ProgressBar$AccessibilityEventSender: void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1)>','<android.webkit.WebViewClassic$FocusTransitionDrawable: void draw(android.graphics.Canvas)>','<android.view.animation.Animation: void cancel()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2800(com.android.server.pm.PackageManagerService,android.net.Uri,int,java.lang.String,java.lang.String)>','<com.android.server.net.NetworkStatsService$4: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: void <init>()>','<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>','<android.hardware.usb.UsbEndpoint: int getAddress()>','<com.android.server.ConnectivityService$1: void onMeteredIfacesChanged(java.lang.String[])>','<android.widget.ProgressBar$SavedState: void <clinit>()>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1)>','<android.os.AsyncTask: void execute(java.lang.Runnable)>','<com.android.server.usb.UsbDeviceManager: java.lang.String[] access$1300(com.android.server.usb.UsbDeviceManager)>','<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>','<android.util.DisplayMetrics: void <init>()>','<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt)>','<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>','<android.app.Activity: void finishAffinity()>','<android.hardware.usb.UsbEndpoint: java.lang.String toString()>','<com.android.server.net.NetworkStatsCollection: void clearDirty()>','<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuBuilder access$300(com.android.internal.view.menu.MenuPopupHelper)>','<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.os.Debug: void resetGlobalClassInitTime()>','<android.text.Layout: float getSpacingAdd()>','<com.android.internal.view.menu.MenuItemImpl: boolean invoke()>','<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>','<android.util.StateSet: java.lang.String dump(int[])>','<android.nfc.Tag$1: android.nfc.Tag createFromParcel(android.os.Parcel)>','<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>','<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>','<android.app.ContextImpl$29: void <init>()>','<android.os.CountDownTimer: void <init>(long,long)>','<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void ping()>','<com.android.server.pm.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>','<android.view.inputmethod.InputMethodSubtype: void <init>(android.os.Parcel)>','<android.bluetooth.BluetoothDeviceProfileState: boolean processCommand(int)>','<com.android.internal.os.BatteryStatsImpl: void noteAudioOnLocked(int)>','<android.graphics.Insets: android.graphics.Insets of(android.graphics.Rect)>','<android.view.Surface: int getGenerationId()>','<android.widget.ImageView: void onAttachedToWindow()>','<android.view.GLES20TextureLayer: void setSurfaceTexture(android.graphics.SurfaceTexture)>','<android.os.Registrant: void internalNotifyRegistrant(java.lang.Object,java.lang.Throwable)>','<android.graphics.DrawFilter: void finalize()>','<com.android.internal.telephony.sip.SipCommandInterface: void getBasebandVersion(android.os.Message)>','<com.android.internal.telephony.IccCardStatus: com.android.internal.telephony.IccCardStatus$CardState getCardState()>','<com.android.server.am.ActivityManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>','<android.webkit.DeviceMotionService: float[] access$200(android.webkit.DeviceMotionService)>','<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean isTetheringOn()>','<android.widget.ListPopupWindow: int getHorizontalOffset()>','<com.android.internal.util.AsyncService: android.os.Handler getHandler()>','<com.android.uiautomator.core.UiDevice$2: void <init>(com.android.uiautomator.core.UiDevice,java.lang.String)>','<android.app.IActivityController$Stub$Proxy: android.os.IBinder asBinder()>','<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale: void <init>()>','<android.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)>','<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<com.android.internal.telephony.cdma.CDMAPhone: void handleMessage(android.os.Message)>','<com.android.server.NotificationManagerService$1: void onNotificationClear(java.lang.String,java.lang.String,int)>','<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>','<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String,boolean)>','<android.widget.ZoomButtonsController: void setVisible(boolean)>','<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onTrigger(android.view.View,int)>','<com.android.internal.telephony.RILRequest: void release()>','<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle transceive(java.lang.String,byte[])>','<android.view.SurfaceView: boolean setFrame(int,int,int,int)>','<android.webkit.WebViewClassic: android.webkit.WebViewInputDispatcher access$4100(android.webkit.WebViewClassic)>','<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)>','<com.android.server.sip.SipSessionListenerProxy: void setListener(android.net.sip.ISipSessionListener)>','<android.graphics.drawable.InsetDrawable: boolean onStateChange(int[])>','<android.content.res.ColorStateList: int getColorForState(int[],int)>','<android.graphics.Rect: int centerY()>','<android.accounts.IAccountAuthenticator$Stub: android.accounts.IAccountAuthenticator asInterface(android.os.IBinder)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void binderDied()>','<android.app.IInstrumentationWatcher$Stub: android.app.IInstrumentationWatcher asInterface(android.os.IBinder)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellInfo(android.telephony.CellInfo)>','<android.opengl.ManagedEGLContext: boolean doTerminate()>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getAllPermissionGroups(int)>','<android.server.BluetoothA2dpService: android.content.Context access$900(android.server.BluetoothA2dpService)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$1900(android.bluetooth.BluetoothDeviceProfileState)>','<android.media.Ringtone: android.net.Uri getUri()>','<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>','<android.net.Uri: java.lang.String access$300()>','<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()>','<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>','<android.os.IHardwareService$Stub: android.os.IHardwareService asInterface(android.os.IBinder)>','<android.widget.PopupWindow: boolean isTouchable()>','<android.filterfw.core.FilterPort: java.lang.String getName()>','<com.android.server.wm.AppWindowToken: java.lang.String toString()>','<com.android.server.sip.SipHelper: java.lang.String getCallId(javax.sip.Transaction)>','<com.android.vcard.VCardParserImpl_V21: void addInterpreter(com.android.vcard.VCardInterpreter)>','<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>','<android.content.pm.VerifierDeviceIdentity$1: android.content.pm.VerifierDeviceIdentity createFromParcel(android.os.Parcel)>','<com.android.server.location.MockProvider: void setLocation(android.location.Location)>','<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)>','<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>','<android.widget.ScrollBarDrawable: void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean)>','<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>','<android.os.Debug: void printLoadedClasses(int)>','<android.filterpacks.videosrc.MediaSource: void <init>(java.lang.String)>','<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>','<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)>','<android.renderscript.Element: android.renderscript.Element U64_4(android.renderscript.RenderScript)>','<android.telephony.PhoneStateListener$1: void onCellLocationChanged(android.os.Bundle)>','<com.android.server.WifiService: java.util.List getConfiguredNetworks()>','<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord[])>','<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>','<com.android.internal.telephony.cat.CommandParamsFactory: com.android.internal.telephony.cat.CommandParamsFactory getInstance(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.IccFileHandler)>','<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>','<android.view.ViewPropertyAnimator$1: void <init>(android.view.ViewPropertyAnimator)>','<android.widget.AbsListView$FlingRunnable: void startSpringback()>','<android.webkit.WebSettings: int getDefaultFontSize()>','<com.android.server.InputMethodManagerService$1: void onServiceDisconnected(android.content.ComponentName)>','<android.os.UEventObserver: void <clinit>()>','<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>','<android.widget.ArrayAdapter: int getCount()>','<com.android.internal.telephony.gsm.GsmConnection: void fakeHoldBeforeDial()>','<com.android.server.am.ActivityManagerService$ProcessChangeItem: void <init>()>','<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.PhoneProxy: void getNeighboringCids(android.os.Message)>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>','<android.webkit.WebViewClassic: int tileProfilingNumFrames()>','<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.ApnSetting rspApnSetting(android.os.Message)>','<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.view.GLES20TextureLayer: void update(int,int,boolean)>','<android.view.View: boolean requestFocus(int,android.graphics.Rect)>','<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.webkit.ConsoleMessage: java.lang.String sourceId()>','<android.net.nsd.NsdServiceInfo: java.net.InetAddress access$302(android.net.nsd.NsdServiceInfo,java.net.InetAddress)>','<android.widget.ScrollView: void requestLayout()>','<com.android.server.pm.PackageManagerService: void scheduleWritePackageRestrictionsLocked(int)>','<android.animation.LayoutTransition$6: void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup)>','<android.widget.RemoteViews$SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>','<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>','<android.content.SyncAdapterType: boolean allowParallelSyncs()>','<android.util.SparseLongArray: void append(int,long)>','<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>','<android.app.Fragment: void <clinit>()>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: int constructUserData(boolean,boolean)>','<android.bluetooth.BluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)>','<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>','<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>','<com.android.server.pm.PackageSettingBase: void <init>(com.android.server.pm.PackageSettingBase)>','<com.android.internal.policy.impl.PhoneWindowManager$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.webkit.WebViewClassic: int getContentWidth()>','<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams,android.view.CompatibilityInfoHolder)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean needsOtaServiceProvisioning()>','<android.database.CursorWrapper: boolean moveToLast()>','<android.filterfw.core.Frame: android.filterfw.core.Frame release()>','<com.android.internal.content.PackageMonitor: void <clinit>()>','<android.os.MemoryFile: void <clinit>()>','<com.android.internal.telephony.IccCardStatus$PinState: boolean isPukRequired()>','<com.android.internal.telephony.IccUtils: int cdmaBcdByteToInt(byte)>','<com.android.internal.telephony.RIL: void setCallWaiting(boolean,int,android.os.Message)>','<android.net.DhcpInfoInternal: void addRoute(android.net.RouteInfo)>','<com.android.internal.telephony.PhoneBase: boolean needsOtaServiceProvisioning()>','<android.filterfw.core.FrameFormat: android.filterfw.core.FrameFormat unspecified()>','<android.app.DownloadManager$Request: android.content.ContentValues toContentValues(java.lang.String)>','<android.webkit.HTML5VideoFullScreen$2: void <init>(android.webkit.HTML5VideoFullScreen)>','<android.widget.Scroller: float viscousFluid(float)>','<android.widget.SearchView: boolean isSubmitButtonEnabled()>','<android.app.ContextImpl: boolean isRestricted()>','<android.view.inputmethod.InputMethodManager: boolean isActive()>','<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>','<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>','<android.webkit.WebSettings: void setUserAgent(int)>','<android.app.IActivityManager$ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.p2p.WifiP2pService: android.net.DhcpStateMachine access$7300(android.net.wifi.p2p.WifiP2pService)>','<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupHostLocked(int,int)>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<com.android.internal.policy.impl.GlobalActions$6: void onServiceStateChanged(android.telephony.ServiceState)>','<android.inputmethodservice.Keyboard$Key: void <init>(android.inputmethodservice.Keyboard$Row)>','<com.android.server.net.NetworkPolicyManagerService: void access$700(com.android.server.net.NetworkPolicyManagerService)>','<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>','<android.text.style.QuoteSpan: void <init>()>','<android.view.InputDevice$MotionRange: float access$700(android.view.InputDevice$MotionRange)>','<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak()>','<android.text.method.BaseMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getRadius()>','<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>','<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>','<android.app.backup.RestoreSession$RestoreObserverWrapper$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.cdma.RuimRecords: void onRecordLoaded()>','<android.net.wifi.WifiStateTracker: void <init>(int,java.lang.String)>','<com.android.server.ConnectivityService$VpnCallback: void <init>(com.android.server.ConnectivityService,com.android.server.ConnectivityService$1)>','<android.net.wifi.WifiStateMachine: int access$11700(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.sip.SipPhoneBase: void getCallForwardingOption(int,android.os.Message)>','<android.widget.HorizontalScrollView: void addView(android.view.View,int)>','<android.location.Country: void <clinit>()>','<android.view.View: boolean onCheckIsTextEditor()>','<android.widget.AbsListView: boolean isFastScrollEnabled()>','<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>','<android.graphics.drawable.BitmapDrawable: int getOpacity()>','<android.widget.TextView: int getCompoundPaddingLeft()>','<com.android.server.PreferredComponent: void <init>(com.android.server.PreferredComponent$Callbacks,org.xmlpull.v1.XmlPullParser)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>','<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)>','<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>','<com.android.internal.view.IInputMethodSession$Stub: void <init>()>','<android.os.DropBoxManager: void <init>(com.android.internal.os.IDropBoxManagerService)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>','<android.filterfw.core.Filter: void pushInputFrame(java.lang.String,android.filterfw.core.Frame)>','<com.android.ex.variablespeed.VariableSpeed: void setDataSource(android.content.Context,android.net.Uri)>','<android.animation.ValueAnimator: void access$100(android.animation.ValueAnimator,android.animation.ValueAnimator$AnimationHandler)>','<android.widget.RemoteViews$ReflectionActionWithoutParams: void <init>(android.widget.RemoteViews,int,java.lang.String)>','<com.android.internal.telephony.DataConnectionAc: void reqRefCount()>','<android.os.SystemVibrator: void vibrate(long[],int)>','<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>','<android.media.effect.effects.BackDropperEffect$1: void <init>(android.media.effect.effects.BackDropperEffect)>','<android.net.wifi.WifiStateMachine: int access$4600(android.net.wifi.WifiStateMachine)>','<android.graphics.drawable.ClipDrawable: void <init>()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getAddress()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$500(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>','<com.android.server.usb.UsbSettingsManager: void clearDefaults(java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState access$1000(android.net.wifi.WifiWatchdogStateMachine)>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: android.widget.AccessibilityIterators$LineTextSegmentIterator getInstance()>','<android.net.Uri: int hashCode()>','<android.content.SyncManager$11: int compare(android.content.SyncManager$AccountSyncStats,android.content.SyncManager$AccountSyncStats)>','<com.android.server.input.InputManagerService: boolean injectInputEvent(android.view.InputEvent,int)>','<android.view.KeyEvent: char getMatch(char[])>','<android.renderscript.RenderScript: void nAllocationRead(int,float[])>','<android.bluetooth.BluetoothHealthAppConfiguration: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.IntentBindRecord: java.lang.String toString()>','<android.filterfw.core.GLFrame: int[] getInts()>','<android.database.sqlite.DatabaseObjectNotClosedException: void <init>()>','<android.view.ViewGroup: void startViewTransition(android.view.View)>','<android.net.wifi.WifiStateMachine: void access$15600(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState: boolean processMessage(android.os.Message)>','<android.webkit.WebSettingsClassic: void setDatabasePath(java.lang.String)>','<android.net.http.RequestQueue: void enablePlatformNotifications()>','<com.android.internal.widget.multiwaveview.GlowPadView: void suspendAnimations()>','<android.webkit.PluginManager: void refreshPlugins(boolean)>','<com.android.internal.widget.EditableInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>','<android.app.Instrumentation$EmptyRunnable: void <init>(android.app.Instrumentation$1)>','<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)>','<android.app.ActionBar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager)>','<android.app.ApplicationThreadProxy: void scheduleExit()>','<android.accounts.AccountManager: void access$1400(android.accounts.AccountManager,android.os.Handler,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>','<android.net.LinkProperties: boolean isIdenticalDnses(android.net.LinkProperties)>','<android.net.INetworkStatsService$Stub$Proxy: void incrementOperationCount(int,int,int)>','<android.webkit.WebViewClassic: void goForward()>','<android.provider.BrowserContract$SyncState: void <clinit>()>','<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>','<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)>','<android.app.Activity: void onPostCreate(android.os.Bundle)>','<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>','<android.webkit.WebViewCore$WebCoreThread: void <init>(android.webkit.WebViewCore$1)>','<com.android.server.input.PersistentDataStore: boolean addKeyboardLayout(java.lang.String,java.lang.String)>','<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToBnW(byte[],int)>','<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>','<android.server.BluetoothService: java.util.List lookupInputDevicesMatchingStates(int[])>','<android.webkit.WebViewCore: void access$1300(android.webkit.WebViewCore)>','<android.webkit.WebView: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.server.sip.SipWakeupTimer: void set(int,java.lang.Runnable)>','<com.android.internal.telephony.DataConnection$DcInactiveState: void enter()>','<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult goAsync()>','<android.os.BatteryStats: void prepareForDumpLocked()>','<android.media.MediaPlayer: android.media.MediaPlayer$OnErrorListener access$700(android.media.MediaPlayer)>','<com.android.internal.widget.AbsActionBarView: boolean showOverflowMenu()>','<android.content.ISyncAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.NsdService: void access$1800(com.android.server.NsdService,android.os.Message,int,java.lang.Object)>','<android.net.NetworkStatsHistory: void <init>(java.io.DataInputStream)>','<com.android.internal.os.LoggingPrintStream: boolean checkError()>','<android.preference.Preference: boolean persistLong(long)>','<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeNotification(android.os.IBinder)>','<android.renderscript.RenderScript: void nAllocationGetSurfaceTextureID2(int,android.graphics.SurfaceTexture)>','<android.accounts.IAccountManagerResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.policy.impl.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>','<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>','<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element$DataType,int)>','<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: void enter()>','<com.android.server.wm.WindowStateAnimator: void finishExit()>','<android.location.Address: java.lang.String access$302(android.location.Address,java.lang.String)>','<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>','<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.view.menu.ListMenuItemView: boolean showsIcon()>','<android.graphics.Bitmap: void access$100(int)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void setAudioGroupMode()>','<android.app.Notification$BigTextStyle: android.app.Notification build()>','<com.android.server.am.ActivityManagerService: boolean testIsSystemReady()>','<android.hardware.SystemSensorManager$SensorThread: boolean startLocked()>','<android.net.wifi.WifiStateMachine: void access$17000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)>','<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>','<android.net.wifi.p2p.WifiP2pService: boolean access$4102(android.net.wifi.p2p.WifiP2pService,boolean)>','<android.view.GLES20Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>','<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>','<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>','<android.view.MotionEvent: int getPointerIdBits()>','<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>','<android.app.ActivityThread$ApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>','<android.animation.PropertyValuesHolder: int access$300(java.lang.Class,java.lang.String)>','<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>','<android.os.Parcel: android.os.Parcel obtain()>','<com.android.internal.telephony.IccCard$State: boolean isPinLocked()>','<android.view.IWindow$Stub$Proxy: void dispatchDragEvent(android.view.DragEvent)>','<android.app.WallpaperManager$FastBitmapDrawable: void <init>(android.graphics.Bitmap,android.app.WallpaperManager$1)>','<android.view.View$5: java.lang.Float get(android.view.View)>','<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>','<android.widget.ScrollBarDrawable: void setAlpha(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency valueOf(java.lang.String)>','<android.widget.PopupWindow$PopupViewContainer: int[] onCreateDrawableState(int)>','<android.app.Activity: void invalidateFragmentIndex(int)>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: com.android.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>','<android.webkit.HTML5VideoFullScreen: android.widget.FrameLayout access$802(android.widget.FrameLayout)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: void authenticate(java.lang.String,byte[])>','<android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser$Activity,int,boolean,int,int)>','<android.inputmethodservice.Keyboard$Key: boolean isInside(int,int)>','<android.inputmethodservice.KeyboardView: int access$700(android.inputmethodservice.KeyboardView)>','<com.android.internal.content.PackageMonitor: void onPackageRemoved(java.lang.String,int)>','<android.net.wifi.WifiInfo: int getNetworkId()>','<android.view.HardwareRenderer$Gl20Renderer: android.view.DisplayList createDisplayList(java.lang.String)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setVariableSpeed(float)>','<com.android.internal.telephony.CallManager: void unregisterForResendIncallMute(android.os.Handler)>','<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>','<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>','<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)>','<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,android.os.IBinder)>','<com.android.internal.location.DummyLocationProvider: void <init>(java.lang.String,android.location.ILocationManager)>','<android.app.ActivityManager: boolean removeTask(int,int)>','<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>','<com.android.internal.textservice.ISpellCheckerSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>','<com.android.internal.telephony.cat.Menu: void writeToParcel(android.os.Parcel,int)>','<android.location.ILocationProvider$Stub$Proxy: void updateNetworkState(int,android.net.NetworkInfo)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<com.android.server.sip.SipService: boolean isOpened(java.lang.String)>','<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>','<android.widget.FastScroller: void onScroll(android.widget.AbsListView,int,int,int)>','<android.widget.Scroller: void startScroll(int,int,int,int)>','<android.telephony.SignalStrength: int getDbm()>','<android.util.EventLog$Event: int getProcessId()>','<com.android.internal.view.menu.ActionMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.res.StringBlock$StyleIDs: int access$002(android.content.res.StringBlock$StyleIDs,int)>','<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>','<android.net.http.LoggingEventHandler: void endData()>','<android.net.wifi.WpsInfo$1: void <init>()>','<com.android.vcard.VCardParserImpl_V21: boolean parseItem()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setAlpha(float)>','<android.content.SyncManager: long access$2600()>','<com.android.internal.policy.impl.PatternUnlockScreen: java.lang.Runnable access$300(com.android.internal.policy.impl.PatternUnlockScreen)>','<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>','<android.content.ClipboardManager: java.lang.CharSequence getText()>','<android.widget.AutoCompleteTextView$MyWatcher: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1)>','<android.server.BluetoothService: android.bluetooth.BluetoothDeviceProfileState addProfileState(java.lang.String,boolean)>','<com.android.server.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName)>','<android.filterfw.core.GLFrame: void setFloats(float[])>','<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>','<com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getDuration()>','<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void dispose()>','<android.preference.Preference: void notifyHierarchyChanged()>','<com.android.internal.telephony.AdnRecord: void <init>(int,int,byte[])>','<android.text.method.MultiTapKeyListener: int getInputType()>','<android.content.Loader: void onContentChanged()>','<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>','<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager: android.widget.TextView access$200(com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager)>','<com.android.internal.util.ProcFileReader: boolean hasMoreData()>','<android.view.IWindowManager$Stub$Proxy: void dismissKeyguard()>','<com.android.server.am.ActivityRecord: void addResultLocked(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.view.InputEvent: void recycle()>','<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>','<com.android.server.wm.DimSurface: void show(int,int,int,int)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.view.accessibility.IAccessibilityInteractionConnection asInterface(android.os.IBinder)>','<android.view.KeyEvent: void setSource(int)>','<android.graphics.Region: void <init>(int,int,int,int)>','<android.app.ActivityThread: void handleDispatchPackageBroadcast(int,java.lang.String[])>','<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.method.PasswordTransformationMethod$Visible: void run()>','<android.accounts.AccountManagerService: java.lang.String readAuthTokenInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)>','<android.widget.Toast: void setDuration(int)>','<android.provider.Telephony$Sms$Inbox: void <clinit>()>','<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)>','<android.os.MemoryFile: boolean isPurgingAllowed()>','<android.net.wifi.SupplicantStateTracker$CompletedState: void enter()>','<android.app.ActivityManager$MemoryInfo$1: android.app.ActivityManager$MemoryInfo[] newArray(int)>','<android.nfc.Tag: byte[] getId()>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getNameForUid(int)>','<android.net.DummyDataStateTracker: boolean isPrivateDnsRouteSet()>','<android.view.inputmethod.InputMethodManager$2: void <init>(android.view.inputmethod.InputMethodManager)>','<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>','<android.util.LongSparseArray: void remove(long)>','<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>','<android.graphics.drawable.AnimatedRotateDrawable: void setFramesCount(int)>','<android.view.ViewRootImpl$2: void setSizeFromLayout()>','<com.android.internal.widget.ActionBarView$1: void onNothingSelected(android.widget.AdapterView)>','<android.accounts.GrantCredentialsPermissionActivity$1$1: void <init>(android.accounts.GrantCredentialsPermissionActivity$1,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: int getVoiceMessageCount()>','<android.widget.RemoteViews$TextViewDrawableAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.graphics.TemporaryBuffer: void <clinit>()>','<android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>','<android.app.ActivityGroup: java.util.HashMap onRetainNonConfigurationChildInstances()>','<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>','<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>','<android.webkit.WebView: void destroy()>','<com.android.uiautomator.core.InteractionController: void <init>(com.android.uiautomator.core.UiAutomatorBridge)>','<com.android.internal.view.WindowManagerPolicyThread: void <init>()>','<android.net.NetworkQuotaInfo: long getEstimatedBytes()>','<android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper: void <init>(android.bluetooth.BluetoothHealthCallback)>','<android.inputmethodservice.KeyboardView$3: void onKey(int,int[])>','<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()>','<com.android.server.wm.WindowManagerService: int getRotation()>','<android.webkit.SslCertLookupTable: boolean isAllowed(android.net.http.SslError)>','<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,android.content.res.CompatibilityInfo)>','<android.os.MessageQueue: void removeCallbacksAndMessages(android.os.Handler,java.lang.Object)>','<com.android.server.AppWidgetService: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>','<com.android.server.WifiService$3: void <init>(com.android.server.WifiService)>','<com.android.server.net.NetworkPolicyManagerService$8: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.content.ContentProviderOperation: boolean isReadOperation()>','<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>','<android.webkit.WebViewCore$TouchUpData: void <init>()>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void notifyOnRemoteViewsLoaded(int,android.widget.RemoteViews,int)>','<android.widget.TextView: void setSelected(boolean)>','<android.webkit.HTML5VideoView: void showControllerInFullScreen()>','<com.android.internal.util.AsyncChannel: void disconnected()>','<android.webkit.WebViewClassic: void setLayerType(int,android.graphics.Paint)>','<com.android.internal.os.LoggingPrintStream: void write(int)>','<android.location.INetInitiatedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.ImageView: void setSelected(boolean)>','<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>','<com.android.internal.telephony.gsm.SIMRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.view.GLES20DisplayList: void setTransformationInfo(float,float,float,float,float,float,float,float)>','<android.net.wifi.WifiStateMachine: android.net.wifi.p2p.WifiP2pManager access$1800(android.net.wifi.WifiStateMachine)>','<android.location.CountryDetector: void addCountryListener(android.location.CountryListener,android.os.Looper)>','<android.media.Ringtone: void setUri(android.net.Uri)>','<android.content.pm.IPackageStatsObserver$Stub$Proxy: void onGetStatsCompleted(android.content.pm.PackageStats,boolean)>','<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isScreenSaverEnabled()>','<com.android.internal.telephony.IntRangeManager$IntRange: void <init>(com.android.internal.telephony.IntRangeManager,com.android.internal.telephony.IntRangeManager$ClientRange)>','<android.text.style.BulletSpan: void <init>(int)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: boolean equals(java.lang.Object)>','<android.preference.Preference: void setTitle(int)>','<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>','<android.content.BroadcastReceiver$PendingResult: void clearAbortBroadcast()>','<android.content.res.Configuration$1: void <init>()>','<android.widget.TextView: void setTextAppearance(android.content.Context,int)>','<android.nfc.tech.BasicTagTechnology: void close()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.LocationManagerService: void removeProximityAlert(android.app.PendingIntent)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$5100(android.net.wifi.WifiStateMachine)>','<android.opengl.GLLogWrapper: boolean glIsTexture(int)>','<com.android.server.WifiService: boolean disableNetwork(int)>','<com.android.server.NetworkManagementService: void untetherInterface(java.lang.String)>','<android.preference.PreferenceManager: void unregisterOnActivityStopListener(android.preference.PreferenceManager$OnActivityStopListener)>','<android.filterfw.core.FilterContext: android.filterfw.core.Frame fetchFrame(java.lang.String)>','<android.webkit.CookieManager: void removeSessionCookie()>','<com.android.server.am.BatteryStatsService: void noteInputEvent()>','<android.content.ClipData: void addItem(android.content.ClipData$Item)>','<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.PhoneProxy: void unregisterForSignalInfo(android.os.Handler)>','<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>','<android.media.AudioService: boolean isStreamAffectedByMute(int)>','<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo)>','<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>','<com.android.server.am.BaseErrorDialog: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.server.location.GpsLocationProvider: java.lang.String getInternalState()>','<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>','<android.telephony.TelephonyManager: int getCurrentPhoneType()>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>','<android.widget.SpellChecker: int[] access$800(android.widget.SpellChecker)>','<com.android.internal.telephony.IccRecords: java.lang.String getOperatorNumeric()>','<com.android.internal.telephony.DataConnection: void access$2900(com.android.internal.telephony.DataConnection,android.os.Message)>','<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.PowerManagerService$LockList: int gatherState()>','<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onVoiceCallEnded()>','<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>','<android.app.ContextImpl$29: java.lang.Object createService(android.app.ContextImpl)>','<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>','<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiMulticastTime(long,int)>','<android.accounts.IAccountAuthenticator$Stub: void <init>()>','<android.os.NullVibrator: void cancel()>','<android.opengl.GLLogWrapper: void glPointParameterxv(int,int[],int)>','<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>','<com.android.server.MountService: int finalizeSecureContainer(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean getMessageWaitingIndicator()>','<android.app.ActivityGroup: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>','<android.os.BatteryStats: void printBitDescriptions(java.io.PrintWriter,int,int,android.os.BatteryStats$BitDescription[])>','<android.widget.PopupWindow: boolean access$400(android.widget.PopupWindow,android.view.View,android.view.WindowManager$LayoutParams,int,int)>','<android.content.IntentFilter$AuthorityEntry: void <init>(java.lang.String,java.lang.String)>','<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback)>','<android.content.res.XmlBlock: int access$1000(int,java.lang.String,java.lang.String)>','<android.net.Uri$StringUri: java.lang.String getAuthority()>','<com.android.i18n.phonenumbers.PhoneNumberMatcher$State: com.android.i18n.phonenumbers.PhoneNumberMatcher$State[] values()>','<android.graphics.drawable.RotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.widget.ScrollView: void smoothScrollTo(int,int)>','<com.android.server.WifiService: int getWifiEnabledState()>','<android.media.RemoteControlClient$MetadataEditor: void apply()>','<android.content.pm.PackageParser$Component: void <init>(android.content.pm.PackageParser$ParsePackageItemArgs,android.content.pm.PackageItemInfo)>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call$State getState()>','<com.android.internal.telephony.SmsHeader: byte[] toByteArray(com.android.internal.telephony.SmsHeader)>','<android.server.BluetoothService: android.bluetooth.BluetoothPan access$1002(android.server.BluetoothService,android.bluetooth.BluetoothPan)>','<android.util.Property: java.lang.Class getType()>','<android.filterfw.core.Filter: int getStatus()>','<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>','<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>','<com.android.internal.telephony.BaseCommands: void setOnCallRing(android.os.Handler,int,java.lang.Object)>','<android.content.res.AssetManager$AssetInputStream: int available()>','<android.view.View: int getWindowSystemUiVisibility()>','<android.widget.AdapterView: boolean canAnimate()>','<android.provider.BrowserContract$Images: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>','<android.app.Instrumentation$ActivityGoing: boolean queueIdle()>','<android.text.TextUtils: int unpackRangeStartFromLong(long)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleBackspace()>','<com.android.internal.view.IInputContext$Stub$Proxy: void endBatchEdit()>','<android.util.MathUtils: float pow(float,float)>','<com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState[] values()>','<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>','<android.app.ResultInfo$1: android.app.ResultInfo createFromParcel(android.os.Parcel)>','<android.os.FileObserver: void stopWatching()>','<android.content.IntentSender$FinishedDispatcher: void <init>(android.content.IntentSender,android.content.IntentSender$OnFinished,android.os.Handler)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaConnection: void onLocalDisconnect()>','<com.android.internal.policy.impl.LockScreen: void onPause()>','<android.accounts.IAccountManager$Stub$Proxy: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()>','<android.graphics.Paint$Cap: void <clinit>()>','<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>','<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>','<android.nfc.NfcAdapter$1: void onPaused(android.app.Activity)>','<com.android.internal.policy.impl.AccountUnlockScreen: void onPause()>','<android.os.storage.StorageVolume: int getMtpReserveSpace()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: boolean isErrored()>','<android.content.SyncManager: android.accounts.AccountAndUser[] access$2200(android.content.SyncManager)>','<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: java.net.URL access$500(android.webkit.HTML5VideoViewProxy$PosterDownloader)>','<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>','<android.widget.AdapterViewAnimator: void hideTapFeedback(android.view.View)>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIconAttribute(int)>','<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])>','<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>','<android.filterfw.core.FilterContext: void storeFrame(java.lang.String,android.filterfw.core.Frame)>','<android.server.BluetoothAdapterStateMachine: void access$3100(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<com.android.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.lang.String)>','<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>','<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,int,int)>','<android.view.animation.CycleInterpolator: void <init>(float)>','<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>','<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff$Mode)>','<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)>','<android.filterfw.core.Frame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<android.widget.RelativeLayout: int getGravity()>','<android.webkit.ZoomManager: boolean isInZoomOverview()>','<android.view.View: boolean requestFocusFromTouch()>','<com.android.vcard.VCardProperty: void setValues(java.util.List)>','<com.android.internal.telephony.DataConnection$DcInactiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$DisconnectParams)>','<android.view.ViewRootImpl$InvalidateOnAnimationRunnable: void <init>(android.view.ViewRootImpl)>','<android.util.Property: boolean isReadOnly()>','<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>','<com.android.server.am.ServiceRecord: void clearDeliveredStartsLocked()>','<android.content.SyncManager$SyncAlarmIntentReceiver: void <init>(android.content.SyncManager)>','<android.app.LoadedApk$ReceiverDispatcher$InnerReceiver: void <init>(android.app.LoadedApk$ReceiverDispatcher,boolean)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void <init>(long,int)>','<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>','<android.content.res.ColorStateList: void <clinit>()>','<android.webkit.WebViewCore: int access$6900(android.webkit.WebViewCore,int,int,int[],int[],int[],int,int,int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3: boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<android.inputmethodservice.ExtractEditText: boolean isFocused()>','<android.telephony.SmsCbLocation: java.lang.String toString()>','<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.opengl.GLLogWrapper: void glFogx(int,int)>','<android.telephony.SmsCbCmasInfo: void <clinit>()>','<com.android.internal.location.DummyLocationProvider: boolean requiresNetwork()>','<com.android.internal.telephony.gsm.SIMRecords: int getDisplayRule(java.lang.String)>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)>','<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>','<com.android.server.am.PendingIntentRecord$Key: boolean equals(java.lang.Object)>','<com.android.server.WifiService: boolean setWifiEnabled(boolean)>','<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayWidth(int,int,int)>','<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>','<android.net.INetworkPolicyManager$Stub$Proxy: boolean isNetworkMetered(android.net.NetworkState)>','<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>','<com.android.internal.telephony.DriverCall$State: void <clinit>()>','<com.android.server.PowerManagerService: boolean access$6200(com.android.server.PowerManagerService)>','<com.android.internal.telephony.gsm.SIMFileHandler: void finalize()>','<android.net.wifi.WifiNative: boolean setDeviceName(java.lang.String)>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.gsm.GSMPhone)>','<android.text.PackedIntVector: void setValue(int,int,int)>','<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: void enter()>','<android.media.IAudioService$Stub$Proxy: boolean isStreamMute(int)>','<android.view.DragEvent: android.view.DragEvent obtain(android.view.DragEvent)>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForRoamingOn(android.os.Handler)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: boolean getCsimSpnDisplayCondition()>','<android.net.InterfaceConfiguration: void <init>()>','<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>','<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>','<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>','<android.net.wifi.WifiInfo: void setHiddenSSID(boolean)>','<android.net.wifi.WifiStateMachine: void setScanOnlyMode(boolean)>','<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()>','<com.android.server.WallpaperManagerService: void systemReady()>','<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()>','<android.location.GpsStatus$SatelliteIterator: void <init>(android.location.GpsStatus,android.location.GpsSatellite[])>','<android.util.SparseBooleanArray: void put(int,boolean)>','<android.filterfw.core.VertexFrame: java.lang.String toString()>','<android.media.MediaPlayer: void invoke(android.os.Parcel,android.os.Parcel)>','<android.app.Fragment: boolean getUserVisibleHint()>','<android.animation.ValueAnimator: java.lang.String toString()>','<android.graphics.drawable.RotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.IccCardApplication$AppState: boolean isSubscriptionPersoEnabled()>','<android.server.BluetoothService: java.lang.String getObjectPathFromAddress(java.lang.String)>','<android.widget.RelativeLayout: void setVerticalGravity(int)>','<android.text.method.CharacterPickerDialog$OptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>','<android.view.WindowManagerImpl: void <clinit>()>','<android.content.Intent$ShortcutIconResource: void <clinit>()>','<com.android.internal.telephony.cat.CatService: void handleMessage(android.os.Message)>','<android.widget.Switch: void drawableStateChanged()>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>','<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()>','<android.server.BluetoothService: android.content.Context access$700(android.server.BluetoothService)>','<android.media.AudioManager$FocusEventHandlerDelegate$1: void <init>(android.media.AudioManager$FocusEventHandlerDelegate,android.os.Looper,android.media.AudioManager)>','<android.renderscript.RenderScript: int nPathCreate(int,boolean,int,int,float)>','<android.nfc.NdefRecord: byte[] getId()>','<com.android.internal.telephony.IccPhoneBookInterfaceManager$1: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getDeviceSvn()>','<android.widget.AbsListView: float getBottomFadingEdgeStrength()>','<com.android.server.LocationManagerService$LocationWorkerHandler: void handleMessage(android.os.Message)>','<com.android.internal.telephony.BaseCommands: void registerForVoiceNetworkStateChanged(android.os.Handler,int,java.lang.Object)>','<android.media.AudioService$ScoClient: void binderDied()>','<android.webkit.ClientCertRequestHandler$1: void <init>(android.webkit.ClientCertRequestHandler)>','<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>','<android.database.DatabaseUtils$InsertHelper: long replace(android.content.ContentValues)>','<android.webkit.WebSettings: boolean enableSmoothTransition()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.widget.LockPatternUtils access$800(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.graphics.Paint$Style: android.graphics.Paint$Style[] values()>','<android.os.Debug: void resetGlobalFreedSize()>','<com.android.internal.telephony.sip.SipPhone: void setDataRoamingEnabled(boolean)>','<android.net.EthernetDataTracker: void access$300(android.net.EthernetDataTracker,java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfoCache: void <clinit>()>','<android.net.wifi.WifiNative: boolean setCountryCode(java.lang.String)>','<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State stateFromCLCC(int)>','<android.view.View$TransformationInfo: int access$1302(android.view.View$TransformationInfo,int)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIO(int,int,int,java.lang.Object)>','<android.preference.Preference: boolean isPersistent()>','<android.os.Parcel: void writeInt(int)>','<com.android.server.WifiService: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>','<android.filterfw.core.SyncRunner: void scheduleFilterWake(android.filterfw.core.Filter,int)>','<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.util.List leadingDigitPatterns()>','<com.android.internal.view.IInputMethod$Stub$Proxy: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>','<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList)>','<android.app.ActivityThread: void access$2900(android.app.ActivityThread,android.app.ActivityThread$UpdateCompatibilityData)>','<com.android.server.am.ActivityManagerService$AThread: void run()>','<android.widget.TextView: void setHighlightColor(int)>','<android.bluetooth.BluetoothDeviceProfileState: android.content.BroadcastReceiver access$4200(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.server.EventLogTags: void writeCacheFileDeleted(java.lang.String)>','<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>','<com.android.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>','<android.media.AudioManager: void registerAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void switchWith(com.android.internal.telephony.sip.SipPhone$SipCall)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1Number()>','<android.media.TimedText$CharPos: void <init>(int,int)>','<android.widget.Editor$PinnedPopupWindow: void hide()>','<com.android.internal.telephony.IccCard: com.android.internal.telephony.IccFileHandler getIccFileHandler()>','<android.content.Loader: void abandon()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pConfig access$4200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.filterfw.core.FilterPort: void close()>','<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript$RSErrorHandler)>','<com.android.internal.policy.impl.FaceUnlock: void initializeView(android.view.View)>','<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>','<android.view.MotionEvent$1: void <init>()>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void finalize()>','<android.server.BluetoothBondState: void setBondState(java.lang.String,int)>','<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>','<android.animation.AnimatorSet$1: void onAnimationCancel(android.animation.Animator)>','<android.location.GpsStatus: int getTimeToFirstFix()>','<android.app.backup.RestoreObserver: void restoreFinished(int)>','<android.preference.PreferenceScreen$SavedState$1: void <init>()>','<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>','<android.database.CursorWrapper: android.os.Bundle getExtras()>','<android.app.StatusBarManager: void collapse()>','<android.graphics.drawable.AnimatedRotateDrawable: void onBoundsChange(android.graphics.Rect)>','<android.net.DhcpInfoInternal: android.net.LinkProperties makeLinkProperties()>','<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.SpellChecker$SpellParser: void parse()>','<android.net.MobileDataStateTracker: void releaseWakeLock()>','<android.accounts.AccountManager$5: void doWork()>','<android.media.AudioService$ScoClient: void incCount()>','<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>','<android.provider.BrowserContract$Settings: void <clinit>()>','<android.webkit.WebSettings: void setMinimumFontSize(int)>','<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>','<com.android.server.MountService: void access$2600(com.android.server.MountService)>','<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>','<android.widget.TextView$CharWrapper: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,int,android.graphics.Paint)>','<android.content.pm.ApplicationInfo: void disableCompatibilityMode()>','<android.text.TextLine: android.text.TextLine recycle(android.text.TextLine)>','<android.view.VolumePanel: void postRemoteVolumeChanged(int,int)>','<com.android.internal.telephony.sip.SipConnectionBase: void setState(com.android.internal.telephony.Call$State)>','<android.bluetooth.BluetoothAdapter$RfcommChannelPicker: void <clinit>()>','<android.location.ILocationListener$Stub$Proxy: void onLocationChanged(android.location.Location)>','<android.net.LocalSocketImpl: java.lang.Object getOption(int)>','<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String decodeUCS2String(byte[])>','<android.widget.Switch: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.accounts.AccountManager$8: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,android.os.Bundle,android.app.Activity)>','<com.android.server.wm.Session: void remove(android.view.IWindow)>','<android.webkit.HTML5VideoView: void <init>()>','<android.graphics.Region: void <init>(android.graphics.Region)>','<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>','<android.media.IRingtonePlayer$Stub$Proxy: boolean isPlaying(android.os.IBinder)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void <init>(com.android.server.PowerManagerService,java.lang.String,int)>','<com.android.internal.app.ActionBarImpl: void setWindowVisibility(int)>','<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>','<android.telephony.SmsCbEtwsInfo: void <init>(int,boolean,boolean,byte[])>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>','<com.android.server.sip.SipWakeupTimer$MyEvent: void <init>(int,java.lang.Runnable,long)>','<android.view.GLES20DisplayList: void setHasOverlappingRendering(boolean)>','<android.net.wifi.p2p.WifiP2pInfo$1: void <init>()>','<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)>','<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<com.android.server.pm.PackageSettingBase: boolean enableComponentLPw(java.lang.String,int)>','<android.content.ContentService$ObserverCall: void <init>(android.content.ContentService$ObserverNode,android.database.IContentObserver,boolean)>','<android.opengl.GLLogWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>','<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int)>','<android.os.FileObserver: void <init>(java.lang.String)>','<com.android.internal.widget.LockPatternUtils: boolean isLockPasswordEnabled()>','<com.android.internal.telephony.CallManager: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>','<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>','<com.android.server.pm.PackageManagerService$MoveParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,android.content.pm.IPackageMoveObserver,int,java.lang.String,java.lang.String,int)>','<android.database.AbstractCursor: boolean move(int)>','<com.android.internal.app.AlertController: void setView(android.view.View)>','<com.android.server.pm.PackageManagerService: void access$3800(com.android.server.pm.PackageManagerService,boolean,boolean)>','<com.android.server.NsdService: android.content.Context access$300(com.android.server.NsdService)>','<android.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>','<android.graphics.Rect: void union(int,int)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean access$500(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.view.ViewRootImpl$RunQueue: void post(java.lang.Runnable)>','<android.server.BluetoothAdapterStateMachine: void access$6600(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.widget.PopupWindow: int[] access$700()>','<android.webkit.CallbackProxy$10: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<android.speech.tts.ITextToSpeechCallback$Stub: android.speech.tts.ITextToSpeechCallback asInterface(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void onServiceDisconnected(android.content.ComponentName)>','<android.net.INetworkStatsService$Stub: android.net.INetworkStatsService asInterface(android.os.IBinder)>','<android.text.method.QwertyKeyListener: void <clinit>()>','<android.view.MotionEvent$PointerProperties: void <init>()>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withYieldAllowed(boolean)>','<com.android.internal.telephony.Connection: boolean isAlive()>','<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>','<android.webkit.WebViewCore$EventHub$1: void handleMessage(android.os.Message)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$100(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.lang.Throwable)>','<android.view.GLES20Layer: boolean copyInto(android.graphics.Bitmap)>','<android.webkit.SslErrorHandler: void proceed()>','<android.net.RouteInfo: boolean isDefaultRoute()>','<android.widget.Spinner$DialogPopup: void setAdapter(android.widget.ListAdapter)>','<android.graphics.Matrix: java.lang.String toString()>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: int length()>','<android.widget.Editor$SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>','<com.android.server.connectivity.Tethering$TetherMasterSM: int access$3100(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int)>','<com.android.internal.policy.impl.PhoneWindowManager$14: void <init>(com.android.internal.policy.impl.PhoneWindowManager,android.view.WindowManagerPolicy$ScreenOnListener)>','<com.android.internal.telephony.sip.SipCommandInterface: void setSuppServiceNotifications(boolean,android.os.Message)>','<com.android.vcard.VCardProperty: java.util.List getValueList()>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>','<com.android.server.AppWidgetService$1: void <init>(com.android.server.AppWidgetService)>','<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>','<android.server.BluetoothA2dpService: int getConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.BaseCommands: void unregisterForDisplayInfo(android.os.Handler)>','<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>','<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.res.XmlBlock: void access$1500(int)>','<android.view.MotionEvent: float getToolMajor()>','<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>','<com.android.server.StatusBarManagerService: android.os.IBinder addNotification(com.android.internal.statusbar.StatusBarNotification)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>','<com.android.server.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean)>','<android.net.DhcpStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<android.net.wifi.WifiManager: boolean removeNetwork(int)>','<android.net.NetworkPolicy$1: android.net.NetworkPolicy createFromParcel(android.os.Parcel)>','<android.content.ContentProviderOperation$Builder: java.util.Map access$600(android.content.ContentProviderOperation$Builder)>','<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>','<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>','<com.android.internal.widget.DrawableHolder: void clearAnimations()>','<com.android.internal.telephony.sip.SipCommandInterface: void getCdmaSubscriptionSource(android.os.Message)>','<android.widget.Editor$InsertionPointCursorController: void onTouchModeChanged(boolean)>','<android.content.pm.ContainerEncryptionParams: void <init>(java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,byte[],long,long,long)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>','<com.android.internal.policy.impl.LockScreen$2: void <init>(com.android.internal.policy.impl.LockScreen)>','<com.android.internal.telephony.gsm.SmsCbHeader: void <init>(byte[])>','<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>','<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>','<android.view.View: boolean getFilterTouchesWhenObscured()>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>','<android.webkit.CallbackProxy: android.webkit.BrowserFrame createWindow(boolean,boolean)>','<com.android.server.AppWidgetService: void onUserRemoved(int)>','<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>','<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>','<android.os.Looper: void quit()>','<android.webkit.WebViewClassic: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long)>','<android.content.pm.FeatureInfo: void <init>(android.os.Parcel,android.content.pm.FeatureInfo$1)>','<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()>','<android.database.AbstractCursor: void close()>','<com.android.server.wm.WindowManagerService: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean,com.android.server.wm.WindowManagerService$1)>','<com.android.internal.telephony.gsm.GSMPhone: boolean isCfEnable(int)>','<android.provider.BrowserContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>','<com.android.internal.widget.DrawableHolder: float getScaleY()>','<com.android.internal.telephony.IccCard: void access$900(com.android.internal.telephony.IccCard,boolean)>','<com.android.internal.telephony.IccCardStatus: void setNumApplications(int)>','<android.hardware.usb.UsbManager: boolean isFunctionEnabled(java.lang.String)>','<android.os.INetworkManagementService$Stub$Proxy: void setUidNetworkRules(int,boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat addLeadingDigitsPattern(java.lang.String)>','<android.os.StrictMode$InstanceTracker: void finalize()>','<android.net.wifi.WifiStateMachine: boolean access$9002(android.net.wifi.WifiStateMachine,boolean)>','<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onStartRestore()>','<android.view.Window: void removeFeature(int)>','<com.android.server.DeviceStorageMonitorService: void access$300(com.android.server.DeviceStorageMonitorService,boolean,long)>','<com.android.internal.util.StateMachine: java.lang.String getMessageInfo(android.os.Message)>','<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)>','<com.android.server.am.UriPermissionOwner: void addWritePermission(com.android.server.am.UriPermission)>','<android.content.pm.ResolveInfo: int describeContents()>','<android.app.ApplicationPackageManager: void updateUserFlags(int,int)>','<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer retain()>','<com.android.internal.telephony.cat.ResultException$1: void <clinit>()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNumeric(android.content.ComponentName,int)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: boolean markSupported()>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>','<android.media.AudioManager: void setParameters(java.lang.String)>','<android.widget.TextView$ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>','<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>','<com.android.server.am.ContentProviderRecord: void access$100(com.android.server.am.ContentProviderRecord,android.os.IBinder)>','<com.android.server.am.ThumbnailHolder: void <init>()>','<android.os.Messenger: boolean equals(java.lang.Object)>','<android.app.LoadedApk$ReceiverDispatcher: android.content.BroadcastReceiver getIntentReceiver()>','<com.android.internal.os.BatteryStatsImpl$Counter: void writeToParcel(android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.view.animation.Animation: void finalize()>','<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>','<android.webkit.FindActionModeCallback$NoAction: void onDestroyActionMode(android.view.ActionMode)>','<android.renderscript.RenderScript: void nAllocationCopyFromBitmap(int,android.graphics.Bitmap)>','<android.view.Display: int getPixelFormat()>','<com.android.server.NetworkManagementService: void enableIpv6(java.lang.String)>','<com.android.internal.util.XmlUtils: void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer)>','<android.provider.BrowserContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void onAnimationUpdate(android.animation.ValueAnimator)>','<android.net.ProxyProperties: java.lang.String getHost()>','<com.android.server.wm.BlackFrame: void printTo(java.lang.String,java.io.PrintWriter)>','<com.android.internal.os.BatteryStatsImpl: void noteStartSensorLocked(int,int)>','<android.net.SSLCertificateSocketFactory$1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>','<android.widget.RelativeLayout$LayoutParams: int access$400(android.widget.RelativeLayout$LayoutParams)>','<android.widget.SearchView: android.widget.CursorAdapter access$100(android.widget.SearchView)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>','<android.graphics.Rasterizer: void finalize()>','<com.android.internal.telephony.gsm.SuppServiceNotification: void <init>()>','<android.widget.RemoteViewsAdapter$4: void <init>(android.widget.RemoteViewsAdapter)>','<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>','<android.webkit.CookieSyncManager: void run()>','<android.widget.Editor$HandleView: void onHandleMoved()>','<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>','<android.animation.ValueAnimator: void reverse()>','<com.android.server.AppWidgetServiceImpl$Provider: void <init>()>','<android.webkit.Plugin: java.lang.String access$200(android.webkit.Plugin)>','<android.view.ActionMode: void setTitleOptionalHint(boolean)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>','<com.android.internal.app.ActionBarImpl: boolean access$900(boolean,boolean,boolean)>','<android.net.sip.ISipService$Stub$Proxy: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>','<com.android.server.am.ActivityStack: com.android.server.am.TaskAccessInfo getTaskAccessInfoLocked(int,boolean)>','<com.android.internal.telephony.BaseCommands: void registerForCallWaitingInfo(android.os.Handler,int,java.lang.Object)>','<android.widget.ImageView: void setColorFilter(int)>','<com.android.internal.telephony.IccCard: com.android.internal.telephony.IccCard$State getRuimState()>','<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>','<android.os.Process: int getThreadGroupLeader(int)>','<android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>','<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse createFromParcel(android.os.Parcel)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)>','<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int loadLanguage(java.lang.String,java.lang.String,java.lang.String)>','<android.location.IGpsStatusListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.AbsListView: boolean isScrollingCacheEnabled()>','<android.os.Bundle: void <init>()>','<android.location.Location: boolean access$502(android.location.Location,boolean)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.os.Bundle)>','<android.media.AudioManager: void setStreamSolo(int,boolean)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>','<android.content.ClipDescription: java.lang.String getMimeType(int)>','<com.android.internal.telephony.CallManager: void unregisterForDisconnect(android.os.Handler)>','<android.view.ViewGroup$1: void <init>(android.view.ViewGroup)>','<android.webkit.WebSettingsClassic: boolean getDatabaseEnabled()>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$1202(android.bluetooth.BluetoothDeviceProfileState,boolean)>','<com.android.server.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>','<android.widget.Editor$CorrectionHighlighter: void access$300(android.widget.Editor$CorrectionHighlighter,boolean)>','<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>','<com.android.server.PowerManagerService$4: void run()>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>','<android.filterpacks.videosrc.MediaSource$3: void <init>(android.filterpacks.videosrc.MediaSource)>','<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>','<com.android.server.ConnectivityService: void access$2200(com.android.server.ConnectivityService,int)>','<android.hardware.usb.IUsbManager$Stub: android.os.IBinder asBinder()>','<android.webkit.BrowserFrame$ConfigCallback: void addHandler(android.os.Handler)>','<android.text.method.BaseMovementMethod: boolean scrollRight(android.widget.TextView,android.text.Spannable,int)>','<android.net.LinkProperties: void <clinit>()>','<android.webkit.WebViewClassic: void <clinit>()>','<com.android.server.pm.PackageManagerService: int getInstallLocation()>','<android.webkit.WebViewCore: void sendMessages(java.util.ArrayList)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean removeUser(int)>','<android.view.GLES20TextureLayer: android.view.HardwareCanvas getCanvas()>','<com.android.server.wm.WindowState: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.Session,android.view.IWindow,com.android.server.wm.WindowToken,com.android.server.wm.WindowState,int,android.view.WindowManager$LayoutParams,int)>','<android.view.FocusFinder$1: android.view.FocusFinder initialValue()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$RecoveryAction: boolean access$900(int)>','<com.android.internal.policy.impl.PasswordUnlockScreen$1: void <init>(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.renderscript.Element: android.renderscript.Element I16_2(android.renderscript.RenderScript)>','<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.InputMethodManagerService: java.util.ArrayList access$2000(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>','<android.os.Bundle: boolean hasFileDescriptors()>','<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)>','<com.android.server.pm.PackageManagerService: java.util.HashSet access$600(com.android.server.pm.PackageManagerService)>','<android.os.Handler: java.lang.String getMessageName(android.os.Message)>','<android.net.nsd.DnsSdTxtRecord: void <clinit>()>','<android.bluetooth.BluetoothHeadset: boolean cancelConnectThread()>','<com.android.internal.telephony.GsmAlphabet: int charToGsm(char,boolean)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>','<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>','<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>','<android.filterfw.core.StopWatch: void <init>(java.lang.String)>','<com.android.internal.telephony.CallManager: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void registerForRedirectedNumberInfo(android.os.Handler,int,java.lang.Object)>','<com.android.server.WifiService: void access$3700(com.android.server.WifiService,int,int)>','<com.android.server.net.NetworkPolicyManagerService: boolean isUidForeground(int)>','<android.view.View: void requestFitSystemWindows()>','<com.android.internal.telephony.sip.SipPhoneBase: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<android.test.mock.MockContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>','<android.text.TextDirectionHeuristics$AnyStrong: void <clinit>()>','<android.media.AudioService: void setSpeakerphoneOn(boolean)>','<android.app.IThumbnailReceiver$Stub$Proxy: void finished()>','<android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)>','<com.android.server.usb.UsbSettingsManager: void deviceAttached(android.hardware.usb.UsbDevice)>','<android.view.View$10: void setValue(java.lang.Object,float)>','<com.android.internal.telephony.SmsStorageMonitor$1: void <init>(com.android.internal.telephony.SmsStorageMonitor)>','<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<com.android.internal.os.ProcessStats: void <clinit>()>','<android.view.View: boolean onSetAlpha(int)>','<android.graphics.RectF$1: void <init>()>','<android.view.FocusFinder: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>','<android.view.ViewRootImpl$W: void dispatchSystemUiVisibilityChanged(int,int,int,int)>','<android.text.TextUtils: boolean doesNotNeedBidi(char[],int,int)>','<android.preference.PreferenceFragment: android.widget.ListView access$100(android.preference.PreferenceFragment)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>','<android.app.SharedPreferencesImpl$EditorImpl$1: void run()>','<android.widget.TextView: float getLineSpacingExtra()>','<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)>','<android.location.ILocationListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.sip.SipCommandInterface: void setRadioPower(boolean,android.os.Message)>','<android.preference.Preference: void setPersistent(boolean)>','<android.view.Window: boolean isActive()>','<android.net.LocalSocket: void <init>()>','<android.view.ViewRootImpl$TakenSurfaceHolder: void onRelayoutContainer()>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder: void <init>()>','<android.widget.ListView$FocusSelector: void run()>','<com.android.server.wm.WindowStateAnimator: boolean performShowLocked()>','<android.media.IAudioFocusDispatcher$Stub: android.media.IAudioFocusDispatcher asInterface(android.os.IBinder)>','<android.filterfw.io.TextGraphReader$ConnectCommand: void execute(android.filterfw.io.TextGraphReader)>','<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiStateMachine: void access$1200(android.net.wifi.WifiStateMachine,android.os.Message,int)>','<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>','<android.content.SyncManager: boolean access$3402(android.content.SyncManager,boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean updateCurrentCarrierInProvider()>','<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreFinished(int)>','<android.webkit.ByteArrayBuilder: int getByteSize()>','<android.database.sqlite.SQLiteConnection: void collectDbStatsUnsafe(java.util.ArrayList)>','<android.hardware.input.KeyboardLayout: java.lang.String getCollection()>','<android.net.TrafficStats: long getTotalRxBytes()>','<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>','<com.android.internal.telephony.sip.SipPhone: android.net.sip.SipManager access$1400(com.android.internal.telephony.sip.SipPhone)>','<android.webkit.WebViewClassic$1: void onPostExecute(java.lang.Object)>','<android.view.Window: android.content.res.TypedArray getWindowStyle()>','<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config valueOf(java.lang.String)>','<android.webkit.ZoomControlExternal: void <init>(android.webkit.WebViewClassic)>','<android.widget.PopupWindow: int getAnimationStyle()>','<com.android.internal.telephony.DataConnection$CallSetupException: int getRetryOverride()>','<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>','<android.net.Uri$StringUri: java.util.List getPathSegments()>','<android.webkit.PluginFullScreenHolder: android.webkit.PluginFullScreenHolder$CustomFrameLayout access$302(android.webkit.PluginFullScreenHolder$CustomFrameLayout)>','<android.net.http.RequestQueue: void stopTiming()>','<com.android.internal.view.menu.MenuPopupHelper: int getId()>','<android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus: android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus[] values()>','<android.widget.LinearLayout: void setHorizontalGravity(int)>','<android.os.Trace: void traceCounter(long,java.lang.String,int)>','<android.net.wifi.p2p.WifiP2pConfig$1: android.net.wifi.p2p.WifiP2pConfig[] newArray(int)>','<com.android.internal.content.PackageHelper: boolean isContainerMounted(java.lang.String)>','<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>','<android.view.View: void onOverScrolled(int,int,boolean,boolean)>','<android.provider.Telephony$Mms$Draft: void <clinit>()>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getSubscriberId()>','<android.provider.Settings$Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)>','<android.content.SyncManager$7: void <init>(android.content.SyncManager)>','<com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>','<android.graphics.drawable.RotateDrawable: int getOpacity()>','<android.media.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>','<android.view.ScaleGestureDetector: float getPreviousSpanY()>','<android.hardware.Camera$Parameters: boolean getVideoStabilization()>','<android.widget.SearchView$10: void <init>(android.widget.SearchView)>','<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>','<android.speech.tts.TextToSpeech: java.lang.Object access$900(android.speech.tts.TextToSpeech)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher$SmsCbConcatInfo: boolean matchesLocation(java.lang.String,int,int)>','<android.location.Address: void setCountryName(java.lang.String)>','<android.text.style.AlignmentSpan$Standard: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>','<com.android.internal.app.ActionBarImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.widget.DigitalClock: java.util.Calendar access$002(com.android.internal.widget.DigitalClock,java.util.Calendar)>','<android.media.MediaRouter$RouteInfo: int getSupportedTypes()>','<com.android.internal.telephony.sip.SipCommandInterface: void getCDMASubscription(android.os.Message)>','<android.widget.PopupWindow$PopupViewContainer: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.app.Activity: void onNewIntent(android.content.Intent)>','<android.webkit.WebViewClassic: boolean performLongClick()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>','<android.location.ILocationManager$Stub$Proxy: boolean geocoderIsPresent()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>','<android.app.ContextImpl: void setOuterContext(android.content.Context)>','<com.android.server.am.ActivityRecord$Token: java.lang.String toString()>','<com.android.internal.widget.WaveView: void onAnimationUpdate(android.animation.ValueAnimator)>','<android.view.GLES20DisplayList: void setBottom(int)>','<com.android.internal.util.TypedProperties: int interpretType(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder newBuilder()>','<android.graphics.Canvas: void drawPatch(android.graphics.Bitmap,byte[],android.graphics.RectF,android.graphics.Paint)>','<android.webkit.WebHistoryItem: java.lang.String getTouchIconUrl()>','<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)>','<android.view.GestureDetector$SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>','<android.accessibilityservice.AccessibilityServiceInfo$1: android.accessibilityservice.AccessibilityServiceInfo createFromParcel(android.os.Parcel)>','<android.inputmethodservice.InputMethodService: void onViewClicked(boolean)>','<android.server.BluetoothPanProfileHandler: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>','<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>','<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOnLocked()>','<android.widget.PopupWindow: void setSoftInputMode(int)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.IState access$9600(android.net.wifi.WifiStateMachine)>','<android.view.GLES20Canvas: void setViewport(int,int)>','<android.content.SyncManager: android.content.Context access$1200(android.content.SyncManager)>','<android.view.GLES20DisplayList: void setPivotX(float)>','<android.net.ConnectivityManager: boolean setRadios(boolean)>','<android.net.wifi.WifiStateMachine: void access$10000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.view.MotionEvent: float getToolMinor()>','<com.android.internal.telephony.sip.SipCommandInterface: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.widget.Editor: android.graphics.Rect access$1900(android.widget.Editor)>','<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.view.GLES20RecordingCanvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>','<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>','<android.app.ContextImpl: void <clinit>()>','<android.app.backup.FullBackup: void <init>()>','<android.webkit.HTML5VideoViewProxy: void access$1200(android.webkit.HTML5VideoViewProxy,int,int)>','<android.bluetooth.BluetoothInputStream: int available()>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDeviceManager$UsbHandler access$100(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void enableLocationUpdates()>','<com.android.server.am.ActivityManagerService: void trimApplications()>','<com.android.server.DevicePolicyManagerService: void access$100(com.android.server.DevicePolicyManagerService)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>','<com.android.internal.widget.LockPatternView$SavedState: boolean isInStealthMode()>','<com.android.server.NetworkManagementService: void removeSecondaryRoute(java.lang.String,android.net.RouteInfo)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getImei()>','<com.android.internal.telephony.ApnContext: void setApnSetting(com.android.internal.telephony.ApnSetting)>','<android.net.wifi.SupplicantState: boolean isHandshakeState(android.net.wifi.SupplicantState)>','<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()>','<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)>','<android.os.StrictMode$ViolationInfo: void <init>(java.lang.Throwable,int)>','<android.server.BluetoothService$RemoteService: void <init>(java.lang.String,android.os.ParcelUuid)>','<com.android.server.wm.ScreenRotationAnimation: boolean dismiss(android.view.SurfaceSession,long,float,int,int)>','<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>','<android.webkit.WebSettings$PluginState: android.webkit.WebSettings$PluginState valueOf(java.lang.String)>','<com.android.server.AlarmManagerService$AlarmHandler: void handleMessage(android.os.Message)>','<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>','<com.android.server.NsdService$NativeCallbackReceiver: void <init>(com.android.server.NsdService)>','<android.view.View$3: boolean apply(android.view.View)>','<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>','<android.text.method.NumberKeyListener: void <init>()>','<android.webkit.CallbackProxy: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)>','<android.opengl.GLLogWrapper: void glScalex(int,int,int)>','<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>','<com.android.internal.policy.impl.PhoneWindowManager: void updateRotation(boolean,boolean)>','<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>','<android.view.VolumePanel: void postMasterVolumeChanged(int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>','<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)>','<android.view.ViewDebug$5: void <init>(android.view.ViewDebug$ViewOperation,long[],java.util.concurrent.CountDownLatch)>','<android.net.wifi.SupplicantStateTracker: com.android.internal.util.State access$400(android.net.wifi.SupplicantStateTracker)>','<android.app.INotificationManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.IccRecords: java.lang.String getIMSI()>','<android.content.IIntentSender$Stub: android.os.IBinder asBinder()>','<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>','<android.net.wifi.IWifiManager$Stub$Proxy: void startWifi()>','<android.filterfw.geometry.Point: void set(float,float)>','<android.view.ViewGroup: void drawableStateChanged()>','<com.android.server.input.InputManagerService: int access$800(int,android.view.InputEvent,int,int,int,int,int)>','<com.android.internal.telephony.sip.SipPhone: void access$500(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.Connection)>','<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>','<android.webkit.WebView: void setInitialScale(int)>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)>','<android.view.MotionEvent$PointerCoords: void clear()>','<android.widget.RelativeLayout$LayoutParams: int access$402(android.widget.RelativeLayout$LayoutParams,int)>','<android.widget.Editor$ActionPopupWindow: int getVerticalLocalPosition(int)>','<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>','<com.android.uiautomator.core.UiDevice: boolean isScreenOn()>','<android.app.ContextImpl: void sendBroadcast(android.content.Intent,int)>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>','<android.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneOff()>','<com.android.internal.view.IInputContext$Stub$Proxy: void performEditorAction(int)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIds(android.content.ComponentName)>','<android.preference.PreferenceManager: android.content.Context getContext()>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: byte[] getByteArray()>','<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>','<android.filterpacks.videosink.MediaRecorderStopException: void <init>()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesReceived(int)>','<com.android.server.wm.WindowManagerService: void moveAppTokensToTop(java.util.List)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean enableNetwork(int,boolean)>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.LocationManagerService$LpCapabilityComparator: boolean equals(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>','<android.content.pm.IPackageInstallObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.bluetooth.BluetoothDeviceProfileState: void access$5500(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>','<android.os.StrictMode$LogStackTrace: void <init>(android.os.StrictMode$1)>','<android.view.IWindowManager$Stub$Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)>','<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.internal.os.BatteryStatsImpl$SamplingCounter: void <init>(java.util.ArrayList)>','<android.widget.PopupWindow: void <clinit>()>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailAlphaTag()>','<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>','<android.widget.AbsListView: int pointToPosition(int,int)>','<android.os.RemoteCallbackList: int beginBroadcast()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)>','<android.media.AudioService$ScoClient: int totalCount()>','<android.view.View$CheckForLongPress: void rememberWindowAttachCount()>','<android.content.pm.ManifestDigest: boolean equals(java.lang.Object)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: boolean processMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>','<android.view.WindowOrientationListener$SensorEventListenerImpl: void onSensorChanged(android.hardware.SensorEvent)>','<android.net.wifi.WifiApConfigStore: void access$300(android.net.wifi.WifiApConfigStore,com.android.internal.util.IState)>','<android.hardware.Camera$Parameters: void removeGpsData()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>','<com.android.server.PowerManagerService: android.content.ContentQueryMap access$1200(com.android.server.PowerManagerService)>','<android.filterfw.core.FilterFactory: void addFilterLibrary(java.lang.String)>','<android.content.SyncManager$ActiveSyncContext: java.lang.String toString()>','<android.media.AudioManager: int getStreamVolume(int)>','<android.media.IAudioService$Stub$Proxy: boolean isBluetoothScoOn()>','<android.webkit.JWebCoreJavaBridge: void removeActiveWebView(android.webkit.WebViewClassic)>','<com.android.internal.util.FileRotator: void readMatching(com.android.internal.util.FileRotator$Reader,long,long)>','<android.renderscript.ProgramStore$BlendDstFunc: void <clinit>()>','<android.webkit.ZoomManager: boolean exceedsMinScaleIncrement(float,float)>','<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.app.IActivityManager$ContentProviderHolder: void <clinit>()>','<android.view.MotionEvent: android.view.MotionEvent createFromParcelBody(android.os.Parcel)>','<android.preference.PreferenceScreen: void bind(android.widget.ListView)>','<android.net.DhcpStateMachine$DhcpAction: android.net.DhcpStateMachine$DhcpAction valueOf(java.lang.String)>','<android.net.wifi.WifiStateMachine$SoftApStartedState: void enter()>','<com.android.vcard.VCardUtils: boolean areAllEmpty(java.lang.String[])>','<com.android.internal.telephony.IccCardStatus: void setImsSubscriptionAppIndex(int)>','<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()>','<com.android.internal.telephony.IccRecords: void setVoiceCallForwardingFlag(int,boolean)>','<android.content.SyncStorageEngine: void setBackoff(android.accounts.Account,int,java.lang.String,long,long)>','<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>','<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>','<android.net.MobileDataStateTracker$1: void <clinit>()>','<android.database.DatabaseUtils$InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>','<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region$Op)>','<android.database.sqlite.SQLiteConnection$OperationLog: void <init>(android.database.sqlite.SQLiteConnection$1)>','<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>','<android.nfc.INdefPushCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>','<android.media.TimedText$Font: void <init>(int,java.lang.String)>','<com.android.server.Watchdog: void processStarted(java.lang.String,int)>','<android.inputmethodservice.SoftInputWindow: void setToken(android.os.IBinder)>','<android.server.BluetoothEventLoop: void <init>(android.content.Context,android.bluetooth.BluetoothAdapter,android.server.BluetoothService,android.server.BluetoothAdapterStateMachine)>','<android.app.IInstrumentationWatcher$Stub$Proxy: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>','<android.net.wifi.WifiStateMachine$SoftApStartedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.view.WindowOrientationListener: void disable()>','<android.os.Parcel: void readBooleanArray(boolean[])>','<android.telephony.SmsCbLocation: void <init>(java.lang.String,int,int)>','<android.net.NetworkIdentity: void <init>(int,int,java.lang.String,java.lang.String,boolean)>','<android.graphics.drawable.InsetDrawable: int getOpacity()>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$802(com.android.internal.policy.impl.KeyguardUpdateMonitor,java.lang.CharSequence)>','<android.net.InterfaceConfiguration: java.lang.String access$002(android.net.InterfaceConfiguration,java.lang.String)>','<android.provider.ContactsContract$Profile: void <clinit>()>','<com.android.internal.policy.impl.KeyguardViewManager: void <clinit>()>','<android.content.res.TypedArray: int getInt(int,int)>','<android.view.accessibility.AccessibilityNodeInfo$1: android.view.accessibility.AccessibilityNodeInfo createFromParcel(android.os.Parcel)>','<com.android.server.NsdService: java.util.concurrent.CountDownLatch access$2600(com.android.server.NsdService)>','<android.os.UEventObserver: void finalize()>','<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>','<android.app.ActivityThread$ApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>','<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>','<com.android.internal.view.menu.ActionMenuItem: boolean hasSubMenu()>','<com.android.internal.view.menu.BaseMenuPresenter: boolean flagActionItems()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource getCountryCodeSource()>','<com.android.internal.widget.LockPatternUtils: boolean isEmergencyCallEnabledWhileSimLocked()>','<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>','<android.webkit.Plugin$DefaultClickHandler: void handleClickEvent(android.content.Context)>','<android.database.sqlite.SQLiteQueryBuilder: void <clinit>()>','<android.os.Debug: int setGlobalAllocationLimit(int)>','<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>','<android.animation.AnimatorSet: void end()>','<android.content.Loader: void registerListener(int,android.content.Loader$OnLoadCompleteListener)>','<android.view.WindowManagerImpl$CompatModeWrapper: void removeView(android.view.View)>','<android.telephony.ServiceState: boolean getIsManualSelection()>','<com.android.internal.telephony.sip.SipPhoneBase: void sendUssdResponse(java.lang.String)>','<android.webkit.WebStorage$Origin: java.lang.String getOrigin()>','<android.app.ContextImpl$5: void <init>()>','<android.net.wifi.p2p.WifiP2pInfo$1: android.net.wifi.p2p.WifiP2pInfo[] newArray(int)>','<android.app.backup.BackupManager: void dataChanged(java.lang.String)>','<android.widget.ListView: android.view.View findViewTraversal(int)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>','<android.os.HandlerThread: void <init>(java.lang.String)>','<android.view.View: boolean performClick()>','<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void <clinit>()>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForDataConnectionDetached(android.os.Handler)>','<android.server.BluetoothService: boolean cancelBondProcess(java.lang.String)>','<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<android.location.ILocationManager$Stub$Proxy: void removeUpdates(android.location.ILocationListener)>','<android.view.ViewGroup: android.view.View getFocusedChild()>','<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,boolean,int)>','<android.filterfw.core.VertexFrame: void releaseNativeAllocation()>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$1202(com.android.server.wm.WindowManagerService$LayoutFields,boolean)>','<com.android.ex.variablespeed.EngineParameters: float getWindowOverlapDuration()>','<android.location.ILocationProvider$Stub$Proxy: void removeListener(int)>','<android.widget.LinearLayout: void drawDividersVertical(android.graphics.Canvas)>','<android.os.Environment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)>','<com.android.internal.telephony.RIL: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>','<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>','<android.content.pm.IPackageStatsObserver$Stub: android.content.pm.IPackageStatsObserver asInterface(android.os.IBinder)>','<android.widget.LinearLayout: float getWeightSum()>','<com.android.internal.view.IInputMethod$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)>','<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>','<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>','<android.app.LoadedApk: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)>','<com.android.internal.telephony.CallManager: void unregisterForEcmTimerReset(android.os.Handler)>','<android.server.BluetoothService: void finishDisable()>','<android.widget.ImageView: void onMeasure(int,int)>','<android.animation.AnimatorSet$DependencyListener: void onAnimationStart(android.animation.Animator)>','<android.preference.Preference: long getId()>','<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>','<android.widget.Scroller: int getFinalX()>','<android.view.ViewDebug$HierarchyTraceType: android.view.ViewDebug$HierarchyTraceType[] values()>','<android.view.GLES20RecordingCanvas: int end(int)>','<android.widget.HorizontalScrollView: boolean isFillViewport()>','<android.database.CursorWindow: int getNumRows()>','<com.android.internal.telephony.BaseCommands: void unregisterForIccRefresh(android.os.Handler)>','<android.view.View: int getRightPaddingOffset()>','<android.telephony.SignalStrength: int hashCode()>','<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.CellLocation getCellLocation()>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>','<android.location.Address: boolean access$1300(android.location.Address)>','<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>','<android.net.TrafficStats: long getMobileTxBytes()>','<com.android.server.wm.WindowState: java.lang.String makeInputChannelName()>','<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWaitChar()>','<com.android.internal.policy.impl.GlobalActions: boolean access$102(com.android.internal.policy.impl.GlobalActions,boolean)>','<android.bluetooth.BluetoothSocket: void <init>(int,int,boolean,boolean,android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid)>','<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>','<android.view.InputDevice: java.lang.String toString()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: boolean onLongPress()>','<android.graphics.drawable.LevelListDrawable: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1)>','<android.media.AudioService: void startBluetoothSco(android.os.IBinder)>','<android.bluetooth.BluetoothDeviceProfileState: android.server.BluetoothService access$3700(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.server.InputMethodManagerService$MethodCallback: void finishedEvent(int,boolean)>','<android.net.nsd.INsdManager$Stub: void <init>()>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int nextSpanTransition(int,int,java.lang.Class)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean needsOtaServiceProvisioning()>','<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>','<android.net.SntpClient: long getNtpTime()>','<com.android.server.MountService: void setUsbMassStorageEnabled(boolean)>','<android.ddm.DdmHandleProfiling: void register()>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>','<android.view.ScaleGestureDetector: float getPreviousSpan()>','<android.webkit.CacheManager: void init(android.content.Context)>','<android.text.method.LinkMovementMethod: void <clinit>()>','<com.android.server.location.PassiveProvider: void removeListener(int)>','<com.android.internal.telephony.cdma.RuimFileHandler: void <init>(com.android.internal.telephony.IccCard,java.lang.String,com.android.internal.telephony.CommandsInterface)>','<com.android.server.EventLogTags: void writeBackupDataChanged(java.lang.String)>','<android.view.WindowOrientationListener$SensorEventListenerImpl: void onAccuracyChanged(android.hardware.Sensor,int)>','<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>','<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<android.view.MotionEvent: android.view.MotionEvent copy()>','<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>','<com.android.server.NetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>','<android.view.VolumePanel: void postMasterMuteChanged(int)>','<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean flagActionItems()>','<android.os.AsyncTask$SerialExecutor$1: void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable)>','<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>','<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>','<android.net.wifi.p2p.WifiP2pManager$Channel: void access$200(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceResponse)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setFromCodeScheme(int)>','<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>','<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean equals(java.lang.Object)>','<android.content.pm.ParceledListSlice: boolean isLastSlice()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int disableApnType(java.lang.String)>','<android.bluetooth.BluetoothClass: int describeContents()>','<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>','<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>','<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.SMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>','<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)>','<android.text.method.CharacterPickerDialog$OptionsAdapter: long getItemId(int)>','<com.android.internal.view.menu.MenuBuilder: void clearAll()>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.AlarmManagerService: android.app.PendingIntent access$1900(com.android.server.AlarmManagerService)>','<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>','<com.android.internal.telephony.IIccPhoneBook$Stub: void <init>()>','<android.net.RouteInfo: boolean isHostRoute()>','<android.database.sqlite.SQLiteConnection$PreparedStatementCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>','<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>','<com.android.internal.database.SortCursor: int access$102(com.android.internal.database.SortCursor,int)>','<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcast(int)>','<android.graphics.Point: void <init>(android.graphics.Point)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void access$700(com.android.internal.policy.impl.KeyguardStatusViewManager,int,java.lang.CharSequence)>','<android.inputmethodservice.SoftInputWindow: void onWindowFocusChanged(boolean)>','<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)>','<android.app.Notification$Builder: java.lang.CharSequence access$400(android.app.Notification$Builder)>','<android.view.ViewRootImpl: void dispatchGetNewSurface()>','<com.android.server.AppWidgetServiceImpl$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.text.BoringLayout$Metrics: java.lang.String toString()>','<com.android.internal.telephony.BaseCommands: void unregisterForCdmaOtaProvision(android.os.Handler)>','<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>','<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>','<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakEverChosen()>','<android.view.IWindowSession$Stub$Proxy: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String)>','<android.net.sip.SipAudioCall$1: void onCallBusy(android.net.sip.SipSession)>','<android.provider.ContactsContract$Authorization: void <init>()>','<android.animation.ValueAnimator: long getFrameDelay()>','<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String)>','<com.android.internal.telephony.RIL: void getCdmaBroadcastConfig(android.os.Message)>','<com.android.server.WifiService: int access$3200(com.android.server.WifiService)>','<com.android.internal.os.ProcessStats: void update()>','<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()>','<android.app.SearchManager: void onCancel(android.content.DialogInterface)>','<android.hardware.usb.UsbEndpoint: void <clinit>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,boolean)>','<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>','<android.filterfw.core.SimpleFrame: android.filterfw.core.SimpleFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)>','<android.app.backup.BackupDataInput: void skipEntityData()>','<com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>','<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult createCacheFile(java.lang.String,int,android.net.http.Headers,java.lang.String,boolean)>','<com.android.server.wm.DimAnimator: boolean updateSurface(boolean,long,boolean)>','<android.text.MeasuredText: int breakText(int,boolean,float)>','<android.webkit.WebSettingsClassic: void syncSettingsAndCreateHandler(android.webkit.BrowserFrame)>','<android.view.View: android.view.View$ListenerInfo getListenerInfo()>','<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>','<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>','<android.os.Bundle: void unparcel()>','<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.internal.telephony.PhoneProxy: void enableLocationUpdates()>','<android.os.PerformanceCollector: void <init>()>','<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>','<android.webkit.WebSettingsClassic: boolean getBlockNetworkImage()>','<com.android.server.LocationManagerService: java.lang.String access$2100(com.android.server.LocationManagerService)>','<android.webkit.WebView: int access$1700(android.webkit.WebView)>','<android.media.RemoteControlClient: android.os.Bundle access$702(android.media.RemoteControlClient,android.os.Bundle)>','<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>','<com.android.internal.telephony.sip.SipPhone: void notifyCallForwardingIndicator()>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>','<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>','<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>','<com.android.server.net.NetworkPolicyManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.Editor$ActionPopupWindow: int clipVertically(int)>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>','<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>','<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean canConstantState()>','<android.view.View: java.lang.String debugIndent(int)>','<android.widget.Editor: void onTouchEvent(android.view.MotionEvent)>','<android.media.RingtoneManager: android.database.Cursor getCursor()>','<android.app.ContextImpl: void unbindService(android.content.ServiceConnection)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int hashCode()>','<com.android.i18n.phonenumbers.RegexCache$LRUCache$1: void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean)>','<android.widget.AbsListView: int getRightPaddingOffset()>','<com.android.server.NotificationManagerService: void systemReady()>','<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getContentDescription()>','<android.view.textservice.SentenceSuggestionsInfo: void <clinit>()>','<com.android.internal.telephony.CommandException: void <init>(com.android.internal.telephony.CommandException$Error)>','<com.android.server.AlarmManagerService$ResultReceiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<android.app.KeyguardManager: android.app.KeyguardManager$KeyguardLock newKeyguardLock(java.lang.String)>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void onSomePackagesChanged()>','<com.android.internal.telephony.PhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>','<android.accounts.AccountManagerService$Session: java.lang.String toDebugString()>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Phone$State getState()>','<com.android.internal.widget.PointerLocationView: void onInputDeviceRemoved(int)>','<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()>','<com.android.internal.telephony.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>','<android.widget.SuggestionsAdapter: void setQueryRefinement(int)>','<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>','<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>','<com.android.server.NsdService: void setEnabled(boolean)>','<android.bluetooth.BluetoothHeadset: android.bluetooth.BluetoothProfile$ServiceListener access$100(android.bluetooth.BluetoothHeadset)>','<com.android.server.wm.WindowStateAnimator: void setAnimation(android.view.animation.Animation)>','<android.widget.TextView: int getCompoundPaddingEnd()>','<android.util.MathUtils: float exp(float)>','<com.android.server.wm.WindowState: boolean isPotentialDragTarget()>','<com.android.internal.telephony.sip.SipCommandInterface: void getVoiceRadioTechnology(android.os.Message)>','<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>','<android.app.WallpaperInfo: void <clinit>()>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)>','<com.android.internal.telephony.CallManager: java.util.List getForegroundCalls()>','<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>','<android.security.SystemKeyStore: byte[] generateNewKey(int,java.lang.String,java.lang.String)>','<android.app.Fragment: void performStop()>','<com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(int)>','<android.app.IAlarmManager$Stub$Proxy: void set(int,long,android.app.PendingIntent)>','<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>','<android.animation.AnimatorSet: void playTogether(java.util.Collection)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void cleanUpResourcesLI()>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int,boolean)>','<com.android.uiautomator.core.InteractionController$1: void <init>(com.android.uiautomator.core.InteractionController,int,int)>','<android.content.Loader: int getId()>','<android.bluetooth.BluetoothDevice: boolean removeBond()>','<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void createCopyFile()>','<android.net.http.RequestHandle: boolean isRedirectMax()>','<android.net.wifi.WifiStateTracker: boolean isDefaultRouteSet()>','<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>','<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>','<android.database.AbstractWindowedCursor: void closeWindow()>','<android.text.TextUtils: boolean doesNotNeedBidi(java.lang.CharSequence,int,int)>','<com.android.server.usb.UsbDeviceManager: android.os.UEventObserver access$700(com.android.server.usb.UsbDeviceManager)>','<android.os.Build: java.lang.String getRadioVersion()>','<android.os.RemoteCallback: void sendResult(android.os.Bundle)>','<android.preference.PreferenceScreen$SavedState$1: android.preference.PreferenceScreen$SavedState[] newArray(int)>','<android.animation.ArgbEvaluator: void <init>()>','<android.bluetooth.BluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>','<com.android.vcard.VCardParser_V21: void <init>()>','<android.accounts.AuthenticatorDescription: java.lang.String toString()>','<com.android.server.sip.SipHelper: java.lang.String getCallId(java.util.EventObject)>','<android.util.Base64$Encoder: void <init>(int,byte[])>','<android.widget.Editor$HandleView: boolean offsetHasBeenChanged()>','<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: android.view.AccessibilityIterators$ParagraphTextSegmentIterator getInstance()>','<android.view.View: void invalidateViewProperty(boolean,boolean)>','<android.widget.ZoomButtonsController: android.os.Handler access$100(android.widget.ZoomButtonsController)>','<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>','<com.android.server.NetworkManagementService: void removeInterfaceQuota(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: void lockNow()>','<android.view.IWindowManager$Stub$Proxy: void setAnimationScale(int,float)>','<android.webkit.BrowserFrame$2: void cancel()>','<android.webkit.WebViewCore$SaveViewStateRequest: void <init>(java.io.OutputStream,android.webkit.ValueCallback)>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void removeAccessibilityInteractionConnection(android.view.IWindow)>','<android.view.AccessibilityInteractionController$SomeArgs: void setPooled(boolean)>','<com.android.server.MountService$1$1: void run()>','<com.android.server.sip.SipService: void access$1700(com.android.server.sip.SipService,android.net.NetworkInfo)>','<android.os.INetworkManagementService$Stub$Proxy: void flushInterfaceDnsCache(java.lang.String)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostCopy(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>','<android.view.KeyEvent: int getMetaState()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostInstall(int,int)>','<com.android.server.wm.WindowManagerService: boolean getWindowFrame(android.os.IBinder,android.graphics.Rect)>','<android.webkit.ZoomManager: void onSizeChanged(int,int,int,int)>','<android.os.Looper: int postSyncBarrier()>','<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)>','<android.widget.SearchView: boolean access$1500(android.widget.SearchView,android.view.View,int,android.view.KeyEvent)>','<android.webkit.WebSettingsClassic: int access$500()>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$9000(android.bluetooth.BluetoothDeviceProfileState)>','<android.os.BatteryStats: void <init>()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$1: void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)>','<android.animation.Animator: void setupEndValues()>','<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int,int,int,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>','<com.android.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>','<com.android.internal.telephony.gsm.SpnOverride: boolean containsCarrier(java.lang.String)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setProtocol(java.lang.String)>','<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)>','<android.content.ContentService: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>','<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)>','<android.view.ViewTreeObserver: boolean hasComputeInternalInsetsListeners()>','<android.view.KeyCharacterMap: int describeContents()>','<android.os.MessageQueue: void quit()>','<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>','<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)>','<android.app.ActivityThread: void handleLowMemory()>','<android.text.Layout$Ellipsizer: int length()>','<com.android.server.AlarmManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>','<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>','<android.os.WorkSource: boolean remove(android.os.WorkSource)>','<android.hardware.Camera$Parameters: void getPreviewFpsRange(int[])>','<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>','<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.inputmethodservice.KeyboardView$1: void <init>(android.inputmethodservice.KeyboardView)>','<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>','<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>','<android.nfc.INfcTag$Stub$Proxy: boolean getExtendedLengthApdusSupported()>','<android.net.wifi.SupplicantStateTracker: int access$008(android.net.wifi.SupplicantStateTracker)>','<android.bluetooth.BluetoothPbap$1: void <init>(android.bluetooth.BluetoothPbap)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<android.content.res.Resources: android.graphics.Movie getMovie(int)>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumSymbols(android.content.ComponentName)>','<android.app.Instrumentation: void init(android.app.ActivityThread,android.content.Context,android.content.Context,android.content.ComponentName,android.app.IInstrumentationWatcher)>','<android.widget.CursorAdapter$ChangeObserver: void onChange(boolean)>','<android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$402(android.view.View$ListenerInfo,android.view.View$OnGenericMotionListener)>','<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPassword(byte[],int)>','<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>','<android.net.DhcpInfoInternal: void updateFromDhcpRequest(android.net.DhcpInfoInternal)>','<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>','<android.accounts.AccountManagerResponse$1: android.accounts.AccountManagerResponse[] newArray(int)>','<android.server.BluetoothPanProfileHandler: java.util.List getConnectedPanDevices()>','<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(java.util.ArrayList,java.util.HashMap)>','<android.widget.RemoteViews$SetDrawableParameters: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>','<android.content.ContentProviderResult: void <clinit>()>','<com.android.internal.widget.WaveView: void onSizeChanged(int,int,int,int)>','<android.webkit.HTML5VideoViewProxy: void play(java.lang.String,int,int)>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothEventLoop getBluetoothEventLoop()>','<com.android.internal.telephony.SMSDispatcher: void handleNotInService(int,android.app.PendingIntent)>','<android.webkit.WebViewClassic: void onPageStarted(java.lang.String)>','<com.android.server.am.UsageStatsService$TimeStats: void add(int)>','<android.media.AudioManager: boolean isSilentMode()>','<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>','<android.net.wifi.WifiStateMachine: void access$6300(android.net.wifi.WifiStateMachine,java.lang.String)>','<android.net.wifi.WifiManager: boolean disconnect()>','<android.widget.MediaController: void setAnchorView(android.view.View)>','<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>','<android.widget.RelativeLayout: void setIgnoreGravity(int)>','<android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>','<com.android.internal.util.AsyncChannel: void sendMessage(int)>','<com.android.internal.telephony.cat.CatLog: void d(java.lang.Object,java.lang.String)>','<android.widget.SuggestionsAdapter: void notifyDataSetInvalidated()>','<android.net.wifi.p2p.WifiP2pService: java.lang.Boolean access$4500()>','<android.content.SyncManager$9: void onStatusChanged(int)>','<android.view.View: void outputDirtyFlags(java.lang.String,boolean,int)>','<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>','<android.webkit.WebView: boolean access$401(android.webkit.WebView,int,android.os.Bundle)>','<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>','<android.renderscript.BaseObj: void finalize()>','<android.ddm.DdmHandleAppName: void register()>','<android.content.IntentFilter: void <init>(java.lang.String)>','<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>','<android.webkit.WebViewClassic: void setNewPicture(android.webkit.WebViewCore$DrawData,boolean)>','<com.android.server.AlarmManagerService$AlarmThread: void run()>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockAcquiredLocked()>','<android.filterfw.core.Frame: boolean isReusable()>','<android.widget.OverScroller: int getCurrX()>','<com.android.server.AppWidgetService: void systemReady(boolean)>','<android.graphics.Rect: void sort()>','<com.android.internal.telephony.IccCard: void finalize()>','<android.content.IClipboard$Stub$Proxy: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>','<android.view.View: int getResolvedTextAlignment()>','<android.bluetooth.BluetoothDeviceProfileState$PbapServiceListener: void <init>(android.bluetooth.BluetoothDeviceProfileState)>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: int getState()>','<com.android.internal.location.DummyLocationProvider: boolean supportsAltitude()>','<android.util.SparseArray: int indexOfValue(java.lang.Object)>','<android.media.AudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.preference.PreferenceGroupAdapter: boolean hasStableIds()>','<android.webkit.WebSettingsClassic: void setCursiveFontFamily(java.lang.String)>','<android.graphics.Point: void <clinit>()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeLeft()>','<android.net.NetworkInfo: void setFailover(boolean)>','<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>','<com.android.vcard.VCardParserImpl_V40: java.lang.String maybeUnescapeText(java.lang.String)>','<com.android.internal.telephony.gsm.SIMRecords$Get_Spn_Fsm_State: com.android.internal.telephony.gsm.SIMRecords$Get_Spn_Fsm_State valueOf(java.lang.String)>','<android.widget.Editor$SelectionModifierCursorController: void hide()>','<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>','<android.app.LoaderManagerImpl: void destroyLoader(int)>','<android.content.Loader: boolean isAbandoned()>','<android.widget.AbsListView$MultiChoiceModeWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>','<android.text.util.Linkify$2: void <init>()>','<android.os.Parcel: void readStringList(java.util.List)>','<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>','<android.renderscript.ProgramRaster: void <init>(int,android.renderscript.RenderScript)>','<com.android.internal.telephony.PhoneProxy: void setOutgoingCallerIdDisplay(int,android.os.Message)>','<android.view.GLES20Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>','<android.widget.RemoteViews$SetOnClickFillInIntent$1: void <init>(android.widget.RemoteViews$SetOnClickFillInIntent,android.widget.RemoteViews$OnClickHandler)>','<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState valueOf(java.lang.String)>','<com.android.server.am.BatteryStatsService: void <init>(java.lang.String)>','<android.accounts.AccountManager: void access$300(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>','<com.android.internal.telephony.IccCard: void unregisterForRuimReady(android.os.Handler)>','<android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>','<android.view.inputmethod.InputBinding$1: android.view.inputmethod.InputBinding[] newArray(int)>','<com.android.internal.telephony.IccCard: com.android.internal.telephony.IccCard$State getIccCardState()>','<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence)>','<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>','<com.android.server.PowerManagerService: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>','<com.android.internal.widget.ActionBarOverlayLayout: void <clinit>()>','<android.webkit.WebStorageClassic: java.util.Collection getOriginsSync()>','<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>','<android.media.MediaFile: boolean isAudioFileType(int)>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.IconId retrieveIconId(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void stop()>','<com.android.server.location.GpsLocationProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>','<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)>','<android.os.storage.StorageEventListener: void <init>()>','<android.inputmethodservice.Keyboard: void setVerticalGap(int)>','<com.android.uiautomator.core.UiDevice: boolean pressDPadUp()>','<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRadioOffOrNotAvailable()>','<com.android.server.wm.WindowManagerService: void logSurface(com.android.server.wm.WindowState,java.lang.String,java.lang.RuntimeException)>','<android.view.GLES20RenderLayer: void <init>(int,int,boolean)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void unregisterForSignalInfo(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl: int startAddingCpuLocked()>','<com.android.server.location.GpsLocationProvider: void access$800(com.android.server.location.GpsLocationProvider,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void access$1300(com.android.server.net.NetworkPolicyManagerService)>','<android.view.IWindowManager$Stub$Proxy: boolean hasNavigationBar()>','<android.widget.Filter$ResultsHandler: void <init>(android.widget.Filter,android.widget.Filter$1)>','<android.app.SearchableInfo$1: void <init>()>','<com.android.internal.widget.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int)>','<android.accessibilityservice.UiTestAutomationBridge$1: void <init>(android.accessibilityservice.UiTestAutomationBridge)>','<android.widget.ListView: int findMotionRow(int)>','<android.webkit.WebSettingsClassic: void setPageCacheCapacity(int)>','<android.text.StaticLayout: int getLineForVertical(int)>','<com.android.server.pm.PackageManagerService: void revokePermission(java.lang.String,java.lang.String)>','<android.view.ViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>','<android.webkit.WebViewClassic: int access$2700(android.webkit.WebViewClassic)>','<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>','<android.media.MediaRouter$UserRouteInfo: void setVolumeCallback(android.media.MediaRouter$VolumeCallback)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: boolean processMessage(android.os.Message)>','<com.android.server.wm.WindowManagerService: void setTransparentRegionWindow(com.android.server.wm.Session,android.view.IWindow,android.graphics.Region)>','<android.net.sip.SipAudioCall: boolean isInCall()>','<android.view.PointerIcon: int getStyle()>','<android.content.pm.PackageManager$NameNotFoundException: void <init>()>','<android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit[] values()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void <init>(com.android.server.am.UsageStatsService)>','<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,int[],int)>','<android.widget.Editor$SelectionModifierCursorController: boolean isSelectionStartDragged()>','<android.security.KeyChainException: void <init>()>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>','<com.android.server.AppWidgetServiceImpl$1: void onServiceDisconnected(android.content.ComponentName)>','<android.webkit.WebViewCore: android.os.Handler access$500()>','<android.content.IIntentReceiver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler: void handleMessage(android.os.Message)>','<android.os.RecoverySystem: void <init>()>','<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>','<android.text.SpanSet: void recycle()>','<android.net.INetworkStatsService$Stub: void <init>()>','<android.widget.TextView$CharWrapper: void <init>(char[],int,int)>','<android.location.Address: java.lang.String toString()>','<android.view.HardwareRenderer$Gl20Renderer: void <clinit>()>','<com.android.vcard.VCardUtils: java.lang.String toStringAsV30ParamValue(java.lang.String)>','<android.net.INetworkStatsSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>','<android.app.ActivityThread$ApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>','<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasNationalPrefixForParsing()>','<com.android.internal.widget.multiwaveview.Tweener: void <init>(android.animation.ObjectAnimator)>','<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>','<android.text.method.ArrowKeyMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>','<android.graphics.Canvas: void access$000(int)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean isRunningLocked()>','<com.android.server.NativeDaemonConnector: void <init>(com.android.server.INativeDaemonConnectorCallbacks,java.lang.String,int,java.lang.String,int)>','<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>','<com.android.server.pm.PackageManagerService: long access$2700(com.android.server.pm.PackageManagerService)>','<android.webkit.WebSettings$RenderPriority: android.webkit.WebSettings$RenderPriority valueOf(java.lang.String)>','<android.app.ContextImpl$33: java.lang.Object createService(android.app.ContextImpl)>','<com.android.internal.telephony.Call: boolean hasConnections()>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$4700(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.AbstractWindowedCursor: void <init>()>','<com.android.internal.view.menu.ListMenuItemView: void onMeasure(int,int)>','<com.android.server.pm.PackageManagerService: boolean access$1000(android.content.pm.ApplicationInfo)>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>','<android.os.Debug: long countInstancesOfClass(java.lang.Class)>','<android.graphics.Region: boolean equals(java.lang.Object)>','<android.bluetooth.BluetoothHeadset: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.media.MediaPlayer: android.os.Parcel newRequest()>','<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)>','<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putFloat(java.lang.String,float)>','<android.net.wifi.WifiInfo: void setMeteredHint(boolean)>','<com.android.server.am.ActivityStack$2: android.graphics.Bitmap getThumbnail(int)>','<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getClccLines()>','<android.provider.ContactsContract$StreamItems: void <clinit>()>','<com.android.server.ConnectivityService: java.lang.String access$1500(com.android.server.ConnectivityService)>','<android.provider.Telephony$Sms$Intents: void <init>()>','<com.android.internal.telephony.cat.ValueParser: int retrieveItemId(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>','<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence)>','<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)>','<android.net.http.AndroidHttpClient$CurlLogger: void <init>(android.net.http.AndroidHttpClient,android.net.http.AndroidHttpClient$1)>','<android.filterpacks.videosrc.MediaSource: boolean access$100(android.filterpacks.videosrc.MediaSource)>','<com.android.internal.view.menu.ActionMenuView: void <init>(android.content.Context)>','<android.provider.MediaStore$Audio$Genres$Members: android.net.Uri getContentUri(java.lang.String,long)>','<android.widget.TextView: void onResolvedLayoutDirectionReset()>','<android.os.Debug: void stopMethodTracing()>','<android.hardware.Camera: boolean access$400(android.hardware.Camera)>','<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>','<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>','<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.WebSettingsClassic: void setPrivateBrowsingEnabled(boolean)>','<android.webkit.WebViewClassic: android.graphics.drawable.Drawable access$2100(android.webkit.WebViewClassic)>','<android.app.IThumbnailReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)>','<android.webkit.Plugin: java.lang.String getPath()>','<com.android.server.input.InputManagerService$KeyboardLayoutDescriptor: java.lang.String format(java.lang.String,java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic$PrivateHandler: void <init>(android.webkit.WebViewClassic)>','<com.android.vcard.VCardParserImpl_V40: java.util.Set getKnownPropertyNameSet()>','<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>','<android.view.GLES20RecordingCanvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void enter()>','<android.animation.ValueAnimator: void setRepeatCount(int)>','<android.text.method.DateKeyListener: void <init>()>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>','<android.text.LoginFilter$PasswordFilterGMail: void <init>()>','<com.android.internal.telephony.RetryManager: void setRetryCount(int)>','<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>','<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>','<com.android.internal.telephony.DataConnectionTracker$Activity: com.android.internal.telephony.DataConnectionTracker$Activity[] values()>','<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>','<android.accounts.AccountManagerService: android.accounts.IAccountAuthenticatorCache access$1800(android.accounts.AccountManagerService)>','<com.android.server.usb.UsbDeviceManager: boolean access$1200(com.android.server.usb.UsbDeviceManager)>','<android.media.AudioService: void access$6500(android.media.AudioService,int,android.media.IRemoteVolumeObserver)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskReads()>','<android.app.ActivityManager$ProcessErrorStateInfo$1: void <init>()>','<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)>','<com.android.server.usb.UsbSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)>','<android.app.Activity: int getVolumeControlStream()>','<com.android.internal.telephony.sip.SipCommandInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>','<android.server.BluetoothInputProfileHandler: java.util.List lookupInputDevicesMatchingStates(int[])>','<com.android.server.DevicePolicyManagerService: void access$000(com.android.server.DevicePolicyManagerService)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<com.android.server.connectivity.Vpn: android.content.Context access$700(com.android.server.connectivity.Vpn)>','<com.android.server.NotificationManagerService$1: void onPanelRevealed()>','<android.content.pm.PermissionGroupInfo$1: android.content.pm.PermissionGroupInfo[] newArray(int)>','<android.server.BluetoothService: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>','<android.app.ContextImpl: android.content.res.Resources getResources()>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPin(java.lang.String,android.os.Message)>','<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void onConfigurationChanged(android.content.res.Configuration)>','<android.content.IntentFilter: java.lang.String getDataScheme(int)>','<android.content.ContentValues: void <init>(int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>','<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.net.IConnectivityManager$Stub: void <init>()>','<android.webkit.WebViewClassic: java.lang.String getTouchIconUrl()>','<android.graphics.drawable.GradientDrawable$1: void <clinit>()>','<android.net.http.Connection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>','<android.media.AudioManager: void unregisterAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)>','<com.android.internal.telephony.cat.CatResponseMessage: void setYesNo(boolean)>','<android.net.wifi.p2p.WifiP2pDeviceList: boolean isGroupOwner(java.lang.String)>','<android.net.wifi.WifiManager: int getFrequencyBand()>','<android.net.wifi.WifiNative: boolean startDriver()>','<com.android.server.wm.WindowManagerService: void removeWindowToken(android.os.IBinder)>','<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void log(java.lang.String)>','<android.webkit.WebViewCore$ViewState: void <init>()>','<android.inputmethodservice.InputMethodService: void updateCandidatesVisibility(boolean)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void onCloseSubMenu(com.android.internal.view.menu.SubMenuBuilder)>','<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>','<android.webkit.WebSettingsClassic: void setTextZoom(int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void chooseUpstreamType(boolean)>','<android.os.UEventObserver: int access$100(byte[])>','<android.media.IAudioService$Stub$Proxy: void unregisterMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.bluetooth.BluetoothDeviceProfileState$PbapServiceListener: void onServiceConnected()>','<android.view.ViewRootImpl: boolean isInTouchMode()>','<com.android.internal.telephony.sip.SipPhoneBase: boolean isDataConnectivityPossible()>','<com.android.internal.util.XmlUtils: java.util.HashMap readMapXml(java.io.InputStream)>','<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>','<com.android.server.location.GpsLocationProvider: boolean supportsAltitude()>','<android.os.Parcel: int dataAvail()>','<android.webkit.PluginFullScreenHolder$CustomFrameLayout: boolean onKeyDown(int,android.view.KeyEvent)>','<android.database.CursorWindow: float getFloat(int,int)>','<android.net.wifi.WpsResult: void <init>()>','<com.android.server.DevicePolicyManagerService$ActiveAdmin: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$000(com.android.internal.telephony.gsm.GsmServiceStateTracker)>','<com.android.internal.util.ArrayUtils: java.lang.Object[] removeElement(java.lang.Class,java.lang.Object[],java.lang.Object)>','<android.net.http.CharArrayBuffers: void <init>()>','<android.app.ActivityThread: void handleActivityConfigurationChanged(android.os.IBinder)>','<android.webkit.WebStorageClassic: android.webkit.WebStorageClassic getInstance()>','<android.net.wifi.WifiWatchdogStateMachine$4: void <clinit>()>','<android.view.GestureDetector: android.view.MotionEvent access$000(android.view.GestureDetector)>','<android.net.WebAddress: java.lang.String getScheme()>','<android.test.mock.MockContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>','<android.net.Uri$HierarchicalUri: void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1)>','<android.hardware.SensorManager$SensorEventPool: void returnToPool(android.hardware.SensorEvent)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$3: void onClick(android.content.DialogInterface,int)>','<android.view.InputDevice$MotionRange: float getFuzz()>','<com.android.internal.telephony.cat.DTTZResponseData: void format(java.io.ByteArrayOutputStream)>','<android.webkit.FindActionModeCallback: void updateMatchCount(int,int,boolean)>','<android.graphics.Matrix$1: void setSinCos(float,float,float,float)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiInfo access$1302(android.net.wifi.WifiWatchdogStateMachine,android.net.wifi.WifiInfo)>','<android.filterfw.core.FieldPort: boolean hasFrame()>','<android.util.MathUtils: float dist(float,float,float,float,float,float)>','<android.speech.tts.TextToSpeech$EngineInfo: void <init>()>','<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>','<android.app.ActivityManager$RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothAdapterStateMachine: void access$7000(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.view.ViewRootImpl$ViewRootHandler: void handleMessage(android.os.Message)>','<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>','<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation createFromParcel(android.os.Parcel)>','<com.android.internal.policy.impl.PhoneWindowManager: void stopScreenSaver()>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void notify(int)>','<android.filterfw.core.SerializedFrame: android.filterfw.core.SerializedFrame wrapObject(java.lang.Object,android.filterfw.core.FrameManager)>','<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>','<android.text.Layout: int getLineAscent(int)>','<com.android.internal.database.SortCursor: int access$002(com.android.internal.database.SortCursor,int)>','<com.android.server.pm.Settings: void updateSharedUserPermsLPw(com.android.server.pm.PackageSetting,int[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.telephony.BaseCommands: void unSetOnNewGsmSms(android.os.Handler)>','<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>','<android.app.AlertDialog$Builder: android.app.AlertDialog show()>','<android.net.sip.SipAudioCall$1: void onRinging(android.net.sip.SipSession,android.net.sip.SipProfile,java.lang.String)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)>','<android.provider.ContactsContract$Groups$EntityIteratorImpl: void <init>(android.database.Cursor)>','<android.widget.CursorAdapter$MyDataSetObserver: void onChanged()>','<android.webkit.WebViewClient: void <init>()>','<android.view.GLES20Canvas: void terminateCaches()>','<com.android.server.MountService: void <init>(android.content.Context)>','<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)>','<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferInitialSize()>','<android.location.ILocationProvider$Stub$Proxy: boolean meetsCriteria(android.location.Criteria)>','<android.webkit.WebViewClassic: void setOverScrollMode(int)>','<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: boolean processMessage(android.os.Message)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: void <init>(com.android.server.NetworkManagementService,com.android.server.NetworkManagementService$1)>','<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>','<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)>','<android.database.sqlite.SQLiteDirectCursorDriver: void cursorDeactivated()>','<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean isTitleOptional()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>','<android.app.LoadedApk$ServiceDispatcher$ConnectionInfo: void <init>(android.app.LoadedApk$1)>','<android.webkit.WebViewCore: void access$4200(android.webkit.WebViewCore,int,boolean[],int)>','<android.app.Activity$NonConfigurationInstances: void <init>()>','<android.webkit.WebIconDatabase: void removeAllIcons()>','<android.content.pm.PackageParser: int getParseError()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setLayer(int)>','<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>','<android.media.RemoteControlClient$1: void setCurrentClientGenerationId(int)>','<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>','<android.net.wifi.WifiNative: boolean setP2pPowerSave(java.lang.String,boolean)>','<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.PhoneBase)>','<com.android.internal.telephony.cat.ValueObject: void <init>()>','<com.android.internal.util.FileRotator$FileInfo: boolean parse(java.lang.String)>','<android.widget.BaseAdapter: int getItemViewType(int)>','<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>','<android.webkit.WebViewCore: void sendMessage(int,int,int)>','<android.net.wifi.WifiStateMachine: void access$15000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)>','<android.database.DatabaseUtils$InsertHelper: void bindNull(int)>','<com.android.server.WifiService$LockList: boolean access$2400(com.android.server.WifiService$LockList)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void dispose()>','<android.view.GLES20RecordingCanvas$1: void onReleased(android.util.Poolable)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager$Data: void <init>(com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager,java.lang.CharSequence,int)>','<android.net.wifi.WifiManager: void <init>(android.net.wifi.IWifiManager,android.os.Handler)>','<android.content.SyncStorageEngine: void removeStatusChangeListener(android.content.ISyncStatusObserver)>','<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.app.Instrumentation: android.content.Context getContext()>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void queryAvailableBandMode(android.os.Message)>','<android.app.backup.IBackupManager$Stub$Proxy: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,java.lang.String[])>','<com.android.internal.telephony.IccCard: void broadcastIccStateChangedIntent(java.lang.String,java.lang.String)>','<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)>','<com.android.server.NativeDaemonConnector: boolean handleMessage(android.os.Message)>','<android.os.ICancellationSignal$Stub: android.os.ICancellationSignal asInterface(android.os.IBinder)>','<com.android.server.AppWidgetServiceImpl: void stopListening(int)>','<android.util.Pair: boolean equals(java.lang.Object)>','<android.graphics.Matrix: boolean preSkew(float,float)>','<android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)>','<android.app.FragmentManagerImpl$4: void run()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>','<android.app.ContextImpl$18: void <init>()>','<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>','<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>','<android.widget.RelativeLayout$LayoutParams: int access$300(android.widget.RelativeLayout$LayoutParams)>','<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()>','<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>','<android.speech.tts.TextToSpeech: boolean isSpeaking()>','<com.android.internal.widget.PointerLocationView$PointerState: float access$502(com.android.internal.widget.PointerLocationView$PointerState,float)>','<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>','<com.android.internal.telephony.IccCardApplication$AppState: void <clinit>()>','<com.android.internal.telephony.SmsResponse: void <init>(int,java.lang.String,int)>','<android.app.ActivityManager$ProcessErrorStateInfo: int describeContents()>','<android.graphics.Bitmap: int getHeight()>','<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>','<android.content.res.Resources: void flushLayoutCache()>','<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByViewIdInActiveWindow(int)>','<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesSent(int)>','<android.content.BroadcastReceiver$PendingResult: void <init>(int,java.lang.String,android.os.Bundle,int,boolean,boolean,android.os.IBinder)>','<android.widget.Scroller: int getStartY()>','<android.os.RecoverySystem: void rebootWipeCache(android.content.Context)>','<android.media.IRemoteControlDisplay$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.widget.ActionBarContainer: void onDraw(android.graphics.Canvas)>','<android.database.sqlite.SQLiteDatabase: void reopenReadWrite()>','<android.os.Debug: void dumpHprofDataDdms()>','<android.app.Activity: void setFeatureDrawableResource(int,int)>','<android.view.IWindowManager$Stub$Proxy: void disableKeyguard(android.os.IBinder,java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine: void access$4100(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.content.SyncManager: boolean access$2100(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCellLocationChanged(android.os.Bundle)>','<android.media.MediaRouter$RouteGroup: void memberStatusChanged(android.media.MediaRouter$RouteInfo,java.lang.CharSequence)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportFailedAttempt()>','<android.server.BluetoothAdapterProperties: boolean isEmpty()>','<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)>','<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>','<com.android.server.PowerManagerService: long timeSinceScreenOn()>','<android.provider.Telephony$Mms: void <init>()>','<com.android.internal.policy.impl.SimUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>','<android.widget.AbsListView: int getHeaderViewsCount()>','<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>','<com.android.server.wm.WindowManagerService: void setInsetsWindow(com.android.server.wm.Session,android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>','<com.android.internal.telephony.PhoneBase: boolean getUnitTestMode()>','<android.widget.MediaController: android.view.WindowManager access$400(android.widget.MediaController)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$300(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.internal.os.SamplingProfilerIntegration$2: void run()>','<com.android.internal.telephony.DataConnectionAc: void reqApnSetting()>','<com.android.internal.telephony.Connection: java.lang.String toString()>','<com.android.vcard.VCardParserImpl_V40: java.lang.String getVersionString()>','<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>','<android.media.IAudioFocusDispatcher$Stub: void <init>()>','<android.webkit.ZoomManager: void animateZoom(android.graphics.Canvas)>','<android.widget.RemoteViews$1: android.widget.RemoteViews[] newArray(int)>','<android.os.PatternMatcher: int getType()>','<android.webkit.WebSettingsClassic: void setAppCacheMaxSize(long)>','<android.view.ViewRootImpl$InvalidateOnAnimationRunnable: void run()>','<android.view.ViewPropertyAnimator$NameValuesHolder: void <init>(int,float,float)>','<com.android.server.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName)>','<android.bluetooth.BluetoothHealthAppConfiguration: void <init>(java.lang.String,int,int,int)>','<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>','<android.util.LruCache: int createCount()>','<com.android.vcard.VCardComposer: java.lang.String createOneEntry()>','<com.android.server.PowerManagerService$LockList: int reactivateScreenLocksLocked()>','<android.text.Layout$SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.bluetooth.BluetoothUuid: boolean isHandsfree(android.os.ParcelUuid)>','<android.view.ViewTreeObserver$InternalInsetsInfo: boolean equals(java.lang.Object)>','<android.view.MenuInflater$MenuState: android.view.ActionProvider access$000(android.view.MenuInflater$MenuState)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>','<com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>','<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>','<android.net.sip.SipSession$1: void onCallEnded(android.net.sip.ISipSession)>','<android.view.HardwareRenderer$GlRenderer: void initializeEgl()>','<android.app.ActivityManagerNative: boolean isSystemReady()>','<android.widget.RemoteViews$BitmapCache: void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter)>','<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>','<com.android.server.pm.ShutdownThread$2: void <init>()>','<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.LocationManagerService$ProximityAlert: boolean isInProximity(double,double,float)>','<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<android.graphics.Matrix: boolean equals(java.lang.Object)>','<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>','<android.location.Criteria: void setCostAllowed(boolean)>','<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>','<android.renderscript.ProgramStore: boolean isColorMaskAlphaEnabled()>','<com.android.internal.telephony.IccCardStatus: int getCdmaSubscriptionAppIndex()>','<android.view.Choreographer$1: android.view.Choreographer initialValue()>','<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>','<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>','<android.media.DecoderCapabilities$VideoDecoder: void <clinit>()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>','<android.provider.MediaStore$Audio: java.lang.String keyFor(java.lang.String)>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String access$400(android.net.sip.SimpleSessionDescription$Fields,java.lang.String,char)>','<android.app.Activity: boolean onSearchRequested()>','<android.filterfw.core.Scheduler: boolean finished()>','<android.security.KeyChain$KeyChainConnection: android.security.IKeyChainService getService()>','<android.text.style.SpellCheckSpan: void setSpellCheckInProgress(boolean)>','<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>','<com.android.internal.os.BatteryStatsImpl$Timer: void plug(long,long)>','<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)>','<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>','<com.android.server.wm.AppWindowAnimator: void setAnimation(android.view.animation.Animation,boolean)>','<com.android.internal.telephony.Call: long getEarliestCreateTime()>','<android.net.wifi.p2p.WifiP2pService: android.content.Context access$300(android.net.wifi.p2p.WifiP2pService)>','<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>','<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>','<android.net.wifi.WifiWatchdogStateMachine$DefaultState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.view.menu.MenuBuilder: int findItemIndex(int)>','<android.content.SyncAdaptersCache: android.content.SyncAdapterType parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>','<com.android.internal.telephony.sip.SipPhone: void sendDtmf(char)>','<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>','<com.android.internal.telephony.IccCard: void registerForNetworkLocked(android.os.Handler,int,java.lang.Object)>','<com.android.server.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin()>','<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForPsRestrictedEnabled(android.os.Handler)>','<android.os.storage.IMountService$Stub$Proxy: void finishMediaUpdate()>','<android.content.pm.IPackageManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.filterfw.core.OutputPort: boolean isReady()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>','<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityAction(int,long,int,android.os.Bundle)>','<android.view.KeyCharacterMap$1: android.view.KeyCharacterMap[] newArray(int)>','<android.view.GLES20Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>','<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>','<android.graphics.Path: void rLineTo(float,float)>','<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>','<com.android.server.am.BatteryStatsService: void noteWifiRunning(android.os.WorkSource)>','<android.view.LayoutInflater: void <clinit>()>','<android.emoji.EmojiFactory: int getMaximumAndroidPua()>','<android.widget.TextView$Marquee: float getGhostOffset()>','<android.net.wifi.WifiStateMachine: void access$11000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.net.LocalSocketImpl: void close()>','<android.view.ViewRootImpl: void scheduleTraversals()>','<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()>','<android.webkit.Plugin: void setDescription(java.lang.String)>','<android.webkit.ZoomManager: boolean zoomOut()>','<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()>','<android.app.Instrumentation: void waitForIdleSync()>','<com.android.server.am.ActivityRecord: long getKeyDispatchingTimeout()>','<com.android.server.am.AppErrorDialog: com.android.server.am.ProcessRecord access$000(com.android.server.am.AppErrorDialog)>','<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>','<android.app.LoadedApk$ReceiverDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)>','<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean isBluetoothDock(java.lang.String)>','<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)>','<com.android.server.ConnectivityService$FeatureUser: void unlinkDeathRecipient()>','<com.android.internal.policy.impl.GlobalActions: boolean access$100(com.android.internal.policy.impl.GlobalActions)>','<android.content.ContentValues: boolean containsKey(java.lang.String)>','<com.android.server.wm.WindowManagerService: void dumpWindowsLocked()>','<android.accounts.AccountManagerResponse: void onResult(android.os.Bundle)>','<android.media.MediaRouter$RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>','<android.text.method.BaseMovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: boolean isDisconnected()>','<android.os.StrictMode: void onVmPolicyViolation(java.lang.String,java.lang.Throwable)>','<android.webkit.WebView: void clearHistory()>','<com.android.internal.telephony.SmsRawData: int describeContents()>','<com.android.server.InputMethodManagerService$7: void onClick(android.content.DialogInterface,int)>','<android.webkit.ZoomManager: float computeReadingLevelScale(float)>','<com.android.internal.telephony.AdnRecord: void appendExtRecord(byte[])>','<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>','<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>','<android.os.Parcel: float readFloat()>','<android.app.LoaderManagerImpl$LoaderInfo: void destroy()>','<android.server.BluetoothDeviceProperties: boolean isEmpty()>','<android.opengl.Matrix: void <init>()>','<com.android.internal.policy.impl.KeyguardViewBase$1: void setAlpha(int)>','<com.android.internal.telephony.cat.CatCmdMessage$1: void <init>()>','<com.android.internal.app.AlertController$AlertParams$4: void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController)>','<android.view.animation.Transformation: void <clinit>()>','<android.server.BluetoothBondState: void readAutoPairingData()>','<android.app.ContextImpl: int access$000()>','<com.android.server.LocationManagerService: java.lang.String access$2102(com.android.server.LocationManagerService,java.lang.String)>','<android.view.inputmethod.InputBinding$1: void <init>()>','<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>','<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int,int)>','<com.android.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>','<android.view.ViewRootImpl: void checkThread()>','<com.android.internal.widget.TransportControlView: com.android.internal.widget.LockScreenWidgetCallback access$700(com.android.internal.widget.TransportControlView)>','<android.os.IPermissionController$Stub$Proxy: void <init>(android.os.IBinder)>','<android.speech.tts.ITextToSpeechCallback$Stub: android.os.IBinder asBinder()>','<android.webkit.WebViewClassic$6: void <init>(android.webkit.WebViewClassic,java.io.File,android.graphics.Picture,java.io.File)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector enabled(boolean)>','<android.location.ILocationManager$Stub$Proxy: boolean addGpsStatusListener(android.location.IGpsStatusListener)>','<com.android.internal.telephony.cdma.CdmaCall: boolean isMultiparty()>','<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>','<com.android.internal.policy.impl.KeyguardViewMediator: void setKeyguardEnabled(boolean)>','<android.widget.ListPopupWindow$PopupTouchInterceptor: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1)>','<com.android.internal.policy.impl.LockPatternKeyguardView$Mode: com.android.internal.policy.impl.LockPatternKeyguardView$Mode valueOf(java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean isStorageLow()>','<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: byte[] access$100(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<android.database.sqlite.SQLiteGlobal: int releaseMemory()>','<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>','<android.content.pm.IPackageManager$Stub$Proxy: int checkSignatures(java.lang.String,java.lang.String)>','<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>','<com.android.server.LocationManagerService$2: void <init>(com.android.server.LocationManagerService)>','<android.app.backup.FullBackupDataOutput: void <init>(android.os.ParcelFileDescriptor)>','<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addExcessiveWake(long,long)>','<android.graphics.Movie: void finalize()>','<android.media.MediaPlayer: void access$300(android.media.MediaPlayer,boolean)>','<com.android.server.usb.UsbHostManager: void systemReady()>','<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>','<com.android.internal.telephony.ApnContext: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.webkit.WebViewClassic$InvokeListBox: void run()>','<android.content.IntentFilter: java.util.Iterator categoriesIterator()>','<android.content.IntentFilter: java.util.Iterator pathsIterator()>','<android.net.Uri$Part: java.lang.String getEncoded()>','<android.os.IPermissionController$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.MountService: void monitor()>','<android.webkit.WebViewClassic: void setBackgroundColor(int)>','<com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState valueOf(java.lang.String)>','<com.android.internal.widget.TransportControlView: int access$000(com.android.internal.widget.TransportControlView)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric()>','<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo,boolean)>','<com.android.server.WallpaperManagerService: void access$100(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>','<android.net.LocalSocketImpl: int access$400(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>','<com.android.internal.telephony.IccFileHandler: void dispose()>','<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>','<android.graphics.Canvas: void rotate(float,float,float)>','<android.database.CursorToBulkCursorAdaptor: void <init>(android.database.Cursor,android.database.IContentObserver,java.lang.String)>','<android.filterfw.core.FilterPort: void setPortFormat(android.filterfw.core.FrameFormat)>','<com.android.internal.telephony.RIL: void setPhoneType(int)>','<android.location.Address: java.lang.String access$1002(android.location.Address,java.lang.String)>','<android.os.Message: void recycle()>','<android.view.View: void setFadingEdgeLength(int)>','<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtimeLocked(long)>','<android.widget.AbsListView: void onWindowFocusChanged(boolean)>','<android.widget.RemoteViews$MemoryUsageCounter: int getMemoryUsage()>','<com.android.internal.telephony.PhoneProxy: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.cdma.sms.UserData: void <init>()>','<android.view.IWindowManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.inputmethodservice.IInputMethodSessionWrapper$InputMethodEventCallbackWrapper: void <init>(com.android.internal.view.IInputMethodCallback)>','<com.android.server.location.PassiveProvider: boolean isEnabled()>','<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>','<android.telephony.SignalStrength: void <init>(android.os.Parcel)>','<android.media.IRemoteControlDisplay$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$Provider)>','<android.app.IThumbnailReceiver$Stub$Proxy: void newThumbnail(int,android.graphics.Bitmap,java.lang.CharSequence)>','<android.widget.ArrayAdapter$ArrayFilter: void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1)>','<android.view.View: boolean isOpaque()>','<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>','<android.webkit.WebViewClassic: android.webkit.WebBackForwardList saveState(android.os.Bundle)>','<com.android.server.am.ServiceRecord: void dumpStartList(java.io.PrintWriter,java.lang.String,java.util.List,long)>','<android.widget.SearchView: int getMaxWidth()>','<android.content.ContentUris: void <init>()>','<android.hardware.SensorManager: int getSensors()>','<android.graphics.Paint: int breakText(char[],int,int,float,float[])>','<android.text.DynamicLayout: void setBlocksDataForTest(int[],int[],int)>','<com.android.internal.telephony.CallManager: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: void migrateFrom(com.android.internal.telephony.sip.SipPhoneBase)>','<com.android.internal.telephony.cat.FontSize: com.android.internal.telephony.cat.FontSize fromInt(int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void getDeviceList(android.os.Bundle)>','<com.android.server.net.NetworkPolicyManagerService: void access$200(com.android.server.net.NetworkPolicyManagerService,int)>','<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(android.filterfw.geometry.Point)>','<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void run()>','<android.speech.tts.TextToSpeech$8: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>','<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int)>','<android.text.InputFilter$LengthFilter: void <init>(int)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()>','<android.view.View: boolean isHovered()>','<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>','<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>','<android.media.AudioService: int access$4900(android.media.AudioService)>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.cdma.CdmaConnection: void fakeHoldBeforeDial()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$4: void <clinit>()>','<android.accounts.AccountManager$4: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account)>','<android.filterfw.core.Filter: void openOutputs()>','<android.view.InputEvent$1: android.view.InputEvent createFromParcel(android.os.Parcel)>','<android.view.ViewRootImpl$RunQueue$HandlerAction: boolean equals(java.lang.Object)>','<android.os.Parcel: boolean[] createBooleanArray()>','<com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<android.animation.LayoutTransition: long access$500(android.animation.LayoutTransition)>','<android.os.Handler: boolean sendMessage(android.os.Message)>','<android.graphics.Interpolator: int getKeyFrameCount()>','<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>','<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>','<android.app.DownloadManager$Query: android.app.DownloadManager$Query setFilterById(long[])>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDeathOnNetwork()>','<android.content.pm.IPackageManager$Stub$Proxy: boolean isStorageLow()>','<android.graphics.RectF: void offset(float,float)>','<android.widget.ExpandableListConnector: boolean hasStableIds()>','<android.view.MotionEvent: float getPressure()>','<com.android.internal.telephony.sip.SipPhone: java.lang.String access$1300(com.android.internal.telephony.sip.SipPhone,android.net.sip.SipProfile)>','<android.filterpacks.imageproc.RedEyeFilter: void <init>(java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: boolean processMessage(android.os.Message)>','<com.android.server.pm.ShutdownThread$3: void <init>(com.android.server.pm.ShutdownThread)>','<com.android.server.WifiService: void access$1900(com.android.server.WifiService,boolean)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>','<com.android.internal.policy.impl.GlobalActions$6: void <init>(com.android.internal.policy.impl.GlobalActions)>','<android.hardware.SensorManager: float getInclination(float[])>','<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void <init>(android.media.AudioService$VolumeStreamState,android.os.IBinder)>','<com.android.server.wm.WindowManagerService$1: void acquired()>','<android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>','<com.android.server.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>','<com.android.server.net.NetworkPolicyManagerService$10: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>','<android.os.CancellationSignal: void cancel()>','<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView$OnCloseListener)>','<android.media.RemoteControlClient: int getIntPlaybackInformation(int)>','<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>','<com.android.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>','<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>','<android.accounts.AccountManagerResponse$1: void <init>()>','<com.android.internal.util.TypedProperties: void <clinit>()>','<android.net.INetworkPolicyListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.WebSettingsClassic: int getDefaultFixedFontSize()>','<com.android.internal.telephony.DefaultPhoneNotifier: int convertDataActivityState(com.android.internal.telephony.Phone$DataActivityState)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)>','<android.graphics.drawable.ScaleDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>','<android.view.Display: void getRectSize(android.graphics.Rect)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()>','<android.content.pm.PackageParser$Service: void setPackageName(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: boolean isDataConnectivityPossible(java.lang.String)>','<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>','<android.os.ParcelUuid$1: android.os.ParcelUuid createFromParcel(android.os.Parcel)>','<android.view.View: void onSizeChanged(int,int,int,int)>','<android.webkit.CallbackProxy$JsResultReceiver: void onJsResultComplete(android.webkit.JsResult)>','<android.os.Parcel: void writeCharArray(char[])>','<android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerCertificates(byte[][],java.lang.String,java.lang.String)>','<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>','<com.android.server.location.LocationProviderProxy: boolean access$500(com.android.server.location.LocationProviderProxy)>','<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>','<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>','<android.provider.Telephony$Sms$Conversations: void <init>()>','<android.widget.ProgressBar: boolean access$202(android.widget.ProgressBar,boolean)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getScanMode()>','<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>','<android.app.Activity: int getRequestedOrientation()>','<android.content.ContentQueryMap$1: void onChange(boolean)>','<android.app.backup.BackupDataInputStream: int size()>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiMonitor access$3100(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.cat.Menu: void <clinit>()>','<android.webkit.WebViewClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>','<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.Choreographer$CallbackRecord: void <init>(android.view.Choreographer$1)>','<android.view.MenuInflater$InflatedOnMenuItemClickListener: void <clinit>()>','<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>','<android.animation.Keyframe$IntKeyframe: android.animation.Keyframe$IntKeyframe clone()>','<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)>','<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>','<android.opengl.GLLogWrapper: void glGetClipPlanex(int,int[],int)>','<android.hardware.usb.UsbAccessory: void <clinit>()>','<android.media.IAudioService$Stub$Proxy: boolean shouldVibrate(int)>','<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>','<android.content.res.XmlBlock$Parser: int getLineNumber()>','<android.util.SparseBooleanArray: int size()>','<android.security.KeyStore$State: android.security.KeyStore$State valueOf(java.lang.String)>','<android.widget.BaseAdapter: boolean isEmpty()>','<com.android.internal.widget.WaveView: void onDraw(android.graphics.Canvas)>','<android.content.pm.PackageInfo: java.lang.String toString()>','<android.webkit.CallbackProxy: boolean messagesBlocked()>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<com.android.server.wm.WindowStateAnimator: boolean showSurfaceRobustlyLocked()>','<android.media.IRemoteVolumeObserver$Stub$Proxy: void dispatchRemoteVolumeUpdate(int,int)>','<android.os.storage.StorageVolume: java.lang.String toString()>','<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>','<android.media.AudioService: void access$5900(android.media.AudioService)>','<com.android.internal.telephony.cat.RilMessageDecoder: void sendMsgParamsDecoded(com.android.internal.telephony.cat.ResultCode,com.android.internal.telephony.cat.CommandParams)>','<android.webkit.WebView: void loadUrl(java.lang.String)>','<com.android.internal.app.ActionBarImpl: int getDisplayOptions()>','<com.android.internal.telephony.EncodeException: void <init>(java.lang.String)>','<android.webkit.Plugin: java.lang.String access$100(android.webkit.Plugin)>','<android.content.pm.PathPermission: void <init>(android.os.Parcel)>','<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>','<android.webkit.WebView$PrivateAccess: void setScrollYRaw(int)>','<android.app.backup.BackupAgent$BackupServiceBinder: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<android.accounts.AccountManagerService$5: void run()>','<com.android.server.NsdService$ClientInfo: android.net.nsd.NsdServiceInfo access$2300(com.android.server.NsdService$ClientInfo)>','<com.android.internal.telephony.cat.Item: java.lang.String toString()>','<android.app.SearchableInfo: java.lang.String getSuggestPath()>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$902(com.android.internal.widget.TransportControlView$Metadata,java.lang.String)>','<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)>','<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>','<android.widget.CheckedTextView: void drawableStateChanged()>','<android.server.BluetoothService: int getInputDevicePriority(android.bluetooth.BluetoothDevice)>','<android.webkit.JWebCoreJavaBridge: void <clinit>()>','<android.os.Process$ProcessStartResult: void <init>()>','<android.net.wifi.WifiManager: boolean isWifiEnabled()>','<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(java.lang.String,int)>','<com.android.server.LocationManagerService$Receiver: void binderDied()>','<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>','<com.android.server.am.UriPermissionOwner: void removeWritePermission(com.android.server.am.UriPermission)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>','<android.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)>','<android.os.RegistrantList: void add(android.os.Handler,int,java.lang.Object)>','<android.widget.Editor$PositionListener: void <init>(android.widget.Editor,android.widget.Editor$1)>','<android.webkit.WebStorageClassic$2: void handleMessage(android.os.Message)>','<android.webkit.WebView$PrivateAccess: void super_computeScroll()>','<com.android.server.AppWidgetServiceImpl: void bindAppWidgetId(int,android.content.ComponentName)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>','<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String,java.lang.String)>','<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>','<android.view.IWindowManager$Stub$Proxy: void startAppFreezingScreen(android.os.IBinder,int)>','<com.android.server.wm.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,boolean,boolean)>','<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>','<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>','<android.app.Activity: android.view.View onCreatePanelView(int)>','<android.renderscript.RenderScript: void nMeshGetVertices(int,int[],int)>','<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.MenuInflater getMenuInflater()>','<android.view.ViewRootImpl$AccessibilityInteractionConnectionManager: void ensureConnection()>','<android.animation.ObjectAnimator: void animateValue(float)>','<android.server.BluetoothService: int getNumberOfApplicationStateChangeTrackers()>','<android.view.AccessibilityInteractionController$1: void onAcquired(android.view.AccessibilityInteractionController$SomeArgs)>','<android.app.admin.DevicePolicyManager: void lockNow()>','<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)>','<android.security.KeyStore: boolean lock()>','<com.android.server.WifiService: void startScan(boolean)>','<android.bluetooth.BluetoothTetheringDataTracker: boolean isPrivateDnsRouteSet()>','<android.net.wifi.WifiManager$MulticastLock: java.lang.String toString()>','<android.server.BluetoothService: void initBluetoothAfterTurningOn()>','<android.content.res.Resources: java.io.InputStream openRawResource(int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode getStatusForIccState(com.android.internal.telephony.IccCard$State)>','<android.view.ViewTreeObserver: void dispatchOnDraw()>','<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>','<android.widget.HorizontalScrollView: boolean arrowScroll(int)>','<android.server.BluetoothService: java.util.Collection getApplicationStateChangeCallbacks()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationTimeout(android.net.sip.ISipSession)>','<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)>','<com.android.server.wm.Session: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>','<com.android.internal.app.ActionBarImpl: void removeTab(android.app.ActionBar$Tab)>','<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()>','<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>','<android.webkit.WebViewClassic: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)>','<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ContextImpl$5: java.lang.Object createStaticService()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void displayCompletions(android.view.inputmethod.CompletionInfo[])>','<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getPackageStats()>','<android.text.SpannableString: int getSpanStart(java.lang.Object)>','<android.util.Pools: android.util.Pool synchronizedPool(android.util.Pool)>','<android.view.HardwareRenderer$Gl20Renderer: boolean canDraw()>','<android.filterpacks.videosrc.MediaSource: int access$502(android.filterpacks.videosrc.MediaSource,int)>','<android.accounts.AccountManagerService: void writeAuthTokenIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>','<android.widget.TextView: void updateAfterEdit()>','<android.media.AudioService$FocusStackEntry: void finalize()>','<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>','<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.policy.impl.PhoneWindowManager$13: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: boolean access$300(java.lang.String)>','<android.widget.RelativeLayout$LayoutParams: void addRule(int)>','<android.content.pm.RegisteredServicesCache$ServiceInfo: void <init>(java.lang.Object,android.content.ComponentName,int)>','<com.android.internal.telephony.gsm.SmsCbHeader: int getPageIndex()>','<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int,int)>','<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<com.android.internal.telephony.DataConnectionAc: android.app.PendingIntent getReconnectIntentSync()>','<android.graphics.Path: void <init>()>','<android.app.ApplicationErrorReport$CrashInfo: void <init>(java.lang.Throwable)>','<android.content.pm.IPackageDataObserver$Stub: android.os.IBinder asBinder()>','<android.hardware.usb.UsbAccessory$1: android.hardware.usb.UsbAccessory[] newArray(int)>','<android.view.ViewRootImpl: void clearChildFocus(android.view.View)>','<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: void enter()>','<android.webkit.WebViewCore$EventHub: void access$7500(android.webkit.WebViewCore$EventHub)>','<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.location.MockProvider: boolean requiresNetwork()>','<android.widget.SearchView$10: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>','<android.view.GLES20Canvas: void drawPicture(android.graphics.Picture)>','<android.net.NetworkStats$Entry: void <init>(java.lang.String,int,int,int,long,long,long,long,long)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleRingerModeChange(int)>','<android.net.wifi.WifiConfiguration$KeyMgmt: void <clinit>()>','<android.webkit.HTML5VideoView: void setOnCompletionListener(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>','<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<com.android.internal.telephony.IccSmsInterfaceManager: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>','<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>','<android.os.StrictMode: void onWebViewMethodCalledOnWrongThread(java.lang.Throwable)>','<android.webkit.JniUtil: void <clinit>()>','<android.app.Activity: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long getMobileTcpBytesReceived(int)>','<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>','<android.widget.GridView: int getColumnWidth()>','<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState: boolean processMessage(android.os.Message)>','<android.webkit.WebViewClassic: int getHistoryPictureWidth()>','<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>','<com.android.server.ShutdownActivity: boolean access$100(com.android.server.ShutdownActivity)>','<android.os.StrictMode$1: void <init>()>','<com.android.internal.widget.PasswordEntryKeyboard: android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>','<android.net.NetworkInfo: void setIsAvailable(boolean)>','<com.android.internal.telephony.gsm.GsmDataConnection: int getProfileId()>','<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()>','<com.android.server.LocationManagerService$LpAccuracyComparator: void <init>(com.android.server.LocationManagerService,com.android.server.LocationManagerService$1)>','<android.util.TypedValue: float getFraction(float,float)>','<android.webkit.AutoCompletePopup: void setIsAutoFillProfileSet(boolean)>','<android.util.MathUtils: float constrain(float,float,float)>','<android.content.pm.PackageInfoLite: void <init>()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()>','<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>','<com.android.server.LocationManagerService: void access$500(com.android.server.LocationManagerService)>','<android.webkit.WebViewCore: boolean isSupportedMediaMimeType(java.lang.String)>','<android.service.wallpaper.IWallpaperService$Stub: android.service.wallpaper.IWallpaperService asInterface(android.os.IBinder)>','<android.server.BluetoothService: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>','<android.content.ContentValues: int describeContents()>','<android.app.Activity: boolean requestWindowFeature(int)>','<android.view.View: void setNextFocusUpId(int)>','<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>','<android.app.ActivityThread: void handleResumeActivity(android.os.IBinder,boolean,boolean)>','<android.filterfw.core.NativeBuffer: void assertReadable()>','<android.view.View: android.view.ViewRootImpl getViewRootImpl()>','<android.net.INetworkStatsSession$Stub: android.net.INetworkStatsSession asInterface(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$AppDirObserver: void onEvent(int,java.lang.String)>','<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord access$902(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$NotificationRecord)>','<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isActivate()>','<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCity()>','<android.view.GLES20DisplayList: boolean isValid()>','<android.hardware.SystemSensorManager$ListenerDelegate: void onSensorChangedLocked(android.hardware.Sensor,float[],long[],int)>','<android.webkit.CookieSyncManager: void sync()>','<com.android.internal.policy.impl.PhoneWindowManager: void startDockOrHome()>','<android.opengl.GLLogWrapper: void glBlendEquation(int)>','<android.content.res.XmlBlock$Parser: void setFeature(java.lang.String,boolean)>','<android.media.MediaPlayer$EventHandler: void handleMessage(android.os.Message)>','<android.graphics.Canvas$EdgeType: void <clinit>()>','<android.content.ISyncContext$Stub$Proxy: void sendHeartbeat()>','<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>','<android.server.BluetoothAdapterProperties: java.lang.String getProperty(java.lang.String)>','<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>','<android.filterfw.core.GraphRunner: boolean activateGlContext()>','<android.text.util.Linkify$4: void <init>()>','<android.view.ViewTreeObserver: void dispatchOnScrollChanged()>','<com.android.internal.telephony.gsm.SIMRecords: void onRefresh(boolean,int[])>','<com.android.server.net.NetworkPolicyManagerService$6: void onReceive(android.content.Context,android.content.Intent)>','<android.animation.Keyframe$FloatKeyframe: android.animation.Keyframe$FloatKeyframe clone()>','<android.graphics.PointF: void set(android.graphics.PointF)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>','<android.telephony.ServiceState: void setIsManualSelection(boolean)>','<com.android.internal.telephony.CallManager: void unregisterForDisplayInfo(android.os.Handler)>','<android.graphics.Paint$Join: android.graphics.Paint$Join valueOf(java.lang.String)>','<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)>','<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>','<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>','<android.content.ISyncStatusObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.hardware.Camera: android.hardware.Camera$OnZoomChangeListener access$1000(android.hardware.Camera)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$2: void <init>(com.android.internal.policy.impl.KeyguardUpdateMonitor,android.os.Handler)>','<com.android.server.pm.PackageManagerService: void enterSafeMode()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeIntegerValue(int)>','<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)>','<com.android.server.sip.SipSessionListenerProxy$7: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<android.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener)>','<android.opengl.GLLogWrapper: void glClearStencil(int)>','<android.media.IAudioService$Stub$Proxy: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.filterfw.core.FilterPort: void assertPortIsOpen()>','<android.os.NullVibrator: boolean hasVibrator()>','<android.view.IWindowSession$Stub$Proxy: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect)>','<android.webkit.CacheManager$CacheResult: void setContentLength(long)>','<com.android.internal.widget.LockPatternView: boolean onHoverEvent(android.view.MotionEvent)>','<android.webkit.ConsoleMessage: int lineNumber()>','<com.android.internal.policy.impl.AccountUnlockScreen$2$1: void <init>(com.android.internal.policy.impl.AccountUnlockScreen$2)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void changeCall(java.lang.String,int)>','<android.app.ActivityThread: android.app.Application getApplication()>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: boolean matches(com.android.server.usb.UsbSettingsManager$DeviceFilter)>','<android.provider.Telephony$Sms$Outbox: void <clinit>()>','<android.net.sip.SipSessionAdapter: void onCalling(android.net.sip.ISipSession)>','<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>','<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void startNetStatPoll()>','<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>','<com.android.internal.os.BatteryStatsImpl: void noteProcessDiedLocked(int,int)>','<android.text.Layout: android.text.Layout$Alignment getAlignment()>','<android.os.Looper: void dump(android.util.Printer,java.lang.String)>','<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>','<android.view.IWindowManager$Stub$Proxy: void executeAppTransition()>','<com.android.server.am.BroadcastQueue$AppNotResponding: void run()>','<com.android.internal.telephony.DataConnectionTracker: java.lang.String[] getActiveApnTypes()>','<com.android.internal.widget.LockPatternUtils: void setTactileFeedbackEnabled(boolean)>','<com.android.internal.telephony.ATResponseParser: boolean hasMore()>','<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void exit()>','<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>','<android.server.BluetoothPanProfileHandler: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>','<android.os.StrictMode: java.util.concurrent.atomic.AtomicInteger access$1400()>','<com.android.server.NsdService$NsdStateMachine$1: void <init>(com.android.server.NsdService$NsdStateMachine,android.os.Handler)>','<com.android.internal.util.StateMachine$SmHandler: void access$1400(com.android.internal.util.StateMachine$SmHandler,android.os.Message)>','<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>','<com.android.server.AppWidgetService: int allocateAppWidgetId(java.lang.String,int)>','<android.graphics.drawable.RotateDrawable: boolean onStateChange(int[])>','<com.android.internal.policy.impl.SimPukUnlockScreen$1$1: void run()>','<android.graphics.Xfermode: void <init>()>','<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>','<android.graphics.Region: boolean quickContains(android.graphics.Rect)>','<com.android.internal.app.AlertController$AlertParams$1: void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView)>','<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>','<android.webkit.WebViewClassic: void access$3600(android.webkit.WebViewClassic,int,java.lang.String,boolean)>','<android.net.http.Headers: java.lang.String getLastModified()>','<android.view.View: boolean willNotCacheDrawing()>','<android.app.WallpaperManager$FastBitmapDrawable: void draw(android.graphics.Canvas)>','<com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<android.app.ApplicationErrorReport$CrashInfo: void <init>()>','<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.content.IIntentSender$Stub$Proxy: void <init>(android.os.IBinder)>','<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>','<com.android.server.location.GpsXtraDownloader: void <init>(android.content.Context,java.util.Properties)>','<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>','<android.hardware.input.IInputManager$Stub$Proxy: void tryPointerSpeed(int)>','<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: android.os.BatteryStats$Uid$Proc$ExcessivePower getExcessivePower(int)>','<android.os.Messenger: void <clinit>()>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()>','<android.service.wallpaper.IWallpaperConnection$Stub: void <init>()>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void <init>()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getBackgroundCall()>','<android.net.wifi.WifiStateMachine: void access$8500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.policy.IFaceLockCallback$Stub: com.android.internal.policy.IFaceLockCallback asInterface(android.os.IBinder)>','<android.graphics.drawable.Drawable: int getMinimumWidth()>','<android.app.admin.DeviceAdminInfo: boolean isVisible()>','<android.net.NetworkStats: android.net.NetworkStats withoutUid(int)>','<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)>','<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>','<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>','<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>','<android.net.wifi.WifiInfo: java.lang.String toString()>','<android.view.IWindowManager$Stub$Proxy: void getDisplaySize(android.graphics.Point)>','<android.net.INetworkPolicyManager$Stub$Proxy: boolean isUidForeground(int)>','<android.widget.TextView: boolean setFrame(int,int,int,int)>','<android.media.IAudioFocusDispatcher$Stub$Proxy: void dispatchAudioFocusChange(int,java.lang.String)>','<com.android.server.wm.WindowManagerService: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>','<android.security.IKeyChainAliasCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>','<com.android.internal.view.IInputConnectionWrapper: void setSelection(int,int)>','<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>','<android.net.wifi.SupplicantState$1: void <init>()>','<android.net.http.Headers: void <init>()>','<android.media.AudioManager$1: void <init>(android.media.AudioManager)>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int)>','<com.android.server.usb.UsbSettingsManager: void checkPermission(android.hardware.usb.UsbAccessory)>','<android.nfc.NdefRecord: short getTnf()>','<android.app.backup.IRestoreObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>','<com.android.internal.telephony.PhoneProxy: void unregisterForT53AudioControlInfo(android.os.Handler)>','<android.hardware.input.InputManager$InputDeviceListenerDelegate: void <init>(android.hardware.input.InputManager$InputDeviceListener,android.os.Handler)>','<android.media.MediaRouter$RouteGroup: java.lang.String toString()>','<android.media.RemoteControlClient: void <init>(android.app.PendingIntent,android.os.Looper)>','<com.android.server.am.ActivityManagerService$4: void onEvent(int,java.lang.String)>','<android.app.FragmentManagerImpl$4: void <init>(android.app.FragmentManagerImpl,int,int)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageName(java.lang.String)>','<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>','<android.nfc.NdefRecord: void writeToByteBuffer(java.nio.ByteBuffer,boolean,boolean)>','<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>','<com.android.internal.telephony.DataConnectionAc: void reqSetReconnectIntent(android.app.PendingIntent)>','<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>','<com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>','<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>','<android.view.accessibility.AccessibilityNodeInfo: void access$000(android.view.accessibility.AccessibilityNodeInfo,android.os.Parcel)>','<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.Session access$1102(com.android.server.wm.WindowManagerService$LayoutFields,com.android.server.wm.Session)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void updateSpnDisplay()>','<com.android.internal.telephony.ServiceStateTracker: void registerForPsRestrictedDisabled(android.os.Handler,int,java.lang.Object)>','<android.test.mock.MockContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>','<android.database.AbstractCursor: byte[] getBlob(int)>','<com.android.internal.telephony.test.ModelInterpreter: void triggerHangupForeground()>','<android.app.ActivityOptions: void update(android.app.ActivityOptions)>','<com.android.server.am.ActivityManagerService: void killApplicationWithUid(java.lang.String,int)>','<com.android.ex.variablespeed.MediaPlayerDataSource: void <init>(java.lang.String)>','<com.android.internal.policy.impl.FaceUnlock: void handleReportFailedAttempt()>','<android.widget.TextView: boolean getIncludeFontPadding()>','<android.view.ViewGroup: void <init>(android.content.Context)>','<android.media.IAudioService$Stub$Proxy: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.webkit.WebViewCore: int access$302(android.webkit.WebViewCore,int)>','<android.app.ActivityManager$RunningTaskInfo$1: android.app.ActivityManager$RunningTaskInfo createFromParcel(android.os.Parcel)>','<android.database.sqlite.SQLiteProgram: void <clinit>()>','<android.media.MediaRouter: void dispatchRouteUngrouped(android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup)>','<android.bluetooth.BluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>','<com.android.server.EventLogTags: void writeBootProgressPmsStart(long)>','<android.text.method.MetaKeyKeyListener: void <init>()>','<android.text.SpannableStringInternal: void <init>(java.lang.CharSequence,int,int)>','<android.telephony.CellInfo: android.telephony.CellIdentity getCellIdentity()>','<android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>','<com.android.server.net.NetworkPolicyManagerService: int[] getAppsWithPolicy(int)>','<com.android.internal.telephony.cdma.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>','<com.android.internal.telephony.cat.FontSize: void <clinit>()>','<android.app.Fragment: void setArguments(android.os.Bundle)>','<android.app.LoadedApk: java.lang.String getDataDir()>','<android.widget.FastScroller: int getState()>','<android.view.View: void setTranslationX(float)>','<com.android.server.pm.PackageManagerService: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>','<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyMessageWaitingChanged(boolean)>','<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>','<android.media.MediaRouter: void removeCallback(android.media.MediaRouter$Callback)>','<android.content.SyncStorageEngine: int getSyncRandomOffset()>','<com.android.server.wm.DimSurface: void printTo(java.lang.String,java.io.PrintWriter)>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$ChannelListener access$100(android.net.wifi.p2p.WifiP2pManager$Channel)>','<android.location.Location: void reset()>','<android.filterfw.core.GLFrame: void focus()>','<android.app.backup.RestoreSet: void <init>()>','<com.android.internal.widget.ScrollingTabContainerView$TabView: void bindTab(android.app.ActionBar$Tab)>','<android.text.method.TextKeyListener: void clear(android.text.Editable)>','<com.android.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>','<android.inputmethodservice.IInputMethodWrapper: void createSession(com.android.internal.view.IInputMethodCallback)>','<android.content.ContentProviderNative: android.os.IBinder asBinder()>','<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>','<android.nfc.NfcActivityManager: void onActivityPaused(android.app.Activity)>','<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.internal.net.VpnConfig: void <init>()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>','<android.content.ClipData$Item: void <init>(java.lang.CharSequence)>','<android.widget.Spinner: void onMeasure(int,int)>','<android.bluetooth.BluetoothSocket: void connect()>','<android.bluetooth.BluetoothUuid: boolean isAdvAudioDist(android.os.ParcelUuid)>','<android.net.Uri$HierarchicalUri: void writeToParcel(android.os.Parcel,int)>','<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient$LoggingConfiguration access$300(android.net.http.AndroidHttpClient)>','<android.widget.TextView: void setSingleLine()>','<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: boolean access$102(boolean)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>','<android.net.wifi.WifiManager$WifiLock: void finalize()>','<android.app.IBackupAgent$Stub$Proxy: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<android.widget.RelativeLayout$DependencyGraph$Node: void setPooled(boolean)>','<android.hardware.Camera$EventHandler: void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getImei()>','<android.hardware.LegacySensorManager: int getRotation()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isInEcm()>','<android.net.MobileDataStateTracker: boolean isDefaultRouteSet()>','<android.preference.Preference: void setSummary(int)>','<android.preference.Preference: boolean persistStringSet(java.util.Set)>','<android.webkit.ByteArrayBuilder: void <clinit>()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>','<android.media.RemoteControlClient$MetadataEditor: void clear()>','<android.database.Observable: void registerObserver(java.lang.Object)>','<android.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.content.Loader,java.lang.Object)>','<android.preference.PreferenceGroup: void removeAll()>','<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>','<android.net.wifi.WifiNative: boolean addToBlacklist(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void registerFoT53ClirlInfo(android.os.Handler,int,java.lang.Object)>','<com.android.server.connectivity.Tethering$StateReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.cat.CommandParamsFactory: void <clinit>()>','<android.renderscript.Element: android.renderscript.Element F64_4(android.renderscript.RenderScript)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void access$1100(android.webkit.WebIconDatabaseClassic$EventHandler)>','<android.server.BluetoothService: boolean enableNoAutoConnect()>','<android.net.Uri$AbstractPart: void writeTo(android.os.Parcel)>','<com.android.ex.variablespeed.VariableSpeed$PlaybackRunnable: void <init>(com.android.ex.variablespeed.VariableSpeed,com.android.ex.variablespeed.MediaPlayerDataSource)>','<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<com.android.internal.util.StateMachine: int getProcessedMessagesSize()>','<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>','<com.android.internal.telephony.cat.Input: int describeContents()>','<android.util.MathUtils: float mag(float,float,float)>','<android.app.Activity$ManagedCursor: boolean access$202(android.app.Activity$ManagedCursor,boolean)>','<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>','<android.view.ViewRootImpl$QueuedInputEvent: void <init>(android.view.ViewRootImpl$1)>','<com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)>','<com.android.internal.widget.WaveView: long access$600(com.android.internal.widget.WaveView)>','<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.view.IApplicationToken$Stub$Proxy: long getKeyDispatchingTimeout()>','<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder setLimit(int)>','<android.widget.OverScroller: void startScroll(int,int,int,int,int)>','<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)>','<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)>','<com.android.internal.app.AlertController: android.widget.ListView getListView()>','<android.app.ActivityManager$RecentTaskInfo: void <clinit>()>','<com.android.internal.view.menu.MenuItemImpl: void setShowAsAction(int)>','<android.server.BluetoothService: android.server.BluetoothBondState access$000(android.server.BluetoothService)>','<com.android.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>','<com.android.internal.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)>','<android.app.ApplicationPackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>','<android.filterfw.core.Filter: void performOpen(android.filterfw.core.FilterContext)>','<android.widget.RemoteViews$1: void <init>()>','<android.media.AudioService$SoundPoolCallback: void <init>(android.media.AudioService,android.media.AudioService$1)>','<android.filterfw.core.Filter: java.lang.String getFilterClassName()>','<android.inputmethodservice.IInputMethodSessionWrapper: void displayCompletions(android.view.inputmethod.CompletionInfo[])>','<android.webkit.HTML5VideoInline: int getTextureName()>','<android.text.method.WordIterator: int getEnd(int)>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$002(boolean)>','<android.hardware.SensorEvent: void <init>(int)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$4100(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.nfc.NdefRecord: int hashCode()>','<android.accounts.AccountManager$1: java.lang.String bundleToResult(android.os.Bundle)>','<com.android.server.NotificationManagerService$SettingsObserver: void onChange(boolean)>','<android.app.ActivityThread$ServiceArgsData: java.lang.String toString()>','<com.android.i18n.phonenumbers.PhoneNumberMatch: int hashCode()>','<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>','<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter)>','<android.net.DummyDataStateTracker: void releaseWakeLock()>','<android.os.INetworkManagementService$Stub$Proxy: void stopTethering()>','<android.view.ViewGroup: boolean access$300(android.view.ViewGroup)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void seek(int,android.webkit.HTML5VideoViewProxy)>','<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminForCallerLocked(android.content.ComponentName,int)>','<com.android.internal.telephony.cdma.CdmaMmiCode: java.lang.CharSequence getMessage()>','<android.telephony.PhoneNumberUtils: boolean isDialable(char)>','<com.android.internal.os.RuntimeInit: void main(java.lang.String[])>','<com.android.server.InputMethodManagerService: void setEnabledSessionInMainThread(com.android.server.InputMethodManagerService$SessionState)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>','<android.content.ComponentName: int hashCode()>','<com.android.internal.telephony.DataConnection$DcActiveState: boolean processMessage(android.os.Message)>','<com.android.server.pm.PackageSettingBase: boolean disableComponentLPw(java.lang.String,int)>','<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>','<android.webkit.WebViewClassic: java.lang.String getSelection()>','<com.android.ex.variablespeed.VariableSpeed: void seekTo(int)>','<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDoneDrawing()>','<android.graphics.Rect: void offset(int,int)>','<android.widget.ProgressBar$RefreshData$1: void onReleased(android.widget.ProgressBar$RefreshData)>','<android.app.Activity: android.app.Activity$NonConfigurationInstances retainNonConfigurationInstances()>','<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>','<android.os.DropBoxManager$Entry: void writeToParcel(android.os.Parcel,int)>','<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.DriverCall toDriverCall(int)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View,boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean getMessageWaitingIndicator()>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])>','<android.text.method.BaseMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>','<android.view.ViewGroup$ChildListForAccessibility: void <init>()>','<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<com.android.internal.util.BitwiseOutputStream: void write(int,int)>','<android.widget.EditText: boolean getDefaultEditable()>','<android.widget.ExpandableListConnector$GroupMetadata: int compareTo(java.lang.Object)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void resetInstance()>','<com.android.internal.telephony.gsm.GSMPhone: void notifySignalStrength()>','<android.content.res.XmlBlock$Parser: int getNamespaceCount(int)>','<android.app.ActivityThread: void finishInstrumentation(int,android.os.Bundle)>','<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>','<android.view.AccessibilityIterators$AbstractTextSegmentIterator: void <init>()>','<android.widget.Switch: void setSwitchPadding(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isValidNumberForRegion(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<com.android.server.am.UsageStatsService: void shutdown()>','<com.android.internal.widget.LockPatternView$SavedState: void <init>(android.os.Parcelable,java.lang.String,int,boolean,boolean,boolean,com.android.internal.widget.LockPatternView$1)>','<android.webkit.WebViewClassic$OnTrimMemoryListener: void init(android.content.Context)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>','<android.app.Fragment: int getTargetRequestCode()>','<android.widget.RemoteViewsAdapter: void finalize()>','<android.view.PointerIcon: int access$102(android.view.PointerIcon,int)>','<android.widget.RelativeLayout$LayoutParams: int access$412(android.widget.RelativeLayout$LayoutParams,int)>','<android.content.res.XmlBlock$Parser: java.lang.String getInputEncoding()>','<android.opengl.GLLogWrapper: void glTexGenx(int,int,int)>','<android.os.AsyncTask$Status: void <clinit>()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimImpi()>','<com.android.server.ConnectivityService: java.lang.Object access$2500(com.android.server.ConnectivityService)>','<com.android.internal.policy.impl.PhoneWindowManager$20: void <init>(com.android.internal.policy.impl.PhoneWindowManager,int,boolean)>','<android.os.WorkSource$1: void <init>()>','<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>','<com.android.internal.telephony.sip.SipPhoneBase: void updatePhoneState()>','<android.app.admin.DevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String)>','<android.app.Fragment: void setIndex(int)>','<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>','<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>','<com.android.server.location.LocationProviderProxy: void enableLocationTracking(boolean)>','<android.webkit.CallbackProxy$UploadFile: android.net.Uri getResult()>','<android.webkit.ZoomManager$FocusMovementQueue: void access$700(android.webkit.ZoomManager$FocusMovementQueue,float)>','<com.android.internal.telephony.SmsMessageBase: void parseMessageBody()>','<com.android.internal.telephony.PhoneProxy: java.lang.String[] getActiveApnTypes()>','<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>','<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String rawString()>','<android.webkit.WebViewClassic: java.util.Set access$1400()>','<android.server.BluetoothService: java.lang.String[] listBonds()>','<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>','<android.content.pm.PermissionGroupInfo$1: void <init>()>','<com.android.server.am.ActivityRecord: boolean continueLaunchTickingLocked()>','<com.android.internal.statusbar.StatusBarIconList: void copyFrom(com.android.internal.statusbar.StatusBarIconList)>','<android.view.View: int getTextAlignment()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.Bundle getAppWidgetOptions(int)>','<android.ddm.DdmHandleExit: void register()>','<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>','<android.widget.SearchView: android.view.View$OnFocusChangeListener access$200(android.widget.SearchView)>','<android.net.NetworkStatsHistory$ParcelUtils: void writeLongArray(android.os.Parcel,long[],int)>','<com.android.server.wm.WindowManagerService: void updateRotationUnchecked(boolean,boolean)>','<android.server.BluetoothAdapterStateMachine: android.content.Context access$2000(android.server.BluetoothAdapterStateMachine)>','<android.webkit.HTML5VideoFullScreen: android.webkit.HTML5VideoFullScreen$VideoSurfaceView access$600(android.webkit.HTML5VideoFullScreen)>','<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getStorageEncryptionStatus()>','<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String toString()>','<android.media.effect.FilterEffect: java.lang.String getName()>','<com.android.internal.app.ActionBarImpl: int getNavigationItemCount()>','<com.android.server.am.IntentBindRecord: void <init>(com.android.server.am.ServiceRecord,android.content.Intent$FilterComparison)>','<android.media.RemoteControlClient$MetadataEditor: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient$1)>','<android.app.ContextImpl: void performFinalCleanup(java.lang.String,java.lang.String)>','<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String access$302(com.android.internal.telephony.ims.IsimUiccRecords,java.lang.String)>','<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>','<com.android.server.location.LocationProviderProxy: void addListener(int)>','<android.os.storage.StorageManager$ObbActionListener: void onObbResult(java.lang.String,int,int)>','<android.text.DynamicLayout$ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.server.BluetoothAdapterStateMachine: void access$6500(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.view.View: void drawableStateChanged()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>','<android.os.INetworkManagementService$Stub$Proxy: void setDefaultInterfaceForDns(java.lang.String)>','<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>','<com.android.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>','<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration)>','<android.text.TextUtils$TruncateAt: void <clinit>()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>','<com.android.internal.telephony.gsm.GsmConnection$1: void <clinit>()>','<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String)>','<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)>','<android.view.ActionProvider: boolean hasSubMenu()>','<android.animation.Animator: boolean isStarted()>','<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()>','<com.android.internal.http.HttpDateTime: void <clinit>()>','<com.android.internal.telephony.RIL: void getNetworkSelectionMode(android.os.Message)>','<android.media.MediaRouter: void removeUserRoute(android.media.MediaRouter$UserRouteInfo)>','<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>','<com.android.server.pm.PackageManagerService: java.util.List getAllPermissionGroups(int)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked()>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.net.sip.SipProfile: java.lang.String getSipDomain()>','<com.android.internal.telephony.cdma.RuimFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>','<android.animation.LayoutTransition: long getStartDelay(int)>','<android.app.Activity: boolean isImmersive()>','<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>','<android.app.ActionBar: void setHomeButtonEnabled(boolean)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaCall)>','<android.server.BluetoothService: boolean disable(boolean)>','<android.widget.Toast: int getGravity()>','<com.android.internal.telephony.PhoneBase: int getVoiceMessageCount()>','<android.os.Parcel: void restoreAllowFds(boolean)>','<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>','<android.widget.RemoteViews: int getLayoutId()>','<com.android.internal.telephony.cat.ResultException: int additionalInfo()>','<android.app.Application: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasNationalPrefixTransformRule()>','<android.nfc.Tag: int getServiceHandle()>','<android.location.ILocationProvider$Stub$Proxy: boolean supportsSpeed()>','<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>','<com.android.server.am.AppErrorDialog$1: void handleMessage(android.os.Message)>','<android.view.MenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>','<android.app.Instrumentation: boolean access$100(android.app.Instrumentation)>','<com.android.server.am.BroadcastQueue: void logBroadcastReceiverDiscardLocked(com.android.server.am.BroadcastRecord)>','<android.app.backup.IBackupManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler: void handleMessage(android.os.Message)>','<com.android.server.sip.SipSessionGroup: java.lang.String getLocalProfileUri()>','<android.widget.ProgressBar: void stopAnimation()>','<android.net.wifi.IWifiManager$Stub$Proxy: void reassociate()>','<com.android.server.pm.UserManager: boolean removeUser(int)>','<com.android.server.connectivity.Tethering: int untether(java.lang.String)>','<android.app.ApplicationErrorReport: void <init>()>','<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>','<android.provider.Settings$Secure: void <init>()>','<com.android.server.location.LocationBasedCountryDetector$1: void onLocationChanged(android.location.Location)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()>','<android.server.BluetoothInputProfileHandler: boolean connectInputDevice(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.telephony.sip.SipPhone: boolean equals(java.lang.Object)>','<android.webkit.WebViewClassic: java.lang.String getOriginalUrl()>','<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.sip.SipPhone: void enableLocationUpdates()>','<android.nfc.NfcAdapter: boolean disableNdefPush()>','<android.view.View: void setRight(int)>','<com.android.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRecordsLoaded()>','<android.view.GLES20RecordingCanvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>','<android.text.style.RelativeSizeSpan: float getSizeChange()>','<com.android.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void <init>(com.android.internal.policy.impl.LockScreen,com.android.internal.widget.WaveView)>','<com.android.internal.util.StateMachine$SmHandler: void access$1600(com.android.internal.util.StateMachine$SmHandler,int)>','<android.webkit.WebSettingsClassic: void setSansSerifFontFamily(java.lang.String)>','<android.app.Activity: java.lang.String getCallingPackage()>','<com.android.internal.telephony.DataConnection: int getDataConnectionId()>','<android.webkit.WebViewCore: void access$3500(android.webkit.WebViewCore,int,boolean)>','<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas getNextPoolable()>','<android.app.Service: void onRebind(android.content.Intent)>','<android.net.Uri$StringUri: int describeContents()>','<android.os.Handler: void handleMessage(android.os.Message)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>','<com.android.server.am.CompatModeDialog$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<android.filterfw.io.TextGraphReader$AddLibraryCommand: void execute(android.filterfw.io.TextGraphReader)>','<android.content.res.CompatibilityInfo$Translator: void translateLayoutParamsInAppWindowToScreen(android.view.WindowManager$LayoutParams)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setPosition(float,float)>','<com.android.internal.telephony.sip.SipPhone: void unregisterForSuppServiceNotification(android.os.Handler)>','<android.text.Layout: boolean isSpanned()>','<android.renderscript.RenderScript: int nFileA3DCreateFromFile(java.lang.String)>','<android.util.TypedValue: void <init>()>','<android.view.GLES20Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>','<android.server.BluetoothHealthProfileHandler$1: void <init>(android.server.BluetoothHealthProfileHandler)>','<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View,android.widget.RemoteViews$OnClickHandler)>','<android.graphics.drawable.TransitionDrawable: void resetTransition()>','<android.widget.TextView$Marquee: boolean shouldDrawLeftFade()>','<android.filterfw.core.FrameFormat: int getSize()>','<com.android.internal.view.menu.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.SyncManager$7: void onSyncRequest(android.accounts.Account,int,java.lang.String,android.os.Bundle)>','<android.content.ContextWrapper: java.lang.String getPackageCodePath()>','<android.app.FragmentManagerImpl: boolean execPendingActions()>','<android.nfc.tech.NfcB: void <init>(android.nfc.Tag)>','<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)>','<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String getTcpBufferSizesPropName()>','<android.inputmethodservice.InputMethodService: void onInitializeInterface()>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void mute(boolean)>','<android.provider.Settings$NameValueCache: java.lang.String getString(android.content.ContentResolver,java.lang.String)>','<android.content.res.CompatibilityInfo: void <clinit>()>','<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>','<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()>','<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>','<android.filterfw.core.GLEnvironment: void initWithCurrentContext()>','<android.net.http.IdleCache: void clear()>','<android.widget.Editor$SelectionEndHandleView: void updateSelection(int)>','<android.telephony.SmsCbLocation: boolean equals(java.lang.Object)>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: android.os.IBinder asBinder()>','<android.media.SoundPool$EventHandler: void handleMessage(android.os.Message)>','<android.media.MediaRouter$SimpleCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)>','<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout$Metrics)>','<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment,int,int,int,boolean)>','<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>','<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>','<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>','<android.os.Parcel: void writeList(java.util.List)>','<android.os.SystemProperties: void <init>()>','<com.android.server.InputMethodManagerService$4: void <init>(com.android.server.InputMethodManagerService)>','<android.webkit.WebView$HitTestResult: java.lang.String getExtra()>','<com.android.server.location.LocationProviderProxy: boolean isLocationTracking()>','<com.android.server.DeviceStorageMonitorService: boolean access$202(com.android.server.DeviceStorageMonitorService,boolean)>','<android.net.IConnectivityManager$Stub: android.net.IConnectivityManager asInterface(android.os.IBinder)>','<android.widget.ListPopupWindow: void show()>','<android.animation.LayoutTransition: boolean isRunning()>','<android.telephony.NeighboringCellInfo: void setRssi(int)>','<android.filterfw.core.VertexFrame: void <clinit>()>','<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetResourceId()>','<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void hangup()>','<com.android.internal.telephony.RIL: void getCLIR(android.os.Message)>','<android.webkit.HTML5VideoViewProxy: void pauseAndDispatch()>','<com.android.internal.telephony.RIL: void getPreferredNetworkType(android.os.Message)>','<android.app.ActivityGroup: void onPause()>','<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>','<android.view.Choreographer: void <init>(android.os.Looper,android.view.Choreographer$1)>','<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)>','<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>','<android.app.PendingIntent$FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<android.view.GLES20Canvas: void setMatrix(android.graphics.Matrix)>','<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.sip.SipService$SipSessionGroupExt: void close()>','<android.app.INotificationManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.net.NetworkStats: long getElapsedRealtime()>','<android.widget.PopupWindow: void setWindowLayoutType(int)>','<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>','<android.widget.Editor$InsertionHandleView: void showWithActionPopup()>','<com.android.server.pm.PackageManagerService: boolean removeUser(int)>','<android.text.Layout: int getParagraphLeft(int)>','<com.android.internal.telephony.test.ModelInterpreter: void triggerHangupAll()>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean isSecure()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void <init>(android.content.Context)>','<android.media.AudioService$RemotePlaybackState: void <init>(android.media.AudioService,int,int,int,android.media.AudioService$1)>','<android.webkit.AccessibilityInjector: void onPageStarted(java.lang.String)>','<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>','<com.android.server.PowerManagerService$3: void onScreenOn()>','<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>','<com.android.internal.os.LoggingPrintStream: void print(float)>','<com.android.server.StatusBarManagerService$4: void <init>(com.android.server.StatusBarManagerService,int,int)>','<android.webkit.ZoomManager: float getReadingLevelScale()>','<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>','<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()>','<android.webkit.WebViewClassic: void access$4000(int,boolean)>','<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasDomesticCarrierCodeFormattingRule()>','<android.view.KeyEvent: boolean isNumLockOn()>','<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>','<android.media.SoundPool: void <init>(int,int,int)>','<android.content.IContentService$Stub$Proxy: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>','<android.content.Loader: boolean onCancelLoad()>','<com.android.server.sip.SipSessionGroup: void access$500(com.android.server.sip.SipSessionGroup,com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<com.android.server.PowerManagerService: boolean access$600(com.android.server.PowerManagerService)>','<android.widget.ProgressBar: void drawableStateChanged()>','<android.net.sip.SipSessionAdapter: void onRingingBack(android.net.sip.ISipSession)>','<android.server.BluetoothAdapterStateMachine: void access$7100(android.server.BluetoothAdapterStateMachine,int)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getFormats()>','<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)>','<com.android.server.LocationManagerService$Receiver: boolean isPendingIntent()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: java.lang.String[] access$400(com.android.i18n.phonenumbers.PhoneNumberUtil,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.webkit.WebViewCore: int access$6400(android.webkit.WebViewCore,int,java.lang.String)>','<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)>','<com.android.internal.widget.WaveView: void reset()>','<android.bluetooth.BluetoothUuid: boolean isAudioSource(android.os.ParcelUuid)>','<com.android.internal.telephony.IccCard: int getCurrentApplicationIndex()>','<android.widget.ProgressBar: void <init>(android.content.Context)>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>','<com.android.internal.telephony.BaseCommands: void setOnSignalStrengthUpdate(android.os.Handler,int,java.lang.Object)>','<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>','<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>','<android.view.View: boolean isImportantForAccessibility()>','<android.database.sqlite.SQLiteClosable: void acquireReference()>','<com.android.server.pm.Settings: boolean isEnabledLPr(android.content.pm.ComponentInfo,int,int)>','<android.hardware.SystemSensorManager: void unregisterListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor)>','<android.net.wifi.WifiManager$Channel: android.util.SparseArray access$200(android.net.wifi.WifiManager$Channel)>','<android.net.http.RequestQueue$ActivePool: void shutdown()>','<com.android.internal.telephony.IccUtils: byte[] hexStringToBytes(java.lang.String)>','<android.net.NetworkInfo: void <init>(int)>','<android.webkit.HTML5VideoViewProxy: void setBaseLayer(int)>','<android.widget.AbsListView: void handleDataChanged()>','<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean processMessage(android.os.Message)>','<com.android.server.am.ConnectionRecord: java.lang.String toString()>','<android.view.ScaleGestureDetector: float getFocusY()>','<android.widget.AbsListView: boolean access$2600(android.widget.AbsListView,int,int,int,int,int,int,int,int,boolean)>','<android.os.storage.StorageManager$ObbStateChangedStorageEvent: void <init>(android.os.storage.StorageManager,java.lang.String,int)>','<android.view.View: android.os.Handler getHandler()>','<android.view.GLES20DisplayList: void setAnimationMatrix(android.graphics.Matrix)>','<android.widget.AbsListView: void smoothScrollToPosition(int,int)>','<android.view.MotionEvent: long getDownTime()>','<com.android.server.pm.PackageManagerService$9: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>','<com.android.server.DevicePolicyManagerService: void wipeDataLocked(int)>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyServiceStateChanged(android.telephony.ServiceState)>','<android.widget.AdapterViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.widget.HeaderViewListAdapter: int getCount()>','<android.widget.ZoomButtonsController: void access$700(android.widget.ZoomButtonsController)>','<android.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.content.Loader,java.lang.Object)>','<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>','<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setAllowedOverRoaming(boolean)>','<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>','<android.widget.Editor$SelectionActionModeCallback: void <init>(android.widget.Editor,android.widget.Editor$1)>','<com.android.internal.telephony.CallManager: boolean sendDtmf(char)>','<android.view.View: void restoreHierarchyState(android.util.SparseArray)>','<com.android.server.am.BroadcastQueue: boolean replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>','<android.graphics.Matrix: boolean preSkew(float,float,float,float)>','<android.bluetooth.BluetoothHeadset$1: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.pm.ShutdownThread$4: void onShutDownComplete(int)>','<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3800(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void cleanUp()>','<android.animation.Keyframe$ObjectKeyframe: android.animation.Keyframe$ObjectKeyframe clone()>','<android.app.Notification: void <clinit>()>','<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>','<com.android.server.AppWidgetServiceImpl: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>','<android.view.animation.Animation: void setListenerHandler(android.os.Handler)>','<com.android.internal.view.menu.ActionMenuItem: boolean invoke()>','<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,android.content.IIntentReceiver)>','<android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState[] values()>','<com.android.server.am.AppWaitingForDebuggerDialog$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.PhoneBase: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>','<android.view.ViewPropertyAnimator: java.util.HashMap access$600(android.view.ViewPropertyAnimator)>','<android.os.Process: boolean isIsolated()>','<android.location.Criteria: int getPowerRequirement()>','<android.net.sip.SipManager: android.content.Intent createIncomingCallBroadcast(java.lang.String,java.lang.String)>','<com.android.internal.telephony.CallManager: boolean hasActiveBgCall()>','<android.telephony.PhoneStateListener$1: void onDataConnectionStateChanged(int,int)>','<android.widget.TextView: int getExtendedPaddingTop()>','<com.android.internal.policy.impl.PatternUnlockScreen: void onKeyboardChange(boolean)>','<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.RetryManager$RetryRec: void <init>(int,int)>','<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>','<android.net.DummyDataStateTracker: java.lang.String toString()>','<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)>','<android.media.effect.effects.BackDropperEffect: android.media.effect.EffectUpdateListener access$000(android.media.effect.effects.BackDropperEffect)>','<android.webkit.WebViewClassic: boolean copySelection()>','<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>','<android.net.sip.SipProfile: java.lang.String access$702(android.net.sip.SipProfile,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isTopActivityImmersive()>','<android.widget.Editor$Blink: void cancel()>','<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>','<android.os.storage.StorageVolume: boolean equals(java.lang.Object)>','<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>','<com.android.server.am.BatteryStatsService: android.bluetooth.BluetoothHeadset access$000(com.android.server.am.BatteryStatsService)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void initSstIcc()>','<android.util.MathUtils: float sq(float)>','<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>','<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>','<android.security.KeyChainException: void <init>(java.lang.Throwable)>','<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String,java.lang.String)>','<com.android.internal.widget.SlidingTab$Slider: void setState(int)>','<android.webkit.DeviceMotionService$1: void <init>(android.webkit.DeviceMotionService)>','<com.android.server.am.AppBindRecord: void dumpInIntentBind(java.io.PrintWriter,java.lang.String)>','<android.app.LoadedApk$WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>','<android.net.wifi.WifiStateMachine: int access$9208(android.net.wifi.WifiStateMachine)>','<android.net.nsd.INsdManager$Stub: android.net.nsd.INsdManager asInterface(android.os.IBinder)>','<android.content.pm.PackageParser$Instrumentation: void setPackageName(java.lang.String)>','<android.app.Activity: void setIntent(android.content.Intent)>','<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()>','<android.animation.AnimatorSet: boolean isRunning()>','<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String,boolean)>','<android.view.View: void sendAccessibilityEvent(int)>','<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)>','<com.android.server.am.ActivityStack: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.os.IBinder,java.lang.String,int,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[])>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection clear()>','<android.webkit.JWebCoreJavaBridge: void finalize()>','<com.android.server.am.ActivityManagerService: void registerProcessObserver(android.app.IProcessObserver)>','<com.android.internal.telephony.BaseCommands: void unregisterForResendIncallMute(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteScanWifiLockAcquiredLocked()>','<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>','<com.android.internal.widget.ActionBarContainer: void onFinishInflate()>','<com.android.internal.os.LoggingPrintStream: void <init>()>','<com.android.internal.telephony.OperatorInfo: java.lang.String toString()>','<android.view.KeyCharacterMap$1: void <init>()>','<com.android.server.net.NetworkStatsService$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredNetworkType(int,android.os.Message)>','<com.android.internal.widget.LockPatternView$SavedState: java.lang.String getSerializedPattern()>','<com.android.internal.telephony.cat.Menu: void <init>(android.os.Parcel,com.android.internal.telephony.cat.Menu$1)>','<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>','<com.android.internal.widget.multiwaveview.GlowPadView$1: void <init>(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.app.FragmentManagerImpl$3: void <init>(android.app.FragmentManagerImpl,java.lang.String,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onNVReady()>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: void <init>(android.test.IsolatedContext$MockAccountManager,java.lang.Object)>','<android.widget.AbsListView: void <init>(android.content.Context)>','<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>','<android.server.BluetoothHealthProfileHandler: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<android.app.Service: void onTaskRemoved(android.content.Intent)>','<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: void <init>(com.android.internal.policy.impl.PhoneWindowManager,android.view.InputChannel,android.os.Looper)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>','<android.graphics.Paint$Align: void <clinit>()>','<android.content.ComponentName: void <init>(android.os.Parcel)>','<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)>','<android.os.Bundle: java.lang.String getPairValue()>','<android.widget.AbsListView: boolean resurrectSelectionIfNeeded()>','<android.widget.SpellChecker: void spellCheck(int,int)>','<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)>','<android.media.IAudioService$Stub$Proxy: int getRingerMode()>','<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>','<com.android.server.am.UsageStatsService: void notePauseComponent(android.content.ComponentName)>','<android.net.wifi.WifiNative: boolean p2pListen(int)>','<android.app.ActivityManager$ProcessErrorStateInfo$1: android.app.ActivityManager$ProcessErrorStateInfo[] newArray(int)>','<android.widget.TextView: void resetErrorChangedFlag()>','<com.android.internal.telephony.gsm.GSMPhone: void rejectCall()>','<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>','<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()>','<android.webkit.WebResourceResponse: java.io.InputStream getData()>','<com.android.internal.telephony.IccFileHandler: void setAid(java.lang.String)>','<android.os.IHardwareService$Stub$Proxy: boolean getFlashlightEnabled()>','<android.net.wifi.WifiManager$WifiLock: void release()>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec: void <init>(int,java.lang.String,int,int,int,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$2902(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)>','<android.content.res.TypedArray: java.lang.String getPositionDescription()>','<android.net.NetworkPolicy: boolean isOverLimit(long)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])>','<android.webkit.WebView: void documentHasImages(android.os.Message)>','<android.app.LoadedApk$ServiceDispatcher$DeathMonitor: void <init>(android.app.LoadedApk$ServiceDispatcher,android.content.ComponentName,android.os.IBinder)>','<android.telephony.NeighboringCellInfo: void <clinit>()>','<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>','<com.android.internal.telephony.cat.BerTlv: com.android.internal.telephony.cat.BerTlv decode(byte[])>','<com.android.internal.telephony.PhoneProxy: void <clinit>()>','<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>','<com.android.internal.telephony.PhoneBase: boolean getIccRecordsLoaded()>','<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[],int,int)>','<android.filterfw.core.Filter: void clearOutputs()>','<com.android.internal.telephony.gsm.SIMRecords: void onRadioOffOrNotAvailable()>','<android.opengl.GLLogWrapper: void glGetLightfv(int,int,float[],int)>','<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>','<android.filterfw.core.GLEnvironment: void swapBuffers()>','<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>','<android.net.wifi.SupplicantStateTracker: void access$300(android.net.wifi.SupplicantStateTracker,android.net.wifi.StateChangeResult)>','<android.view.Display: void getMetrics(android.util.DisplayMetrics)>','<com.android.server.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long)>','<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>','<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>','<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)>','<android.bluetooth.BluetoothDeviceProfileState: void access$5000(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.widget.RemoteViews$SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>','<android.content.pm.PackageParser$Component: android.content.ComponentName getComponentName()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimLiLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<android.os.AsyncTask$SerialExecutor$1: void run()>','<com.android.internal.policy.impl.PasswordUnlockScreen$2: void onClick(android.view.View)>','<android.accounts.AuthenticatorDescription$1: void <init>()>','<android.server.BluetoothAdapterProperties: void clear()>','<android.view.Window: void setFormat(int)>','<com.android.internal.policy.impl.RecentApplicationsDialog: void onStart()>','<android.media.IAudioService$Stub$Proxy: android.os.IBinder asBinder()>','<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>','<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIISC(int,int,int,int,com.android.internal.view.IInputContextCallback)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$000(com.android.server.sip.SipSessionGroup$SipSessionImpl,int,java.lang.String)>','<android.preference.Preference: android.os.Bundle getExtras()>','<android.net.wifi.WifiStateMachine: int access$7104(android.net.wifi.WifiStateMachine)>','<android.graphics.Matrix$1: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>','<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()>','<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>','<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>','<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>','<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)>','<android.content.ContentValues: int size()>','<android.net.nsd.DnsSdTxtRecord: void <init>(android.net.nsd.DnsSdTxtRecord)>','<com.android.internal.app.AlertController: int access$800(com.android.internal.app.AlertController)>','<android.content.ContentValues: void <init>(android.content.ContentValues)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setSignalStrengthDefaultValues()>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1)>','<com.android.internal.policy.impl.FaceUnlock: void handleUnlock()>','<android.service.wallpaper.IWallpaperService$Stub: void <init>()>','<com.android.server.AppWidgetServiceImpl: void systemReady(boolean)>','<android.widget.AbsListView: void drawableStateChanged()>','<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>','<android.graphics.drawable.BitmapDrawable: void <init>()>','<android.server.BluetoothService: android.os.ParcelUuid[] getUuids()>','<android.net.nsd.DnsSdTxtRecord$1: android.net.nsd.DnsSdTxtRecord createFromParcel(android.os.Parcel)>','<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>','<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>','<android.view.animation.GridLayoutAnimationController: int getDirection()>','<com.android.server.NotificationManagerService$SettingsObserver: void update()>','<android.media.AudioService: android.content.Context access$6900(android.media.AudioService)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>','<android.view.View: boolean awakenScrollBars(int,boolean)>','<android.media.AudioService: void clearAllScoClients(int,boolean)>','<android.widget.AdapterView: void access$300(android.widget.AdapterView)>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.Item retrieveItem(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.internal.telephony.ApnContext: void setWaitingApns(java.util.ArrayList)>','<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String)>','<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>','<android.os.RemoteCallback$LocalCallback: void sendResult(android.os.Bundle)>','<android.app.SearchableInfo: int getSearchButtonText()>','<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)>','<android.provider.Telephony$Sms: boolean isOutgoingFolder(int)>','<android.os.IPowerManager$Stub$Proxy: void setStayOnSetting(int)>','<android.webkit.WebViewCore$GetUrlData: void <init>()>','<com.android.server.am.TransferPipe: void go(java.io.FileDescriptor,long)>','<android.content.Intent: android.content.Intent addFlags(int)>','<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>','<android.renderscript.BaseObj: void setID(int)>','<com.android.internal.view.InputConnectionWrapper: boolean setComposingRegion(int,int)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void clear()>','<android.widget.TextView$Marquee: void <init>(android.widget.TextView)>','<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>','<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>','<com.android.internal.telephony.cat.CommandDetails$1: com.android.internal.telephony.cat.CommandDetails createFromParcel(android.os.Parcel)>','<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.widget.AbsListView: void onMeasure(int,int)>','<android.view.View: android.view.View getRootView()>','<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>','<android.webkit.WebViewClassic: void onFixedLengthZoomAnimationStart()>','<android.app.LoadedApk$ServiceDispatcher: void <init>(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>','<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>','<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)>','<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>','<android.text.AndroidCharacter: void <init>()>','<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>','<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfacePairs()>','<com.android.internal.widget.PointerLocationView$PointerState: int access$1102(com.android.internal.widget.PointerLocationView$PointerState,int)>','<android.net.wifi.WpsInfo: void <init>(android.net.wifi.WpsInfo)>','<com.android.server.NotificationManagerService: boolean access$1502(com.android.server.NotificationManagerService,boolean)>','<android.webkit.WebView: void freeMemory()>','<android.util.SparseArray: int indexOfKey(int)>','<android.widget.AdapterView: void checkSelectionChanged()>','<android.view.View: int computeHorizontalScrollRange()>','<com.android.internal.telephony.cdma.CdmaCall: void dispose()>','<android.webkit.Plugin$DefaultClickHandler: void onClick(android.content.DialogInterface,int)>','<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>','<android.webkit.CallbackProxy$ResultTransport: void <init>(java.lang.Object)>','<android.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>','<com.android.internal.util.ArrayUtils: int idealByteArraySize(int)>','<android.text.method.CharacterPickerDialog$OptionsAdapter: java.lang.Object getItem(int)>','<android.accessibilityservice.AccessibilityService$1: void <init>(android.accessibilityservice.AccessibilityService)>','<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>','<android.net.rtp.RtpStream: int getSocket()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void initIncomingCall(android.net.sip.SipAudioCall,boolean)>','<android.widget.Editor$SuggestionsPopupWindow: void initContentView()>','<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder startPositionMillis(int)>','<com.android.internal.os.RuntimeInit: void <init>()>','<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,int,int,java.lang.String,android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1)>','<android.view.WindowManagerImpl: void dumpGfxInfo(java.io.FileDescriptor)>','<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>','<android.animation.Keyframe$FloatKeyframe: float getFloatValue()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToLockScreen()>','<com.android.internal.policy.impl.PhoneWindowManager$11: void onServiceDisconnected(android.content.ComponentName)>','<android.graphics.Shader$TileMode: android.graphics.Shader$TileMode[] values()>','<com.android.internal.telephony.cdma.CDMAPhone: void exitEmergencyCallbackMode()>','<com.android.internal.telephony.cdma.SmsMessage: boolean isMWIClearMessage()>','<android.location.LocationProvider: void <init>(java.lang.String,android.location.ILocationManager)>','<android.net.wifi.WifiStateMachine: void access$7500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.location.PassiveProvider: boolean requestSingleShotFix()>','<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>','<android.app.ActionBar$LayoutParams: void <init>(int,int,int)>','<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>','<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$HaltingState access$1300(com.android.internal.util.StateMachine$SmHandler)>','<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>','<android.app.StatusBarManager: void disable(int)>','<android.preference.GenericInflater: android.preference.GenericInflater$Factory getFactory()>','<android.graphics.drawable.GradientDrawable: void setSize(int,int)>','<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>','<android.widget.ProgressBar$RefreshData: void <init>(android.widget.ProgressBar$1)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.FloatKeyframeSet)>','<android.widget.Scroller: int timePassed()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void setBatteryState(int,int,int,int,int,int)>','<android.view.ViewDebug$3: java.lang.Void[] pre()>','<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>','<com.android.internal.telephony.Call: void hangupIfAlive()>','<android.widget.AdapterViewAnimator: void showTapFeedback(android.view.View)>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)>','<android.location.INetInitiatedListener$Stub: android.os.IBinder asBinder()>','<android.widget.Spinner$DropDownAdapter: boolean areAllItemsEnabled()>','<com.android.server.WifiService: void access$1300(com.android.server.WifiService)>','<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>','<android.widget.ListView: void addHeaderView(android.view.View)>','<android.media.AudioService: android.app.KeyguardManager access$7102(android.media.AudioService,android.app.KeyguardManager)>','<android.view.inputmethod.InputMethodManager: void dispatchKeyEvent(android.content.Context,int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>','<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)>','<android.os.Parcel: void writeException(java.lang.Exception)>','<com.android.internal.telephony.DataConnection: void access$2300(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.webkit.WebViewCore: void access$4500(android.webkit.WebViewCore,int,boolean)>','<android.filterfw.core.NativeBuffer: void <init>(int)>','<android.app.Notification: void <init>(android.os.Parcel)>','<android.widget.Scroller: int getCurrY()>','<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()>','<android.bluetooth.BluetoothDeviceProfileState: void access$6500(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>','<android.os.Parcel: void writeValue(java.lang.Object)>','<android.view.View: void addFocusables(java.util.ArrayList,int)>','<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>','<android.app.ActivityThread: void handleConfigurationChanged(android.content.res.Configuration,android.content.res.CompatibilityInfo)>','<android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>','<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>','<android.accounts.AccountManagerService: java.util.HashMap readAuthTokensForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>','<android.opengl.GLLogWrapper: void glColor4x(int,int,int,int)>','<android.webkit.BrowserFrame: void externalRepresentation(android.os.Message)>','<android.filterfw.core.SimpleFrame: boolean hasNativeAllocation()>','<android.content.pm.IPackageManager$Stub$Proxy: int getInstallLocation()>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<com.android.internal.view.menu.SubMenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>','<com.android.server.net.NetworkStatsCollection: void read(java.io.InputStream)>','<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>','<android.webkit.ViewManager$ChildView$2: void <init>(android.webkit.ViewManager$ChildView)>','<android.view.ViewGroup: void onDebugDrawMargins(android.graphics.Canvas)>','<com.android.internal.telephony.PhoneProxy: boolean getMute()>','<android.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)>','<android.webkit.HTML5VideoView$TimeupdateTask: void <init>(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>','<com.android.internal.policy.impl.GlobalActions$SinglePressAction: boolean onLongPress()>','<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>','<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>','<android.webkit.WebViewClassic$WebViewInputConnection: void setupEditorInfo(android.view.inputmethod.EditorInfo)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doRename(int,java.lang.String,java.lang.String)>','<android.database.DatabaseUtils: void <clinit>()>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPersistentApplications(int)>','<android.content.res.Configuration: void setToDefaults()>','<com.android.internal.widget.multiwaveview.TargetDrawable: void <clinit>()>','<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopSensor(int,int)>','<android.graphics.drawable.InsetDrawable: void <init>()>','<com.android.server.wm.WindowManagerService: void removeWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.internal.telephony.sip.SipCommandInterface: void queryCdmaRoamingPreference(android.os.Message)>','<com.android.server.DevicePolicyManagerService$1: void <init>(com.android.server.DevicePolicyManagerService)>','<com.android.server.location.LocationBasedCountryDetector: void stop()>','<android.app.ActivityThread$CreateBackupAgentData: java.lang.String toString()>','<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.LinkCapabilities,java.lang.String,java.lang.String)>','<com.android.server.WifiService: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>','<android.view.VelocityTracker: float getYVelocity(int)>','<android.view.ScaleGestureDetector$SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>','<android.net.Uri$HierarchicalUri: java.lang.String getFragment()>','<android.os.Message: void markInUse()>','<android.media.MediaPlayer: android.media.MediaPlayer$OnInfoListener access$800(android.media.MediaPlayer)>','<android.widget.Spinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter)>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean setComposingText(java.lang.CharSequence,int)>','<com.android.internal.telephony.cat.PresentationType: void <clinit>()>','<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>','<com.android.server.net.NetworkStatsService: void access$600(com.android.server.net.NetworkStatsService)>','<android.media.AudioService$SetModeDeathHandler: int getMode()>','<android.bluetooth.BluetoothInputDevice: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.content.SyncStats: void <init>()>','<android.widget.ZoomButtonsController: boolean isAutoDismissed()>','<android.filterfw.core.FrameManager: void <init>()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: void setRadius(float)>','<com.android.internal.policy.impl.LockPatternKeyguardView$2: void userActivity(android.view.View)>','<android.view.View: void bringToFront()>','<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()>','<android.media.AudioManager$FocusEventHandlerDelegate: void <init>(android.media.AudioManager)>','<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>','<com.android.internal.policy.impl.PhoneWindowManager: void showOrHideRecentAppsDialog(int)>','<android.filterfw.core.Frame: void setTimestamp(long)>','<android.view.View: boolean hasIdentityMatrix()>','<android.hardware.Camera$Parameters: int getMaxZoom()>','<android.app.Activity: boolean moveTaskToBack(boolean)>','<android.os.ICancellationSignal$Stub: void <init>()>','<com.android.internal.telephony.CallManager: void registerForPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.webkit.CookieManagerClassic$1: java.lang.Object doInBackground(java.lang.Object[])>','<android.webkit.CallbackProxy: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.DataConnection$DcInactiveState: boolean processMessage(android.os.Message)>','<com.android.server.sip.SipService: int access$902(com.android.server.sip.SipService,int)>','<android.widget.ExpandableListConnector$MyDataSetObserver: void <init>(android.widget.ExpandableListConnector)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pConfig access$4202(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pConfig)>','<com.android.server.wm.ViewServer: void <init>(com.android.server.wm.WindowManagerService,int)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$1800(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.os.ProcessStats: java.lang.String printCurrentLoad()>','<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult)>','<com.android.server.usb.UsbService: void setMassStorageBackingFile(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean isDataAllowed()>','<com.android.server.sip.SipSessionListenerProxy$2: void run()>','<android.os.Message$1: void <init>()>','<com.android.internal.view.IInputContext$Stub$Proxy: void finishComposingText()>','<android.content.SyncManager$SyncHandler: long insertStartSyncEvent(android.content.SyncOperation)>','<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>','<android.view.SurfaceSession: void <init>()>','<android.webkit.PluginManager: boolean containsPluginPermissionAndSignatures(java.lang.String)>','<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>','<android.media.IRemoteControlClient$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>','<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>','<android.os.StrictMode$AndroidBlockGuardPolicy: void setPolicyMask(int)>','<android.content.SyncManager: int access$2700()>','<com.android.internal.telephony.sip.SipPhone: void saveClirSetting(int)>','<com.android.internal.telephony.gsm.SIMRecords: int dispatchGsmMessage(com.android.internal.telephony.SmsMessageBase)>','<com.android.internal.statusbar.StatusBarIcon: int describeContents()>','<android.location.LocationManager$ListenerTransport: void onProviderEnabled(java.lang.String)>','<android.net.wifi.WifiStateMachine: void access$800(android.net.wifi.WifiStateMachine,android.os.Message,int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: android.net.LinkProperties getLinkProperties(java.lang.String)>','<android.webkit.WebViewClassic: android.os.Message access$1700(android.webkit.WebViewClassic)>','<android.server.BluetoothA2dpService: void finalize()>','<android.widget.Spinner$DropDownAdapter: boolean isEmpty()>','<android.webkit.WebSettingsClassic: void setCacheMode(int)>','<android.bluetooth.BluetoothDeviceProfileState: void deferProfileServiceMessage(int)>','<android.content.ContentService: android.content.IContentService main(android.content.Context,boolean)>','<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation$ActivityMonitor,long)>','<com.android.server.MountService$3: void run()>','<android.os.DropBoxManager$Entry: void <clinit>()>','<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] preceding(int)>','<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>','<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>','<android.net.http.Request: android.net.http.EventHandler getEventHandler()>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void detach()>','<android.server.BluetoothAdapterStateMachine$HotOff: void enter()>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>','<android.view.IApplicationToken$Stub: void <init>()>','<android.graphics.drawable.LevelListDrawable: void <init>()>','<com.android.server.AttributeCache: void <init>(android.content.Context)>','<android.text.HtmlToSpannedConverter: void endDocument()>','<com.android.uiautomator.core.UiDevice$2: boolean apply(java.lang.Object)>','<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>','<android.location.Address: java.lang.String getThoroughfare()>','<android.bluetooth.BluetoothHealth: boolean registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)>','<com.android.server.pm.Installer: int install(java.lang.String,int,int)>','<com.android.internal.telephony.cat.CatService: void dispose()>','<android.app.SharedPreferencesImpl: java.util.Map access$400(android.app.SharedPreferencesImpl)>','<android.app.ActivityThread$BindServiceData: java.lang.String toString()>','<android.net.Uri$OpaqueUri: android.net.Uri readFrom(android.os.Parcel)>','<com.android.internal.telephony.CallManager: java.lang.String toString()>','<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>','<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()>','<com.android.internal.telephony.sip.SipPhone: boolean handleInCallMmiCommands(java.lang.String)>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean updatePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>','<com.android.internal.telephony.cat.RilMessageDecoder: void access$600(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.cat.RilMessage)>','<com.android.internal.telephony.DataConnectionTracker: void <clinit>()>','<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkType()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>','<android.graphics.Bitmap: int getDensity()>','<android.view.ViewRootImpl$SystemUiVisibilityInfo: void <init>()>','<com.android.internal.app.ActionBarImpl: void animateToMode(boolean)>','<com.android.vcard.VCardProperty: java.util.List getGroupList()>','<com.android.internal.policy.impl.PatternUnlockScreen: void access$1000(com.android.internal.policy.impl.PatternUnlockScreen,com.android.internal.policy.impl.PatternUnlockScreen$FooterMode)>','<android.app.Activity$ManagedCursor: android.database.Cursor access$100(android.app.Activity$ManagedCursor)>','<com.android.internal.telephony.DataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>','<android.app.ActivityThread$StopInfo: void run()>','<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>','<com.android.server.PowerManagerService: boolean access$7100(com.android.server.PowerManagerService)>','<android.inputmethodservice.Keyboard: java.util.List getKeys()>','<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getNativeLibraryPath()>','<android.widget.ArrayAdapter: void notifyDataSetChanged()>','<android.content.Intent: android.net.Uri getData()>','<android.widget.ExpandableListConnector: void setExpandedGroupMetadataList(java.util.ArrayList)>','<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo get()>','<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder$StateStart access$700(com.android.internal.telephony.cat.RilMessageDecoder)>','<com.android.server.net.NetworkStatsService: android.content.Context access$1200(com.android.server.net.NetworkStatsService)>','<android.webkit.ZoomManager: boolean canZoomOut()>','<com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error valueOf(java.lang.String)>','<com.android.internal.widget.LockPatternView: void setDisplayMode(com.android.internal.widget.LockPatternView$DisplayMode)>','<android.content.SyncStorageEngine: java.util.List getPeriodicSyncs(android.accounts.Account,int,java.lang.String)>','<com.android.internal.telephony.SMSDispatcher: void dispatchBroadcastMessage(android.telephony.SmsCbMessage)>','<android.view.View: void offsetLeftAndRight(int)>','<android.net.http.IdleCache$IdleReaper: void run()>','<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()>','<android.view.View: void onDraw(android.graphics.Canvas)>','<android.telephony.ServiceState: void fillInNotifierBundle(android.os.Bundle)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedFragment(java.lang.String)>','<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>','<com.android.server.am.TransferPipe: void go(com.android.server.am.TransferPipe$Caller,android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>','<com.android.server.pm.PackageManagerService$DumpState: void <init>()>','<android.server.BluetoothService: void setPairable()>','<android.preference.PreferenceInflater: android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup)>','<android.webkit.PluginFullScreenHolder$CustomFrameLayout: boolean onKeyUp(int,android.view.KeyEvent)>','<android.app.AlertDialog$Builder: void <init>(android.content.Context)>','<android.app.Dialog$1: void run()>','<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>','<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>','<android.widget.AbsSeekBar: int getThumbOffset()>','<android.accessibilityservice.UiTestAutomationBridge: java.util.List findAccessibilityNodeInfosByText(int,long,java.lang.String)>','<android.filterfw.core.Filter: void init()>','<android.filterfw.core.FilterPort: void open()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()>','<android.view.animation.AnimationSet: void restoreChildrenStartOffset()>','<android.hardware.Camera$Size: int hashCode()>','<com.android.server.AlarmManagerService: void access$700(com.android.server.AlarmManagerService,java.util.ArrayList,java.util.ArrayList,long)>','<android.webkit.WebViewClassic$InvokeListBox: boolean access$7600(android.webkit.WebViewClassic$InvokeListBox)>','<android.net.Uri$StringUri: java.lang.String getEncodedQuery()>','<com.android.internal.widget.multiwaveview.Ease$Quart$3: void <init>()>','<com.android.internal.telephony.ServiceStateTracker: boolean getDesiredPowerState()>','<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>','<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.os.Handler access$800(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager: void <init>(com.android.internal.policy.impl.KeyguardStatusViewManager,android.widget.TextView)>','<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)>','<android.view.GLES20Canvas: void setDrawFilter(android.graphics.DrawFilter)>','<android.webkit.WebSettingsClassic: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()>','<com.android.server.am.ActivityRecord: void putInHistory()>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void plug(long,long)>','<com.android.server.connectivity.Vpn: void protect(android.os.ParcelFileDescriptor,java.lang.String)>','<android.widget.ExpandableListConnector$MyDataSetObserver: void onChanged()>','<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>','<android.net.wifi.WifiConfiguration$1: android.net.wifi.WifiConfiguration createFromParcel(android.os.Parcel)>','<android.widget.ArrayAdapter: void clear()>','<com.android.internal.telephony.cdma.RuimFileHandler: void logd(java.lang.String)>','<android.content.pm.PackageParser: void <clinit>()>','<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: boolean equals(java.lang.Object)>','<android.widget.AbsListView: void updateScrollIndicators()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isRegister()>','<com.android.server.am.ActivityStack: android.app.ActivityManager$TaskThumbnails getTaskThumbnailsLocked(com.android.server.am.TaskRecord)>','<com.android.i18n.phonenumbers.RegexCache: void <init>(int)>','<com.android.server.sip.SipWakeLock: void <init>(android.os.PowerManager)>','<android.net.wifi.WifiStateTracker: void setDependencyMet(boolean)>','<android.os.Parcel: android.os.IBinder[] createBinderArray()>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DialogListener access$300(android.net.wifi.p2p.WifiP2pManager$Channel)>','<android.view.IRotationWatcher$Stub: android.os.IBinder asBinder()>','<android.content.SyncStats: void <clinit>()>','<com.android.server.usb.UsbSettingsManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String)>','<android.graphics.Canvas: android.graphics.Matrix getMatrix()>','<com.android.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)>','<com.android.server.am.StrictModeViolationDialog$1: void <init>(com.android.server.am.StrictModeViolationDialog)>','<android.location.Criteria: int access$102(android.location.Criteria,int)>','<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>','<android.view.MotionEvent: int getActionMasked()>','<com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>','<android.view.ViewRootImpl: boolean isLayoutRequested()>','<android.content.pm.ManifestDigest: android.content.pm.ManifestDigest fromAttributes(java.util.jar.Attributes)>','<android.widget.Editor: android.text.method.WordIterator getWordIterator()>','<com.android.server.WifiService: boolean isMulticastEnabled()>','<android.net.NetworkTemplate: void <clinit>()>','<com.android.internal.telephony.cat.ResultCode: com.android.internal.telephony.cat.ResultCode[] values()>','<com.android.internal.telephony.gsm.SmsMessage$SubmitPdu: void <init>()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String generateTag()>','<com.android.internal.os.BatteryStatsImpl: void doUnplugLocked(long,long)>','<android.provider.BrowserContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>','<android.location.ILocationListener$Stub$Proxy: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.inputmethodservice.Keyboard: int getHeight()>','<com.android.server.sip.SipHelper: void sendReferNotify(javax.sip.Dialog,java.lang.String)>','<com.android.server.MountService$UmsEnableCallBack: void <init>(com.android.server.MountService,java.lang.String,java.lang.String,boolean)>','<com.android.server.net.NetworkStatsRecorder: void resetLocked()>','<android.content.SyncStatusInfo: int describeContents()>','<android.view.InputEvent: android.view.InputDevice getDevice()>','<com.android.server.MountService: int verifyEncryptionPassword(java.lang.String)>','<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.policy.impl.GlobalActions$3: void onPress()>','<com.android.server.ConnectivityService: void access$800(com.android.server.ConnectivityService,android.net.NetworkInfo)>','<com.android.server.location.LocationProviderProxy$Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getVoip()>','<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>','<android.view.Surface: void <init>()>','<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>','<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>','<android.hardware.LegacySensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.CommandDetails retrieveCommandDetails(com.android.internal.telephony.cat.ComprehensionTlv)>','<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>','<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)>','<android.util.SparseIntArray: int get(int,int)>','<android.webkit.WebViewClassic: void goBackOrForward(int)>','<android.webkit.HTML5VideoInline: android.graphics.SurfaceTexture getSurfaceTexture(int)>','<android.net.Uri$OpaqueUri: int getPort()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>','<android.widget.ListPopupWindow: android.view.View getSelectedView()>','<com.android.server.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName)>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallHeld(android.net.sip.SipAudioCall)>','<android.os.Debug: int getGlobalFreedSize()>','<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>','<android.content.ContentProvider$Transport: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<com.android.internal.widget.EditableInputConnection: boolean endBatchEdit()>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.CharSequence subSequence(int,int)>','<android.security.SystemKeyStore: byte[] retrieveKey(java.lang.String)>','<android.location.IGeocodeProvider$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ActivityManager: java.util.List getRunningAppProcesses()>','<com.android.server.input.PersistentDataStore$InputDeviceState: void <clinit>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection addMetadata(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata)>','<android.content.res.XmlBlock$Parser: int nextToken()>','<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>','<android.os.UEventObserver$UEventThread: void addObserver(java.lang.String,android.os.UEventObserver)>','<android.app.ActivityOptions$1: void <init>(android.app.ActivityOptions,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)>','<android.net.wifi.WifiStateMachine: boolean access$1002(android.net.wifi.WifiStateMachine,boolean)>','<android.location.LocationManager$GpsStatusListenerTransport$1: void <init>(android.location.LocationManager$GpsStatusListenerTransport)>','<com.android.server.am.ActivityStack: void moveHomeToFrontLocked()>','<android.webkit.ZoomManager: void updateZoomPicker()>','<android.net.sip.SipAudioCall$Listener: void <init>()>','<android.app.ActivityManager$ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>','<android.app.SearchDialog$SearchBar: void <init>(android.content.Context,android.util.AttributeSet)>','<android.webkit.CookieManager: void removeExpiredCookie()>','<android.server.BluetoothAdapterStateMachine: void access$1000(android.server.BluetoothAdapterStateMachine,boolean)>','<com.android.server.connectivity.Tethering: boolean isBluetooth(java.lang.String)>','<android.view.View$TransformationInfo: void <init>()>','<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>','<android.database.sqlite.SQLiteStatementInfo: void <init>()>','<com.android.internal.app.IBatteryStats$Stub: void <init>()>','<android.app.Dialog: boolean isShowing()>','<android.app.ITransientNotification$Stub$Proxy: void show()>','<android.view.KeyEvent: android.view.KeyEvent copy()>','<android.net.NetworkPolicy: int hashCode()>','<android.content.pm.FeatureInfo$1: android.content.pm.FeatureInfo createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.PhoneProxy: void unregisterForSuppServiceNotification(android.os.Handler)>','<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>','<android.view.IWindowManager$Stub$Proxy: void getRealDisplaySize(android.graphics.Point)>','<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>','<com.android.internal.widget.LockPatternUtils: int getCurrentUser()>','<android.view.LayoutInflater$BlinkLayout$1: void <init>(android.view.LayoutInflater$BlinkLayout)>','<android.server.BluetoothService: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>','<android.widget.SearchView$1: void run()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<com.android.internal.telephony.cat.ToneSettings: void <init>(android.os.Parcel,com.android.internal.telephony.cat.ToneSettings$1)>','<com.android.server.location.MockProvider: boolean requiresSatellite()>','<com.android.internal.telephony.IccVmFixedException: void <init>(java.lang.String)>','<android.server.BluetoothService: void access$100(android.server.BluetoothService,int,int)>','<android.content.pm.UserInfo: void <init>()>','<android.net.LocalServerSocket: void <init>(java.lang.String)>','<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>','<android.view.GLES20Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>','<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOnLocked()>','<com.android.internal.telephony.PhoneProxy: boolean needsOtaServiceProvisioning()>','<com.android.internal.telephony.RIL: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>','<android.content.ComponentName$1: android.content.ComponentName[] newArray(int)>','<android.renderscript.ProgramStore: boolean isColorMaskBlueEnabled()>','<android.webkit.WebViewClassic$8: void onPostExecute(android.webkit.WebViewCore$DrawData)>','<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>','<android.webkit.BrowserFrame: void <clinit>()>','<android.app.Instrumentation: android.os.Bundle getBinderCounts()>','<com.android.internal.statusbar.StatusBarIcon: java.lang.String toString()>','<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>','<android.view.IWindowManager$Stub$Proxy: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>','<android.view.IWindowManager$Stub$Proxy: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>','<android.hardware.Camera$Parameters: void setFocusAreas(java.util.List)>','<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>','<android.content.Intent: boolean hasExtra(java.lang.String)>','<com.android.internal.telephony.RestrictedState: void <init>()>','<android.database.ContentObserver: void <init>(android.os.Handler)>','<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration access$002(android.net.wifi.WifiApConfigStore,android.net.wifi.WifiConfiguration)>','<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,long,java.util.Map)>','<android.renderscript.Element: android.renderscript.Element I64_4(android.renderscript.RenderScript)>','<android.view.inputmethod.InputBinding: int describeContents()>','<com.android.server.MountService$UmsEnableCallBack: void handleFinished()>','<com.android.server.input.InputManagerService: void monitor()>','<android.net.http.LoggingEventHandler: void headers(android.net.http.Headers)>','<android.app.ActivityManagerProxy: boolean removeTask(int,int)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.lang.Object access$000(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>','<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.Throwable)>','<android.animation.AnimatorSet$DependencyListener: void onAnimationCancel(android.animation.Animator)>','<com.android.internal.telephony.cat.TextMessage: void <init>(android.os.Parcel,com.android.internal.telephony.cat.TextMessage$1)>','<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.KeyguardViewBase: void dispatchSystemUiVisibilityChanged(int)>','<android.os.Debug: void resetGlobalGcInvocationCount()>','<android.text.PackedIntVector: int width()>','<android.location.ILocationListener$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.IccRecords: boolean isCspPlmnEnabled()>','<android.renderscript.RenderScript: void nAllocationIoSend(int)>','<android.content.ClipData: java.lang.String toString()>','<com.android.server.LocationManagerService$LpCapabilityComparator: int compare(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<com.android.internal.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>','<android.app.backup.BackupDataInputStream: void <init>(android.app.backup.BackupDataInput)>','<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>','<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()>','<com.android.server.am.CompatModePackages: boolean getFrontActivityAskCompatModeLocked()>','<android.view.textservice.SpellCheckerSession$1: void <init>(android.view.textservice.SpellCheckerSession)>','<android.content.SyncStorageEngine: void addPeriodicSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub: android.os.IBinder asBinder()>','<android.telephony.NeighboringCellInfo: void setCid(int)>','<android.text.util.Linkify$4: int compare(android.text.util.LinkSpec,android.text.util.LinkSpec)>','<com.android.server.location.LocationProviderProxy: boolean supportsSpeed()>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendPhones(java.util.List,com.android.vcard.VCardPhoneNumberTranslationCallback)>','<android.opengl.ManagedEGLContext: javax.microedition.khronos.egl.EGLContext getContext()>','<android.bluetooth.BluetoothTetheringDataTracker: void stopReverseTether(java.lang.String)>','<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>','<android.text.style.SpellCheckSpan: int getSpanTypeId()>','<com.android.internal.telephony.cdma.CDMALTEPhone: void handleMessage(android.os.Message)>','<com.android.internal.telephony.sip.SipPhoneBase: void enableLocationUpdates()>','<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>','<android.bluetooth.BluetoothDeviceProfileState: void access$10800(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: boolean processMessage(android.os.Message)>','<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.media.IAudioService$Stub$Proxy: boolean isSpeakerphoneOn()>','<android.database.sqlite.SQLiteDatabase: void beginTransaction()>','<android.widget.ExpandableListConnector: boolean expandGroup(int)>','<com.android.server.am.ActivityStack: int indexOfActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>','<android.view.View: boolean isHapticFeedbackEnabled()>','<com.android.server.pm.PackageManagerService: java.util.List getUsers()>','<android.widget.RemoteViews$OnClickHandler: boolean onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)>','<android.accounts.AccountManagerService$UserAccounts: void <init>(android.content.Context,int)>','<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: int getMinimumHeight()>','<com.android.internal.telephony.cat.IconLoader: void <clinit>()>','<android.view.textservice.SpellCheckerSession: void <init>(android.view.textservice.SpellCheckerInfo,com.android.internal.textservice.ITextServicesManager,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,android.view.textservice.SpellCheckerSubtype)>','<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaMin()>','<com.android.server.am.ActivityManagerService: void attachApplication(android.app.IApplicationThread)>','<android.inputmethodservice.IInputMethodWrapper: void hideSoftInput(int,android.os.ResultReceiver)>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void queueRequestedPositionToLoad(int)>','<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>','<android.webkit.CallbackProxy$ResultTransport: void setResult(java.lang.Object)>','<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>','<android.os.Environment: java.io.File getDownloadCacheDirectory()>','<android.location.Location: int describeContents()>','<com.android.server.EventLogTags: void writeRestoreTransportFailure()>','<android.server.search.Searchables: void <init>(android.content.Context)>','<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>','<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent(android.view.MotionEvent)>','<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothService access$2400(android.server.BluetoothAdapterStateMachine)>','<android.content.res.CompatibilityInfo: void <init>(android.content.res.CompatibilityInfo$1)>','<com.android.internal.appwidget.IAppWidgetHost$Stub: android.os.IBinder asBinder()>','<android.view.View: boolean hasTransientState()>','<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>','<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>','<android.app.ActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>','<android.telephony.NeighboringCellInfo$1: void <init>()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void access$700(com.android.internal.policy.impl.SimPukUnlockScreen,int)>','<android.server.BluetoothService: void switchConnectable(boolean)>','<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>','<com.android.internal.telephony.PhoneProxy: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()>','<android.view.View: android.view.DisplayList getDisplayList()>','<android.widget.TextView: int getLineHeight()>','<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>','<android.os.Parcel: void writeBooleanArray(boolean[])>','<com.android.internal.telephony.PhoneProxy: void getAvailableNetworks(android.os.Message)>','<android.bluetooth.BluetoothDeviceProfileState: void access$11300(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.net.Proxy: void validate(java.lang.String,java.lang.String,java.lang.String)>','<android.view.GLES20Canvas: void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint)>','<android.media.Metadata: boolean has(int)>','<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void <init>(com.android.server.InputMethodManagerService)>','<com.android.internal.telephony.Call: boolean isDialingOrAlerting()>','<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener$Capitalize,boolean)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)>','<android.text.method.BaseMovementMethod: boolean scrollBottom(android.widget.TextView,android.text.Spannable)>','<android.view.KeyEvent: android.view.KeyEvent createFromParcelBody(android.os.Parcel)>','<android.webkit.WebViewInputDispatcher$DispatchEventQueue: void <init>(android.webkit.WebViewInputDispatcher$1)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void removeCallback(java.lang.Object)>','<com.android.internal.policy.impl.AccountUnlockScreen: void afterTextChanged(android.text.Editable)>','<com.android.server.MountService$MountServiceHandler: void <init>(com.android.server.MountService,android.os.Looper)>','<android.os.IPermissionController$Stub: android.os.IPermissionController asInterface(android.os.IBinder)>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfosResult(java.util.List,int)>','<android.view.textservice.TextInfo$1: android.view.textservice.TextInfo[] newArray(int)>','<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.telephony.sip.SipCommandInterface: void startDtmf(char,android.os.Message)>','<android.webkit.WebView: boolean access$1200(android.webkit.WebView,int)>','<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$100(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>','<android.graphics.Rect: boolean intersects(int,int,int,int)>','<android.view.IWindowManager$Stub$Proxy: void addWindowToken(android.os.IBinder,int)>','<com.android.internal.policy.impl.SimPukUnlockScreen: android.widget.TextView access$400(com.android.internal.policy.impl.SimPukUnlockScreen)>','<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>','<android.server.BluetoothService: boolean isEnabled()>','<com.android.internal.policy.impl.PhoneWindowManager$10: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<com.android.internal.os.RuntimeInit: void wtf(java.lang.String,java.lang.Throwable)>','<android.webkit.CacheManager$CacheResult: java.lang.String getMimeType()>','<android.database.sqlite.SQLiteDatabase$2: void <init>(java.lang.String)>','<android.widget.GridView: void smoothScrollToPosition(int)>','<com.android.internal.policy.impl.PhoneWindowManager$9: void run()>','<android.app.backup.IRestoreSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.nfc.INfcAdapterExtras$Stub: android.nfc.INfcAdapterExtras asInterface(android.os.IBinder)>','<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()>','<android.app.LoadedApk: void <init>(android.app.ActivityThread,java.lang.String,android.content.Context,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>','<android.app.LoaderManagerImpl: void doReportStart()>','<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>','<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>','<android.view.Window: void makeActive()>','<android.animation.LayoutTransition: long access$200(android.animation.LayoutTransition)>','<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconIndex()>','<android.provider.ContactsContract$Presence: void <init>()>','<android.webkit.HTML5VideoViewProxy: void dispatchOnStopFullScreen()>','<android.hardware.Camera$Parameters: float getVerticalViewAngle()>','<android.location.Address: void setPhone(java.lang.String)>','<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>','<android.os.TokenWatcher$Death: void finalize()>','<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(android.net.Uri)>','<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>','<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$2000(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.webkit.WebSettingsClassic$AutoFillProfile: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>','<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>','<com.android.common.io.MoreCloseables: void <init>()>','<android.server.BluetoothHealthProfileHandler: java.util.ArrayList access$700(android.server.BluetoothHealthProfileHandler)>','<com.android.server.input.InputFilter: void onInputEvent(android.view.InputEvent,int)>','<android.filterfw.core.GLFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager,int,long)>','<com.android.internal.policy.impl.LockPatternKeyguardView$2: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder windowDuration(int)>','<android.net.Credentials: void <init>(int,int,int)>','<android.view.InputEvent$1: void <init>()>','<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>','<com.android.internal.widget.DigitalClock: void updateTime()>','<android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)>','<com.android.server.wm.WindowStateAnimator: android.view.Surface createSurfaceLocked()>','<android.app.DownloadManager: int markRowDeleted(long[])>','<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)>','<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(java.lang.String,android.content.Context)>','<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>','<android.text.style.BackgroundColorSpan: int getBackgroundColor()>','<com.android.server.am.ActivityManagerService: int oomAdjToImportance(int,android.app.ActivityManager$RunningAppProcessInfo)>','<android.graphics.Rect: void setEmpty()>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<com.android.internal.telephony.DataConnectionTracker: void <init>(com.android.internal.telephony.PhoneBase)>','<android.app.LoaderManagerImpl$LoaderInfo: void start()>','<android.webkit.HTML5VideoFullScreen: void onPrepared(android.media.MediaPlayer)>','<android.os.storage.IMountService$Stub$Proxy: int unmountSecureContainer(java.lang.String,boolean)>','<android.net.Uri$HierarchicalUri: java.lang.String getPath()>','<android.bluetooth.BluetoothInputStream: int read()>','<android.net.Uri$PathPart: android.net.Uri$PathPart fromDecoded(java.lang.String)>','<android.content.pm.ResolveInfo$1: void <init>()>','<com.android.server.EventLogTags: void writeWatchdogSoftReset(java.lang.String,int,int,int,java.lang.String)>','<com.android.internal.telephony.UUSInfo: void <init>(int,int,byte[])>','<android.net.sip.SipAudioCall: java.lang.String access$1102(android.net.sip.SipAudioCall,java.lang.String)>','<android.content.SyncStorageEngine: void reportActiveChange()>','<android.bluetooth.BluetoothPbap: android.bluetooth.IBluetoothPbap access$002(android.bluetooth.BluetoothPbap,android.bluetooth.IBluetoothPbap)>','<android.widget.ListPopupWindow: android.widget.ListPopupWindow$DropDownListView access$600(android.widget.ListPopupWindow)>','<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>','<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])>','<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.MotionEvent$PointerProperties: int hashCode()>','<com.android.server.MountService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.text.Layout: float getSpacingMultiplier()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasGeneralDesc()>','<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>','<android.view.AbsSavedState: void <clinit>()>','<android.webkit.WebSettingsClassic: java.lang.String getDatabasePath()>','<android.view.InputEvent: void recycleIfNeededAfterDispatch()>','<android.view.Window$LocalWindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)>','<android.os.Parcel: void setDataCapacity(int)>','<android.widget.TextView: int getRightPaddingOffset()>','<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>','<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner)>','<android.net.wifi.WifiStateMachine: void access$12500(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.content.SyncResult: java.lang.String toString()>','<com.android.server.wm.AppWindowAnimator: void <clinit>()>','<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>','<android.view.HardwareRenderer$GlRenderer: javax.microedition.khronos.opengles.GL createEglSurface(android.view.SurfaceHolder)>','<android.os.Debug: void startMethodTracing(java.lang.String)>','<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener getListener()>','<com.android.internal.telephony.BaseCommands: void unregisterForDataNetworkStateChanged(android.os.Handler)>','<android.net.sip.SipAudioCall: java.lang.String access$500(android.net.sip.SipAudioCall)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>','<android.os.IPowerManager$Stub$Proxy: void reboot(java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean isViewServerRunning()>','<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>','<com.android.server.sip.SipService$SipSessionGroupExt: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String nextPackageToClean(java.lang.String)>','<android.bluetooth.BluetoothAdapter: java.lang.String getName()>','<android.net.nsd.DnsSdTxtRecord: int keyCount()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.IWindowManager$Stub$Proxy: boolean inKeyguardRestrictedInputMode()>','<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>','<android.net.sip.SipProfile: java.lang.String access$502(android.net.sip.SipProfile,java.lang.String)>','<android.net.DummyDataStateTracker: void <init>(int,java.lang.String)>','<com.android.internal.policy.impl.PatternUnlockScreen$2: void <init>(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.internal.telephony.DataConnectionTracker$DataRoamingSettingObserver: void onChange(boolean)>','<android.webkit.ZoomControlExternal: void show()>','<com.android.server.am.BatteryStatsService: void noteBluetoothOn()>','<android.app.ActivityManager$RunningAppProcessInfo$1: android.app.ActivityManager$RunningAppProcessInfo[] newArray(int)>','<android.accounts.AccountManager$2: void doWork()>','<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger)>','<android.view.View: boolean isAccessibilityFocused()>','<android.net.Uri$OpaqueUri: java.lang.String getFragment()>','<android.net.rtp.RtpStream: void setMode(int)>','<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void <init>(android.view.SurfaceSession,int,java.lang.String,int,int,int,int,int)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void enter()>','<android.telephony.CellInfo: long getTimeStamp()>','<android.view.ViewRootImpl$AccessibilityInteractionConnectionManager: void onAccessibilityStateChanged(boolean)>','<android.widget.AbsListView: void requestLayout()>','<android.nfc.NdefRecord: int describeContents()>','<android.net.wifi.WifiConfigStore: void enableAllNetworks()>','<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>','<android.provider.BrowserContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>','<com.android.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>','<android.view.MotionEvent$1: android.view.MotionEvent createFromParcel(android.os.Parcel)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void sortResults(java.util.List)>','<android.view.View: void setDuplicateParentStateEnabled(boolean)>','<com.android.server.location.GpsLocationProvider: android.os.Handler access$2102(com.android.server.location.GpsLocationProvider,android.os.Handler)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelope(java.lang.String,android.os.Message)>','<android.graphics.Matrix: boolean isIdentity()>','<com.android.server.wm.WindowManagerService: void requestTraversalLocked()>','<android.media.IAudioRoutesObserver$Stub: android.media.IAudioRoutesObserver asInterface(android.os.IBinder)>','<android.view.IWindowManager$Stub$Proxy: boolean hasSystemNavBar()>','<com.android.uiautomator.core.UiDevice: boolean pressEnter()>','<android.view.MotionEvent: boolean isTainted()>','<android.os.OperationCanceledException: void <init>(java.lang.String)>','<android.webkit.WebViewClassic: boolean access$7302(android.webkit.WebViewClassic,boolean)>','<android.os.PowerManager$WakeLock$1: void <init>(android.os.PowerManager$WakeLock)>','<com.android.server.MountService$MountObbAction: void <init>(com.android.server.MountService,com.android.server.MountService$ObbState,java.lang.String)>','<android.app.Activity$ManagedDialog: void <init>(android.app.Activity$1)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.vcard.VCardConfig: boolean isJapaneseDevice(int)>','<com.android.internal.telephony.PhoneBase: java.lang.String getCdmaPrlVersion()>','<android.filterfw.core.GLFrame: void <clinit>()>','<android.net.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean access$8200(android.net.wifi.WifiStateMachine)>','<android.view.Window: void setCloseOnTouchOutsideIfNotSet(boolean)>','<android.bluetooth.BluetoothProfileState$PendingCommandState: void enter()>','<android.content.ContentProvider: android.content.Context getContext()>','<com.android.internal.util.TypedProperties: int getInt(java.lang.String)>','<android.server.BluetoothService: void finalize()>','<android.webkit.CacheManager$CacheResult: void setEncoding(java.lang.String)>','<android.telephony.CellInfo: void <clinit>()>','<android.os.Bundle: boolean isEmpty()>','<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>','<android.text.StaticLayout: int getEllipsisCount(int)>','<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>','<android.app.PendingIntent: void <init>(android.os.IBinder)>','<android.widget.TextView$Marquee: void tick()>','<android.app.ContextImpl$22: java.lang.Object createService(android.app.ContextImpl)>','<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(java.lang.String,int)>','<android.net.wifi.WifiInfo: java.lang.String access$102(android.net.wifi.WifiInfo,java.lang.String)>','<android.webkit.WebView: void onDetachedFromWindow()>','<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicHeight()>','<android.webkit.SelectActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>','<android.view.MotionEvent: void recycle()>','<android.content.IClipboard$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.View$AttachInfo$InvalidateInfo: void setPooled(boolean)>','<android.filterfw.geometry.Quad: float getBoundingWidth()>','<com.android.internal.telephony.gsm.GsmSmsCbMessage: android.telephony.SmsCbMessage createSmsCbMessage(com.android.internal.telephony.gsm.SmsCbHeader,android.telephony.SmsCbLocation,byte[][])>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: java.lang.String getInfo()>','<android.content.IntentSender: void <init>(android.os.IBinder)>','<android.security.Credentials: void install(android.content.Context)>','<android.os.HandlerThread: android.os.Looper getLooper()>','<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>','<android.animation.LayoutTransition$4: void onAnimationEnd(android.animation.Animator)>','<com.android.server.DevicePolicyManagerService$ActiveAdmin: void <init>(android.app.admin.DeviceAdminInfo)>','<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()>','<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>','<android.os.Environment: void <init>()>','<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>','<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>','<android.webkit.WebViewCore: void access$3400(android.webkit.WebViewCore,int)>','<android.net.LocalServerSocket: android.net.LocalSocket accept()>','<android.webkit.HTML5VideoView: void decideDisplayMode()>','<android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc valueOf(java.lang.String)>','<com.android.internal.policy.impl.AccountUnlockScreen: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.telephony.IccCard: void <init>(com.android.internal.telephony.PhoneBase,java.lang.String,java.lang.Boolean,java.lang.Boolean)>','<com.android.internal.telephony.cat.Menu: int describeContents()>','<com.android.internal.telephony.MccTable: java.lang.String defaultTimeZoneForMcc(int)>','<android.media.AudioService$AudioHandler$2: void <init>(android.media.AudioService$AudioHandler)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedTotalTime(long)>','<android.view.MotionEvent: int getButtonState()>','<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>','<android.text.SpannableString: int getSpanEnd(java.lang.Object)>','<com.android.internal.view.menu.ActionMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>','<android.webkit.ZoomControlExternal: void hide()>','<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()>','<android.webkit.WebStorageClassic: void createHandler()>','<com.android.internal.telephony.PhoneProxy: void getOutgoingCallerIdDisplay(android.os.Message)>','<android.graphics.Interpolator$Result: android.graphics.Interpolator$Result valueOf(java.lang.String)>','<com.android.server.pm.PreferredActivity: boolean onReadTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>','<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()>','<android.app.IWallpaperManagerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.Debug: boolean isDebuggerConnected()>','<android.filterpacks.videosrc.MediaSource: android.filterfw.core.MutableFrameFormat access$300(android.filterpacks.videosrc.MediaSource)>','<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<android.view.ViewTreeObserver: void <init>()>','<android.view.GestureDetector: boolean isLongpressEnabled()>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.gsm.UsimServiceTable$UsimService: com.android.internal.telephony.gsm.UsimServiceTable$UsimService valueOf(java.lang.String)>','<android.telephony.SmsCbMessage$1: void <init>()>','<android.app.AlarmManager: void <init>(android.app.IAlarmManager)>','<android.telephony.TelephonyManager: int getNetworkClass(int)>','<com.android.server.wm.WindowManagerService: int relayoutWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>','<android.app.ActivityThread: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,boolean)>','<android.telephony.GsmCellIdentity: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.widget.ActionBarView: boolean shouldDelayChildPressedState()>','<com.android.internal.widget.PasswordEntryKeyboard: void setEnterKeyResources(android.content.res.Resources,int,int,int)>','<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,int,android.content.Intent,java.lang.String)>','<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>','<com.android.server.NotificationManagerService: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>','<android.app.SharedPreferencesImpl$EditorImpl$2: void run()>','<android.net.MobileDataStateTracker$MobileDataStateReceiver: void <init>(android.net.MobileDataStateTracker,android.net.MobileDataStateTracker$1)>','<com.android.internal.widget.SlidingTab: void <init>(android.content.Context)>','<android.widget.Editor: void <init>(android.widget.TextView)>','<android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>','<android.os.MemoryFile: int length()>','<android.view.ViewDebug$HierarchyTraceType: void <clinit>()>','<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetPosition(int)>','<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()>','<android.app.ActivityManagerNative$1: void <init>()>','<android.view.VelocityTracker$1: void onReleased(android.view.VelocityTracker)>','<android.app.Activity: void stopManagingCursor(android.database.Cursor)>','<com.android.internal.telephony.MccTable$MccEntry: int compareTo(java.lang.Object)>','<android.widget.Editor$CorrectionHighlighter: void draw(android.graphics.Canvas,int)>','<android.server.BluetoothAdapterProperties: java.lang.String getObjectPath()>','<android.widget.ExpandableListView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.content.Intent: java.lang.Object getExtra(java.lang.String)>','<android.os.StrictMode$AndroidBlockGuardPolicy: java.lang.String toString()>','<android.hardware.usb.UsbAccessory: java.lang.String getModel()>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void add(int,android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout)>','<android.net.wifi.WifiNative: boolean setModelNumber(java.lang.String)>','<com.android.internal.content.PackageMonitor: void onPackageModified(java.lang.String)>','<android.view.GLES20RecordingCanvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>','<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>','<com.android.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>','<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine$OnlineState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()>','<android.view.HardwareRenderer: void <init>()>','<com.android.internal.telephony.sip.SipCommandInterface: void invokeOemRilRequestRaw(byte[],android.os.Message)>','<android.hardware.SystemSensorManager$ListenerDelegate: int removeSensor(android.hardware.Sensor)>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: void waitForResult(java.util.concurrent.atomic.AtomicBoolean)>','<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)>','<android.os.Debug$MemoryInfo: int getTotalPss()>','<android.graphics.Insets: void <clinit>()>','<android.view.VolumePanel$2: boolean onTouchEvent(android.view.MotionEvent)>','<android.server.BluetoothService: boolean removeBondInternal(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: void explicitCallTransfer()>','<android.webkit.AccessibilityInjector: boolean handleKeyEventIfNecessary(android.view.KeyEvent)>','<android.widget.AbsListView$PositionScroller$3: void run()>','<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>','<android.view.LayoutInflater$BlinkLayout: void access$200(android.view.LayoutInflater$BlinkLayout)>','<android.provider.ContactsContract: boolean isProfileId(long)>','<com.android.internal.telephony.DataConnection$FailCause: boolean isPermanentFail()>','<android.filterfw.io.TextGraphReader$InitFilterCommand: void <init>(android.filterfw.io.TextGraphReader,android.filterfw.core.KeyValueMap)>','<android.text.style.RelativeSizeSpan: int describeContents()>','<android.net.DummyDataStateTracker: boolean isTeardownRequested()>','<com.android.server.LocationManagerService: com.android.server.location.GeocoderProxy access$2400(com.android.server.LocationManagerService)>','<android.net.DhcpStateMachine: void access$2200(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.content.ContentResolver$CursorWrapperInner: void close()>','<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()>','<android.net.wifi.p2p.WifiP2pInfo: int describeContents()>','<android.util.Base64: byte[] encode(byte[],int,int,int)>','<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String)>','<com.android.server.net.NetworkStatsService: void access$1100(com.android.server.net.NetworkStatsService)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartSensor(int)>','<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>','<android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$102(android.net.wifi.WifiStateTracker,android.net.NetworkInfo)>','<com.android.server.LocationManagerService$LpPowerComparator: void <init>(com.android.server.LocationManagerService,com.android.server.LocationManagerService$1)>','<android.view.WindowManager$LayoutParams: int describeContents()>','<android.view.ViewGroup: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>','<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>','<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>','<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>','<android.database.IContentObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.Editor$HandleView: void dismiss()>','<android.view.animation.Transformation: void postCompose(android.view.animation.Transformation)>','<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.widget.RemoteViews: boolean access$100(android.widget.RemoteViews)>','<android.view.VolumePanel$4: void <init>(android.view.VolumePanel)>','<android.app.ActivityThread$ApplicationThread: void scheduleExit()>','<com.android.internal.telephony.sip.SipCommandInterface: void deleteSmsOnSim(int,android.os.Message)>','<android.animation.FloatKeyframeSet: float getFloatValue(float)>','<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>','<com.android.internal.telephony.PhoneProxy: void switchHoldingAndActive()>','<android.util.Pools: android.util.Pool finitePool(android.util.PoolableManager,int)>','<com.android.server.NetworkManagementService: void flushDefaultDnsCache()>','<com.android.internal.telephony.test.ModelInterpreter: void processLine(java.lang.String)>','<android.webkit.WebViewInputDispatcher$WebKitHandler: void <init>(android.webkit.WebViewInputDispatcher,android.os.Looper)>','<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(int,int)>','<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>','<android.animation.LayoutTransition: void disableTransitionType(int)>','<android.app.ActivityManagerProxy: boolean isTopActivityImmersive()>','<com.android.internal.telephony.PhoneProxy: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>','<com.android.server.MountService: void unregisterListener(android.os.storage.IMountServiceListener)>','<android.app.AlertDialog: android.widget.Button getButton(int)>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <init>(java.util.List)>','<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>','<android.database.sqlite.SQLiteConnection: void access$200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection$PreparedStatement)>','<android.telephony.SmsMessage: boolean isCphsMwiMessage()>','<com.android.internal.view.IInputContext$Stub$Proxy: void commitCompletion(android.view.inputmethod.CompletionInfo)>','<android.location.Location: void setBearing(float)>','<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>','<android.content.pm.ParceledListSlice: boolean append(android.os.Parcelable)>','<com.android.internal.os.LoggingPrintStream: void print(long)>','<android.filterfw.core.NativeFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<android.webkit.WebView$PrivateAccess: void <init>(android.webkit.WebView)>','<android.text.AndroidBidi: int bidi(int,char[],byte[],int,boolean)>','<com.android.internal.widget.SlidingTab$Slider: android.widget.TextView access$700(com.android.internal.widget.SlidingTab$Slider)>','<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>','<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: android.os.IBinder asBinder()>','<android.provider.ContactsContract$Intents$UI: void <init>()>','<android.webkit.WebViewCore: android.webkit.BrowserFrame access$1502(android.webkit.WebViewCore,android.webkit.BrowserFrame)>','<android.net.nsd.DnsSdTxtRecord: void writeToParcel(android.os.Parcel,int)>','<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>','<android.opengl.GLLogWrapper: void glLoadIdentity()>','<android.view.MotionEvent: float getAxisValue(int)>','<android.webkit.WebBackForwardList: int getSize()>','<android.accounts.AccountManagerResponse: void <init>(android.os.Parcel)>','<android.net.wifi.WifiConfigStore: void <clinit>()>','<android.os.MemoryFile: void deactivate()>','<android.net.sip.SipAudioCall$Listener: void onRingingBack(android.net.sip.SipAudioCall)>','<android.app.ProgressDialog: void setSecondaryProgress(int)>','<com.android.internal.view.menu.ActionMenuItem: boolean isActionViewExpanded()>','<android.app.DownloadManager: void <init>(android.content.ContentResolver,java.lang.String)>','<android.graphics.Camera: void finalize()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int setStorageEncryption(android.content.ComponentName,boolean)>','<com.android.server.am.UriPermissionOwner$ExternalToken: void <init>(com.android.server.am.UriPermissionOwner)>','<android.view.View: void invalidateParentCaches()>','<com.android.internal.telephony.IccCard: boolean access$702(com.android.internal.telephony.IccCard,boolean)>','<android.widget.AdapterView: int getSelectedItemPosition()>','<android.bluetooth.BluetoothDeviceProfileState: void access$8500(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.view.inputmethod.InputMethodManager: void showSoftInputUnchecked(int,android.os.ResultReceiver)>','<android.widget.HorizontalScrollView: boolean fullScroll(int)>','<android.media.RemoteControlClient: android.graphics.Bitmap access$802(android.media.RemoteControlClient,android.graphics.Bitmap)>','<android.content.pm.PackageParser$Component: void <init>(android.content.pm.PackageParser$Package)>','<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebSettings: void setSupportZoom(boolean)>','<android.webkit.HTML5VideoView: void reset()>','<android.accounts.AccountManager$3: android.accounts.Account[] bundleToResult(android.os.Bundle)>','<com.android.internal.telephony.RIL: void setBandMode(int,android.os.Message)>','<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getDefaultPhone()>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1$1: void run()>','<android.webkit.WebIconDatabaseClassic: void access$600(java.lang.String)>','<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>','<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String toString()>','<android.database.CursorWindow: boolean isBlob(int,int)>','<android.filterfw.core.VertexFrame: int[] getInts()>','<android.widget.ListView: void setSelection(int)>','<android.os.PowerManager$WakeLock: void release()>','<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>','<android.view.IOnKeyguardExitResult$Stub: void <init>()>','<android.widget.AbsListView: void setVelocityScale(float)>','<com.android.server.sip.SipSessionGroup$MakeCallCommand: android.net.sip.SipProfile getPeerProfile()>','<android.graphics.drawable.LayerDrawable: void setAlpha(int)>','<com.android.internal.widget.LockPatternView: void setInStealthMode(boolean)>','<android.webkit.WebSettingsClassic: boolean supportZoom()>','<android.widget.AbsListView: int access$1100(android.widget.AbsListView)>','<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>','<android.app.ApplicationErrorReport: void <init>(android.os.Parcel)>','<android.net.wifi.p2p.WifiP2pDeviceList: void <clinit>()>','<com.android.server.PowerManagerService$BootCompletedReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.widget.ActionBarContextView: boolean shouldDelayChildPressedState()>','<android.widget.ImageView: boolean getCropToPadding()>','<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String toString()>','<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>','<android.view.Choreographer: android.view.Choreographer$FrameHandler access$300(android.view.Choreographer)>','<android.net.Uri$HierarchicalUri: java.lang.String getQuery()>','<android.widget.AbsSeekBar: void setMax(int)>','<android.os.UserId: boolean isApp(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState: boolean processMessage(android.os.Message)>','<android.util.LogWriter: void flush()>','<android.filterfw.core.OutputPort: void close()>','<android.webkit.WebView: boolean setFrame(int,int,int,int)>','<android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>','<android.app.Activity: void onAttachFragment(android.app.Fragment)>','<com.android.internal.telephony.PhoneBase: void queryCdmaRoamingPreference(android.os.Message)>','<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.ActivityStack: boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord,int)>','<android.app.ActivityThread$ApplicationThread: void processInBackground()>','<android.media.AudioManager: void setMicrophoneMute(boolean)>','<android.net.NetworkStatsHistory$DataStreamUtils: long readVarLong(java.io.DataInputStream)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1100(com.android.internal.policy.impl.KeyguardViewMediator,int)>','<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>','<android.widget.GridView: void setSelection(int)>','<com.android.internal.policy.impl.PhoneWindowManager$14$1: void sendResult(android.os.Bundle)>','<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)>','<android.net.LinkCapabilities: java.lang.String toString()>','<android.nfc.INdefPushCallback$Stub$Proxy: android.net.Uri[] getUris()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonySpn()>','<android.media.RemoteControlClient: int getRcseId()>','<android.accounts.AccountManagerService$UserAccounts: java.util.HashMap access$1300(android.accounts.AccountManagerService$UserAccounts)>','<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>','<com.android.internal.policy.impl.AccountUnlockScreen$1: void <init>(com.android.internal.policy.impl.AccountUnlockScreen,boolean)>','<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>','<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)>','<com.android.internal.policy.impl.PasswordUnlockScreen$3: void <init>(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>','<android.view.animation.Animation: int getBackgroundColor()>','<android.inputmethodservice.ExtractEditLayout: void onFinishInflate()>','<com.android.internal.view.IInputContext$Stub$Proxy: void <init>(android.os.IBinder)>','<android.location.LocationManager$GpsStatusListenerTransport: java.util.ArrayList access$300(android.location.LocationManager$GpsStatusListenerTransport)>','<android.os.BatteryStats$Uid$Pid: void <init>(android.os.BatteryStats$Uid)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>','<android.webkit.HTML5VideoFullScreen: boolean canPause()>','<com.android.internal.util.CharSequences: java.lang.CharSequence forAsciiBytes(byte[],int,int)>','<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)>','<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>','<android.widget.AbsSpinner: void access$100(android.widget.AbsSpinner,android.view.View,boolean)>','<android.view.animation.Animation: float resolveSize(int,float,int,int)>','<android.view.KeyCharacterMap: int getKeyboardType()>','<android.content.OperationApplicationException: void <init>()>','<android.opengl.GLLogWrapper: void glDrawTexiOES(int,int,int,int,int)>','<android.media.MediaRouter$UserRouteInfo: void setStatus(java.lang.CharSequence)>','<android.webkit.ByteArrayBuilder$Chunk: void <init>(int)>','<android.accounts.AccountManager$BaseFutureTask$Response: void onResult(android.os.Bundle)>','<com.android.internal.telephony.BaseCommands: void setOnNewGsmBroadcastSms(android.os.Handler,int,java.lang.Object)>','<android.view.ViewPropertyAnimator: void access$100(android.view.ViewPropertyAnimator)>','<android.server.BluetoothPanProfileHandler: void setBluetoothTethering(boolean)>','<android.widget.AbsListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.widget.SearchView: void access$700(android.widget.SearchView)>','<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>','<android.widget.RemoteViews: void <init>(android.widget.RemoteViews,android.widget.RemoteViews)>','<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>','<android.database.CursorWrapper: void close()>','<android.location.GeocoderParams$1: void <init>()>','<com.android.server.am.AppBindRecord: java.lang.String toString()>','<com.android.server.location.PassiveProvider: boolean hasMonetaryCost()>','<android.app.FragmentManagerImpl: void makeInactive(android.app.Fragment)>','<android.net.sip.SipProfile: int getPort()>','<android.view.ViewGroup: void setLayoutMode(int)>','<android.app.WallpaperInfo: android.content.ComponentName getComponent()>','<android.view.View: int getMeasuredHeight()>','<com.android.server.WifiService: void clearBlacklist()>','<android.webkit.WebViewClassic: void access$7200(android.webkit.WebViewClassic,android.view.MotionEvent,int,int)>','<android.os.Debug: int getGlobalExternalAllocCount()>','<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>','<android.widget.ListView: android.view.View findViewWithTagInHeadersOrFooters(java.util.ArrayList,java.lang.Object)>','<android.widget.TextView: boolean isInputMethodTarget()>','<android.os.BatteryStats$HistoryItem: int describeContents()>','<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>','<android.view.IWindowManager$Stub$Proxy: void setAppWillBeHidden(android.os.IBinder)>','<android.net.wifi.p2p.WifiP2pService: byte access$9202(android.net.wifi.p2p.WifiP2pService,byte)>','<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$BondedDevice access$4602(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$BondedDevice)>','<android.webkit.KeyStoreHandler: void installCert(android.content.Context)>','<com.android.i18n.phonenumbers.NumberParseException$ErrorType: com.android.i18n.phonenumbers.NumberParseException$ErrorType[] values()>','<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>','<android.view.inputmethod.CompletionInfo$1: android.view.inputmethod.CompletionInfo[] newArray(int)>','<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>','<com.android.server.connectivity.Vpn: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>','<android.hardware.Camera$Parameters: int getPictureFormat()>','<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>','<android.view.AbsSavedState$1: void <init>()>','<android.widget.TextView: void access$700(android.widget.TextView,java.lang.CharSequence,int,int,int)>','<android.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)>','<android.net.Uri$OpaqueUri: boolean isRelative()>','<android.widget.Spinner$DialogPopup: android.graphics.drawable.Drawable getBackground()>','<android.os.Debug: int getGlobalAllocCount()>','<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()>','<android.content.res.CompatibilityInfo$Translator: void translateRectInAppWindowToScreen(android.graphics.Rect)>','<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>','<android.inputmethodservice.InputMethodService$2: void <init>(android.inputmethodservice.InputMethodService)>','<android.app.Activity$ManagedCursor: void <init>(android.database.Cursor)>','<android.view.View: void computeScroll()>','<com.android.internal.telephony.cdma.CdmaCallTracker: boolean getMute()>','<com.android.internal.telephony.test.ModelInterpreter: void setNextCallFailCause(int)>','<android.view.ViewGroup: boolean shouldDelayChildPressedState()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getAddress()>','<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void bindConnectivityManager(android.net.IConnectivityManager)>','<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>','<android.webkit.WebViewClassic: boolean access$4502(android.webkit.WebViewClassic,boolean)>','<android.webkit.WebViewClassic: void setHorizontalScrollbarOverlay(boolean)>','<android.util.SparseBooleanArray: void append(int,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void handleMessage(android.os.Message)>','<com.android.ex.variablespeed.VariableSpeed: void setAudioStreamType(int)>','<android.graphics.drawable.LayerDrawable$LayerState: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources)>','<com.android.server.am.BatteryStatsService: void noteWifiStopped(android.os.WorkSource)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCDS(java.lang.String)>','<com.android.server.PowerManagerService: void logPointerDownEvent()>','<android.filterfw.core.VertexFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<android.webkit.WebStorageClassic: void access$300(android.webkit.WebStorageClassic)>','<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>','<android.graphics.drawable.GradientDrawable$Orientation: void <clinit>()>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$ChannelListener access$102(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>','<android.webkit.HTML5VideoViewProxy: void onTimeupdate()>','<com.android.internal.util.BitwiseOutputStream: void skip(int)>','<com.android.internal.os.BatteryStatsImpl: void noteVideoOffLocked(int)>','<com.android.internal.telephony.cdma.CdmaConnection: int getCnapNamePresentation()>','<android.net.LocalSocketImpl$SocketOutputStream: void <init>(android.net.LocalSocketImpl)>','<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>','<android.widget.TextView: void setHorizontallyScrolling(boolean)>','<android.media.MediaRouter$RouteGroup: java.lang.CharSequence getName(android.content.res.Resources)>','<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestRaw(byte[],android.os.Message)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showMySoftInput(android.os.IBinder,int)>','<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>','<android.app.ActivityManager$RunningTaskInfo: void <init>()>','<com.android.server.am.BatteryStatsService: void noteUserActivity(int,int)>','<android.net.wifi.WifiStateMachine: void startFilteringMulticastV6Packets()>','<android.widget.CursorFilter: void <init>(android.widget.CursorFilter$CursorFilterClient)>','<android.net.wifi.WifiStateMachine: boolean access$600(android.net.wifi.WifiStateMachine)>','<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>','<com.android.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>','<android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(java.lang.String[])>','<android.view.PointerIcon$1: android.view.PointerIcon[] newArray(int)>','<android.content.ContentProvider$Transport: android.os.ICancellationSignal createCancellationSignal()>','<android.filterfw.core.SimpleFrame: void setFloats(float[])>','<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void <init>()>','<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.AppInterface getInstance()>','<android.app.backup.IRestoreObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2: void <init>(com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin)>','<android.os.StrictMode$Span: void <init>(android.os.StrictMode$ThreadSpanState)>','<com.android.server.location.LocationProviderProxy: boolean supportsBearing()>','<android.app.ActivityThread$GcIdler: void <init>(android.app.ActivityThread)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)>','<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)>','<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>','<android.webkit.HTML5VideoFullScreen$2: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>','<android.webkit.PluginList: void <init>()>','<android.media.MediaRouter$RouteGroup: void updateVolume()>','<android.media.Ringtone: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void readFromParcelLocked(android.os.Parcel)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ServiceIntentInfo)>','<android.media.MediaRouter$RouteInfo: int getVolumeMax()>','<com.android.internal.telephony.CallManager: boolean hasActiveRingingCall()>','<android.net.arp.ArpPeer: void <init>(java.lang.String,java.net.InetAddress,java.lang.String,java.net.InetAddress)>','<android.os.Message: void setData(android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause disconnectCauseFromCode(int)>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>','<android.net.sip.SipProfile$Builder: void <init>(java.lang.String)>','<com.android.internal.widget.ActionBarContainer: void setTransitioning(boolean)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void unregister()>','<com.android.server.AppWidgetServiceImpl: void onBroadcastReceived(android.content.Intent)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeToParcelLocked(android.os.Parcel)>','<android.net.wifi.WpsInfo$1: android.net.wifi.WpsInfo createFromParcel(android.os.Parcel)>','<android.widget.GridView: void setSelectionInt(int)>','<android.telephony.ServiceState: android.telephony.ServiceState newFromBundle(android.os.Bundle)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>','<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getApnSetting()>','<android.widget.PopupWindow: void <init>(android.content.Context)>','<android.animation.Animator: void removeAllListeners()>','<android.webkit.WebViewClassic: void autoFillForm(int)>','<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()>','<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int)>','<android.animation.AnimatorSet: void setTarget(java.lang.Object)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8600(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.view.ViewGroup$LayoutParams: void onResolveLayoutDirection(int)>','<com.android.server.connectivity.Vpn: java.lang.String access$202(com.android.server.connectivity.Vpn,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState$1: void <init>(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.telephony.cdma.sms.BearerData$CodingException: void <init>(java.lang.String)>','<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>','<android.widget.ListView: void setSelectionInt(int)>','<android.os.IHardwareService$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.wm.AppWindowAnimator: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void createSession(com.android.internal.view.IInputMethodCallback)>','<android.webkit.WebSettingsClassic: void setAppCacheEnabled(boolean)>','<com.android.server.location.GpsLocationProvider: int getPowerRequirement()>','<com.android.internal.database.SortCursor: void deactivate()>','<android.text.method.CharacterPickerDialog: android.view.LayoutInflater access$000(android.text.method.CharacterPickerDialog)>','<com.android.internal.database.SortCursor: double getDouble(int)>','<com.android.internal.policy.impl.SimUnlockScreen$1$1: void run()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.renderscript.Sampler: void <init>(int,android.renderscript.RenderScript)>','<android.server.BluetoothAdapterStateMachine$WarmUp: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>','<android.media.MediaRecorder: void setLocation(float,float)>','<com.android.server.sip.SipSessionListenerProxy$5: void run()>','<android.app.ContextImpl: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>','<android.media.IAudioRoutesObserver$Stub: void <init>()>','<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)>','<android.inputmethodservice.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>','<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder windowOverlapDuration(int)>','<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>','<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>','<android.view.accessibility.AccessibilityRecord: void recycle()>','<com.android.server.DevicePolicyManagerService: int getStorageEncryptionStatus()>','<android.net.sip.ISipSessionListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void <init>(android.accounts.AccountManager,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.view.WindowManager$LayoutParams: void scale(float)>','<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>','<android.content.pm.ProviderInfo: void <init>(android.os.Parcel,android.content.pm.ProviderInfo$1)>','<com.android.internal.telephony.RIL: void getDataRegistrationState(android.os.Message)>','<android.net.sip.SipAudioCall: void <init>(android.content.Context,android.net.sip.SipProfile)>','<android.preference.PreferenceFragment: void onStart()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDevice access$700(android.bluetooth.BluetoothDeviceProfileState)>','<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>','<android.accounts.AccountManager$7: void doWork()>','<android.view.View: void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)>','<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)>','<android.database.DatabaseUtils$InsertHelper: void close()>','<android.graphics.Bitmap: int getRowBytes()>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>','<android.app.ActivityManager$RunningServiceInfo$1: android.app.ActivityManager$RunningServiceInfo[] newArray(int)>','<android.widget.Editor$EasyEditPopupWindow: int getTextOffset()>','<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas$EdgeType)>','<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.res.Resources)>','<com.android.server.AppWidgetService: void unbindRemoteViewsService(int,android.content.Intent)>','<com.android.internal.telephony.sip.SipPhone: boolean canDial()>','<android.text.HtmlToSpannedConverter: void processingInstruction(java.lang.String,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel)>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>','<android.location.Criteria: boolean access$502(android.location.Criteria,boolean)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>','<com.android.internal.policy.impl.GlobalActions: void showDialog(boolean,boolean)>','<android.view.View: boolean isAccessibilityFocusable()>','<android.app.Dialog: void setVolumeControlStream(int)>','<android.webkit.HTML5VideoFullScreen: android.view.SurfaceHolder access$302(android.webkit.HTML5VideoFullScreen,android.view.SurfaceHolder)>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: android.os.IBinder asBinder()>','<android.telephony.NeighboringCellInfo: int getNetworkType()>','<com.android.server.PowerManagerService$5: void onReceive(android.content.Context,android.content.Intent)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByViewId(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>','<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>','<android.accounts.AccountManager$10: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,android.app.Activity)>','<com.android.i18n.phonenumbers.ShortNumberUtil: boolean isEmergencyNumber(java.lang.String,java.lang.String)>','<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>','<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)>','<android.media.IAudioFocusDispatcher$Stub: android.os.IBinder asBinder()>','<android.net.MobileDataStateTracker$MdstHandler: void handleMessage(android.os.Message)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,boolean,boolean)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: long getLong(java.lang.String,long,int)>','<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList access$600(android.animation.ValueAnimator$AnimationHandler)>','<com.android.server.AlarmManagerService: int access$1410(com.android.server.AlarmManagerService)>','<com.android.internal.location.DummyLocationProvider: boolean hasMonetaryCost()>','<android.widget.RelativeLayout$DependencyGraph: void log(android.content.res.Resources,int[])>','<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()>','<android.view.ViewConfiguration: int getMaximumFlingVelocity()>','<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>','<android.webkit.WebSettingsClassic: void access$100(android.webkit.WebSettingsClassic,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.app.SearchDialog: android.os.Bundle onSaveInstanceState()>','<android.view.View: boolean hasOnClickListeners()>','<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo access$800(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.State,com.android.internal.util.State)>','<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()>','<android.net.LocalSocket: int getSoTimeout()>','<android.filterfw.core.FilterContext: void addGraph(android.filterfw.core.FilterGraph)>','<com.android.internal.telephony.GsmAlphabet: int access$000()>','<com.android.internal.telephony.RestrictedState: void setPsRestricted(boolean)>','<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()>','<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>','<android.ddm.DdmHandleThread: void <clinit>()>','<android.app.Fragment: void onActivityCreated(android.os.Bundle)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void finalize()>','<com.android.server.pm.PackageManagerService$1: void run()>','<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>','<android.net.wifi.WifiStateMachine$DriverLoadingState$1: void run()>','<android.net.wifi.WifiStateMachine: boolean access$5600(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.sip.SipAudioCall access$702(com.android.internal.telephony.sip.SipPhone$SipConnection,android.net.sip.SipAudioCall)>','<android.preference.Preference: void onClick()>','<android.server.BluetoothService: void writeIncomingConnectionState(java.lang.String,android.util.Pair)>','<android.graphics.drawable.shapes.Shape: void resize(float,float)>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangupForegroundResumeBackground()>','<android.view.HardwareRenderer$Gl20Renderer: int[] getConfig(boolean)>','<android.view.ViewGroup: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void <init>(com.android.internal.widget.ScrollingTabContainerView)>','<android.text.PackedIntVector: int size()>','<android.filterfw.core.NativeBuffer: boolean isReadOnly()>','<com.android.server.NetworkManagementService: void access$500(com.android.server.NetworkManagementService,java.lang.String)>','<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)>','<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>','<android.provider.ContactsContract$Contacts: void <clinit>()>','<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>','<com.android.internal.util.AsyncChannel: void <init>()>','<android.net.Proxy$AndroidProxySelectorRoutePlanner: java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<com.android.server.wm.WindowState: boolean isReadyForDisplay()>','<android.net.TrafficStats: void setThreadStatsUid(int)>','<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>','<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>','<android.net.wifi.WifiStateMachine: boolean access$7702(android.net.wifi.WifiStateMachine,boolean)>','<com.android.server.am.BatteryStatsService: void noteScanWifiLockAcquired(int)>','<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>','<com.android.internal.telephony.RIL: void getCDMASubscription(android.os.Message)>','<android.os.Bundle: boolean getBoolean(java.lang.String)>','<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)>','<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>','<android.view.Surface$1: android.view.Surface createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocket(int)>','<com.android.server.DevicePolicyManagerService: void systemReady()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void unbindRemoteViewsService(int,android.content.Intent)>','<android.webkit.WebViewInputDispatcher$DispatchEventQueue: boolean isEmpty()>','<android.webkit.WebViewClassic: void setScrollBarStyle(int)>','<android.content.res.StringBlock: void <init>(int,boolean)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void plug(long,long)>','<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()>','<android.view.GLES20DisplayList$DisplayListFinalizer: void finalize()>','<android.app.IAlarmManager$Stub$Proxy: void setRepeating(int,long,long,android.app.PendingIntent)>','<com.android.internal.policy.impl.PhoneWindowManager$7: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.net.http.AndroidHttpClientConnection: void flush()>','<android.net.wifi.p2p.WifiP2pInfo$1: android.net.wifi.p2p.WifiP2pInfo createFromParcel(android.os.Parcel)>','<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void explicitCallTransfer()>','<android.net.http.RequestHandle: java.lang.String getMethod()>','<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>','<com.android.server.AlarmManagerService$BroadcastStats: void <init>(com.android.server.AlarmManagerService$1)>','<android.widget.ImageView: int[] onCreateDrawableState(int)>','<android.graphics.Shader$TileMode: void <clinit>()>','<com.android.internal.telephony.gsm.GsmDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.sip.SipPhoneBase: int getPhoneType()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata addNumberFormat(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)>','<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>','<android.location.ILocationManager$Stub$Proxy: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>','<android.app.backup.BackupAgent$BackupServiceBinder: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<android.view.inputmethod.InputMethodManager: void checkFocus()>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal: boolean defaultIsRtl()>','<android.widget.AbsListView$SavedState$1: android.widget.AbsListView$SavedState[] newArray(int)>','<com.android.internal.telephony.RIL: void access$500(com.android.internal.telephony.RIL,int,boolean)>','<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path$Direction)>','<android.view.KeyEvent: java.lang.String toString()>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>','<android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3402(android.widget.AbsListView$RecycleBin,android.widget.AbsListView$RecyclerListener)>','<com.android.internal.widget.ActionBarView: boolean isSplitActionBar()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void certificate(android.net.http.SslCertificate)>','<android.media.MediaRouter: void removeRoute(android.media.MediaRouter$RouteInfo)>','<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.graphics.TemporaryBuffer: void recycle(char[])>','<android.content.SyncManager: boolean access$1702(android.content.SyncManager,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getDeviceId()>','<android.webkit.SearchBox$SearchBoxListener: void onChangeComplete(boolean)>','<android.app.ContextImpl$27: java.lang.Object createService(android.app.ContextImpl)>','<android.widget.TextView: android.content.res.ColorStateList getTextColors()>','<android.net.wifi.WifiStateMachine$DisconnectedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.util.MathUtils: float mag(float,float)>','<android.app.LoadedApk$WarningContextClassLoader: void clearAssertionStatus()>','<android.app.Activity: boolean navigateUpTo(android.content.Intent)>','<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>','<android.location.Country: boolean equals(java.lang.Object)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$2400(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>','<android.webkit.WebViewCore: void jsAlert(java.lang.String,java.lang.String)>','<android.accounts.AccountManagerService: void access$100(android.accounts.AccountManagerService,android.content.Intent)>','<android.webkit.WebViewClassic$InvokeListBox: void <init>(android.webkit.WebViewClassic,java.lang.String[],int[],int,android.webkit.WebViewClassic$1)>','<com.android.server.NativeDaemonEvent: boolean isClassOk()>','<android.view.ViewRootImpl: void setDragFocus(android.view.View)>','<com.android.internal.os.PkgUsageStats$1: com.android.internal.os.PkgUsageStats[] newArray(int)>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>','<android.net.sip.SipSession$Listener: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void mark(int)>','<android.webkit.WebViewClassic: void setJsFlags(java.lang.String)>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>','<android.app.Notification$Style: void <init>()>','<com.android.internal.telephony.gsm.SmsMessage: void <init>()>','<android.view.ViewRootImpl$WindowInputEventReceiver: void onInputEvent(android.view.InputEvent)>','<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>','<com.android.internal.telephony.OperatorInfo$1: com.android.internal.telephony.OperatorInfo createFromParcel(android.os.Parcel)>','<android.view.GLES20RecordingCanvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>','<android.widget.AbsListView: void updateSelectorState()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockAcquiredFromSource(android.os.WorkSource)>','<android.inputmethodservice.ExtractEditText: void deleteText_internal(int,int)>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>','<android.widget.TextView: void setMinWidth(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: boolean readExcessivePowerFromParcelLocked(android.os.Parcel)>','<android.view.IOnKeyguardExitResult$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>','<android.widget.ListPopupWindow: void <init>(android.content.Context)>','<android.media.effect.EffectContext: void assertValidGLState()>','<com.android.internal.app.ActionBarImpl: void setNavigationMode(int)>','<com.android.internal.policy.impl.PhoneWindowManager: void animatingWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)>','<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>','<com.android.internal.telephony.BaseCommands: void unregisterForOffOrNotAvailable(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl: void writeToParcelWithoutUids(android.os.Parcel,int)>','<android.content.res.CompatibilityInfo: int hashCode()>','<com.android.server.sip.SipService: com.android.server.sip.SipWakeupTimer access$200(com.android.server.sip.SipService)>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] access$202(com.android.internal.telephony.ims.IsimUiccRecords,java.lang.String[])>','<android.view.GLES20Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>','<android.net.wifi.WifiWatchdogStateMachine$OnlineState: void enter()>','<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>','<android.content.ContentProviderResult: java.lang.String toString()>','<com.android.vcard.VCardUtils: java.lang.String toStringAsV40ParamValue(java.lang.String)>','<android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit valueOf(java.lang.String)>','<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>','<android.net.WebAddress: java.lang.String getPath()>','<com.android.internal.telephony.cat.ComprehensionTlvTag: com.android.internal.telephony.cat.ComprehensionTlvTag fromInt(int)>','<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidPersistBytes(long)>','<android.hardware.Camera$Parameters: java.util.List getZoomRatios()>','<android.net.wifi.SupplicantStateTracker: boolean access$600(android.net.wifi.SupplicantStateTracker)>','<com.android.internal.telephony.PhoneProxy: void queryTTYMode(android.os.Message)>','<com.android.server.PowerManagerService: void access$6000(com.android.server.PowerManagerService,boolean)>','<android.content.ClipboardManager: void removePrimaryClipChangedListener(android.content.ClipboardManager$OnPrimaryClipChangedListener)>','<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>','<android.view.GLES20TextureLayer: void setTransform(android.graphics.Matrix)>','<android.net.wifi.WifiManager$Channel$WifiHandler: void <init>(android.net.wifi.WifiManager$Channel,android.os.Looper)>','<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>','<android.widget.ListPopupWindow: boolean isInputMethodNotNeeded()>','<com.android.internal.telephony.AdnRecord$1: com.android.internal.telephony.AdnRecord[] newArray(int)>','<android.webkit.WebView: void goBackOrForward(int)>','<android.media.MediaRecorder: void finalize()>','<android.speech.tts.TextToSpeech$4: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<com.android.vcard.JapaneseUtils: void <clinit>()>','<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)>','<android.app.AlarmManager: void setTime(long)>','<android.widget.TextView: int getMinWidth()>','<android.util.FinitePool: void release(android.util.Poolable)>','<android.os.Debug: java.lang.String getCaller()>','<android.app.LoadedApk$ReceiverDispatcher: void setUnregisterLocation(java.lang.RuntimeException)>','<android.content.ClipDescription: void <init>(java.lang.CharSequence,java.lang.String[])>','<android.text.TextUtils: char[] obtain(int)>','<android.accounts.AccountManagerService: android.accounts.AccountManagerService getSingleton()>','<com.android.internal.telephony.sip.SipCommandInterface: void getNetworkSelectionMode(android.os.Message)>','<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>','<android.net.SSLCertificateSocketFactory: void <init>(int)>','<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>','<android.os.INetworkManagementService$Stub$Proxy: boolean isTetheringStarted()>','<android.os.AsyncTask$1: void <init>()>','<com.android.internal.telephony.sip.SipCommandInterface: void sendDtmf(char,android.os.Message)>','<android.net.wifi.WifiManager$MulticastLock: boolean isHeld()>','<android.app.SearchableInfo$ActionKeyInfo: void writeToParcel(android.os.Parcel,int)>','<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>','<android.telephony.PhoneStateListener: void <init>()>','<com.android.server.input.PersistentDataStore: void saveIfNeeded()>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator$1: void <init>(com.android.server.PowerManagerService$ScreenBrightnessAnimator)>','<android.filterfw.core.OutputPort: android.filterfw.core.Frame pullFrame()>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean releaseWifiLock(android.os.IBinder)>','<android.net.LocalSocket: boolean isConnected()>','<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>','<android.net.wifi.WifiNative: boolean cancelWps()>','<com.android.server.location.GeocoderProxy$Connection: android.location.IGeocodeProvider getProvider()>','<android.widget.FastScroller: void scrollTo(float)>','<android.widget.RemoteViews$1: android.widget.RemoteViews createFromParcel(android.os.Parcel)>','<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>','<android.security.KeyChain$1: void onServiceDisconnected(android.content.ComponentName)>','<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>','<android.util.MathUtils: float radians(float)>','<com.android.internal.view.IInputMethod$Stub: com.android.internal.view.IInputMethod asInterface(android.os.IBinder)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getShortcutInputMethodsAndSubtypes()>','<com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager$1: void onUEvent(android.os.UEventObserver$UEvent)>','<android.inputmethodservice.KeyboardView$3: void onPress(int)>','<android.hardware.SensorManager: java.util.List getSensorList(int)>','<com.android.server.EventLogTags: void writeWatchdogProcStats(int,int,int,int,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>','<com.android.vcard.VCardBuilder: void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean)>','<android.content.pm.IPackageDeleteObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.PopupWindow: android.view.View access$900(android.widget.PopupWindow)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void topAppWindowChanged(boolean)>','<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyProperties)>','<android.app.ActivityThread$ApplicationThread: void scheduleSuicide()>','<com.android.internal.util.CharSequences$2: char charAt(int)>','<android.app.IUiModeManager$Stub$Proxy: void disableCarMode(int)>','<com.android.server.NsdService$NsdStateMachine: java.lang.String getMessageInfo(android.os.Message)>','<com.android.internal.telephony.cdma.CDMAPhone: void sendUssdResponse(java.lang.String)>','<android.widget.MediaController: boolean isShowing()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$1: void <init>(android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl,android.os.Looper)>','<android.content.pm.IPackageManager$Stub$Proxy: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>','<com.android.server.MountService: int decryptStorage(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>','<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService: void <init>(android.content.Context)>','<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>','<com.android.server.wm.WindowManagerService: void resumeRotationLocked()>','<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>','<android.net.DhcpStateMachine: void access$1700(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>','<com.android.server.location.LocationProviderProxy: void updateLocation(android.location.Location)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCellInfo(com.android.internal.telephony.Phone,android.telephony.CellInfo)>','<android.widget.Editor$SuggestionsPopupWindow: int access$1600(android.widget.Editor$SuggestionsPopupWindow)>','<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$000(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.server.MountService: int mountSecureContainer(java.lang.String,java.lang.String,int)>','<android.content.ClipData$Item: java.lang.String getHtmlText()>','<android.os.AsyncTask: void onPreExecute()>','<com.android.internal.telephony.cat.TextMessage$1: com.android.internal.telephony.cat.TextMessage[] newArray(int)>','<com.android.internal.os.PkgUsageStats: int describeContents()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNumeric(android.content.ComponentName)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthsChanged(android.telephony.SignalStrength)>','<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>','<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>','<android.widget.Editor$PositionListener: void onScrollChanged()>','<com.android.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>','<android.app.LoaderManagerImpl: void installLoader(android.app.LoaderManagerImpl$LoaderInfo)>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getDefaultEncoding()>','<com.android.server.wm.BlackFrame$BlackSurface: void setMatrix(android.graphics.Matrix)>','<android.widget.ImageView: void onDetachedFromWindow()>','<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.view.inputmethod.InputMethodManager: void finishInputLocked()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isApnTypeActive(java.lang.String)>','<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase()>','<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>','<android.view.ViewDebug$6: void <init>(android.graphics.Bitmap[],android.view.View,boolean,java.util.concurrent.CountDownLatch)>','<android.widget.TextView: void onDetachedFromWindow()>','<com.android.internal.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>','<android.net.LocalSocketAddress$Namespace: int getId()>','<com.android.internal.telephony.gsm.GSMPhone: void stopDtmf()>','<android.webkit.BrowserFrame: void destroy()>','<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>','<com.android.server.PowerManagerService: void access$1000(com.android.server.PowerManagerService)>','<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<android.content.pm.PermissionGroupInfo: int describeContents()>','<android.content.pm.IPackageDeleteObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.wifi.WifiStateMachine: int access$6704(android.net.wifi.WifiStateMachine)>','<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>','<android.location.Country: void <init>(java.lang.String,int)>','<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getAcceptType()>','<android.net.wifi.WifiApConfigStore: void access$500(android.net.wifi.WifiApConfigStore,android.os.Message)>','<android.webkit.PluginFullScreenHolder: android.webkit.PluginFullScreenHolder$CustomFrameLayout access$300()>','<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<android.net.wifi.WifiNative: boolean reconnect()>','<android.webkit.WebViewDatabaseClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.IWallpaperManagerCallback$Stub: android.app.IWallpaperManagerCallback asInterface(android.os.IBinder)>','<android.graphics.drawable.AnimatedRotateDrawable: void setFramesDuration(int)>','<com.android.server.wm.InputMonitor: void resumeDispatchingLw(com.android.server.wm.WindowToken)>','<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>','<android.net.wifi.WifiWatchdogStateMachine$2: void onChange(boolean)>','<android.app.IProcessObserver$Stub: void <init>()>','<android.os.LatencyTimer: void sample(java.lang.String,long)>','<com.android.internal.telephony.cat.RilMessageDecoder: void access$900(com.android.internal.telephony.cat.RilMessageDecoder,android.os.Message)>','<android.media.MediaPlayer: boolean setParameter(int,int)>','<android.text.NoCopySpan$Concrete: void <init>()>','<com.android.server.MountService: boolean onEvent(int,java.lang.String,java.lang.String[])>','<android.widget.AbsListView: void setStackFromBottom(boolean)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>','<com.android.internal.telephony.cat.Tone: com.android.internal.telephony.cat.Tone[] values()>','<android.widget.ImageView: boolean setFrame(int,int,int,int)>','<android.net.wifi.WifiStateTracker: boolean reconnect()>','<com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesFromDirLI(java.io.File)>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void enter()>','<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void <init>(com.android.internal.policy.impl.PatternUnlockScreen,com.android.internal.policy.impl.PatternUnlockScreen$1)>','<android.graphics.Matrix: void toShortString(java.lang.StringBuilder)>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)>','<android.widget.ListPopupWindow: void clearListSelection()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.net.NetworkPolicyManagerService: void bindNotificationManager(android.app.INotificationManager)>','<android.content.ContextWrapper: void startActivity(android.content.Intent)>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: void checkThread()>','<android.graphics.Path: void <clinit>()>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile4g(java.lang.String)>','<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>','<com.android.internal.telephony.gsm.GsmDataConnection: java.lang.String toString()>','<android.speech.tts.TextToSpeech$11: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<android.location.ICountryListener$Stub$Proxy: void onCountryDetected(android.location.Country)>','<com.android.ex.variablespeed.EngineParameters: void <init>(int,int,float,float,float,int,int,int,int,com.android.ex.variablespeed.EngineParameters$1)>','<com.android.server.NetworkManagementService: void setDnsServersForInterface(java.lang.String,java.lang.String[])>','<android.os.CountDownTimer$1: void <init>(android.os.CountDownTimer)>','<android.app.backup.IRestoreObserver$Stub$Proxy: void onUpdate(int,java.lang.String)>','<android.graphics.ColorFilter: void finalize()>','<android.net.DhcpStateMachine$StoppedState: void enter()>','<android.view.ViewGroup: void <clinit>()>','<android.provider.Settings$NameValueCache: void <init>(java.lang.String,android.net.Uri,java.lang.String)>','<android.text.method.TextKeyListener$NullKeyListener: int getInputType()>','<android.telephony.ServiceState: void <init>()>','<android.net.wifi.WifiNative: boolean setScanResultHandling(int)>','<com.android.i18n.phonenumbers.RegexCache$LRUCache: int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache)>','<android.view.ViewRootImpl: void handleAppVisibility(boolean)>','<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void interrupt()>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCount()>','<com.android.internal.telephony.gsm.SimTlv: void <init>(byte[],int,int)>','<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.sip.SipHelper: void sendInviteRequestTerminated(javax.sip.message.Request,javax.sip.ServerTransaction)>','<com.android.server.InputMethodManagerService: boolean access$300(com.android.server.InputMethodManagerService)>','<android.location.ICountryDetector$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.GeolocationPermissionsClassic$2: void handleMessage(android.os.Message)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableBluetoothRegexs()>','<com.android.internal.widget.multiwaveview.GlowPadView$AnimationBundle: void stop()>','<android.net.wifi.WifiStateMachine$L2ConnectedState: boolean processMessage(android.os.Message)>','<android.telephony.TelephonyManager: int getVoiceMessageCount()>','<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void deactivate()>','<android.renderscript.RenderScript: int nElementCreate2(int[],java.lang.String[],int[])>','<android.view.Display: int getRawExternalHeight()>','<com.android.internal.util.AsyncChannel$SyncMessenger: void <clinit>()>','<com.android.server.EventLogTags: void writeBackupSuccess(int,int)>','<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState: void enter()>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onOtaspChanged(int)>','<com.android.internal.view.IInputContext$Stub$Proxy: void performContextMenuAction(int)>','<android.webkit.ViewManager$ChildView: void attachView(int,int,int,int)>','<com.android.internal.os.RuntimeInit: boolean access$002(boolean)>','<android.animation.FloatEvaluator: void <init>()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void commitTemporaryMetaData()>','<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)>','<android.net.Uri$Part: android.net.Uri$Part from(java.lang.String,java.lang.String)>','<android.webkit.MustOverrideException: void <init>()>','<android.inputmethodservice.Keyboard: int access$400(android.inputmethodservice.Keyboard)>','<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>','<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>','<com.android.internal.telephony.WspTypeDecoder: void <init>(byte[])>','<com.android.uiautomator.core.UiDevice: void setRotationRight()>','<com.android.server.pm.PackageManagerService: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>','<com.android.server.net.NetworkPolicyManagerService$3: void onReceive(android.content.Context,android.content.Intent)>','<android.view.View: int getAccessibilityCursorPosition()>','<android.os.Environment: java.io.File getExternalStorageAndroidDataDir()>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean performClick()>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void access$1000(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask,java.lang.Throwable)>','<com.android.internal.telephony.sip.SipPhone: void setEchoSuppressionEnabled(boolean)>','<android.app.BackStackRecord: int getBreadCrumbTitleRes()>','<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.pm.ShutdownThread: void <clinit>()>','<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void destroy()>','<android.location.Country$1: android.location.Country createFromParcel(android.os.Parcel)>','<android.animation.IntEvaluator: void <init>()>','<android.filterpacks.videosrc.MediaSource$1: void <init>(android.filterpacks.videosrc.MediaSource)>','<android.webkit.WebViewDatabaseClassic: void clearFormData()>','<android.view.KeyEvent$1: android.view.KeyEvent createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.ServiceStateTracker: void handleMessage(android.os.Message)>','<com.android.server.AppWidgetService: com.android.server.AppWidgetServiceImpl access$000(com.android.server.AppWidgetService)>','<android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)>','<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)>','<com.android.internal.policy.impl.FaceUnlock: void hide()>','<android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext$1: void <init>(android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext,javax.microedition.khronos.egl.EGLContext)>','<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>','<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>','<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()>','<android.app.ContextImpl$20: java.lang.Object createStaticService()>','<android.server.BluetoothPanProfileHandler: boolean allowIncomingTethering()>','<com.android.server.PowerManagerService: void access$1100(com.android.server.PowerManagerService,int)>','<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>','<android.app.SearchDialog: void onCreate(android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void loge(java.lang.String)>','<android.view.Display: int getRotation()>','<android.text.DynamicLayout: int[] getBlockEndLines()>','<android.speech.tts.TextToSpeech: android.os.IBinder access$100(android.speech.tts.TextToSpeech)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean access$400(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isApnTypeEnabled(java.lang.String)>','<android.app.SearchDialog: void onBackPressed()>','<android.view.ViewRootImpl$2: void setFormat(int)>','<com.android.internal.view.menu.ActionMenuView: boolean hasDividerBeforeChildAt(int)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: void onServiceDisconnected(android.content.ComponentName)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)>','<com.android.internal.policy.impl.LockScreen: boolean access$1000(com.android.internal.policy.impl.LockScreen)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<android.webkit.WebSettingsClassic: int getMinimumLogicalFontSize()>','<android.widget.MediaController: void hide()>','<android.content.ClipboardManager$2: void <init>(android.content.ClipboardManager)>','<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()>','<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUri(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void getDataRegistrationState(android.os.Message)>','<android.app.UiModeManager: void setNightMode(int)>','<android.preference.Preference$BaseSavedState: void <clinit>()>','<com.android.internal.telephony.RIL: void deactivateDataCall(int,int,android.os.Message)>','<android.widget.TextView: java.lang.String getPrivateImeOptions()>','<android.net.sip.SipAudioCall$Listener: void onCallEnded(android.net.sip.SipAudioCall)>','<com.android.internal.widget.multiwaveview.GlowPadView: void reset(boolean)>','<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>','<com.android.server.pm.Installer: int freeCache(long)>','<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()>','<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)>','<android.text.method.WordIterator: int preceding(int)>','<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentProvider$Transport: java.lang.String getProviderName()>','<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)>','<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler: void logd(java.lang.String)>','<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>','<android.database.sqlite.SQLiteConnection: int getConnectionId()>','<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getRemoteUuids(java.lang.String)>','<android.view.KeyEvent: void startTracking()>','<com.android.server.ConnectivityService: android.os.Handler access$3300(com.android.server.ConnectivityService)>','<android.widget.ListView: int measureHeightOfChildren(int,int,int,int,int)>','<android.util.SparseArray: void <init>(int)>','<android.webkit.WebViewCore$TextFieldInitData: void <init>()>','<android.os.WorkSource: void <init>(android.os.WorkSource)>','<android.widget.CheckBox: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality()>','<android.widget.RelativeLayout: void requestLayout()>','<android.telephony.SignalStrength: int getGsmAsuLevel()>','<android.preference.PreferenceGroupAdapter: boolean isEnabled(int)>','<com.android.server.wm.WindowManagerService: void wallpaperOffsetsComplete(android.os.IBinder)>','<android.location.Address: int access$100(android.location.Address)>','<com.android.internal.widget.WaveView: void <init>(android.content.Context)>','<android.opengl.GLLogWrapper: void glTexEnvi(int,int,int)>','<android.telephony.SmsMessage: boolean isStatusReportMessage()>','<android.os.Debug: void dumpReferenceTables()>','<android.widget.ZoomButtonsController: android.view.View access$300(android.widget.ZoomButtonsController)>','<com.android.server.NsdService$ClientInfo: void <init>(com.android.server.NsdService,com.android.internal.util.AsyncChannel,android.os.Messenger,com.android.server.NsdService$1)>','<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>','<android.content.Loader: void <init>(android.content.Context)>','<com.android.server.wm.WindowStateAnimator: void setWallpaperOffset(int,int)>','<com.android.server.PowerManagerService: com.android.server.LightsService$Light access$4700(com.android.server.PowerManagerService)>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: boolean matches(com.android.server.usb.UsbSettingsManager$AccessoryFilter)>','<com.android.internal.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)>','<com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)>','<com.android.server.wm.InputMonitor: int interceptMotionBeforeQueueingWhenScreenOff(int)>','<android.app.Dialog: boolean requestWindowFeature(int)>','<android.media.SoundPool: void finalize()>','<android.webkit.WebViewClassic: void goBack()>','<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.policy.impl.PhoneWindowManager: void handleVolumeKey(int,int)>','<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>','<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>','<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: void onChange(boolean,android.net.Uri)>','<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>','<android.widget.AbsListView: void access$3700(android.widget.AbsListView,android.view.View,boolean)>','<com.android.internal.util.ProcFileReader: void finishLine()>','<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage$MessageLevel messageLevel()>','<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>','<com.android.server.usb.UsbDeviceManager: java.lang.String[] access$1302(com.android.server.usb.UsbDeviceManager,java.lang.String[])>','<android.net.wifi.WifiManager$Channel: int putListener(java.lang.Object)>','<android.opengl.GLLogWrapper: void glCullFace(int)>','<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName(android.content.Context)>','<android.content.pm.ActivityInfo: void <init>(android.os.Parcel,android.content.pm.ActivityInfo$1)>','<android.app.WallpaperManager: int getDesiredMinimumHeight()>','<com.android.internal.telephony.cdma.CdmaConnection: long getHoldDurationMillis()>','<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>','<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)>','<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>','<com.android.server.sip.SipSessionGroup: void <clinit>()>','<android.net.ConnectivityManager: boolean setRadio(int,boolean)>','<android.widget.SearchView: java.lang.CharSequence getQuery()>','<com.android.internal.telephony.sip.SipConnectionBase: java.lang.String getRemainingPostDialString()>','<android.webkit.WebSettingsClassic: java.lang.String getFantasyFontFamily()>','<android.webkit.WebView: boolean access$901(android.webkit.WebView,int,android.graphics.Rect)>','<android.widget.Editor$InsertionHandleView: void show()>','<android.os.Debug: java.lang.String[] getVmFeatureList()>','<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()>','<android.widget.OverScroller$SplineOverScroller: long access$600(android.widget.OverScroller$SplineOverScroller)>','<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>','<com.android.internal.telephony.IccRefreshResponse: void <init>()>','<android.graphics.SurfaceTexture: void updateTexImage()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onTimeChanged()>','<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>','<com.android.internal.telephony.cdma.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>','<android.app.Activity: void onCreate(android.os.Bundle)>','<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.webkit.CallbackProxy$UploadFileMessageData: java.lang.String getCapture()>','<android.net.INetworkPolicyManager$Stub$Proxy: int getAppPolicy(int)>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: void onPress()>','<android.app.ActivityThread$ResourcesKey: int hashCode()>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void readSummaryFromParcelLocked(android.os.Parcel)>','<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)>','<android.view.HardwareRenderer: void initializeIfNeeded(int,int,android.view.SurfaceHolder)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCall getForegroundCall()>','<android.os.UserId: int getUid(int,int)>','<com.android.ex.variablespeed.MediaPlayerDataSource: void setAsSourceFor(android.media.MediaPlayer)>','<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>','<android.widget.TextView$Marquee: void start(int)>','<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>','<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.util.Locale,java.lang.String[],int,java.lang.Class)>','<com.android.internal.view.BaseIWindow: void dispatchDragEvent(android.view.DragEvent)>','<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>','<android.telephony.SmsCbCmasInfo: void <init>(android.os.Parcel)>','<android.content.Entity: java.util.ArrayList getSubValues()>','<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>','<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>','<com.android.server.wm.WindowManagerService: void setStrictModeVisualIndicatorPreference(java.lang.String)>','<com.android.internal.policy.impl.PatternUnlockScreen$3: void onTick(long)>','<com.android.internal.view.menu.MenuPopupHelper: android.os.Parcelable onSaveInstanceState()>','<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked(int)>','<android.graphics.Matrix: void <init>(android.graphics.Matrix)>','<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>','<android.location.Location: void setLatitude(double)>','<android.view.Window: void setSoftInputMode(int)>','<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<android.graphics.Typeface: boolean isItalic()>','<android.os.Bundle: long getLong(java.lang.String)>','<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>','<android.media.IAudioService$Stub$Proxy: void setMasterVolume(int,int)>','<android.net.http.RequestQueue: void requeueRequest(android.net.http.Request)>','<com.android.server.WallpaperManagerService$WallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>','<com.android.internal.app.ActionBarImpl: void <init>(android.app.Activity)>','<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>','<android.database.AbstractWindowedCursor: double getDouble(int)>','<com.android.internal.telephony.DataConnection: boolean configureRetry(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void unregisterForT53ClirInfo(android.os.Handler)>','<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>','<android.widget.ZoomButtonsController: void setFocusable(boolean)>','<com.android.internal.telephony.IccUtils: java.lang.String bcdToString(byte[],int,int)>','<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>','<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>','<android.app.Fragment: android.view.View getView()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: void willCreate()>','<com.android.vcard.VCardParser_V40: void parse(java.io.InputStream)>','<android.widget.ProgressBar: void onAttachedToWindow()>','<android.webkit.WebHistoryItem: java.lang.Object getCustomData()>','<android.renderscript.RenderScript$Priority: android.renderscript.RenderScript$Priority[] values()>','<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>','<android.widget.AdapterView: int getFirstVisiblePosition()>','<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>','<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>','<android.net.DhcpStateMachine: void access$1900(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.net.ProxyProperties: int describeContents()>','<android.view.View: int getDrawingCacheBackgroundColor()>','<com.android.server.NetworkManagementService$NetdResponseCode: void <init>(com.android.server.NetworkManagementService)>','<android.view.textservice.SpellCheckerInfo$1: android.view.textservice.SpellCheckerInfo[] newArray(int)>','<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>','<android.view.ScaleGestureDetector: float getPreviousSpanX()>','<com.android.internal.os.BatteryStatsImpl: void reportExcessiveCpuLocked(int,java.lang.String,long,long)>','<com.android.server.pm.PackageManagerService: java.util.List queryInstrumentation(java.lang.String,int)>','<android.media.AudioService$AudioFocusDeathHandler: void <init>(android.media.AudioService,android.os.IBinder)>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.ContentResolver$1: void onStatusChanged(int)>','<android.text.method.DialerKeyListener: void <clinit>()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIIIII(int,int,int,int,int,int,int)>','<com.android.internal.telephony.BaseCommands: void unSetOnCallRing(android.os.Handler)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$000(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>','<com.android.internal.util.JournaledFile: java.io.File chooseForRead()>','<com.android.internal.telephony.cdma.sms.SmsEnvelope: void <init>()>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAddress()>','<android.net.NetworkStats: void <init>(android.os.Parcel)>','<android.widget.ListView: void onFinishInflate()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: void onClick(android.view.View)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelBondProcess(java.lang.String)>','<android.media.IAudioService$Stub$Proxy: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>','<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>','<android.view.View$ListenerInfo: android.view.View$OnDragListener access$602(android.view.View$ListenerInfo,android.view.View$OnDragListener)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$11100(android.net.wifi.WifiStateMachine)>','<android.preference.Preference: boolean isSelectable()>','<com.android.server.location.LocationProviderProxy: void removeListener(int)>','<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>','<com.android.server.wm.WindowManagerService: void moveInputMethodDialogsLocked(int)>','<android.renderscript.ProgramStore$DepthFunc: void <clinit>()>','<com.android.internal.R$styleable: void <clinit>()>','<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>','<android.view.ViewGroup: void dispatchScreenStateChanged(int)>','<com.android.server.am.BatteryStatsService: boolean access$100(com.android.server.am.BatteryStatsService)>','<com.android.server.AttributeCache: void init(android.content.Context)>','<com.android.server.Watchdog$1: void <init>(com.android.server.Watchdog,java.lang.String,java.lang.String,java.io.File)>','<com.android.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>','<android.net.http.HttpConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>','<android.content.pm.VerifierDeviceIdentity: void writeToParcel(android.os.Parcel,int)>','<android.graphics.drawable.ScaleDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.content.IntentFilter: java.util.Iterator typesIterator()>','<android.widget.AbsSpinner$RecycleBin: void put(int,android.view.View)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher$SmsCbConcatInfo: boolean equals(java.lang.Object)>','<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>','<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onUserChanged(int)>','<android.view.ViewDebug$RecyclerTraceType: android.view.ViewDebug$RecyclerTraceType valueOf(java.lang.String)>','<android.os.Handler: void dispatchMessage(android.os.Message)>','<android.net.EthernetDataTracker: android.net.LinkProperties access$502(android.net.EthernetDataTracker,android.net.LinkProperties)>','<android.os.Debug$MemoryInfo: int getOtherPss(int)>','<android.content.IntentFilter: void <init>(android.content.IntentFilter)>','<android.telephony.SmsManager: boolean enableCellBroadcastRange(int,int)>','<com.android.internal.telephony.PhoneProxy: void unregisterForUnknownConnection(android.os.Handler)>','<android.view.ViewRootImpl: void unscheduleConsumeBatchedInput()>','<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailAlphaTag()>','<com.android.internal.telephony.RIL: void sendTerminalResponse(java.lang.String,android.os.Message)>','<com.android.internal.telephony.cat.RilMessageDecoder: boolean access$200(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.cat.RilMessage)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasId()>','<android.webkit.WebIconDatabaseClassic: android.graphics.Bitmap access$800(java.lang.String)>','<com.android.server.NotificationManagerService$ToastRecord: void update(int)>','<android.webkit.WebViewCore: android.content.Context getContext()>','<android.animation.AnimatorSet: void cancel()>','<android.os.PowerManager$WakeLock: boolean isHeld()>','<android.app.ActivityThread$ApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>','<android.view.accessibility.AccessibilityNodeProvider: void <init>()>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.p2p.WifiP2pGroup: void setPassphrase(java.lang.String)>','<android.opengl.GLLogWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>','<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>','<android.os.ServiceManagerProxy: void <init>(android.os.IBinder)>','<android.view.ViewRootImpl: void <clinit>()>','<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>','<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>','<android.filterfw.core.Filter: int getNumberOfOutputs()>','<android.app.ActivityOptions$1: void sendResult(android.os.Bundle)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getMeid()>','<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>','<android.webkit.SslClientCertLookupTable: byte[][] CertificateChain(java.lang.String)>','<android.os.Parcel: java.io.Serializable readSerializable()>','<android.app.INotificationManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ActivityManager$RunningAppProcessInfo: void <clinit>()>','<com.android.server.AppWidgetServiceImpl: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)>','<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.view.InputChannel)>','<android.telephony.SmsMessage: byte[] getUserData()>','<com.android.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>','<android.os.storage.StorageManager$ObbListenerDelegate: void sendObbStateChanged(java.lang.String,int)>','<com.android.internal.telephony.SMSDispatcher: int getNextConcatenatedRef()>','<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>','<android.location.Address: void setCountryCode(java.lang.String)>','<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,int)>','<android.app.IBackupAgent$Stub$Proxy: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>','<android.view.WindowOrientationListener: int getProposedRotation()>','<android.util.SparseBooleanArray: boolean valueAt(int)>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void onResult(android.os.Bundle)>','<android.server.BluetoothService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.nfc.INfcAdapterExtras$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.animation.Transformation: void <init>()>','<android.net.sip.SipProfile$1: void <init>()>','<android.service.wallpaper.IWallpaperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.IBackupAgent$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void unstableProviderDied(android.os.IBinder)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void cleanUp()>','<android.widget.RemoteViews: int estimateMemoryUsage()>','<android.content.res.XmlBlock$Parser: boolean getFeature(java.lang.String)>','<com.android.server.NotificationManagerService: boolean cancelAllNotificationsInt(java.lang.String,int,int,boolean)>','<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.webkit.CallbackProxy$8: void onClick(android.content.DialogInterface,int)>','<android.opengl.ManagedEGLContext: void <init>(javax.microedition.khronos.egl.EGLContext)>','<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>','<android.webkit.FindActionModeCallback: void showSoftInput()>','<android.widget.ListView$FocusSelector: android.widget.ListView$FocusSelector setup(int,int)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onHangup()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasMainCountryForCode()>','<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.view.View: void setDisabledSystemUiVisibility(int)>','<android.preference.PreferenceGroupAdapter$1: void run()>','<android.animation.ValueAnimator: boolean access$200(android.animation.ValueAnimator,long)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1: void <init>()>','<android.view.HardwareRenderer$GlRenderer$FunctorsRunnable: void <init>(android.view.HardwareRenderer$GlRenderer)>','<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call$State access$1100(android.net.sip.SipAudioCall)>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)>','<com.android.server.location.GpsLocationProvider: void access$1600(com.android.server.location.GpsLocationProvider,int)>','<android.webkit.WebViewClassic: boolean focusCandidateIsEditableText()>','<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>','<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()>','<android.content.ClipDescription: boolean toShortString(java.lang.StringBuilder)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void finalize()>','<com.android.internal.telephony.sip.SipPhone: void clearDisconnected()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasEmergency()>','<android.content.Intent$ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothAdapterStateMachine: void access$4500(android.server.BluetoothAdapterStateMachine,int)>','<android.view.InflateException: void <init>()>','<com.android.internal.telephony.cat.ResultException: void <init>(com.android.internal.telephony.cat.ResultCode,int,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: void access$800(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkTemplate,int)>','<android.view.View$5: void setValue(android.view.View,float)>','<android.content.res.Configuration: void makeDefault()>','<android.location.IGpsStatusProvider$Stub: android.location.IGpsStatusProvider asInterface(android.os.IBinder)>','<android.app.IUiModeManager$Stub: android.app.IUiModeManager asInterface(android.os.IBinder)>','<android.widget.Spinner$DropdownPopup: java.lang.CharSequence getHintText()>','<android.content.SyncOperation: void <init>(android.content.SyncOperation)>','<android.hardware.Camera$Parameters: void unflatten(java.lang.String)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: int getCurrentPosition()>','<android.net.sip.SipProfile: boolean getSendKeepAlive()>','<android.net.NetworkInfo: java.lang.String access$602(android.net.NetworkInfo,java.lang.String)>','<android.webkit.WebViewClassic: int access$3000(android.webkit.WebViewClassic)>','<android.webkit.WebSettingsClassic: android.webkit.WebSettings$ZoomDensity getDefaultZoom()>','<android.view.View$9: void setValue(java.lang.Object,float)>','<android.widget.AbsListView: android.os.StrictMode$Span access$1300(android.widget.AbsListView)>','<android.view.View$DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>','<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>','<android.content.ClipData: void <init>(android.content.ClipData)>','<com.android.i18n.phonenumbers.PhoneNumberMatch: void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.server.wm.WindowManagerService: void dumpAppTokensLocked()>','<com.android.server.wm.WindowAnimator: void clearPendingActions()>','<com.android.internal.telephony.IccFileHandler: java.lang.String getCommonIccEFPath(int)>','<com.android.server.input.InputManagerService: boolean filterInputEvent(android.view.InputEvent,int)>','<android.webkit.HTML5VideoViewProxy: void exitFullScreenVideo()>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen,java.lang.String,java.lang.String)>','<android.webkit.WebViewDatabaseClassic$1: void <init>(android.webkit.WebViewDatabaseClassic,android.content.Context)>','<com.android.server.WallpaperManagerService: void switchWallpaper(com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.widget.IRemoteViewsFactory$Stub: com.android.internal.widget.IRemoteViewsFactory asInterface(android.os.IBinder)>','<android.webkit.WebView$PrivateAccess: boolean super_requestFocus(int,android.graphics.Rect)>','<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>','<android.os.ParcelFileDescriptor: void finalize()>','<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.IConnectivityManager,android.os.Looper)>','<android.view.animation.Animation: boolean willChangeTransformationMatrix()>','<com.android.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>','<android.content.Loader$ForceLoadContentObserver: void <init>(android.content.Loader)>','<android.widget.ZoomButtonsController$1: void onReceive(android.content.Context,android.content.Intent)>','<android.os.Handler: android.os.Message obtainMessage()>','<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdClientThread(long,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.app.ProgressDialog: int getMax()>','<com.android.internal.widget.ActionBarView$HomeView: void onFinishInflate()>','<android.content.res.XmlBlock: int access$700(int,int)>','<android.widget.PopupWindow: void update(int,int)>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine$PendingOperation insertIntoPending(android.content.SyncStorageEngine$PendingOperation)>','<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)>','<android.media.IAudioService$Stub$Proxy: void reloadAudioSettings()>','<android.content.pm.UserInfo: java.lang.String toString()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>','<com.android.internal.telephony.cat.Tone$1: void <init>()>','<android.inputmethodservice.IInputMethodWrapper: void revokeSession(com.android.internal.view.IInputMethodSession)>','<android.widget.ListView: void smoothScrollToPosition(int)>','<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>','<android.widget.LinearLayout: void setGravity(int)>','<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>','<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float,float)>','<com.android.internal.telephony.PhoneProxy: void disableDnsCheck(boolean)>','<com.android.internal.view.menu.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>','<android.net.wifi.WifiConfiguration: int describeContents()>','<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getUsers()>','<android.filterpacks.videosink.MediaEncoderFilter: boolean skipFrameAndModifyTimestamp(long)>','<android.bluetooth.BluetoothDeviceProfileState: void access$3500(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.os.Trace: long access$100()>','<android.widget.Toast: void cancel()>','<android.widget.ProgressBar$RefreshData: void setNextPoolable(android.widget.ProgressBar$RefreshData)>','<android.webkit.GeolocationPermissionsClassic: void createUIHandler()>','<android.view.View: int getFadeTop(boolean)>','<android.view.MotionEvent: float getHistoricalSize(int,int)>','<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path$Direction)>','<com.android.internal.telephony.sip.SipCommandInterface: void getMute(android.os.Message)>','<com.android.server.PowerManagerService$8: void <init>(com.android.server.PowerManagerService)>','<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>','<com.android.internal.telephony.IntRangeManager$IntRange: void <init>(com.android.internal.telephony.IntRangeManager,int,int,java.lang.String)>','<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>','<android.content.SyncManager$3: void <init>(android.content.SyncManager)>','<com.android.server.EventLogTags: void writeBootProgressSystemRun(long)>','<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>','<com.android.internal.telephony.DataConnectionAc: void reqSetLinkPropertiesHttpProxy(android.net.ProxyProperties)>','<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName)>','<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context)>','<android.webkit.WebViewClassic: boolean setFrame(int,int,int,int)>','<android.webkit.WebViewClassic: void setTouchInterval(int)>','<android.widget.AbsListView$RecycleBin: void removeSkippedScrap()>','<com.android.internal.view.IInputConnectionWrapper: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>','<android.text.BoringLayout: int getEllipsisStart(int)>','<android.content.pm.ActivityInfo$1: void <init>()>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getInstalledAccessibilityServiceList()>','<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Handler)>','<android.view.View: void onAnimationStart()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean canBeInternationallyDialled(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.opengl.GLLogWrapper: void <init>(javax.microedition.khronos.opengles.GL,java.io.Writer,boolean)>','<android.media.AudioService$ScoClient: void <init>(android.media.AudioService,android.os.IBinder)>','<android.widget.TextView: void onSelectionChanged(int,int)>','<android.view.MenuInflater$MenuState: boolean hasAddedItem()>','<android.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()>','<android.animation.PropertyValuesHolder: void access$400(java.lang.Object,int,float)>','<android.provider.ContactsContract$RawContactsEntity: void <clinit>()>','<com.android.server.EventLogTags: void writeBackupInitialize()>','<android.widget.Editor$EasyEditPopupWindow: void <init>(android.widget.Editor,android.widget.Editor$1)>','<com.android.internal.telephony.gsm.GsmMmiCode: void <init>(com.android.internal.telephony.gsm.GSMPhone)>','<android.content.pm.ContainerEncryptionParams: void writeToParcel(android.os.Parcel,int)>','<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>','<android.bluetooth.BluetoothDeviceProfileState: void access$6100(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.animation.LayoutTransition: long access$400(android.animation.LayoutTransition)>','<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>','<com.android.internal.widget.ActionBarView$SavedState$1: void <init>()>','<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>','<android.graphics.Rect: void <init>()>','<android.text.Layout$SpannedEllipsizer: java.lang.CharSequence subSequence(int,int)>','<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>','<android.database.CursorWindow: boolean isLong(int,int)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth access$000(android.bluetooth.BluetoothAdapter)>','<com.android.server.wm.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>','<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.net.Uri)>','<com.android.internal.util.StateMachine: boolean isQuit(android.os.Message)>','<android.graphics.drawable.InsetDrawable$InsetState: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setStale()>','<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked(android.os.WorkSource)>','<android.media.AudioService: boolean checkAudioSettingsPermission(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()>','<android.webkit.CookieManagerClassic$1: void <init>(android.webkit.CookieManagerClassic)>','<android.net.NetworkStats: android.net.NetworkStats addIfaceValues(java.lang.String,long,long,long,long)>','<com.android.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>','<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>','<android.content.ClipData$Item: java.lang.String toString()>','<android.os.MemoryFile: void finalize()>','<android.preference.Preference: java.lang.String getFragment()>','<android.os.RemoteCallback: int describeContents()>','<android.graphics.Canvas: void setDensity(int)>','<android.graphics.drawable.AnimatedRotateDrawable: void <init>()>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$1: void run()>','<android.webkit.CallbackProxy$8: void <init>(android.webkit.CallbackProxy,android.webkit.JsPromptResult,android.widget.EditText)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setSubtitle(java.lang.CharSequence)>','<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String[])>','<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>','<com.android.server.net.NetworkStatsService: void systemReady()>','<android.graphics.drawable.StateListDrawable: boolean isStateful()>','<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>','<android.database.CursorWrapper: void <init>(android.database.Cursor)>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.http.IdleCache: int access$100(android.net.http.IdleCache)>','<android.net.wifi.WifiStateMachine$WpsRunningState: void enter()>','<com.android.server.location.GpsLocationProvider: boolean supportsSpeed()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$700(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<com.android.internal.telephony.cdma.sms.BearerData: byte[] encode(com.android.internal.telephony.cdma.sms.BearerData)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$1700(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>','<android.telephony.SmsCbCmasInfo: int getResponseType()>','<android.app.ContextImpl$34: void <init>()>','<android.widget.TextView: void onEditorAction(int)>','<android.net.sip.SipAudioCall$1: void onRingingBack(android.net.sip.SipSession)>','<android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)>','<com.android.internal.telephony.RIL: void getAvailableNetworks(android.os.Message)>','<android.view.View: int resolveSizeAndState(int,int,int)>','<android.content.IntentFilter: void addDataScheme(java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.usb.UsbHostManager: void <clinit>()>','<android.widget.Editor: android.graphics.drawable.Drawable access$2602(android.widget.Editor,android.graphics.drawable.Drawable)>','<android.graphics.Bitmap: int getByteCount()>','<android.content.Intent$ShortcutIconResource$1: void <init>()>','<android.webkit.WebSettings$TextSize: android.webkit.WebSettings$TextSize valueOf(java.lang.String)>','<android.os.IPermissionController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>','<com.android.internal.telephony.gsm.SpnOverride: java.lang.String getSpn(java.lang.String)>','<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>','<android.media.AudioService: int getVibrateSetting(int)>','<com.android.internal.telephony.sip.SipPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>','<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener access$1300(android.inputmethodservice.KeyboardView)>','<com.android.internal.widget.multiwaveview.PointCloud$Point: void <init>(com.android.internal.widget.multiwaveview.PointCloud,float,float,float)>','<android.content.pm.IPackageStatsObserver$Stub: android.os.IBinder asBinder()>','<android.widget.SpellChecker$1: void <init>(android.widget.SpellChecker)>','<android.app.ContextImpl$3: java.lang.Object createService(android.app.ContextImpl)>','<android.webkit.CallbackProxy: void onTooManyRedirects(android.os.Message,android.os.Message)>','<android.telephony.SmsCbEtwsInfo: java.lang.String toString()>','<com.android.uiautomator.core.InteractionController: boolean swipe(int,int,int,int,int)>','<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>','<android.content.ClipData$1: void <init>()>','<android.filterpacks.videoproc.BackDropperFilter: void process(android.filterfw.core.FilterContext)>','<android.media.ToneGenerator: boolean startTone(int)>','<android.app.Fragment: java.lang.String getString(int)>','<android.webkit.WebViewClassic: void updateDrawingState()>','<android.net.wifi.WifiStateMachine: void access$13100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.MountService: void waitForAsecScan()>','<com.android.server.AppWidgetService$2: void <init>(com.android.server.AppWidgetService)>','<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>','<com.android.internal.app.ActionBarImpl: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>','<android.hardware.Camera$Parameters: void setGpsLongitude(double)>','<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>','<android.content.IClipboard$Stub: android.os.IBinder asBinder()>','<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>','<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionKey()>','<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(java.lang.String,int)>','<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>','<android.util.SparseBooleanArray: void <init>(int)>','<android.location.GeocoderParams: java.lang.String getClientPackage()>','<android.app.ApplicationThreadProxy: void <init>(android.os.IBinder)>','<android.os.BatteryStats$BitDescription: void <init>(int,java.lang.String)>','<android.text.style.MetricAffectingSpan$Passthrough: void updateDrawState(android.text.TextPaint)>','<android.content.res.AssetManager$AssetInputStream: int read()>','<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$2102(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>','<android.net.WebAddress: java.lang.String getHost()>','<android.view.ViewRootImpl$TrackballAxis: float collect(float,long,java.lang.String)>','<android.widget.SuggestionsAdapter$ChildViewCache: void <init>(android.view.View)>','<android.text.Editable$Factory: void <clinit>()>','<com.android.internal.view.IInputMethodSession$Stub: android.os.IBinder asBinder()>','<android.view.VolumePanel: void onStopTrackingTouch(android.widget.SeekBar)>','<com.android.internal.net.LegacyVpnInfo: void <init>()>','<android.webkit.WebViewClassic: void requestListBox(java.lang.String[],int[],int)>','<android.app.INotificationManager$Stub$Proxy: void cancelNotification(java.lang.String,int)>','<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)>','<com.android.server.am.BatteryStatsService: void noteWifiOff()>','<android.telephony.SmsMessage: android.telephony.SmsMessage newFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cdma.CDMAPhone: int getVoiceMessageCount()>','<com.android.internal.telephony.IccRecords: void unregisterForRecordsEvents(android.os.Handler)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$16900(android.net.wifi.WifiStateMachine)>','<android.os.ParcelUuid: void <clinit>()>','<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>','<android.webkit.WebViewClassic$OnTrimMemoryListener: void <clinit>()>','<com.android.internal.policy.impl.LockPatternKeyguardView$1: void run()>','<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>','<com.android.server.WifiService$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.gsm.GsmConnection: boolean compareTo(com.android.internal.telephony.DriverCall)>','<android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation valueOf(java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: void conference()>','<android.content.Intent: void <init>(android.os.Parcel)>','<android.view.View$TransformationInfo: boolean access$1202(android.view.View$TransformationInfo,boolean)>','<com.android.internal.app.AlertController: android.widget.Button getButton(int)>','<android.graphics.Matrix: void mapPoints(float[],float[])>','<android.renderscript.RenderScript: boolean isAlive()>','<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()>','<com.android.server.pm.ShutdownThread$4: void <init>(com.android.server.pm.ShutdownThread)>','<android.telephony.SmsMessage: boolean isEmail()>','<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>','<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>','<android.net.nsd.NsdServiceInfo: void <clinit>()>','<android.bluetooth.BluetoothClass: int getDeviceClass()>','<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()>','<android.content.ContentProviderOperation: boolean isWriteOperation()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateSelection(int,int,int,int,int,int)>','<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)>','<android.server.BluetoothAdapterStateMachine: void access$3200(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.telephony.PhoneProxy: android.telephony.CellLocation getCellLocation()>','<android.opengl.GLLogWrapper: void glTexParameterf(int,int,float)>','<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>','<android.view.GLES20Canvas$CanvasFinalizer: void <init>(int)>','<android.net.IThrottleManager$Stub: android.os.IBinder asBinder()>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: void <init>(long,int[])>','<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$300(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>','<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>','<android.telephony.SmsCbMessage: int getServiceCategory()>','<android.os.AsyncTask: boolean isCancelled()>','<android.app.ActivityManager$RecentTaskInfo$1: void <init>()>','<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity getActivity()>','<com.android.server.am.ActivityRecord: void makeFinishing()>','<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>','<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>','<com.android.internal.telephony.cdma.RuimRecords: void handleMessage(android.os.Message)>','<android.net.NetworkPolicyManager: void setAppPolicy(int,int)>','<android.text.InputFilter$AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<android.net.wifi.WifiNative: boolean stopFilteringMulticastV6Packets()>','<com.android.internal.telephony.sip.SipPhone: void sendUssdResponse(java.lang.String)>','<android.media.AudioService$VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int,android.media.AudioService$1)>','<com.android.internal.widget.multiwaveview.GlowPadView: int access$502(com.android.internal.widget.multiwaveview.GlowPadView,int)>','<android.content.Intent: int fillIn(android.content.Intent,int)>','<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void focusSearch(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.bluetooth.BluetoothServerSocket: void <init>(int,boolean,boolean,int)>','<com.android.vcard.VCardParserImpl_V21: void <init>(int)>','<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>','<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>','<android.widget.AbsSpinner: void setAdapter(android.widget.Adapter)>','<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>','<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>','<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>','<com.android.server.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)>','<android.telephony.gsm.GsmCellLocation: void setPsc(int)>','<android.view.GLES20Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>','<android.bluetooth.BluetoothInputDevice: void close()>','<com.android.internal.util.HexDump: byte[] toByteArray(int)>','<android.net.wifi.SupplicantStateTracker$ScanState: void <init>(android.net.wifi.SupplicantStateTracker)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixTransformRule()>','<com.android.server.WallpaperManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.graphics.drawable.TransitionDrawable: void startTransition(int)>','<android.widget.ScrollView: float getBottomFadingEdgeStrength()>','<android.widget.LinearLayout: int getLocationOffset(android.view.View)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void <init>(com.android.internal.policy.impl.LockScreen,com.android.internal.widget.SlidingTab)>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: java.lang.String toString()>','<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>','<android.view.ViewRootImpl: void destroyHardwareLayers()>','<android.inputmethodservice.KeyboardView$3: void <init>(android.inputmethodservice.KeyboardView)>','<com.android.server.LocationManagerService$2: void onPackageUpdateFinished(java.lang.String,int)>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onEndRestore()>','<com.android.internal.telephony.DataConnectionTracker: boolean getAnyDataEnabled()>','<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>','<android.net.TrafficStats: void untagSocket(java.net.Socket)>','<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$802(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.webkit.WebViewClassic$SelectionHandleAlpha: void setAlpha(int)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void updateResume(java.lang.String,boolean)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection getFgCallLatestConnection()>','<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.ApnSetting fetchDunApn()>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void setAlpha(float)>','<android.renderscript.RenderScript: android.content.Context getApplicationContext()>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getY()>','<android.bluetooth.BluetoothTetheringDataTracker: int getDefaultGatewayAddr()>','<android.animation.ValueAnimator: void setFloatValues(float[])>','<com.android.server.DevicePolicyManagerService$1$1: void run()>','<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState access$102(android.net.NetworkInfo,android.net.NetworkInfo$DetailedState)>','<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>','<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>','<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>','<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>','<android.content.res.Configuration: int diff(android.content.res.Configuration)>','<com.android.server.NetworkManagementService: void shutdown()>','<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>','<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>','<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>','<android.app.WallpaperInfo: java.lang.String getServiceName()>','<android.webkit.WebIconDatabaseClassic: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>','<com.android.server.location.LocationProviderProxy: void setMinTime(long,android.os.WorkSource)>','<com.android.server.WifiService: boolean access$302(com.android.server.WifiService,boolean)>','<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>','<android.view.View: void setTextDirection(int)>','<com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State valueOf(java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>','<android.content.ContentValues$1: void <init>()>','<android.net.LocalSocketImpl$SocketInputStream: int available()>','<android.app.ActivityThread$ApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.internal.telephony.cdma.CdmaDataConnection: void log(java.lang.String)>','<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>','<android.text.format.Time: void <init>()>','<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.provider.Telephony$Sms: boolean moveMessageToFolder(android.content.Context,android.net.Uri,int,int)>','<android.view.InputChannel$1: android.view.InputChannel createFromParcel(android.os.Parcel)>','<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>','<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>','<android.view.GLES20DisplayList: void setAlpha(float)>','<com.android.internal.widget.SlidingTab: boolean access$202(com.android.internal.widget.SlidingTab,boolean)>','<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>','<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,boolean,boolean)>','<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>','<android.net.LocalSocketImpl$SocketInputStream: int read(byte[],int,int)>','<android.view.View$12: java.lang.Float get(android.view.View)>','<android.os.StrictMode$VmPolicy: java.lang.String toString()>','<android.net.NetworkStatsHistory: void removeBucketsBefore(long)>','<android.webkit.WebViewClassic: void access$5100(android.webkit.WebViewClassic)>','<android.app.ApplicationErrorReport$AnrInfo: void writeToParcel(android.os.Parcel,int)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<android.view.MotionEvent: float getSize()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquired(int)>','<android.view.SurfaceView: void setZOrderOnTop(boolean)>','<android.app.WallpaperManager: void <init>(android.content.Context,android.os.Handler)>','<android.view.GLES20Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>','<com.android.internal.widget.IRemoteViewsFactory$Stub: void <init>()>','<android.graphics.BlurMaskFilter$Blur: android.graphics.BlurMaskFilter$Blur valueOf(java.lang.String)>','<android.net.http.Headers: void setContentEncoding(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String)>','<android.location.GpsSatellite: float getElevation()>','<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>','<android.widget.RelativeLayout$DependencyGraph: void add(android.view.View)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>','<android.widget.Spinner$DropdownPopup$1: void <init>(android.widget.Spinner$DropdownPopup,android.widget.Spinner)>','<android.os.ICancellationSignal$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.hardware.usb.UsbAccessory: java.lang.String toString()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>','<android.widget.RemoteViewsAdapter: boolean hasStableIds()>','<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>','<com.android.internal.telephony.sip.SipCommandInterface: void hangupForegroundResumeBackground(android.os.Message)>','<android.renderscript.RenderScript: void nMeshGetIndices(int,int[],int[],int)>','<android.server.search.SearchManagerService: android.content.Context access$100(android.server.search.SearchManagerService)>','<android.app.PendingIntent: void <clinit>()>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$2: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk)>','<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>','<android.graphics.drawable.ScaleDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<com.android.internal.widget.DrawableHolder: android.graphics.drawable.BitmapDrawable getDrawable()>','<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>','<android.view.View: float getTopFadingEdgeStrength()>','<com.android.internal.telephony.IccCard$2: void <init>(com.android.internal.telephony.IccCard)>','<android.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>','<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>','<android.app.ContextImpl: void enforceCallingPermission(java.lang.String,java.lang.String)>','<android.widget.RemoteViewsAdapter$5: void <init>(android.widget.RemoteViewsAdapter)>','<android.bluetooth.BluetoothSocket: void finalize()>','<android.widget.RelativeLayout$DependencyGraph$Node: android.widget.RelativeLayout$DependencyGraph$Node acquire(android.view.View)>','<com.android.internal.os.BatteryStatsImpl: void clearHistoryLocked()>','<com.android.server.pm.PackageManagerService: java.lang.String nextPackageToClean(java.lang.String)>','<com.android.internal.telephony.cdma.RuimRecords: void onRefresh(boolean,int[])>','<android.content.pm.FeatureInfo: void <init>()>','<android.app.ContextImpl$15: void <init>()>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: boolean isAnimating()>','<android.os.PowerManager: boolean isScreenOn()>','<android.filterfw.core.Filter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<android.hardware.SystemSensorManager$ListenerDelegate: void addSensor(android.hardware.Sensor)>','<android.app.Fragment$SavedState$1: void <init>()>','<android.net.Uri$StringUri: android.net.Uri readFrom(android.os.Parcel)>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int)>','<android.view.KeyEvent: long getDownTime()>','<android.os.Bundle: long getLong(java.lang.String,long)>','<android.provider.ContactsContract$CommonDataKinds$Organization: int getTypeLabelResource(int)>','<com.android.server.input.PersistentDataStore: boolean setCurrentKeyboardLayout(java.lang.String,java.lang.String)>','<android.widget.ListView: boolean fullScroll(int)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>','<android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)>','<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)>','<android.content.ClipDescription: void <init>(android.content.ClipDescription)>','<com.android.internal.telephony.RIL: void getLastPdpFailCause(android.os.Message)>','<android.net.DhcpStateMachine: android.net.DhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>','<android.view.GLES20DisplayList: int getNativeDisplayList()>','<android.webkit.CallbackProxy: void onPageFinished(java.lang.String)>','<android.graphics.drawable.Drawable: void <init>()>','<android.service.wallpaper.IWallpaperConnection$Stub: android.service.wallpaper.IWallpaperConnection asInterface(android.os.IBinder)>','<android.content.res.Resources: int getInteger(int)>','<com.android.server.net.NetworkStatsService: android.net.NetworkStats access$400(com.android.server.net.NetworkStatsService,android.net.NetworkTemplate,long,long)>','<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>','<android.widget.Switch: void setChecked(boolean)>','<android.os.MemoryFile$MemoryInputStream: long skip(long)>','<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>','<com.android.server.am.ContentProviderRecord: java.lang.String toString()>','<android.bluetooth.BluetoothDevice$1: void <init>()>','<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>','<android.util.Log: int i(java.lang.String,java.lang.String)>','<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)>','<android.view.View: void setY(float)>','<android.opengl.GLLogWrapper: void glStencilOp(int,int,int)>','<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.preference.PreferenceManager: void registerOnActivityResultListener(android.preference.PreferenceManager$OnActivityResultListener)>','<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: void <init>(com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.telephony.SmsCbEtwsInfo$1: void <init>()>','<com.android.internal.os.RuntimeInit: android.os.IBinder access$100()>','<com.android.internal.telephony.IccCard: void unregisterForNetworkLocked(android.os.Handler)>','<com.android.server.am.ActivityManagerService$PendingActivityLaunch: void <init>()>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>','<android.hardware.LegacySensorManager$LegacyListener: void <init>(android.hardware.SensorListener)>','<com.android.internal.telephony.PhoneProxy: boolean getIccRecordsLoaded()>','<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>','<android.graphics.RectF: float height()>','<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>','<android.os.INetworkManagementService$Stub$Proxy: android.net.RouteInfo[] getRoutes(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>','<android.app.IUiModeManager$Stub$Proxy: void enableCarMode(int)>','<com.android.server.pm.PackageManagerService$4: void <init>()>','<android.database.CursorWindow: void clear()>','<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationClear(java.lang.String,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void addRecentTaskLocked(com.android.server.am.TaskRecord)>','<com.android.internal.telephony.MccTable: int smallestDigitsMccForMnc(int)>','<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>','<android.widget.EdgeEffect: void finish()>','<android.os.ICancellationSignal$Stub$Proxy: void cancel()>','<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: int compare(java.lang.Object,java.lang.Object)>','<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>','<android.content.ClipData: android.graphics.Bitmap getIcon()>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: void <init>(com.android.internal.policy.impl.GlobalActions,com.android.internal.policy.impl.GlobalActions$1)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder: void <init>()>','<android.server.BluetoothA2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>','<android.view.KeyEvent: java.lang.String actionToString(int)>','<android.webkit.HTML5VideoFullScreen: void enterFullScreenVideoState(int,android.webkit.HTML5VideoViewProxy,android.webkit.WebViewClassic)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: void enter()>','<android.view.GLES20Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>','<android.os.Message: void writeToParcel(android.os.Parcel,int)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearNationalNumber()>','<android.graphics.BlurMaskFilter$Blur: void <clinit>()>','<android.database.CursorWrapper: boolean isBeforeFirst()>','<com.android.internal.telephony.cat.CatCmdMessage$1: com.android.internal.telephony.cat.CatCmdMessage createFromParcel(android.os.Parcel)>','<android.os.DropBoxManager$Entry: java.lang.String getTag()>','<android.util.EventLog: int getTagCode(java.lang.String)>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>','<com.android.internal.telephony.CallManager: boolean registerPhone(com.android.internal.telephony.Phone)>','<com.android.internal.telephony.cat.CatResponseMessage: void setMenuSelection(int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.view.View: int getMeasuredState()>','<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplaySize()>','<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>','<android.webkit.WebSettingsClassic: void setUseWebViewBackgroundForOverscrollBackground(boolean)>','<android.widget.Spinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)>','<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>','<android.widget.PopupWindow: boolean isAboveAnchor()>','<android.widget.TextView: void debug(int)>','<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.rtp.AudioGroup getAudioGroup()>','<com.android.internal.policy.impl.LockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$400(com.android.internal.policy.impl.LockScreen)>','<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.pm.PermissionInfo$1: android.content.pm.PermissionInfo[] newArray(int)>','<android.view.IWindowManager$Stub$Proxy: boolean isKeyguardLocked()>','<android.renderscript.Element: android.renderscript.Element U64_3(android.renderscript.RenderScript)>','<android.net.wifi.WifiNative: java.lang.String p2pConnect(android.net.wifi.p2p.WifiP2pConfig,boolean)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager$1: void run()>','<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()>','<com.android.server.EventLogTags: void writePowerSleepRequested(int)>','<android.view.ViewGroup$ChildListForAccessibility: void <clinit>()>','<android.view.GLES20DisplayList: void setRotation(float)>','<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>','<android.view.ViewGroup: void clearDisappearingChildren()>','<com.android.server.location.GpsLocationProvider$3: boolean sendNiResponse(int,int)>','<android.app.UiModeManager: int getCurrentModeType()>','<com.android.server.WallpaperManagerService$MyPackageMonitor: boolean doPackagesChangedLocked(boolean,com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.telephony.PhoneProxy: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>','<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>','<android.widget.TextView$SavedState$1: void <init>()>','<android.net.sip.SipSession$Listener: void onRegistering(android.net.sip.SipSession)>','<android.widget.AbsListView: boolean sendToTextFilter(int,int,android.view.KeyEvent)>','<com.android.server.wm.WindowManagerService: void setHardKeyboardEnabled(boolean)>','<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>','<android.net.INetworkManagementEventObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>','<android.app.Notification$Builder: java.lang.CharSequence access$700(android.app.Notification$Builder)>','<android.media.MediaRouter: void dispatchRouteSelected(int,android.media.MediaRouter$RouteInfo)>','<android.webkit.WebSettings$TextSize: void <clinit>()>','<android.webkit.WebIconDatabaseClassic$EventHandler$IconResult: void dispatch()>','<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>','<android.net.nsd.DnsSdTxtRecord: int remove(java.lang.String)>','<com.android.server.StatusBarManagerService: void registerStatusBar(com.android.internal.statusbar.IStatusBar,com.android.internal.statusbar.StatusBarIconList,java.util.List,java.util.List,int[],java.util.List)>','<android.net.sip.ISipSession$Stub$Proxy: void register(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getCurrentCalls(android.os.Message)>','<com.android.internal.telephony.cdma.SmsMessage: boolean isMWISetMessage()>','<android.view.inputmethod.InputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>','<android.os.StrictMode$6: void <init>()>','<android.content.pm.IPackageInstallObserver$Stub: android.content.pm.IPackageInstallObserver asInterface(android.os.IBinder)>','<android.widget.AbsListView$FlingRunnable: void start(int)>','<com.android.uiautomator.core.UiDevice: boolean swipe(android.graphics.Point[],int)>','<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSuppServiceNotification(android.os.Handler)>','<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>','<android.database.CursorWrapper: boolean isLast()>','<android.net.wifi.WifiStateMachine: boolean syncRemoveNetwork(com.android.internal.util.AsyncChannel,int)>','<android.net.wifi.WifiConfiguration: java.util.BitSet access$100(android.os.Parcel)>','<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>','<android.view.Window: boolean hasSoftInputMode()>','<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onRefreshBatteryInfo(boolean,boolean,int)>','<android.app.backup.IBackupManager$Stub$Proxy: boolean setBackupPassword(java.lang.String,java.lang.String)>','<com.android.vcard.VCardParserImpl_V40: void <init>(int)>','<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>','<android.view.animation.LayoutAnimationController: boolean willOverlap()>','<com.android.internal.os.BinderInternal: long getLastGcTime()>','<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>','<android.widget.ScrollView: void addView(android.view.View,int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: boolean access$402(com.android.internal.policy.impl.KeyguardStatusViewManager,boolean)>','<com.android.internal.telephony.PhoneBase: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>','<com.android.internal.policy.impl.RecentApplicationsDialog: boolean onKeyDown(int,android.view.KeyEvent)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$1000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message,int)>','<android.widget.ProgressBar$SavedState$1: void <init>()>','<android.widget.AbsSpinner$RecycleBin: void clear()>','<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.Writer)>','<android.graphics.drawable.RotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<android.webkit.HTML5VideoFullScreen$VideoSurfaceView: void <init>(android.webkit.HTML5VideoFullScreen,android.content.Context)>','<android.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.app.Fragment)>','<com.android.internal.app.IMediaContainerService$Stub: void <init>()>','<android.net.wifi.WifiWatchdogStateMachine: void access$2400(android.net.wifi.WifiWatchdogStateMachine,boolean)>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: boolean addPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>','<com.android.server.PowerManagerService: long access$6800(com.android.server.PowerManagerService)>','<android.filterfw.core.FrameFormat: java.lang.String dimensionsToString(int[])>','<android.renderscript.RenderScript: void <init>(android.content.Context)>','<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>','<com.android.server.wm.DragState: boolean notifyDropLw(float,float)>','<android.telephony.CellInfo: void <init>(android.telephony.CellInfo)>','<android.server.search.Searchables: void buildSearchableList()>','<android.widget.TextView: int getCompoundDrawablePadding()>','<android.webkit.ZoomManager: void handleDoubleTap(float,float)>','<com.android.internal.telephony.sip.SipPhone: void getDataCallList(android.os.Message)>','<android.graphics.Rect: void set(android.graphics.Rect)>','<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>','<com.android.internal.policy.impl.LockPatternKeyguardView$2: boolean isVisible(android.view.View)>','<android.net.http.RequestQueue$ActivePool: int access$408(android.net.http.RequestQueue$ActivePool)>','<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>','<android.location.ILocationProvider$Stub: android.location.ILocationProvider asInterface(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.Phone$DataState getDataConnectionState()>','<com.android.internal.policy.impl.SimPukUnlockScreen$1: void onSimLockChangedResponse(boolean)>','<com.android.internal.widget.ActionBarContextView: void setTitleOptional(boolean)>','<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>','<android.renderscript.Element$1: void <clinit>()>','<com.android.internal.statusbar.StatusBarIcon: void <init>(java.lang.String,int,int,int,java.lang.CharSequence)>','<android.graphics.Region: boolean set(android.graphics.Region)>','<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)>','<android.animation.AnimatorSet: long getStartDelay()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getSipDomain()>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)>','<android.graphics.Matrix$ScaleToFit: void <clinit>()>','<com.android.uiautomator.core.UiDevice$1: void run()>','<android.app.SearchableInfo$ActionKeyInfo: java.lang.String getSuggestActionMsg()>','<com.android.server.WifiService$Multicaster: void <init>(com.android.server.WifiService,java.lang.String,android.os.IBinder)>','<android.webkit.WebViewClassic: boolean pageDown(boolean)>','<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendReinvite(javax.sip.Dialog,java.lang.String)>','<android.widget.AbsListView: void access$3000(android.widget.AbsListView,boolean)>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onResume()>','<android.telephony.SignalStrength: void fillInNotifierBundle(android.os.Bundle)>','<android.webkit.WebView: boolean canZoomIn()>','<android.content.pm.PackageParser$SplitPermissionInfo: void <init>(java.lang.String,java.lang.String[],int)>','<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String formatDialString(java.lang.String)>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: void <init>(com.android.internal.telephony.DataConnectionTracker,com.android.internal.telephony.DataConnectionTracker$TxRxSum)>','<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater$Parent,boolean)>','<android.webkit.WebView: void access$1600(android.webkit.WebView,int,int)>','<android.text.TextUtils: void <clinit>()>','<android.util.MathUtils: float atan(float)>','<android.graphics.Paint: void set(android.graphics.Paint)>','<android.net.wifi.p2p.WifiP2pManager$Channel: com.android.internal.util.AsyncChannel access$500(android.net.wifi.p2p.WifiP2pManager$Channel)>','<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName()>','<android.view.IWindowManager$Stub$Proxy: void setInTouchMode(boolean)>','<android.webkit.WebViewClassic: void incrementTextGeneration()>','<android.view.accessibility.AccessibilityEvent$1: android.view.accessibility.AccessibilityEvent[] newArray(int)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>','<com.android.internal.telephony.RIL$RILSender: void <init>(com.android.internal.telephony.RIL,android.os.Looper)>','<com.android.internal.widget.PasswordEntryKeyboard: void setShiftLocked(boolean)>','<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPinCommand()>','<com.android.internal.policy.impl.PhoneWindowManager: void updateRotation(boolean)>','<com.android.internal.view.menu.SubMenuBuilder: boolean collapseItemActionView(com.android.internal.view.menu.MenuItemImpl)>','<com.android.internal.telephony.DataConnectionTracker: boolean isApnIdEnabled(int)>','<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>','<android.location.ILocationProvider$Stub$Proxy: boolean supportsBearing()>','<com.android.server.StatusBarManagerService: void removeIcon(java.lang.String)>','<android.provider.ContactsContract$CommonDataKinds$Im: int getTypeLabelResource(int)>','<android.os.INetworkManagementService$Stub$Proxy: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>','<com.android.vcard.VCardConfig: boolean appendTypeParamName(int)>','<android.app.ActivityManager$RunningAppProcessInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>','<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.statusbar.StatusBarIcon$1: com.android.internal.statusbar.StatusBarIcon[] newArray(int)>','<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()>','<com.android.internal.telephony.PhoneBase: void unregisterForLineControlInfo(android.os.Handler)>','<android.webkit.WebViewCore: void resumeTimers()>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String)>','<com.android.server.AppWidgetService: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isActivePasswordSufficient()>','<android.graphics.Matrix$1: void setTranslate(float,float)>','<android.net.Proxy: org.apache.http.conn.routing.HttpRoutePlanner getAndroidProxySelectorRoutePlanner(android.content.Context)>','<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>','<android.graphics.Rect$1: void <init>()>','<com.android.server.pm.Settings: void insertPackageSettingLPw(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>','<com.android.server.MountService$UnmountObbAction: void <init>(com.android.server.MountService,com.android.server.MountService$ObbState,boolean)>','<com.android.server.am.ActivityManagerService: void unregisterReceiver(android.content.IIntentReceiver)>','<android.widget.AutoCompleteTextView: int getListSelection()>','<android.text.Selection: void setSelection(android.text.Spannable,int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2: boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<com.android.internal.telephony.gsm.GsmConnection: void dispose()>','<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDialog()>','<com.android.internal.telephony.RIL$RILReceiver: void run()>','<com.android.server.PowerManagerService: boolean access$6702(com.android.server.PowerManagerService,boolean)>','<android.content.SyncManager$SyncHandler: void handleMessage(android.os.Message)>','<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteCategory getCategory()>','<android.hardware.ISerialManager$Stub$Proxy: java.lang.String[] getSerialPorts()>','<android.util.SparseLongArray: void <init>(int)>','<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>','<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>','<com.android.server.AlarmManagerService: void remove(android.app.PendingIntent)>','<android.media.AudioManager: void setRingerMode(int)>','<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>','<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>','<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>','<android.view.ViewGroup: void removeView(android.view.View)>','<android.view.View$MeasureSpec: int getSize(int)>','<com.android.server.connectivity.Tethering: void updateConfiguration()>','<android.media.AudioService$ScoClient: int getCount()>','<com.android.internal.telephony.BaseCommands: void unSetOnCatEvent(android.os.Handler)>','<android.view.KeyEvent: void recycle()>','<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>','<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.hardware.Camera$Size: void <init>(android.hardware.Camera,int,int)>','<android.text.style.TypefaceSpan: java.lang.String getFamily()>','<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>','<com.android.internal.os.BatteryStatsImpl$Timer: void detach()>','<android.telephony.CellIdentity: int getCellIdType()>','<android.webkit.WebViewCore: void sendMessageAtFrontOfQueue(int,int,int,java.lang.Object)>','<android.net.TrafficStats: void incrementOperationCount(int,int)>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: void setAlpha(float)>','<com.android.server.pm.BasePermission: java.lang.String toString()>','<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Region: void finalize()>','<com.android.internal.policy.impl.RecentApplicationsDialog$2: void onReceive(android.content.Context,android.content.Intent)>','<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>','<com.android.internal.os.storage.ExternalStorageFormatter: boolean access$000(com.android.internal.os.storage.ExternalStorageFormatter)>','<com.android.server.sip.SipSessionListenerProxy: void onRegistrationDone(android.net.sip.ISipSession,int)>','<android.provider.Downloads$Impl: boolean isStatusCompleted(int)>','<android.view.HardwareRenderer$GlRenderer: void checkEglErrors()>','<com.android.internal.app.IUsageStats$Stub: com.android.internal.app.IUsageStats asInterface(android.os.IBinder)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaEriText()>','<android.widget.ListPopupWindow$2: void onNothingSelected(android.widget.AdapterView)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: long[] getFileSystemStats(java.lang.String)>','<com.android.server.connectivity.Vpn$Connection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.internal.policy.impl.PhoneWindowManager: int subWindowTypeToLayerLw(int)>','<android.net.IThrottleManager$Stub$Proxy: long getCliffThreshold(java.lang.String,int)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder initialRate(float)>','<android.widget.ListPopupWindow: void setPromptView(android.view.View)>','<android.graphics.Paint: boolean isFakeBoldText()>','<android.webkit.WebSettingsClassic: void setDefaultFixedFontSize(int)>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiConfigStore access$4900(android.net.wifi.WifiStateMachine)>','<com.android.server.AlarmManagerService: void set(int,long,android.app.PendingIntent)>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>','<android.widget.TextView: boolean isTextSelectable()>','<android.provider.BrowserContract$Searches: void <clinit>()>','<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>','<android.content.ContentProvider$Transport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>','<android.net.wifi.WifiWatchdogStateMachine: void access$800(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.opengl.Matrix: void <clinit>()>','<com.android.server.am.ServiceRecord: java.lang.String toString()>','<android.accounts.AccountAuthenticatorCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>','<android.net.wifi.NetworkUpdateResult: void setIsNewNetwork(boolean)>','<android.bluetooth.BluetoothDevice: boolean setPasskey(int)>','<android.util.SparseLongArray: int indexOfValue(long)>','<android.net.LinkProperties$1: android.net.LinkProperties createFromParcel(android.os.Parcel)>','<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendPhotos(java.util.List)>','<android.net.LocalSocket: void shutdownInput()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState access$2700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.net.wifi.WifiStateMachine: void access$5300(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.app.Notification$Action: android.app.Notification$Action clone()>','<android.os.Message: android.os.Message obtain()>','<android.net.WebAddress: void setHost(java.lang.String)>','<android.app.WallpaperManager$Globals$1: void handleMessage(android.os.Message)>','<com.android.server.usb.UsbService: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>','<android.app.Instrumentation: void start()>','<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>','<android.view.View: void setMinimumHeight(int)>','<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>','<android.view.IWindow$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>','<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>','<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>','<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>','<android.os.Process: void killProcess(int)>','<android.view.HardwareRenderer$Gl20Renderer: android.opengl.ManagedEGLContext createManagedContext(javax.microedition.khronos.egl.EGLContext)>','<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)>','<android.app.Dialog: void hide()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp access$2700(android.bluetooth.BluetoothDeviceProfileState)>','<android.content.SyncAdaptersCache$MySerializer: void <init>()>','<android.bluetooth.BluetoothHeadset: boolean isBluetoothVoiceDialingEnabled(android.content.Context)>','<android.view.GLES20Layer$Finalizer: void <init>(int)>','<android.renderscript.Element: java.lang.String getSubElementName(int)>','<android.app.Activity: void performPause()>','<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>','<android.opengl.GLLogWrapper: boolean glIsEnabled(int)>','<com.android.internal.telephony.gsm.GsmCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>','<android.net.SSLCertificateSocketFactory: byte[] toNpnProtocolsList(byte[][])>','<android.webkit.WebViewClassic: void enablePlatformNotifications()>','<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.ApplicationErrorReport$BatteryInfo: void <init>()>','<android.content.pm.UserInfo$1: void <init>()>','<android.widget.SearchView: void setImeOptions(int)>','<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.internal.telephony.RIL: void access$600(com.android.internal.telephony.RIL,int)>','<android.graphics.drawable.TransitionDrawable$TransitionState: int getChangingConfigurations()>','<android.text.method.TimeKeyListener: void <clinit>()>','<android.app.Application: void onLowMemory()>','<android.net.http.Connection: java.lang.String toString()>','<com.android.internal.os.BatteryStatsImpl: boolean startIteratingHistoryLocked()>','<android.widget.AbsListView: boolean isVerticalScrollBarHidden()>','<android.app.ActivityThread: void handleUnstableProviderDied(android.os.IBinder,boolean)>','<android.app.ActivityThread$ApplicationThread: void requestThumbnail(android.os.IBinder)>','<com.android.internal.telephony.CallManager: java.util.List getBackgroundCalls()>','<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>','<com.android.server.wm.WindowManagerService: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>','<android.telephony.SignalStrength: boolean equals(java.lang.Object)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$AutoFillData access$2300(android.webkit.WebViewClassic)>','<android.app.BackStackState$1: void <init>()>','<android.webkit.ViewManager$1: void run()>','<android.media.MediaRouter$VolumeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.media.MediaPlayer: android.os.Parcel getParcelParameter(int)>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void onInterrupt()>','<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>','<android.content.pm.FeatureInfo: java.lang.String toString()>','<com.android.server.ConnectivityService$VpnCallback: void restore()>','<android.net.LocalSocketImpl: void access$600(android.net.LocalSocketImpl,byte[],int,int,java.io.FileDescriptor)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>','<com.android.server.sip.SipSessionListenerProxy$10: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void silenceRinger()>','<android.accounts.IAccountManager$Stub$Proxy: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$11000(android.bluetooth.BluetoothDeviceProfileState)>','<android.view.VelocityTracker: float getXVelocity()>','<android.filterfw.core.FrameFormat: java.lang.String metaDataToString(android.filterfw.core.KeyValueMap)>','<com.android.internal.telephony.IccCard: void dispose()>','<android.media.MediaPlayer: void setDataSource(java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$502(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>','<android.view.Window: int getForcedWindowFlags()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean getCallForwardingIndicator()>','<android.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)>','<com.android.internal.app.IMediaContainerService$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.PhoneFactory: int getPhoneType(int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>','<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>','<android.server.BluetoothBondState$1: void onServiceDisconnected(int)>','<android.filterpacks.imageproc.RedEyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIIIO(int,int,int,int,int,java.lang.Object)>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangupWaitingOrBackground()>','<com.android.internal.telephony.sip.SipConnectionBase: void <init>(java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$12: void run()>','<android.net.wifi.SupplicantStateTracker$DefaultState: void <init>(android.net.wifi.SupplicantStateTracker)>','<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int)>','<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>','<android.app.ActivityThread$ApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>','<android.media.MediaPlayer: void setSurface(android.view.Surface)>','<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState: void enter()>','<com.android.server.usb.UsbDeviceManager: void systemReady()>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState$1: com.android.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int)>','<android.accounts.AccountManagerService$TestFeaturesSession: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>','<android.text.Layout$SpannedEllipsizer: int getSpanStart(java.lang.Object)>','<android.net.wifi.WpsInfo: void <clinit>()>','<android.widget.RemoteViews$SetPendingIntentTemplate: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatOutOfCountryCallingNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<android.view.KeyCharacterMap$KeyData: void <init>()>','<android.view.HardwareRenderer$Gl20Renderer: javax.microedition.khronos.egl.EGLSurface access$402(javax.microedition.khronos.egl.EGLSurface)>','<android.content.ContentValues: void <init>()>','<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>','<android.text.SpannableString: void removeSpan(java.lang.Object)>','<android.widget.TextView: int getTotalPaddingLeft()>','<android.graphics.Path$Direction: android.graphics.Path$Direction[] values()>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>','<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>','<com.android.server.pm.ShutdownThread: void shutdown(android.content.Context,boolean)>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$1102(com.android.internal.widget.TransportControlView$Metadata,java.lang.String)>','<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>','<com.android.internal.util.ProcFileReader: int nextInt()>','<android.widget.TextView: void setTypeface(android.graphics.Typeface)>','<android.location.LocationManager$ListenerTransport: void onLocationChanged(android.location.Location)>','<android.widget.ProgressBar: void startAnimation()>','<android.media.AudioService$VolumeStreamState: void readSettings()>','<com.android.server.Watchdog$HeartbeatHandler: void handleMessage(android.os.Message)>','<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>','<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)>','<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void getSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>','<com.android.internal.util.HexDump: java.lang.String toHexString(int)>','<android.view.SurfaceView: void access$000(android.view.SurfaceView,boolean,boolean)>','<android.bluetooth.BluetoothDevice: void <clinit>()>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void <init>(com.android.server.net.NetworkStatsService,com.android.server.net.NetworkStatsService$1)>','<android.os.Parcel: void writeStringList(java.util.List)>','<com.android.server.sip.SipService$AutoRegistrationProcess: boolean isRegistered()>','<android.view.animation.OvershootInterpolator: void <init>(float)>','<android.widget.ExpandableListConnector$PositionMetadata: boolean isExpanded()>','<android.app.ActivityThread: void access$2200(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo)>','<android.webkit.WebSettingsClassic$AutoFillProfile: int getUniqueId()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.hardware.Camera$Parameters: void getFocusDistances(float[])>','<android.webkit.WebViewCore$EventHub: int access$900(android.webkit.WebViewCore$EventHub)>','<android.widget.Editor$PositionListener: void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean)>','<android.telephony.SmsCbCmasInfo: int getUrgency()>','<android.net.wifi.WifiWatchdogStateMachine: int access$4308(android.net.wifi.WifiWatchdogStateMachine)>','<android.view.ViewGroup: void jumpDrawablesToCurrentState()>','<android.view.IWindowManager$Stub$Proxy: int getAppOrientation(android.view.IApplicationToken)>','<android.location.Criteria: int getBearingAccuracy()>','<android.util.TypedValue: void setTo(android.util.TypedValue)>','<android.app.backup.RestoreSession: void <init>(android.content.Context,android.app.backup.IRestoreSession)>','<android.provider.Settings$Secure: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)>','<android.net.LinkProperties: void addLinkAddress(android.net.LinkAddress)>','<android.view.GLES20Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>','<android.widget.ScrollView: void setOverScrollMode(int)>','<android.net.wifi.WifiNative: boolean setConfigMethods(java.lang.String)>','<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: java.lang.IllegalArgumentException rethrowAsParcelableException()>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDevice getDevice()>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>','<android.view.LayoutInflater: android.content.Context getContext()>','<android.webkit.WebViewClassic$InvokeListBox$2: void <init>(android.webkit.WebViewClassic$InvokeListBox)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void writeToParcel(android.os.Parcel)>','<com.android.internal.os.BatteryStatsImpl$Uid: boolean hasUserActivity()>','<android.widget.RemoteViewsAdapter$4: void run()>','<android.view.FocusFinder: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForEcmTimerReset(android.os.Handler)>','<android.nfc.tech.IsoDep: void close()>','<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>','<android.database.CursorWindow$1: void <init>()>','<com.android.internal.telephony.CallManager: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>','<com.android.internal.content.PackageMonitor: void onPackageAdded(java.lang.String,int)>','<android.nfc.TransceiveResult: int describeContents()>','<android.text.InputFilter$AllCaps: void <init>()>','<android.widget.ImageButton: boolean onSetAlpha(int)>','<android.app.IWallpaperManagerCallback$Stub: void <init>()>','<android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$102(android.graphics.drawable.LevelListDrawable$LevelListState,int[])>','<com.android.internal.os.storage.ExternalStorageFormatter$1: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>','<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>','<android.app.IProcessObserver$Stub: android.app.IProcessObserver asInterface(android.os.IBinder)>','<com.android.internal.view.IInputConnectionWrapper: void executeMessage(android.os.Message)>','<android.telephony.cdma.CdmaSmsCbProgramData$1: void <init>()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1)>','<android.text.InputFilter$LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<android.app.FragmentManagerImpl: void dispatchActivityCreated()>','<com.android.internal.statusbar.StatusBarIconList: int getSlotIndex(java.lang.String)>','<android.renderscript.Element: android.renderscript.Element U16_2(android.renderscript.RenderScript)>','<com.android.server.wm.WindowManagerService: void dispatchWallpaperVisibility(com.android.server.wm.WindowState,boolean)>','<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int)>','<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcast(int)>','<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()>','<android.provider.Telephony$Mms$Inbox: void <init>()>','<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>','<com.android.server.LocationManagerService$ProximityListener: void onProviderEnabled(java.lang.String)>','<android.view.InputDevice$MotionRange: int access$100(android.view.InputDevice$MotionRange)>','<android.view.MotionEvent: void setTainted(boolean)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>','<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>','<android.bluetooth.BluetoothDeviceProfileState: void access$5600(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.server.sip.SipService$SipSessionGroupExt: void setListener(android.net.sip.ISipSessionListener)>','<android.media.MediaRecorder: void reset()>','<android.os.StrictMode: void clearGatheredViolations()>','<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasNationalPrefix()>','<android.widget.TextView: void setPaddingRelative(int,int,int,int)>','<android.hardware.usb.UsbRequest: void close()>','<android.content.ClipboardManager$2: void handleMessage(android.os.Message)>','<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>','<com.android.server.pm.PackageManagerService: java.util.List getPersistentApplications(int)>','<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void <init>(com.android.server.wm.WindowManagerService,android.view.InputChannel,android.os.Looper)>','<android.graphics.Bitmap: void recycle()>','<com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState valueOf(java.lang.String)>','<android.app.LoadedApk: java.lang.String getAppDir()>','<com.android.internal.telephony.DataConnection$DcInactiveState: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<com.android.server.net.NetworkStatsService: void <init>(android.content.Context,android.os.INetworkManagementService,android.app.IAlarmManager,android.util.TrustedTime,java.io.File,com.android.server.net.NetworkStatsService$NetworkStatsSettings)>','<com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config: void <init>(long,long,long)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean addPermission(android.content.pm.PermissionInfo)>','<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void hold()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: java.lang.String toString()>','<android.app.Application: void dispatchActivityDestroyed(android.app.Activity)>','<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>','<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>','<android.server.search.SearchManagerService$BootCompletedReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.app.ApplicationErrorReport$1: android.app.ApplicationErrorReport createFromParcel(android.os.Parcel)>','<android.widget.SearchView$8: void <init>(android.widget.SearchView)>','<android.inputmethodservice.IInputMethodSessionWrapper: void updateSelection(int,int,int,int,int,int)>','<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getString(java.lang.String,java.lang.String,int)>','<android.content.res.TypedArray: int getColor(int,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void getAvailableNetworks(android.os.Message)>','<com.android.server.NetworkManagementService: void stopTethering()>','<android.content.SyncManager: int access$2300(android.content.SyncManager)>','<android.widget.SearchView: void access$300(android.widget.SearchView)>','<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.content.Intent: android.content.Intent addCategory(java.lang.String)>','<com.android.server.connectivity.Tethering: int tether(java.lang.String)>','<android.content.res.TypedArray: java.lang.String getString(int)>','<android.widget.RelativeLayout$DependencyGraph$Node: void <init>()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBond(java.lang.String)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void setVibratePattern(int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPager()>','<android.preference.Preference: float getPersistedFloat(float)>','<android.app.LoadedApk: boolean isSecurityViolation()>','<com.android.internal.os.storage.ExternalStorageFormatter: void fail(int)>','<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void <init>(com.android.server.am.ActivityManagerService$1)>','<android.net.LinkProperties: boolean equals(java.lang.Object)>','<android.app.ApplicationPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>','<android.content.ClipDescription$1: void <init>()>','<android.webkit.CookieManagerClassic: void access$100(android.webkit.CookieManagerClassic)>','<android.net.sip.SipAudioCall: void sendDtmf(int)>','<android.content.pm.PackageParser$Permission: java.lang.String toString()>','<android.view.View: boolean isInScrollingContainer()>','<android.view.InputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>','<android.text.method.DateTimeKeyListener: int getInputType()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$3200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>','<android.os.Messenger: void <init>(android.os.IBinder)>','<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>','<android.net.http.SslError: boolean addError(int)>','<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void registerSimStateCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback)>','<com.android.server.am.ActivityRecord: boolean isInterestingToUserLocked()>','<com.android.internal.telephony.cdma.SmsMessage: boolean isReplyPathPresent()>','<android.net.rtp.RtpStream: void finalize()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getMeid()>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void setBaseLayer(int)>','<android.text.DynamicLayout: int getLineDescent(int)>','<android.view.View$9: void <init>(java.lang.String)>','<android.widget.TextView: float convertToLocalHorizontalCoordinate(float)>','<android.content.res.XmlBlock$Parser: int getEventType()>','<com.android.server.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder audioStreamType(int)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>','<com.android.server.PowerManagerService: int access$200(com.android.server.PowerManagerService)>','<android.net.wifi.WifiStateMachine: void access$17100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency[] values()>','<android.view.IApplicationToken$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebView: void clearView()>','<android.graphics.drawable.DrawableContainer: android.graphics.Insets getLayoutInsets()>','<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByWho(java.lang.String)>','<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>','<android.view.ViewGroup$MarginLayoutParams: boolean isMarginRelative()>','<android.app.Dialog: void takeKeyEvents(boolean)>','<com.android.server.location.LocationProviderProxy: boolean requiresCell()>','<android.media.AudioService$RcDisplayDeathHandler: void <init>(android.media.AudioService,android.os.IBinder)>','<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>','<android.location.LocationManager$ListenerTransport$1: void <init>(android.location.LocationManager$ListenerTransport,android.location.LocationManager)>','<com.android.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<com.android.server.PowerManagerService: void setPolicy(android.view.WindowManagerPolicy)>','<android.media.AudioService$3: void onCallStateChanged(int,java.lang.String)>','<android.graphics.Matrix: boolean postTranslate(float,float)>','<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>','<android.widget.AbsListView$FlingRunnable$1: void <init>(android.widget.AbsListView$FlingRunnable)>','<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)>','<android.widget.AbsListView: void setSelector(int)>','<android.server.BluetoothBondState: void initBondState()>','<com.android.internal.view.menu.MenuBuilder: void removeGroup(int)>','<android.widget.Editor$HandleView: void showActionPopupWindow(int)>','<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<android.view.Surface$OutOfResourcesException: void <init>()>','<com.android.server.PowerManagerService$11: void <init>(com.android.server.PowerManagerService,java.lang.String,java.lang.String)>','<android.filterfw.core.FinalPort: java.lang.String toString()>','<android.widget.ListPopupWindow: void setSoftInputMode(int)>','<com.android.internal.policy.impl.KeyguardViewMediator$2: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>','<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>','<android.os.IHardwareService$Stub: void <init>()>','<android.app.Activity: void performStop()>','<com.android.internal.os.LoggingPrintStream: void println(double)>','<android.widget.ListPopupWindow: void setListItemExpandMax(int)>','<com.android.internal.view.menu.MenuItemImpl: void actionFormatChanged()>','<android.net.Uri: void <init>(android.net.Uri$1)>','<com.android.internal.os.LoggingPrintStream: void println(int)>','<android.view.SurfaceView$3: void <init>(android.view.SurfaceView)>','<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>','<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onPackageChanged(java.lang.String,int,java.lang.String[])>','<android.view.View: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>','<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean checkPattern(byte[],int)>','<android.graphics.SurfaceTexture: void <clinit>()>','<com.android.server.WallpaperManagerService: void clearWallpaperComponentLocked(com.android.server.WallpaperManagerService$WallpaperData)>','<android.content.BroadcastReceiver$PendingResult: void finish()>','<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>','<com.android.server.am.AppNotRespondingDialog$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyOtaspChanged(com.android.internal.telephony.Phone,int)>','<android.provider.Settings$System: boolean hasInterestingConfigurationChanges(int)>','<android.preference.PreferenceFragment$1: void handleMessage(android.os.Message)>','<android.view.ViewRootImpl: void addConfigCallback(android.content.ComponentCallbacks)>','<android.app.LoadedApk: java.lang.String getLibDir()>','<android.widget.OverScroller: boolean isFinished()>','<android.os.ParcelFileDescriptor: int detachFd()>','<android.net.wifi.WifiStateMachine: void access$11300(android.net.wifi.WifiStateMachine,java.lang.String)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>','<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View access$1900(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>','<android.content.pm.IPackageManager$Stub$Proxy: int getPackageUid(java.lang.String,int)>','<android.animation.PropertyValuesHolder: int access$500(java.lang.Class,java.lang.String)>','<android.telephony.SignalStrength$1: android.telephony.SignalStrength[] newArray(int)>','<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void <init>(int,java.lang.CharSequence)>','<android.view.ViewRootImpl: void loadSystemProperties()>','<android.telephony.SignalStrength: int getLteLevel()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat getIntlNumberFormat(int)>','<com.android.internal.util.AsyncService: android.os.IBinder onBind(android.content.Intent)>','<android.accessibilityservice.AccessibilityService$1: void onServiceConnected()>','<android.hardware.input.KeyboardLayout$1: android.hardware.input.KeyboardLayout[] newArray(int)>','<android.app.UiModeManager: void <clinit>()>','<android.net.wifi.WifiStateTracker: android.net.LinkProperties access$202(android.net.wifi.WifiStateTracker,android.net.LinkProperties)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>','<android.view.GLES20RecordingCanvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>','<com.android.server.wm.Session: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>','<android.app.IUiModeManager$Stub: void <init>()>','<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>','<com.android.server.usb.UsbSettingsManager: void requestPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>','<android.preference.Preference: java.lang.String getKey()>','<android.filterfw.core.InputPort: boolean filterMustClose()>','<android.view.GLES20Canvas: void initCaches()>','<android.widget.PopupWindow: void setTouchable(boolean)>','<android.filterfw.io.TextGraphReader: void <init>()>','<com.android.server.MountService: void access$1200(com.android.server.MountService,boolean)>','<com.android.ex.variablespeed.VariableSpeed: void prepare()>','<com.android.server.net.NetworkStatsService$7: void limitReached(java.lang.String,java.lang.String)>','<com.android.internal.appwidget.IAppWidgetHost$Stub: void <init>()>','<android.location.Country: java.lang.String getCountryIso()>','<android.widget.TextView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.telephony.SmsMessage: long getTimestampMillis()>','<android.text.style.AbsoluteSizeSpan: int getSize()>','<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>','<android.net.wifi.WifiStateMachine$DriverLoadingState: void enter()>','<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>','<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>','<android.server.BluetoothService: boolean setPairingConfirmation(java.lang.String,boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$9300(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>','<android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>','<com.android.internal.telephony.DataConnectionTracker: void handleMessage(android.os.Message)>','<com.android.internal.telephony.PhoneBase: void unregisterForUnknownConnection(android.os.Handler)>','<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: boolean processMessage(android.os.Message)>','<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>','<com.android.server.AppWidgetServiceImpl: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>','<com.android.internal.telephony.PhoneProxy: int disableApnType(java.lang.String)>','<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>','<com.android.internal.textservice.ITextServicesManager$Stub: com.android.internal.textservice.ITextServicesManager asInterface(android.os.IBinder)>','<android.view.View: int getNextFocusUpId()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>','<com.android.server.location.LocationBasedCountryDetector: boolean isAcceptableProvider(java.lang.String)>','<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void run(android.accounts.AccountManagerFuture)>','<android.hardware.Camera$Parameters: void setGpsLatitude(double)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: int access$902(android.server.BluetoothHealthProfileHandler$HealthChannel,int)>','<android.widget.Editor: void hideControllers()>','<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.server.WallpaperManagerService: int getHeightHint()>','<android.view.GLES20RenderLayer: void redraw(android.view.DisplayList,android.graphics.Rect)>','<com.android.server.wm.WindowManagerService: boolean access$702(com.android.server.wm.WindowManagerService,boolean)>','<android.server.BluetoothAdapterStateMachine: void access$1600(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.widget.Scroller: boolean computeScrollOffset()>','<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceScanMode(boolean)>','<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>','<com.android.vcard.VCardParserImpl_V21: void cancel()>','<android.net.nsd.NsdManager$ServiceHandler: void <init>(android.net.nsd.NsdManager,android.os.Looper)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccFileHandler getIccFileHandler()>','<com.android.internal.policy.impl.GlobalActions: android.view.IWindowManager access$600(com.android.internal.policy.impl.GlobalActions)>','<android.webkit.WebViewCore: void sendMessage(int,int)>','<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>','<android.widget.TextView: void <init>(android.content.Context)>','<android.os.ResultReceiver: void send(int,android.os.Bundle)>','<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>','<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>','<android.widget.AbsListView: int getChoiceMode()>','<android.content.res.XmlBlock$Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<android.filterfw.core.FrameManager: void tearDown()>','<android.location.LocationManager: boolean sendNiResponse(int,int)>','<com.android.server.MountService: java.util.Map access$2100(com.android.server.MountService)>','<com.android.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>','<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>','<android.app.ActivityThread: void access$200(android.app.ActivityThread,int,java.lang.Object,int,int)>','<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getCdmaMin()>','<com.android.server.am.TransferPipe: void <init>()>','<android.opengl.GLLogWrapper: java.lang.String glGetString(int)>','<android.opengl.GLUtils: void enableTracing()>','<android.app.FragmentManagerImpl$2: void <init>(android.app.FragmentManagerImpl)>','<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadCompleteLocked()>','<com.android.internal.view.WindowManagerPolicyThread: java.lang.Thread getThread()>','<com.android.server.am.AppErrorResult: int get()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord removeTaskActivitiesLocked(int,int,boolean)>','<com.android.internal.widget.PasswordEntryKeyboard: void enableShiftLock()>','<android.ddm.DdmHandleNativeHeap: void connected()>','<android.widget.ListPopupWindow$DropDownListView: boolean access$502(android.widget.ListPopupWindow$DropDownListView,boolean)>','<android.widget.AutoCompleteTextView: void onFilterComplete(int)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState access$1800(android.net.wifi.WifiWatchdogStateMachine)>','<android.webkit.CallbackProxy$5: void onClick(android.content.DialogInterface,int)>','<android.telephony.SmsManager: boolean enableCellBroadcast(int)>','<android.net.LinkProperties$CompareResult: java.lang.String toString()>','<android.renderscript.Element: android.renderscript.Element I32_3(android.renderscript.RenderScript)>','<com.android.internal.os.IDropBoxManagerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl$2)>','<android.app.LocalActivityManager: void dispatchDestroy(boolean)>','<android.net.http.Request: void setLoadingPaused(boolean)>','<android.text.method.ScrollingMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>','<android.app.IWallpaperManagerCallback$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.cdma.CDMAPhone: void rejectCall()>','<android.widget.SearchView: void access$1300(android.widget.SearchView)>','<com.android.internal.os.AtomicFile: void failWrite(java.io.FileOutputStream)>','<android.filterfw.core.FilterContext: void removeFrame(java.lang.String)>','<android.content.SyncInfo: int describeContents()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins()>','<android.media.effect.effects.BackDropperEffect: void setUpdateListener(android.media.effect.EffectUpdateListener)>','<com.android.internal.widget.EditableInputConnection: void reportFinish()>','<android.view.MotionEvent: float getTouchMajor()>','<com.android.internal.telephony.cat.DeviceIdentities: void <init>()>','<android.app.ActivityThread$ApplicationThread: void clearDnsCache()>','<com.android.server.net.NetworkStatsService: android.net.NetworkStatsHistory access$500(com.android.server.net.NetworkStatsService,android.net.NetworkTemplate,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$2: void <clinit>()>','<android.os.Parcel: android.os.IBinder readStrongBinder()>','<com.android.server.am.BroadcastQueue: boolean replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>','<android.net.rtp.AudioGroup: void sendDtmf(int)>','<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>','<android.view.VolumePanel$StreamControl: void <init>(android.view.VolumePanel,android.view.VolumePanel$1)>','<com.android.server.pm.PackageManagerService: void clearPackagePreferredActivities(java.lang.String)>','<android.view.PointerIcon: int describeContents()>','<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)>','<android.net.wifi.p2p.WifiP2pGroup: void addClient(android.net.wifi.p2p.WifiP2pDevice)>','<com.android.server.wm.WindowStateAnimator: void prepareSurfaceLocked(boolean)>','<com.android.server.DevicePolicyManagerService$ActiveAdmin: int getUid()>','<com.android.internal.widget.multiwaveview.GlowPadView: void access$700(com.android.internal.widget.multiwaveview.GlowPadView,boolean,boolean)>','<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>','<com.android.server.pm.Installer: int removeUserDataDirs(int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: boolean isProvisioned()>','<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.net.wifi.WifiNative: boolean disconnect()>','<com.android.server.ConnectivityService$MyHandler: void <init>(com.android.server.ConnectivityService,android.os.Looper)>','<com.android.server.EventLogTags: void writeBackupReset(java.lang.String)>','<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>','<android.net.SntpClient: void <init>()>','<android.widget.LinearLayout: boolean isBaselineAligned()>','<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock(int)>','<android.view.animation.Animation: boolean getDetachWallpaper()>','<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult rspUpdateLinkPropertiesDataCallState(android.os.Message)>','<android.view.KeyEvent: boolean isTracking()>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(char)>','<android.webkit.GeolocationPermissions: void clear(java.lang.String)>','<android.view.inputmethod.ExtractedTextRequest$1: void <init>()>','<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)>','<android.provider.Telephony$Sms$Sent: void <clinit>()>','<com.android.internal.util.StateMachine: void sendMessageDelayed(android.os.Message,long)>','<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void updateAppWidget(int,android.widget.RemoteViews)>','<android.database.sqlite.SQLiteFullException: void <init>()>','<android.widget.Switch: java.lang.CharSequence getTextOn()>','<android.server.BluetoothService: boolean disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>','<android.net.sip.SipProfile$Builder: void <init>(android.net.sip.SipProfile)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyDataConnection(java.lang.String)>','<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.hardware.input.IInputManager$Stub$Proxy: void cancelVibrate(int,android.os.IBinder)>','<android.graphics.Bitmap: void prepareToDraw()>','<android.security.KeyStore: android.security.KeyStore$State state()>','<com.android.internal.util.StateMachine$SmHandler: boolean access$2200(com.android.internal.util.StateMachine$SmHandler)>','<android.nfc.NdefRecord: int getByteLength()>','<android.webkit.WebViewClassic: int computeVerticalScrollOffset()>','<android.text.StaticLayout: int getParagraphDirection(int)>','<android.accounts.AccountManagerService$UserAccounts: int access$700(android.accounts.AccountManagerService$UserAccounts)>','<android.view.KeyEvent$DispatcherState: void <init>()>','<android.webkit.DeviceMotionService: void <clinit>()>','<android.speech.tts.ITextToSpeechService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onRingerModeChanged(int)>','<android.util.FastImmutableArraySet$FastIterator: boolean hasNext()>','<com.android.internal.telephony.BaseCommands: void unSetOnCatCallSetUp(android.os.Handler)>','<android.view.HardwareRenderer$GlRenderer: int checkCurrent()>','<com.android.server.wm.Session: void reportDropResult(android.view.IWindow,boolean)>','<com.android.internal.telephony.RIL: void getCdmaSubscriptionSource(android.os.Message)>','<android.widget.Scroller: boolean isFinished()>','<android.webkit.WebView: void emulateShiftHeld()>','<android.server.BluetoothService: void setBluetoothTethering(boolean)>','<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>','<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>','<android.text.DynamicLayout: int getParagraphDirection(int)>','<android.net.sip.ISipSession$Stub$Proxy: void unregister()>','<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>','<com.android.internal.util.StateMachine: android.os.Message obtainMessage()>','<com.android.internal.location.GpsNetInitiatedHandler: void <init>(android.content.Context)>','<com.android.server.wm.WindowManagerService$1: void <init>(com.android.server.wm.WindowManagerService,android.os.Handler,java.lang.String)>','<android.view.InputChannel: void <init>()>','<com.android.server.am.ActivityStack: void finishSubActivityLocked(android.os.IBinder,java.lang.String,int)>','<com.android.internal.statusbar.StatusBarIconList: void <init>()>','<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>','<com.android.internal.telephony.cat.RilMessage: void <init>(com.android.internal.telephony.cat.RilMessage)>','<android.view.View: int getScrollBarStyle()>','<android.widget.AbsListView$3: boolean performEditorAction(int)>','<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getWorkingStats(int)>','<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabled(int)>','<android.content.pm.PathPermission$1: android.content.pm.PathPermission[] newArray(int)>','<android.text.method.QwertyKeyListener$Replaced: void <init>(char[])>','<android.widget.PopupWindow: java.lang.ref.WeakReference access$000(android.widget.PopupWindow)>','<android.os.Messenger: android.os.IBinder getBinder()>','<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>','<android.graphics.drawable.ShapeDrawable$ShaderFactory: void <init>()>','<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>','<android.app.Fragment: java.lang.String toString()>','<android.webkit.FindActionModeCallback: void <init>(android.content.Context)>','<android.webkit.HTML5VideoFullScreen: android.widget.MediaController access$202(android.webkit.HTML5VideoFullScreen,android.widget.MediaController)>','<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)>','<com.android.internal.util.FastXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,long)>','<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>','<android.view.View: void setTextAlignment(int)>','<com.android.internal.telephony.sip.SipPhone: void setCallWaiting(boolean,android.os.Message)>','<com.android.server.AlarmManagerService$AlarmHandler: void <init>(com.android.server.AlarmManagerService)>','<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>','<android.app.SearchableInfo$ActionKeyInfo: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)>','<com.android.internal.telephony.test.ModelInterpreter: void <clinit>()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>','<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>','<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>','<com.android.server.NotificationManagerService: void access$1700(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$ToastRecord)>','<android.media.AudioManager: void stopBluetoothSco()>','<com.android.internal.policy.impl.AccountUnlockScreen: android.app.Dialog access$600(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.app.backup.BackupAgentHelper: void <init>()>','<com.android.internal.telephony.PhoneBase: boolean isDataConnectivityPossible()>','<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>()>','<com.android.internal.util.AsyncChannel$AsyncChannelConnection: void onServiceDisconnected(android.content.ComponentName)>','<android.view.GLES20Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)>','<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.view.IInputMethod$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>','<android.provider.Telephony$Sms$Draft: boolean saveMessage(android.content.ContentResolver,android.net.Uri,java.lang.String)>','<com.android.internal.view.IInputConnectionWrapper: void performContextMenuAction(int)>','<com.android.server.InputMethodManagerService: void access$200(com.android.server.InputMethodManagerService,java.lang.String)>','<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>','<android.view.GLES20Canvas: int callDrawGLFunction(int)>','<android.view.animation.Animation: void setRepeatMode(int)>','<android.media.MediaRouter$SimpleCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int)>','<android.view.View: int getPaddingBottom()>','<android.text.method.TextKeyListener: boolean access$102(android.text.method.TextKeyListener,boolean)>','<android.server.BluetoothA2dpService: void access$100(android.server.BluetoothA2dpService)>','<android.filterpacks.videosink.MediaEncoderFilter: void prepare(android.filterfw.core.FilterContext)>','<android.webkit.WebView: java.lang.String getTouchIconUrl()>','<android.view.IWindowManager$Stub$Proxy: void setAppOrientation(android.view.IApplicationToken,int)>','<android.net.sip.SimpleSessionDescription$Media: void setAddress(java.lang.String)>','<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: boolean processMessage(android.os.Message)>','<android.view.KeyCharacterMap: char getMatch(int,char[],int)>','<android.app.ActivityThread$ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean)>','<android.net.http.Headers: java.lang.String getAcceptRanges()>','<android.server.BluetoothInputProfileHandler: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>','<com.android.internal.widget.SlidingTab: android.view.animation.Animation$AnimationListener access$400(com.android.internal.widget.SlidingTab)>','<android.net.wifi.WpsInfo: int describeContents()>','<android.graphics.RectF: java.lang.String toString()>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setMetadata(int,android.os.Bundle)>','<com.android.internal.telephony.PhoneProxy: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>','<com.android.server.wm.WindowManagerService: int watchRotation(android.view.IRotationWatcher)>','<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>','<android.webkit.WebIconDatabaseClassic: android.webkit.WebIconDatabaseClassic getInstance()>','<com.android.server.PowerManagerService$DockReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()>','<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked()>','<android.preference.GenericInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: byte[] access$000(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<android.animation.Animator: void end()>','<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>','<android.app.SearchDialog: int resolveDialogTheme(android.content.Context)>','<com.android.internal.telephony.cat.TextAlignment: com.android.internal.telephony.cat.TextAlignment[] values()>','<com.android.internal.util.StateMachine$SmHandler: int access$1700(com.android.internal.util.StateMachine$SmHandler)>','<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>','<android.webkit.WebView: boolean canGoBackOrForward(int)>','<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>','<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void exposeFallback()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean enable()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void error(int,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.PhoneBase access$2000(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.net.ConnectivityManager: void reportInetCondition(int,int)>','<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,long)>','<android.widget.AutoCompleteTextView: android.widget.ListAdapter access$700(android.widget.AutoCompleteTextView)>','<android.provider.ContactsContract$CommonDataKinds$Email: void <clinit>()>','<com.android.internal.telephony.gsm.SIMRecords: void onRecordLoaded()>','<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()>','<android.net.sip.SimpleSessionDescription: int getBandwidth(java.lang.String)>','<com.android.vcard.VCardParser_V30: void <clinit>()>','<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String)>','<android.app.Instrumentation$ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)>','<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>','<android.app.ISearchManager$Stub$Proxy: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>','<com.android.server.WifiService$NotificationEnabledSettingObserver: void onChange(boolean)>','<com.android.internal.view.IInputConnectionWrapper: void sendKeyEvent(android.view.KeyEvent)>','<com.android.internal.policy.impl.PatternUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$100(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<android.location.Location: float getSpeed()>','<android.webkit.CookieManagerClassic: boolean hasCookies(boolean)>','<com.android.internal.statusbar.IStatusBar$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>','<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: boolean isAvailable()>','<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.webkit.WebViewInputDispatcher: void skipWebkitForRemainingTouchStream()>','<android.widget.MediaController: java.lang.String access$1100(android.widget.MediaController,int)>','<android.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>','<android.view.ViewGroup: void detachViewsFromParent(int,int)>','<android.view.WindowManager$LayoutParams: void <init>(int)>','<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>','<android.graphics.RectF: float centerY()>','<com.android.server.input.InputManagerService: void setDisplaySize(int,int,int,int,int)>','<com.android.internal.telephony.cdma.EriManager: boolean isEriFileLoaded()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.RILRequest: java.lang.String serialString()>','<android.provider.Settings$Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>','<com.android.server.wm.WindowState: boolean hasAppShownWindows()>','<android.app.Instrumentation: java.util.List access$300(android.app.Instrumentation)>','<com.android.server.net.NetworkStatsCollection$Key: int hashCode()>','<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>','<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>','<android.inputmethodservice.Keyboard: int getKeyHeight()>','<android.net.sip.SipProfile: java.lang.String access$1102(android.net.sip.SipProfile,java.lang.String)>','<com.android.internal.telephony.test.ModelInterpreter: void run()>','<android.webkit.WebHistoryItem: int getId()>','<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>','<com.android.internal.telephony.RIL: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>','<com.android.server.wm.WindowManagerService: void moveAppTokensToBottom(java.util.List)>','<com.android.internal.policy.IFaceLockInterface$Stub: android.os.IBinder asBinder()>','<com.android.server.connectivity.Tethering: java.util.Collection access$4600(com.android.server.connectivity.Tethering)>','<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] preceding(int)>','<com.android.internal.telephony.gsm.GSMPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<android.os.MessageQueue: boolean hasMessages(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>','<android.location.IGpsStatusProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.provider.MediaStore$Audio$Artists: void <clinit>()>','<android.net.Uri$StringUri: java.lang.String getScheme()>','<android.app.LoadedApk$WarningContextClassLoader: void <init>(android.app.LoadedApk$1)>','<android.widget.TextView: void handleTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.telephony.RIL: void getDeviceIdentity(android.os.Message)>','<com.android.server.LightsService$Light: void setBrightness(int,int)>','<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>','<com.android.server.PowerManagerService$12: void onSensorChanged(android.hardware.SensorEvent)>','<android.app.ActivityManager: java.util.List getRunningTasks(int)>','<android.app.Fragment: java.lang.String getTag()>','<android.view.animation.Animation$1: void <init>(android.view.animation.Animation)>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarView access$1100(com.android.internal.app.ActionBarImpl)>','<android.os.FileObserver$ObserverThread: void run()>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$2: void <init>(com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy,int,java.lang.String)>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>','<android.location.Address: java.lang.String getPremises()>','<android.webkit.FindActionModeCallback: void setText(java.lang.String)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>','<com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>','<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemAudioCategory()>','<com.android.internal.widget.multiwaveview.Ease$Cubic: void <init>()>','<android.net.http.LoggingEventHandler: void status(int,int,int,java.lang.String)>','<com.android.internal.policy.impl.GlobalActions$2: void <init>(com.android.internal.policy.impl.GlobalActions,int,int)>','<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>','<android.media.AudioManager: void unregisterMediaButtonEventReceiverForCalls()>','<android.util.MathUtils: float random(float,float)>','<com.android.vcard.VCardComposer: boolean init(android.database.Cursor)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2500(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.view.View: boolean setAlphaNoInvalidation(float)>','<android.os.storage.StorageManager$ObbActionListener: void <init>(android.os.storage.StorageManager,android.os.storage.StorageManager$1)>','<android.view.ViewGroup: boolean hasHoveredChild()>','<android.service.dreams.IDreamManager$Stub$Proxy: void dream()>','<com.android.server.am.ActivityManagerService: void cancelIntentSender(android.content.IIntentSender)>','<com.android.internal.view.menu.MenuPopupHelper: android.view.LayoutInflater access$200(com.android.internal.view.menu.MenuPopupHelper)>','<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>','<android.media.AudioManager: int getMasterVolume()>','<android.view.View$ListenerInfo: java.util.ArrayList access$002(android.view.View$ListenerInfo,java.util.ArrayList)>','<com.android.internal.os.IDropBoxManagerService$Stub: void <init>()>','<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void stopRunningLocked(com.android.internal.os.BatteryStatsImpl)>','<com.android.internal.policy.impl.KeyguardViewBase: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback)>','<android.util.ReflectiveProperty: boolean isReadOnly()>','<android.preference.PreferenceManager: void unregisterOnActivityResultListener(android.preference.PreferenceManager$OnActivityResultListener)>','<com.android.internal.util.FileRotator: void deleteAll()>','<android.view.ViewRootImpl: void dispatchDetachedFromWindow()>','<android.telephony.gsm.GsmCellLocation: boolean isEmpty()>','<android.view.ActionProvider: boolean isVisible()>','<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>','<android.graphics.Paint: boolean isUnderlineText()>','<com.android.server.NotificationManagerService: void cancelNotification(java.lang.String,int)>','<com.android.internal.telephony.IccCardApplication$AppState: boolean isAppReady()>','<android.bluetooth.BluetoothUuid: boolean isBnep(android.os.ParcelUuid)>','<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>','<android.os.Message: void <init>()>','<android.webkit.SearchBoxImpl: void onsubmit(android.webkit.SearchBox$SearchBoxListener)>','<com.android.internal.view.menu.BaseMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<com.android.server.net.NetworkStatsService: void advisePersistThreshold(long)>','<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()>','<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>','<android.view.MotionEvent: float getToolMajor(int)>','<android.webkit.WebSettingsClassic: void setPluginsPath(java.lang.String)>','<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()>','<com.android.vcard.VCardComposer: void terminate()>','<android.nfc.Tag: void setTechnologyDisconnected()>','<android.webkit.ZoomManager: float getMinZoomScale()>','<com.android.server.wm.DimAnimator$Parameters: void <init>(com.android.server.wm.WindowStateAnimator,int,int,float)>','<android.hardware.input.InputManager$InputDevicesChangedListener: void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1)>','<android.view.View$4: void <init>(java.lang.String)>','<android.graphics.Rect: java.lang.String toString()>','<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>','<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>','<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>','<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>','<com.android.internal.widget.ActionBarView$HomeView: void setUp(boolean)>','<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)>','<android.opengl.GLLogWrapper: void glFogxv(int,int[],int)>','<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>','<android.view.animation.Transformation: java.lang.String toString()>','<com.android.internal.telephony.DataConnection$DcInactiveState: void exit()>','<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>','<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<com.android.internal.policy.impl.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int)>','<android.app.FragmentManagerImpl: android.app.FragmentTransaction beginTransaction()>','<com.android.server.location.LocationProviderProxy: boolean access$400(com.android.server.location.LocationProviderProxy)>','<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()>','<android.text.format.Time: void clear(java.lang.String)>','<android.app.FragmentManagerImpl: void dispatchDestroy()>','<android.content.ClipboardManager: void reportPrimaryClipChanged()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$200(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<com.android.uiautomator.core.InteractionController: boolean sleepDevice()>','<android.net.wifi.WifiNative: java.lang.String p2pPeer(java.lang.String)>','<com.android.internal.telephony.IccCard: void updateStateProperty()>','<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: void <clinit>()>','<android.content.SyncStorageEngine$PendingOperation: void <init>(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,boolean)>','<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>','<android.widget.Spinner$DialogPopup: void setHorizontalOffset(int)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)>','<android.view.animation.Animation: void <init>()>','<com.android.server.LocationManagerService$Receiver: void <init>(com.android.server.LocationManagerService,android.app.PendingIntent)>','<com.android.server.sip.SipSessionGroup: java.util.Map access$200(com.android.server.sip.SipSessionGroup)>','<android.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>','<com.android.server.pm.ShutdownThread: void access$000(android.content.Context)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void onWindowFocusChanged(boolean)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void pause(android.webkit.HTML5VideoViewProxy)>','<android.content.res.TypedArray: int getIndexCount()>','<android.view.KeyEvent: int getKeyCode()>','<android.webkit.WebViewClassic: int computeVerticalScrollRange()>','<android.net.wifi.WifiNative: void setPowerSave(boolean)>','<com.android.server.AppWidgetServiceImpl$Host: void <init>()>','<android.net.MobileDataStateTracker: android.os.Messenger access$1002(android.net.MobileDataStateTracker,android.os.Messenger)>','<com.android.internal.telephony.test.CallInfo$State: void <clinit>()>','<android.content.res.XmlBlock: int access$100(int)>','<android.net.wifi.WifiConfigStore$DelayedDiskWrite$1: void run()>','<android.server.BluetoothService: boolean disconnectHeadset(java.lang.String)>','<android.webkit.DeviceOrientationService: void stop()>','<com.android.server.NsdService: void access$2000(com.android.server.NsdService,android.os.Message,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void writeToParcelLocked(android.os.Parcel)>','<com.android.internal.os.RuntimeInit: void setApplicationObject(android.os.IBinder)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.android.internal.app.ActionBarImpl,android.view.ActionMode$Callback)>','<com.android.internal.os.BatteryStatsImpl: void resetAllStatsLocked()>','<android.app.FragmentManagerImpl: void <init>()>','<android.view.InputDevice$MotionRange: float getMin()>','<android.nfc.Tag: java.lang.String toString()>','<android.net.MobileDataStateTracker: boolean isPrivateDnsRouteSet()>','<android.graphics.drawable.DrawableContainer: void setDither(boolean)>','<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>','<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>','<android.content.Loader: void unregisterListener(android.content.Loader$OnLoadCompleteListener)>','<com.android.internal.policy.impl.IconUtilities: android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)>','<com.android.server.PowerManagerService: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource)>','<android.server.BluetoothDeviceProperties: java.util.Set keySet()>','<com.android.server.AppWidgetService: void deleteAppWidgetId(int)>','<android.widget.ZoomButtonsController$2: void <init>(android.widget.ZoomButtonsController)>','<android.os.Debug: int getGlobalClassInitTime()>','<android.webkit.WebViewCore$WebCoreThread$1: void <init>(android.webkit.WebViewCore$WebCoreThread)>','<com.android.internal.util.StateMachine: void haltedProcessMessage(android.os.Message)>','<android.hardware.Camera$Parameters: int getInt(java.lang.String)>','<android.content.res.AssetFileDescriptor: void <clinit>()>','<com.android.server.WifiService: android.net.wifi.WifiStateMachine access$600(com.android.server.WifiService)>','<com.android.server.am.UriPermission: void <init>(int,android.net.Uri)>','<android.inputmethodservice.KeyboardView: android.widget.TextView access$200(android.inputmethodservice.KeyboardView)>','<com.android.internal.policy.impl.SimUnlockScreen: int access$602(com.android.internal.policy.impl.SimUnlockScreen,int)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.Menu getMenu()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodList()>','<com.android.internal.util.AsyncChannel: void connected(android.content.Context,android.os.Handler,android.os.Messenger)>','<android.view.SurfaceView$4: android.graphics.Canvas lockCanvas(android.graphics.Rect)>','<android.view.IApplicationToken$Stub$Proxy: void windowsDrawn()>','<android.app.Notification$Builder: android.graphics.Bitmap access$602(android.app.Notification$Builder,android.graphics.Bitmap)>','<android.graphics.drawable.Drawable: int getChangingConfigurations()>','<android.view.ViewGroup: boolean addStatesFromChildren()>','<android.opengl.GLLogWrapper: void glNormal3x(int,int,int)>','<com.android.internal.policy.impl.GlobalActions$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>','<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>','<android.animation.AnimatorSet$Node: void addDependency(android.animation.AnimatorSet$Dependency)>','<android.filterfw.io.PatternScanner: void skip(java.util.regex.Pattern)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()>','<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>','<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.os.BatteryStatsImpl: void readOldHistory(android.os.Parcel)>','<android.view.accessibility.AccessibilityManager$MyHandler: void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper)>','<android.net.wifi.WifiInfo: java.lang.String getSSID()>','<com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause valueOf(java.lang.String)>','<android.webkit.ClientCertRequestHandler$5: void <init>(android.webkit.ClientCertRequestHandler)>','<com.android.server.am.BatteryStatsService: void notePhoneState(int)>','<com.android.internal.telephony.gsm.GsmCallTracker: boolean canTransfer()>','<android.content.pm.IPackageManager$Stub$Proxy: boolean performDexOpt(java.lang.String)>','<android.widget.AbsListView: int getBottomPaddingOffset()>','<android.content.pm.UserInfo: void <init>(int,java.lang.String,int)>','<android.view.View: void setTop(int)>','<android.nfc.NfcAdapter: boolean isEnabled()>','<android.webkit.WebSettingsClassic: boolean isNarrowColumnLayout()>','<android.net.wifi.WifiStateMachine: java.lang.String access$4502(android.net.wifi.WifiStateMachine,java.lang.String)>','<android.app.Activity: java.util.HashMap onRetainNonConfigurationChildInstances()>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>','<com.android.internal.widget.ActionBarView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.widget.ListView: void setHeaderDividersEnabled(boolean)>','<android.webkit.WebViewClassic$ProxyReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.ConnectivityService: android.net.ProxyProperties access$3100(com.android.server.ConnectivityService)>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)>','<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>','<android.os.storage.IMountService$Stub$Proxy: boolean isUsbMassStorageConnected()>','<android.app.Dialog: void show()>','<com.android.internal.widget.WaveView: float access$400(com.android.internal.widget.WaveView)>','<android.bluetooth.IBluetoothHealthCallback$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.BaseCommands: void unregisterForCallStateChanged(android.os.Handler)>','<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: boolean processMessage(android.os.Message)>','<com.android.server.DevicePolicyManagerService: void validatePasswordOwnerLocked()>','<android.view.WindowManagerImpl: android.view.ViewRootImpl[] access$000(android.view.WindowManagerImpl)>','<android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>','<android.net.INetworkStatsService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: boolean process(java.util.EventObject)>','<android.view.ViewRootImpl: void handleImeFinishedEvent(int,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: boolean isInCall()>','<android.os.storage.StorageManager$ObbActionListener: int addListener(android.os.storage.OnObbStateChangeListener)>','<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>','<android.text.Selection$END: void <init>(android.text.Selection$1)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult[] values()>','<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>','<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createScoSocket()>','<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>','<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>','<android.media.MediaRecorder: void setAudioSamplingRate(int)>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: java.lang.String toString()>','<android.filterfw.core.Frame: long getTimestamp()>','<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>','<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>','<android.app.Dialog: void dismissDialog()>','<android.app.BackStackRecord: int commitAllowingStateLoss()>','<android.widget.TextView$CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)>','<android.graphics.Picture: void <init>(android.graphics.Picture)>','<android.hardware.SystemSensorManager: int access$002(int)>','<android.view.IWindowManager$Stub$Proxy: void showStrictModeViolation(boolean)>','<com.android.internal.policy.impl.LockPatternKeyguardView$Mode: com.android.internal.policy.impl.LockPatternKeyguardView$Mode[] values()>','<android.renderscript.Element: void <init>(int,android.renderscript.RenderScript)>','<android.server.BluetoothInputProfileHandler: android.server.BluetoothInputProfileHandler getInstance(android.content.Context,android.server.BluetoothService)>','<com.android.internal.policy.impl.PhoneWindowManager: void dispatchMediaKeyRepeatWithWakeLock(android.view.KeyEvent)>','<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)>','<android.net.wifi.SupplicantState$1: android.net.wifi.SupplicantState createFromParcel(android.os.Parcel)>','<android.opengl.GLLogWrapper: void glLightModelf(int,float)>','<android.hardware.SystemSensorManager$ListenerDelegate: void <init>(android.hardware.SystemSensorManager,android.hardware.SensorEventListener,android.hardware.Sensor,android.os.Handler)>','<com.android.server.wm.WindowManagerService: void setInputFilter(com.android.server.input.InputFilter)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String)>','<android.net.wifi.WifiManager: boolean startScanActive()>','<android.database.sqlite.SQLiteConnectionPool$1: void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter,int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void register(int)>','<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.MotionEvent: void setLocation(float,float)>','<android.content.pm.PackageInfoLite$1: android.content.pm.PackageInfoLite[] newArray(int)>','<com.android.internal.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)>','<android.app.ContextImpl$13: java.lang.Object createService(android.app.ContextImpl)>','<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)>','<android.filterfw.core.ProtocolException: void <init>()>','<com.android.server.pm.Settings: void dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>','<com.android.internal.widget.WaveView: android.graphics.drawable.BitmapDrawable createDrawable(int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void dispose()>','<android.webkit.WebSettings: boolean getPluginsEnabled()>','<android.webkit.WebViewClassic: int pinLocY(int)>','<android.filterfw.core.FrameFormat: int getDepth()>','<android.widget.TextView: boolean hasSelection()>','<com.android.server.am.ActivityStack$ActivityState: void <clinit>()>','<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>','<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.net.InetAddress)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isClockVisible()>','<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>','<android.net.wifi.WifiStateMachine: void access$14500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()>','<com.android.internal.widget.TransportControlView$Metadata: android.graphics.Bitmap access$502(com.android.internal.widget.TransportControlView$Metadata,android.graphics.Bitmap)>','<com.android.internal.telephony.cat.GetInputParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.Input)>','<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>','<android.webkit.WebViewClassic: android.webkit.WebSettingsClassic getSettings()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void stopKeepAliveProcess()>','<android.widget.Spinner: int getDropDownVerticalOffset()>','<android.webkit.HTML5VideoView: void pauseAndDispatch(android.webkit.HTML5VideoViewProxy)>','<android.app.IProcessObserver$Stub: android.os.IBinder asBinder()>','<com.android.internal.widget.LockPatternView: void onSizeChanged(int,int,int,int)>','<com.android.uiautomator.core.InteractionController$4: boolean apply(android.view.accessibility.AccessibilityEvent)>','<android.content.Intent: android.content.ClipData getClipData()>','<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>','<android.app.ActivityThread$ProfilerControlData: void <init>()>','<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>','<com.android.vcard.VCardParserImpl_V30: java.lang.String encodeParamValue(java.lang.String)>','<android.media.MediaRouter: void removeRouteAt(int)>','<com.android.internal.app.AlertController: android.os.Message access$300(com.android.internal.app.AlertController)>','<android.view.ViewGroup: int getLayoutMode()>','<android.app.ActivityThread$Idler: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>','<android.content.res.Configuration: int compareTo(java.lang.Object)>','<android.renderscript.RenderScript: void nFileA3DGetIndexEntries(int,int,int[],java.lang.String[])>','<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onServiceStateChanged(android.telephony.ServiceState)>','<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentLocation(int)>','<android.database.AbstractCursor: void checkPosition()>','<android.widget.AdapterViewAnimator$2: void run()>','<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()>','<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>','<android.webkit.ClientCertRequestHandler$3: void run()>','<android.net.wifi.WifiConfiguration$EnterpriseField: java.lang.String value()>','<com.android.server.pm.PackageManagerService: int access$4100(com.android.server.pm.PackageManagerService,android.content.pm.PackageParser$Package)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$8400(android.net.wifi.WifiStateMachine)>','<com.android.server.am.ActivityManagerService$11: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.os.DropBoxManager,java.lang.String)>','<android.webkit.ZoomManager: void setZoomScale(float,boolean)>','<com.android.internal.telephony.RIL$RILReceiver: void <init>(com.android.internal.telephony.RIL)>','<com.android.server.location.GpsLocationProvider: int access$1800(com.android.server.location.GpsLocationProvider)>','<android.os.AsyncTask: java.util.concurrent.atomic.AtomicBoolean access$300(android.os.AsyncTask)>','<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>','<android.view.IWindow$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>','<android.app.ContextImpl$36: java.lang.Object createService(android.app.ContextImpl)>','<android.os.Build: void <clinit>()>','<android.content.pm.PackageParser: void <init>(java.lang.String)>','<android.view.GLES20RecordingCanvas: void drawPatch(android.graphics.Bitmap,byte[],android.graphics.RectF,android.graphics.Paint)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasPager()>','<com.android.server.ConnectivityService$FeatureUser: boolean isSameUser(com.android.server.ConnectivityService$FeatureUser)>','<com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.os.Looper: android.os.MessageQueue myQueue()>','<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>','<android.telephony.SmsMessage: int getIndexOnSim()>','<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,java.lang.String)>','<com.android.internal.database.SortCursor: int getInt(int)>','<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>','<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getOrigDialString()>','<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>','<android.widget.Editor$HandleView: void onDetached()>','<android.os.ResultReceiver: void <init>(android.os.Parcel)>','<android.server.BluetoothService: void updateDeviceServiceChannelCache(java.lang.String)>','<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>','<android.telephony.JapanesePhoneNumberFormatter: void <clinit>()>','<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>','<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView$OnSuggestionListener)>','<android.content.Intent: java.lang.String getPackage()>','<android.location.ILocationProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>','<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void write(int)>','<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>','<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>','<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>','<android.net.Uri$Part$EmptyPart: void <init>(java.lang.String)>','<android.content.ISyncContext$Stub$Proxy: void <init>(android.os.IBinder)>','<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateGammaTable(float)>','<android.content.SyncManager: boolean access$402(android.content.SyncManager,boolean)>','<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>','<com.android.internal.policy.impl.GlobalActions: void access$300(com.android.internal.policy.impl.GlobalActions,boolean)>','<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>','<android.view.animation.LayoutAnimationController: int getOrder()>','<android.view.View: void unFocus()>','<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String)>','<android.webkit.WebViewClassic: void clearMatches()>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>','<android.widget.ScrollView: boolean fullScroll(int)>','<android.view.FocusFinder: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: boolean checkInternalFreeStorage(android.net.Uri,boolean,long)>','<android.animation.LayoutTransition: void setDuration(long)>','<com.android.internal.policy.impl.GlobalActions$2: boolean showBeforeProvisioning()>','<android.os.ServiceManager: java.lang.String[] listServices()>','<android.widget.PopupWindow: void setWidth(int)>','<android.app.Fragment: void onDestroyView()>','<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String access$4900(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.filterfw.core.FilterGraph: boolean isReady()>','<android.content.pm.ServiceInfo: void <clinit>()>','<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>','<android.widget.ZoomButton: boolean onLongClick(android.view.View)>','<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>','<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreSetsAvailable(android.app.backup.RestoreSet[])>','<android.net.IConnectivityManager$Stub$Proxy: boolean requestRouteToHost(int,int)>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)>','<android.net.wifi.WifiStateMachine$InitialState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.server.wm.WindowState: int getSystemUiVisibility()>','<android.net.EthernetDataTracker$InterfaceObserver: void interfaceStatusChanged(java.lang.String,boolean)>','<android.os.Debug: void setFieldsOn(java.lang.Class,boolean)>','<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>','<android.view.View: void onWindowSystemUiVisibilityChanged(int)>','<android.net.nsd.INsdManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>','<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int,int)>','<android.os.IPowerManager$Stub$Proxy: void userActivityWithForce(long,boolean,boolean)>','<com.android.internal.telephony.PhoneBase: void notifyDisconnectP(com.android.internal.telephony.Connection)>','<com.android.internal.telephony.ApnContext: void log(java.lang.String)>','<android.net.wifi.p2p.WifiP2pProvDiscEvent: java.lang.String toString()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>','<android.net.wifi.WifiStateMachine: void handlePreDhcpSetup()>','<android.os.INetworkManagementService$Stub$Proxy: void addSecondaryRoute(java.lang.String,android.net.RouteInfo)>','<android.view.inputmethod.InputMethodManager$H: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper)>','<com.android.internal.policy.impl.PhoneWindowManager$18: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.server.BluetoothService: java.lang.String[] getRemoteDeviceProperties(java.lang.String)>','<android.filterpacks.videosrc.MediaSource: boolean access$702(android.filterpacks.videosrc.MediaSource,boolean)>','<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>','<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>','<android.view.GLES20Canvas: boolean getClipBounds(android.graphics.Rect)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>','<android.widget.SpellChecker$SpellParser: void stop()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: boolean hasNationalNumberPattern()>','<android.widget.TextView: float getLineSpacingMultiplier()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.LinkProperties access$1202(android.net.wifi.WifiWatchdogStateMachine,android.net.LinkProperties)>','<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)>','<android.preference.Preference: void setShouldDisableView(boolean)>','<android.content.SyncStorageEngine: void clearAndReadState()>','<com.android.internal.telephony.DataConnectionAc: void removeApnContextSync(com.android.internal.telephony.ApnContext)>','<android.accounts.AccountManager$AmsTask: void set(android.os.Bundle)>','<android.content.IContentService$Stub$Proxy: int getIsSyncable(android.accounts.Account,java.lang.String)>','<com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.Phone$DataActivityState convertDataActivityState(int)>','<android.widget.Editor$SuggestionsPopupWindow: boolean access$1200(android.widget.Editor$SuggestionsPopupWindow)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1300(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.view.ViewRootImpl: void doConsumeBatchedInput(long)>','<com.android.internal.util.MemInfoReader: void <init>()>','<android.webkit.CacheManager$CacheResult: java.lang.String getLocation()>','<android.view.inputmethod.EditorInfo$1: android.view.inputmethod.EditorInfo createFromParcel(android.os.Parcel)>','<android.text.Layout: void increaseWidthTo(int)>','<android.content.SyncStatusInfo: void <clinit>()>','<com.android.internal.telephony.DataConnection: void access$2200(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.provider.ContactsContract$StatusUpdates: int getPresencePrecedence(int)>','<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>','<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>','<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>','<android.view.ViewGroup$LayoutParams: void <init>(int,int)>','<com.android.internal.widget.LockPatternView$SavedState: boolean isInputEnabled()>','<android.view.InputDevice: android.view.InputDevice getDevice(int)>','<android.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>','<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener)>','<android.view.textservice.SentenceSuggestionsInfo$1: void <init>()>','<com.android.internal.telephony.sip.SipPhone: void getCallWaiting(android.os.Message)>','<android.webkit.URLUtil: java.lang.String parseContentDisposition(java.lang.String)>','<com.android.server.pm.PackageManagerService$10: void run()>','<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<com.android.server.AppWidgetServiceImpl: void setBindAppWidgetPermission(java.lang.String,boolean)>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: void <init>(android.text.Spanned,char[],char[])>','<com.android.internal.policy.impl.GlobalActions$ToggleAction$State: com.android.internal.policy.impl.GlobalActions$ToggleAction$State valueOf(java.lang.String)>','<android.widget.AbsListView: int getVerticalScrollbarWidth()>','<android.widget.Spinner: android.graphics.Rect access$200(android.widget.Spinner)>','<android.content.pm.ActivityInfo: int describeContents()>','<com.android.internal.app.IMediaContainerService$Stub: com.android.internal.app.IMediaContainerService asInterface(android.os.IBinder)>','<com.android.internal.telephony.DataConnection$FailCause: int getErrorCode()>','<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.gsm.GSMPhone)>','<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CdmaCall: void clearDisconnected()>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributePrefix(int)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>','<android.view.KeyEvent: int getModifierMetaStateMask()>','<com.android.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>','<android.text.Layout: int getEllipsizedWidth()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$1: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.app.ExpandableListActivity: void onContentChanged()>','<android.media.AudioService: int access$8104()>','<com.android.internal.telephony.gsm.GSMPhone$NetworkSelectMessage: void <init>(com.android.internal.telephony.gsm.GSMPhone$1)>','<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>','<com.android.internal.widget.DigitalClock$TimeChangedReceiver$1: void <init>(com.android.internal.widget.DigitalClock$TimeChangedReceiver,boolean,com.android.internal.widget.DigitalClock)>','<com.android.internal.policy.impl.RecentApplicationsDialog$1: void <init>(com.android.internal.policy.impl.RecentApplicationsDialog)>','<com.android.server.sip.SipSessionListenerProxy$3: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<android.app.Activity: void setProgress(int)>','<android.text.method.BaseKeyListener$1: void <clinit>()>','<android.app.ActivityManager$TaskThumbnails$1: android.app.ActivityManager$TaskThumbnails createFromParcel(android.os.Parcel)>','<android.app.DownloadManager$CursorTranslator: java.lang.String getString(int)>','<android.view.animation.Animation: void startNow()>','<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>','<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>','<android.widget.TextView: int computeVerticalScrollExtent()>','<com.android.internal.telephony.RIL: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.util.StateMachine: android.os.Handler getHandler()>','<com.android.internal.telephony.gsm.SIMRecords: boolean getVoiceCallForwardingFlag()>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>','<com.android.internal.widget.ScrollingTabContainerView: android.widget.LinearLayout access$200(com.android.internal.widget.ScrollingTabContainerView)>','<android.webkit.WebSettingsClassic: void setDatabaseEnabled(boolean)>','<com.android.internal.policy.impl.GlobalActions$ToggleAction$State: void <clinit>()>','<android.graphics.drawable.AnimationDrawable: int getDuration(int)>','<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>','<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>','<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>','<android.os.Binder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>','<com.android.server.am.ReceiverList: boolean equals(java.lang.Object)>','<com.android.internal.util.StateMachine: void sendMessage(int)>','<android.app.Dialog: void <init>(android.content.Context,int)>','<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>','<android.server.BluetoothAdapterStateMachine: void access$7400(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.telephony.cdma.CDMAPhone$2: void <clinit>()>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>','<com.android.internal.telephony.BaseCommands: void setOnIccRefresh(android.os.Handler,int,java.lang.Object)>','<com.android.internal.util.CharSequences$1: int length()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>','<android.webkit.ViewManager$ChildView: void removeView()>','<android.text.format.DateUtils: java.lang.String writeDateTime(java.util.Calendar)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void onLooperPrepared()>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: boolean isTagEnabled(java.lang.String)>','<com.android.internal.policy.impl.PatternUnlockScreen$FooterMode: com.android.internal.policy.impl.PatternUnlockScreen$FooterMode[] values()>','<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>','<android.widget.TextView: boolean performLongClick()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>','<android.inputmethodservice.SoftInputWindow: int getSize()>','<com.android.internal.os.BatteryStatsImpl: void finishAddingCpuLocked(int,int,int,long[])>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>','<android.os.NullVibrator: void vibrate(long[],int)>','<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>','<android.text.method.ArrowKeyMovementMethod: void <clinit>()>','<android.renderscript.Element: android.renderscript.Element I16_3(android.renderscript.RenderScript)>','<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void <init>(com.android.internal.policy.impl.SimUnlockScreen,com.android.internal.policy.impl.SimUnlockScreen$1)>','<android.net.wifi.WifiStateMachine$2: void <init>(android.net.wifi.WifiStateMachine)>','<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>','<com.android.server.wm.Session: java.lang.String toString()>','<com.android.server.wm.WindowAnimator: void hideWallpapersLocked(com.android.server.wm.WindowState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String)>','<android.os.DropBoxManager: void <init>()>','<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>','<android.content.Intent: void readFromParcel(android.os.Parcel)>','<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>','<com.android.server.am.FactoryErrorDialog$1: void <init>(com.android.server.am.FactoryErrorDialog)>','<android.widget.SearchView: java.lang.CharSequence getQueryHint()>','<android.view.View: void setScrollContainer(boolean)>','<com.android.server.am.CompatModeDialog$2: void <init>(com.android.server.am.CompatModeDialog)>','<android.filterfw.core.FieldPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>','<com.android.server.am.ActivityManagerService$ServiceRestarter: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityManagerService$1)>','<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>','<android.renderscript.RenderScript: void nContextDump(int)>','<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.LocationManagerService: android.content.pm.PackageManager access$2200(com.android.server.LocationManagerService)>','<com.android.server.AppWidgetServiceImpl$1: void <init>(com.android.server.AppWidgetServiceImpl,android.content.Intent)>','<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>','<android.webkit.WebViewClassic: void setShouldMonitorWebCoreThread()>','<android.app.ActivityThread: void access$700(android.app.ActivityThread,android.app.ActivityThread$ActivityClientRecord)>','<com.android.internal.telephony.DataConnectionTracker: boolean setInternalDataEnabled(boolean)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>','<android.media.AudioService: android.media.AudioService$AudioHandler access$102(android.media.AudioService,android.media.AudioService$AudioHandler)>','<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>','<android.net.http.Connection: void setCanPersist(boolean)>','<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])>','<com.android.uiautomator.core.QueryController: java.lang.String access$302(com.android.uiautomator.core.QueryController,java.lang.String)>','<com.android.server.AttributeCache$Package: void <init>(android.content.Context)>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextBeforeCursor(java.lang.CharSequence,int)>','<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>','<com.android.server.BatteryService$2: void <init>(com.android.server.BatteryService)>','<android.view.View: boolean post(java.lang.Runnable)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()>','<android.view.ActionMode: void <init>()>','<android.text.style.BulletSpan: void <clinit>()>','<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>','<android.widget.SpellChecker: void <init>(android.widget.TextView)>','<com.android.internal.telephony.CallManager: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>','<android.view.accessibility.AccessibilityRecord: void clear()>','<android.net.wifi.WifiStateMachine: int access$4302(android.net.wifi.WifiStateMachine,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>','<android.widget.RelativeLayout$DependencyGraph: void <init>(android.widget.RelativeLayout$1)>','<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)>','<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailTag(java.lang.String)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput()>','<android.widget.AdapterView: void rememberSyncState()>','<android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>','<android.media.MediaRouter$UserRouteInfo: void setName(java.lang.CharSequence)>','<android.net.http.HttpsConnection$1: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>','<android.view.HardwareRenderer$Gl20Renderer: int onPreDraw(android.graphics.Rect)>','<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,boolean)>','<android.app.TaskStackBuilder: int getIntentCount()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getFixedLine()>','<android.media.IAudioService$Stub$Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>','<android.net.http.Headers: long getContentLength()>','<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>','<android.app.ReceiverRestrictedContext: void <init>(android.content.Context)>','<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>','<com.android.internal.telephony.sip.SipCommandInterface: void hangupWaitingOrBackground(android.os.Message)>','<android.webkit.WebViewClassic: void computeScroll()>','<com.android.internal.view.menu.SubMenuBuilder: boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl)>','<com.android.server.am.ActivityResult: void <init>(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<android.net.LinkCapabilities: void <init>()>','<android.os.StrictMode$VmPolicy$Builder: void <init>(android.os.StrictMode$VmPolicy)>','<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String,android.content.BroadcastReceiver)>','<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)>','<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>','<android.location.Address: java.lang.String access$1702(android.location.Address,java.lang.String)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)>','<com.android.internal.policy.impl.FaceUnlock$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.view.VolumePanel$1: boolean onTouch(android.view.View,android.view.MotionEvent)>','<android.text.style.SuggestionSpan: int getFlags()>','<android.app.Fragment$SavedState: void <clinit>()>','<android.webkit.CacheManager$CacheResult: java.lang.String getETag()>','<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>','<android.nfc.tech.IsoDep: void reconnect()>','<android.util.TimeUtils: void <clinit>()>','<android.accounts.AccountManagerService$4: java.lang.String toDebugString(long)>','<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newAssertQuery(android.net.Uri)>','<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)>','<android.webkit.WebView: void clearMatches()>','<android.widget.ExpandableListView$SavedState: void <clinit>()>','<android.net.http.HttpConnection: void <init>(android.content.Context,org.apache.http.HttpHost,android.net.http.RequestFeeder)>','<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>','<android.server.BluetoothInputProfileHandler: void handleInputDevicePropertyChange(java.lang.String,boolean)>','<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)>','<android.view.animation.Animation: void reset()>','<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>','<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>','<android.webkit.ClientCertRequestHandler: int access$000(android.webkit.ClientCertRequestHandler)>','<android.net.DhcpInfoInternal: android.net.LinkAddress makeLinkAddress()>','<com.android.internal.telephony.cdma.CdmaConnection: boolean compareTo(com.android.internal.telephony.DriverCall)>','<android.net.http.RequestHandle: void cancel()>','<android.webkit.BrowserFrame$1: boolean useHttpAuthUsernamePassword()>','<android.widget.RemoteViews$ReflectionActionWithoutParams: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>','<android.content.pm.PackageParser$Permission: void setPackageName(java.lang.String)>','<android.animation.AnimatorSet$1: void onAnimationEnd(android.animation.Animator)>','<android.os.ParcelFileDescriptor$1: android.os.ParcelFileDescriptor[] newArray(int)>','<com.android.internal.view.IInputMethodCallback$Stub: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodSubtype: int getIconResId()>','<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()>','<android.database.DatabaseUtils$InsertHelper: int getColumnIndex(java.lang.String)>','<android.net.sip.SipSessionAdapter: void onCallEnded(android.net.sip.ISipSession)>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void onAnimationEnd(android.animation.Animator)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean removeKeyboardLayout(java.lang.String)>','<com.android.server.wm.WindowManagerService: void thawRotation()>','<android.view.ViewRootImpl$TakenSurfaceHolder: void setFixedSize(int,int)>','<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)>','<com.android.internal.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>','<android.webkit.DeviceOrientationService: boolean access$000(android.webkit.DeviceOrientationService)>','<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>','<android.widget.ScrollView: int computeVerticalScrollOffset()>','<android.renderscript.RenderScript: void nScriptSetVarObj(int,int,int)>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: boolean access$002(com.android.internal.telephony.gsm.UsimPhoneBookManager,boolean)>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()>','<com.android.internal.policy.impl.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>','<android.graphics.Path: void addPath(android.graphics.Path,float,float)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean getBoolean(java.lang.String,boolean,int)>','<android.nfc.INfcTag$Stub: void <init>()>','<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>','<android.media.AudioService$RcClientDeathHandler: android.os.IBinder getBinder()>','<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>','<android.opengl.GLLogWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>','<com.android.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>','<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])>','<com.android.internal.telephony.sip.SipCommandInterface: void acceptCall(android.os.Message)>','<android.view.GLES20RenderLayer: void end(android.graphics.Canvas)>','<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>','<android.text.HtmlToSpannedConverter$Big: void <init>(android.text.HtmlToSpannedConverter$1)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()>','<com.android.server.EventLogTags: void writeRestoreAgentFailure(java.lang.String,java.lang.String)>','<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>','<android.net.sip.SipAudioCall: android.net.sip.SipAudioCall$Listener access$100(android.net.sip.SipAudioCall)>','<android.view.ViewConfiguration: int getScaledOverscrollDistance()>','<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>','<android.media.IAudioRoutesObserver$Stub: android.os.IBinder asBinder()>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>','<android.widget.TextView$SavedState: void <clinit>()>','<com.android.internal.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void dispose()>','<com.android.internal.policy.IFaceLockCallback$Stub: android.os.IBinder asBinder()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>','<android.os.IRemoteCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>','<android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext$1: void run()>','<android.view.View: android.os.IBinder getApplicationWindowToken()>','<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>','<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>','<com.android.internal.telephony.BaseCommands: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>','<android.widget.Spinner$DialogPopup: void show()>','<android.os.ServiceManager: void <init>()>','<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback)>','<android.app.ApplicationPackageManager$ResourceName: java.lang.String toString()>','<com.android.server.net.NetworkStatsCollection$Key: int compareTo(com.android.server.net.NetworkStatsCollection$Key)>','<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIOSC(int,int,java.lang.Object,int,com.android.internal.view.IInputContextCallback)>','<com.android.internal.view.menu.ActionMenuItemView: void setShortcut(boolean,char)>','<android.content.IClipboard$Stub$Proxy: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>','<android.net.wifi.WifiConfigStore: boolean removeNetwork(int)>','<android.content.pm.IPackageInstallObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void unhold(android.net.rtp.AudioGroup)>','<com.android.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>','<android.widget.Filter: android.os.Handler access$402(android.widget.Filter,android.os.Handler)>','<android.media.AudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>','<android.os.BatteryStats$Uid$Pkg: void <init>()>','<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>','<com.android.internal.telephony.sip.SipCommandInterface: void getCLIR(android.os.Message)>','<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>','<android.webkit.CallbackProxy$10: void onClick(android.content.DialogInterface,int)>','<com.android.server.pm.PackageSettingBase: java.util.HashSet getDisabledComponents(int)>','<android.os.Parcel: void writeByteArray(byte[])>','<android.view.GestureDetector: boolean access$400(android.view.GestureDetector)>','<android.webkit.WebViewCore$EventHub: void <init>(android.webkit.WebViewCore,android.webkit.WebViewCore$1)>','<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>','<android.webkit.JsResult: void <init>(android.webkit.JsResult$ResultReceiver)>','<android.os.INetworkManagementService$Stub$Proxy: void stopAccessPoint(java.lang.String)>','<android.bluetooth.BluetoothClass$1: android.bluetooth.BluetoothClass createFromParcel(android.os.Parcel)>','<android.os.MemoryFile: java.io.InputStream getInputStream()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)>','<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.app.LoadedApk$ServiceDispatcher: void connected(android.content.ComponentName,android.os.IBinder)>','<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>','<com.android.internal.telephony.IccSmsInterfaceManager: java.util.ArrayList buildValidRawData(java.util.ArrayList)>','<android.content.SyncManager: android.accounts.AccountAndUser[] access$2500()>','<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>','<com.android.server.InputMethodManagerService$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: void readExternal(java.io.ObjectInput)>','<android.os.IMessenger$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.AbsSpinner$RecycleBin: android.view.View get(int)>','<android.ddm.DdmHandleProfiling: void <clinit>()>','<com.android.internal.view.IInputConnectionWrapper: void performEditorAction(int)>','<com.android.internal.policy.impl.AccountUnlockScreen: boolean needsInput()>','<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>','<com.android.server.ConnectivityService: void access$1600(com.android.server.ConnectivityService,int,int)>','<android.webkit.Plugin: void setFileName(java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>','<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onTrigger(android.view.View,int)>','<android.graphics.Color: int HSVToColor(int,float[])>','<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>','<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>','<com.android.internal.view.BaseIWindow: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>','<android.server.BluetoothAdapterProperties: void getAllProperties()>','<android.view.View$12: java.lang.Object get(java.lang.Object)>','<android.content.pm.IPackageInstallObserver$Stub: android.os.IBinder asBinder()>','<android.view.ViewGroup$1: void run()>','<com.android.server.LocationManagerService: void access$600(com.android.server.LocationManagerService)>','<android.widget.RemoteViews$TextViewDrawableAction: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3: void <init>(java.lang.String,int)>','<android.database.DataSetObserver: void <init>()>','<android.view.View: float getScaleX()>','<com.android.internal.widget.ActionBarView$2: void <init>(com.android.internal.widget.ActionBarView)>','<android.nfc.FormatException: void <init>(java.lang.String,java.lang.Throwable)>','<android.app.WallpaperManager$Globals: void forgetLoadedWallpaper()>','<com.android.internal.telephony.cat.ValueParser: java.lang.String retrieveAlphaId(com.android.internal.telephony.cat.ComprehensionTlv)>','<android.filterfw.core.StreamPort: void clear()>','<com.android.server.PowerManagerService: void userActivity(long,boolean)>','<android.net.wifi.WifiStateMachine: android.content.Context access$1900(android.net.wifi.WifiStateMachine)>','<android.app.Activity: void closeContextMenu()>','<android.widget.ZoomControls: void show()>','<android.accounts.IAccountManager$Stub$Proxy: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>','<com.android.server.pm.PackageManagerService$MoveParams: void handleReturnCode()>','<android.view.textservice.SpellCheckerSubtype: java.util.List sort(android.content.Context,int,android.view.textservice.SpellCheckerInfo,java.util.List)>','<android.bluetooth.BluetoothDeviceProfileState: android.content.BroadcastReceiver access$4202(android.bluetooth.BluetoothDeviceProfileState,android.content.BroadcastReceiver)>','<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>','<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.widget.ArrayAdapter: android.content.Context getContext()>','<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>','<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<com.android.internal.util.XmlUtils: void <init>()>','<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder addParameter(java.lang.String,java.lang.String)>','<android.graphics.Matrix$1: void setSkew(float,float,float,float)>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>','<com.android.internal.statusbar.StatusBarIconList$1: com.android.internal.statusbar.StatusBarIconList[] newArray(int)>','<android.webkit.WebViewCore: void clearContent()>','<com.android.server.InputMethodManagerService$ImeSubtypeListItem: int compareTo(java.lang.Object)>','<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>','<android.text.SpannedString: int getSpanEnd(java.lang.Object)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$3900(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.app.DownloadManager: void restartDownload(long[])>','<android.net.wifi.p2p.WifiP2pGroup: void setNetworkName(java.lang.String)>','<com.android.server.PowerManagerService: void crash(java.lang.String)>','<com.android.server.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int)>','<android.webkit.WebViewClassic: android.webkit.WebView$FindListener access$6500(android.webkit.WebViewClassic)>','<android.webkit.WebViewCore$EventHub: void access$7600(android.webkit.WebViewCore$EventHub)>','<android.media.MediaRouter$RouteCategory: void <init>(int,int,boolean)>','<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>','<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>','<com.android.server.am.UriPermission: java.lang.String toString()>','<android.view.View: boolean isLayoutRtl()>','<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>','<android.net.wifi.WifiManager$Channel: java.lang.Object removeListener(int)>','<com.android.server.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>','<android.widget.TextView: boolean getDefaultEditable()>','<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>','<android.app.ActivityManagerProxy: void resumeAppSwitches()>','<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>','<com.android.internal.telephony.RIL: void getSignalStrength(android.os.Message)>','<com.android.internal.telephony.IccCardApplication$AppType: com.android.internal.telephony.IccCardApplication$AppType[] values()>','<android.app.backup.IRestoreSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.ZoomManager: float access$1100()>','<com.android.internal.telephony.IccRecords: com.android.internal.telephony.IccCard getIccCard()>','<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.filterfw.core.FilterGraph: void closeFilters(android.filterfw.core.FilterContext)>','<android.net.wifi.WifiWatchdogStateMachine: void access$1600(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.location.LocationManager$ListenerTransport: void <init>(android.location.LocationManager,android.location.LocationListener,android.os.Looper)>','<android.media.MediaPlayer$TrackInfo: int getTrackType()>','<android.webkit.WebViewClassic$TrustStorageListener: void <init>(android.webkit.WebViewClassic$1)>','<com.android.server.LightsService$Light: void setFlashing(int,int,int,int)>','<android.animation.AnimatorSet$DependencyListener: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int)>','<android.media.RemoteControlClient: java.lang.Object access$600(android.media.RemoteControlClient)>','<com.android.internal.telephony.cat.TextAttribute: void <init>(int,int,com.android.internal.telephony.cat.TextAlignment,com.android.internal.telephony.cat.FontSize,boolean,boolean,boolean,boolean,com.android.internal.telephony.cat.TextColor)>','<com.android.internal.telephony.DataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void updateServiceLocation()>','<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>','<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read()>','<android.accounts.AccountManager$BaseFutureTask$Response: void <init>(android.accounts.AccountManager$BaseFutureTask)>','<com.android.internal.widget.ActionBarView$SavedState: void <clinit>()>','<android.net.wifi.WifiMonitor: android.net.wifi.WifiNative access$100(android.net.wifi.WifiMonitor)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<com.android.internal.telephony.PhoneBase: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getNativeLibraryPath()>','<android.net.IConnectivityManager$Stub$Proxy: int untether(java.lang.String)>','<android.app.ActivityThread$ApplicationThread: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])>','<android.webkit.CacheManager$CacheResult: void setInputStream(java.io.InputStream)>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()>','<com.android.server.usb.UsbSettingsManager: boolean hasDefaults(java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)>','<com.android.internal.widget.PointerLocationView: boolean onTrackballEvent(android.view.MotionEvent)>','<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<com.android.internal.telephony.DataConnectionTracker$State: com.android.internal.telephony.DataConnectionTracker$State[] values()>','<android.net.wifi.WifiStateMachine: android.os.Message access$14600(android.net.wifi.WifiStateMachine)>','<android.app.Dialog: android.content.Context getContext()>','<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>','<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()>','<com.android.internal.telephony.RIL: void setNetworkSelectionModeManual(java.lang.String,android.os.Message)>','<android.widget.ScrollView: void onMeasure(int,int)>','<android.graphics.Paint: int getBidiFlags()>','<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>','<com.android.server.am.ActivityManagerService: boolean willActivityBeVisible(android.os.IBinder)>','<android.widget.TextView: int getSelectionEnd()>','<android.app.ActivityThread$ApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>','<android.security.Credentials: byte[] convertToPem(java.lang.Object[])>','<android.view.KeyCharacterMap: char getMatch(int,char[])>','<com.android.vcard.VCardParser_V30: void <init>(int)>','<com.android.server.location.MockProvider: boolean hasMonetaryCost()>','<com.android.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.lang.String)>','<com.android.internal.telephony.GsmAlphabet: int[] getEnabledSingleShiftTables()>','<android.text.util.Linkify$4: int compare(java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.sip.SipPhone: android.telephony.ServiceState getServiceState()>','<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>','<android.app.FragmentManagerImpl: void dispatchPause()>','<android.server.BluetoothService: boolean createBond(java.lang.String)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onVoiceCallStarted()>','<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void dispose()>','<android.view.textservice.TextInfo: int getCookie()>','<android.content.pm.PackageStats: void <init>(android.os.Parcel)>','<android.server.BluetoothService$2: void <init>(android.server.BluetoothService)>','<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>','<android.nfc.NfcAdapter$1: void <init>(android.nfc.NfcAdapter)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: void setEnabled(boolean)>','<android.widget.TextView: int getExtendedPaddingBottom()>','<android.app.SearchableInfo: int getSuggestThreshold()>','<android.app.Fragment: boolean isInBackStack()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$2: void <init>(com.android.internal.telephony.gsm.GsmServiceStateTracker,android.os.Handler)>','<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>','<android.graphics.drawable.GradientDrawable: int getOpacity()>','<android.webkit.ZoomManager$PostScale: void <init>(android.webkit.ZoomManager,boolean,boolean,boolean)>','<android.webkit.GeolocationPermissionsClassic: java.util.Set access$000()>','<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>','<android.app.ActivityThread: void performUserLeavingActivity(android.app.ActivityThread$ActivityClientRecord)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothHeadset access$1300(android.bluetooth.BluetoothDeviceProfileState)>','<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimCdmaHomeLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<android.hardware.usb.UsbDevice: java.lang.String toString()>','<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.lang.String toString()>','<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)>','<android.app.ActivityOptions: int getCustomEnterResId()>','<com.android.server.am.ActivityStack: android.graphics.Bitmap screenshotActivities(com.android.server.am.ActivityRecord)>','<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<android.text.TextUtils$SimpleStringSplitter: java.util.Iterator iterator()>','<com.android.internal.telephony.DataConnectionAc: void setReconnectIntentSync(android.app.PendingIntent)>','<android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String)>','<android.text.style.AlignmentSpan$Standard: void <init>(android.text.Layout$Alignment)>','<android.widget.RelativeLayout$DependencyGraph$Node$1: void onAcquired(android.widget.RelativeLayout$DependencyGraph$Node)>','<com.android.server.pm.PackageManagerService: boolean access$2300(com.android.server.pm.PackageManagerService)>','<com.android.internal.telephony.CallManager: void unregisterForNewRingingConnection(android.os.Handler)>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: boolean showDuringKeyguard()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getPassword()>','<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>','<android.service.wallpaper.IWallpaperConnection$Stub: android.os.IBinder asBinder()>','<com.android.server.sip.SipWakeupTimer: void onReceive(android.content.Context,android.content.Intent)>','<android.renderscript.RenderScript: int nProgramFragmentCreate(java.lang.String,java.lang.String[],int[])>','<android.webkit.WebViewClassic: boolean access$5500(android.webkit.WebViewClassic)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void check(java.lang.String)>','<android.view.ViewDebug$HierarchyTraceType: android.view.ViewDebug$HierarchyTraceType valueOf(java.lang.String)>','<com.android.server.NsdService$ClientInfo: android.util.SparseArray access$1200(com.android.server.NsdService$ClientInfo)>','<android.content.res.Resources: java.lang.CharSequence getText(int)>','<android.content.res.Resources: java.lang.String[] getStringArray(int)>','<com.android.server.am.ProviderMap: void removeProviderByName(java.lang.String,int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection getConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>','<android.net.http.RequestQueue: android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>','<android.accounts.AuthenticatorDescription: int hashCode()>','<android.widget.AbsListView: void invalidateViews()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothAdapter access$4300(android.bluetooth.BluetoothDeviceProfileState)>','<android.content.ContentProvider: void <init>()>','<android.net.sip.SipAudioCall$Listener: void onCallHeld(android.net.sip.SipAudioCall)>','<android.content.IntentFilter: void addDataPath(java.lang.String,int)>','<android.webkit.ZoomControlEmbedded: android.widget.ZoomButtonsController access$200(android.webkit.ZoomControlEmbedded)>','<android.app.BackStackState: void <clinit>()>','<android.widget.AbsListView$WindowRunnnable: boolean sameWindow()>','<com.android.vcard.VCardComposer: void <init>(android.content.Context,android.content.ContentResolver,int,java.lang.String,boolean)>','<android.widget.ProgressBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.view.View: void onScrollChanged(int,int,int,int)>','<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.GridView: int findMotionRow(int)>','<android.telephony.SmsMessage: int getProtocolIdentifier()>','<com.android.internal.widget.TransportControlView$SavedState: void <init>(android.os.Parcelable)>','<com.android.internal.telephony.DataConnectionTracker: void cleanUpAllConnections(java.lang.String)>','<android.animation.ObjectAnimator: void <init>()>','<android.view.textservice.SpellCheckerSession: void close()>','<android.view.VolumePanel: void postVolumeChanged(int,int)>','<android.app.SearchDialog$4: boolean onQueryTextSubmit(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService: android.os.Messenger access$9800(android.net.wifi.p2p.WifiP2pService)>','<android.server.BluetoothEventLoop: void stop()>','<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)>','<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>','<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>','<android.webkit.PluginList: void removePlugin(android.webkit.Plugin)>','<com.android.server.am.ActivityManagerService: void installSystemProviders()>','<com.android.internal.widget.PointerLocationView$PointerState: float access$602(com.android.internal.widget.PointerLocationView$PointerState,float)>','<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>','<android.webkit.WebViewCore: boolean access$7002(android.webkit.WebViewCore,boolean)>','<android.net.http.AndroidHttpClientConnection: void shutdown()>','<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>','<android.webkit.WebViewClassic: boolean shouldDelayChildPressedState()>','<android.view.View: float getX()>','<android.os.StrictMode$ThreadPolicy$Builder: void <init>(android.os.StrictMode$ThreadPolicy)>','<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageClear()>','<com.android.internal.telephony.DataConnection$DcDefaultState: void enter()>','<android.view.View: boolean isSelected()>','<android.app.KeyguardManager: void <init>()>','<com.android.internal.telephony.PhoneBase: void registerForRedirectedNumberInfo(android.os.Handler,int,java.lang.Object)>','<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>','<android.util.Slog: int e(java.lang.String,java.lang.String)>','<android.os.ParcelUuid: int describeContents()>','<com.android.server.LocationManagerService$LpPowerComparator: boolean equals(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<android.widget.TextView: void setTextIsSelectable(boolean)>','<android.widget.ListPopupWindow: boolean performItemClick(int)>','<android.webkit.WebViewClassic: int contentToViewY(int)>','<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>','<com.android.internal.widget.WaveView: boolean access$1000(com.android.internal.widget.WaveView)>','<android.app.ApplicationThreadProxy: void clearDnsCache()>','<android.webkit.CookieManagerClassic: void removeSessionCookie()>','<android.filterfw.core.FilterPort: void setChecksType(boolean)>','<com.android.internal.util.Objects: int hashCode(java.lang.Object[])>','<android.os.Message: long getWhen()>','<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>','<android.content.pm.PackageParser$Package: void <init>(java.lang.String)>','<android.bluetooth.BluetoothAdapter$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.cdma.CdmaConnection: int getNumberPresentation()>','<android.provider.SyncStateContract$Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>','<android.accounts.IAccountAuthenticatorResponse$Stub: android.os.IBinder asBinder()>','<com.android.ex.variablespeed.VariableSpeed: void start()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.KeyguardUpdateMonitor access$400(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.view.InputDevice: boolean isVirtual()>','<com.android.server.wm.WindowManagerService: android.os.IBinder getFocusedWindowClientToken()>','<android.widget.TextView: void setWidth(int)>','<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>','<android.os.Bundle: void <clinit>()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateCursor(android.graphics.Rect)>','<android.app.Application: void onCreate()>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: boolean isEnabled(int)>','<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>','<android.view.ViewRootImpl$InputMethodCallback: void finishedEvent(int,boolean)>','<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)>','<android.server.BluetoothHealthProfileHandler: void onHealthDeviceChannelChanged(java.lang.String,java.lang.String,boolean)>','<android.location.Criteria: boolean isAltitudeRequired()>','<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowManagerService: void rebuildAppWindowListLocked()>','<android.filterfw.core.Scheduler: void <init>(android.filterfw.core.FilterGraph)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskWrites()>','<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>','<android.app.IProcessObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.Spinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.webkit.ViewManager$ChildView$1: void run()>','<android.content.BroadcastReceiver: boolean getAbortBroadcast()>','<android.content.res.Resources$Theme: void <init>(android.content.res.Resources)>','<android.inputmethodservice.InputMethodService: void showWindowInner(boolean)>','<com.android.server.am.ActivityManagerService$GraphicsBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.PackageSettingBase: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int)>','<android.app.Fragment: void <init>()>','<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>','<android.location.Address: void setPremises(java.lang.String)>','<com.android.server.EventLogTags: void writeFreeStorageLeft(long,long,long)>','<android.app.Notification$Action$1: void <init>()>','<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$BatteryCallback access$000(com.android.internal.os.BatteryStatsImpl)>','<android.os.UserId: void <init>()>','<android.app.backup.IBackupManager$Stub$Proxy: boolean hasBackupPassword()>','<android.net.sip.SimpleSessionDescription$Media: void setEncryption(java.lang.String,java.lang.String)>','<com.android.server.sip.SipSessionGroup: void close()>','<com.android.internal.util.FileRotator$1: void reset()>','<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>','<com.android.internal.util.TypedProperties: void load(java.io.Reader)>','<com.android.uiautomator.core.UiAutomatorBridge: void updateEventTime()>','<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>','<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>','<android.view.View: void setKeepScreenOn(boolean)>','<android.media.MediaRouter$RouteInfo$1$1: void run()>','<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>','<android.nfc.NdefRecord$1: void <init>()>','<com.android.internal.policy.impl.FaceUnlock$2: void exposeFallback()>','<com.android.server.ConnectivityService: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>','<android.content.pm.PackageStats: int describeContents()>','<android.webkit.WebSettingsClassic: void setLoadsImagesAutomatically(boolean)>','<android.widget.ListPopupWindow: boolean isDropDownAlwaysVisible()>','<com.android.server.pm.PackageManagerService$3: int compare(java.lang.Object,java.lang.Object)>','<android.ddm.DdmHandleAppName: void <clinit>()>','<android.net.wifi.WifiNative: boolean scan()>','<android.net.nsd.NsdServiceInfo: java.lang.String access$102(android.net.nsd.NsdServiceInfo,java.lang.String)>','<android.view.KeyEvent: boolean hasNoModifiers()>','<com.android.server.MountService$ObbAction: void <init>(com.android.server.MountService,com.android.server.MountService$ObbState)>','<com.android.server.MountService: int access$800(com.android.server.MountService,java.lang.String)>','<android.location.LocationManager$GpsStatusListenerTransport: void onNmeaReceived(long,java.lang.String)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)>','<android.net.wifi.WifiStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<android.os.Debug: int getGlobalAllocSize()>','<android.webkit.ZoomManager: boolean isZoomAnimating()>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getAttributeNames()>','<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)>','<com.android.internal.telephony.cat.Duration$1: com.android.internal.telephony.cat.Duration[] newArray(int)>','<android.filterfw.core.Frame: int getBindingType()>','<android.view.SurfaceView: void setVisibility(int)>','<com.android.internal.telephony.DataCallState$SetupResult: com.android.internal.telephony.DataCallState$SetupResult valueOf(java.lang.String)>','<android.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)>','<android.text.TextUtils: java.lang.CharSequence join(java.lang.Iterable)>','<com.android.internal.os.IDropBoxManagerService$Stub: com.android.internal.os.IDropBoxManagerService asInterface(android.os.IBinder)>','<com.android.internal.telephony.AdnRecord: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String[])>','<android.database.CursorWrapper: boolean moveToPosition(int)>','<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: void <init>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.opengl.GLLogWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>','<com.android.server.DeviceStorageMonitorService: long getMemoryLowThreshold()>','<com.android.server.InputMethodManagerService$ImeSubtypeListItem: int compareTo(com.android.server.InputMethodManagerService$ImeSubtypeListItem)>','<android.net.http.ConnectionThread: void <init>(android.content.Context,int,android.net.http.RequestQueue$ConnectionManager,android.net.http.RequestFeeder)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$1202(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.widget.Editor$HandleView: void onMeasure(int,int)>','<android.widget.RemoteViewsAdapter: int getItemViewType(int)>','<android.os.Message: java.lang.String toString(long)>','<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String)>','<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.os.INetworkManagementService$Stub$Proxy: void enableIpv6(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat build()>','<com.android.internal.policy.impl.LockScreen: boolean access$000(com.android.internal.policy.impl.LockScreen)>','<com.android.internal.textservice.ISpellCheckerSession$Stub: void <init>()>','<android.app.backup.BackupDataOutput: void <init>(java.io.FileDescriptor)>','<android.net.wifi.WifiStateMachine: void access$10500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.accounts.AccountManagerService: void writeUserDataIntoCacheLocked(android.accounts.AccountManagerService$UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>','<android.net.wifi.WifiApConfigStore: com.android.internal.util.State access$600(android.net.wifi.WifiApConfigStore)>','<android.net.wifi.WifiNative: boolean setP2pGroupIdle(java.lang.String,int)>','<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>','<com.android.internal.os.BatteryStatsImpl$Timer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>','<android.preference.Preference: android.os.Bundle peekExtras()>','<android.content.ContentQueryMap: java.util.Map getRows()>','<android.location.ILocationProvider$Stub$Proxy: int getStatus(android.os.Bundle)>','<android.graphics.drawable.AnimationDrawable: boolean isRunning()>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceUp(java.lang.String)>','<com.android.internal.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.FragmentManagerImpl: java.lang.String toString()>','<com.android.internal.telephony.BaseCommands: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>','<android.database.AbstractCursor: boolean moveToPrevious()>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean deleteSurroundingText(int,int)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void onNetwork()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void rejectCall()>','<android.bluetooth.BluetoothUuid: boolean isNap(android.os.ParcelUuid)>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>','<android.app.Activity: void performResume()>','<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>','<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>','<com.android.internal.widget.WaveView$1: void <init>(com.android.internal.widget.WaveView)>','<android.net.wifi.SupplicantStateTracker: void access$1000(android.net.wifi.SupplicantStateTracker,com.android.internal.util.IState)>','<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.ISipSession createSession(android.net.sip.ISipSessionListener)>','<com.android.internal.telephony.PhoneProxy: void getCallForwardingOption(int,android.os.Message)>','<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>','<com.android.server.ConnectivityService: boolean isTetheringSupported()>','<com.android.internal.telephony.sip.SipCommandInterface: void setMute(boolean,android.os.Message)>','<android.app.SearchableInfo$1: android.app.SearchableInfo createFromParcel(android.os.Parcel)>','<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>','<com.android.internal.widget.ActionBarContextView: void onAnimationEnd(android.animation.Animator)>','<android.hardware.usb.UsbRequest: void finalize()>','<com.android.server.pm.ShutdownThread$5: void <init>(com.android.server.pm.ShutdownThread,long,boolean[])>','<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>','<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsUidDetail(int)>','<android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)>','<android.net.http.AndroidHttpClientConnection: void doFlush()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumSymbols(android.content.ComponentName,int)>','<android.net.wifi.SupplicantStateTracker: void <init>(android.content.Context,android.net.wifi.WifiStateMachine,android.net.wifi.WifiConfigStore,android.os.Handler)>','<com.android.server.NetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>','<android.security.IKeyChainService$Stub$Proxy: java.lang.String requestPrivateKey(java.lang.String)>','<android.content.IntentSender: void <clinit>()>','<android.graphics.Shader$TileMode: android.graphics.Shader$TileMode valueOf(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void unregisterForMmiComplete(android.os.Handler)>','<com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>','<android.test.mock.MockContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>','<com.android.internal.widget.multiwaveview.GlowPadView$AnimationBundle: void setSuspended(boolean)>','<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>','<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>','<android.widget.RemoteViews$SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>','<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>','<android.graphics.Path: void setLastPoint(float,float)>','<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String)>','<android.app.IThumbnailReceiver$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>','<com.android.server.input.PersistentDataStore: java.lang.String getCurrentKeyboardLayout(java.lang.String)>','<android.widget.ListView: int getHeaderViewsCount()>','<android.webkit.WebIconDatabaseClassic$EventHandler$1: void handleMessage(android.os.Message)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager: void post(java.lang.CharSequence,int,long)>','<android.database.sqlite.SQLiteDebug: boolean shouldLogSlowQuery(long)>','<com.android.internal.telephony.cat.ImageDescriptor: com.android.internal.telephony.cat.ImageDescriptor parse(byte[],int)>','<com.android.server.NativeDaemonEvent: boolean isClassContinue()>','<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>','<android.view.inputmethod.EditorInfo: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>','<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>','<android.view.ViewGroup: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>','<com.android.internal.widget.ActionBarView: void onDetachedFromWindow()>','<android.view.GLES20Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>','<android.widget.ExpandableListConnector: boolean areAllItemsEnabled()>','<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>','<android.view.View: void setDisplayListProperties(android.view.DisplayList)>','<com.android.server.am.ActivityRecord$Token: long getKeyDispatchingTimeout()>','<android.net.wifi.WifiStateMachine: int access$9400(android.net.wifi.WifiStateMachine)>','<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>','<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWaitChar()>','<android.bluetooth.BluetoothDevice: boolean cancelBondProcess()>','<com.android.server.PowerManagerService: boolean access$6300(com.android.server.PowerManagerService)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIccSerialNumber()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$700(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.server.wm.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState,float,float,float,float)>','<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>','<android.view.View: boolean performHapticFeedback(int,int)>','<android.server.BluetoothService$RemoteService: boolean equals(java.lang.Object)>','<android.net.DhcpStateMachine: void access$2000(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.net.http.HttpsConnection: java.lang.String getScheme()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void finalize()>','<android.app.Fragment: void setRetainInstance(boolean)>','<android.animation.AnimatorSet: boolean access$302(android.animation.AnimatorSet,boolean)>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>','<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>','<com.android.server.wm.WindowState: boolean shouldAnimateMove()>','<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>','<android.net.wifi.p2p.WifiP2pManager: void setDialogListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)>','<com.android.internal.widget.DigitalClock$TimeChangedReceiver: void <init>(com.android.internal.widget.DigitalClock)>','<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getThirdArgument(int)>','<android.filterpacks.base.FrameBranch: void <init>(java.lang.String)>','<com.android.server.location.GpsLocationProvider: void access$1100(com.android.server.location.GpsLocationProvider)>','<android.os.storage.IMountShutdownObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.pm.PermissionInfo: int fixProtectionLevel(int)>','<com.android.internal.telephony.cat.DeviceIdentities: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>','<android.webkit.CookieManager: boolean hasCookies()>','<android.view.View$AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<android.net.sip.SipProfile: java.lang.String getProtocol()>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.ComponentName: android.content.ComponentName clone()>','<com.android.server.InputMethodManagerService: void unbindCurrentClientLocked()>','<com.android.internal.telephony.cdma.RuimRecords: void onAllRecordsLoaded()>','<android.location.Criteria: void setBearingRequired(boolean)>','<com.android.server.location.LocationProviderProxy: java.lang.String access$1000(com.android.server.location.LocationProviderProxy)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$DataState getDataConnectionState()>','<com.android.server.net.NetworkPolicyManagerService$4: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void changeOwner(com.android.internal.telephony.sip.SipPhone$SipCall)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1700(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.server.BluetoothService: boolean prepareBluetooth()>','<android.app.SearchDialog: boolean show(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle)>','<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetId(int)>','<android.widget.ExpandableListConnector: android.widget.Filter getFilter()>','<android.view.ViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)>','<android.os.MessageQueue: void <init>(boolean)>','<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>','<com.android.internal.location.DummyLocationProvider: boolean requiresSatellite()>','<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>','<com.android.ex.variablespeed.VariableSpeed: int getDuration()>','<android.widget.Editor$DragLocalState: void <init>(android.widget.TextView,int,int)>','<android.content.pm.PermissionInfo: void <init>(android.os.Parcel,android.content.pm.PermissionInfo$1)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>','<com.android.server.NetworkManagementService: int getInterfaceTxThrottle(java.lang.String)>','<android.text.LoginFilter: void onInvalidCharacter(char)>','<android.content.ContentProvider: java.lang.String getWritePermission()>','<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>','<android.net.wifi.WifiStateMachine: void setDriverStart(boolean,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void getCallWaiting(android.os.Message)>','<com.android.server.am.ActivityRecord: void clearThumbnail()>','<com.android.internal.policy.impl.KeyguardViewManager$1: void <init>(com.android.internal.policy.impl.KeyguardViewManager,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>','<android.server.BluetoothEventLoop$2: void onServiceDisconnected(int)>','<android.database.BulkCursorDescriptor$1: void <init>()>','<android.media.AudioManager: void playSoundEffect(int,float)>','<android.graphics.Paint: float getFontSpacing()>','<android.view.KeyEvent: boolean isCanceled()>','<com.android.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>','<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>','<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>','<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)>','<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.webkit.HTML5VideoViewProxy: void access$1000(android.webkit.HTML5VideoViewProxy,int)>','<com.android.server.pm.PackageSignatures: void <init>(com.android.server.pm.PackageSignatures)>','<android.os.BatteryStats$Uid: void <init>()>','<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>','<com.android.internal.telephony.cdma.CDMAPhone: void log(java.lang.String)>','<com.android.server.NativeDaemonEvent: void checkCode(int)>','<android.app.Fragment: android.os.Bundle getArguments()>','<android.os.SystemProperties: void set(java.lang.String,java.lang.String)>','<android.webkit.WebSettingsClassic: void setJavaScriptEnabled(boolean)>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: int compareTo(android.preference.PreferenceGroupAdapter$PreferenceLayout)>','<android.widget.ListPopupWindow$DropDownListView: boolean isInTouchMode()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void reportSuccessfulPasswordAttempt()>','<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>','<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>','<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>','<com.android.internal.widget.multiwaveview.Ease$Quad$2: void <init>()>','<com.android.internal.telephony.cat.ResponseData: void writeLength(java.io.ByteArrayOutputStream,int)>','<android.content.res.StringBlock$StyleIDs: int access$702(android.content.res.StringBlock$StyleIDs,int)>','<android.net.wifi.WifiStateMachine: void access$4100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.view.View: void onPaddingChanged(int)>','<android.widget.AbsListView: boolean shouldShowSelector()>','<com.android.internal.telephony.gsm.SmsMessage: boolean isUsimDataDownload()>','<com.android.internal.telephony.IccFileTypeMismatch: void <init>()>','<com.android.server.location.PassiveProvider: void disable()>','<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.sip.SipSessionGroup$MakeCallCommand: java.lang.String getSessionDescription()>','<android.media.MediaRouter: void updateRoute(android.media.MediaRouter$RouteInfo)>','<com.android.server.InputMethodManagerService$ScreenOnOffReceiver: void <init>(com.android.server.InputMethodManagerService)>','<android.bluetooth.IBluetoothHeadset$Stub: void <init>()>','<com.android.internal.telephony.cat.ToneSettings$1: void <init>()>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethod(android.os.IBinder,java.lang.String)>','<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>','<android.net.wifi.WifiConfigStore: void clearIpConfiguration(int)>','<android.text.method.BaseMovementMethod: boolean scrollUp(android.widget.TextView,android.text.Spannable,int)>','<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>','<android.media.AudioSystem: int getNumStreamTypes()>','<com.android.internal.view.IInputMethod$Stub: android.os.IBinder asBinder()>','<android.media.AudioService: java.util.ArrayList access$1200(android.media.AudioService)>','<android.accessibilityservice.UiTestAutomationBridge: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.content.pm.PackageInfo$1: android.content.pm.PackageInfo createFromParcel(android.os.Parcel)>','<android.location.Location: double getAltitude()>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()>','<android.view.HardwareRenderer$GlRenderer: void destroySurface()>','<android.location.Location: boolean hasSpeed()>','<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>','<android.widget.SuggestionsAdapter: void close()>','<android.net.sip.SipSession: java.lang.String getLocalIp()>','<android.bluetooth.BluetoothProfileState$StableState: boolean processMessage(android.os.Message)>','<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>','<android.view.VolumePanel: void onProgressChanged(android.widget.SeekBar,int,boolean)>','<com.android.internal.app.ActionBarImpl$1: void onAnimationEnd(android.animation.Animator)>','<android.renderscript.Element: android.renderscript.Element I8_2(android.renderscript.RenderScript)>','<android.view.HardwareRenderer$GlRenderer: boolean hasDirtyRegions()>','<android.bluetooth.BluetoothDevice: int describeContents()>','<android.webkit.JsResult: void confirm()>','<android.security.IKeyChainAliasCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState access$3500(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.telephony.IccCard: void access$000(com.android.internal.telephony.IccCard,java.lang.String)>','<com.android.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void restartRadio()>','<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>','<com.android.uiautomator.core.UiDevice: void <clinit>()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$5200(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>','<android.webkit.WebViewClassic: void access$1800(int)>','<android.widget.RelativeLayout$LayoutParams: int access$202(android.widget.RelativeLayout$LayoutParams,int)>','<android.widget.ProgressBar: void setIndeterminate(boolean)>','<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>','<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream)>','<android.server.BluetoothService: java.util.List getConnectedInputDevices()>','<android.graphics.Bitmap: int getPixel(int,int)>','<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()>','<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>','<android.webkit.WebSettingsClassic: android.webkit.WebSettings$PluginState getPluginState()>','<android.net.MobileDataStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>','<android.nfc.TechListParcel: void <init>(java.lang.String[][])>','<android.widget.AbsListView: void setAdapter(android.widget.Adapter)>','<android.opengl.GLLogWrapper: void glDepthMask(boolean)>','<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService: void removePackageFromPreferred(java.lang.String)>','<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<android.view.GLES20Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>','<android.location.Country: boolean equalsIgnoreSource(android.location.Country)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>','<android.filterfw.io.GraphReader: void addReference(java.lang.String,java.lang.Object)>','<com.android.internal.telephony.DataConnectionAc: java.lang.String toString()>','<android.webkit.WebView: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>','<android.view.VolumePanel: void onVibrate()>','<android.bluetooth.BluetoothA2dp: void close()>','<android.accounts.AccountManager$Future2Task: java.lang.Object getResult()>','<com.android.internal.widget.WaveView: int access$702(com.android.internal.widget.WaveView,int)>','<android.media.effect.EffectFactory: android.media.effect.Effect createEffect(java.lang.String)>','<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>','<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>','<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()>','<android.net.wifi.WifiInfo$1: android.net.wifi.WifiInfo createFromParcel(android.os.Parcel)>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: char charAt(int)>','<android.webkit.WebViewClassic: void contentInvalidateAll()>','<com.android.ex.variablespeed.VariableSpeed: void release()>','<android.location.ILocationManager$Stub$Proxy: void locationCallbackFinished(android.location.ILocationListener)>','<android.content.pm.IPackageManager$Stub$Proxy: void clearPackagePreferredActivities(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void startNetStatPoll()>','<com.android.server.pm.PackageSettingBase: void addDisabledComponent(java.lang.String,int)>','<android.server.BluetoothEventLoop: android.server.BluetoothService access$000(android.server.BluetoothEventLoop)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1902(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,com.android.internal.telephony.DataConnectionTracker$Activity)>','<android.opengl.GLLogWrapper: void glSampleCoverage(float,boolean)>','<com.android.uiautomator.core.UiDevice: void setRotationLeft()>','<com.android.server.location.MockProvider: java.lang.String getName()>','<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>','<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.media.MediaPlayer: int access$000(android.media.MediaPlayer)>','<com.android.server.LocationManagerService$UpdateRecord: void disposeLocked()>','<android.net.sip.SipSession$1: void onCalling(android.net.sip.ISipSession)>','<android.net.INetworkManagementEventObserver$Stub: void <init>()>','<android.graphics.Canvas: int getDensity()>','<android.renderscript.Element: int getSubElementArraySize(int)>','<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>','<com.android.internal.telephony.cat.CommandParamsFactory: void make(com.android.internal.telephony.cat.BerTlv)>','<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void onReadFromDisk()>','<android.filterfw.core.FieldPort: void pushFrame(android.filterfw.core.Frame)>','<android.app.Activity: void onDetachedFromWindow()>','<android.net.wifi.WifiStateMachine$ScanModeState: void <init>(android.net.wifi.WifiStateMachine)>','<android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser$PermissionGroup,int)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccFileHandler getIccFileHandler()>','<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>','<android.view.ViewRootImpl$TraversalRunnable: void run()>','<com.android.internal.appwidget.IAppWidgetHost$Stub: com.android.internal.appwidget.IAppWidgetHost asInterface(android.os.IBinder)>','<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>','<android.webkit.WebStorageClassic: void deleteOrigin(java.lang.String)>','<android.widget.TextView: android.text.Layout getLayout()>','<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>','<android.app.Application: void dispatchActivityStopped(android.app.Activity)>','<android.widget.Editor$EasyEditPopupWindow: void createPopupWindow()>','<com.android.internal.policy.impl.SimUnlockScreen: void <clinit>()>','<android.provider.Settings$Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>','<com.android.internal.policy.PolicyManager: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)>','<android.filterfw.core.Frame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager,int,long)>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getDeviceSvn()>','<android.content.res.AssetManager: long access$100(android.content.res.AssetManager,int)>','<com.android.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>','<com.android.internal.view.menu.MenuBuilder: void clear()>','<android.net.wifi.WifiStateMachine: java.lang.String syncGetWifiApStateByName()>','<android.content.pm.ParceledListSlice: void <init>()>','<com.android.server.wm.WindowStateAnimator: void setTransparentRegionHint(android.graphics.Region)>','<android.location.Address: java.lang.String getLocality()>','<android.webkit.CallbackProxy: void onRequestFocus()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>','<com.android.internal.widget.ActionBarView: int getDisplayOptions()>','<android.app.ActivityThread$H: java.lang.String codeToString(int)>','<android.filterfw.core.VertexFrame: int getVboId()>','<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.PendingIntentRecord$Key: java.lang.String toString()>','<com.android.server.wm.WindowStateAnimator: void computeShownFrameLocked()>','<com.android.internal.util.BitwiseInputStream: int available()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void incWakeupsLocked()>','<android.provider.ContactsContract$CommonDataKinds$Callable: void <init>()>','<com.android.internal.widget.LockPatternView$Cell: void <clinit>()>','<android.view.View: long getDrawingTime()>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void enter()>','<com.android.internal.widget.PasswordEntryKeyboard: boolean isShifted()>','<android.content.pm.PackageParser$PermissionGroup: java.lang.String toString()>','<android.webkit.HTML5VideoView: void setOnInfoListener(android.webkit.HTML5VideoViewProxy)>','<android.view.IWindowSession$Stub$Proxy: void finishDrawing(android.view.IWindow)>','<android.media.effect.FilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.net.DhcpInfo$1: android.net.DhcpInfo[] newArray(int)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean isFirstBoot()>','<com.android.internal.telephony.CallManager: void explicitCallTransfer(com.android.internal.telephony.Call)>','<android.content.pm.PackageParser$PackageLite: void <init>(java.lang.String,int,java.util.List)>','<com.android.internal.telephony.DataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.NetworkStats: android.net.NetworkStats groupedByIface()>','<com.android.internal.telephony.sip.SipPhoneBase: void setCallWaiting(boolean,android.os.Message)>','<com.android.internal.telephony.sip.SipCommandInterface: void getNeighboringCids(android.os.Message)>','<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>','<android.media.IAudioService$Stub$Proxy: int getMode()>','<com.android.internal.widget.multiwaveview.GlowPadView: void setTargetDescriptionsResourceId(int)>','<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionMethod()>','<android.nfc.INfcAdapter$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.input.InputManagerService$3: void visitKeyboardLayout(android.content.res.Resources,java.lang.String,java.lang.String,java.lang.String,int)>','<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>','<android.preference.Preference: android.content.Intent getIntent()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message,int,java.lang.Object)>','<android.view.textservice.SpellCheckerSession: java.lang.String access$200()>','<android.accounts.AccountManager$BaseFutureTask: void postRunnableToHandler(java.lang.Runnable)>','<android.inputmethodservice.IInputMethodWrapper$Notifier: void <init>()>','<android.inputmethodservice.KeyboardView: void access$100(android.inputmethodservice.KeyboardView,int)>','<com.android.server.NetworkManagementSocketTagger: void untag(java.io.FileDescriptor)>','<com.android.server.am.UsageStatsService: java.util.Map access$300(com.android.server.am.UsageStatsService)>','<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(java.lang.String)>','<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>','<android.telephony.SignalStrength: void <init>(int,int,int,int,int,int,int,boolean)>','<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)>','<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>','<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>','<android.view.View: void dispatchSystemUiVisibilityChanged(int)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendEvents(java.util.List)>','<com.android.internal.os.BatteryStatsImpl: void distributeWorkLocked(int)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>','<android.opengl.GLLogWrapper: void glLightxv(int,int,java.nio.IntBuffer)>','<android.net.sip.SipAudioCall: void attachCall(android.net.sip.SipSession,java.lang.String)>','<android.view.ViewConfiguration: int getFadingEdgeLength()>','<android.widget.CompoundButton$SavedState$1: void <init>()>','<android.app.FragmentManagerImpl: void startPendingDeferredFragments()>','<android.view.View: int getDefaultSize(int,int)>','<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>','<android.filterfw.core.FrameFormat: int getLength()>','<android.app.Dialog: void onWindowFocusChanged(boolean)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()>','<android.view.LayoutInflater$BlinkLayout: void onAttachedToWindow()>','<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>','<android.widget.TextView: void hideErrorIfUnchanged()>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setAudioStreamType(int)>','<com.android.server.am.ServiceRecord$1: void run()>','<android.graphics.RectF: void <init>()>','<android.view.View: boolean isPaddingOffsetRequired()>','<android.content.pm.PackageInfoLite: int describeContents()>','<android.widget.RelativeLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixOptionalWhenFormatting()>','<android.telephony.SignalStrength: int getCdmaLevel()>','<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>','<android.widget.AbsListView$CheckForKeyLongPress: void run()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>','<android.widget.SearchView$SearchAutoComplete: boolean access$1600(android.widget.SearchView$SearchAutoComplete)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimDomain()>','<com.android.internal.util.StateMachine$ProcessedMessages: void cleanup()>','<com.android.internal.telephony.sip.SipPhoneBase: void unregisterForRingbackTone(android.os.Handler)>','<android.content.ContentProviderOperation$Builder: android.content.ContentValues access$200(android.content.ContentProviderOperation$Builder)>','<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>','<com.android.server.MountService: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>','<android.os.Debug$MemoryInfo: int getOtherPrivateDirty(int)>','<android.graphics.Matrix$1: boolean postConcat(android.graphics.Matrix)>','<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>','<android.widget.AdapterView: void removeAllViews()>','<com.android.server.PowerManagerService: com.android.server.PowerManagerService$UnsynchronizedWakeLock access$3300(com.android.server.PowerManagerService)>','<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>','<com.android.ex.variablespeed.VariableSpeed: boolean access$200(com.android.ex.variablespeed.VariableSpeed)>','<android.os.PowerManager: void <init>(android.os.IPowerManager,android.os.Handler)>','<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>','<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)>','<android.webkit.WebViewClassic: int tileProfilingGetInt(int,int,java.lang.String)>','<android.graphics.Matrix: void <clinit>()>','<android.net.RouteInfo$1: android.net.RouteInfo createFromParcel(android.os.Parcel)>','<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>','<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.os.IPermissionController$Stub: android.os.IBinder asBinder()>','<android.graphics.Matrix$1: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>','<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>','<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>','<android.view.GLES20Canvas: boolean clipRect(android.graphics.RectF)>','<android.app.ActivityManager: boolean isHighEndGfx(android.view.Display)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>','<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>','<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivity()>','<android.webkit.ZoomManager: float access$402(android.webkit.ZoomManager,float)>','<com.android.internal.widget.multiwaveview.Ease$Quad$3: float getInterpolation(float)>','<android.view.View: boolean isHardwareAccelerated()>','<android.webkit.CookieManager: void setAcceptCookie(boolean)>','<android.net.wifi.IWifiManager$Stub$Proxy: void initializeMulticastFiltering()>','<android.provider.Settings$Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>','<android.view.animation.OvershootInterpolator: void <init>()>','<android.net.sip.SipSession$1: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<android.app.ContextImpl$12: void <init>()>','<com.android.internal.widget.ActionBarView: boolean isCollapsed()>','<android.util.MathUtils: float asin(float)>','<android.app.ContextImpl$24: void <init>()>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone$State getState()>','<android.os.Bundle: void putLongArray(java.lang.String,long[])>','<android.widget.AbsSpinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.ActivityManagerProxy: android.os.IBinder asBinder()>','<android.view.textservice.SpellCheckerSubtype: int hashCode()>','<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>','<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>','<android.view.animation.Animation: void setFillBefore(boolean)>','<com.android.server.location.PassiveProvider: boolean requiresNetwork()>','<android.graphics.Matrix$1: boolean postScale(float,float)>','<com.android.server.am.AppNotRespondingDialog$1: void <init>(com.android.server.am.AppNotRespondingDialog)>','<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectAll()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: void <init>(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>','<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void onAllRecordsLoaded()>','<android.webkit.WebViewCore: void access$3600(android.webkit.WebViewCore,int,int,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)>','<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>','<android.media.Metadata: byte[] getByteArray(int)>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getModifiers()>','<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>','<android.app.LoadedApk$ServiceDispatcher: void doForget()>','<android.accounts.IAccountManager$Stub$Proxy: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>','<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)>','<android.content.ContentValues: void remove(java.lang.String)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>','<android.os.StrictMode: void readAndHandleBinderCallViolations(android.os.Parcel)>','<android.telephony.ServiceState: int getRilRadioTechnology()>','<android.webkit.ViewManager$2: void <init>(android.webkit.ViewManager)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: void start(int)>','<android.database.sqlite.SQLiteStatement: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])>','<android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser$Service,int,boolean,int,int)>','<android.widget.Editor$HandleView: void updatePosition(int,int,boolean,boolean)>','<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>','<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>','<com.android.internal.telephony.gsm.SmsCbHeader: int getServiceCategory()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)>','<com.android.internal.telephony.ServiceStateTracker: void registerForRoamingOff(android.os.Handler,int,java.lang.Object)>','<android.hardware.usb.UsbDeviceConnection: boolean claimInterface(android.hardware.usb.UsbInterface,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener: void onProposedRotationChanged(int)>','<android.hardware.usb.UsbDevice: int getVendorId()>','<android.speech.tts.TtsEngines$EngineInfoComparator: int compare(android.speech.tts.TextToSpeech$EngineInfo,android.speech.tts.TextToSpeech$EngineInfo)>','<android.text.HtmlToSpannedConverter: void endElement(java.lang.String,java.lang.String,java.lang.String)>','<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>','<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,int[],int)>','<android.widget.ZoomButtonsController$5: void run()>','<android.widget.AbsListView: int getLeftPaddingOffset()>','<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>','<com.android.i18n.phonenumbers.PhoneNumberMatch: boolean equals(java.lang.Object)>','<android.webkit.JniUtil: void setContext(android.content.Context)>','<android.os.MemoryFile: void <init>(java.lang.String,int)>','<android.webkit.WebViewClassic$PackageListener: void <init>(android.webkit.WebViewClassic$1)>','<android.app.ContextImpl$25: void <init>()>','<android.view.VelocityTracker: void clear()>','<android.net.http.Headers: java.lang.String getRefresh()>','<com.android.internal.telephony.PhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>','<com.android.internal.telephony.SmsAddress: boolean couldBeEmailGateway()>','<android.nfc.INfcTag$Stub: android.nfc.INfcTag asInterface(android.os.IBinder)>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo getNetworkInfo()>','<com.android.internal.telephony.cdma.SmsMessage: int getStatus()>','<android.widget.MediaController$7: void <init>(android.widget.MediaController)>','<com.android.internal.widget.EditableInputConnection: boolean clearMetaKeyStates(int)>','<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>','<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.content.ClipboardManager: void <clinit>()>','<com.android.internal.textservice.ISpellCheckerSession$Stub: com.android.internal.textservice.ISpellCheckerSession asInterface(android.os.IBinder)>','<com.android.server.PowerManagerService: void access$4300(com.android.server.PowerManagerService)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void chooseUpstreamType(boolean)>','<android.webkit.ZoomManager: boolean startZoomAnimation(float,boolean)>','<com.android.server.EventLogTags: void writeWatchdogPssStats(int,int,int,int,int,int,int,int,int,int,int)>','<android.graphics.Interpolator: void reset(int)>','<android.net.sip.SipAudioCall: java.lang.String access$000()>','<android.net.wifi.WifiStateMachine: void access$11500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForRoamingOff(android.os.Handler)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>','<com.android.internal.telephony.cat.CatResponseMessage: void setResultCode(com.android.internal.telephony.cat.ResultCode)>','<com.android.server.sip.SipService: int access$400(com.android.server.sip.SipService)>','<android.os.ParcelFileDescriptor: java.lang.String toString()>','<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)>','<android.location.ILocationProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebStorage: void <init>()>','<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<android.widget.Editor: boolean access$500(android.widget.Editor)>','<com.android.server.net.NetworkStatsCollection: void readLegacyUid(java.io.File,boolean)>','<android.view.MotionEvent: float getRawX()>','<com.android.internal.telephony.sip.SipCommandInterface: void getAvailableNetworks(android.os.Message)>','<android.webkit.CallbackProxy: void onReceivedTitle(java.lang.String)>','<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>','<android.net.wifi.WifiWatchdogStateMachine: void <clinit>()>','<android.text.DynamicLayout: void updateBlocks(int,int,int)>','<com.android.internal.telephony.gsm.UsimServiceTable: void <init>(byte[])>','<com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>','<com.android.vcard.VCardParserImpl_V30: void <init>(int)>','<com.android.server.location.LocationBasedCountryDetector$2: void <init>(com.android.server.location.LocationBasedCountryDetector)>','<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,int[],int)>','<android.hardware.Camera$Parameters: int getJpegQuality()>','<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>','<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>','<android.webkit.JsPromptResult: void confirm(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>','<android.media.AudioSystem: java.lang.String getDeviceName(int)>','<com.android.internal.policy.impl.PasswordUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$100(com.android.internal.policy.impl.PasswordUnlockScreen)>','<com.android.internal.telephony.sip.SipConnectionBase: long getHoldDurationMillis()>','<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>','<android.widget.TextView: void <clinit>()>','<android.speech.tts.ITextToSpeechService$Stub: android.os.IBinder asBinder()>','<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)>','<com.android.uiautomator.core.InteractionController: boolean wakeDevice()>','<android.filterfw.core.OutputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>','<android.telephony.SmsCbLocation: void <init>(android.os.Parcel)>','<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>','<android.renderscript.ProgramStore: boolean isColorMaskGreenEnabled()>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleY()>','<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>','<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<android.view.ActionMode: boolean isTitleOptional()>','<android.opengl.GLLogWrapper: void glDisableClientState(int)>','<android.os.storage.StorageVolume: boolean isRemovable()>','<android.hardware.Camera: void stopFaceDetection()>','<android.net.wifi.WifiStateMachine$DriverStoppingState: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>','<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>','<com.android.server.am.UsageStatsService$TimeStats: void <init>(android.os.Parcel)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIOO(int,int,int,java.lang.Object,java.lang.Object)>','<com.android.server.EventLogTags: void writeRestoreStart(java.lang.String,long)>','<android.os.UserId: int myUserId()>','<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass[] values()>','<android.net.NetworkInfo$DetailedState: void <clinit>()>','<android.view.GLES20Canvas: void resume()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String unescapeCharacter(char)>','<com.android.server.BatteryService: void <clinit>()>','<com.android.internal.widget.PointerLocationView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.webkit.WebViewClassic: void setFocusControllerActive(boolean)>','<android.webkit.WebViewDatabaseClassic: boolean hasHttpAuthUsernamePassword()>','<android.text.Layout: int getLineBottom(int)>','<android.graphics.drawable.ColorDrawable: int getOpacity()>','<android.content.ClipboardManager: boolean hasText()>','<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>','<android.util.Xml$XmlSerializerFactory: void <init>()>','<android.os.ParcelUuid$1: void <init>()>','<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode: com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode[] values()>','<android.app.Fragment: void setHasOptionsMenu(boolean)>','<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>','<android.net.wifi.WpsResult$1: android.net.wifi.WpsResult[] newArray(int)>','<android.app.ApplicationPackageManager: boolean isSafeMode()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isTemporaryModeCLIR()>','<android.net.INetworkManagementEventObserver$Stub: android.net.INetworkManagementEventObserver asInterface(android.os.IBinder)>','<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>','<android.view.ViewGroup: void onResolvedTextAlignmentReset()>','<android.view.IWindowSession$Stub$Proxy: boolean performHapticFeedback(android.view.IWindow,int,boolean)>','<android.os.storage.StorageVolume$1: void <init>()>','<com.android.internal.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud$Point)>','<android.widget.RadioButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.server.NetworkManagementService: void access$600(com.android.server.NetworkManagementService,java.lang.String,boolean)>','<com.android.server.am.ActivityManagerService: void dismissKeyguardOnNextActivity()>','<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>','<android.widget.SearchView$3: void <init>(android.widget.SearchView)>','<android.telephony.SmsCbMessage: void writeToParcel(android.os.Parcel,int)>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats access$1700(com.android.server.AlarmManagerService,android.app.PendingIntent)>','<android.view.HardwareRenderer$GlRenderer: void invalidate(android.view.SurfaceHolder)>','<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>','<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>','<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(java.lang.String,android.content.Context)>','<com.android.server.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts()>','<android.graphics.Paint: void <init>()>','<com.android.internal.telephony.CallForwardInfo: void <init>()>','<android.net.ParseException: void <init>(java.lang.String)>','<android.hardware.SystemSensorManager$ListenerDelegate$1: void <init>(android.hardware.SystemSensorManager$ListenerDelegate,android.os.Looper,android.hardware.SystemSensorManager)>','<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>','<android.text.AutoText: int getSize(android.view.View)>','<android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristics$TriState access$100(int)>','<android.filterpacks.videosrc.MediaSource: void process(android.filterfw.core.FilterContext)>','<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>','<android.content.pm.ConfigurationInfo$1: void <init>()>','<android.app.ContextImpl: android.content.res.AssetManager getAssets()>','<com.android.internal.telephony.RIL: void testingEmergencyCall()>','<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)>','<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)>','<android.app.Activity: android.app.Activity getParent()>','<android.widget.RelativeLayout: int getBaseline()>','<android.server.BluetoothInputProfileHandler: java.util.List getInputDevicesMatchingConnectionStates(int[])>','<android.telephony.SmsCbMessage: int getMessageFormat()>','<android.view.IWindowManager$Stub$Proxy: void setFocusedApp(android.os.IBinder,boolean)>','<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>','<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>','<com.android.server.AppWidgetServiceImpl: boolean canAccessAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options)>','<android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState valueOf(java.lang.String)>','<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendWebsites(java.util.List)>','<com.android.server.LightsService: int access$100(com.android.server.LightsService)>','<android.hardware.Sensor: java.lang.String getName()>','<android.view.animation.AnimationSet: void initializeInvalidateRegion(int,int,int,int)>','<android.database.sqlite.SQLiteProgram: java.lang.String getSql()>','<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>','<com.android.internal.telephony.cat.ValueParser: java.lang.String retrieveTextString(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.internal.view.InputConnectionWrapper: boolean finishComposingText()>','<android.app.backup.BackupHelperDispatcher: void addHelper(java.lang.String,android.app.backup.BackupHelper)>','<android.app.Notification$Style: void internalSetSummaryText(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void hangupAndPowerOff()>','<android.app.ActionBar$LayoutParams: void <init>(int)>','<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>','<android.view.WindowOrientationListener: void setCurrentRotation(int)>','<android.location.LocationProvider: java.lang.String getName()>','<android.net.LocalSocketImpl: int access$100(android.net.LocalSocketImpl,java.io.FileDescriptor)>','<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)>','<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>','<android.security.Credentials: java.util.List convertFromPem(byte[])>','<android.widget.ListView: void setSelectionFromTop(int,int)>','<android.view.ViewGroup$ViewLocationHolder: void recycle()>','<android.net.wifi.p2p.WifiP2pConfig$1: android.net.wifi.p2p.WifiP2pConfig createFromParcel(android.os.Parcel)>','<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiApConfigStore makeWifiApConfigStore(android.content.Context,android.os.Handler)>','<android.app.Fragment: void initState()>','<com.android.internal.telephony.DataConnectionAc: void reqIsInactive()>','<android.widget.ListView: void addFooterView(android.view.View)>','<android.content.pm.Signature: int hashCode()>','<android.app.LoadedApk$WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>','<android.net.Uri$AbstractHierarchicalUri: int compareTo(java.lang.Object)>','<android.view.inputmethod.CorrectionInfo$1: android.view.inputmethod.CorrectionInfo[] newArray(int)>','<android.media.AudioService$AudioSystemThread: void run()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>','<android.app.FragmentManagerImpl: void invalidateOptionsMenu()>','<android.graphics.drawable.shapes.Shape: void <init>()>','<com.android.internal.telephony.sip.SipCommandInterface: void deactivateDataCall(int,int,android.os.Message)>','<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)>','<android.location.ILocationProvider$Stub$Proxy: int getPowerRequirement()>','<android.text.Layout: void <clinit>()>','<android.view.ViewRootImpl$W: void dispatchWallpaperOffsets(float,float,float,float,boolean)>','<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>','<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,float[],int)>','<android.webkit.CookieManager: void <init>()>','<com.android.internal.app.ActionBarImpl: void selectTab(android.app.ActionBar$Tab)>','<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceAdded(java.lang.String)>','<android.net.wifi.p2p.WifiP2pGroup: int describeContents()>','<android.net.wifi.WifiWatchdogStateMachine: int access$302(android.net.wifi.WifiWatchdogStateMachine,int)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void write(byte[])>','<android.widget.TextView: boolean canCopy()>','<android.view.ViewConfiguration: int getScrollDefaultDelay()>','<com.android.internal.telephony.DataCallState$SetupResult: void <clinit>()>','<com.android.internal.telephony.gsm.UsimServiceTable$UsimService: void <clinit>()>','<android.webkit.ClientCertRequestHandler$2: void <init>(android.webkit.ClientCertRequestHandler,int,byte[][])>','<com.android.internal.textservice.ITextServicesManager$Stub: void <init>()>','<com.android.server.am.CoreSettingsObserver: void onChange(boolean)>','<android.os.Parcel$1: java.lang.String createFromParcel(android.os.Parcel)>','<android.net.http.SslError: void <clinit>()>','<android.net.nsd.INsdManager$Stub$Proxy: void setEnabled(boolean)>','<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>','<android.preference.PreferenceManager: void dispatchActivityResult(int,int,android.content.Intent)>','<android.media.MediaRecorder$EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>','<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>','<android.app.IAlarmManager$Stub$Proxy: void remove(android.app.PendingIntent)>','<android.media.RingtoneManager: void setIncludeDrm(boolean)>','<android.view.animation.AnimationSet: void initialize(int,int,int,int)>','<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>','<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)>','<android.graphics.drawable.GradientDrawable$GradientState: float access$200(android.graphics.drawable.GradientDrawable$GradientState)>','<android.content.SyncResult: void <init>()>','<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIccSerialNumber()>','<android.net.wifi.WifiStateMachine$ObtainingIpState: void <init>(android.net.wifi.WifiStateMachine)>','<android.webkit.WebViewClassic: android.webkit.ZoomManager access$3500(android.webkit.WebViewClassic)>','<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>','<android.view.animation.Animation: int getRepeatCount()>','<com.android.server.am.TaskAccessInfo: void <init>()>','<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()>','<com.android.server.wm.WindowManagerService$2: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()>','<android.server.BluetoothEventLoop: boolean isEventLoopRunning()>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>','<android.text.method.DateKeyListener: int getInputType()>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)>','<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>','<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getVoiceMailNumber()>','<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>','<android.app.backup.IBackupManager$Stub$Proxy: void backupNow()>','<com.android.internal.telephony.cat.BIPClientParams: boolean setIcon(android.graphics.Bitmap)>','<com.android.internal.telephony.PhoneProxy: void unregisterForCdmaOtaStatusChange(android.os.Handler)>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$DisconnectCause disconnectCauseFromCode(int)>','<android.server.BluetoothService: void clearApplicationStateChangeTracker()>','<android.content.pm.IPackageManager$Stub$Proxy: int[] getPackageGids(java.lang.String)>','<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener access$800(android.speech.tts.TextToSpeech)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: boolean processMessage(android.os.Message)>','<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>','<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<com.android.vcard.VCardProperty: void addParameter(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: int startActivitiesInPackage(int,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>','<android.view.View: void onResolvedTextDirectionChanged()>','<android.app.Notification$BigPictureStyle: void <init>()>','<android.renderscript.RenderScript: void nContextSetPriority(int)>','<android.text.Html: java.lang.String toHtml(android.text.Spanned)>','<android.widget.OverScroller: int getCurrY()>','<android.filterfw.geometry.Point: float distanceTo(android.filterfw.geometry.Point)>','<android.hardware.LegacySensorManager$LegacyListener: boolean hasSensors()>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] preceding(int)>','<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>','<android.media.AudioService: int getRingerMode()>','<com.android.server.NetworkManagementService: void setDnsForwarders(java.lang.String[])>','<android.media.IAudioRoutesObserver$Stub$Proxy: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>','<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCalling(android.net.sip.ISipSession)>','<com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error[] values()>','<android.webkit.CookieManager: void removeAllCookie()>','<com.android.internal.widget.DrawableHolder: void onAnimationEnd(android.animation.Animator)>','<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>','<android.webkit.WebViewCore$EventHub: void access$200(android.webkit.WebViewCore$EventHub)>','<android.hardware.usb.UsbAccessory: void <init>(java.lang.String[])>','<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>','<android.content.SyncManager$SyncHandler$SyncNotificationInfo: java.lang.String toString()>','<android.webkit.CookieManagerClassic: void access$000()>','<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>','<android.os.RemoteCallback$1: android.os.RemoteCallback[] newArray(int)>','<android.net.sip.SipException: void <init>()>','<com.android.server.AppWidgetService: void setBindAppWidgetPermission(java.lang.String,boolean)>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>','<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber mergeFrom(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimePlugged()>','<com.android.internal.view.menu.ActionMenuItem: int getItemId()>','<android.graphics.Bitmap: android.graphics.Bitmap access$000(android.os.Parcel)>','<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>','<android.net.wifi.WifiStateMachine: void access$12900(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.DataConnectionTracker: void onActionIntentDataStallAlarm(android.content.Intent)>','<android.widget.AbsListView: android.view.View findViewToTakeAccessibilityFocusFromHover(android.view.View,android.view.View)>','<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>','<android.media.MediaFile: boolean isDrmFileType(int)>','<com.android.internal.widget.ActionBarView: int access$1200(com.android.internal.widget.ActionBarView)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource valueOf(java.lang.String)>','<android.net.sip.ISipSession$Stub: android.net.sip.ISipSession asInterface(android.os.IBinder)>','<com.android.internal.telephony.Phone$DataState: com.android.internal.telephony.Phone$DataState[] values()>','<android.app.SharedPreferencesImpl: void access$800(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl$MemoryCommitResult)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,java.lang.String,boolean)>','<android.os.IPowerManager$Stub$Proxy: void goToSleep(long)>','<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>','<android.widget.ProgressBar$RefreshData: void recycle()>','<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.Map)>','<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void checkAccount()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState: void enter()>','<android.widget.TextView$CharWrapper: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>','<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>','<android.hardware.Camera$Parameters: void setJpegQuality(int)>','<android.graphics.Matrix: boolean preScale(float,float,float,float)>','<android.webkit.WebStorageClassic: void access$000(java.lang.String,long)>','<android.animation.AnimatorSet$AnimatorSetListener: void onAnimationCancel(android.animation.Animator)>','<android.media.AudioManager: void adjustLocalOrRemoteStreamVolume(int,int)>','<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.hardware.SystemSensorManager$SensorThread$SensorThreadRunnable: void run()>','<android.app.BackStackRecord: void popFromBackStack(boolean)>','<android.server.BluetoothService: boolean isRemoteDeviceInCache(java.lang.String)>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: boolean isCancelled()>','<com.android.internal.telephony.cat.BerTlv: java.util.List getComprehensionTlvs()>','<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>','<android.nfc.NfcAdapter: int getAdapterState()>','<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>','<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>','<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>','<android.net.wifi.WifiNative: boolean startWpsRegistrar(java.lang.String,java.lang.String)>','<android.hardware.Camera: void addCallbackBuffer(byte[])>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>','<android.app.ApplicationThreadProxy: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>','<android.hardware.usb.IUsbManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.filterfw.core.GLFrame: void setTextureParameter(int,int)>','<com.android.internal.telephony.RIL: void invokeOemRilRequestRaw(byte[],android.os.Message)>','<android.media.MediaRouter: void dispatchRouteRemoved(android.media.MediaRouter$RouteInfo)>','<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursor(android.graphics.Rect)>','<android.os.AsyncTask: void <clinit>()>','<android.bluetooth.BluetoothPbap: void finalize()>','<android.view.GLES20DisplayList: void setRotationX(float)>','<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>','<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>','<android.webkit.WebViewClassic: boolean drawHistory()>','<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle)>','<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)>','<android.os.Bundle: double getDouble(java.lang.String,double)>','<com.android.server.pm.SharedUserSetting: java.lang.String toString()>','<android.os.AsyncTask$InternalHandler: void <init>(android.os.AsyncTask$1)>','<com.android.internal.telephony.cat.Item$1: com.android.internal.telephony.cat.Item[] newArray(int)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>','<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>','<android.util.MathUtils: float norm(float,float,float)>','<android.filterfw.core.GraphRunner: void <init>(android.filterfw.core.FilterContext)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: void <init>(int,int,int,int,int)>','<android.widget.AdapterView: long getSelectedItemId()>','<android.text.BoringLayout: int getLineStart(int)>','<com.android.server.input.InputManagerService$VibratorToken: void binderDied()>','<android.media.AudioService: int[] access$3500(android.media.AudioService)>','<com.android.internal.view.menu.ActionMenuPresenter: boolean isOverflowReserved()>','<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>','<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>','<com.android.server.EventLogTags: void writeWatchdogRequestedReboot(int,int,int,int,int,int,int)>','<android.util.TypedValue: float complexToFloat(int)>','<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus$NmeaListener)>','<android.widget.MediaController: android.view.WindowManager$LayoutParams access$300(android.widget.MediaController)>','<com.android.server.wm.WindowManagerService: void hideBootMessagesLocked()>','<android.os.CountDownTimer: long access$100(android.os.CountDownTimer)>','<android.widget.OverScroller$SplineOverScroller: int access$400(android.widget.OverScroller$SplineOverScroller)>','<com.android.server.PowerManagerService: android.os.Handler access$4000(com.android.server.PowerManagerService)>','<android.text.method.ArrowKeyMovementMethod: void <init>()>','<com.android.internal.telephony.PhoneBase: android.os.Handler getHandler()>','<android.app.ActionBar$Tab: void <init>()>','<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>','<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: boolean processMessage(android.os.Message)>','<android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>','<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>','<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>','<android.net.NetworkTemplate: boolean matches(android.net.NetworkIdentity)>','<com.android.server.LocationManagerService$ProximityListener: void onLocationChanged(android.location.Location)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)>','<android.view.AccessibilityInteractionController: void access$400(android.view.AccessibilityInteractionController,android.os.Message)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String[] getActiveApnTypes()>','<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingRegion(int,int)>','<android.database.sqlite.SQLiteConnectionPool: void onConnectionLeaked()>','<android.os.Parcel: void readDoubleArray(double[])>','<android.database.sqlite.SQLiteDatabase: boolean isInMemoryDatabase()>','<com.android.internal.policy.impl.LockScreen: void updateConfiguration()>','<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context)>','<android.text.style.ScaleXSpan: int describeContents()>','<android.nfc.NdefRecord: byte[] getType()>','<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>','<android.view.Display: float getRefreshRate()>','<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>','<android.opengl.GLLogWrapper: void glBlendFunc(int,int)>','<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>','<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>','<android.widget.OverScroller$SplineOverScroller: int access$100(android.widget.OverScroller$SplineOverScroller)>','<android.app.ActivityManager$RunningServiceInfo: void readFromParcel(android.os.Parcel)>','<android.inputmethodservice.KeyboardView: boolean access$400(android.inputmethodservice.KeyboardView,android.view.MotionEvent)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>','<android.net.Proxy: void <clinit>()>','<android.widget.AbsListView$SavedState: void <clinit>()>','<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>','<android.app.Notification$BigPictureStyle: void <init>(android.app.Notification$Builder)>','<com.android.server.connectivity.Tethering: java.lang.Object access$100(com.android.server.connectivity.Tethering)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.AppWidgetServiceImpl: void removeProvidersForPackageLocked(java.lang.String)>','<android.app.TaskStackBuilder: void startActivities()>','<android.content.res.StringBlock: void <init>(byte[],boolean)>','<android.net.Credentials: int getUid()>','<android.database.CursorWindow: java.lang.String getString(int,int)>','<android.webkit.WebView: boolean access$701(android.webkit.WebView,android.view.KeyEvent)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>','<android.view.ViewGroup: void setChildrenLayersEnabled(boolean)>','<android.app.Notification: android.app.Notification clone()>','<android.content.pm.IPackageManager$Stub$Proxy: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>','<com.android.server.PowerManagerService$13: void <init>(com.android.server.PowerManagerService)>','<com.android.internal.app.IMediaContainerService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebViewCore: void access$2900(android.webkit.WebViewCore,int)>','<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>','<android.widget.RemoteViews$BitmapReflectionAction: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder)>','<android.nfc.INfcAdapterExtras$Stub: void <init>()>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo focusSearch(int,int,long,int)>','<android.net.sip.SipSession: void changeCall(java.lang.String,int)>','<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>','<com.android.server.PowerManagerService: void monitor()>','<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)>','<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>','<android.view.View: void postInvalidateDelayed(long)>','<com.android.server.net.NetworkPolicyManagerService: android.content.Context access$1200(com.android.server.net.NetworkPolicyManagerService)>','<com.android.internal.policy.impl.PatternUnlockScreen: void setEnableFallback(boolean)>','<android.widget.ListPopupWindow: int getAnimationStyle()>','<com.android.internal.telephony.BaseCommands: void unSetOnCatSessionEnd(android.os.Handler)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isReplace()>','<android.app.IActivityManager$ContentProviderHolder$1: android.app.IActivityManager$ContentProviderHolder createFromParcel(android.os.Parcel)>','<com.android.server.MountService: java.lang.String getMountedObbPath(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions: android.media.AudioManager access$1200(com.android.internal.policy.impl.GlobalActions)>','<com.android.internal.widget.ActionBarView: com.android.internal.widget.ActionBarView$HomeView access$600(com.android.internal.widget.ActionBarView)>','<android.hardware.Camera: void addRawImageCallbackBuffer(byte[])>','<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceId()>','<android.media.IAudioService$Stub$Proxy: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>','<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<android.webkit.WebViewClassic$SaveWebArchiveMessage: void <init>(java.lang.String,boolean,android.webkit.ValueCallback)>','<android.media.MediaRecorder: void setOutputFile(java.lang.String)>','<android.graphics.Picture: void writeToStream(java.io.OutputStream)>','<com.android.server.sip.SipSessionGroup$RegisterCommand: int getDuration()>','<android.accounts.AccountManager$13: void <init>(android.accounts.AccountManager)>','<android.view.textservice.SpellCheckerSession$1: void handleMessage(android.os.Message)>','<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$1: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk,boolean)>','<android.server.BluetoothEventLoop: void finalize()>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName)>','<android.bluetooth.BluetoothHeadset: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>','<android.content.Intent: java.lang.String normalizeMimeType(java.lang.String)>','<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>','<android.content.SyncInfo: void <init>(android.os.Parcel)>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setPlaybackState(int,int,long)>','<android.location.IGpsStatusListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>','<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>','<com.android.server.net.NetworkPolicyManagerService$3: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.view.View: void setNextFocusDownId(int)>','<android.media.AudioService$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>','<android.location.Address: java.util.Locale getLocale()>','<android.content.pm.ApplicationInfo$1: android.content.pm.ApplicationInfo createFromParcel(android.os.Parcel)>','<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findAccessibilityFocus(int)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean isMulticastEnabled()>','<com.android.internal.policy.impl.PhoneWindowManager: android.media.IAudioService getAudioService()>','<com.android.internal.telephony.PhoneBase: void getEnhancedVoicePrivacy(android.os.Message)>','<com.android.internal.telephony.ApnSetting: boolean canHandleType(java.lang.String)>','<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager$1: int compare(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodInfo)>','<com.android.internal.telephony.IntRangeManager: void <init>()>','<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>','<android.net.wifi.WifiStateMachine: void setFrequencyBand(int,boolean)>','<android.widget.ProgressBar$RefreshProgressRunnable: void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1)>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: boolean areAllItemsEnabled()>','<com.android.server.wm.Session: boolean getInTouchMode()>','<android.accounts.OperationCanceledException: void <init>()>','<android.text.DynamicLayout: int getLineCount()>','<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>','<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>','<com.android.server.wm.WindowState: boolean isIdentityMatrix(float,float,float,float)>','<android.widget.SearchView: boolean isIconified()>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.util.SparseLongArray: int indexOfKey(int)>','<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()>','<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>','<android.view.animation.OvershootInterpolator: float getInterpolation(float)>','<android.content.SyncStatusInfo: void <init>(int)>','<android.net.wifi.p2p.WifiP2pService: android.net.wifi.p2p.WifiP2pDevice access$3300(android.net.wifi.p2p.WifiP2pService)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.widget.ScrollView: void computeScroll()>','<android.location.Address$1: android.location.Address createFromParcel(android.os.Parcel)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void stopLaunchedLocked()>','<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_NONE(android.renderscript.RenderScript)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatNationalNumberWithCarrierCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>','<com.android.server.location.LocationProviderProxy: long getMinTime()>','<com.android.internal.widget.PointerLocationView$PointerState: int access$000(com.android.internal.widget.PointerLocationView$PointerState)>','<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>','<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.widget.Spinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.app.FragmentManagerImpl: void moveToState(android.app.Fragment)>','<android.filterfw.core.Frame: long getBindingId()>','<com.android.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>','<android.net.wifi.WifiStateMachine$SoftApStoppingState: void <init>(android.net.wifi.WifiStateMachine)>','<android.view.DragEvent: android.view.DragEvent obtain()>','<android.text.method.WordIterator: void <init>(java.util.Locale)>','<com.android.internal.telephony.sip.SipPhoneBase: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier)>','<android.content.SyncManager$SyncHandler: void onBootCompleted()>','<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>','<com.android.internal.telephony.IccCardApplication: com.android.internal.telephony.IccCardApplication$AppState AppStateFromRILInt(int)>','<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startRunningLocked()>','<android.view.Surface: void setCompatibilityTranslator(android.content.res.CompatibilityInfo$Translator)>','<android.location.Location: boolean hasAltitude()>','<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceAlert(java.lang.String)>','<com.android.internal.util.FileRotator: void combineActive(com.android.internal.util.FileRotator$Reader,com.android.internal.util.FileRotator$Writer,long)>','<android.animation.LayoutTransition: java.util.HashMap access$000(android.animation.LayoutTransition)>','<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>','<com.android.internal.telephony.RIL: void getIMSI(android.os.Message)>','<com.android.internal.telephony.cdma.CdmaMmiCode: void cancel()>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setMimeType(java.lang.String)>','<android.content.pm.PackageParser$IntentInfo: void <init>()>','<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>','<android.widget.BaseAdapter: boolean hasStableIds()>','<android.view.View$DragShadowBuilder: android.view.View getView()>','<com.android.server.pm.PackageSetting: java.lang.String toString()>','<android.app.Dialog: void setTitle(java.lang.CharSequence)>','<android.app.PendingIntent$FinishedDispatcher: void run()>','<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>','<android.os.WorkSource: android.os.WorkSource addReturningNewbs(int)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>','<com.android.internal.policy.impl.PhoneWindowManager$PolicyHandler: void <init>(com.android.internal.policy.impl.PhoneWindowManager,com.android.internal.policy.impl.PhoneWindowManager$1)>','<com.android.server.AppWidgetServiceImpl: boolean writeStateToFileLocked(java.io.FileOutputStream)>','<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void <init>(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>','<com.android.internal.telephony.BaseCommands: void unregisterForOn(android.os.Handler)>','<android.net.wifi.WifiWatchdogStateMachine: int access$2500(android.net.wifi.WifiWatchdogStateMachine)>','<android.util.MathUtils: void randomSeed(long)>','<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>','<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasNationalPrefixFormattingRule()>','<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>','<android.net.LinkProperties: java.util.Collection getRoutes()>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi()>','<com.android.i18n.phonenumbers.PhoneNumberMatch: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber number()>','<android.opengl.GLLogWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>','<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>','<com.android.server.PowerManagerService$BootCompletedReceiver: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.database.CharArrayBuffer: void <init>(int)>','<com.android.internal.telephony.gsm.SIMRecords: void logv(java.lang.String)>','<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>','<android.app.ActivityThread: java.util.ArrayList collectComponentCallbacksLocked(boolean,android.content.res.Configuration)>','<android.os.StrictMode$4: void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo)>','<android.widget.AbsListView: int access$300(android.widget.AbsListView)>','<android.webkit.WebSettingsClassic: void setSaveFormData(boolean)>','<android.net.wifi.WifiStateMachine: java.lang.String access$4200(android.net.wifi.WifiStateMachine)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>','<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence)>','<com.android.server.net.NetworkPolicyManagerService: void access$600(com.android.server.net.NetworkPolicyManagerService)>','<android.inputmethodservice.ExtractEditText: void setCursorPosition_internal(int,int)>','<android.graphics.RectF: void readFromParcel(android.os.Parcel)>','<android.app.FragmentManagerImpl: void makeActive(android.app.Fragment)>','<com.android.server.wm.WindowManagerService$4: void binderDied()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void setState(com.android.internal.telephony.Call$State)>','<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)>','<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>','<android.inputmethodservice.Keyboard$Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int doPreInstall(int)>','<android.widget.ListPopupWindow: int getWidth()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>','<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)>','<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.View$6: void setValue(java.lang.Object,float)>','<com.android.internal.telephony.CallManager: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>','<com.android.internal.util.StateMachine$ProcessedMessages: void <init>(com.android.internal.util.StateMachine$1)>','<android.net.NetworkUtils: java.lang.String trimV4AddrZeros(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String,java.lang.String)>','<com.android.server.PowerManagerService: int access$2000(com.android.server.PowerManagerService)>','<android.app.Activity: void setProgressBarIndeterminate(boolean)>','<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>','<android.widget.ExpandableListConnector: int getCount()>','<android.media.AudioService$FocusStackEntry: void <init>()>','<android.net.wifi.p2p.WifiP2pService: java.lang.String access$9902(android.net.wifi.p2p.WifiP2pService,java.lang.String)>','<com.android.internal.telephony.DataConnection: void tearDownAll(java.lang.String,android.os.Message)>','<android.webkit.WebView$PrivateAccess: int getHorizontalScrollbarHeight()>','<android.widget.CheckedTextView: void setChecked(boolean)>','<android.appwidget.AppWidgetHostView: void resetAppWidget(android.appwidget.AppWidgetProviderInfo)>','<com.android.server.NativeDaemonEvent: java.lang.String toString()>','<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>','<android.net.wifi.p2p.WifiP2pDevice$1: android.net.wifi.p2p.WifiP2pDevice createFromParcel(android.os.Parcel)>','<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>','<android.widget.TextView: java.lang.CharSequence getError()>','<com.android.server.location.MockProvider: int getPowerRequirement()>','<com.android.server.pm.ShutdownThread$3: void onReceive(android.content.Context,android.content.Intent)>','<android.app.ResultInfo: int describeContents()>','<com.android.internal.view.menu.ActionMenuPresenter: android.view.View access$200(com.android.internal.view.menu.ActionMenuPresenter)>','<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>','<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()>','<com.android.server.am.BatteryStatsService: void notePhoneOff()>','<android.net.NetworkStats: java.lang.String toString()>','<android.content.pm.IPackageManager$Stub$Proxy: void updateUserName(int,java.lang.String)>','<android.telephony.SmsCbMessage: int getMessagePriority()>','<android.widget.RemoteViews: void access$300(android.widget.RemoteViews,android.widget.RemoteViews)>','<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>','<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,android.content.IIntentReceiver,int)>','<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer)>','<android.view.inputmethod.InputBinding: void <init>(android.os.Parcel)>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>','<android.media.TimedText$HyperText: void <init>(int,int,java.lang.String,java.lang.String)>','<android.app.ActivityManagerProxy: boolean shutdown(int)>','<com.android.internal.policy.impl.PhoneWindowManager: void screenOnStartedLw()>','<com.android.server.MountService: int renameSecureContainer(java.lang.String,java.lang.String)>','<com.android.server.MountService: java.util.concurrent.CountDownLatch access$1802(com.android.server.MountService,java.util.concurrent.CountDownLatch)>','<android.net.InterfaceConfiguration: void setFlag(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void hangupConnection(int,android.os.Message)>','<android.server.BluetoothInputProfileHandler: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothDeviceProfileState)>','<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>','<android.hardware.Camera: java.lang.Object access$800(android.hardware.Camera)>','<android.view.View: void setSaveFromParentEnabled(boolean)>','<android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc[] values()>','<android.widget.AdapterViewAnimator$SavedState: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void onConfigurationChanged(android.content.res.Configuration)>','<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>','<android.content.ContentValues: void put(java.lang.String,java.lang.String)>','<android.server.BluetoothAdapterStateMachine: android.os.Message access$6200(android.server.BluetoothAdapterStateMachine)>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1: void <init>(com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin,boolean)>','<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String)>','<android.content.IntentFilter$MalformedMimeTypeException: void <init>(java.lang.String)>','<android.widget.SearchView$11: void afterTextChanged(android.text.Editable)>','<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>','<android.text.DynamicLayout: void <clinit>()>','<android.net.DhcpStateMachine$StoppedState: void <init>(android.net.DhcpStateMachine)>','<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.cdma.RuimFileHandler: void handleMessage(android.os.Message)>','<android.bluetooth.IBluetoothHeadset$Stub: android.bluetooth.IBluetoothHeadset asInterface(android.os.IBinder)>','<com.android.internal.telephony.sip.SipPhone: boolean getMessageWaitingIndicator()>','<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>','<android.renderscript.RenderScript$Priority: android.renderscript.RenderScript$Priority valueOf(java.lang.String)>','<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>','<android.app.WallpaperManager: int getDesiredMinimumWidth()>','<android.content.res.StringBlock: java.lang.CharSequence get(int)>','<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>','<android.content.SyncStorageEngine: void init(android.content.Context)>','<android.widget.OverScroller$SplineOverScroller: void updateScroll(float)>','<android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>','<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)>','<android.media.IRingtonePlayer$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.util.MemInfoReader: long getTotalSize()>','<android.widget.AbsListView$SavedState: void <init>(android.os.Parcel,android.widget.AbsListView$1)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)>','<android.webkit.WebViewClassic: void setFindListener(android.webkit.WebView$FindListener)>','<android.renderscript.RenderScript: void nContextFinish()>','<android.graphics.drawable.NinePatchDrawable: void <init>()>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()>','<com.android.internal.os.LoggingPrintStream: void println(float)>','<android.content.ContentProvider$Transport: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<android.server.search.Searchables: java.util.ArrayList getSearchablesList()>','<android.location.GpsStatus: android.location.GpsSatellite[] access$000(android.location.GpsStatus)>','<android.text.style.SuggestionSpan: void updateDrawState(android.text.TextPaint)>','<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.view.View: void setTag(java.lang.Object)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$WebKitHitTest access$5702(android.webkit.WebViewClassic,android.webkit.WebViewCore$WebKitHitTest)>','<com.android.internal.telephony.sip.SipPhone: void disableLocationUpdates()>','<android.filterfw.core.Filter: void initWithAssignmentList(java.lang.Object[])>','<android.view.MotionEvent: float getHistoricalTouchMinor(int)>','<android.view.ViewGroup: boolean canAnimate()>','<android.filterfw.io.PatternScanner: java.lang.String unexpectedTokenMessage(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void setDataRoamingEnabled(boolean)>','<android.net.wifi.SupplicantStateTracker: boolean access$100(android.net.wifi.SupplicantStateTracker)>','<android.content.ContentResolver: void cancelSync(android.net.Uri)>','<android.widget.MediaController$2: boolean onTouch(android.view.View,android.view.MotionEvent)>','<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>','<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>','<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>','<android.net.NetworkPolicy: boolean isOverWarning(long)>','<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.server.BluetoothAdapterStateMachine: void access$1900(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<com.android.uiautomator.core.InteractionController$1: void run()>','<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>','<android.text.method.NumberKeyListener: boolean ok(char[],char)>','<com.android.internal.telephony.RIL$RILSender: void handleMessage(android.os.Message)>','<android.graphics.Rect: boolean contains(int,int)>','<android.view.GLES20RecordingCanvas: void setNextPoolable(java.lang.Object)>','<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>','<android.webkit.WebViewClassic$PastePopupWindow: void show(android.graphics.Point,android.graphics.Point,int,int)>','<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean)>','<android.webkit.HTML5VideoInline: void cleanupSurfaceTexture()>','<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteServiceChannel(java.lang.String,android.os.ParcelUuid)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int synthesizeToFile(android.os.IBinder,java.lang.String,java.lang.String,android.os.Bundle)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getZipCode()>','<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.Display: int getRawHeight()>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getType()>','<com.android.server.Watchdog: void retrieveBrutalityAmount()>','<android.server.BluetoothA2dpService: boolean connect(android.bluetooth.BluetoothDevice)>','<com.android.internal.view.menu.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)>','<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()>','<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>','<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)>','<android.view.View: float getY()>','<com.android.server.PowerManagerService: boolean access$602(com.android.server.PowerManagerService,boolean)>','<android.view.accessibility.AccessibilityRecord: void setItemCount(int)>','<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>','<android.webkit.WebViewDatabaseClassic: void access$000(android.webkit.WebViewDatabaseClassic,android.content.Context)>','<android.webkit.CacheManager$CacheResult: java.lang.String getLastModified()>','<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>','<android.location.Address: java.lang.String getAddressLine(int)>','<com.android.server.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTtys()>','<com.android.internal.telephony.gsm.SIMFileHandler: void <init>(com.android.internal.telephony.IccCard,java.lang.String,com.android.internal.telephony.CommandsInterface)>','<android.hardware.input.InputManager$InputDeviceVibrator: void <init>(android.hardware.input.InputManager,int)>','<android.webkit.WebSettingsClassic: int getDefaultFontSize()>','<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>','<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>','<android.view.accessibility.AccessibilityRecord: void setConnectionId(int)>','<android.widget.FastScroller: void onItemCountChanged(int,int)>','<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>','<android.app.SearchableInfo: int getIconId()>','<com.android.server.wm.WindowManagerService: void lockNow()>','<android.content.SyncManager: long access$3300()>','<android.view.IWindow$Stub$Proxy: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>','<android.content.ContentProviderProxy: void <init>(android.os.IBinder)>','<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)>','<android.text.method.BaseMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>','<android.net.sip.SimpleSessionDescription: java.lang.String encode()>','<android.net.wifi.p2p.WifiP2pService$ClientInfo: android.os.Messenger access$9600(android.net.wifi.p2p.WifiP2pService$ClientInfo)>','<com.android.server.pm.Settings: void dumpSharedUsersLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>','<android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$702(android.view.View$ListenerInfo,android.view.View$OnSystemUiVisibilityChangeListener)>','<com.android.internal.telephony.cat.Input: boolean setIcon(android.graphics.Bitmap)>','<com.android.vcard.VCardProperty: java.lang.String getRawValue()>','<android.database.CursorWindow: void <init>(boolean)>','<com.android.internal.os.BatteryStatsImpl$Counter: void writeCounterToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Counter)>','<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>','<android.webkit.WebViewCore: android.os.Handler access$502(android.os.Handler)>','<com.android.server.NotificationManagerService: int access$202(com.android.server.NotificationManagerService,int)>','<android.content.res.Resources: int getDimensionPixelSize(int)>','<android.app.ApplicationPackageManager$ResourceName: int hashCode()>','<android.view.GestureDetector: void access$200(android.view.GestureDetector)>','<com.android.internal.widget.LockPatternUtils: boolean savedPatternExists()>','<android.webkit.ZoomManager: float getDefaultMinZoomScale()>','<com.android.server.location.LocationProviderProxy: void enable()>','<android.view.inputmethod.InputBinding$1: android.view.inputmethod.InputBinding createFromParcel(android.os.Parcel)>','<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>','<com.android.internal.telephony.BaseCommands: void onRadioAvailable()>','<android.content.pm.IPackageManager$Stub$Proxy: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>','<android.media.effect.EffectFactory: void <init>(android.media.effect.EffectContext)>','<android.database.AbstractCursor: void setExtras(android.os.Bundle)>','<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>','<com.android.server.location.LocationProviderProxy$Connection: void <init>(com.android.server.location.LocationProviderProxy,com.android.server.location.LocationProviderProxy$1)>','<com.android.vcard.VCardParser_V21: void <clinit>()>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List getPreferredPackages(int)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getTitle()>','<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>','<android.provider.Telephony$Sms$Conversations: void <clinit>()>','<android.view.textservice.SuggestionsInfo: void <init>(android.os.Parcel)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void cleanUp()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isUssdRequest()>','<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>','<android.widget.SearchView: void access$000(android.widget.SearchView)>','<com.android.server.EventLogTags: void writeWatchdogHardReset(java.lang.String,int,int,int)>','<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getPreferredDomesticCarrierCode()>','<android.text.TextUtils$Reverser: int length()>','<android.os.Debug: int getGlobalClassInitCount()>','<android.widget.RelativeLayout$DependencyGraph$Node$1: android.widget.RelativeLayout$DependencyGraph$Node newInstance()>','<android.graphics.drawable.LevelListDrawable$LevelListState: void growArray(int,int)>','<com.android.server.ConnectivityService$1: void onRestrictBackgroundChanged(boolean)>','<android.widget.Filter: void <init>()>','<android.app.ISearchManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.IIntentReceiver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.Editor$HandleView: void onDraw(android.graphics.Canvas)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int)>','<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>','<android.opengl.GLLogWrapper: void glTexEnvx(int,int,int)>','<android.database.sqlite.SQLiteCursor: void deactivate()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimImsimLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$1200(com.android.server.wm.WindowManagerService$LayoutFields)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pGroup access$802(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pGroup)>','<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>','<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>','<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimSpnLoaded: java.lang.String getEfName()>','<android.net.nsd.NsdServiceInfo: int getPort()>','<android.widget.ExpandableListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.opengl.GLLogWrapper: void glMultMatrixx(int[],int)>','<android.view.InputDevice$MotionRange: float getMax()>','<android.text.style.TextAppearanceSpan: int describeContents()>','<com.android.server.wm.DragState: void broadcastDragEndedLw()>','<android.os.storage.StorageManager$StorageEvent: void <init>(android.os.storage.StorageManager,int)>','<android.net.wifi.WifiStateMachine: android.net.wifi.SupplicantStateTracker access$4400(android.net.wifi.WifiStateMachine)>','<android.os.TokenWatcher: void release(android.os.IBinder)>','<android.database.sqlite.SQLiteStatement: long executeInsert()>','<android.media.MediaPlayer: void stop()>','<android.widget.RemoteViews: void setImageViewResource(int,int)>','<com.android.server.am.UriPermissionOwner: java.lang.String toString()>','<android.database.AbstractWindowedCursor: void checkPosition()>','<android.renderscript.Element: android.renderscript.Element$DataType getDataType()>','<android.media.effect.EffectContext: void saveGLState()>','<android.view.View$TransformationInfo: android.graphics.Matrix access$1100(android.view.View$TransformationInfo)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,long,long,long,long,long)>','<android.media.Metadata: int firstCustomId()>','<android.graphics.Bitmap: void setDensity(int)>','<com.android.server.NativeDaemonConnector: java.util.ArrayList doCommand(java.lang.String)>','<android.webkit.DeviceMotionService: void start()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType[] values()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc build()>','<android.filterpacks.base.FrameSource: void <init>(java.lang.String)>','<android.emoji.EmojiFactory: int getMinimumAndroidPua()>','<android.os.Debug$MemoryInfo: int describeContents()>','<android.webkit.WebViewClassic: void updateRectsForGL()>','<com.android.server.WifiService: void access$1000(com.android.server.WifiService,boolean)>','<android.view.View: void playSoundEffect(int)>','<android.animation.ObjectAnimator: void setupStartValues()>','<android.ddm.DdmHandleAppName: java.lang.String getAppName()>','<android.net.wifi.WifiStateMachine$VerifyingLinkState: void enter()>','<android.app.ActivityThread$ApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>','<android.view.ViewGroup: void clearFocus()>','<android.app.ContextImpl$6: java.lang.Object createService(android.app.ContextImpl)>','<android.os.StrictMode$3: android.os.Handler initialValue()>','<android.speech.tts.ITextToSpeechCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.nfc.TagLostException: void <init>()>','<android.os.Registrant: void notifyRegistrant()>','<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>','<android.util.EventLog$Event: java.lang.Object getData()>','<com.android.internal.telephony.IccUtils: java.lang.String adnStringFieldToString(byte[],int,int)>','<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>','<android.content.SyncResult: boolean hasSoftError()>','<android.widget.OverScroller$SplineOverScroller: boolean update()>','<android.filterfw.core.FilterFactory: void addPackage(java.lang.String)>','<android.app.ActivityOptions: android.os.Bundle toBundle()>','<com.android.internal.policy.impl.PasswordUnlockScreen: com.android.internal.policy.impl.KeyguardStatusViewManager access$300(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.security.IKeyChainAliasCallback$Stub: android.security.IKeyChainAliasCallback asInterface(android.os.IBinder)>','<android.util.SparseArray: void remove(int)>','<android.widget.AdapterViewAnimator$CheckForTap: void run()>','<com.android.server.WifiService$2: void <init>(com.android.server.WifiService)>','<android.media.AudioService: int getMasterMaxVolume()>','<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>','<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.BaseCommands: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>','<android.app.ContextImpl$32: java.lang.Object createService(android.app.ContextImpl)>','<android.webkit.WebSettings: void setSavePassword(boolean)>','<android.inputmethodservice.KeyboardView$SwipeTracker: void <init>(android.inputmethodservice.KeyboardView$1)>','<com.android.internal.os.BatteryStatsImpl$Uid: long computeCurrentTcpBytesSent()>','<android.media.AudioManager$FocusEventHandlerDelegate: android.os.Handler getHandler()>','<android.bluetooth.BluetoothPbap$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.internal.telephony.gsm.GSMPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.text.method.MultiTapKeyListener$Timeout: void run()>','<android.widget.SpellChecker: android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker)>','<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>','<android.view.View: float getScaleY()>','<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean enableNoAutoConnect()>','<android.webkit.WebSettingsClassic: void setJavaScriptCanOpenWindowsAutomatically(boolean)>','<android.view.ViewRootImpl: void outputDisplayList(android.view.View)>','<android.media.RemoteControlClient$EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>','<android.widget.RemoteViews$BitmapCache: int getBitmapId(android.graphics.Bitmap)>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>','<android.widget.AbsListView: android.widget.EdgeEffect access$1800(android.widget.AbsListView)>','<android.net.sip.ISipService$Stub: android.net.sip.ISipService asInterface(android.os.IBinder)>','<android.content.SyncStats$1: android.content.SyncStats createFromParcel(android.os.Parcel)>','<android.opengl.GLLogWrapper: void glPixelStorei(int,int)>','<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>','<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler: void loge(java.lang.String)>','<android.content.pm.ServiceInfo: void <init>(android.os.Parcel,android.content.pm.ServiceInfo$1)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getLaunchTimeToNowLocked(long)>','<android.bluetooth.BluetoothOutputStream: void <init>(android.bluetooth.BluetoothSocket)>','<com.android.internal.telephony.gsm.GSMPhone: void getCellBroadcastSmsConfig(android.os.Message)>','<android.net.wifi.SupplicantStateTracker: boolean access$602(android.net.wifi.SupplicantStateTracker,boolean)>','<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>','<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>','<android.view.LayoutInflater$BlinkLayout$1: boolean handleMessage(android.os.Message)>','<android.widget.Scroller: void extendDuration(int)>','<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>','<android.widget.Toast$TN: void show()>','<android.os.storage.IMountService$Stub: android.os.IBinder asBinder()>','<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>','<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>','<android.media.AudioManager: void setStreamMute(int,boolean)>','<android.graphics.drawable.ScaleDrawable: int getOpacity()>','<android.bluetooth.IBluetoothHealthCallback$Stub: void <init>()>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ApplicationPackageManager: android.content.pm.UserInfo createUser(java.lang.String,int)>','<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>','<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<com.android.internal.telephony.sip.SipCommandInterface: void queryTTYMode(android.os.Message)>','<android.view.inputmethod.CorrectionInfo: int getOffset()>','<android.view.KeyEvent$DispatcherState: boolean isTracking(android.view.KeyEvent)>','<android.widget.ExpandableListConnector$PositionMetadata: android.widget.ExpandableListConnector$PositionMetadata obtain(int,int,int,int,android.widget.ExpandableListConnector$GroupMetadata,int)>','<android.media.MediaRouter$RouteCategory: java.lang.String toString()>','<android.net.sip.SimpleSessionDescription$Media: void access$300(android.net.sip.SimpleSessionDescription$Media,java.lang.StringBuilder)>','<android.app.Instrumentation$ActivityResult: android.content.Intent getResultData()>','<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)>','<com.android.internal.telephony.gsm.UsimServiceTable: boolean isAvailable(com.android.internal.telephony.gsm.UsimServiceTable$UsimService)>','<com.android.server.IntentResolver: java.util.Iterator filterIterator()>','<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>','<android.hardware.Camera$Parameters: boolean isVideoStabilizationSupported()>','<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>','<android.widget.AbsListView$SavedState: void <init>(android.os.Parcelable)>','<android.content.pm.PackageInfoLite: java.lang.String toString()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>','<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>','<com.android.internal.telephony.RIL: void reportStkServiceIsRunning(android.os.Message)>','<com.android.internal.policy.impl.IconUtilities: void <clinit>()>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: void <init>(java.lang.String)>','<android.widget.AdapterViewAnimator: void deferNotifyDataSetChanged()>','<android.view.GestureDetector: void <clinit>()>','<com.android.vcard.VCardParser_V30: void cancel()>','<android.net.wifi.WifiStateMachine: boolean access$6502(android.net.wifi.WifiStateMachine,boolean)>','<android.nfc.tech.NfcB: void reconnect()>','<com.android.internal.view.menu.MenuPopupHelper: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<android.app.Activity: void openOptionsMenu()>','<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>','<com.android.internal.telephony.PhoneProxy: void unregisterForT53ClirInfo(android.os.Handler)>','<android.view.IWindow$Stub$Proxy: void dispatchWallpaperOffsets(float,float,float,float,boolean)>','<android.filterfw.core.Filter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>','<com.android.server.input.InputManagerService$InputFilterHost: void sendInputEvent(android.view.InputEvent,int)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>','<com.android.internal.policy.impl.PhoneWindowManager: void dispatchMediaKeyWithWakeLock(android.view.KeyEvent)>','<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>','<android.widget.TextView: int getTotalPaddingRight()>','<android.app.ActivityManager: boolean removeSubTask(int,int)>','<com.android.internal.os.ProcessStats$Stats: void <init>(int,int,boolean)>','<android.content.SyncOperation: boolean isInitialization()>','<com.android.server.pm.PackageSignatures: java.lang.String toString()>','<android.content.ISyncAdapter$Stub: void <init>()>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$1502(com.android.server.wm.WindowManagerService$LayoutFields,boolean)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>','<android.view.inputmethod.InputMethodManager: void <clinit>()>','<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable newDrawable()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationDone(android.net.sip.ISipSession,int)>','<android.filterfw.core.ProgramPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.String,java.lang.reflect.Field,boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$10300(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: com.android.internal.textservice.ISpellCheckerSessionListener asInterface(android.os.IBinder)>','<android.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String)>','<android.view.Display: android.view.Display createCompatibleDisplay(int,android.view.CompatibilityInfoHolder)>','<com.android.server.PowerManagerService$9: void run()>','<android.app.ApplicationPackageManager: void verifyPendingInstall(int,int)>','<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>','<android.inputmethodservice.InputMethodService: void access$100(android.inputmethodservice.InputMethodService,int,int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onActionIntentReconnectAlarm(android.content.Intent)>','<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>','<android.net.NetworkInfo: java.lang.String getExtraInfo()>','<com.android.internal.widget.WaveView: float access$200(com.android.internal.widget.WaveView)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean)>','<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>','<android.preference.PreferenceGroupAdapter: void access$100(android.preference.PreferenceGroupAdapter)>','<android.view.ViewRootImpl: void bringChildToFront(android.view.View)>','<android.app.ActivityManager$RunningServiceInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.media.MediaRouter$RouteInfo: void setStatusInt(java.lang.CharSequence)>','<android.net.http.SslCertificate$DName: java.lang.String getDName()>','<android.net.wifi.IWifiManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.animation.LayoutTransition: java.util.LinkedHashMap access$900(android.animation.LayoutTransition)>','<com.android.vcard.VCardParserImpl_V21: void parseOne(java.io.InputStream)>','<android.webkit.WebSettings: void setPluginsEnabled(boolean)>','<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String)>','<android.nfc.INfcAdapter$Stub$Proxy: boolean disableNdefPush()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>','<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<android.graphics.Canvas: void setViewport(int,int)>','<android.nfc.INdefPushCallback$Stub$Proxy: android.nfc.NdefMessage createMessage()>','<android.view.SurfaceView: void setWindowType(int)>','<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>','<com.android.server.PowerManagerService$2: void <init>(com.android.server.PowerManagerService,android.os.Handler)>','<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>','<com.android.server.am.UsageStatsService$TimeStats: void incCount()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View)>','<android.app.KeyguardManager: android.view.IWindowManager access$000(android.app.KeyguardManager)>','<com.android.server.LocationManagerService$1: void <init>(com.android.server.LocationManagerService)>','<android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>','<android.os.AsyncTask$InternalHandler: void handleMessage(android.os.Message)>','<android.renderscript.RenderScript: int nFileA3DCreateFromAsset(android.content.res.AssetManager,java.lang.String)>','<android.widget.HorizontalScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String,java.lang.String,boolean)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector text(java.lang.String)>','<android.os.Parcel: void setDataSize(int)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitCustomSlowCalls()>','<com.android.server.location.GeocoderProxy$Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.internal.telephony.DataConnection$DisconnectParams: void <init>(java.lang.String,android.os.Message)>','<android.os.Parcel: void writeMap(java.util.Map)>','<android.net.wifi.WifiApConfigStore$DefaultState: boolean processMessage(android.os.Message)>','<com.android.server.DeviceStorageMonitorService$CachePackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>','<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>','<android.app.ActivityOptions: android.app.ActivityOptions makeDelayedThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions$OnAnimationStartedListener)>','<android.webkit.WebViewCore: android.webkit.BrowserFrame access$1500(android.webkit.WebViewCore)>','<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>','<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>','<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)>','<android.nfc.INfcTag$Stub$Proxy: android.os.IBinder asBinder()>','<android.server.BluetoothService: void cleanNativeAfterShutoffBluetooth()>','<android.graphics.Canvas: void drawARGB(int,int,int,int)>','<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine access$200(com.android.server.NsdService)>','<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>','<com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>','<android.media.MediaPlayer: android.media.MediaPlayer$OnSeekCompleteListener access$500(android.media.MediaPlayer)>','<android.os.CountDownTimer: void cancel()>','<com.android.internal.telephony.gsm.GsmSmsAddress: void <init>(byte[],int,int)>','<com.android.internal.policy.impl.PatternUnlockScreen: int access$608(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.server.StatusBarManagerService: void manageDisableListLocked(int,android.os.IBinder,java.lang.String)>','<com.android.internal.telephony.OperatorInfo$State: com.android.internal.telephony.OperatorInfo$State[] values()>','<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,int[],int)>','<android.graphics.drawable.ClipDrawable$ClipState: int getChangingConfigurations()>','<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>','<com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause[] values()>','<android.content.pm.RegisteredServicesCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)>','<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>','<android.net.NetworkPolicy: int describeContents()>','<android.view.MotionEvent: float getHistoricalX(int,int)>','<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>','<com.android.internal.app.IUsageStats$Stub$Proxy: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>','<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToBnW(byte[],int)>','<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)>','<android.view.ViewRootImpl: void access$200(android.view.ViewRootImpl,boolean)>','<android.preference.PreferenceManager: void removePreferencesScreen(android.content.DialogInterface)>','<android.widget.Editor$SelectionStartHandleView: int getCurrentCursorOffset()>','<android.app.IActivityManager$WaitResult: void <init>()>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEstablished(android.net.sip.SipAudioCall)>','<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()>','<android.widget.TextView: void onAttachedToWindow()>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>','<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>','<android.widget.EditText: android.text.Editable getText()>','<android.webkit.FindActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>','<android.bluetooth.IBluetooth$Stub: android.bluetooth.IBluetooth asInterface(android.os.IBinder)>','<android.preference.Preference: void performClick(android.preference.PreferenceScreen)>','<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>','<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()>','<com.android.internal.view.menu.MenuItemImpl: boolean isChecked()>','<android.accessibilityservice.AccessibilityServiceInfo$1: android.accessibilityservice.AccessibilityServiceInfo[] newArray(int)>','<com.android.internal.telephony.DataConnectionTracker$Activity: com.android.internal.telephony.DataConnectionTracker$Activity valueOf(java.lang.String)>','<com.android.internal.view.IInputConnectionWrapper: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>','<android.renderscript.RenderScript: int nAllocationCubeCreateFromBitmap(int,int,android.graphics.Bitmap,int)>','<com.android.server.pm.ShutdownThread$1: void <init>(android.content.Context)>','<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)>','<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.server.location.MockProvider: void clearLocation()>','<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler: java.lang.String getEFPath(int)>','<android.telephony.SignalStrength: int getEvdoEcio()>','<android.net.http.SslError: boolean hasError(int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void toggleRecentApps()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcast(int)>','<com.android.server.MountService: int encryptStorage(java.lang.String)>','<com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>','<android.content.pm.PackageStats: java.lang.String toString()>','<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod$SessionCallback)>','<com.android.server.wm.ScreenRotationAnimation: void kill()>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setSelected(boolean)>','<android.webkit.WebSettingsClassic: boolean forceUserScalable()>','<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)>','<android.filterfw.io.PatternScanner: int lineNo()>','<com.android.internal.telephony.RIL: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>','<android.view.View: android.view.View findViewByAccessibilityIdTraversal(int)>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>','<android.app.DownloadManager: void setAccessAllDownloads(boolean)>','<android.webkit.WebSettingsClassic$EventHandler: void access$900(android.webkit.WebSettingsClassic$EventHandler)>','<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>','<com.android.internal.app.AlertController: int access$1100(com.android.internal.app.AlertController)>','<com.android.server.location.PassiveProvider: java.lang.String getInternalState()>','<com.android.server.pm.PackageManagerService$InstallParams$1: void <init>(com.android.server.pm.PackageManagerService$InstallParams,int)>','<android.media.AudioService: android.bluetooth.BluetoothDevice access$2602(android.media.AudioService,android.bluetooth.BluetoothDevice)>','<android.content.pm.ServiceInfo$1: android.content.pm.ServiceInfo[] newArray(int)>','<android.util.SparseLongArray: int keyAt(int)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfosByText(long,java.lang.String,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>','<com.android.internal.telephony.cat.AppInterface$CommandType: int value()>','<android.bluetooth.BluetoothAdapter$StateChangeCallbackWrapper: void onBluetoothStateChange(boolean)>','<android.view.inputmethod.CompletionInfo: int getPosition()>','<android.preference.GenericInflater: android.preference.GenericInflater$Parent onMergeRoots(android.preference.GenericInflater$Parent,boolean,android.preference.GenericInflater$Parent)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2: void <init>(java.lang.String,int)>','<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>','<android.filterfw.core.SyncRunner: boolean performStep()>','<com.android.server.WifiService$4: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String,int)>','<android.os.RecoverySystem: void <clinit>()>','<com.android.internal.content.PackageMonitor: void onPackageUpdateFinished(java.lang.String,int)>','<android.accounts.AccountManagerService$7: java.lang.String toDebugString(long)>','<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getLine1Number()>','<android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>','<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>','<android.test.IsolatedContext: void unregisterReceiver(android.content.BroadcastReceiver)>','<android.widget.ExpandableListView: long getSelectedId()>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbSettingsManager access$1500(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.view.menu.ActionMenuView$LayoutParams: void <init>(com.android.internal.view.menu.ActionMenuView$LayoutParams)>','<com.android.server.pm.PackageManagerService: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>','<android.graphics.PointF: void <init>(float,float)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>','<com.android.internal.telephony.PhoneProxy: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>','<android.accounts.AccountManagerService: void removeAccountInternal(android.accounts.Account)>','<android.os.INetworkManagementService$Stub$Proxy: void setGlobalAlert(long)>','<android.server.BluetoothService: java.lang.String getAddress()>','<android.inputmethodservice.InputMethodService: void onExtractedSetSpan(java.lang.Object,int,int,int)>','<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>','<android.graphics.drawable.LayerDrawable: void setId(int,int)>','<android.graphics.Matrix$1: boolean postSkew(float,float)>','<com.android.server.wm.ScreenRotationAnimation: boolean hasScreenshot()>','<android.view.ViewRootImpl: void doProcessInputEvents()>','<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>','<com.android.internal.telephony.DataConnection$FailCause: void <clinit>()>','<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>','<com.android.internal.policy.impl.GlobalActions$ToggleAction$State: com.android.internal.policy.impl.GlobalActions$ToggleAction$State[] values()>','<android.webkit.WebView$PrivateAccess: void awakenScrollBars(int)>','<android.telephony.PhoneNumberUtils: boolean compareLoosely(java.lang.String,java.lang.String)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void handleMessage(android.os.Message)>','<android.widget.TextView$Marquee: void stop()>','<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)>','<com.android.internal.telephony.OperatorInfo: int describeContents()>','<android.telephony.SmsMessage: byte[] getPdu()>','<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.text.style.SuggestionRangeSpan: void updateDrawState(android.text.TextPaint)>','<android.widget.Editor$PositionListener: boolean onPreDraw()>','<android.database.sqlite.SQLiteCursor: void finalize()>','<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>','<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: java.lang.String toString()>','<com.android.ex.variablespeed.VariableSpeed: void reset()>','<android.filterfw.core.Frame: void assertFrameMutable()>','<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>','<android.webkit.WebViewClassic: int contentToViewX(int)>','<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>','<android.widget.AdapterViewAnimator: void showPrevious()>','<android.view.VelocityTracker$Estimator: float getXCoeff(int)>','<android.webkit.WebSettingsClassic: boolean getAutoFillEnabled()>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$600(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.widget.TextView: boolean onPreDraw()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void onPress(int)>','<android.net.INetworkStatsSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.wm.Session: void setInTouchMode(boolean)>','<com.android.server.MountService$MountObbAction: java.lang.String toString()>','<android.view.animation.Animation: void setRepeatCount(int)>','<android.speech.tts.TextToSpeech$7: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>','<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>','<android.net.http.AndroidHttpClientConnection: void close()>','<android.net.LinkCapabilities: java.util.HashMap access$000(android.net.LinkCapabilities)>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: int access$302(android.preference.PreferenceGroupAdapter$PreferenceLayout,int)>','<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>','<android.widget.ExpandableListView: int getPackedPositionGroup(long)>','<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>','<android.text.BoringLayout: int getHeight()>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)>','<com.android.uiautomator.core.UiDevice: void runWatchers()>','<android.webkit.WebViewCore: void access$4400(android.webkit.WebViewCore,int,int)>','<android.net.wifi.WifiStateMachine: void access$15800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.pm.PackageManagerService: boolean access$1200(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions$5: void <init>(com.android.internal.policy.impl.GlobalActions)>','<android.speech.tts.TextToSpeech: int stop()>','<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>','<android.os.Parcel: void writeLong(long)>','<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,android.app.ActivityThread,java.lang.ClassLoader,boolean,boolean)>','<com.android.internal.telephony.BaseCommands: void unregisterForRingbackTone(android.os.Handler)>','<com.android.vcard.exception.VCardAgentNotSupportedException: void <init>(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimSpnLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<android.content.Intent: float getFloatExtra(java.lang.String,float)>','<com.android.internal.telephony.RIL: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>','<android.webkit.WebViewClassic: void reload()>','<android.widget.AbsListView: void setOverScrollMode(int)>','<com.android.server.pm.PackageSettingBase: boolean getNotLaunched(int)>','<android.view.AccessibilityInteractionController$1: android.view.AccessibilityInteractionController$SomeArgs newInstance()>','<android.view.ViewGroup: int[] onCreateDrawableState(int)>','<com.android.internal.telephony.OperatorInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.SharedPreferencesImpl: java.util.Map access$402(android.app.SharedPreferencesImpl,java.util.Map)>','<android.accounts.AccountManagerService: void cancelNotification(int)>','<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: java.lang.CharSequence access$902(com.android.internal.policy.impl.KeyguardStatusViewManager,java.lang.CharSequence)>','<android.app.NotificationManager: void <clinit>()>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void loge(java.lang.String)>','<android.os.Parcel: void writeIntArray(int[])>','<com.android.internal.widget.TransportControlView: void onAttachedToWindow()>','<android.content.res.XmlBlock$Parser: void setInput(java.io.Reader)>','<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean access$1000(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.hardware.Camera: android.hardware.Camera open()>','<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)>','<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>','<android.content.res.XmlBlock$Parser: java.lang.String getNamespace()>','<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.Phone)>','<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>','<android.opengl.Matrix: void transposeM(float[],int,float[],int)>','<com.android.server.wm.ScreenRotationAnimation: void <init>(android.content.Context,android.view.SurfaceSession,boolean,int,int,int)>','<android.content.Intent: byte getByteExtra(java.lang.String,byte)>','<com.android.internal.logging.AndroidHandler$1: java.lang.String format(java.util.logging.LogRecord)>','<android.widget.TextView: void setCursorPosition_internal(int,int)>','<com.android.internal.telephony.ApnContext: boolean getDependencyMet()>','<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: boolean isActive()>','<android.telephony.cdma.CdmaSmsCbProgramData$1: android.telephony.cdma.CdmaSmsCbProgramData createFromParcel(android.os.Parcel)>','<android.accounts.AccountManagerService$RemoveAccountSession: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,android.accounts.Account)>','<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug$HierarchyTraceType)>','<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<android.telephony.GsmCellIdentity: void <clinit>()>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIsimImpi()>','<com.android.internal.os.BatteryStatsImpl$Uid: void writeToParcelLocked(android.os.Parcel,long)>','<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>','<com.android.internal.telephony.DataConnectionAc: int getCidSync()>','<com.android.uiautomator.core.InteractionController$4: void <init>(com.android.uiautomator.core.InteractionController)>','<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider access$600(com.android.internal.widget.SlidingTab)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabled(int)>','<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)>','<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>','<android.graphics.drawable.InsetDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<com.android.internal.telephony.IccFileNotFound: void <init>(int)>','<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.ContentService$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.internal.util.AsyncChannel$SyncMessenger: android.os.Message access$100(android.os.Messenger,android.os.Message)>','<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()>','<android.widget.PopupWindow: int access$200(android.widget.PopupWindow)>','<android.app.Notification$Builder: android.app.Notification build()>','<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>','<android.webkit.HTML5VideoView: void prepareDataCommon(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.telephony.IccCardStatus: void setGsmUmtsSubscriptionAppIndex(int)>','<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>','<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<android.hardware.Camera$Parameters: java.util.List getFocusAreas()>','<android.os.storage.IMountShutdownObserver$Stub$Proxy: void onShutDownComplete(int)>','<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>','<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2700(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked()>','<android.accounts.IAccountManagerResponse$Stub$Proxy: void onError(int,java.lang.String)>','<com.android.internal.os.HandlerCaller: void recycleArgs(com.android.internal.os.HandlerCaller$SomeArgs)>','<android.text.method.BaseMovementMethod: boolean scrollLineEnd(android.widget.TextView,android.text.Spannable)>','<android.widget.RemoteViews$BitmapCache: void assimilate(android.widget.RemoteViews$BitmapCache)>','<android.os.Bundle: float getFloat(java.lang.String)>','<android.content.ClipDescription$1: android.content.ClipDescription createFromParcel(android.os.Parcel)>','<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setArtwork(int,android.graphics.Bitmap)>','<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>','<com.android.internal.widget.multiwaveview.GlowPadView: int getResourceIdForTarget(int)>','<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>','<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>','<com.android.server.sip.SipService: int access$900(com.android.server.sip.SipService)>','<android.app.ActivityThread: void access$300(android.app.ActivityThread,int,java.lang.Object)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasLeadingZeroPossible()>','<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>','<com.android.internal.telephony.cat.TextAlignment: com.android.internal.telephony.cat.TextAlignment valueOf(java.lang.String)>','<com.android.internal.widget.multiwaveview.Ease$Cubic: void <clinit>()>','<android.widget.MediaController$4: void <init>(android.widget.MediaController)>','<android.webkit.HTML5VideoView: boolean isPlaying()>','<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>','<android.server.BluetoothA2dpService: boolean access$700(android.server.BluetoothA2dpService,java.lang.String)>','<android.renderscript.Sampler$Builder: void setAnisotropy(float)>','<android.widget.TextView: android.text.method.KeyListener getKeyListener()>','<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>','<android.app.ActivityManager: void <init>(android.content.Context,android.os.Handler)>','<com.android.server.NativeDaemonEvent: boolean isClassClientError()>','<com.android.internal.telephony.cat.BerTlv: int getTag()>','<com.android.internal.telephony.cdma.EriManager: void dispose()>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray: void <clinit>()>','<android.view.MotionEvent: void transform(android.graphics.Matrix)>','<com.android.internal.widget.LockPatternView: void <init>(android.content.Context)>','<android.content.SyncResult$1: android.content.SyncResult[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfPlLoaded: java.lang.String getEfName()>','<android.provider.CalendarContract$Instances: void <clinit>()>','<android.accounts.AccountManagerService: android.content.Intent access$1000(android.accounts.AccountManagerService,android.accounts.Account,int,android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String)>','<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>','<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>','<android.net.wifi.WifiConfiguration$EnterpriseField: void setValue(java.lang.String)>','<android.graphics.RectF: void setEmpty()>','<android.animation.ValueAnimator: void setStartDelay(long)>','<android.widget.Editor$SuggestionsPopupWindow: int getTextOffset()>','<android.security.IKeyChainService$Stub$Proxy: void installCaCertificate(byte[])>','<android.widget.TextView: java.lang.CharSequence getText()>','<android.app.backup.RestoreSet$1: android.app.backup.RestoreSet createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.sip.SipConnectionBase: long getConnectTime()>','<android.database.CursorWrapper: int getPosition()>','<android.widget.Editor: boolean hasSelectionController()>','<com.android.internal.telephony.cat.CatResponseMessage: void setConfirmation(boolean)>','<android.view.ViewRootImpl$W: void closeSystemDialogs(java.lang.String)>','<android.speech.tts.TextToSpeech$Connection: void <init>(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$1)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setInverseBackgroundForced(boolean)>','<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>','<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>','<android.net.NetworkUtils: int netmaskIntToPrefixLength(int)>','<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap)>','<com.android.server.PowerManagerService$WakeLock: void binderDied()>','<android.view.IWindowSession$Stub$Proxy: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>','<android.inputmethodservice.Keyboard: int access$000(android.inputmethodservice.Keyboard)>','<android.view.ViewRootImpl$2: void setFixedSize(int,int)>','<com.android.internal.util.StateMachine$SmHandler: boolean access$1500(com.android.internal.util.StateMachine$SmHandler)>','<com.android.internal.telephony.PhoneProxy: boolean canTransfer()>','<android.webkit.WebView: boolean pageUp(boolean)>','<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)>','<com.android.internal.telephony.ServiceStateTracker: void cancelPollState()>','<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>','<com.android.internal.telephony.cdma.CdmaMmiCode: boolean isCancelable()>','<android.server.BluetoothAdapterStateMachine$Switching: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<android.webkit.HTML5VideoFullScreen$1: void <init>(android.webkit.HTML5VideoFullScreen)>','<android.app.LoadedApk$ReceiverDispatcher$Args: void run()>','<com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>','<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>','<com.android.internal.policy.impl.PhoneWindowManager$2: void run()>','<android.filterfw.core.FilterFunction: void tearDown()>','<com.android.vcard.VCardConfig: boolean shouldRefrainQPToNameProperties(int)>','<android.media.IAudioRoutesObserver$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.AlarmManagerService: void <init>(android.content.Context)>','<android.webkit.CookieManager: boolean allowFileSchemeCookies()>','<android.webkit.WebSettings: void setAllowContentAccess(boolean)>','<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(java.lang.Object)>','<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>','<android.app.backup.RestoreObserver: void <init>()>','<android.ddm.DdmHandleHeap: void connected()>','<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>','<android.provider.ContactsContract: void <clinit>()>','<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>','<android.accounts.AccountManagerResponse: int describeContents()>','<android.filterfw.core.GLFrame: int getTextureId()>','<android.opengl.GLLogWrapper: void glTexGenxv(int,int,int[],int)>','<android.view.animation.Animation: void setFillAfter(boolean)>','<com.android.uiautomator.core.QueryController$1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.net.nsd.NsdServiceInfo: int access$402(android.net.nsd.NsdServiceInfo,int)>','<android.preference.Preference: boolean hasSpecifiedLayout()>','<android.server.BluetoothAdapterStateMachine: void access$6300(android.server.BluetoothAdapterStateMachine,int)>','<android.app.Instrumentation: void <init>()>','<android.net.wifi.WifiStateMachine$DriverStartedState: boolean processMessage(android.os.Message)>','<com.android.internal.policy.impl.KeyguardViewMediator$3: void <init>(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>','<com.android.server.NetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>','<android.app.ApplicationErrorReport$RunningServiceInfo: void <init>(android.os.Parcel)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1AlphaTag()>','<android.speech.tts.TextToSpeech$7: void <init>(android.speech.tts.TextToSpeech)>','<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>','<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>','<android.content.PeriodicSync: boolean equals(java.lang.Object)>','<com.android.server.wm.AppWindowAnimator: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.AppWindowToken)>','<com.android.internal.telephony.cdma.EriManager: int getEriFileType()>','<android.view.ActionMode: boolean isUiFocusable()>','<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()>','<android.widget.OverScroller$SplineOverScroller: void setFriction(float)>','<com.android.internal.policy.impl.PhoneWindowManager: void setLastInputMethodWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState)>','<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1200(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.net.sip.SipManager: boolean isIncomingCallIntent(android.content.Intent)>','<android.text.TextLine: float measure(int,boolean,android.graphics.Paint$FontMetricsInt)>','<android.graphics.drawable.BitmapDrawable: void setGravity(int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getLeadingDigitsPattern(int)>','<android.content.ContentValues: boolean equals(java.lang.Object)>','<android.media.IAudioService$Stub$Proxy: void forceVolumeControlStream(int,android.os.IBinder)>','<android.os.StrictMode: boolean vmSqliteObjectLeaksEnabled()>','<android.net.wifi.p2p.WifiP2pService: java.lang.String access$000(android.net.wifi.p2p.WifiP2pService)>','<android.content.BroadcastReceiver$PendingResult: void setResult(int,java.lang.String,android.os.Bundle)>','<com.android.server.location.LocationProviderProxy: java.lang.Object access$200(com.android.server.location.LocationProviderProxy)>','<android.content.ContextWrapper: void setTheme(int)>','<android.media.IAudioService$Stub$Proxy: void setPlaybackInfoForRcc(int,int,int)>','<com.android.server.NetworkManagementService: boolean isBandwidthControlEnabled()>','<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>','<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine()>','<com.android.internal.widget.TransportControlView: com.android.internal.widget.TransportControlView$Metadata access$400(com.android.internal.widget.TransportControlView)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getGlobalProxy()>','<com.android.server.EventLogTags: void writeWmNoSurfaceMemory(java.lang.String,int,java.lang.String)>','<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState)>','<android.os.RegistrantList: void notifyRegistrants()>','<android.app.IActivityController$Stub$Proxy: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>','<com.android.server.input.InputManagerService$InputManagerHandler: void <init>(com.android.server.input.InputManagerService,com.android.server.input.InputManagerService$1)>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<com.android.server.sip.SipHelper: void sendBye(javax.sip.Dialog)>','<android.graphics.Point: int describeContents()>','<android.app.backup.IRestoreSession$Stub$Proxy: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>','<com.android.i18n.phonenumbers.NumberParseException: com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType()>','<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>','<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>','<android.bluetooth.BluetoothDeviceProfileState$PbapServiceListener: void onServiceDisconnected()>','<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)>','<com.android.server.StatusBarManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>','<android.widget.Editor$InsertionHandleView$1: void <init>(android.widget.Editor$InsertionHandleView)>','<android.webkit.PluginFullScreenHolder$1: void onCustomViewHidden()>','<com.android.internal.policy.impl.PhoneWindowManager: void setRotationLw(int)>','<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>','<android.webkit.CacheManager$CacheResult: java.lang.String getLocalPath()>','<android.media.AudioService$VolumeStreamState: int access$500(android.media.AudioService$VolumeStreamState)>','<android.net.EthernetDataTracker: boolean teardown()>','<android.content.pm.IPackageManager$Stub$Proxy: void addPackageToPreferred(java.lang.String)>','<android.accounts.AccountManagerService$RemoveAccountSession: java.lang.String toDebugString(long)>','<android.view.View$8: void <init>(java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToUnlockScreen()>','<android.content.Intent: boolean filterEquals(android.content.Intent)>','<com.android.server.pm.ShutdownThread$CloseDialogReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.ddm.DdmHandleNativeHeap: void register()>','<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: void setmIccPhoneBookInterfaceManager(com.android.internal.telephony.IccPhoneBookInterfaceManager)>','<android.view.HardwareCanvas: void setBitmap(android.graphics.Bitmap)>','<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()>','<com.android.server.wm.FakeWindowImpl: void <init>(com.android.server.wm.WindowManagerService,android.os.Looper,android.view.InputEventReceiver$Factory,java.lang.String,int,int,boolean,boolean,boolean)>','<android.widget.ProgressBar$RefreshData: android.widget.ProgressBar$RefreshData getNextPoolable()>','<android.media.AudioService: android.bluetooth.BluetoothHeadset access$2502(android.media.AudioService,android.bluetooth.BluetoothHeadset)>','<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)>','<com.android.server.am.ActivityManagerService: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>','<com.android.i18n.phonenumbers.RegexCache$LRUCache: java.lang.Object get(java.lang.Object)>','<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>','<android.widget.TextView: int getCompoundPaddingStart()>','<android.security.IKeyChainService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.i18n.phonenumbers.PhoneNumberMatcher$State: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv getServiceStatsLocked(java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: void setPictureListener(android.webkit.WebView$PictureListener)>','<android.view.View: boolean isSaveEnabled()>','<android.webkit.WebViewClassic: android.graphics.Picture capturePicture()>','<com.android.server.ConnectivityService: void setMobileDataEnabled(boolean)>','<com.android.server.am.UsageStatsService: void access$100(com.android.server.am.UsageStatsService,boolean,boolean)>','<android.net.WebAddress: java.lang.String toString()>','<com.android.server.am.ActivityManagerService$ItemMatcher: void build(java.lang.String)>','<android.graphics.Bitmap: int scaleFromDensity(int,int,int)>','<android.app.backup.IFullBackupRestoreObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.content.PackageMonitor: void unregister()>','<com.android.vcard.VCardParserImpl_V21: void handleValue(com.android.vcard.VCardProperty,java.lang.String)>','<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>','<android.animation.ValueAnimator: void setFrameDelay(long)>','<android.app.WallpaperManager: java.lang.String access$200()>','<android.view.GLES20TextureLayer: boolean isValid()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()>','<com.android.server.location.GpsLocationProvider: boolean requiresSatellite()>','<android.widget.AbsListView$PerformClick: void run()>','<android.app.Instrumentation: void onStart()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onPhoneStateChanged(int)>','<android.app.ActivityThread: void access$2000(android.app.ActivityThread,android.os.IBinder)>','<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.animation.Animation$3: void run()>','<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>','<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float)>','<com.android.internal.telephony.cat.Duration: void <init>(int,com.android.internal.telephony.cat.Duration$TimeUnit)>','<android.net.LocalSocketImpl$SocketInputStream: void <init>(android.net.LocalSocketImpl)>','<android.provider.Downloads$Impl: boolean isStatusServerError(int)>','<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>','<android.view.ViewTreeObserver: void dispatchOnComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo)>','<android.app.Dialog: void registerForContextMenu(android.view.View)>','<android.net.TrafficStats: long getTotalTxBytes()>','<android.media.AudioService$SetModeDeathHandler: android.os.IBinder getBinder()>','<android.app.WallpaperInfo: int describeContents()>','<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>','<com.android.internal.os.BatteryStatsImpl: void noteScreenOffLocked()>','<com.android.server.sip.SipSessionListenerProxy$13: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>','<android.media.AudioService$SetModeDeathHandler: void binderDied()>','<android.widget.ListPopupWindow: int getInputMethodMode()>','<android.filterfw.core.MutableFrameFormat: void setBaseType(int)>','<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>','<android.text.style.SubscriptSpan: int describeContents()>','<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>','<android.content.ContentProviderClient: boolean release()>','<android.net.NetworkStatsHistory$ParcelUtils: void <init>()>','<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>','<android.widget.AdapterView: long getItemIdAtPosition(int)>','<com.android.internal.telephony.AdnRecordLoader: void updateEF(com.android.internal.telephony.AdnRecord,int,int,int,java.lang.String,android.os.Message)>','<android.opengl.GLLogWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>','<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>','<android.nfc.INfcTag$Stub$Proxy: android.nfc.Tag rediscover(int)>','<android.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String)>','<android.content.IClipboard$Stub: android.content.IClipboard asInterface(android.os.IBinder)>','<android.os.Messenger$1: android.os.Messenger[] newArray(int)>','<android.view.HardwareRenderer$GlRenderer: boolean attachFunctor(android.view.View$AttachInfo,int)>','<android.view.ViewRootImpl: boolean attachFunctor(int)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void binderDied()>','<android.renderscript.Element: android.renderscript.Element F64_2(android.renderscript.RenderScript)>','<android.view.ViewDebug$3: void run(java.lang.Void[])>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$PowerOff access$1200(android.server.BluetoothAdapterStateMachine)>','<android.media.MediaRouter$RouteGroup: void routeUpdated()>','<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>','<com.android.internal.telephony.SmsRawData$1: com.android.internal.telephony.SmsRawData createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.os.Handler access$000(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>','<android.text.DynamicLayout: int getTopPadding()>','<android.media.MediaRouter: void dispatchRouteChanged(android.media.MediaRouter$RouteInfo)>','<android.app.SearchManager: void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect)>','<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.content.PackageHelper: boolean finalizeSdDir(java.lang.String)>','<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>','<com.android.internal.os.BatteryStatsImpl$Counter: void readSummaryFromParcelLocked(android.os.Parcel)>','<android.opengl.GLLogWrapper: boolean glIsRenderbufferOES(int)>','<android.net.wifi.WifiStateMachine$1: void <init>(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback)>','<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>','<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>','<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>','<com.android.server.StatusBarManagerService$1: void run()>','<android.app.ActivityOptions: void abort(android.os.Bundle)>','<android.net.nsd.DnsSdTxtRecord: void <init>()>','<android.net.wifi.WifiMonitor$MonitorThread: void <init>(android.net.wifi.WifiMonitor)>','<com.android.internal.content.PackageMonitor: void onBeginPackageChanges()>','<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>','<android.app.IUiModeManager$Stub: android.os.IBinder asBinder()>','<android.opengl.GLLogWrapper: void glDrawTexivOES(java.nio.IntBuffer)>','<android.nfc.tech.IsoDep: void setTimeout(int)>','<android.view.Window: android.content.Context access$000(android.view.Window)>','<android.content.Intent: void <init>(android.content.Intent)>','<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void reset(boolean)>','<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>','<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>','<com.android.vcard.VCardConfig: int getNameOrderType(int)>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForDataConnectionAttached(android.os.Handler)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$1002(com.android.internal.policy.impl.KeyguardUpdateMonitor,java.lang.CharSequence)>','<android.widget.ArrayAdapter: void addAll(java.util.Collection)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void <init>(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<android.filterfw.core.FrameFormat: int getValuesPerSample()>','<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>','<android.net.wifi.WifiNative: java.lang.String startWpsPinDisplay(java.lang.String)>','<com.android.internal.telephony.cat.Tone: com.android.internal.telephony.cat.Tone valueOf(java.lang.String)>','<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri)>','<android.bluetooth.BluetoothA2dp: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.sip.ISipService$Stub: void <init>()>','<android.view.View: void setMeasuredDimension(int,int)>','<android.media.MediaRecorder$EventHandler: void handleMessage(android.os.Message)>','<android.view.ViewRootImpl$1$1: void <init>(android.view.ViewRootImpl$1)>','<android.webkit.WebViewInputDispatcher: void access$300(android.webkit.WebViewInputDispatcher,boolean)>','<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>','<com.android.internal.net.LegacyVpnInfo$1: com.android.internal.net.LegacyVpnInfo[] newArray(int)>','<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>','<android.widget.ListPopupWindow$DropDownListView: boolean hasFocus()>','<com.android.server.ConnectivityService: void access$100(com.android.server.ConnectivityService,java.lang.String)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: int getOpacity()>','<android.accounts.OperationCanceledException: void <init>(java.lang.String)>','<android.widget.ArrayAdapter$ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)>','<android.text.SpannableStringBuilder: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>','<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>','<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>','<android.os.StrictMode: void noteSlowCall(java.lang.String)>','<android.content.res.ColorStateList$1: android.content.res.ColorStateList[] newArray(int)>','<android.widget.AbsListView: void setTextFilterEnabled(boolean)>','<android.view.SurfaceView$4: void setSizeFromLayout()>','<android.animation.ValueAnimator: void setCurrentPlayTime(long)>','<com.android.internal.telephony.PhoneProxy: void unregisterForServiceStateChanged(android.os.Handler)>','<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getLoadingView()>','<android.content.IOnPrimaryClipChangedListener$Stub: void <init>()>','<android.view.View: float getAlpha()>','<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<android.os.ParcelFileDescriptor: int describeContents()>','<android.net.http.Headers: void setLastModified(java.lang.String)>','<com.android.internal.view.IInputContextCallback$Stub: void <init>()>','<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void setOwnerInfo(java.lang.CharSequence)>','<android.server.BluetoothService: boolean changeApplicationBluetoothState(boolean,android.bluetooth.IBluetoothStateChangeCallback,android.os.IBinder)>','<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1)>','<android.telephony.cdma.CdmaCellLocation: boolean isEmpty()>','<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>','<android.content.pm.VerifierInfo: void <init>(android.os.Parcel,android.content.pm.VerifierInfo$1)>','<android.app.ActivityOptions$1$1: void <init>(android.app.ActivityOptions$1)>','<android.webkit.WebView: int computeHorizontalScrollOffset()>','<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()>','<android.os.storage.StorageVolume: int getStorageId()>','<android.hardware.Sensor: float getPower()>','<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>','<android.media.AudioService: boolean isMasterMute()>','<com.android.internal.policy.impl.GlobalActions: com.android.internal.policy.impl.GlobalActions$ToggleAction$State access$400(com.android.internal.policy.impl.GlobalActions)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>','<android.content.ContentProviderOperation: int getType()>','<android.app.IInstrumentationWatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$2100(android.bluetooth.BluetoothDeviceProfileState,java.lang.String)>','<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.android.internal.widget.ScrollingTabContainerView,com.android.internal.widget.ScrollingTabContainerView$1)>','<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>','<com.android.uiautomator.core.UiDevice: void resetWatcherTriggers()>','<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>','<android.view.View: int computeVerticalScrollRange()>','<android.app.ContextImpl$17: java.lang.Object createService(android.app.ContextImpl)>','<android.net.InterfaceConfiguration: boolean hasFlag(java.lang.String)>','<android.net.wifi.WifiStateMachine: void <init>(android.content.Context,java.lang.String)>','<com.android.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)>','<com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats getService()>','<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>','<com.android.internal.telephony.gsm.GsmCallTracker: void handlePollCalls(android.os.AsyncResult)>','<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.content.IClipboard$Stub$Proxy: void setPrimaryClip(android.content.ClipData)>','<android.net.sip.ISipSession$Stub: android.os.IBinder asBinder()>','<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>','<com.android.server.wm.WindowState: boolean isFullscreen(int,int)>','<android.preference.PreferenceFragment$3: boolean onKey(android.view.View,int,android.view.KeyEvent)>','<android.view.View: void forceLayout()>','<android.app.IActivityManager$WaitResult: int describeContents()>','<android.util.Patterns: void <clinit>()>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>','<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>','<android.test.IsolatedContext$MockAccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>','<android.net.wifi.WifiStateMachine: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>','<android.inputmethodservice.InputMethodService: void updateInputViewShown()>','<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>','<android.content.pm.IPackageInstallObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>','<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>','<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>','<android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>','<android.webkit.WebViewClassic: void onOverScrolled(int,int,boolean,boolean)>','<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri)>','<com.android.internal.telephony.SmsMessageBase: boolean isEmail()>','<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>','<android.preference.PreferenceManager: void addPreferencesScreen(android.content.DialogInterface)>','<android.content.SyncManager$SyncHandler: android.os.PowerManager$WakeLock access$1000(android.content.SyncManager$SyncHandler,android.accounts.Account,java.lang.String)>','<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>','<android.graphics.PixelFormat: boolean formatHasAlpha(int)>','<android.view.ViewPropertyAnimator: java.util.HashMap access$800(android.view.ViewPropertyAnimator)>','<com.android.internal.widget.SlidingTab$2: void onAnimationRepeat(android.view.animation.Animation)>','<android.view.KeyCharacterMap: char getDisplayLabel(int)>','<com.android.server.wm.DragState: void broadcastDragStartedLw(float,float)>','<com.android.server.am.BroadcastFilter: java.lang.String toString()>','<com.android.server.MountService: java.util.concurrent.CountDownLatch access$1800(com.android.server.MountService)>','<android.webkit.SslErrorHandler: void cancel()>','<android.bluetooth.BluetoothHeadset$1: void <init>(android.bluetooth.BluetoothHeadset)>','<android.inputmethodservice.Keyboard: void setKeyHeight(int)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: void <init>()>','<android.view.SurfaceView$MyWindow: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>','<android.os.Parcel: void readBinderList(java.util.List)>','<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()>','<com.android.internal.util.StateMachine$ProcessedMessages: com.android.internal.util.StateMachine$ProcessedMessageInfo get(int)>','<android.widget.ZoomButtonsController: boolean isVisible()>','<com.android.server.connectivity.Tethering$StateReceiver: void <init>(com.android.server.connectivity.Tethering,com.android.server.connectivity.Tethering$1)>','<android.accounts.AccountManagerService: void clearPassword(android.accounts.Account)>','<com.android.server.AlarmManagerService: java.util.ArrayList access$1000(com.android.server.AlarmManagerService)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: boolean processMessage(android.os.Message)>','<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$State getState()>','<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onRefreshBatteryInfo(boolean,boolean,int)>','<android.widget.AbsListView: boolean access$2800(android.widget.AbsListView,int,int,int,int,int,int,int,int,boolean)>','<android.net.wifi.WifiNative: java.lang.String signalPoll()>','<android.inputmethodservice.KeyboardView$SwipeTracker: float getYVelocity()>','<android.app.ProgressDialog: int getSecondaryProgress()>','<android.database.sqlite.SQLiteConnection: java.lang.String access$300(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: boolean processMessage(android.os.Message)>','<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>','<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>','<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>','<android.widget.AbsListView$FlingRunnable: void flywheelTouch()>','<android.webkit.ZoomManager: android.view.ScaleGestureDetector getMultiTouchGestureDetector()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>','<com.android.server.am.BroadcastFilter: void dumpBrief(java.io.PrintWriter,java.lang.String)>','<android.view.animation.Animation: int getRepeatMode()>','<android.database.CursorWrapper: long getLong(int)>','<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>','<com.android.internal.telephony.cdma.CDMAPhone: java.util.List getPendingMmiCodes()>','<com.android.server.InputMethodManagerService$ClientState: void <init>(com.android.server.InputMethodManagerService,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>','<android.accounts.AccountManagerService: void onServiceChanged(java.lang.Object,boolean)>','<android.provider.ContactsContract$QuickContact: void <init>()>','<android.widget.TextView$SavedState: void <init>(android.os.Parcel,android.widget.TextView$1)>','<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.renderscript.Element: android.renderscript.Element createUser(android.renderscript.RenderScript,android.renderscript.Element$DataType)>','<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>','<android.view.View: boolean isRootNamespace()>','<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[])>','<android.telephony.PhoneStateListener$1: void onSignalStrengthChanged(int)>','<com.android.server.am.PendingIntentRecord$Key: int hashCode()>','<android.net.wifi.WifiApConfigStore$InactiveState: boolean processMessage(android.os.Message)>','<android.widget.TextView: boolean didTouchFocusSelect()>','<android.view.KeyEvent: int getKeyboardDevice()>','<android.webkit.WebSettingsClassic: boolean enableSmoothTransition()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isRadioOn()>','<com.android.server.am.UriPermissionOwner$ExternalToken: com.android.server.am.UriPermissionOwner getOwner()>','<android.webkit.CallbackProxy$4: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<com.android.server.input.InputManagerService: void setDisplayOrientation(int,int,int)>','<android.net.http.AndroidHttpClient$2: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.database.AbstractWindowedCursor: int getInt(int)>','<android.nfc.NdefMessage$1: void <init>()>','<android.net.wifi.WifiNative: boolean p2pServDiscCancelReq(java.lang.String)>','<android.webkit.WebViewCore$EventHub: boolean dispatchWebKitEvent(android.webkit.WebViewInputDispatcher,android.view.MotionEvent,int,int)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.util.SparseLongArray: android.util.SparseLongArray clone()>','<android.net.LinkCapabilities$1: android.net.LinkCapabilities[] newArray(int)>','<com.android.internal.policy.impl.PatternUnlockScreen: com.android.internal.widget.LockPatternUtils access$400(com.android.internal.policy.impl.PatternUnlockScreen)>','<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>','<android.provider.Telephony$Sms$Inbox: void <init>()>','<android.net.wifi.WifiApConfigStore$ActiveState: void enter()>','<com.android.server.NetworkManagementService: void access$200(com.android.server.NetworkManagementService)>','<com.android.internal.policy.impl.KeyguardViewManager: void onScreenTurnedOff()>','<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>','<com.android.vcard.VCardParserImpl_V30: void handleType(com.android.vcard.VCardProperty,java.lang.String)>','<com.android.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)>','<android.widget.AbsoluteLayout: void onMeasure(int,int)>','<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>','<android.widget.ScrollView: int getMaxScrollAmount()>','<android.app.QueuedWork: void <clinit>()>','<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>','<android.widget.ProgressBar: void postInvalidate()>','<android.webkit.AccessibilityInjector$CallbackHandler: void onResult(java.lang.String,java.lang.String)>','<com.android.internal.telephony.DataConnection$FailCause: com.android.internal.telephony.DataConnection$FailCause valueOf(java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: void access$7300(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.inputmethodservice.InputMethodService$Insets: void <init>()>','<android.database.sqlite.SQLiteDebug: void <clinit>()>','<com.android.server.EventLogTags: void writeNotificationCancelAll(java.lang.String,int,int)>','<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void refreshDate()>','<android.opengl.GLLogWrapper: void glDepthRangex(int,int)>','<android.net.Proxy: void <init>()>','<android.preference.Preference: void setSummary(java.lang.CharSequence)>','<android.app.backup.IRestoreObserver$Stub: android.os.IBinder asBinder()>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)>','<com.android.internal.widget.PointerLocationView$PointerState: int access$1100(com.android.internal.widget.PointerLocationView$PointerState)>','<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOff(int)>','<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float,float)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionSpanComparator: void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1)>','<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)>','<android.text.StaticLayout: void prepare()>','<com.android.internal.telephony.DataConnectionAc: int rspCid(android.os.Message)>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: void <clinit>()>','<android.content.res.AssetFileDescriptor: long getDeclaredLength()>','<android.text.method.ArrowKeyMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>','<com.android.internal.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()>','<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>','<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onFinishFinalAnimation()>','<android.net.IConnectivityManager$Stub$Proxy: void setPolicyDataEnable(int,boolean)>','<android.view.View: void setOverScrollMode(int)>','<android.speech.tts.TextToSpeech: java.util.Map access$600(android.speech.tts.TextToSpeech)>','<android.animation.ObjectAnimator: java.lang.String toString()>','<com.android.internal.statusbar.StatusBarIcon: void <init>(android.os.Parcel)>','<android.telephony.SmsMessage: boolean isMwiDontStore()>','<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopSensor(int)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs: void <init>(com.android.internal.telephony.IccCard$State)>','<android.widget.TextView: boolean getShowSoftInputOnFocus()>','<android.view.View: boolean isActivated()>','<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>','<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>','<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>','<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>','<android.view.inputmethod.BaseInputConnection: void <clinit>()>','<com.android.internal.telephony.sip.SipCommandInterface: void sendUSSD(java.lang.String,android.os.Message)>','<android.view.AccessibilityIterators: void <init>()>','<com.android.server.AppWidgetService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.AbsListView: int computeVerticalScrollRange()>','<android.net.sip.SipSession: void setListener(android.net.sip.SipSession$Listener)>','<android.net.LinkAddress: void <init>(java.net.InterfaceAddress)>','<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()>','<android.nfc.Tag: android.nfc.Tag rediscover()>','<android.widget.AutoCompleteTextView: void showDropDown()>','<android.app.LoaderManagerImpl: void doStop()>','<com.android.internal.telephony.CallTracker: void pollCallsAfterDelay()>','<android.widget.TextView: void onFinishTemporaryDetach()>','<android.view.View: void setScaleY(float)>','<android.net.wifi.WifiStateMachine$DriverLoadingState: boolean processMessage(android.os.Message)>','<android.os.Bundle: void <init>(android.os.Bundle)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getMeid()>','<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>','<android.webkit.WebViewClassic: android.webkit.ViewManager getViewManager()>','<android.media.AudioService$SoundPoolListenerThread: void <init>(android.media.AudioService)>','<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>','<com.android.server.AppWidgetServiceImpl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.accessibilityservice.UiTestAutomationBridge: boolean isConnected()>','<com.android.vcard.VCardUtils: java.lang.String parseQuotedPrintable(java.lang.String,boolean,java.lang.String,java.lang.String)>','<android.os.StrictMode$StrictModeViolation: void <init>(int,int,java.lang.String)>','<android.widget.MediaController: boolean access$100(android.widget.MediaController)>','<android.content.IContentService$Stub$Proxy: void cancelSync(android.accounts.Account,java.lang.String)>','<android.os.FileUtils: void <init>()>','<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>','<android.text.TextUtils$Reverser: void getChars(int,int,char[],int)>','<android.net.wifi.WifiInfo: void setSupplicantState(java.lang.String)>','<com.android.server.LightsService$Light: void setColor(int)>','<android.content.res.AssetManager: int access$700(android.content.res.AssetManager,int,byte[],int,int)>','<android.opengl.GLLogWrapper: void glDrawTexsOES(short,short,short,short,short)>','<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>','<android.security.SystemKeyStore: java.lang.String toHexString(byte[])>','<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: void <init>()>','<android.bluetooth.BluetoothDeviceProfileState: void access$5100(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.accounts.AccountManager: java.lang.Exception access$400(android.accounts.AccountManager,int,java.lang.String)>','<com.android.internal.telephony.BaseCommands: void unregisterForT53ClirInfo(android.os.Handler)>','<android.app.ActivityThread$NewIntentData: java.lang.String toString()>','<com.android.internal.telephony.SMSDispatcher$SmsTracker: void <init>(java.util.HashMap,android.app.PendingIntent,android.app.PendingIntent,java.lang.String,java.lang.String)>','<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceQuota(java.lang.String,long)>','<android.content.SyncResult: boolean hasHardError()>','<com.android.server.location.GpsLocationProvider: void access$400(com.android.server.location.GpsLocationProvider,android.content.Intent)>','<com.android.uiautomator.core.InteractionController: boolean clickAndWaitForNewWindow(int,int,long)>','<android.content.pm.PermissionInfo: java.lang.String toString()>','<android.location.ILocationProvider$Stub$Proxy: java.lang.String getInternalState()>','<android.view.MotionEvent: long getEventTimeNano()>','<com.android.server.LocationManagerService$2: void onPackageAdded(java.lang.String,int)>','<android.net.DhcpInfo: void <clinit>()>','<android.view.ViewRootImpl$2: android.graphics.Canvas lockCanvas()>','<android.app.PendingIntent: boolean isActivity()>','<android.view.View$MeasureSpec: void <init>()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree access$2402(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree)>','<com.android.internal.telephony.gsm.GSMPhone: void notifyPhoneStateChanged()>','<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>','<android.view.View: int getId()>','<android.database.sqlite.SQLiteDatabase: long getPageSize()>','<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.database.CursorToBulkCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>','<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>','<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)>','<android.renderscript.RenderScript$Priority: void <clinit>()>','<android.widget.ScrollBarDrawable: java.lang.String toString()>','<android.server.BluetoothService: android.util.Pair getDeviceOutOfBandData(android.bluetooth.BluetoothDevice)>','<android.view.View$6: java.lang.Float get(android.view.View)>','<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.view.View: void setNextFocusRightId(int)>','<android.opengl.GLLogWrapper: boolean glIsFramebufferOES(int)>','<android.app.LoaderManagerImpl: void finishRetain()>','<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>','<android.widget.AdapterViewAnimator: void showOnly(int,boolean)>','<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getPDPContextList(android.os.Message)>','<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>','<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>','<android.provider.ContactsContract$StatusUpdates: void <init>(android.provider.ContactsContract$1)>','<android.app.BackStackRecord: int getId()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasNationalNumber()>','<android.os.IPowerManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.MediaPlayer$EventHandler: void <init>(android.media.MediaPlayer,android.media.MediaPlayer,android.os.Looper)>','<android.net.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>','<android.widget.FrameLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>','<com.android.internal.util.FastXmlSerializer: void entityRef(java.lang.String)>','<android.os.UEventObserver$UEvent: void <init>(java.lang.String)>','<android.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)>','<android.webkit.WebViewCore$EventHub$1: void <init>(android.webkit.WebViewCore$EventHub)>','<com.android.server.WifiService: int access$3000(com.android.server.WifiService)>','<com.android.server.pm.Settings: void <init>()>','<android.widget.ProgressBar: void onDetachedFromWindow()>','<android.webkit.DeviceMotionService: void onSensorChanged(android.hardware.SensorEvent)>','<com.android.internal.widget.ActionBarView: int access$1400(com.android.internal.widget.ActionBarView)>','<com.android.server.pm.PackageManagerService: java.lang.String cidFromCodePath(java.lang.String)>','<android.content.res.XmlBlock$Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>','<com.android.server.sip.SipSessionGroup: void processIOException(javax.sip.IOExceptionEvent)>','<android.app.ActivityThread: void access$900(android.app.ActivityThread,android.os.IBinder,boolean,int)>','<android.server.BluetoothBondState: void attempt(java.lang.String)>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>','<android.app.ContextImpl$30: java.lang.Object createStaticService()>','<com.android.server.pm.Installer: int moveFiles()>','<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>','<android.view.ViewGroup$ViewLocationHolder: int compareTo(android.view.ViewGroup$ViewLocationHolder)>','<android.database.BulkCursorProxy: android.os.Bundle getExtras()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>','<com.android.internal.telephony.PhoneFactory: void makeDefaultPhones(android.content.Context)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>','<android.view.IWindowManager$Stub$Proxy: int getPendingAppTransition()>','<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<com.android.server.wm.DragState: void unregister()>','<com.android.internal.os.SamplingProfilerIntegration$1: java.lang.Thread newThread(java.lang.Runnable)>','<com.android.internal.widget.DrawableHolder: void <clinit>()>','<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>','<com.android.server.ConnectivityService: void access$1900(com.android.server.ConnectivityService,boolean)>','<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>','<android.app.SearchDialog: void setListSelection(int)>','<android.media.MediaRouter$RouteGroup: void requestUpdateVolume(int)>','<android.text.method.TextKeyListener: int getInputType()>','<com.android.internal.telephony.sip.SipPhone: void stopDtmf()>','<android.app.FragmentManager: void <init>()>','<android.view.View: boolean hasOverlappingRendering()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getTcpBytesSent(int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: boolean getMute()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()>','<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)>','<android.graphics.Matrix: void <init>()>','<android.content.res.Resources: android.content.res.Resources getSystem()>','<com.android.internal.telephony.cat.FontSize: com.android.internal.telephony.cat.FontSize[] values()>','<com.android.server.usb.UsbDeviceManager: boolean access$900(com.android.server.usb.UsbDeviceManager)>','<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)>','<android.app.Fragment: void performDestroyView()>','<android.net.wifi.WifiStateMachine$ConnectModeState: void enter()>','<android.nfc.tech.NfcB: byte[] transceive(byte[])>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: int getOpacity()>','<android.nfc.NdefRecord: byte[] toByteArray()>','<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(int,java.lang.String)>','<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>','<com.android.server.am.AppNotRespondingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>','<android.webkit.WebViewClassic: void setHTML5VideoViewProxy(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>','<android.content.PeriodicSync$1: android.content.PeriodicSync[] newArray(int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void <init>(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<com.android.internal.telephony.PhoneProxy: void unregisterForRedirectedNumberInfo(android.os.Handler)>','<android.renderscript.RenderScript: void nScriptSetVarJ(int,int,long)>','<android.server.BluetoothService$Reaper: void <init>(android.server.BluetoothService,int,int)>','<com.android.server.wm.WindowManagerService: android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams,int)>','<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>','<android.webkit.WebSettingsClassic: java.lang.String getPluginsPath()>','<com.android.server.net.NetworkPolicyManagerService: void access$400(com.android.server.net.NetworkPolicyManagerService)>','<android.webkit.WebViewClassic: void access$700(android.webkit.WebViewClassic)>','<android.webkit.WebViewClassic$InvokeListBox$3: void <init>(android.webkit.WebViewClassic$InvokeListBox)>','<com.android.server.ConnectivityService: void access$2100(com.android.server.ConnectivityService,int,boolean)>','<android.content.IClipboard$Stub: void <init>()>','<com.android.vcard.VCardUtils: boolean isMobilePhoneLabel(java.lang.String)>','<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>','<android.animation.LayoutTransition: long access$700(android.animation.LayoutTransition)>','<com.android.server.pm.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>','<com.android.internal.util.TypedProperties: void <init>()>','<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)>','<android.content.Loader: void onStopLoading()>','<android.view.View: int getPaddingLeft()>','<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>','<android.webkit.WebView: java.lang.String getOriginalUrl()>','<android.app.IUiModeManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>','<android.app.BackStackRecord: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>','<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)>','<android.database.BulkCursorToCursorAdaptor: void deactivate()>','<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()>','<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()>','<android.content.ISyncAdapter$Stub$Proxy: void <init>(android.os.IBinder)>','<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()>','<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>','<android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>','<android.server.BluetoothAdapterStateMachine: void access$5200(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.content.res.AssetFileDescriptor$1: android.content.res.AssetFileDescriptor[] newArray(int)>','<android.media.MediaPlayer: void setVideoScalingMode(int)>','<com.android.server.pm.UserManager: void removePackageForAllUsers(java.lang.String)>','<android.os.IVibratorService$Stub: android.os.IVibratorService asInterface(android.os.IBinder)>','<android.bluetooth.IBluetoothHealthCallback$Stub: android.bluetooth.IBluetoothHealthCallback asInterface(android.os.IBinder)>','<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPairingConfirmation(java.lang.String,boolean)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>','<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>','<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List access$1400(com.android.server.InputMethodManagerService$InputMethodSettings)>','<com.android.internal.telephony.PhoneBase: void queryTTYMode(android.os.Message)>','<android.view.ViewGroup: boolean hasFocus()>','<android.widget.AbsListView: void requestLayoutIfNecessary()>','<android.app.Activity: void makeVisible()>','<android.net.http.RequestQueue: void dump()>','<com.android.internal.telephony.PhoneBase: void exitEmergencyCallbackMode()>','<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<com.android.internal.telephony.cdma.RuimFileHandler: void finalize()>','<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumHeight()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textStartsWith(java.lang.String)>','<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>','<android.webkit.CallbackProxy$UploadFile: void onReceiveValue(java.lang.Object)>','<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>','<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>','<com.android.internal.telephony.WspTypeDecoder: boolean seekXWapApplicationId(int,int)>','<android.util.StateSet: int[] trimStateSet(int[],int)>','<android.view.IApplicationToken$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.BaseCommands: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>','<android.view.GLES20RecordingCanvas: void drawLine(float,float,float,float,android.graphics.Paint)>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>','<android.bluetooth.IBluetooth$Stub: void <init>()>','<android.text.style.SuggestionSpan: int hashCode()>','<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.opengl.GLLogWrapper: void glMultMatrixf(float[],int)>','<android.server.BluetoothBondState: void addAutoPairingFailure(java.lang.String)>','<android.app.FragmentManagerImpl: void dispatchStart()>','<com.android.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>','<android.os.INetworkManagementService$Stub$Proxy: void detachPppd(java.lang.String)>','<android.content.ContentQueryMap: void requery()>','<com.android.internal.telephony.PhoneBase: void unregisterForPreciseCallStateChanged(android.os.Handler)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>','<android.opengl.GLLogWrapper: void glBlendFuncSeparate(int,int,int,int)>','<android.webkit.CacheManager: void saveCacheFile(java.lang.String,long,android.webkit.CacheManager$CacheResult)>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.EncodeException: void <init>(char)>','<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataActivity(int)>','<android.graphics.drawable.GradientDrawable$GradientState: float access$402(android.graphics.drawable.GradientDrawable$GradientState,float)>','<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)>','<android.view.ActionMode: java.lang.Object getTag()>','<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void killAllBackgroundProcesses()>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>','<android.text.SpannableStringInternal: char charAt(int)>','<com.android.internal.view.menu.MenuItemImpl: java.lang.String toString()>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>','<com.android.internal.telephony.PhoneBase: void unregisterForNumberInfo(android.os.Handler)>','<android.view.ViewConfiguration: int getHoverTapSlop()>','<com.android.server.net.NetworkStatsService$3: void <init>(com.android.server.net.NetworkStatsService)>','<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>','<android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>','<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>','<android.bluetooth.BluetoothPbap: int getState()>','<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>','<android.webkit.Plugin: java.lang.String getFileName()>','<android.content.res.XmlBlock: int access$1200(int)>','<android.net.RouteInfo$1: void <init>()>','<android.net.LocalSocketImpl: java.lang.String toString()>','<android.net.NetworkPolicy: int compareTo(java.lang.Object)>','<android.accounts.AccountManager$AmsTask: void set(java.lang.Object)>','<android.widget.Editor: void onDetachedFromWindow()>','<android.net.NetworkUtils: int inetAddressToInt(java.net.InetAddress)>','<android.content.res.StringBlock$StyleIDs: int access$100(android.content.res.StringBlock$StyleIDs)>','<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>','<android.content.SyncStatusInfo: void writeToParcel(android.os.Parcel,int)>','<android.location.CountryDetector$ListenerTransport$1: void <init>(android.location.CountryDetector$ListenerTransport,android.location.Country)>','<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()>','<com.android.internal.widget.WaveView$2: void run()>','<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>','<android.app.FragmentManagerImpl$5: void onAnimationEnd(android.animation.Animator)>','<android.filterfw.core.Frame: void setReusable(boolean)>','<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>','<android.widget.RemoteViews$ViewPaddingAction: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.os.AtomicFile: void <init>(java.io.File)>','<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()>','<com.android.server.LocationManagerService$LpPowerComparator: int compare(java.lang.Object,java.lang.Object)>','<android.net.http.AndroidHttpClientConnection: java.lang.String toString()>','<android.view.inputmethod.CompletionInfo: void <init>(android.os.Parcel,android.view.inputmethod.CompletionInfo$1)>','<com.android.vcard.VCardParserImpl_V40: void <init>()>','<android.server.BluetoothAdapterStateMachine: void access$6900(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.widget.ActionBarView: void setDisplayOptions(int)>','<android.graphics.BitmapFactory$Options: void requestCancelDecode()>','<android.media.IAudioService$Stub$Proxy: void setMasterMute(boolean,int,android.os.IBinder)>','<android.bluetooth.BluetoothDevice: boolean isBluetoothDock()>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: boolean hasNext()>','<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>','<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager$CacheResult)>','<android.net.Uri$StringUri: java.lang.String getFragment()>','<com.android.server.wm.WindowManagerService: void createWatermark()>','<android.text.style.AbsoluteSizeSpan: int describeContents()>','<android.widget.ImageView: void setImageAlpha(int)>','<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>','<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()>','<android.location.ILocationProvider$Stub$Proxy: void disable()>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: void dispose()>','<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>','<android.graphics.Path$Direction: void <clinit>()>','<android.graphics.Point: void negate()>','<android.webkit.OverScrollGlow: boolean drawEdgeGlows(android.graphics.Canvas)>','<android.widget.AbsListView: int findClosestMotionRow(int)>','<android.net.wifi.p2p.WifiP2pGroup: void addClient(java.lang.String)>','<com.android.internal.os.ProcessStats: int countWorkingStats()>','<android.view.View: void scrollBy(int,int)>','<android.app.AlertDialog$Builder: android.content.Context getContext()>','<android.os.Parcel: void writeString(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void unregisterForResendIncallMute(android.os.Handler)>','<android.app.SearchableInfo: int getLabelId()>','<android.filterfw.core.GLFrame: void generateMipMap()>','<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>','<android.net.ProxyProperties: void <init>(java.lang.String,int,java.lang.String,java.lang.String[],android.net.ProxyProperties$1)>','<android.filterfw.core.NativeFrame: void releaseNativeAllocation()>','<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>','<com.android.internal.view.menu.MenuPopupHelper: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<com.android.server.pm.PackageManagerService: void access$700(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>','<com.android.internal.util.StateMachine$SmHandler: android.os.Message access$900(com.android.internal.util.StateMachine$SmHandler)>','<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>','<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>','<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>','<com.android.server.NsdService: java.lang.String access$000(int)>','<android.hardware.ISerialManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.sip.SipException: void <init>(java.lang.String)>','<com.android.internal.telephony.DataConnection: void bringUp(android.os.Message,com.android.internal.telephony.ApnSetting)>','<com.android.internal.telephony.sip.SipConnectionBase: long getDisconnectTime()>','<android.database.sqlite.SQLiteConnection$PreparedStatementCache: void <init>(android.database.sqlite.SQLiteConnection,int)>','<android.widget.PopupWindow: void setAllowScrollingAnchorParent(boolean)>','<com.android.internal.telephony.cat.CatLog: void <init>()>','<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$1102(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<android.graphics.drawable.StateListDrawable: void <init>()>','<com.android.server.sip.SipService: java.lang.String access$1500(com.android.server.sip.SipService)>','<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>','<android.filterfw.core.GLFrame: void reset(android.filterfw.core.FrameFormat)>','<com.android.server.am.UsageStatsService: void monitorPackages()>','<android.bluetooth.BluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)>','<android.app.backup.BackupManager: void dataChanged()>','<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>','<com.android.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.android.internal.view.menu.MenuItemImpl)>','<com.android.server.PowerManagerService: boolean access$6600(com.android.server.PowerManagerService,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchHoverEvent(android.view.MotionEvent)>','<android.view.KeyEvent: boolean isPrintingKey()>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributeType(int)>','<android.view.ViewGroup: void dispatchGetDisplayList()>','<android.os.WorkSource: android.os.WorkSource addReturningNewbs(android.os.WorkSource)>','<android.net.rtp.AudioCodec: void <clinit>()>','<android.net.http.Headers: java.lang.String getWwwAuthenticate()>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage newFromCMT(java.lang.String[])>','<android.view.accessibility.AccessibilityInteractionClient: void <clinit>()>','<android.security.IKeyChainService$Stub: void <init>()>','<android.view.View: void resolveTextDirection()>','<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>','<android.view.ViewRootImpl: void recomputeViewAttributes(android.view.View)>','<android.opengl.Matrix: float length(float,float,float)>','<android.content.res.AssetFileDescriptor: long getStartOffset()>','<com.android.internal.telephony.DataConnection: void access$1800(com.android.internal.telephony.DataConnection,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void registerForT53AudioControlInfo(android.os.Handler,int,java.lang.Object)>','<android.view.InflateException: void <init>(java.lang.Throwable)>','<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void <init>(android.util.Pair,android.os.IBinder)>','<android.accounts.AccountManager$11: void <init>(android.accounts.AccountManager,android.accounts.AccountManagerCallback,android.accounts.AccountManagerFuture)>','<android.database.CharArrayBuffer: void <init>(char[])>','<android.widget.ArrayAdapter: void sort(java.util.Comparator)>','<android.graphics.RectF: boolean intersects(float,float,float,float)>','<android.view.Display: void getSize(android.graphics.Point)>','<com.android.uiautomator.core.InteractionController: boolean scrollSwipe(int,int,int,int,int)>','<android.net.http.AndroidHttpClient: void <clinit>()>','<com.android.internal.telephony.cdma.CDMAPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.sip.SipProfile: java.lang.String getPassword()>','<com.android.internal.view.menu.MenuPopupHelper: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>','<android.hardware.input.IInputManager$Stub$Proxy: boolean injectInputEvent(android.view.InputEvent,int)>','<android.text.style.BackgroundColorSpan: int describeContents()>','<android.net.NetworkStats: int describeContents()>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>','<android.content.ContentProvider: int access$000(android.content.ContentProvider)>','<com.android.internal.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)>','<com.android.internal.telephony.cdma.EriManager$EriDisplayInformation: java.lang.String toString()>','<android.widget.ZoomControls: void <init>(android.content.Context)>','<android.content.pm.ConfigurationInfo: void <init>()>','<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()>','<android.nfc.NfcAdapter: void disableForegroundDispatchInternal(android.app.Activity,boolean)>','<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)>','<com.android.internal.policy.impl.PhoneWindowManager: int interceptMotionBeforeQueueingWhenScreenOff(int)>','<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor clear()>','<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>','<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.server.pm.PackageManagerService$1: void <init>(com.android.server.pm.PackageManagerService,long,android.content.pm.IPackageDataObserver)>','<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>','<com.android.server.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String)>','<com.android.server.connectivity.Tethering: java.lang.String[] access$3400(com.android.server.connectivity.Tethering)>','<android.view.View$11: void setValue(android.view.View,float)>','<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>','<android.os.StrictMode$AndroidBlockGuardPolicy: int getPolicyMask()>','<com.android.internal.telephony.BaseCommands: void unregisterForNotAvailable(android.os.Handler)>','<android.nfc.NdefRecord: android.nfc.NdefRecord createExternal(java.lang.String,java.lang.String,byte[])>','<android.os.RemoteCallback: int hashCode()>','<com.android.internal.telephony.AdnRecord: void setEmails(java.lang.String[])>','<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>','<com.android.internal.app.AlertController$AlertParams: void <init>(android.content.Context)>','<android.app.SharedPreferencesImpl: boolean contains(java.lang.String)>','<android.webkit.WebViewInputDispatcher$DispatchEventQueue: android.webkit.WebViewInputDispatcher$DispatchEvent dequeue()>','<android.location.Address: java.lang.String access$602(android.location.Address,java.lang.String)>','<com.android.internal.telephony.cat.SelectItemParams: boolean setIcon(android.graphics.Bitmap)>','<android.app.ApplicationPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>','<com.android.server.DevicePolicyManagerService: void validateQualityConstant(int)>','<android.view.View: void setAccessibilityCursorPosition(int)>','<com.android.vcard.VCardParser_V21: void parse(java.io.InputStream)>','<android.widget.HorizontalScrollView: int getMaxScrollAmount()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: boolean exactlySameAs(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>','<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>','<android.view.IWindowSession$Stub$Proxy: void dragRecipientEntered(android.view.IWindow)>','<android.media.AudioManager: void unregisterMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.os.RecoverySystem$1: void onReceive(android.content.Context,android.content.Intent)>','<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>','<android.widget.SpellChecker$SpellParser: boolean isFinished()>','<android.server.BluetoothInputProfileHandler: int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCall getRingingCall()>','<android.widget.Editor$EasyEditPopupWindow: void onClick(android.view.View)>','<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>','<android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)>','<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>','<android.webkit.CookieManagerClassic: void removeAllCookie()>','<android.app.Activity: void setProgressBarVisibility(boolean)>','<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>','<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>','<android.app.LoadedApk$ServiceDispatcher: int getFlags()>','<android.view.ViewDebug$5: void run()>','<android.animation.Keyframe$IntKeyframe: java.lang.Object getValue()>','<android.net.wifi.WifiConfigStore: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>','<com.android.i18n.phonenumbers.NumberParseException$ErrorType: com.android.i18n.phonenumbers.NumberParseException$ErrorType valueOf(java.lang.String)>','<android.util.MathUtils: int random(int,int)>','<com.android.internal.telephony.sip.SipPhone: void rejectCall()>','<com.android.server.InputMethodManagerService$2: void executeMessage(android.os.Message)>','<android.widget.Editor$SelectionModifierCursorController: void <init>(android.widget.Editor)>','<android.app.Notification: int describeContents()>','<com.android.internal.telephony.sip.SipPhone: java.util.List getPendingMmiCodes()>','<android.accounts.AccountManagerService$4: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,android.os.Bundle,android.accounts.Account,java.lang.String,boolean,boolean,int,boolean)>','<android.media.AudioService: void setRingerMode(int)>','<android.graphics.drawable.ClipDrawable$ClipState: boolean canConstantState()>','<android.server.BluetoothHealthProfileHandler$HealthChannel: boolean access$1402(android.server.BluetoothHealthProfileHandler$HealthChannel,boolean)>','<com.android.server.MountService$UnmountObbAction: java.lang.String toString()>','<com.android.internal.telephony.RIL: void switchWaitingOrHoldingAndActive(android.os.Message)>','<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.PhoneProxy: boolean getDataRoamingEnabled()>','<android.graphics.Picture: void draw(android.graphics.Canvas)>','<android.app.Activity: void onAttachedToWindow()>','<android.view.View: int getPaddingEnd()>','<android.app.backup.RestoreSession$RestoreObserverWrapper: void onUpdate(int,java.lang.String)>','<android.renderscript.ProgramStore: boolean isColorMaskRedEnabled()>','<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(android.content.Context,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$MyHandler: void <init>(com.android.internal.os.BatteryStatsImpl)>','<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)>','<com.android.internal.os.BinderInternal$GcWatcher: void <init>()>','<android.media.AudioManager: void forceVolumeControlStream(int)>','<android.webkit.WebSettings: boolean getUseWideViewPort()>','<android.os.Handler: boolean sendEmptyMessage(int)>','<android.util.Property: void <init>(java.lang.Class,java.lang.String)>','<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$11400(android.net.wifi.WifiStateMachine)>','<com.android.server.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo()>','<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>','<com.android.internal.telephony.cat.CommandDetails$1: com.android.internal.telephony.cat.CommandDetails[] newArray(int)>','<android.widget.ZoomButton: android.os.Handler access$200(android.widget.ZoomButton)>','<com.android.server.WifiService: android.app.AlarmManager access$1700(com.android.server.WifiService)>','<com.android.internal.database.SortCursor: void registerDataSetObserver(android.database.DataSetObserver)>','<com.android.server.net.NetworkStatsService: void access$1000(com.android.server.net.NetworkStatsService,int)>','<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.server.BluetoothService: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasInternationalPrefix()>','<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>','<com.android.server.usb.UsbService: void systemReady()>','<com.android.internal.telephony.RIL: void supplyIccPin(java.lang.String,android.os.Message)>','<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>','<android.animation.AnimatorSet$Node: android.animation.AnimatorSet$Node clone()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setAudioState(android.bluetooth.BluetoothDevice,int)>','<android.database.IContentObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.graphics.Color: int HSBtoColor(float[])>','<com.android.server.am.BatteryStatsService: void noteStopGps(int)>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: void onServiceConnected(android.os.IBinder)>','<android.webkit.DeviceMotionService: void resume()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder)>','<android.view.VelocityTracker: float getXVelocity(int)>','<android.animation.ValueAnimator: void clearAllAnimations()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.view.ViewRootImpl$W: void dispatchScreenState(boolean)>','<android.net.wifi.WifiConfigStore: void updateStatus(int,android.net.NetworkInfo$DetailedState)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)>','<android.util.MathUtils: long constrain(long,long,long)>','<android.graphics.drawable.StateListDrawable: void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1)>','<android.net.wifi.p2p.WifiP2pService: java.lang.Boolean access$4300()>','<android.app.Dialog: void onDetachedFromWindow()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isEriFileLoaded()>','<android.os.SystemProperties: void <clinit>()>','<com.android.internal.telephony.test.SimulatedGsmCallState: void handleMessage(android.os.Message)>','<com.android.internal.telephony.IccCard: void unregisterForReady(android.os.Handler)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void enterFullScreenVideo(int,java.lang.String,android.webkit.HTML5VideoViewProxy,android.webkit.WebViewClassic)>','<android.webkit.CacheManager$1: void run()>','<com.android.server.input.InputFilter: android.view.InputEventConsistencyVerifier access$100(com.android.server.input.InputFilter)>','<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>','<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>','<android.renderscript.RenderScript: void nAllocationResize1D(int,int)>','<android.view.IWindowSession$Stub: void <init>()>','<android.server.BluetoothDeviceProperties: java.lang.String getProperty(java.lang.String,java.lang.String)>','<android.view.ViewGroup: int getPersistentDrawingCache()>','<android.inputmethodservice.KeyboardView: int access$1000(android.inputmethodservice.KeyboardView)>','<android.renderscript.RenderScript: int nFileA3DGetNumIndexEntries(int)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isStatusReportMessage()>','<android.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)>','<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.vcard.VCardUtils: boolean isV21Word(java.lang.String)>','<com.android.server.location.LocationBasedCountryDetector$1: void onProviderEnabled(java.lang.String)>','<android.view.KeyEvent: int getUnicodeChar(int)>','<android.database.BulkCursorDescriptor$1: android.database.BulkCursorDescriptor createFromParcel(android.os.Parcel)>','<android.widget.Editor: boolean performLongClick(boolean)>','<android.net.nsd.DnsSdTxtRecord: void <init>(byte[])>','<com.android.internal.policy.impl.PatternUnlockScreen$4: void <clinit>()>','<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.internal.policy.impl.LockScreen: boolean access$900(com.android.internal.policy.impl.LockScreen)>','<android.database.CursorWrapper: boolean isNull(int)>','<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>','<android.net.MobileDataStateTracker: void setPolicyDataEnable(boolean)>','<android.view.View: void dispatchSetSelected(boolean)>','<com.android.server.location.LocationProviderProxy: boolean supportsAltitude()>','<android.view.Window: void setUiOptions(int)>','<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)>','<android.media.AudioService$AudioHandler$2: boolean onError(android.media.MediaPlayer,int,int)>','<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>','<com.android.internal.telephony.sip.SipPhoneBase: boolean handleInCallMmiCommands(java.lang.String)>','<android.app.SearchableInfo: java.lang.String getSuggestPackage()>','<com.android.server.am.ActivityStack: void stopIfSleepingLocked()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onKeepAliveIntervalChanged()>','<com.android.server.pm.PackageManagerService$MoveParams: void handleStartCopy()>','<android.content.IntentFilter: int countActions()>','<android.widget.AdapterView: boolean isInFilterMode()>','<android.content.pm.ManifestDigest$1: android.content.pm.ManifestDigest[] newArray(int)>','<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>','<android.text.style.QuoteSpan: int describeContents()>','<android.view.ViewGroup: android.view.View findFocus()>','<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.security.IKeyChainAliasCallback$Stub: void <init>()>','<com.android.internal.telephony.CallTracker: android.os.Message obtainNoPollCompleteMessage(int)>','<com.android.server.wm.WindowManagerService: boolean outOfMemoryWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.internal.policy.impl.FaceUnlock: void handleExposeFallback()>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskWrites()>','<android.content.pm.ActivityInfo: java.lang.String toString()>','<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>','<com.android.internal.policy.impl.LockScreen: android.content.Context access$1300(com.android.internal.policy.impl.LockScreen)>','<com.android.server.MountService: int access$100(com.android.server.MountService,java.lang.String,boolean,boolean)>','<com.android.server.location.GpsLocationProvider: java.util.ArrayList access$000(com.android.server.location.GpsLocationProvider)>','<android.opengl.GLLogWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>','<android.database.sqlite.SQLiteDatabase: int releaseMemory()>','<com.android.internal.telephony.DataConnectionAc: java.util.Collection getApnListSync()>','<com.android.internal.telephony.PhoneBase: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>','<android.content.pm.ResolveInfo$1: android.content.pm.ResolveInfo createFromParcel(android.os.Parcel)>','<android.view.KeyCharacterMap: int getModifierBehavior()>','<com.android.vcard.VCardComposer: int getCount()>','<com.android.server.wm.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)>','<android.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>','<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()>','<com.android.internal.widget.TransportControlView$SavedState$1: com.android.internal.widget.TransportControlView$SavedState[] newArray(int)>','<android.media.AudioService: int access$6702(android.media.AudioService,int)>','<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>','<com.android.server.NotificationManagerService: java.util.ArrayList access$800(com.android.server.NotificationManagerService)>','<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>','<android.content.res.AssetFileDescriptor: long getLength()>','<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>','<android.view.MotionEvent$PointerProperties: void <init>(android.view.MotionEvent$PointerProperties)>','<android.preference.Preference: void notifyDependencyChange(boolean)>','<android.view.SurfaceSession: void finalize()>','<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>','<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>','<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>','<com.android.internal.policy.impl.LockScreen$3: void <init>(com.android.internal.policy.impl.LockScreen)>','<android.os.RegistrantList: void <init>()>','<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>','<android.text.style.ScaleXSpan: void <init>(float)>','<android.os.Debug$InstructionCount: boolean resetAndStart()>','<android.nfc.NfcActivityManager: void onNdefPushComplete()>','<android.widget.AbsSpinner: int pointToPosition(int,int)>','<com.android.internal.telephony.cdma.RuimFileHandler: void loge(java.lang.String)>','<android.content.SyncQueue: void dump(java.lang.StringBuilder)>','<com.android.server.pm.PackageManagerService$9: void run()>','<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>','<com.android.internal.util.AsyncChannel: void access$600(com.android.internal.util.AsyncChannel,int)>','<com.android.server.MountService: int destroySecureContainer(java.lang.String,boolean)>','<android.opengl.GLLogWrapper: void glDrawTexxOES(int,int,int,int,int)>','<android.text.HtmlToSpannedConverter$Monospace: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.view.accessibility.AccessibilityRecord: java.util.List getText()>','<com.android.internal.telephony.cat.CatCmdMessage: void <init>(com.android.internal.telephony.cat.CommandParams)>','<android.net.http.Request: void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpHost,java.lang.String,java.io.InputStream,int,android.net.http.EventHandler,java.util.Map)>','<com.android.internal.telephony.ServiceStateTracker: boolean processPendingRadioPowerOffAfterDataOff()>','<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent$PointerCoords[],int)>','<android.webkit.WebViewClassic$RequestFormData: void <init>(android.webkit.WebViewClassic,java.lang.String,java.lang.String,android.os.Message,boolean,boolean)>','<com.android.internal.telephony.PhoneProxy: void invokeOemRilRequestRaw(byte[],android.os.Message)>','<android.graphics.RectF: void <init>(float,float,float,float)>','<com.android.internal.widget.PasswordEntryKeyboard$LatinKey: void enableShiftLock()>','<android.widget.ListPopupWindow: int getSoftInputMode()>','<com.android.server.PowerManagerService$UnsynchronizedWakeLock: void acquire()>','<com.android.internal.telephony.PhoneBase: void unregisterForCdmaOtaStatusChange(android.os.Handler)>','<android.app.admin.DeviceAdminInfo: void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)>','<com.android.uiautomator.core.UiAutomatorBridge: void addAccessibilityEventListener(com.android.uiautomator.core.UiAutomatorBridge$AccessibilityEventListener)>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void start()>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$WarmUp access$800(android.server.BluetoothAdapterStateMachine)>','<android.webkit.WebViewClassic: void access$1200(android.content.Intent)>','<android.util.Log: android.util.Log$TerribleFailureHandler setWtfHandler(android.util.Log$TerribleFailureHandler)>','<com.android.server.PowerManagerService$DockReceiver: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.util.SparseBooleanArray: boolean get(int,boolean)>','<android.database.CursorWindow: void <init>(java.lang.String)>','<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)>','<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>','<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>','<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.view.ViewRootImpl$2: void unlockCanvasAndPost(android.graphics.Canvas)>','<com.android.server.EventLogTags: void writeWatchdogVmstat(long,int,int,int,int,int)>','<com.android.server.EventLogTags: void writeWatchdogProcPss(java.lang.String,int,int)>','<com.android.server.LightsService: void access$200(int,int,int,int,int,int,int)>','<android.net.MobileDataStateTracker: boolean isAvailable()>','<android.media.AudioService: int access$6700(android.media.AudioService)>','<com.android.internal.util.ArrayUtils: int idealFloatArraySize(int)>','<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char)>','<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()>','<android.accounts.AccountManagerService$8: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String)>','<android.app.Activity: void onWindowFocusChanged(boolean)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiStopped(android.os.WorkSource)>','<android.app.Dialog: void unregisterForContextMenu(android.view.View)>','<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>','<android.content.ClipData$1: android.content.ClipData createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)>','<android.content.SyncManager$2: void onReceive(android.content.Context,android.content.Intent)>','<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>','<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>','<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)>','<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.String getTag()>','<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>','<com.android.server.StatusBarManagerService$5: void run()>','<android.view.WindowManagerImpl: void reportNewConfiguration(android.content.res.Configuration)>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>','<com.android.internal.app.ActionBarImpl: android.content.Context getThemedContext()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>','<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>','<com.android.server.AlarmManagerService: void setRepeating(int,long,long,android.app.PendingIntent)>','<android.webkit.WebViewClassic: boolean overlayVerticalScrollbar()>','<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>','<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.policy.impl.KeyguardViewManager: void reset()>','<android.net.wifi.WifiManager: void save(android.net.wifi.WifiManager$Channel,android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)>','<com.android.server.AlarmManagerService: boolean lookForPackageLocked(java.lang.String)>','<android.net.LocalSocketImpl: boolean supportsUrgentData()>','<android.location.CountryDetector: void <init>(android.location.ICountryDetector)>','<android.app.ActivityThread$ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.ConnectivityService: boolean prepareVpn(java.lang.String,java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getNationalNumberPattern()>','<android.media.Metadata: double getDouble(int)>','<com.android.server.pm.PackageManagerService$InstallArgs: int doPreCopy()>','<com.android.internal.policy.impl.LockPatternKeyguardView$5: void <clinit>()>','<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>','<android.view.ViewGroup: void onResolvedTextDirectionReset()>','<android.app.Notification: void <init>()>','<com.android.server.wm.WindowManagerService: void updateWallpaperOffsetLocked(com.android.server.wm.WindowState,boolean)>','<com.android.internal.telephony.IccCardApplication$AppState: com.android.internal.telephony.IccCardApplication$AppState[] values()>','<android.server.BluetoothA2dpService: void <init>(android.content.Context,android.server.BluetoothService)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.server.am.AppErrorResult: void set(int)>','<android.graphics.Region: android.graphics.Path getBoundaryPath()>','<android.server.BluetoothAdapterStateMachine: int access$4200(android.server.BluetoothAdapterStateMachine)>','<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>','<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>','<android.content.SyncAdapterType: boolean isAlwaysSyncable()>','<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>','<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>','<android.filterfw.io.GraphReader: void addReferencesByKeysAndValues(java.lang.Object[])>','<android.view.inputmethod.InputMethodInfo$1: void <init>()>','<android.net.IConnectivityManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.CallTracker: void handleRadioAvailable()>','<android.net.NetworkStatsHistory: void <init>(long,int)>','<android.widget.OverScroller: int getFinalY()>','<android.webkit.WebViewInputDispatcher$DispatchEventQueue: void enqueue(android.webkit.WebViewInputDispatcher$DispatchEvent)>','<com.android.server.am.ActivityManagerService: android.content.Context main(int)>','<android.app.Notification$1: android.app.Notification[] newArray(int)>','<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$NotConnectedState access$700(android.net.wifi.WifiWatchdogStateMachine)>','<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.widget.AbsListView: int access$2100(android.widget.AbsListView)>','<android.net.rtp.RtpStream: int getLocalPort()>','<com.android.server.WifiService: boolean access$1202(com.android.server.WifiService,boolean)>','<android.inputmethodservice.InputMethodService: void onWindowShown()>','<android.net.Uri$PathPart: android.net.Uri$PathPart fromEncoded(java.lang.String)>','<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String,java.lang.Throwable)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onSignalStrengthChanged(int)>','<android.webkit.SslCertLookupTable: void clear()>','<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource)>','<android.webkit.WebView: float access$1500(android.webkit.WebView)>','<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Phone getPhone()>','<android.content.SyncManager: void access$3500(android.content.SyncManager)>','<com.android.internal.app.IUsageStats$Stub: android.os.IBinder asBinder()>','<android.net.NetworkQuotaInfo: void <clinit>()>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByViewId(int,int,long,int)>','<android.database.sqlite.SQLiteConnection$OperationLog: int beginOperation(java.lang.String,java.lang.String,java.lang.Object[])>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>','<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardTimeout()>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>','<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>','<com.android.internal.telephony.IccVmFixedException: void <init>()>','<com.android.server.wm.WindowManagerService$LayoutFields: float access$1400(com.android.server.wm.WindowManagerService$LayoutFields)>','<android.net.sip.SipProfile: java.lang.String getAuthUserName()>','<android.view.View: void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>','<android.provider.ContactsContract$StatusUpdates: int getPresenceIconResourceId(int)>','<android.widget.Spinner$DropDownAdapter: boolean isEnabled(int)>','<android.widget.AbsListView$PerformClick: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>','<com.android.internal.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.ViewGroup: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>','<android.graphics.Interpolator: void <init>(int)>','<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>','<com.android.server.location.MockProvider: boolean supportsBearing()>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$1100(com.android.internal.widget.TransportControlView$Metadata)>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo: void <init>(android.widget.Editor$SuggestionsPopupWindow,android.widget.Editor$1)>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: boolean queuePositionsToBePreloadedFromRequestedPosition(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8100(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.server.net.NetworkStatsCollection$Key: void <init>(com.android.server.net.NetworkIdentitySet,int,int,int)>','<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()>','<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>','<com.android.internal.telephony.PhoneProxy: boolean canConference()>','<android.app.AppGlobals: android.app.Application getInitialApplication()>','<android.net.NetworkPolicyManager: boolean isUidValidForPolicy(android.content.Context,int)>','<android.webkit.CallbackProxy$ResultTransport: java.lang.Object getResult()>','<com.android.internal.telephony.AdnRecord: void <clinit>()>','<android.location.ICountryDetector$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.content.SyncManager: void access$900(android.content.SyncManager)>','<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<android.graphics.NinePatch: int getHeight()>','<android.content.pm.IPackageManager$Stub$Proxy: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>','<com.android.internal.telephony.ApnContext: void setDependencyMet(boolean)>','<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)>','<android.app.ProgressDialog: void <init>(android.content.Context,int)>','<android.view.View: int getMeasuredWidth()>','<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[],int,int)>','<android.app.FragmentManager: void invalidateOptionsMenu()>','<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex()>','<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPuk2(java.lang.String,java.lang.String,android.os.Message)>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateEthernet()>','<android.webkit.WebViewClassic: void setVerticalScrollbarOverlay(boolean)>','<android.net.wifi.WifiStateMachine$ConnectedState: void enter()>','<android.os.storage.IMountService$Stub$Proxy: boolean isExternalStorageEmulated()>','<android.net.nsd.INsdManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.ViewConfiguration: int getLongPressTimeout()>','<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setTitle(java.lang.CharSequence)>','<android.view.accessibility.AccessibilityNodeInfo$1: android.view.accessibility.AccessibilityNodeInfo[] newArray(int)>','<android.graphics.Point: void set(int,int)>','<android.graphics.drawable.AnimationDrawable$AnimationState: void growArray(int,int)>','<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>','<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>','<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>','<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.util.FastMath: int round(float)>','<android.opengl.GLLogWrapper: void glEnable(int)>','<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)>','<android.content.IOnPrimaryClipChangedListener$Stub: android.content.IOnPrimaryClipChangedListener asInterface(android.os.IBinder)>','<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>','<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener,boolean)>','<android.widget.ImageView: int getResolvedLayoutDirection(android.graphics.drawable.Drawable)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.wifi.WifiStateMachine: int access$9200(android.net.wifi.WifiStateMachine)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$10000(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.telephony.cdma.CDMAPhone: void disableLocationUpdates()>','<android.content.res.Resources: void <clinit>()>','<com.android.server.pm.PackageManagerService$3: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>','<com.android.server.WifiService: void stopWifi()>','<android.media.MediaRouter: void removeRouteInt(android.media.MediaRouter$RouteInfo)>','<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClient getWebBackForwardListClient()>','<android.view.ViewRootImpl$W: void dispatchGetNewSurface()>','<android.webkit.HTML5VideoViewProxy: void onPrepared(android.media.MediaPlayer)>','<android.text.style.SubscriptSpan: void <init>()>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>','<android.webkit.WebSettingsClassic: boolean getDomStorageEnabled()>','<android.telephony.CellInfo: void <init>(int,long,long,boolean,android.telephony.SignalStrength,android.telephony.CellIdentity)>','<android.widget.ExpandableListView: boolean expandGroup(int)>','<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>','<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>','<android.view.View: void setScrollbarFadingEnabled(boolean)>','<android.telephony.gsm.SmsManager: boolean copyMessageToSim(byte[],byte[],int)>','<com.android.internal.policy.impl.GlobalActions$9: void <init>(com.android.internal.policy.impl.GlobalActions)>','<android.webkit.ZoomManager: boolean access$102(android.webkit.ZoomManager,boolean)>','<com.android.internal.telephony.IccCard: boolean isApplicationOnIcc(com.android.internal.telephony.IccCardApplication$AppType)>','<android.widget.GridView: int computeVerticalScrollExtent()>','<android.server.BluetoothService: boolean attemptAutoPair(java.lang.String)>','<android.os.IMessenger$Stub: android.os.IMessenger asInterface(android.os.IBinder)>','<com.android.internal.telephony.cdma.CDMAPhone$1: void run()>','<com.android.internal.telephony.IccRecords: int getVoiceMessageCount()>','<android.location.IGpsStatusListener$Stub$Proxy: void onGpsStarted()>','<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)>','<android.widget.TextView: int getResolvedLayoutDirection(android.graphics.drawable.Drawable)>','<android.content.IntentSender: boolean equals(java.lang.Object)>','<android.database.sqlite.SQLiteConstraintException: void <init>()>','<android.net.wifi.WifiWatchdogStateMachine: void dump(java.io.PrintWriter)>','<android.graphics.Canvas$CanvasFinalizer: void <init>(int)>','<android.webkit.WebViewClassic: void documentHasImages(android.os.Message)>','<com.android.server.net.NetworkPolicyManagerService: void access$1000(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkPolicy)>','<android.view.inputmethod.InputMethodManager: void startGettingWindowFocus(android.view.View)>','<android.view.ViewGroup: android.view.animation.LayoutAnimationController access$100(android.view.ViewGroup)>','<android.view.animation.Transformation: void toShortString(java.lang.StringBuilder)>','<android.view.ViewRootImpl$2: void addCallback(android.view.SurfaceHolder$Callback)>','<android.text.DynamicLayout: int getEllipsisCount(int)>','<android.filterfw.geometry.Rectangle: void <init>(float,float,float,float)>','<android.filterfw.core.StopWatch: void stop()>','<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>','<android.server.BluetoothA2dpService: boolean disconnect(android.bluetooth.BluetoothDevice)>','<android.renderscript.RenderScript: void nAllocationGenerateMipmaps(int)>','<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>','<com.android.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>','<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>','<android.net.wifi.SupplicantStateTracker: void access$200(android.net.wifi.SupplicantStateTracker,android.net.wifi.SupplicantState,boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc mergeFrom(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.webkit.WebViewClassic: int getBlockLeftEdge(int,int,float)>','<com.android.internal.telephony.IccUtils: java.lang.String networkNameToString(byte[],int,int)>','<android.inputmethodservice.KeyboardView: void <clinit>()>','<android.webkit.Plugin: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.widget.ZoomButtonsController: void access$500(android.widget.ZoomButtonsController,int)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>','<android.os.storage.StorageManager$MountServiceBinderListener: void onUsbMassStorageConnectionChanged(boolean)>','<com.android.server.am.ActivityManagerService: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)>','<com.android.internal.widget.LockPatternUtils: boolean isPatternEverChosen()>','<android.accounts.AccountManager$BaseFutureTask: void access$700(android.accounts.AccountManager$BaseFutureTask,java.lang.Object)>','<android.webkit.HTML5VideoFullScreen$FullScreenMediaController: void show()>','<android.nfc.tech.IsoDep: byte[] transceive(byte[])>','<android.view.View: float getPivotY()>','<android.animation.LayoutTransition: java.util.LinkedHashMap access$1300(android.animation.LayoutTransition)>','<android.view.Window: void setLayout(int,int)>','<com.android.server.WifiService: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>','<android.app.Instrumentation$ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation$ActivityWaiter)>','<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>','<android.view.animation.AnimationSet: long getStartTime()>','<android.net.wifi.ScanResult: void <clinit>()>','<android.net.wifi.WifiWatchdogStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<android.net.sip.SipAudioCall$Listener: void onCallEstablished(android.net.sip.SipAudioCall)>','<android.graphics.Matrix: boolean postRotate(float,float,float)>','<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>','<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle(long,long)>','<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>','<android.location.IGeocodeProvider$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<android.content.ContentProviderOperation: int describeContents()>','<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>','<com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>','<android.text.format.Time: boolean isEpoch(android.text.format.Time)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean separateCall(int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall fromCLCCLine(java.lang.String)>','<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>','<android.webkit.WebView: int getProgress()>','<android.util.EventLog: void <clinit>()>','<android.filterfw.core.GLEnvironment: void deactivate()>','<com.android.server.wm.WindowManagerService: void setTransparentRegionHint(com.android.server.wm.WindowStateAnimator,android.graphics.Region)>','<android.media.MediaFile: boolean isImageFileType(int)>','<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback)>','<android.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.gsm.GSMPhone: int getPhoneType()>','<android.webkit.WebViewClassic: boolean restorePicture(android.os.Bundle,java.io.File)>','<android.view.View: void resolveLayoutDirection()>','<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: void <init>(android.widget.RemoteViewsAdapter,android.content.Context)>','<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)>','<com.android.server.NativeDaemonConnector$ResponseQueue: com.android.server.NativeDaemonEvent remove(int,int,java.lang.String)>','<com.android.server.wm.ScreenRotationAnimation: void updateSurfaces()>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setDesiredSize(int,int)>','<android.webkit.WebViewClassic: android.os.Message access$1702(android.webkit.WebViewClassic,android.os.Message)>','<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,com.android.internal.util.Predicate,long)>','<com.android.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>','<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>','<com.android.internal.telephony.DataConnectionTracker$Activity: void <clinit>()>','<android.content.res.StringBlock$StyleIDs: int access$902(android.content.res.StringBlock$StyleIDs,int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>','<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>','<android.widget.TextView: android.text.method.WordIterator getWordIterator()>','<android.net.Uri$StringUri: void writeToParcel(android.os.Parcel,int)>','<android.content.pm.ComponentInfo: int getIconResource()>','<com.android.server.MountService$MountObbAction: void handleExecute()>','<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>','<android.view.IWindowSession$Stub$Proxy: void dragRecipientExited(android.view.IWindow)>','<android.view.textservice.SpellCheckerSubtype: int describeContents()>','<android.webkit.WebSettingsClassic: boolean getUseDoubleTree()>','<android.preference.Preference: void setOnPreferenceChangeInternalListener(android.preference.Preference$OnPreferenceChangeInternalListener)>','<android.graphics.Matrix: void setSkew(float,float)>','<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>','<android.webkit.WebViewClassic: void setNetworkType(java.lang.String,java.lang.String)>','<com.android.server.MountService: com.android.server.MountService$DefaultContainerConnection access$2300(com.android.server.MountService)>','<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>','<android.net.http.RequestQueue: android.net.http.Request getRequest()>','<com.android.internal.os.SamplingProfilerIntegration: void access$000(java.lang.String,android.content.pm.PackageInfo)>','<android.media.TimedText$Justification: void <init>(int,int)>','<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>','<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>','<com.android.internal.os.PkgUsageStats: void <init>(android.os.Parcel)>','<android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>','<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ContentProviderRecord)>','<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: java.lang.String toString()>','<android.widget.ImageView: void setAlpha(int)>','<com.android.server.LightsService$1: void <init>(com.android.server.LightsService)>','<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>','<android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow: void dismiss()>','<android.widget.Editor$InsertionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable)>','<android.media.AudioService: boolean isStreamMute(int)>','<android.app.Fragment: void startActivity(android.content.Intent)>','<android.net.SSLSessionCache: void <init>(java.io.File)>','<com.android.server.am.ProcessList: long getMemLevel(int)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getPriority(android.bluetooth.BluetoothDevice)>','<android.os.storage.StorageManager: void unregisterListener(android.os.storage.StorageEventListener)>','<android.bluetooth.BluetoothA2dp: boolean resumeSink(android.bluetooth.BluetoothDevice)>','<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()>','<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessStats,android.util.SparseArray,java.lang.String[])>','<android.view.IWindowManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.IntentSender$FinishedDispatcher: void run()>','<com.android.server.am.ActivityManagerService: void setSystemProcess()>','<android.net.wifi.WifiStateTracker$WifiStateReceiver: void <init>(android.net.wifi.WifiStateTracker,android.net.wifi.WifiStateTracker$1)>','<android.view.textservice.TextInfo: int describeContents()>','<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)>','<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.net.Uri$AbstractPart: void <init>(java.lang.String,java.lang.String)>','<android.net.InterfaceConfiguration: java.lang.String toString()>','<android.bluetooth.BluetoothAdapter$RfcommChannelPicker: int nextChannel()>','<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)>','<android.media.RingtoneManager: void stopPreviousRingtone()>','<com.android.internal.util.CharSequences$1: java.lang.CharSequence subSequence(int,int)>','<com.android.server.NsdService$NativeCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>','<android.renderscript.RenderScript: int nFileA3DCreateFromAssetStream(int)>','<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void reset()>','<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(com.android.server.am.ProcessRecord)>','<com.android.server.location.GpsLocationProvider: void removeListener(int)>','<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)>','<com.android.internal.telephony.IccCard: com.android.internal.telephony.IccCard$State getState()>','<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>','<android.content.SyncManager$AuthoritySyncStats: void <init>(java.lang.String,android.content.SyncManager$1)>','<android.net.wifi.WifiStateMachine: void access$13300(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.accounts.IAccountManager$Stub$Proxy: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>','<com.android.vcard.VCardComposer: boolean isAfterLast()>','<android.view.View$AttachInfo$InvalidateInfo$1: android.view.View$AttachInfo$InvalidateInfo newInstance()>','<android.os.Message: void <clinit>()>','<com.android.server.sip.SipService$SipSessionGroupExt: void <init>(com.android.server.sip.SipService,android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>','<com.android.server.sip.SipSessionGroup: boolean isClosed()>','<android.net.wifi.p2p.WifiP2pService$ClientInfo: android.util.SparseArray access$9400(android.net.wifi.p2p.WifiP2pService$ClientInfo)>','<android.widget.AbsListView: void invokeOnItemScrollListener()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>','<com.android.server.am.ActivityRecord: void clearOptionsLocked()>','<com.android.internal.util.AsyncService$AsyncServiceInfo: void <init>()>','<android.widget.Editor$SelectionModifierCursorController: void show()>','<android.view.IWindowManager$Stub$Proxy: boolean startViewServer(int)>','<com.android.internal.telephony.gsm.GsmCallTracker: boolean canConference()>','<com.android.internal.telephony.AdnRecord: byte[] buildAdnString(int)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: com.android.internal.view.InputConnectionWrapper$InputContextCallback access$000()>','<com.android.vcard.VCardUtils$QuotedPrintableCodecPort: byte[] decodeQuotedPrintable(byte[])>','<com.android.internal.telephony.gsm.GSMPhone: boolean handleInCallMmiCommands(java.lang.String)>','<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)>','<com.android.internal.telephony.IccServiceTable: void <init>(byte[])>','<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>','<android.net.wifi.WifiConfigStore: void setIpConfiguration(int,android.net.DhcpInfoInternal)>','<android.graphics.Path: void offset(float,float)>','<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>','<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)>','<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>','<android.filterfw.core.FilterPort: void checkFrameManager(android.filterfw.core.Frame,android.filterfw.core.FilterContext)>','<com.android.internal.view.IInputContextCallback$Stub: com.android.internal.view.IInputContextCallback asInterface(android.os.IBinder)>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setSelectedText(java.lang.CharSequence,int)>','<android.speech.tts.TextToSpeech$5: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>','<android.animation.AnimatorSet$Node: void <init>(android.animation.Animator)>','<android.app.Notification$Builder: android.app.Notification getNotification()>','<android.view.View: void invalidate(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefixForParsing()>','<android.database.CursorWindow: void freeLastRow()>','<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: int compare(android.view.View,android.view.View)>','<com.android.internal.policy.impl.RecentApplicationsDialog: void onStop()>','<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()>','<android.content.SyncStatusInfo: void removePeriodicSyncTime(int)>','<android.net.http.RequestHandle: void handleSslErrorResponse(boolean)>','<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>','<android.content.BroadcastReceiver: boolean getDebugUnregister()>','<android.hardware.input.InputManager$InputDeviceVibrator: boolean hasVibrator()>','<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromEfRecord(int,byte[])>','<android.opengl.GLLogWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>','<android.provider.ContactsContract$Settings: void <clinit>()>','<android.webkit.WebViewCore$1: void <init>(android.webkit.WebViewCore)>','<com.android.internal.policy.impl.ShortcutManager: void <clinit>()>','<android.media.AudioService$SetModeDeathHandler: int getPid()>','<com.android.internal.telephony.cat.Menu$1: void <init>()>','<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>','<com.android.internal.telephony.DataConnection: void tearDown(java.lang.String,android.os.Message)>','<com.android.internal.telephony.cat.Tone: void <clinit>()>','<android.net.NetworkState: void <clinit>()>','<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>','<android.accounts.AccountManagerResponse$1: android.accounts.AccountManagerResponse createFromParcel(android.os.Parcel)>','<android.database.ContentObservable: void notifyChange(boolean)>','<android.app.Service: void onLowMemory()>','<android.widget.Spinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>','<com.android.internal.widget.ActionBarView: void setLogo(int)>','<com.android.i18n.phonenumbers.PhoneNumberMatcher$State: com.android.i18n.phonenumbers.PhoneNumberMatcher$State valueOf(java.lang.String)>','<android.widget.AbsListView$WindowRunnnable: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>','<com.android.server.sip.SipWakeupTimer$MyEventComparator: void <init>(com.android.server.sip.SipWakeupTimer$1)>','<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>','<android.server.BluetoothService: boolean getTrustState(java.lang.String)>','<android.widget.TextView$ChangeWatcher: void <init>(android.widget.TextView,android.widget.TextView$1)>','<com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)>','<android.security.KeyStore: boolean delKey(java.lang.String)>','<android.view.textservice.SpellCheckerSubtype$1: android.view.textservice.SpellCheckerSubtype[] newArray(int)>','<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.telephony.ITelephony getTelephonyService()>','<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>','<android.net.wifi.WifiStateMachine$DriverLoadedState: void enter()>','<android.hardware.usb.UsbAccessory$1: android.hardware.usb.UsbAccessory createFromParcel(android.os.Parcel)>','<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>','<android.widget.Editor$HandleView: void hide()>','<com.android.server.wm.WindowManagerService: void access$600(com.android.server.wm.WindowManagerService)>','<android.net.EthernetDataTracker: void <clinit>()>','<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setPowerStateToDesired()>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onTimeout()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistering(android.net.sip.ISipSession)>','<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.os.StrictMode: void onIntentReceiverLeaked(java.lang.Throwable)>','<com.android.internal.telephony.cat.Tone: void writeToParcel(android.os.Parcel,int)>','<android.app.BackStackRecord: int getTransition()>','<android.view.View: int getSuggestedMinimumWidth()>','<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.Rect: java.lang.String toShortString(java.lang.StringBuilder)>','<android.server.BluetoothA2dpService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.app.IInstrumentationWatcher$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.ExpandableListConnector: int getItemViewType(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.os.IVibratorService$Stub: void <init>()>','<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.app.ActivityThread$ActivityClientRecord,boolean,boolean)>','<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>','<android.webkit.PluginFullScreenHolder: android.webkit.WebViewClassic access$000(android.webkit.PluginFullScreenHolder)>','<android.net.MobileDataStateTracker: void defaultRouteSet(boolean)>','<android.graphics.drawable.InsetDrawable$InsetState: boolean canConstantState()>','<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>','<com.android.internal.widget.multiwaveview.GlowPadView: void onLayout(boolean,int,int,int,int)>','<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>','<android.util.DisplayMetrics: java.lang.String toString()>','<android.view.View: float getRotationY()>','<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.widget.PopupWindow$PopupViewContainer: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>','<com.android.internal.widget.PasswordEntryKeyboard$LatinKey: boolean isInside(int,int)>','<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getConfigFile()>','<com.android.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>','<android.os.Message: void access$000(android.os.Message,android.os.Parcel)>','<android.os.BatteryStats$Uid$Proc$ExcessivePower: void <init>()>','<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>','<android.webkit.WebSettingsClassic: void setLoadWithOverviewMode(boolean)>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>','<android.net.wifi.WifiStateMachine: void access$3800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.content.Context: java.lang.CharSequence getText(int)>','<android.view.InputDevice$1: void <init>()>','<android.graphics.BitmapFactory: void <init>()>','<com.android.server.location.CountryDetectorBase: void notifyListener(android.location.Country)>','<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>','<com.android.uiautomator.core.InteractionController: boolean access$000(com.android.uiautomator.core.InteractionController,int,int)>','<com.android.internal.app.AlertController$1: void onClick(android.view.View)>','<android.app.ActivityManagerNative$1: android.app.IActivityManager create()>','<android.widget.AbsSpinner: void setSelection(int,boolean)>','<com.android.server.usb.UsbService: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>','<android.media.DecoderCapabilities$VideoDecoder: android.media.DecoderCapabilities$VideoDecoder[] values()>','<com.android.internal.statusbar.StatusBarNotification: void <clinit>()>','<android.widget.TextView: void resetResolvedDrawables()>','<com.android.server.am.ServiceRecord$2: void <init>(com.android.server.am.ServiceRecord,java.lang.String,int)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle close(java.lang.String,android.os.IBinder)>','<com.android.internal.widget.multiwaveview.GlowPadView$4: void onAnimationEnd(android.animation.Animator)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void endCall()>','<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()>','<android.widget.ListPopupWindow: void setContentWidth(int)>','<com.android.internal.app.ActionBarImpl: android.view.View access$000(com.android.internal.app.ActionBarImpl)>','<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>','<com.android.server.InputMethodManagerService: void updateFromSettingsLocked()>','<android.opengl.GLLogWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>','<android.inputmethodservice.Keyboard: int access$200(android.inputmethodservice.Keyboard)>','<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$5300(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>','<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,int)>','<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>','<android.graphics.drawable.GradientDrawable: void setDither(boolean)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void dispose()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: boolean getSampleEnabled()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void reportSuccessfulUnlockAttempt()>','<android.app.Fragment: void onDetach()>','<com.android.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>','<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>','<android.content.ContextWrapper: android.content.Context getBaseContext()>','<com.android.server.DeviceStorageMonitorService: void <init>(android.content.Context)>','<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>','<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void registerInfoCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallback)>','<android.view.HardwareRenderer$GlRenderer: void detachFunctor(int)>','<android.view.View$ListenerInfo: android.view.View$OnSystemUiVisibilityChangeListener access$700(android.view.View$ListenerInfo)>','<com.android.internal.telephony.IccCard: void supplyPuk(java.lang.String,java.lang.String,android.os.Message)>','<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>','<android.app.Activity: void setTitle(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)>','<android.os.Binder: int getOrigCallingUid()>','<android.view.accessibility.AccessibilityRecord: int getScrollX()>','<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>','<android.filterfw.core.ProtocolException: void <init>(java.lang.String)>','<android.filterfw.core.FrameFormat: int getDimensionCount()>','<android.opengl.GLLogWrapper: void glLineWidth(float)>','<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedRegistrationObjects()>','<com.android.internal.policy.impl.GlobalActions$5: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.CallManager: void setEchoSuppressionEnabled(boolean)>','<android.server.BluetoothA2dpService: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>','<android.telephony.ServiceState: int getRadioTechnology()>','<android.graphics.Color: int red(int)>','<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.QueryController getQueryController()>','<android.view.GestureDetector$GestureHandler: void <init>(android.view.GestureDetector)>','<android.view.ViewRootImpl$ViewRootHandler: void <init>(android.view.ViewRootImpl)>','<com.android.internal.telephony.PhoneProxy: boolean isDataConnectivityPossible()>','<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>','<com.android.server.connectivity.Tethering: void checkDunRequired()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>','<android.app.ContextImpl$2: java.lang.Object getService(android.app.ContextImpl)>','<com.android.server.DevicePolicyManagerService: java.util.List getActiveAdmins()>','<android.view.HardwareRenderer$Gl20Renderer: void endTrimMemory()>','<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>','<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>','<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>','<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>','<com.android.internal.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)>','<android.net.http.RequestQueue: org.apache.http.HttpHost access$200(android.net.http.RequestQueue,org.apache.http.HttpHost)>','<android.filterfw.core.GLEnvironment: boolean isAnyContextActive()>','<com.android.server.sip.SipSessionListenerProxy: void onRingingBack(android.net.sip.ISipSession)>','<android.net.wifi.p2p.WifiP2pInfo: void <init>(android.net.wifi.p2p.WifiP2pInfo)>','<com.android.internal.telephony.cdma.EriManager$EriDisplayInformation: void <init>(com.android.internal.telephony.cdma.EriManager,int,int,java.lang.String)>','<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults()>','<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>','<android.bluetooth.BluetoothAdapter: boolean disable()>','<android.bluetooth.BluetoothDeviceProfileState: void access$7100(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>','<android.graphics.Paint: void reset()>','<android.widget.PopupWindow: boolean isClippingEnabled()>','<android.view.textservice.SpellCheckerSession: void finalize()>','<com.android.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()>','<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>','<android.webkit.WebViewCore: void access$5700(android.webkit.WebViewCore,int,int,int,int,int)>','<android.net.wifi.WifiStateMachine: android.os.PowerManager$WakeLock access$100(android.net.wifi.WifiStateMachine)>','<android.os.PatternMatcher: boolean matchPattern(java.lang.String,java.lang.String,int)>','<android.os.Binder: void finalize()>','<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>','<android.webkit.AutoCompletePopup: void onFilterComplete(int)>','<android.animation.LayoutTransition: long access$314(android.animation.LayoutTransition,long)>','<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition$TransitionListener)>','<android.app.ActivityThread$DumpHeapData: void <init>()>','<com.android.internal.os.BatteryStatsImpl$2: void <init>()>','<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int hashCode()>','<android.graphics.Path$Direction: android.graphics.Path$Direction valueOf(java.lang.String)>','<android.filterfw.core.FieldPort: boolean acceptsFrame()>','<android.app.ApplicationErrorReport$CrashInfo: void writeToParcel(android.os.Parcel,int)>','<android.app.Dialog: android.app.Activity getOwnerActivity()>','<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>','<android.os.ConditionVariable: void block()>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int)>','<android.app.ContextImpl$21: void <init>()>','<android.location.INetInitiatedListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.filterfw.core.GLEnvironment: void tearDown()>','<android.telephony.ServiceState: boolean isCdma(int)>','<android.view.View: int getMinimumHeight()>','<android.webkit.WebBackForwardListClient: void <init>()>','<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>','<android.os.storage.StorageVolume: void <init>(java.lang.String,int,boolean,boolean,int,boolean,long)>','<android.util.LongSparseArray: int indexOfValue(java.lang.Object)>','<android.text.TextUtils$SimpleStringSplitter: void remove()>','<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()>','<android.view.ViewRootImpl: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.server.search.SearchManagerService$MyPackageMonitor: void onPackageModified(java.lang.String)>','<android.view.DisplayEventReceiver: void onVsync(long,int)>','<android.view.View$6: java.lang.Object get(java.lang.Object)>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromPdu(byte[])>','<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>','<com.android.internal.telephony.cat.CommandParams: void <init>(com.android.internal.telephony.cat.CommandDetails)>','<android.renderscript.RenderScript: int nFontCreateFromFile(java.lang.String,float,int)>','<com.android.internal.telephony.BaseCommands: void setOnNewGsmSms(android.os.Handler,int,java.lang.Object)>','<android.hardware.Camera: android.hardware.Camera$ErrorCallback access$1200(android.hardware.Camera)>','<com.android.internal.telephony.gsm.GsmDataConnection: void setProfileId(int)>','<android.os.Looper: android.os.MessageQueue getQueue()>','<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)>','<android.graphics.drawable.RotateDrawable$RotateState: int getChangingConfigurations()>','<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>','<android.widget.AbsListView: int access$1600(android.widget.AbsListView)>','<android.bluetooth.BluetoothAdapter$StateChangeCallbackWrapper: void <init>(android.bluetooth.BluetoothAdapter,android.bluetooth.BluetoothAdapter$BluetoothStateChangeCallback)>','<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService: void access$400(com.android.server.pm.PackageManagerService,java.lang.String,boolean,java.util.ArrayList,int)>','<com.android.internal.view.menu.MenuPopupHelper: void onRestoreInstanceState(android.os.Parcelable)>','<com.android.internal.telephony.DataConnection: void access$1700(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.content.pm.VerifierInfo: void <init>(java.lang.String,java.security.PublicKey)>','<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)>','<com.android.internal.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)>','<android.view.DisplayEventReceiver: void dispose()>','<android.widget.LinearLayout: int getBaseline()>','<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$2800(com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>','<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>','<android.webkit.WebBackForwardListClient: void onNewHistoryItem(android.webkit.WebHistoryItem)>','<com.android.server.NsdService: boolean access$1900(com.android.server.NsdService,int)>','<android.server.BluetoothAdapterStateMachine: void access$7200(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.sip.SipPhoneBase: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>','<com.android.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>','<com.android.server.PowerManagerService: void userActivityWithForce(long,boolean,boolean)>','<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,android.os.IBinder)>','<com.android.internal.telephony.RIL: void getIccCardStatus(android.os.Message)>','<android.os.SystemClock: void sleep(long)>','<com.android.server.am.ActivityRecord: void windowsVisible()>','<android.server.BluetoothAdapterStateMachine: void access$2200(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.provider.Telephony$Mms: java.lang.String extractAddrSpec(java.lang.String)>','<android.filterfw.core.FilterGraph: java.util.Set getFilters()>','<android.app.WallpaperInfo$1: void <init>()>','<android.opengl.GLLogWrapper: void glFinish()>','<com.android.server.pm.PackageSettingBase: void setDisabledComponents(java.util.HashSet,int)>','<com.android.server.PowerManagerService: android.view.WindowManagerPolicy getPolicyLocked()>','<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>','<com.android.server.MountService$UnmountObbAction: void handleExecute()>','<android.animation.ValueAnimator: float getAnimatedFraction()>','<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean)>','<android.widget.PopupWindow: boolean isShowing()>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()>','<android.filterfw.core.GLEnvironment: void finalize()>','<android.accounts.AccountManagerService: void installNotification(int,android.app.Notification)>','<android.os.MemoryFile$MemoryInputStream: boolean markSupported()>','<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isKeyguardSecure()>','<com.android.internal.telephony.cdma.CDMAPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.appwidget.AppWidgetProviderInfo: void <clinit>()>','<android.content.Intent: java.lang.String toURI()>','<android.server.BluetoothAdapterStateMachine: void access$4400(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<com.android.internal.os.BatteryStatsImpl$Counter: void <init>(java.util.ArrayList,android.os.Parcel)>','<com.android.internal.telephony.cdma.EriManager$EriFile: void <init>(com.android.internal.telephony.cdma.EriManager)>','<android.accounts.Account$1: android.accounts.Account createFromParcel(android.os.Parcel)>','<android.app.Activity: void startActivityForResult(android.content.Intent,int)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager$1: void <init>(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)>','<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>','<android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>','<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>','<android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskWrites()>','<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>','<android.widget.AbsListView$FlingRunnable: void endFling()>','<android.widget.AutoCompleteTextView$DropDownItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.SubMenuBuilder)>','<com.android.uiautomator.core.QueryController: java.lang.String access$102(com.android.uiautomator.core.QueryController,java.lang.String)>','<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>','<android.location.LocationManager$GpsStatusListenerTransport: void onGpsStopped()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void readFromParcelLocked(android.os.Parcel)>','<com.android.server.am.ActivityManagerService: void unregisterProcessObserver(android.app.IProcessObserver)>','<android.util.FastImmutableArraySet: void <init>(java.lang.Object[])>','<com.android.server.wm.InputMonitor: void thawInputDispatchingLw()>','<com.android.server.wm.WindowManagerService: void access$1000(com.android.server.wm.WindowManagerService,int)>','<com.android.internal.telephony.cat.PlayToneParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.TextMessage,com.android.internal.telephony.cat.Tone,com.android.internal.telephony.cat.Duration,boolean)>','<android.renderscript.Element: android.renderscript.Element I64_3(android.renderscript.RenderScript)>','<com.android.vcard.VCardComposer: void <clinit>()>','<android.view.animation.Animation: boolean hasEnded()>','<com.android.internal.telephony.AdnRecordCache: java.util.ArrayList getRecordsIfLoaded(int)>','<android.net.sip.SipManager: boolean isVoipSupported(android.content.Context)>','<com.android.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>','<android.accounts.AccountManagerService$Session: void scheduleTimeout()>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void <init>(com.android.server.am.UsageStatsService,android.os.Parcel)>','<android.server.BluetoothService: android.server.BluetoothAdapterStateMachine access$400(android.server.BluetoothService)>','<android.widget.AccessibilityIterators$PageTextSegmentIterator: void initialize(android.widget.TextView)>','<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,float[],int)>','<android.view.GLES20DisplayList: void offsetLeftRight(int)>','<android.view.ViewRootImpl$RunQueue: void postDelayed(java.lang.Runnable,long)>','<android.app.ActivityThread$ApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getCnapName()>','<android.nfc.Tag: void setConnectedTechnology(int)>','<android.location.LocationManager$GpsStatusListenerTransport: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>','<android.webkit.WebViewClassic$InvokeListBox$SingleDataSetObserver: void <init>(android.webkit.WebViewClassic$InvokeListBox,long,android.widget.ListView,android.widget.Adapter)>','<com.android.server.BatteryService: int access$100(com.android.server.BatteryService)>','<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromCenterVerticalAxis(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>','<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)>','<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)>','<android.view.ViewConfiguration: int getScaledEdgeSlop()>','<com.android.internal.telephony.CallManager: void stopDtmf()>','<android.app.ActivityManagerProxy: void killAllBackgroundProcesses()>','<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()>','<android.content.res.AssetManager: void <clinit>()>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>','<android.server.BluetoothPanProfileHandler: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>','<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>','<android.content.ContentProvider: void onLowMemory()>','<android.util.Singleton: void <init>()>','<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>','<android.os.INetworkManagementService$Stub$Proxy: void tetherInterface(java.lang.String)>','<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>','<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>','<android.net.LocalSocket: void <init>(android.net.LocalSocketImpl)>','<com.android.server.am.ActivityManagerService: void setOpenGlTraceApp(android.content.pm.ApplicationInfo,java.lang.String)>','<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>','<android.net.NetworkStats: void spliceOperationsFrom(android.net.NetworkStats)>','<com.android.internal.telephony.cat.ComprehensionTlv: byte[] getRawValue()>','<android.location.Location: void set(android.location.Location)>','<com.android.internal.os.BatteryStatsImpl$Timer: void <init>(int,java.util.ArrayList,android.os.Parcel)>','<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>','<android.widget.MediaController: void setPrevNextListeners(android.view.View$OnClickListener,android.view.View$OnClickListener)>','<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>','<android.media.AudioManager: int getVibrateSetting(int)>','<com.android.internal.telephony.IccCardStatus: void setUniversalPinState(int)>','<com.android.server.wm.InputMonitor: void setUpdateInputWindowsNeededLw()>','<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>','<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>','<android.location.GpsSatellite: int getPrn()>','<android.content.SyncInfo$1: android.content.SyncInfo[] newArray(int)>','<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>','<android.text.util.Linkify$1: void <init>()>','<com.android.internal.util.HexDump: void <init>()>','<android.filterfw.core.Filter: void delayNextProcess(int)>','<android.app.ResultInfo: java.lang.String toString()>','<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>','<android.view.ScaleGestureDetector: boolean isInProgress()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean access$400(com.android.internal.telephony.gsm.SimSmsInterfaceManager,com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>','<android.webkit.WebView$HitTestResult: int getType()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>','<android.net.wifi.WifiStateMachine: void access$6400(android.net.wifi.WifiStateMachine)>','<android.content.SyncManager$2: void <init>(android.content.SyncManager)>','<android.webkit.WebViewCore: boolean isUpdatePicturePaused(android.webkit.WebViewCore)>','<android.webkit.ZoomControlExternal: java.lang.Runnable access$100(android.webkit.ZoomControlExternal)>','<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>','<android.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>','<com.android.internal.widget.ActionBarView$HomeView: int getLeftOffset()>','<android.net.DummyDataStateTracker: boolean reconnect()>','<android.net.NetworkStats$Entry: boolean isNegative()>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState()>','<android.app.ActivityThread: void handleTrimMemory(int)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isInEmergencyCall()>','<android.net.wifi.WifiMonitor$MonitorThread: void handleEvent(int,java.lang.String)>','<android.opengl.GLLogWrapper: void glClearColorx(int,int,int,int)>','<android.text.Layout: android.text.TextPaint getPaint()>','<com.android.server.NsdService$NsdStateMachine$DisabledState: boolean processMessage(android.os.Message)>','<android.net.LocalSocketImpl: void sendUrgentData(int)>','<com.android.internal.statusbar.StatusBarIconList: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>','<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: void <init>(android.view.ViewRootImpl)>','<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>','<android.view.accessibility.IAccessibilityManagerClient$Stub: android.view.accessibility.IAccessibilityManagerClient asInterface(android.os.IBinder)>','<android.graphics.Paint: float measureText(java.lang.String,int,int)>','<android.webkit.WebViewClassic: void setLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.telephony.ServiceState: int getSystemId()>','<android.view.ViewRootImpl: void updateConfiguration(android.content.res.Configuration,boolean)>','<com.android.internal.telephony.IccServiceTable: boolean isAvailable(int)>','<android.webkit.WebView: boolean onHoverEvent(android.view.MotionEvent)>','<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.database.AbstractWindowedCursor: boolean isBlob(int)>','<android.text.TextUtils: long packRangeInLong(int,int)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree access$2202(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree)>','<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>','<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>','<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,int,java.lang.String)>','<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()>','<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>','<android.view.GLES20TextureLayer: void resize(int,int)>','<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)>','<android.server.BluetoothService: void cleanupAfterFinishDisable()>','<com.android.internal.widget.LockPatternUtils: boolean checkPattern(java.util.List)>','<com.android.internal.os.BatteryStatsImpl: void noteInputEventAtomic()>','<android.widget.ListPopupWindow: int getPromptPosition()>','<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>','<android.os.DropBoxManager$Entry: int describeContents()>','<android.view.ViewRootImpl: void cancelInvalidate(android.view.View)>','<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>','<android.view.AccessibilityInteractionController: void access$600(android.view.AccessibilityInteractionController,android.os.Message)>','<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<com.android.internal.telephony.sip.SipPhoneBase: void unregisterForSuppServiceNotification(android.os.Handler)>','<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>','<android.net.wifi.WifiConfiguration$GroupCipher: void <clinit>()>','<com.android.internal.telephony.cat.TextColor: com.android.internal.telephony.cat.TextColor valueOf(java.lang.String)>','<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>','<android.net.sip.SipAudioCall$Listener: void onRinging(android.net.sip.SipAudioCall,android.net.sip.SipProfile)>','<com.android.vcard.VCardUtils: java.util.List constructListFromValue(java.lang.String,int)>','<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>','<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>','<android.content.pm.ResolveInfo: void <clinit>()>','<android.accounts.AccountAndUser: int hashCode()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)>','<com.android.internal.telephony.CallManager: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>','<android.location.ICountryDetector$Stub$Proxy: void removeCountryListener(android.location.ICountryListener)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordHistoryLength(android.content.ComponentName)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$1400(android.net.wifi.WifiStateMachine)>','<android.content.pm.ProviderInfo: void <init>()>','<com.android.internal.telephony.cdma.CdmaDataConnection: boolean isDnsOk(java.lang.String[])>','<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>','<android.telephony.SmsCbLocation: boolean isInLocationArea(java.lang.String,int,int)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.IccUtils: int hexCharToInt(char)>','<android.graphics.drawable.AnimationDrawable$AnimationState: void addFrame(android.graphics.drawable.Drawable,int)>','<com.android.server.PowerManagerService: void access$6500(com.android.server.PowerManagerService,int,boolean)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector description(java.lang.String)>','<android.view.WindowManagerImpl: void <init>()>','<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthority(int)>','<android.os.ResultReceiver: void <init>(android.os.Handler)>','<android.bluetooth.IBluetoothCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.ContentResolver$ParcelFileDescriptorInner: void <init>(android.content.ContentResolver,android.os.ParcelFileDescriptor,android.content.IContentProvider)>','<android.app.DownloadManager: int remove(long[])>','<android.app.Notification: void <init>(android.content.Context,int,java.lang.CharSequence,long,java.lang.CharSequence,java.lang.CharSequence,android.content.Intent)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>','<android.location.INetInitiatedListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.ServiceStateTracker: void disableLocationUpdates()>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcast(int)>','<com.android.internal.widget.multiwaveview.GlowPadView$2: void <init>(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.net.sip.SipManager: boolean isSipWifiOnly(android.content.Context)>','<android.net.TrafficStats: void tagSocket(java.net.Socket)>','<android.webkit.WebViewClassic: boolean isPrivateBrowsingEnabled()>','<com.android.server.StatusBarManagerService: void expand()>','<com.android.server.pm.Installer: int fixUid(java.lang.String,int,int)>','<android.security.KeyChain$AliasResponse: void <init>(android.security.KeyChainAliasCallback,android.security.KeyChain$1)>','<android.content.Intent: void setSelector(android.content.Intent)>','<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>','<android.accounts.AccountManagerService$Session: void cancelTimeout()>','<android.accounts.AccountManager$Future2Task$1: void run()>','<com.android.server.pm.PackageVerificationState: void <init>(int,com.android.server.pm.PackageManagerService$InstallArgs)>','<android.text.PackedObjectVector: int width()>','<android.widget.AbsListView$PositionScroller: void stop()>','<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.IContentObserver$Stub$Proxy: void onChange(boolean,android.net.Uri)>','<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu access$302(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu)>','<android.webkit.ByteArrayBuilder: boolean isEmpty()>','<android.net.sip.SipAudioCall$1: void onCallEnded(android.net.sip.SipSession)>','<com.android.internal.telephony.gsm.GsmConnection: void access$100(com.android.internal.telephony.gsm.GsmConnection)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.lang.String)>','<android.view.VelocityTracker: void recycle()>','<android.widget.PopupWindow: void <init>(int,int)>','<android.view.KeyEvent: boolean hasModifiers(int)>','<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>','<android.content.ClipData$Item: void <init>(android.net.Uri)>','<com.android.server.InputMethodManagerService$4: void onCancel(android.content.DialogInterface)>','<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>','<android.net.EthernetDataTracker: java.lang.String access$600(android.net.EthernetDataTracker)>','<android.webkit.WebSyncManager: int access$000()>','<android.webkit.ByteArrayBuilder: void clear()>','<com.android.server.wm.WindowAnimator: boolean isDimming(com.android.server.wm.WindowStateAnimator)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setCdmaTechnology(int)>','<com.android.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>','<android.view.IWindowManager$Stub$Proxy: void setAnimationScales(float[])>','<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>','<com.android.server.am.ActivityRecord$Token: void windowsGone()>','<android.view.IWindowManager$Stub$Proxy: void waitForWindowDrawn(android.os.IBinder,android.os.IRemoteCallback)>','<android.net.wifi.WifiStateMachine$VerifyingLinkState: boolean processMessage(android.os.Message)>','<com.android.uiautomator.core.UiDevice: void unfreezeRotation()>','<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State stateFromDCState(com.android.internal.telephony.DriverCall$State)>','<android.telephony.SmsManager: boolean disableCellBroadcast(int)>','<android.app.LoadedApk$ServiceDispatcher: void death(android.content.ComponentName,android.os.IBinder)>','<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.content.IntentFilter$AuthorityEntry: int access$100(android.content.IntentFilter$AuthorityEntry)>','<android.widget.AbsListView: void access$4000(android.widget.AbsListView,android.view.View,boolean)>','<android.webkit.BrowserFrame: boolean handleUrl(java.lang.String)>','<android.app.SearchableInfo: int getInputType()>','<com.android.server.wm.WindowStateAnimator: boolean finishDrawingLocked()>','<com.android.internal.telephony.DataConnection$ConnectionParams: void <init>(com.android.internal.telephony.ApnSetting,android.os.Message)>','<android.server.BluetoothService: boolean connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>','<android.util.LruCache: java.lang.Object create(java.lang.Object)>','<android.webkit.WebViewDatabaseClassic: void clearHttpAuthUsernamePassword()>','<android.net.wifi.WifiApConfigStore: com.android.internal.util.AsyncChannel access$100(android.net.wifi.WifiApConfigStore)>','<com.android.server.MountService: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean inKeyguardRestrictedKeyInputMode()>','<android.location.Criteria: boolean isBearingRequired()>','<android.util.Base64: byte[] decode(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void onCoreSettingsChange(android.os.Bundle)>','<android.view.accessibility.AccessibilityManager$MyHandler: void handleMessage(android.os.Message)>','<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getOperatorNumeric()>','<android.text.style.UnderlineSpan: int describeContents()>','<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>','<com.android.server.EventLogTags: void writeBackupAgentFailure(java.lang.String,java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1Number()>','<android.widget.RemoteViews$BitmapCache: android.graphics.Bitmap getBitmapForId(int)>','<android.graphics.Canvas$VertexMode: void <clinit>()>','<android.view.View: float getRightFadingEdgeStrength()>','<android.text.TextLine: float ascent(int)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: void <init>(android.hardware.usb.UsbDevice)>','<com.android.internal.view.IInputMethodCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.os.BatteryStatsImpl$Uid: int getUid()>','<android.util.Property: java.lang.String getName()>','<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>','<android.webkit.WebViewInputDispatcher: void access$500(android.webkit.WebViewInputDispatcher)>','<com.android.server.wm.WindowManagerService: void reenableKeyguard(android.os.IBinder)>','<android.text.Layout$Ellipsizer: java.lang.CharSequence subSequence(int,int)>','<android.view.IWindow$Stub$Proxy: void closeSystemDialogs(java.lang.String)>','<android.webkit.WebViewClassic: void passToJavaScript(java.lang.String,android.view.KeyEvent)>','<com.android.internal.telephony.sip.SipPhoneBase: void stopRingbackTone()>','<com.android.server.sip.SipSessionGroup: void reset()>','<android.net.wifi.WifiManager: boolean stopWifi()>','<android.preference.Preference$BaseSavedState$1: android.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel)>','<com.android.server.wm.InputMonitor: void notifyInputChannelBroken(com.android.server.input.InputWindowHandle)>','<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>','<android.widget.TextView: int viewportToContentHorizontalOffset()>','<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.Typeface: int hashCode()>','<android.preference.Preference: boolean shouldCommit()>','<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>','<android.bluetooth.BluetoothHeadset: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>','<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceThrottle(java.lang.String,int,int)>','<com.android.server.NotificationManagerService: boolean access$1202(com.android.server.NotificationManagerService,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.statusbar.IStatusBarService getStatusBarService()>','<android.os.WorkSource: boolean add(android.os.WorkSource)>','<android.appwidget.AppWidgetHostView: void viewDataChanged(int)>','<com.android.internal.policy.impl.GlobalActions: boolean access$1000(com.android.internal.policy.impl.GlobalActions)>','<android.filterfw.core.MutableFrameFormat: void setTarget(int)>','<com.android.internal.policy.impl.KeyguardViewMediator: android.content.Context access$200(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.location.IGpsStatusProvider$Stub: void <init>()>','<com.android.internal.telephony.cdma.RuimRecords: void setVoiceMessageWaiting(int,int)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.content.res.StringBlock$Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>','<com.android.server.wm.WindowStateAnimator: void destroyDeferredSurfaceLocked()>','<android.view.KeyEvent: boolean isCtrlPressed()>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: int access$402(android.server.BluetoothPanProfileHandler$BluetoothPanDevice,int)>','<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>','<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: void <clinit>()>','<android.content.CursorEntityIterator: boolean hasNext()>','<android.view.HardwareRenderer$GlRenderer: void setup(int,int)>','<android.renderscript.RenderScript: int nAllocationCreateTyped(int,int,int,int)>','<com.android.server.location.LocationProviderProxy: boolean requiresSatellite()>','<com.android.server.AppWidgetService: void bindAppWidgetId(int,android.content.ComponentName)>','<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>','<com.android.internal.telephony.BaseCommands: void unsetOnIccRefresh(android.os.Handler)>','<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>','<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>','<android.database.sqlite.SQLiteOpenHelper: void close()>','<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>','<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>','<com.android.server.wm.DragState: int getDragLayerLw()>','<com.android.internal.telephony.AdnRecord: java.lang.String getAlphaTag()>','<android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status valueOf(java.lang.String)>','<android.view.MotionEvent: float getHistoricalToolMinor(int)>','<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>','<android.view.KeyEvent: boolean isShiftPressed()>','<com.android.server.pm.PackageSettingBase: void setStopped(boolean,int)>','<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$1: void <init>(com.android.internal.os.BatteryStatsImpl,java.lang.String)>','<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>','<android.view.AccessibilityInteractionController$PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>','<android.content.res.StringBlock$StyleIDs: int access$202(android.content.res.StringBlock$StyleIDs,int)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setToCodeScheme(int)>','<com.android.internal.telephony.gsm.GSMPhone: void enableLocationUpdates()>','<android.server.BluetoothAdapterProperties: void setProperty(java.lang.String,java.lang.String)>','<android.view.IApplicationToken$Stub$Proxy: void windowsVisible()>','<android.webkit.WebViewClassic: void setInitialScale(int)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int describeContents()>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getSecondArgument(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message,int,int)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.ArrayList)>','<android.media.MediaRouter$UserRouteInfo: void setRemoteControlClient(android.media.RemoteControlClient)>','<android.view.View: boolean isLayoutDirectionRtl(java.util.Locale)>','<android.webkit.WebViewCore: void access$3200(android.webkit.WebViewCore,int,int,int,java.lang.String,int,int,int)>','<android.view.View: boolean hasOpaqueScrollbars()>','<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress access$500(android.widget.AbsListView)>','<com.android.server.PowerManagerService$PokeLock: void <init>(com.android.server.PowerManagerService,int,android.os.IBinder,java.lang.String)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void setCarrierHelpText(int)>','<android.text.style.EasyEditSpan: int getSpanTypeId()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<android.location.LocationManager$ListenerTransport$2: void handleMessage(android.os.Message)>','<android.server.BluetoothService: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>','<android.net.TrafficStats: long getTotalTxPackets()>','<android.os.Bundle: void putFloat(java.lang.String,float)>','<com.android.server.wm.WindowManagerService$LayoutFields: void <init>(com.android.server.wm.WindowManagerService)>','<android.app.Activity: void setDefaultKeyMode(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>','<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])>','<android.speech.tts.TextToSpeech: android.os.Bundle access$500(android.speech.tts.TextToSpeech,java.util.HashMap)>','<android.webkit.WebViewClient: void onProceededAfterSslError(android.webkit.WebView,android.net.http.SslError)>','<android.opengl.GLLogWrapper: java.nio.ByteBuffer access$000(android.opengl.GLLogWrapper,int,java.nio.Buffer)>','<android.hardware.Camera$Parameters: void setGpsAltitude(double)>','<com.android.vcard.VCardProperty: void setName(java.lang.String)>','<android.net.wifi.WifiNative: boolean startWpsPinKeypad(java.lang.String)>','<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)>','<android.database.ContentObservable: void dispatchChange(boolean)>','<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>','<android.os.Handler$MessengerImpl: void send(android.os.Message)>','<android.view.Display: void <clinit>()>','<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()>','<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)>','<com.android.internal.view.menu.MenuBuilder: void removeItem(int)>','<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>','<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()>','<android.app.backup.BackupDataInput: int getDataSize()>','<com.android.server.EventLogTags: void writeBootProgressPmsDataScanStart(long)>','<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>','<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>','<com.android.server.am.ActivityManagerService: boolean isSleeping()>','<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>','<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>','<android.net.RouteInfo: android.net.LinkAddress getDestination()>','<com.android.internal.telephony.BaseCommands: void registerForCdmaSubscriptionChanged(android.os.Handler,int,java.lang.Object)>','<android.os.PowerManager$WakeLock: void release(int)>','<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>','<android.net.ProxyProperties$1: android.net.ProxyProperties[] newArray(int)>','<com.android.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$1)>','<com.android.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>','<com.android.internal.telephony.RIL: void getIMEI(android.os.Message)>','<com.android.internal.telephony.AdnRecord: void <init>(int,int,java.lang.String,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService: boolean access$4100(android.net.wifi.p2p.WifiP2pService)>','<android.webkit.WebSettingsClassic: boolean getAllowFileAccessFromFileURLs()>','<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>','<com.android.vcard.VCardUtils: boolean containsOnlyWhiteSpaces(java.util.Collection)>','<android.widget.AbsSeekBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.Activity: void dismissDialog(int)>','<com.android.internal.telephony.sip.SipPhone: boolean canTake(java.lang.Object)>','<android.view.textservice.TextInfo: void <init>(java.lang.String,int,int)>','<android.widget.RelativeLayout$LayoutParams: int[] getRules()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void setString(java.lang.String,java.lang.String,int)>','<com.android.vcard.VCardParserImpl_V30: java.lang.String unescapeCharacter(char)>','<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>','<android.content.ClipDescription: int getMimeTypeCount()>','<android.text.StaticLayout: int getLineDescent(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void dispatchDraw(android.graphics.Canvas)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getPanDevicesMatchingConnectionStates(int[])>','<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)>','<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>','<android.os.IVibratorService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: java.lang.CharSequence access$100(com.android.internal.policy.impl.KeyguardStatusViewManager,libcore.util.MutableInt)>','<android.webkit.HTML5VideoViewProxy: void teardown()>','<com.android.internal.os.BatteryStatsImpl$Uid: void reportExcessiveWakeLocked(java.lang.String,long,long)>','<android.content.IntentFilter: int countDataPaths()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void handleMessage(android.os.Message)>','<android.widget.PopupWindow: boolean isLayoutInScreenEnabled()>','<com.android.server.AppWidgetService$ServiceConnectionProxy: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.net.IConnectivityManager$Stub$Proxy: boolean prepareVpn(java.lang.String,java.lang.String)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void updatePause()>','<com.android.server.am.LaunchWarningWindow: void <init>(android.content.Context,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<android.view.ViewDebug$RecyclerTraceType: void <clinit>()>','<android.widget.Editor$SelectionStartHandleView: android.widget.Editor$ActionPopupWindow getActionPopupWindow()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void plug(long,long)>','<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int)>','<com.android.server.WallpaperManagerService: void setDimensionHints(int,int)>','<com.android.vcard.VCardComposer: java.lang.String buildVCard(java.util.Map)>','<android.content.res.StringBlock$Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)>','<android.database.AbstractWindowedCursor: boolean hasWindow()>','<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)>','<android.graphics.Rect: void union(android.graphics.Rect)>','<android.net.wifi.WifiWatchdogStateMachine$DefaultState: void enter()>','<android.database.CursorWrapper: boolean requery()>','<android.net.NetworkStatsHistory: void <init>(long,int,int)>','<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)>','<com.android.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothPbap access$1500(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.policy.impl.PhoneWindowManager: int adjustSystemUiVisibilityLw(int)>','<com.android.server.pm.Installer: boolean ping()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: void access$900(com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer,int)>','<android.widget.OverScroller: void setFinalY(int)>','<com.android.internal.telephony.CallManager: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>','<com.android.internal.telephony.RetryManager: boolean configure(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$600(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.view.WindowManagerImpl$CompatModeWrapper: android.view.Display getDefaultDisplay()>','<android.renderscript.RenderScript$RSErrorHandler: void <init>()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector childSelector(com.android.uiautomator.core.UiSelector)>','<android.content.pm.Signature$1: android.content.pm.Signature[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRoamingOn()>','<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>','<android.provider.ContactsContract: java.lang.String snippetize(java.lang.String,java.lang.String,java.lang.String,char,char,java.lang.String,int)>','<android.telephony.PhoneStateListener: void onDataActivity(int)>','<com.android.i18n.phonenumbers.RegexCache: java.util.regex.Pattern getPatternForRegex(java.lang.String)>','<com.android.server.am.ActivityRecord: void addNewIntentLocked(android.content.Intent)>','<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)>','<android.view.SurfaceView$4: void removeCallback(android.view.SurfaceHolder$Callback)>','<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)>','<com.android.vcard.exception.VCardInvalidCommentLineException: void <init>(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: void writeToParcelLocked(android.os.Parcel,boolean,int)>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setPlaybackState(int,int,long)>','<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)>','<android.view.View: void dispatchSetPressed(boolean)>','<android.net.nsd.DnsSdTxtRecord: byte[] access$000(android.net.nsd.DnsSdTxtRecord)>','<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>','<com.android.internal.os.SamplingProfilerIntegration$2: void <init>(java.lang.String,android.content.pm.PackageInfo)>','<android.filterfw.core.Frame: int incRefCount()>','<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)>','<android.app.IActivityController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.media.AudioService$FocusStackEntry: void unlinkToDeath()>','<android.app.Service: void onStart(android.content.Intent,int)>','<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>','<com.android.server.am.ActivityRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStack,com.android.server.am.ProcessRecord,int,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.ActivityRecord,java.lang.String,int,boolean)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean access$900(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.text.StaticLayout: int getEllipsizedWidth()>','<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsRecorder access$300(com.android.server.net.NetworkStatsService)>','<com.android.internal.os.BatteryStatsImpl$Counter: void detach()>','<com.android.internal.widget.SlidingTab: void reset(boolean)>','<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)>','<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>','<com.android.server.EventLogTags: void writePowerScreenBroadcastDone(int,long,int)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated(float)>','<android.view.ViewRootImpl$2: boolean isCreating()>','<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)>','<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>','<com.android.internal.telephony.sip.SipPhoneBase: void getCellBroadcastSmsConfig(android.os.Message)>','<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: int[] following(int)>','<android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser$Permission,int)>','<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyUnknownConnection()>','<android.database.sqlite.SQLiteConnection$PreparedStatement: void <init>(android.database.sqlite.SQLiteConnection$1)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.app.backup.IRestoreSession$Stub$Proxy: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>','<android.app.Instrumentation: void stopAllocCounting()>','<android.app.ActivityManagerProxy: void dismissKeyguardOnNextActivity()>','<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>','<android.os.Handler: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: void doPendingActivityLaunchesLocked(boolean)>','<com.android.internal.util.FileRotator$FileInfo: boolean isActive()>','<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>','<android.filterfw.core.FrameFormat: java.lang.String baseTypeToString(int)>','<android.view.IRotationWatcher$Stub: void <init>()>','<android.webkit.WebViewCore: void access$400(android.webkit.WebViewCore,int,long)>','<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>','<android.widget.ListPopupWindow: void setPromptPosition(int)>','<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>','<com.android.internal.widget.WaveView: long access$602(com.android.internal.widget.WaveView,long)>','<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>','<com.android.server.WifiService: int access$2000(com.android.server.WifiService)>','<com.android.internal.telephony.RIL: java.lang.String requestToString(int)>','<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockReleasedLocked(int)>','<android.app.ActivityThread$ReceiverData: java.lang.String toString()>','<com.android.internal.telephony.DataCallState$SetupResult: com.android.internal.telephony.DataCallState$SetupResult[] values()>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$902(com.android.server.wm.WindowManagerService$LayoutFields,boolean)>','<android.view.View$10: void <init>(java.lang.String)>','<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>','<android.text.style.TabStopSpan$Standard: void <init>(int)>','<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>','<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>','<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()>','<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String getCurrentKeyboardLayout()>','<com.android.server.pm.PackageManagerService: java.lang.String[] splitString(java.lang.String,char)>','<com.android.internal.statusbar.StatusBarIconList: int describeContents()>','<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>','<android.media.AudioManager: int getRingerMode()>','<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setArtwork(int,android.graphics.Bitmap)>','<android.speech.tts.TextToSpeech$Connection$1: void onError(java.lang.String)>','<android.view.ViewStub: void setVisibility(int)>','<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>','<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()>','<android.widget.HorizontalScrollView: void computeScroll()>','<android.widget.AbsListView: void layoutChildren()>','<android.graphics.drawable.Drawable: void jumpToCurrentState()>','<android.media.Metadata: int getInt(int)>','<android.graphics.Picture: void endRecording()>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)>','<com.android.uiautomator.core.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>','<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int,int)>','<com.android.internal.widget.ScrollingTabContainerView: void updateTab(int)>','<android.content.SyncManager$10: void <init>(android.content.SyncManager)>','<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>','<android.webkit.AutoCompletePopup: void resetRect()>','<com.android.server.wm.WindowManagerService: void dumpWindowsLocked(java.io.PrintWriter,boolean,java.util.ArrayList)>','<android.view.GLES20DisplayList: android.view.HardwareCanvas start()>','<android.content.pm.ApplicationInfo: void <clinit>()>','<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>','<android.nfc.INfcTag$Stub$Proxy: int close(int)>','<android.content.SyncManager: android.content.SyncManager$SyncHandler access$200(android.content.SyncManager)>','<android.os.storage.IMountService$Stub$Proxy: int formatVolume(java.lang.String)>','<android.content.SyncManager$6: void onReceive(android.content.Context,android.content.Intent)>','<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>','<android.net.NetworkStats: android.net.NetworkStats addValues(java.lang.String,int,int,int,long,long,long,long,long)>','<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>','<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>','<android.webkit.CacheManager$CacheResult: java.io.InputStream getInputStream()>','<android.webkit.WebViewCore$AutoFillData: void <init>(int,java.lang.String)>','<com.android.server.wm.WindowManagerService: int getOrientationFromAppTokensLocked()>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.lang.String,boolean,boolean)>','<android.view.GLES20Canvas: int saveLayerAlpha(float,float,float,float,int,int)>','<android.media.AudioService: void access$1300(android.media.AudioService,int)>','<android.bluetooth.BluetoothClass: boolean doesClassMatch(int)>','<com.android.internal.policy.impl.GlobalActions$8: void <init>(com.android.internal.policy.impl.GlobalActions,android.os.Handler)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse$1: android.net.wifi.p2p.nsd.WifiP2pServiceResponse[] newArray(int)>','<com.android.internal.telephony.sip.SipCallBase: void clearDisconnected()>','<android.util.EventLog$Event: int getTag()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$300(com.android.internal.policy.impl.KeyguardViewMediator,int)>','<com.android.internal.app.AlertController: void installContent()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.List)>','<com.android.server.am.BroadcastFilter: void dumpBroadcastFilterState(java.io.PrintWriter,java.lang.String)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLockPattern(byte[],int)>','<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>','<com.android.internal.telephony.PhoneBase: void unregisterForRedirectedNumberInfo(android.os.Handler)>','<com.android.server.MountService: boolean access$502(com.android.server.MountService,boolean)>','<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler: void loadEFTransparent(int,android.os.Message)>','<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>','<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>','<android.net.http.HttpsConnection$1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>','<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)>','<android.view.View: int getHorizontalFadingEdgeLength()>','<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String)>','<android.app.ActivityThread: android.content.res.Configuration applyConfigCompatMainThread(android.content.res.Configuration,android.content.res.CompatibilityInfo)>','<android.media.AudioService: int access$1002(android.media.AudioService,int)>','<com.android.internal.telephony.cdma.CdmaConnection: void updateParent(com.android.internal.telephony.cdma.CdmaCall,com.android.internal.telephony.cdma.CdmaCall)>','<android.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>','<android.media.MediaPlayer: void deselectTrack(int)>','<com.android.internal.os.BatteryStatsImpl$Timer: void logState(android.util.Printer,java.lang.String)>','<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>','<android.os.StrictMode: java.lang.ThreadLocal access$500()>','<android.widget.AbsListView: boolean trackMotionScroll(int,int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: boolean access$200(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<android.view.IWindowManager$Stub$Proxy: void removeAppToken(android.os.IBinder)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String[] listBonds()>','<android.inputmethodservice.InputMethodService: void onCreate()>','<com.android.server.PowerManagerService: void access$5100(com.android.server.PowerManagerService,int)>','<android.net.NetworkInfo: int getSubtype()>','<android.webkit.HTML5VideoInline: void deleteSurfaceTexture()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: int getPhoneState()>','<com.android.server.WallpaperManagerService: void settingsRestored()>','<android.bluetooth.BluetoothDeviceProfileState: void access$8800(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.Window: boolean haveDimAmount()>','<com.android.server.InputMethodManagerService: java.lang.String access$1900()>','<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$3: void <init>(android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable)>','<android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings[] values()>','<android.media.AudioService: android.media.AudioService$SoundPoolCallback access$1700(android.media.AudioService)>','<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>','<android.media.MediaFile: void <init>()>','<com.android.internal.policy.impl.GlobalActions$3: boolean showDuringKeyguard()>','<com.android.internal.os.LoggingPrintStream: void println(char[])>','<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener)>','<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long)>','<com.android.server.location.GpsLocationProvider: void updateLocation(android.location.Location)>','<android.content.IContentService$Stub$Proxy: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub: void <init>()>','<com.android.internal.telephony.cdma.RuimRecords: void onReady()>','<com.android.server.net.NetworkStatsRecorder: void setPersistThreshold(long)>','<android.webkit.HTML5VideoViewProxy$1: void handleMessage(android.os.Message)>','<android.webkit.HTML5VideoInline: void <init>(int,int)>','<android.webkit.HTML5VideoViewProxy$1: void <init>(android.webkit.HTML5VideoViewProxy)>','<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>','<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>','<android.app.ActivityOptions: int getAnimationType()>','<android.widget.TextView: void setTextScaleX(float)>','<android.view.View: boolean awakenScrollBars()>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout access$1600(android.widget.RemoteViewsAdapter$RemoteViewsMetaData,int,android.view.View,android.view.ViewGroup)>','<android.graphics.drawable.ShapeDrawable: int getOpacity()>','<android.webkit.FindActionModeCallback: void afterTextChanged(android.text.Editable)>','<android.app.ActivityThread: void unscheduleGcIdler()>','<com.android.internal.telephony.gsm.GsmConnection: long getHoldDurationMillis()>','<android.webkit.WebViewClassic: void onVisibilityChanged(android.view.View,int)>','<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>','<android.nfc.NfcAdapter: void setP2pModes(int,int)>','<android.text.style.UnderlineSpan: void <init>()>','<android.net.Uri: android.net.Uri fromFile(java.io.File)>','<android.widget.SpellChecker$SpellParser: void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1)>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>','<android.net.http.HttpsConnection$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>','<com.android.server.pm.PackageSettingBase: void setInstallerPackageName(java.lang.String)>','<com.android.vcard.VCardUtils: boolean isValidInV21ButUnknownToContactsPhoteType(java.lang.String)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$1: void handleMessage(android.os.Message)>','<android.content.ContentProviderResult$1: android.content.ContentProviderResult createFromParcel(android.os.Parcel)>','<android.location.LocationManager: void removeTestProvider(java.lang.String)>','<android.view.MotionEvent: int getDeviceId()>','<com.android.internal.telephony.IPhoneSubInfo$Stub: android.os.IBinder asBinder()>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.graphics.Matrix$1: void setRotate(float)>','<com.android.internal.telephony.gsm.GSMPhone: void sendDtmf(char)>','<com.android.server.sip.SipSessionGroup$MakeCallCommand: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.SipProfile,java.lang.String,int)>','<android.os.INetworkManagementService$Stub$Proxy: void disableIpv6(java.lang.String)>','<android.app.ProgressDialog: void onCreate(android.os.Bundle)>','<android.media.IRingtonePlayer$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.location.GpsLocationProvider: void access$1300(com.android.server.location.GpsLocationProvider)>','<android.webkit.URLUtil: void <init>()>','<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>','<com.android.server.am.ActivityManagerService$GraphicsBinder: void <init>(com.android.server.am.ActivityManagerService)>','<android.app.backup.BackupAgent: void <init>()>','<android.net.NetworkState$1: void <init>()>','<android.view.ViewGroup: void detachAllViewsFromParent()>','<android.opengl.GLLogWrapper: void glRotatex(int,int,int,int)>','<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>','<android.location.Location: float bearingTo(android.location.Location)>','<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>','<android.location.Location: void setLongitude(double)>','<com.android.internal.telephony.ATResponseParser: void <init>(java.lang.String)>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void finalize()>','<android.security.KeyChainException: void <init>(java.lang.String)>','<com.android.server.MountService: boolean isObbMounted(java.lang.String)>','<android.graphics.Rect: void inset(int,int)>','<android.content.ComponentName: java.lang.String getPackageName()>','<android.view.HardwareRenderer$Gl20Renderer: void startTrimMemory(int)>','<android.widget.GridView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: void handleMessage(android.os.Message)>','<android.view.GLES20Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>','<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>','<android.widget.Editor$HandleView: boolean onTouchEvent(android.view.MotionEvent)>','<android.media.AudioManager: void setSpeakerphoneOn(boolean)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$2: void onChange(boolean)>','<com.android.internal.telephony.PhoneBase: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>','<com.android.internal.view.BaseIWindow: void <init>()>','<android.os.StrictMode: void conditionallyCheckInstanceCounts()>','<com.android.server.AppWidgetServiceImpl: void onConfigurationChanged()>','<com.android.internal.policy.impl.LockScreen: void access$200(com.android.internal.policy.impl.LockScreen)>','<android.webkit.ZoomManager$ScaleDetectorListener: boolean isPanningOnly(android.view.ScaleGestureDetector)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreInstall(int)>','<android.util.LocaleUtil: int getLayoutDirectionFromLocale(java.util.Locale)>','<android.webkit.WebViewClassic: void flingScroll(int,int)>','<android.net.nsd.NsdManager: java.lang.Object access$000(android.net.nsd.NsdManager,int)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: void onDaemonConnected()>','<android.net.sip.SipProfile: void <init>(android.net.sip.SipProfile$1)>','<android.net.sip.SipSession$Listener: void onCalling(android.net.sip.SipSession)>','<android.database.CursorWrapper: int getCount()>','<com.android.internal.widget.ActionBarContextView$1: void onClick(android.view.View)>','<android.content.pm.ConfigurationInfo: void <init>(android.os.Parcel,android.content.pm.ConfigurationInfo$1)>','<android.text.TextUtils$1: void <init>()>','<com.android.internal.policy.impl.AccountUnlockScreen: void cleanUp()>','<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.net.wifi.WifiWatchdogStateMachine: void access$200(android.net.wifi.WifiWatchdogStateMachine)>','<android.app.backup.RestoreSet: void <clinit>()>','<com.android.internal.policy.impl.FaceUnlock: void show(long)>','<com.android.internal.telephony.gsm.GsmCallTracker: void registerForVoiceCallEnded(android.os.Handler,int,java.lang.Object)>','<android.opengl.GLLogWrapper: void glHint(int,int)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters()>','<android.net.wifi.IWifiManager$Stub$Proxy: void setCountryCode(java.lang.String,boolean)>','<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>','<android.accounts.IAccountAuthenticatorResponse$Stub: android.accounts.IAccountAuthenticatorResponse asInterface(android.os.IBinder)>','<android.provider.BrowserContract$Settings: boolean isSyncEnabled(android.content.Context)>','<android.telephony.SmsCbMessage: int getGeographicalScope()>','<com.android.internal.util.StateMachine: void setDbg(boolean)>','<android.net.Uri$HierarchicalUri: int describeContents()>','<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.String packageForFilter(android.content.pm.PackageParser$ServiceIntentInfo)>','<android.widget.ExpandableListConnector$GroupMetadata$1: android.widget.ExpandableListConnector$GroupMetadata[] newArray(int)>','<android.app.Dialog: void openOptionsMenu()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>','<android.widget.Filter$RequestArguments: void <init>(android.widget.Filter$1)>','<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>','<android.webkit.WebView: boolean performLongClick()>','<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>','<com.android.server.StatusBarManagerService: void toggleRecentApps()>','<com.android.internal.widget.multiwaveview.Ease$Quart$3: float getInterpolation(float)>','<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet)>','<com.android.server.PowerManagerService$11: void run()>','<android.view.View$11: void setValue(java.lang.Object,float)>','<android.telephony.TelephonyManager: int getNetworkType()>','<android.animation.AnimatorSet: java.util.ArrayList access$400(android.animation.AnimatorSet)>','<android.location.Criteria: boolean access$702(android.location.Criteria,boolean)>','<android.app.ContextImpl: void startActivity(android.content.Intent,android.os.Bundle)>','<android.view.ViewGroup: void dispatchDisplayHint(int)>','<android.view.View: void setScrollBarStyle(int)>','<com.android.internal.telephony.sip.SipConnectionBase: void proceedAfterWaitChar()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$4700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.CallTracker: void <init>()>','<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>','<com.android.internal.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)>','<android.view.IWindowSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.util.MathUtils: int constrain(int,int,int)>','<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.view.ViewRootImpl$W: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.server.pm.Settings: void dumpPackagesLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>','<android.server.BluetoothService: java.lang.String access$500()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getConnectedHealthDevices()>','<android.widget.SearchView: void onTextFocusChanged()>','<com.android.server.PowerManagerService: boolean access$7202(com.android.server.PowerManagerService,boolean)>','<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>','<android.opengl.GLLogWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>','<android.content.SyncManager: void <init>(android.content.Context,boolean)>','<android.net.wifi.p2p.WifiP2pDeviceList$1: void <init>()>','<android.text.style.SuggestionSpan: int getSpanTypeId()>','<com.android.uiautomator.core.UiDevice: boolean pressDPadCenter()>','<com.android.internal.telephony.PhoneProxy: void conference()>','<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(int,float)>','<android.opengl.ManagedEGLContext: void terminate()>','<android.speech.tts.TextToSpeech: int access$1200(android.speech.tts.TextToSpeech)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String[] getIsimImpu()>','<android.graphics.drawable.ClipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.inputmethodservice.Keyboard$Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>','<android.opengl.GLLogWrapper: void glDrawTexsvOES(short[],int)>','<com.android.internal.telephony.cat.Duration: void <init>(android.os.Parcel,com.android.internal.telephony.cat.Duration$1)>','<android.filterfw.core.FilterFactory: void <clinit>()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>','<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>','<com.android.internal.telephony.RIL: void access$200(com.android.internal.telephony.RIL)>','<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>','<android.content.Loader: void registerOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener)>','<android.content.res.XmlBlock: int access$500(int,int)>','<android.filterfw.format.ImageFormat: void <init>()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfPlLoaded: void onRecordLoaded(android.os.AsyncResult)>','<com.android.server.sip.SipSessionListenerProxy: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)>','<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>','<com.android.server.wm.DimAnimator: void printTo(java.lang.String,java.io.PrintWriter)>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerPath(java.lang.String)>','<android.graphics.Region: int access$000(android.os.Parcel)>','<android.database.DatabaseUtils: void <init>()>','<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>','<android.content.SyncManager: java.lang.String formatTime(long)>','<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>','<com.android.server.wm.BlackFrame: void kill()>','<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>','<android.webkit.CacheManager: boolean endCacheTransaction()>','<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>','<android.view.ViewGroup: void removeViewInLayout(android.view.View)>','<android.content.SyncManager$8: void onServiceChanged(android.content.SyncAdapterType,boolean)>','<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>','<android.view.ViewConfiguration: int getScaledOverflingDistance()>','<android.webkit.WebViewInputDispatcher$TouchStream: android.view.MotionEvent getLastEvent()>','<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>','<android.text.util.Linkify: void <clinit>()>','<com.android.internal.telephony.DefaultPhoneNotifier: void <init>()>','<com.android.server.IntentResolver$IteratorWrapper: boolean hasNext()>','<android.widget.OverScroller: void startScroll(int,int,int,int)>','<android.app.SearchDialog: void onRestoreInstanceState(android.os.Bundle)>','<android.net.wifi.WifiStateMachine: void access$12300(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>','<android.net.NetworkInfo$1: android.net.NetworkInfo createFromParcel(android.os.Parcel)>','<com.android.server.pm.PackageManagerService: boolean access$1900(android.content.pm.PackageParser$Package)>','<android.widget.CursorAdapter$ChangeObserver: void <init>(android.widget.CursorAdapter)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.media.RemoteControlClient: void setTransportControlFlags(int)>','<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.SelectActionModeCallback: void setTextSelected(boolean)>','<android.text.BoringLayout: int getBottomPadding()>','<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>','<com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction: void <clinit>()>','<com.android.internal.widget.ActionBarView: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>','<android.view.View: int getPaddingStart()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$5900(android.net.wifi.WifiStateMachine)>','<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>','<com.android.internal.util.ArrayUtils: long total(long[])>','<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>','<android.server.BluetoothEventLoop$1: void <init>(android.server.BluetoothEventLoop)>','<android.filterfw.core.NativeBuffer: void <clinit>()>','<android.webkit.WebSyncManager$SyncHandler: void handleMessage(android.os.Message)>','<android.view.KeyEvent: boolean isSymPressed()>','<com.android.server.input.InputManagerService$7: void onChange(boolean)>','<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>','<android.os.Registrant: android.os.Message messageForRegistrant()>','<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()>','<com.android.internal.telephony.DataConnection$FailCause: com.android.internal.telephony.DataConnection$FailCause[] values()>','<android.content.ContentProviderOperation$Builder: java.lang.String[] access$400(android.content.ContentProviderOperation$Builder)>','<com.android.server.pm.Settings$1: java.lang.String packageForFilter(android.content.IntentFilter)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void onResume()>','<android.graphics.drawable.LevelListDrawable$LevelListState: void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaPrlVersion()>','<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>','<android.widget.AbsListView: void dispatchSetPressed(boolean)>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName)>','<android.net.sip.ISipService$Stub: android.os.IBinder asBinder()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>','<android.accounts.AccountAuthenticatorCache$MySerializer: void <init>(android.accounts.AccountAuthenticatorCache$1)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>','<android.net.Uri$Part: boolean isEmpty()>','<android.net.sip.SimpleSessionDescription$Media: void setRtpPayload(int,java.lang.String,java.lang.String)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean disableNetwork(int)>','<android.hardware.Camera$Parameters: java.lang.String getColorEffect()>','<android.os.Parcel: int dataCapacity()>','<android.app.IThumbnailReceiver$Stub: android.os.IBinder asBinder()>','<com.android.server.pm.PackageManagerService$5: void run()>','<android.app.LoadedApk$ReceiverDispatcher: android.content.IIntentReceiver getIIntentReceiver()>','<android.os.storage.IMountService$Stub: void <init>()>','<android.inputmethodservice.KeyboardView: int access$900(android.inputmethodservice.KeyboardView)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void initApnContextsAndDataConnection()>','<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<com.android.server.location.GpsLocationProvider$1: void <init>(com.android.server.location.GpsLocationProvider)>','<android.text.TextDirectionHeuristics$1: void <clinit>()>','<com.android.internal.telephony.cdma.CDMAPhone: void clearDisconnected()>','<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()>','<android.content.SyncResult: void <init>(android.os.Parcel,android.content.SyncResult$1)>','<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,int)>','<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile getLocalProfile()>','<android.text.SpannableStringInternal: java.lang.String toString()>','<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>','<android.inputmethodservice.Keyboard$Key: void onReleased(boolean)>','<android.app.ActivityThread$AppBindData: java.lang.String toString()>','<com.android.internal.util.AsyncService: void onCreate()>','<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>','<android.preference.PreferenceManager: boolean setPreferences(android.preference.PreferenceScreen)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: android.os.Handler access$700(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$13400(android.net.wifi.WifiStateMachine)>','<android.content.Loader: void deliverResult(java.lang.Object)>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,android.graphics.Bitmap)>','<android.webkit.WebSettingsClassic: void setProperty(java.lang.String,java.lang.String)>','<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)>','<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: void onInputDevicesChanged(int[])>','<android.hardware.SystemSensorManager: boolean registerListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>','<android.app.ActivityThread$ApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo)>','<com.android.internal.util.CharSequences: void <init>()>','<android.renderscript.Element: android.renderscript.Element U64_2(android.renderscript.RenderScript)>','<android.graphics.Matrix: boolean postSkew(float,float,float,float)>','<android.view.ViewDebug$2: java.lang.Void[] pre()>','<android.webkit.CallbackProxy: android.webkit.WebViewClient getWebViewClient()>','<com.android.server.usb.UsbHostManager: void <init>(android.content.Context,com.android.server.usb.UsbSettingsManager)>','<com.android.internal.widget.multiwaveview.GlowPadView$AnimationBundle: void <init>(com.android.internal.widget.multiwaveview.GlowPadView,com.android.internal.widget.multiwaveview.GlowPadView$1)>','<com.android.server.am.ActivityManagerService$1: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<android.widget.HorizontalScrollView: boolean shouldDelayChildPressedState()>','<com.android.server.InputMethodManagerService$1: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.am.UsageStatsService: void enforceCallingPermission()>','<android.content.res.XmlBlock$Parser: int getAttributeListValue(int,java.lang.String[],int)>','<android.os.storage.IMountService$Stub$Proxy: int[] getStorageUsers(java.lang.String)>','<android.filterfw.core.Filter: boolean canProcess()>','<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>','<android.webkit.WebViewCore: void sendMessage(android.os.Message)>','<android.webkit.JWebCoreJavaBridge: void <init>()>','<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>','<android.net.Proxy: java.lang.String getDefaultHost()>','<android.net.sip.SipProfile: javax.sip.address.Address access$302(android.net.sip.SipProfile,javax.sip.address.Address)>','<android.filterfw.core.FrameFormat: boolean equals(java.lang.Object)>','<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.internal.os.RuntimeInit: void <clinit>()>','<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.view.MotionEvent$PointerProperties: android.view.MotionEvent$PointerProperties[] createArray(int)>','<android.location.ICountryListener$Stub: android.os.IBinder asBinder()>','<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>','<com.android.server.LocationManagerService$Receiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockReleasedFromSource(android.os.WorkSource)>','<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.accounts.AccountAuthenticatorResponse$1: void <init>()>','<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.app.ActivityManagerProxy: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)>','<com.android.server.pm.PackageManagerService: void updateUserName(int,java.lang.String)>','<android.nfc.TransceiveResult$1: void <init>()>','<com.android.server.EventLogTags: void writePowerScreenBroadcastStop(int,int)>','<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)>','<android.opengl.GLLogWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>','<android.net.wifi.p2p.WifiP2pService: java.util.HashMap access$9100(android.net.wifi.p2p.WifiP2pService)>','<com.android.server.sip.SipSessionGroup: java.lang.String access$1300(com.android.server.sip.SipSessionGroup)>','<android.content.IntentFilter$AuthorityEntry: int getPort()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$3: void <init>(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)>','<com.android.server.NotificationManagerService: com.android.server.LightsService$Light access$1400(com.android.server.NotificationManagerService)>','<android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize[] values()>','<android.view.SurfaceView$MyWindow: void windowFocusChanged(boolean,boolean)>','<android.media.MediaRouter$UserRouteInfo: void setVolumeMax(int)>','<android.telephony.CellInfo$1: android.telephony.CellInfo[] newArray(int)>','<android.app.SearchableInfo: void <clinit>()>','<android.os.DropBoxManager$Entry: void <init>(java.lang.String,long,java.lang.String)>','<android.os.Environment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationUri(android.net.Uri)>','<android.nfc.INdefPushCallback$Stub$Proxy: void onNdefPushComplete()>','<android.widget.AdapterView$AdapterDataSetObserver: void onChanged()>','<android.bluetooth.BluetoothUuid: boolean containsAnyUuid(android.os.ParcelUuid[],android.os.ParcelUuid[])>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void enter()>','<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>','<android.view.ViewRootImpl: android.view.Surface access$400(android.view.ViewRootImpl)>','<com.android.server.InputMethodManagerService: void hideInputMethodMenuLocked()>','<com.android.internal.policy.impl.GlobalActions$8: void onChange(boolean)>','<android.os.Registrant: void notifyException(java.lang.Throwable)>','<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>','<com.android.internal.policy.impl.KeyguardViewBase$1: void <init>(com.android.internal.policy.impl.KeyguardViewBase)>','<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String extractPossibleNumber(java.lang.String)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector selected(boolean)>','<com.android.server.net.NetworkPolicyManagerService$11: boolean handleMessage(android.os.Message)>','<com.android.internal.telephony.SMSDispatcher: void <clinit>()>','<android.content.pm.ParceledListSlice: int describeContents()>','<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)>','<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>','<android.webkit.ViewManager: void <init>(android.webkit.WebViewClassic)>','<com.android.server.AppWidgetServiceImpl: boolean addProviderLocked(android.content.pm.ResolveInfo)>','<android.graphics.drawable.LayerDrawable: int getOpacity()>','<android.graphics.RectF$1: android.graphics.RectF createFromParcel(android.os.Parcel)>','<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>','<android.graphics.RectF: int describeContents()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void onConnectionStateChanged(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>','<com.android.internal.telephony.cdma.RuimRecords: void dispose()>','<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.app.ActionBarImpl: void setIcon(int)>','<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()>','<com.android.internal.util.StateMachine$SmHandler: boolean access$2100(com.android.internal.util.StateMachine$SmHandler,android.os.Message)>','<com.android.internal.telephony.CallManager: java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)>','<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.server.MountService: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>','<com.android.internal.telephony.DataConnection$FailCause: boolean isEventLoggable()>','<android.util.LocalLog: void <init>(int)>','<com.android.internal.telephony.CallManager: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>','<android.graphics.Matrix: void reset()>','<android.text.style.RelativeSizeSpan: int getSpanTypeId()>','<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>','<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>','<android.net.wifi.WifiStateMachine$3: void onReceive(android.content.Context,android.content.Intent)>','<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>','<android.webkit.ViewStateSerializer: boolean serializeViewState(java.io.OutputStream,android.webkit.WebViewCore$DrawData)>','<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>','<android.renderscript.RenderScript: void nProgramBindTexture(int,int,int)>','<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>','<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>','<android.webkit.WebViewClassic: boolean overlayHorizontalScrollbar()>','<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>','<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>','<android.media.AudioService$VolumeStreamState: int access$5100(android.media.AudioService$VolumeStreamState)>','<android.content.ContentProviderOperation: boolean isYieldAllowed()>','<com.android.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>','<android.bluetooth.BluetoothTetheringDataTracker: boolean reconnect()>','<com.android.server.PowerManagerService: void access$400(com.android.server.PowerManagerService,android.os.IBinder,int,boolean)>','<android.nfc.NfcActivityManager: void onActivityStopped(android.app.Activity)>','<android.net.wifi.WifiStateMachine: void access$6800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>','<android.view.Surface: void <clinit>()>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void onHardKeyboardStatusChange(boolean,boolean)>','<com.android.server.PowerManagerService: int[] access$3500(com.android.server.PowerManagerService)>','<android.view.LayoutInflater$BlinkLayout: boolean access$000(android.view.LayoutInflater$BlinkLayout)>','<com.android.internal.os.ProcessStats: int getLastSoftIrqTime()>','<android.os.DropBoxManager$Entry$1: android.os.DropBoxManager$Entry createFromParcel(android.os.Parcel)>','<com.android.vcard.VCardConfig: boolean isVersion30(int)>','<android.os.ZygoteStartFailedEx: void <init>(java.lang.Throwable)>','<android.filterpacks.base.NullFilter: void <init>(java.lang.String)>','<android.view.HardwareRenderer$Gl20Renderer: javax.microedition.khronos.egl.EGLSurface access$400()>','<android.os.Looper: void loop()>','<android.os.StrictMode: void writeGatheredViolationsToParcel(android.os.Parcel)>','<com.android.vcard.VCardParserImpl_V30: java.util.Set getKnownPropertyNameSet()>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifySignalStrength(com.android.internal.telephony.Phone)>','<android.net.wifi.WpsResult: java.lang.String toString()>','<com.android.uiautomator.core.UiSelector: void <init>()>','<android.text.style.SuggestionSpan: void <init>(android.os.Parcel)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean setWifiEnabled(boolean)>','<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>','<android.content.pm.ApplicationInfo: boolean hasRtlSupport()>','<android.text.style.URLSpan: void <init>(java.lang.String)>','<android.webkit.BrowserFrame$ConfigCallback: void onLowMemory()>','<android.widget.OverScroller$SplineOverScroller: boolean continueWhenFinished()>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void run()>','<com.android.internal.widget.TransportControlView$SavedState: void <clinit>()>','<android.os.Bundle: char getChar(java.lang.String,char)>','<com.android.internal.widget.WaveView: int access$002(com.android.internal.widget.WaveView,int)>','<android.app.backup.BackupAgent: void attach(android.content.Context)>','<android.opengl.GLLogWrapper: void glGetLightxv(int,int,int[],int)>','<android.media.AudioService: void access$8000(android.media.AudioService)>','<android.webkit.WebView: void setNetworkAvailable(boolean)>','<android.net.Uri$PathPart: android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart)>','<android.provider.Settings$NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>','<android.widget.TextView: int[] onCreateDrawableState(int)>','<android.accessibilityservice.AccessibilityService$1: void onSetConnectionId(int)>','<android.renderscript.Element$DataKind: android.renderscript.Element$DataKind[] values()>','<android.webkit.WebViewClassic$ViewSizeData: void <init>()>','<com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction: com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction valueOf(java.lang.String)>','<android.text.style.SuggestionRangeSpan: void <init>(android.os.Parcel)>','<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>','<com.android.internal.os.BatteryStatsImpl$Timer: void writeToParcel(android.os.Parcel,long)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedGlobalNetworkCallingCodes()>','<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>','<android.filterfw.core.GLFrameTimer: void <init>()>','<android.net.wifi.WifiConfiguration$1: void <init>()>','<com.android.internal.widget.ActionBarView: android.widget.LinearLayout access$800(com.android.internal.widget.ActionBarView)>','<android.app.LoadedApk$ReceiverDispatcher$InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>','<android.view.GLES20DisplayList: void setLeft(int)>','<android.graphics.PointF$1: android.graphics.PointF[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>','<android.widget.Filter$RequestHandler: void <init>(android.widget.Filter,android.os.Looper)>','<android.net.wifi.WifiStateMachine: int syncGetWifiApState()>','<android.webkit.WebView: void clearFormData()>','<android.inputmethodservice.InputMethodService: void hideStatusIcon()>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int)>','<com.android.server.wm.AppWindowAnimator$DummyAnimation: void <init>()>','<com.android.server.ConnectivityService: void access$2800(com.android.server.ConnectivityService)>','<android.graphics.Path: void offset(float,float,android.graphics.Path)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)>','<android.app.Activity: void registerForContextMenu(android.view.View)>','<android.view.IWindow$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.ViewManager: boolean access$402(android.webkit.ViewManager,boolean)>','<com.android.server.Watchdog$1: void run()>','<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.media.AudioService: void <init>(android.content.Context)>','<android.location.ILocationProvider$Stub: void <init>()>','<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.filterfw.core.Frame: boolean isReadOnly()>','<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>','<android.webkit.WebSettingsClassic$EventHandler: boolean access$800(android.webkit.WebSettingsClassic$EventHandler,android.os.Message)>','<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean notifyIncomingConnection(java.lang.String,boolean)>','<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>','<com.android.vcard.VCardParserImpl_V30: java.lang.String getVersionString()>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollState()>','<android.net.wifi.WpsInfo: void <init>()>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>','<android.view.View: void onResolvedLayoutDirectionChanged()>','<com.android.internal.widget.ActionBarView: com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$100(com.android.internal.widget.ActionBarView)>','<android.os.IMessenger$Stub: void <init>()>','<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>','<com.android.internal.telephony.cat.GetInkeyInputResponseData: void <init>(boolean)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: android.view.View getView()>','<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()>','<android.widget.Toast: void setText(int)>','<android.view.IOnKeyguardExitResult$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.PhoneProxy: void startDtmf(char)>','<android.webkit.WebViewClassic: void loadData(java.lang.String,java.lang.String,java.lang.String)>','<android.content.pm.PathPermission: java.lang.String getWritePermission()>','<com.android.server.pm.PackageSettingBase: int getEnabled(int)>','<android.view.View: void dispatchStartTemporaryDetach()>','<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>','<android.location.GeocoderParams: java.lang.String access$202(android.location.GeocoderParams,java.lang.String)>','<com.android.internal.widget.multiwaveview.GlowPadView: float access$200(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.speech.tts.TextToSpeech: java.lang.String access$302(android.speech.tts.TextToSpeech,java.lang.String)>','<com.android.server.ShutdownActivity$1: void run()>','<android.graphics.NinePatch: int getDensity()>','<android.util.Slog: int println(int,java.lang.String,java.lang.String)>','<android.view.accessibility.IAccessibilityManagerClient$Stub: void <init>()>','<android.net.NetworkQuotaInfo$1: void <init>()>','<android.view.animation.Animation: void ensureInterpolator()>','<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>','<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int,int)>','<android.os.WorkSource: boolean add(int)>','<com.android.server.am.ProcessRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Proc,android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String,int)>','<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$202(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$Connection)>','<android.preference.PreferenceScreen$SavedState: void <init>(android.os.Parcel)>','<android.bluetooth.BluetoothDeviceProfileState: void access$9800(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.webkit.CookieManager: void flushCookieStore()>','<android.server.BluetoothService: int getScanMode()>','<android.widget.AbsListView: void access$3200(android.widget.AbsListView,boolean)>','<android.view.View: void clearAccessibilityFocus()>','<android.webkit.WebViewClassic: void onScrollChanged(int,int,int,int)>','<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager$OnAudioFocusChangeListener,int,int)>','<com.android.internal.widget.EditableInputConnection: boolean beginBatchEdit()>','<com.android.internal.telephony.IccCardApplication: void <init>()>','<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>','<android.view.InputDevice$MotionRange: float getFlat()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean disableCellBroadcast(int)>','<android.media.AudioService: boolean access$2700(android.media.AudioService)>','<android.app.LoadedApk: void removeContextRegistrations(android.content.Context,java.lang.String,java.lang.String)>','<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)>','<android.app.SearchDialog: void onConfigurationChanged()>','<com.android.server.net.NetworkPolicyManagerService$7: void onReceive(android.content.Context,android.content.Intent)>','<android.filterfw.core.Frame: void reset(android.filterfw.core.FrameFormat)>','<android.os.PowerManager: void goToSleep(long)>','<android.net.Proxy$AndroidProxySelectorRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<com.android.internal.app.ActionBarImpl: boolean isSystemShowing()>','<android.provider.ContactsContract$AggregationExceptions: void <clinit>()>','<com.android.internal.os.HandlerCaller: void removeMessages(int)>','<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>','<android.content.pm.ApplicationInfo$1: void <init>()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>','<com.android.internal.policy.impl.PhoneWindowManager: void removeWindowLw(android.view.WindowManagerPolicy$WindowState)>','<android.location.CountryDetector: void removeCountryListener(android.location.CountryListener)>','<android.opengl.GLLogWrapper$PointerInfo: void bindByteBuffer()>','<android.webkit.GeolocationPermissionsClassic: void clear(java.lang.String)>','<android.view.inputmethod.InputMethodManager: void focusOut(android.view.View)>','<android.media.AudioService$RemoteControlStackEntry: void resetPlaybackInfo()>','<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getCompleteVoiceMailNumber()>','<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>','<android.media.AudioService: android.os.Looper access$1402(android.media.AudioService,android.os.Looper)>','<android.view.KeyEvent: boolean hasDefaultAction()>','<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>','<android.net.http.AndroidHttpClient$2: void <init>(android.net.http.AndroidHttpClient,org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>','<android.net.ProxyProperties: int hashCode()>','<android.util.Pools: android.util.Pool synchronizedPool(android.util.Pool,java.lang.Object)>','<android.media.AudioService$VolumeStreamState: int getMaxIndex()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>','<android.view.animation.AnimationSet: java.util.List getAnimations()>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)>','<com.android.server.pm.PackageManagerService: java.util.List getPreferredPackages(int)>','<android.filterfw.core.Filter: java.util.Collection getOutputPorts()>','<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>','<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>','<com.android.internal.telephony.sip.SipPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<android.app.Activity: void onTrimMemory(int)>','<android.preference.PreferenceManager: boolean shouldCommit()>','<android.widget.RelativeLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.os.AsyncTask: void init()>','<android.webkit.ZoomManager: void updateDoubleTapZoom(int)>','<com.android.server.wm.WindowState: java.lang.String toString()>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void setmIccSmsInterfaceManager(com.android.internal.telephony.IccSmsInterfaceManager)>','<com.android.server.location.GpsLocationProvider: java.util.concurrent.CountDownLatch access$2300(com.android.server.location.GpsLocationProvider)>','<android.view.View: void setBackground(android.graphics.drawable.Drawable)>','<com.android.server.PowerManagerService: boolean access$6202(com.android.server.PowerManagerService,boolean)>','<android.webkit.WebStorageClassic$1: void handleMessage(android.os.Message)>','<android.webkit.AccessibilityInjector: void addAccessibilityApisIfNecessary()>','<android.net.wifi.WifiManager: void forget(android.net.wifi.WifiManager$Channel,int,android.net.wifi.WifiManager$ActionListener)>','<android.filterpacks.videosink.MediaEncoderFilter: void <init>(java.lang.String)>','<android.widget.AbsListView$RecycleBin: void markChildrenDirty()>','<android.view.View: void ensureTransformationInfo()>','<android.content.ComponentName: int describeContents()>','<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.database.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>','<android.database.CursorWindow: void onAllReferencesReleased()>','<android.util.SparseLongArray: void removeAt(int)>','<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>','<com.android.internal.telephony.gsm.GSMPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>','<android.app.ContextImpl$15: java.lang.Object createStaticService()>','<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>','<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String[] getKeyboardLayouts()>','<com.android.server.wm.WindowStateAnimator: void updateSurfaceWindowCrop(boolean)>','<android.view.View: boolean isDirty()>','<android.net.wifi.WifiNative: boolean startWpsPbc(java.lang.String)>','<android.app.LoadedApk$ReceiverDispatcher: android.app.IntentReceiverLeaked getLocation()>','<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>','<android.widget.Editor$PinnedPopupWindow: void show()>','<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>','<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>','<android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>','<com.android.server.pm.PackageManagerService: void addPackageToPreferred(java.lang.String)>','<com.android.internal.telephony.DataConnectionAc: void setLinkPropertiesHttpProxySync(android.net.ProxyProperties)>','<com.android.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>','<com.android.vcard.VCardProperty: void addGroup(java.lang.String)>','<com.android.server.PowerManagerService: boolean access$4500(com.android.server.PowerManagerService)>','<android.bluetooth.BluetoothDeviceProfileState: void access$2300(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.os.ConditionVariable: void <init>(boolean)>','<com.android.server.NotificationManagerService: boolean areNotificationsEnabledForPackage(java.lang.String)>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile3gLower(java.lang.String)>','<android.os.IHardwareService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.vcard.VCardProperty: void addValues(java.util.List)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setIcon(int)>','<android.content.SyncManager: void maybeRescheduleSync(android.content.SyncResult,android.content.SyncOperation)>','<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>','<com.android.internal.telephony.CallManager: java.util.List getRingingCalls()>','<com.android.internal.net.VpnConfig$1: com.android.internal.net.VpnConfig createFromParcel(android.os.Parcel)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onRefreshCarrierInfo(java.lang.CharSequence,java.lang.CharSequence)>','<android.net.wifi.SupplicantStateTracker$1: void <clinit>()>','<com.android.server.connectivity.Tethering: boolean access$300(com.android.server.connectivity.Tethering)>','<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>','<android.widget.ProgressBar: void setMax(int)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getCompleteVoiceMailNumber()>','<android.os.Binder$1: void run()>','<com.android.server.NotificationManagerService$NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context)>','<android.media.IAudioService$Stub$Proxy: int getRemoteStreamVolume()>','<android.graphics.Paint$FontMetricsInt: void <init>()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getWifiRunningTime(long,int)>','<com.android.uiautomator.core.InteractionController: boolean click(int,int)>','<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>','<com.android.server.AppWidgetServiceImpl: int[] startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,java.util.List)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockReleased(int)>','<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: void readExternal(java.io.ObjectInput)>','<android.text.Html$HtmlParser: org.ccil.cowan.tagsoup.HTMLSchema access$000()>','<android.widget.ZoomButton$1: void run()>','<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.view.ViewRootImpl$2: void setKeepScreenOn(boolean)>','<android.webkit.WebViewClassic: android.net.http.SslCertificate getCertificate()>','<android.net.DhcpStateMachine: java.lang.String access$100(android.net.DhcpStateMachine)>','<android.app.FragmentManagerImpl: void saveFragmentViewState(android.app.Fragment)>','<android.net.wifi.WifiStateMachine$SupplicantStartedState: boolean processMessage(android.os.Message)>','<android.net.wifi.WifiManager$WifiLock: void <init>(android.net.wifi.WifiManager,int,java.lang.String,android.net.wifi.WifiManager$1)>','<android.net.wifi.WifiStateMachine: void access$3300(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>','<android.database.sqlite.SQLiteProgram: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)>','<android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<android.view.View: java.util.ArrayList getTouchables()>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: com.android.internal.view.menu.MenuBuilder access$000(com.android.internal.view.menu.MenuPopupHelper$MenuAdapter)>','<com.android.internal.view.BaseIWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>','<android.media.MediaRecorder: int access$000(android.media.MediaRecorder)>','<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)>','<android.text.format.DateUtils: java.lang.String getAMPMString(int)>','<android.view.MotionEvent: void <clinit>()>','<com.android.server.am.ActivityManagerService: void startSetupActivityLocked()>','<com.android.server.usb.UsbDeviceManager: java.lang.String access$1100(java.lang.String,java.lang.String)>','<android.animation.PropertyValuesHolder: void <clinit>()>','<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>','<com.android.internal.widget.SlidingTab$Slider: void layout(int,int,int,int,int)>','<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>','<android.widget.ExpandableListConnector: java.lang.Object getItem(int)>','<android.nfc.NfcAdapter: int getSdkVersion()>','<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>','<android.widget.RemoteViewsAdapter$3: void <init>(android.widget.RemoteViewsAdapter,int,android.widget.RemoteViews,int)>','<com.android.internal.util.StateMachine: void unhandledMessage(android.os.Message)>','<android.content.pm.ConfigurationInfo$1: android.content.pm.ConfigurationInfo createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$1: void <init>(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.security.KeyStore: void <clinit>()>','<android.net.sip.ISipSession$Stub$Proxy: void endCall()>','<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$1: void run()>','<com.android.internal.telephony.cdma.sms.UserData: java.lang.String toString()>','<android.app.ApplicationThreadProxy: void requestThumbnail(android.os.IBinder)>','<android.graphics.Bitmap: void eraseColor(int)>','<android.preference.PreferenceManager: void dispatchNewIntent(android.content.Intent)>','<android.view.View$ListenerInfo: android.view.View$OnKeyListener access$200(android.view.View$ListenerInfo)>','<android.net.wifi.SupplicantState: int describeContents()>','<com.android.internal.widget.multiwaveview.GlowPadView: com.android.internal.widget.multiwaveview.PointCloud access$900(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<com.android.server.InputMethodManagerService$5: void <init>(com.android.server.InputMethodManagerService)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean copyMessageToIccEf(int,byte[],byte[])>','<android.media.IAudioService$Stub$Proxy: void setRemoteStreamVolume(int)>','<android.webkit.CallbackProxy: void <init>(android.content.Context,android.webkit.WebViewClassic)>','<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>','<android.view.DragEvent: android.content.ClipDescription getClipDescription()>','<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)>','<android.content.res.XmlBlock: int access$1100(int,int)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()>','<android.net.wifi.WifiConfigStore: boolean disableNetwork(int,int)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.LocalSocketImpl: void finalize()>','<android.media.AudioManager: void adjustMasterVolume(int,int)>','<android.view.VelocityTracker: android.view.VelocityTracker getNextPoolable()>','<com.android.internal.widget.ActionBarView$2: void onClick(android.view.View)>','<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>','<com.android.internal.telephony.sip.SipPhoneBase: void migrate(android.os.RegistrantList,android.os.RegistrantList)>','<com.android.internal.os.BatteryStatsImpl: void doPlugLocked(long,long)>','<android.app.IProcessObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>','<android.location.GpsSatellite: void setStatus(android.location.GpsSatellite)>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: com.android.internal.widget.PointerLocationView$FasterStringBuilder append(int,int)>','<android.hardware.ISerialManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean onTrySetupData(java.lang.String)>','<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)>','<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>','<android.location.GeocoderParams: java.util.Locale access$102(android.location.GeocoderParams,java.util.Locale)>','<android.accounts.AccountManager$4: java.lang.Boolean bundleToResult(android.os.Bundle)>','<android.view.GLES20Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas$EdgeType)>','<com.android.internal.widget.PointerLocationView$PointerState: float access$500(com.android.internal.widget.PointerLocationView$PointerState)>','<android.net.wifi.p2p.WifiP2pService: byte access$9204(android.net.wifi.p2p.WifiP2pService)>','<android.app.LoadedApk: android.app.Application getApplication()>','<android.view.IWindowManager$Stub$Proxy: void updateRotation(boolean,boolean)>','<android.database.CursorWrapper: float getFloat(int)>','<com.android.internal.view.IInputConnectionWrapper: void clearMetaKeyStates(int)>','<com.android.server.pm.Settings: void removeUserLPr(int)>','<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void writeToParcel(android.os.Parcel,int)>','<com.android.server.WifiService$Multicaster: java.lang.String toString()>','<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>','<android.content.res.Configuration: void <init>()>','<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>','<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>','<android.media.AudioService$VolumeStreamState: void access$700(android.media.AudioService$VolumeStreamState,java.io.PrintWriter)>','<android.view.HardwareCanvas: int callDrawGLFunction(int)>','<com.android.server.pm.UserManager: void updateUserName(int,java.lang.String)>','<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>','<android.net.EthernetDataTracker: boolean isTeardownRequested()>','<android.webkit.CertTool: void addCertificate(android.content.Context,java.lang.String,byte[])>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String[] getIsimImpu()>','<com.android.internal.policy.impl.PasswordUnlockScreen$5: void onTick(long)>','<android.accounts.AccountManager$12: void run()>','<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>','<android.webkit.WebViewCore: java.lang.String access$4100(android.webkit.WebViewCore,int,int,int)>','<android.net.NetworkPolicy: void clearSnooze()>','<com.android.server.EventLogTags: void writePowerScreenBroadcastSend(int)>','<android.webkit.WebViewClassic: void postUrl(java.lang.String,byte[])>','<com.android.internal.widget.LockPatternView: int getSuggestedMinimumHeight()>','<android.accounts.AccountManagerService: void access$900(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account)>','<android.telephony.SmsMessage$SubmitPdu: void <init>(com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>','<android.view.textservice.SuggestionsInfo$1: android.view.textservice.SuggestionsInfo[] newArray(int)>','<android.renderscript.RenderScript: void destroy()>','<com.android.server.LightsService: android.content.Context access$300(com.android.server.LightsService)>','<android.media.IAudioService$Stub$Proxy: int getLastAudibleMasterVolume()>','<android.filterfw.core.NativeFrame: void setInts(int[])>','<android.view.Choreographer$CallbackQueue: void <init>(android.view.Choreographer,android.view.Choreographer$1)>','<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>','<android.view.AccessibilityIterators$WordTextSegmentIterator: void onLocaleChanged(java.util.Locale)>','<android.view.View$CheckForTap: void <init>(android.view.View,android.view.View$1)>','<android.content.res.TypedArray: float getFraction(int,int,int,float)>','<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)>','<android.location.LocationManager: void <init>(android.location.ILocationManager)>','<com.android.vcard.VCardParserImpl_V21: boolean isValidPropertyName(java.lang.String)>','<android.net.NetworkTemplate: void forceAllNetworkTypes()>','<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>','<android.hardware.LegacySensorManager$LmsFilter: float filter(long,float)>','<android.net.NetworkTemplate: java.lang.String getSubscriberId()>','<android.media.AudioService: void unregisterMediaButtonEventReceiverForCalls()>','<android.telephony.TelephonyManager: void <clinit>()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: com.android.internal.telephony.IccCard$State getSimState()>','<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>','<android.widget.AdapterView$AdapterDataSetObserver: void onInvalidated()>','<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>','<com.android.internal.policy.impl.GlobalActions: void access$1700(com.android.internal.policy.impl.GlobalActions)>','<android.media.Metadata: int lastSytemId()>','<android.os.FileObserver: void startWatching()>','<com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode: void <clinit>()>','<com.android.internal.policy.impl.GlobalActions: com.android.internal.policy.impl.GlobalActions$ToggleAction$State access$402(com.android.internal.policy.impl.GlobalActions,com.android.internal.policy.impl.GlobalActions$ToggleAction$State)>','<com.android.server.AlarmManagerService: android.content.Context access$400(com.android.server.AlarmManagerService)>','<android.media.MediaRouter$SimpleCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup)>','<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)>','<android.view.SurfaceView: boolean isFixedSize()>','<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>','<android.view.View: android.view.View findViewTraversal(int)>','<android.preference.PreferenceGroupAdapter: void <init>(android.preference.PreferenceGroup)>','<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForCallWaiting(android.os.Handler)>','<android.widget.RelativeLayout$LayoutParams: int access$112(android.widget.RelativeLayout$LayoutParams,int)>','<android.media.Metadata: java.util.Set keySet()>','<android.opengl.ManagedEGLContext: void <clinit>()>','<android.hardware.SystemSensorManager$ListenerDelegate: boolean hasSensor(android.hardware.Sensor)>','<com.android.internal.os.BatteryStatsImpl$Timer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>','<android.location.ILocationManager$Stub$Proxy: void removeUpdatesPI(android.app.PendingIntent)>','<android.webkit.DeviceMotionService: void onAccuracyChanged(android.hardware.Sensor,int)>','<android.view.View: void getFocusedRect(android.graphics.Rect)>','<android.net.INetworkPolicyListener$Stub$Proxy: void onRestrictBackgroundChanged(boolean)>','<android.view.Choreographer$2: java.lang.String toString()>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_TEST(android.renderscript.RenderScript)>','<android.hardware.input.KeyboardLayout: int compareTo(java.lang.Object)>','<com.android.server.am.ActivityStack: void cleanUpActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void hangupAndPowerOff()>','<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()>','<android.webkit.WebView: void onPause()>','<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>','<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>','<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)>','<com.android.ex.variablespeed.VariableSpeed: void setVariableSpeed(float)>','<android.view.HardwareRenderer$GlRenderer: void onPostDraw()>','<android.webkit.WebViewInputDispatcher$DispatchEventQueue: android.webkit.WebViewInputDispatcher$DispatchEvent dequeueList()>','<android.net.wifi.WifiStateMachine: int syncGetWifiState()>','<com.android.internal.telephony.IccRecords: boolean isProvisioned()>','<com.android.internal.util.FastXmlSerializer: void flush()>','<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>','<android.content.res.AssetManager$AssetInputStream: int read(byte[])>','<com.android.server.pm.Installer: int cloneUserData(int,int,boolean)>','<com.android.internal.telephony.DataConnectionTracker$DataRoamingSettingObserver: void unregister(android.content.Context)>','<com.android.internal.view.IInputMethodManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.GLES20Canvas: void attachFunctor(int)>','<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>','<com.android.internal.widget.ActionBarContextView: void closeMode()>','<android.webkit.WebViewClassic$5: void <init>(android.webkit.WebViewClassic,android.os.Message)>','<com.android.internal.policy.impl.PhoneWindowManager$PointerLocationInputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper,com.android.internal.widget.PointerLocationView)>','<android.telephony.PhoneNumberFormattingTextWatcher: void <init>(java.lang.String)>','<android.content.pm.IPackageInstallObserver$Stub: void <init>()>','<android.webkit.WebViewClassic: void dumpDisplayTree()>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone$State getState()>','<android.widget.ProgressBar$RefreshProgressRunnable: void run()>','<android.os.PatternMatcher$1: void <init>()>','<com.android.internal.telephony.IccFileHandler: void updateEFTransparent(int,byte[],android.os.Message)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: android.bluetooth.BluetoothHealthAppConfiguration access$800(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<android.app.IAlarmManager$Stub$Proxy: void setTime(long)>','<android.app.ApplicationErrorReport$BatteryInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.SurfaceView$3: boolean onPreDraw()>','<android.os.WorkSource: void <init>()>','<com.android.internal.telephony.cdma.CdmaMmiCode: void <clinit>()>','<com.android.server.WifiService: void reassociate()>','<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>','<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,int[],int)>','<android.widget.TextView: int getTopPaddingOffset()>','<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>','<android.server.BluetoothAdapterStateMachine: boolean access$2900(android.server.BluetoothAdapterStateMachine)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isOtaSpNumber(java.lang.String)>','<com.android.internal.telephony.GsmAlphabet: int countGsmSeptetsUsingTables(java.lang.CharSequence,boolean,int,int)>','<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap access$1100(android.media.AudioService$VolumeStreamState)>','<com.android.server.WifiService: int access$400(com.android.server.WifiService)>','<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getDeviceSvn()>','<android.server.search.SearchManagerService$GlobalSearchProviderObserver: void <init>(android.server.search.SearchManagerService,android.content.ContentResolver)>','<android.webkit.DeviceOrientationService: void <init>(android.webkit.DeviceMotionAndOrientationManager,android.content.Context)>','<com.android.server.AlarmManagerService: void setInexactRepeating(int,long,long,android.app.PendingIntent)>','<com.android.server.DevicePolicyManagerService$MyPackageMonitor: void onSomePackagesChanged()>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: void <init>()>','<android.graphics.drawable.RotateDrawable: void setAlpha(int)>','<android.server.BluetoothAdapterStateMachine: void access$3900(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.server.PowerManagerService: void setScreenBrightnessOverride(int)>','<android.net.NetworkUtils: java.net.InetAddress hexToInet6Address(java.lang.String)>','<android.app.admin.DeviceAdminInfo$1: void <init>()>','<android.content.ContentService$ObserverNode$ObserverEntry: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,android.util.SparseIntArray)>','<android.accounts.AccountManagerService$UserAccounts: java.lang.Object access$200(android.accounts.AccountManagerService$UserAccounts)>','<android.content.SyncAdaptersCache$MySerializer: android.content.SyncAdapterType createFromXml(org.xmlpull.v1.XmlPullParser)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3002(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)>','<android.webkit.WebSettingsClassic: void setMinimumFontSize(int)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumUpperCase(android.content.ComponentName)>','<android.webkit.WebViewCore: void geolocationPermissionsShowPrompt(java.lang.String)>','<android.net.sip.SipSession: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>','<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.server.wm.WindowManagerService: void sendNewConfiguration()>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void <init>(java.util.ArrayList,boolean,android.os.Parcel)>','<android.text.SpannableStringInternal: void removeSpan(java.lang.Object)>','<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage(android.os.Message)>','<android.util.LongSparseArray: int indexOfKey(long)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean processMessage(android.os.Message)>','<android.widget.PopupWindow: void access$500(android.widget.PopupWindow,boolean)>','<com.android.server.location.GpsLocationProvider$Listener: void binderDied()>','<com.android.uiautomator.core.UiDevice: void waitForIdle(long)>','<android.widget.AdapterViewAnimator$SavedState$1: android.widget.AdapterViewAnimator$SavedState[] newArray(int)>','<android.graphics.Bitmap: void <init>(int,byte[],boolean,byte[],int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneOn()>','<android.os.Parcel: double readDouble()>','<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)>','<android.webkit.HTML5VideoFullScreen: int getBufferPercentage()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.LockPatternKeyguardView$Mode access$2200(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.widget.RemoteViews$ReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.widget.TextView: void onLayout(boolean,int,int,int,int)>','<android.provider.Settings$Secure: void <clinit>()>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ScrollingTabContainerView access$1300(com.android.internal.app.ActionBarImpl)>','<com.android.internal.telephony.DataConnectionTracker: void onEnableApn(int,int)>','<android.media.AudioService$VolumeStreamState: void setLastAudibleIndex(int,int)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: void <init>(android.server.BluetoothPanProfileHandler,int,java.lang.String,java.lang.String,int)>','<com.android.internal.widget.DrawableHolder: void setAlpha(float)>','<com.android.internal.telephony.DataConnectionTracker$1: void <init>(com.android.internal.telephony.DataConnectionTracker)>','<android.content.pm.PackageParser$Component: void <init>(android.content.pm.PackageParser$Component)>','<android.os.StatFs: void <init>(java.lang.String)>','<android.net.NetworkStats: int[] getUniqueUids()>','<android.webkit.WebSettingsClassic: boolean getAllowUniversalAccessFromFileURLs()>','<android.widget.ExpandableListConnector: boolean expandGroup(android.widget.ExpandableListConnector$PositionMetadata)>','<android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>','<android.inputmethodservice.IInputMethodWrapper: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>','<android.os.Debug: void startMethodTracing()>','<com.android.server.location.GpsLocationProvider: boolean supportsBearing()>','<android.content.ContentProviderProxy: android.os.ICancellationSignal createCancellationSignal()>','<android.renderscript.Element: android.renderscript.Element I32_2(android.renderscript.RenderScript)>','<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent$PointerCoords[],int,float,float,int,int,int,int)>','<com.android.internal.util.ArrayUtils: int idealLongArraySize(int)>','<android.widget.FastScroller: int getWidth()>','<android.accounts.IAccountAuthenticatorResponse$Stub: void <init>()>','<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)>','<com.android.internal.telephony.IccCardApplication$AppState: boolean isAppNotReady()>','<android.renderscript.Element: void <init>(int,android.renderscript.RenderScript,android.renderscript.Element[],java.lang.String[],int[])>','<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)>','<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getLayoutInsets()>','<android.text.method.TextKeyListener: int getPrefs(android.content.Context)>','<com.android.vcard.exception.VCardException: void <init>()>','<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>','<com.android.internal.telephony.MccTable$MccEntry: int compareTo(com.android.internal.telephony.MccTable$MccEntry)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean needSensorRunningLp()>','<android.widget.HorizontalScrollView: void onMeasure(int,int)>','<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: android.os.IBinder asBinder()>','<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>','<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>','<com.android.internal.telephony.IccFileNotFound: void <init>()>','<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>','<android.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>','<com.android.server.input.InputManagerService: void access$500(com.android.server.input.InputManagerService,int,int)>','<android.view.VolumePanel$1: void <init>(android.view.VolumePanel)>','<android.webkit.ViewManager$ChildView$1: void <init>(android.webkit.ViewManager$ChildView)>','<com.android.server.PowerManagerService: void bootCompleted()>','<android.webkit.WebSettingsClassic: java.lang.String getSansSerifFontFamily()>','<android.app.KeyguardManager$1: void onKeyguardExitResult(boolean)>','<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>','<com.android.server.connectivity.Vpn$Connection: void <init>(com.android.server.connectivity.Vpn,com.android.server.connectivity.Vpn$1)>','<android.renderscript.Element$Builder: android.renderscript.Element create()>','<android.text.method.ScrollingMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>','<android.app.ActivityManager$TaskThumbnails$1: void <init>()>','<android.filterfw.core.InputPort: boolean isConnected()>','<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>','<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>','<android.view.inputmethod.ExtractedText$1: void <init>()>','<android.os.Bundle: void readFromParcelInner(android.os.Parcel,int)>','<android.text.Spannable$Factory: void <init>()>','<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>','<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>','<android.media.AudioService$SettingsObserver: void onChange(boolean)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)>','<com.android.server.am.ProviderMap: void <init>()>','<android.util.TypedValue: void <clinit>()>','<android.filterfw.core.GLEnvironment: boolean isContextActive()>','<android.media.IAudioService$Stub$Proxy: void adjustVolume(int,int)>','<android.graphics.drawable.LayerDrawable$LayerState: boolean isStateful()>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodSubtype$1: android.view.inputmethod.InputMethodSubtype[] newArray(int)>','<android.widget.ProgressBar: int getResolvedLayoutDirection(android.graphics.drawable.Drawable)>','<android.graphics.Matrix$1: void setScale(float,float,float,float)>','<android.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(android.preference.Preference)>','<android.hardware.usb.UsbDeviceConnection: boolean open(java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.android.internal.widget.AbsActionBarView)>','<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>','<com.android.internal.telephony.BaseCommands: void registerForCallStateChanged(android.os.Handler,int,java.lang.Object)>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setMetadata(int,android.os.Bundle)>','<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>','<com.android.server.NotificationManagerService: java.util.ArrayList access$100(com.android.server.NotificationManagerService)>','<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.view.MotionEvent$PointerCoords: android.view.MotionEvent$PointerCoords[] createArray(int)>','<android.widget.ListPopupWindow: android.widget.ListView getListView()>','<android.hardware.SerialPort: void sendBreak()>','<android.content.res.XmlBlock$Parser: java.lang.String getName()>','<android.net.wifi.WifiInfo: void setSSID(java.lang.String)>','<android.os.IPermissionController$Stub: void <init>()>','<android.speech.tts.ITextToSpeechService$Stub: android.speech.tts.ITextToSpeechService asInterface(android.os.IBinder)>','<android.media.AudioService$VolumeStreamState: int access$4100(android.media.AudioService$VolumeStreamState)>','<com.android.server.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[])>','<android.widget.AbsSeekBar: void setThumbOffset(int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>','<android.app.Activity: void setFeatureDrawableAlpha(int,int)>','<android.filterfw.core.MutableFrameFormat: void setDimensions(int)>','<android.webkit.HTML5VideoViewProxy: android.webkit.WebViewClassic getWebView()>','<android.location.Location: boolean hasAccuracy()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.ContextImpl$19: void <init>()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: boolean access$1000(com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer)>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: com.android.internal.widget.PointerLocationView$FasterStringBuilder append(float,int)>','<android.widget.ImageButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.widget.TextView: int getAutoLinkMask()>','<android.view.GLES20DisplayList: void <init>(java.lang.String)>','<android.os.Bundle: short[] getShortArray(java.lang.String)>','<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>','<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>','<android.graphics.Region: void translate(int,int)>','<android.os.Parcel: float[] createFloatArray()>','<com.android.server.PowerManagerService: void access$2500(com.android.server.PowerManagerService)>','<android.app.ActivityManager$MemoryInfo$1: android.app.ActivityManager$MemoryInfo createFromParcel(android.os.Parcel)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection access$200(com.android.server.pm.PackageManagerService)>','<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()>','<com.android.internal.telephony.RIL: void dial(java.lang.String,int,android.os.Message)>','<android.net.wifi.SupplicantStateTracker: boolean access$102(android.net.wifi.SupplicantStateTracker,boolean)>','<android.content.SyncAdapterType$1: android.content.SyncAdapterType[] newArray(int)>','<android.webkit.WebViewClassic: android.webkit.FindActionModeCallback access$6300(android.webkit.WebViewClassic)>','<android.content.IClipboard$Stub$Proxy: android.content.ClipDescription getPrimaryClipDescription()>','<android.webkit.WebViewClassic: int access$4802(android.webkit.WebViewClassic,int)>','<com.android.internal.telephony.PhoneProxy: void unregisterForRingbackTone(android.os.Handler)>','<com.android.server.pm.Installer: int createUserData(java.lang.String,int,int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>','<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats$NonMonotonicObserver,java.lang.Object)>','<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>','<android.bluetooth.BluetoothHeadset: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>','<android.webkit.PluginList: void addPlugin(android.webkit.Plugin)>','<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>','<com.android.server.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<com.android.internal.app.ActionBarImpl: int getHeight()>','<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>','<android.filterpacks.imageproc.RedEyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>','<android.provider.ContactsContract$Contacts$AggregationSuggestions: android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder builder()>','<android.graphics.RectF: boolean contains(float,float)>','<android.view.View: int getWidth()>','<com.android.internal.telephony.ServiceStateTracker: void setRadioPower(boolean)>','<android.database.CursorToBulkCursorAdaptor: void binderDied()>','<com.android.uiautomator.core.InteractionController: boolean sendText(java.lang.String)>','<android.view.SurfaceView$4: android.graphics.Rect getSurfaceFrame()>','<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>','<android.widget.GridView: boolean sequenceScroll(int)>','<android.net.sip.SimpleSessionDescription$Fields: void access$500(android.net.sip.SimpleSessionDescription$Fields,java.lang.String,char,java.lang.String)>','<android.text.Selection: void <clinit>()>','<android.ddm.DdmHandleHello: void register()>','<com.android.server.wm.AppWindowToken: void sendAppVisibilityToClients()>','<android.os.StrictMode$ThreadPolicy: void <clinit>()>','<android.view.View: void setImportantForAccessibility(int)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: long getItemId(int)>','<com.android.server.ConnectivityService: void setPolicyDataEnable(int,boolean)>','<android.webkit.CacheManager: void <init>()>','<com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>','<android.content.IntentFilter: boolean hasCategory(java.lang.String)>','<android.os.RegistrantList: void notifyException(java.lang.Throwable)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: int intlNumberFormatSize()>','<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>','<android.widget.PopupWindow: void setTouchModal(boolean)>','<android.app.ActivityManager: boolean isUserAMonkey()>','<android.widget.SearchView: int getImeOptions()>','<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)>','<com.android.internal.os.BinderInternal: void forceBinderGc()>','<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>','<android.view.InputEvent: void <clinit>()>','<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>','<android.webkit.WebViewInputDispatcher: void setWebKitWantsTouchEvents(boolean)>','<android.location.Location: void removeBearing()>','<android.provider.Telephony$Carriers: void <init>()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$2200(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.net.wifi.WifiWatchdogStateMachine: int access$400(android.net.wifi.WifiWatchdogStateMachine,int)>','<android.os.StrictMode$Span: void <init>()>','<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>','<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getActionCode(int)>','<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(android.content.res.CompatibilityInfo,boolean)>','<com.android.server.PowerManagerService: int access$1502(com.android.server.PowerManagerService,int)>','<com.android.server.pm.PackageManagerService$8: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>','<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,int[],int)>','<android.net.wifi.WifiNative: boolean stopFilteringMulticastV4Packets()>','<android.animation.Keyframe$ObjectKeyframe: void setValue(java.lang.Object)>','<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>','<android.telephony.CellInfo: android.telephony.SignalStrength getSignalStrength()>','<com.android.internal.telephony.cdma.CdmaCall: boolean isFull()>','<android.appwidget.AppWidgetProviderInfo$1: void <init>()>','<com.android.server.net.NetworkStatsService$4: void onReceive(android.content.Context,android.content.Intent)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getFullName()>','<android.filterfw.core.Frame: int getRefCount()>','<android.view.animation.Animation$Description: void <init>()>','<android.net.NetworkStats$Entry: boolean isEmpty()>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>','<android.webkit.WebViewInputDispatcher: void <clinit>()>','<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled()>','<android.net.wifi.WifiManager: int getWifiApState()>','<android.media.RemoteControlClient: void access$1000(android.media.RemoteControlClient)>','<com.android.internal.telephony.sip.SipCommandInterface: void deleteSmsOnRuim(int,android.os.Message)>','<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$ProcessedMessageInfo access$1900(com.android.internal.util.StateMachine$SmHandler,int)>','<android.app.IAlarmManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.sip.SipService$SipSessionGroupExt: void openToReceiveCalls()>','<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.renderscript.RenderScript: int nTypeCreate(int,int,int,int,boolean,boolean)>','<android.webkit.WebViewClassic: void debugDump()>','<com.android.server.DevicePolicyManagerService$2: void <init>(com.android.server.DevicePolicyManagerService,com.android.server.DevicePolicyManagerService$ActiveAdmin,android.content.ComponentName)>','<android.location.Criteria: int access$302(android.location.Criteria,int)>','<com.android.internal.os.BatteryStatsImpl: void <init>(android.os.Parcel)>','<android.widget.AdapterView: void handleDataChanged()>','<android.webkit.WebViewClassic$FocusTransitionDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: int[] following(int)>','<com.android.server.MountService: void access$1500(com.android.server.MountService,java.lang.String,java.lang.String)>','<android.webkit.AccessibilityInjector: void handleSelectionChangedIfNecessary(java.lang.String)>','<com.android.internal.telephony.cat.LaunchBrowserParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.TextMessage,java.lang.String,com.android.internal.telephony.cat.LaunchBrowserMode)>','<com.android.internal.widget.multiwaveview.Ease$Quad: void <clinit>()>','<android.view.AccessibilityInteractionController: void <init>(android.view.ViewRootImpl)>','<android.widget.RemoteViews$Action: void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter)>','<android.net.wifi.WifiStateMachine$SupplicantStartingState: void <init>(android.net.wifi.WifiStateMachine)>','<android.widget.ExpandableListView: void setSelectedGroup(int)>','<android.nfc.NdefRecord: void <init>(short,byte[],byte[],byte[])>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean performEditorAction(int)>','<android.graphics.drawable.GradientDrawable$GradientState: boolean access$102(android.graphics.drawable.GradientDrawable$GradientState,boolean)>','<android.database.CursorWindow: byte[] getBlob(int,int)>','<com.android.server.location.PassiveProvider: java.lang.String getName()>','<android.graphics.ColorMatrix: void setSaturation(float)>','<com.android.internal.widget.ScrollingTabContainerView: com.android.internal.widget.ScrollingTabContainerView$TabView access$300(com.android.internal.widget.ScrollingTabContainerView,android.app.ActionBar$Tab,boolean)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>','<android.webkit.WebViewClassic: int getScaledNavSlop()>','<android.preference.Preference: void dispatchSaveInstanceState(android.os.Bundle)>','<android.graphics.drawable.ClipDrawable$ClipState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.telephony.AdnRecord: java.lang.String[] getEmails()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void setState(com.android.internal.telephony.DataConnectionTracker$State)>','<android.os.Bundle: void putString(java.lang.String,java.lang.String)>','<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>','<android.webkit.DeviceOrientationService$1: void run()>','<android.net.wifi.WifiNative: int addNetwork()>','<android.webkit.WebViewClassic: void onFixedLengthZoomAnimationEnd()>','<com.android.server.sip.SipSessionGroup: java.lang.String access$2500(com.android.server.sip.SipSessionGroup,javax.sip.message.Message)>','<android.content.ContentValues: void <clinit>()>','<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle open(java.lang.String,android.os.IBinder)>','<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()>','<com.android.internal.util.BitwiseOutputStream$AccessException: void <init>(java.lang.String)>','<com.android.internal.telephony.IccCard: void access$400(com.android.internal.telephony.IccCard,android.os.AsyncResult)>','<android.media.AudioService$SoundPoolCallback: void setLastSample(int)>','<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>','<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)>','<com.android.internal.view.menu.ActionMenuItem: boolean expandActionView()>','<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>','<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>','<android.webkit.CookieManagerClassic: void flushCookieStore()>','<android.graphics.drawable.AnimationDrawable: void <init>()>','<android.text.method.BaseMovementMethod: boolean scrollTop(android.widget.TextView,android.text.Spannable)>','<android.net.SSLCertificateSocketFactory$1: void <init>()>','<android.server.BluetoothAdapterStateMachine: void access$5900(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.app.FragmentState$1: void <init>()>','<android.view.IWindowManager$Stub$Proxy: void setAppVisibility(android.os.IBinder,boolean)>','<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>','<android.webkit.DeviceOrientationService$1: void <clinit>()>','<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>','<android.media.MediaRouter$RouteCategory: int getSupportedTypes()>','<com.android.internal.location.DummyLocationProvider: boolean supportsBearing()>','<android.os.AsyncTask$3: void done()>','<android.media.effect.FilterGraphEffect: void release()>','<com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode: com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode valueOf(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Uid: long getAudioTurnedOnTime(long,int)>','<android.server.BluetoothService: byte[] readOutOfBandData()>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: long computeRunTimeLocked(long)>','<android.server.BluetoothAdapterStateMachine: void access$1400(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.view.View: void resolveTextAlignment()>','<android.bluetooth.BluetoothDeviceProfileState$2: void onServiceDisconnected(int)>','<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>','<com.android.server.ConnectivityService$SettingsObserver: void onChange(boolean)>','<android.text.method.PasswordTransformationMethod$ViewReference: void <init>(android.view.View)>','<android.webkit.WebBackForwardList: void close(int)>','<android.webkit.ViewManager: android.webkit.ViewManager$ChildView hitTest(int,int)>','<android.graphics.Bitmap$BitmapFinalizer: void finalize()>','<android.text.method.MetaKeyKeyListener: void <clinit>()>','<android.widget.RelativeLayout: void setGravity(int)>','<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>','<android.webkit.WebSettingsClassic: void setNeedInitialFocus(boolean)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()>','<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>','<com.android.internal.telephony.BaseCommands: void setOnIccSmsFull(android.os.Handler,int,java.lang.Object)>','<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>','<android.view.GLES20RecordingCanvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>','<android.media.IAudioFocusDispatcher$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapInitiatorURI(int)>','<android.view.IWindowManager$Stub$Proxy: int getMaximumSizeDimension()>','<android.bluetooth.IBluetooth$Stub$Proxy: android.os.ParcelUuid[] getUuids()>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: long computeRunTimeLocked(long)>','<com.android.internal.view.menu.ActionMenuItem: boolean collapseActionView()>','<com.android.internal.util.StateMachine$SmHandler: void access$2000(com.android.internal.util.StateMachine$SmHandler)>','<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>','<android.graphics.Point: void <init>()>','<android.widget.AdapterView$AdapterDataSetObserver: void <init>(android.widget.AdapterView)>','<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>','<android.graphics.drawable.RotateDrawable: boolean isStateful()>','<android.speech.tts.TtsEngines$EngineInfoComparator: void <clinit>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasCountryCode()>','<android.view.View: float getHorizontalScrollFactor()>','<android.view.ViewGroup: void setPersistentDrawingCache(int)>','<com.android.internal.policy.impl.SimPukUnlockScreen: android.widget.TextView access$600(com.android.internal.policy.impl.SimPukUnlockScreen)>','<android.hardware.usb.UsbInterface: void <clinit>()>','<android.widget.ExpandableListView$SavedState$1: android.widget.ExpandableListView$SavedState[] newArray(int)>','<com.android.server.EventLogTags: void writeConnectivityStateChanged(int)>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>','<android.content.Intent$1: void <init>()>','<android.net.LinkAddress$1: android.net.LinkAddress createFromParcel(android.os.Parcel)>','<android.hardware.input.IInputDevicesChangedListener$Stub: android.os.IBinder asBinder()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void setLong(java.lang.String,long,int)>','<android.telephony.cdma.CdmaSmsCbProgramData: int describeContents()>','<com.android.internal.telephony.PhoneProxy: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>','<android.net.LinkProperties$1: void <init>()>','<android.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(java.lang.Object,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean comparePermissionInfos(android.content.pm.PermissionInfo,android.content.pm.PermissionInfo)>','<com.android.internal.app.ActionBarImpl: android.animation.Animator access$502(com.android.internal.app.ActionBarImpl,android.animation.Animator)>','<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>','<android.app.IBackupAgent$Stub: android.app.IBackupAgent asInterface(android.os.IBinder)>','<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: void stopScroll()>','<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)>','<com.android.internal.telephony.cat.TextColor: void <clinit>()>','<android.webkit.ZoomControlEmbedded: void update()>','<android.widget.TextView: float getShadowDy()>','<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.telephony.SignalStrength: int getLteDbm()>','<com.android.internal.telephony.cat.Tone$1: com.android.internal.telephony.cat.Tone createFromParcel(android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasUan()>','<android.webkit.CacheManager$CacheResult: int getHttpStatusCode()>','<android.location.Address: double getLongitude()>','<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>','<android.widget.RemoteViewsAdapter$1: void <init>(android.widget.RemoteViewsAdapter)>','<android.app.FragmentManagerState: void <clinit>()>','<android.preference.Preference: void setDefaultValue(java.lang.Object)>','<android.graphics.Rect: int describeContents()>','<android.net.wifi.WifiStateMachine: void access$7900(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.FaceUnlock$2: void reportFailedAttempt()>','<android.widget.SearchView: void onActionViewExpanded()>','<com.android.server.MountService: void registerListener(android.os.storage.IMountServiceListener)>','<android.app.FragmentManagerImpl: boolean executePendingTransactions()>','<android.net.wifi.WifiStateMachine: java.lang.String toString()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2000(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.internal.policy.impl.GlobalActions$SilentModeToggleAction: void <init>(com.android.internal.policy.impl.GlobalActions)>','<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.inputmethodservice.SoftInputWindow: void setSize(int)>','<android.view.ViewTreeObserver$InternalInsetsInfo: void set(android.view.ViewTreeObserver$InternalInsetsInfo)>','<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.CatService getInstance(com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.IccRecords,android.content.Context,com.android.internal.telephony.IccFileHandler,com.android.internal.telephony.IccCard)>','<android.widget.PopupWindow$PopupViewContainer: void sendAccessibilityEvent(int)>','<android.bluetooth.BluetoothDeviceProfileState: int access$900(android.bluetooth.BluetoothDeviceProfileState)>','<android.net.wifi.WifiWatchdogStateMachine: int access$4300(android.net.wifi.WifiWatchdogStateMachine)>','<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>','<android.widget.Toast$TN$1: void run()>','<android.widget.RemoteViews$BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>','<android.os.Debug$MemoryInfo: void readFromParcel(android.os.Parcel)>','<android.text.style.SuggestionRangeSpan: int getSpanTypeId()>','<android.net.wifi.SupplicantStateTracker$DormantState: void enter()>','<com.android.server.am.ActivityManagerService: void batteryNeedsCpuUpdate()>','<android.content.pm.PackageParser$Service: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ServiceInfo)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object,boolean)>','<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.NativeDaemonConnector$ResponseQueue$Response: void <init>(int,java.lang.String)>','<android.content.SyncInfo: void <init>(int,android.accounts.Account,java.lang.String,long)>','<com.android.internal.widget.TransportControlView: void onDetachedFromWindow()>','<android.app.Activity: void performStart()>','<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>','<android.webkit.WebBackForwardList: int getCurrentIndex()>','<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>','<com.android.server.wm.ScreenRotationAnimation: void setSnapshotTransform(android.graphics.Matrix,float)>','<android.app.ContextImpl$8: void <init>()>','<android.app.Notification$Action: void <init>()>','<android.net.WebAddress: void setPath(java.lang.String)>','<android.net.http.HttpsConnection: void <clinit>()>','<com.android.internal.widget.multiwaveview.Ease$Quart$2: void <init>()>','<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>','<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)>','<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)>','<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()>','<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)>','<android.text.Layout: float getLineRight(int)>','<android.renderscript.RenderScript: int nAllocationGetSurfaceTextureID(int)>','<android.text.style.ClickableSpan: void <init>()>','<android.os.Parcel: void readException()>','<android.os.Handler: boolean hasMessages(int,java.lang.Object)>','<android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$000(android.graphics.drawable.LevelListDrawable$LevelListState)>','<android.app.Notification$InboxStyle: void <init>(android.app.Notification$Builder)>','<android.app.ProgressDialog: java.text.NumberFormat access$300(android.app.ProgressDialog)>','<android.net.IThrottleManager$Stub$Proxy: long getPeriodStartTime(java.lang.String)>','<android.text.SpannedString: void <init>(java.lang.CharSequence)>','<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>','<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>','<com.android.internal.os.LoggingPrintStream$1: void write(int)>','<android.view.View: android.graphics.drawable.Drawable getBackground()>','<android.content.pm.ConfigurationInfo: int describeContents()>','<android.view.inputmethod.InputMethodSubtype: int describeContents()>','<com.android.internal.os.storage.ExternalStorageFormatter: android.os.storage.IMountService getMountService()>','<android.view.FocusFinder$1: void <init>()>','<com.android.server.pm.PackageManagerService$MeasureParams: void handleServiceError()>','<android.nfc.Tag$1: void <init>()>','<android.webkit.WebView$PrivateAccess: void onScrollChanged(int,int,int,int)>','<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>','<com.android.internal.telephony.DataConnectionTracker: void access$000(com.android.internal.telephony.DataConnectionTracker)>','<com.android.server.wm.WindowStateAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<android.webkit.HTML5VideoViewProxy: void enterFullScreenVideo(int,java.lang.String)>','<android.net.sip.SipAudioCall: void close()>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>','<android.view.ViewDebug$3: void post(java.lang.Void[])>','<android.location.Location: boolean access$902(android.location.Location,boolean)>','<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>','<android.view.inputmethod.InputBinding: java.lang.String toString()>','<com.android.internal.telephony.gsm.GsmConnection: void onConnectedInOrOut()>','<android.app.SearchDialog: boolean access$000(android.app.SearchDialog)>','<android.content.pm.FeatureInfo$1: void <init>()>','<com.android.internal.widget.WaveView: int access$900(com.android.internal.widget.WaveView)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$DataState getDataConnectionState()>','<android.widget.Editor$SuggestionsPopupWindow: int getVerticalLocalPosition(int)>','<android.filterfw.geometry.Rectangle: void <init>()>','<android.net.sip.SipAudioCall: java.lang.String access$502(android.net.sip.SipAudioCall,java.lang.String)>','<android.graphics.Color: float hue(int)>','<android.view.ScaleGestureDetector$SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>','<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>','<com.android.server.wm.WindowManagerService$3: void <init>(com.android.server.wm.WindowManagerService,android.view.IOnKeyguardExitResult)>','<com.android.server.wm.WindowManagerService: void saveANRStateLocked(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowState)>','<android.text.DynamicLayout: int getNumberOfBlocks()>','<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>','<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>','<android.app.FragmentManagerImpl$1: void run()>','<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>','<android.content.BroadcastReceiver: void <init>()>','<android.view.ViewRootImpl: boolean performHapticFeedback(int,boolean)>','<android.webkit.HTML5VideoFullScreen: int access$002(android.webkit.HTML5VideoFullScreen,int)>','<android.provider.ContactsContract$CommonDataKinds$Relation: int getTypeLabelResource(int)>','<android.os.AsyncTask: boolean cancel(boolean)>','<com.android.internal.telephony.DriverCall: java.lang.String toString()>','<com.android.internal.policy.impl.PhoneWindowManager$6: void run()>','<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.graphics.drawable.GradientDrawable: void setColors(int[])>','<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>','<android.widget.ImageView: void <clinit>()>','<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.graphics.Bitmap: byte[] getNinePatchChunk()>','<android.view.ViewRootImpl: void dispatchScreenStateChange(boolean)>','<android.widget.AbsSeekBar: void onMeasure(int,int)>','<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk()>','<android.app.ActivityThread$ApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>','<com.android.server.input.PersistentDataStore: boolean switchKeyboardLayout(java.lang.String,int)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceSvn()>','<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>','<android.widget.TextView$CharWrapper: java.lang.CharSequence subSequence(int,int)>','<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>','<android.app.ActivityThread$StopInfo: void <init>(android.app.ActivityThread$1)>','<android.app.QueuedWork: boolean hasPendingWork()>','<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>','<android.hardware.LegacySensorManager$1: void onRotationChanged(int)>','<android.view.MotionEvent$PointerCoords: void <init>(android.view.MotionEvent$PointerCoords)>','<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>','<android.view.MotionEvent: float getRawY()>','<android.nfc.NdefRecord$1: android.nfc.NdefRecord createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.gsm.GSMPhone: void setCallWaiting(boolean,android.os.Message)>','<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>','<android.net.wifi.SupplicantStateTracker$HandshakeState: boolean processMessage(android.os.Message)>','<com.android.server.sip.SipSessionListenerProxy$1: void run()>','<android.net.NetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>','<android.widget.PopupWindow: void setFocusable(boolean)>','<com.android.server.PowerManagerService: boolean access$5202(com.android.server.PowerManagerService,boolean)>','<android.bluetooth.IBluetoothHeadset$Stub: android.os.IBinder asBinder()>','<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()>','<android.widget.TextView$SavedState$1: android.widget.TextView$SavedState createFromParcel(android.os.Parcel)>','<android.widget.AbsSpinner$SavedState$1: void <init>()>','<android.nfc.TechListParcel$1: android.nfc.TechListParcel createFromParcel(android.os.Parcel)>','<android.os.RegistrantList: void removeCleared()>','<android.content.ISyncAdapter$Stub: android.content.ISyncAdapter asInterface(android.os.IBinder)>','<com.android.server.WallpaperManagerService: boolean restoreNamedResourceLocked(com.android.server.WallpaperManagerService$WallpaperData)>','<android.filterpacks.videosrc.MediaSource: void pauseVideo(boolean)>','<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.net.NetworkInfo: void <clinit>()>','<android.view.ViewDebug$1: void <init>(android.view.View)>','<android.webkit.WebViewClassic$InvokeListBox$SingleDataSetObserver: void onChanged()>','<android.app.ContextImpl$ApplicationContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>','<android.telephony.NeighboringCellInfo: void <init>(int,int)>','<com.android.server.pm.UserManager: int[] getUserIds()>','<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>','<com.android.server.NsdService: android.util.SparseArray access$1300(com.android.server.NsdService)>','<android.net.sip.SipManager: boolean isOpened(java.lang.String)>','<android.inputmethodservice.IInputMethodSessionWrapper: void finishSession()>','<android.widget.AbsoluteLayout: boolean shouldDelayChildPressedState()>','<com.android.internal.telephony.PhoneBase: void unregisterForMmiInitiate(android.os.Handler)>','<android.widget.ExpandableListPosition: void <clinit>()>','<android.media.MediaFile: int getFormatCode(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.CDMALTEPhone$1: void <clinit>()>','<android.media.AudioService$RemoteControlStackEntry: void finalize()>','<android.view.MenuInflater: void <clinit>()>','<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>','<com.android.server.location.GpsLocationProvider: void access$700(com.android.server.location.GpsLocationProvider)>','<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()>','<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundaries(boolean)>','<android.net.http.ConnectionThread: void requestStop()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.Activity: void unregisterForContextMenu(android.view.View)>','<com.android.internal.widget.LockPatternView$SavedState$1: com.android.internal.widget.LockPatternView$SavedState[] newArray(int)>','<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)>','<android.widget.ListView: boolean removeHeaderView(android.view.View)>','<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>','<android.widget.Editor: void onDrop(android.view.DragEvent)>','<android.view.View: void setFocusableInTouchMode(boolean)>','<com.android.internal.telephony.BaseCommands: void registerForT53AudioControlInfo(android.os.Handler,int,java.lang.Object)>','<android.nfc.Tag: int describeContents()>','<com.android.internal.widget.multiwaveview.Ease$Quart: void <clinit>()>','<com.android.server.net.NetworkPolicyManagerService: int getAppPolicy(int)>','<android.app.ApplicationErrorReport$BatteryInfo: void dump(android.util.Printer,java.lang.String)>','<android.view.GLES20DisplayList: void setTranslationY(float)>','<android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void <init>(android.net.wifi.p2p.WifiP2pService,java.lang.String,boolean)>','<android.server.BluetoothService: void updateBluetoothState(java.lang.String)>','<android.net.wifi.WifiStateMachine$ConnectedState: boolean processMessage(android.os.Message)>','<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>','<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>','<android.bluetooth.BluetoothDeviceProfileState$2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)>','<android.os.AsyncTask: java.lang.Object access$400(android.os.AsyncTask,java.lang.Object)>','<android.media.AudioManager: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,int[],int)>','<com.android.internal.telephony.RestrictedState: java.lang.String toString()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void switchWaitingOrHoldingAndActive()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForNonGeoEntity(int)>','<com.android.server.DevicePolicyManagerService$3: void <init>(com.android.server.DevicePolicyManagerService,android.os.RemoteCallback)>','<android.text.style.LeadingMarginSpan$Standard: void writeToParcel(android.os.Parcel,int)>','<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>','<com.android.server.pm.PackageManagerService$PostInstallData: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>','<android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>','<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onStartBackup()>','<android.widget.ListPopupWindow: boolean isModal()>','<android.animation.Keyframe$FloatKeyframe: void setValue(java.lang.Object)>','<android.nfc.tech.NfcB: void connect()>','<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String,java.lang.Class)>','<com.android.internal.app.AlertController: android.os.Message access$500(com.android.internal.app.AlertController)>','<android.webkit.WebResourceResponse: java.lang.String getMimeType()>','<android.util.SparseBooleanArray: int indexOfKey(int)>','<com.android.server.MountService$4: void run()>','<android.webkit.HTML5VideoView: void stopPlayback()>','<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()>','<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse newInstance(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>','<com.android.internal.telephony.gsm.UsimServiceTable$UsimService: com.android.internal.telephony.gsm.UsimServiceTable$UsimService[] values()>','<android.view.HardwareRenderer: void setupDiskCache(java.io.File)>','<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: void <init>(com.android.internal.telephony.ims.IsimUiccRecords,com.android.internal.telephony.ims.IsimUiccRecords$1)>','<android.net.LinkCapabilities: java.util.Set entrySet()>','<android.opengl.GLLogWrapper: void glPointSizex(int)>','<android.widget.Spinner$DialogPopup: void setVerticalOffset(int)>','<android.view.HardwareRenderer$Gl20Renderer: void destroyHardwareResources(android.view.View)>','<android.graphics.Matrix: boolean postRotate(float)>','<android.provider.MediaStore$Audio$Media: void <init>()>','<android.content.IntentFilter: boolean hasDataType(java.lang.String)>','<android.renderscript.Element: android.renderscript.Element I16_4(android.renderscript.RenderScript)>','<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.app.ActionBarImpl: void setDisplayShowTitleEnabled(boolean)>','<android.webkit.WebStorageClassic: void setAppCacheMaximumSize(long)>','<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>','<com.android.server.PowerManagerService$4: void <init>(com.android.server.PowerManagerService)>','<android.widget.AccessibilityIterators$PageTextSegmentIterator: android.widget.AccessibilityIterators$PageTextSegmentIterator getInstance()>','<android.app.IWallpaperManagerCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>','<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>','<android.widget.CheckedTextView: boolean isChecked()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionScaleUp(int,int,int,int)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>','<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>','<com.android.server.wm.ScreenRotationAnimation: boolean isAnimating()>','<android.accessibilityservice.UiTestAutomationBridge: boolean access$200(android.accessibilityservice.UiTestAutomationBridge)>','<android.widget.ProgressBar: boolean isIndeterminate()>','<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>','<android.view.ViewRootImpl: void unscheduleTraversals()>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void write(java.io.OutputStream)>','<com.android.internal.telephony.cat.ResultCode: int value()>','<com.android.internal.telephony.cat.IconLoader: void loadIcons(int[],android.os.Message)>','<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>','<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText()>','<android.view.KeyCharacterMap: void writeToParcel(android.os.Parcel,int)>','<android.filterfw.core.Filter: void close(android.filterfw.core.FilterContext)>','<android.webkit.WebSettings: int getDefaultFixedFontSize()>','<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>','<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>','<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])>','<com.android.internal.telephony.gsm.GsmCallTracker: void unregisterForVoiceCallEnded(android.os.Handler)>','<android.database.sqlite.SQLiteQueryBuilder: void <init>()>','<android.widget.Spinner: void setDropDownVerticalOffset(int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void finishInput(com.android.internal.view.IInputMethodClient)>','<android.location.ILocationListener$Stub$Proxy: void onProviderEnabled(java.lang.String)>','<android.net.sip.SipAudioCall$1: void onCallTransferring(android.net.sip.SipSession,java.lang.String)>','<android.net.ThrottleManager: long getResetTime(java.lang.String)>','<android.app.ActivityThread$ServiceArgsData: void <init>()>','<android.view.WindowOrientationListener: void <init>(android.content.Context)>','<android.net.LinkCapabilities: void put(int,java.lang.String)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>','<android.util.LruCache: java.util.Map snapshot()>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean pingSupplicant()>','<com.android.internal.telephony.DataConnectionAc: void reqLinkCapabilities()>','<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>','<android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>','<android.webkit.WebViewClassic$OnTrimMemoryListener: void onLowMemory()>','<android.widget.Spinner$DialogPopup: void setPromptText(java.lang.CharSequence)>','<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>','<android.content.ClipDescription: int describeContents()>','<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<android.text.format.DateUtils: java.lang.CharSequence timeString(long)>','<android.content.res.AssetManager$AssetInputStream: void mark(int)>','<android.webkit.ZoomManager: android.view.View getExternalZoomPicker()>','<android.net.sip.SipAudioCall: boolean access$300(android.net.sip.SipAudioCall)>','<android.net.wifi.WifiApConfigStore$ActiveState: boolean processMessage(android.os.Message)>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void viewDataChanged(int,int)>','<android.app.Activity: boolean isResumed()>','<com.android.server.MountService: boolean isSecureContainerMounted(java.lang.String)>','<android.app.SharedPreferencesImpl: int access$308(android.app.SharedPreferencesImpl)>','<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>','<android.widget.TextView$SavedState: void <init>(android.os.Parcelable)>','<android.widget.Button: void <init>(android.content.Context)>','<android.inputmethodservice.SoftInputWindow: void setGravity(int)>','<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>','<android.telephony.SmsMessage$MessageClass: void <clinit>()>','<android.net.InterfaceConfiguration$1: android.net.InterfaceConfiguration[] newArray(int)>','<com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,boolean)>','<android.app.INotificationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CallTracker getCallTracker()>','<android.webkit.WebView$PrivateAccess: void super_setLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: boolean isEnabled()>','<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)>','<android.accessibilityservice.AccessibilityServiceInfo: void <init>(android.content.pm.ResolveInfo,android.content.Context)>','<android.text.BoringLayout$Metrics: void <init>()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.lang.Object access$000(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)>','<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>','<android.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes()>','<android.view.KeyEvent$DispatcherState: void reset(java.lang.Object)>','<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)>','<android.opengl.GLLogWrapper: void glGetPointerv(int,java.nio.Buffer[])>','<android.opengl.GLLogWrapper: void glLineWidthx(int)>','<android.net.wifi.WifiStateMachine: void reassociateCommand()>','<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>','<android.net.NetworkInfo: boolean access$402(android.net.NetworkInfo,boolean)>','<android.app.FragmentManagerImpl: void dispatchStop()>','<com.android.server.am.BatteryStatsService: boolean access$102(com.android.server.am.BatteryStatsService,boolean)>','<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>','<com.android.server.MountService$UnmountCallBack: void <init>(com.android.server.MountService,java.lang.String,boolean,boolean)>','<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>','<android.widget.AbsListView: int getListPaddingLeft()>','<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>','<android.net.wifi.WifiStateMachine$TetheredState: void <init>(android.net.wifi.WifiStateMachine)>','<android.net.rtp.AudioStream: void join(android.net.rtp.AudioGroup)>','<android.media.AudioService$AudioSystemThread: void <init>(android.media.AudioService)>','<android.accounts.AccountManager$BaseFutureTask$1: void <init>(android.accounts.AccountManager)>','<android.widget.Editor$ActionPopupWindow: void show()>','<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>','<com.android.server.NsdService$NsdStateMachine$DefaultState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<android.media.RemoteControlClient: int access$400(android.media.RemoteControlClient)>','<android.location.IGeocodeProvider$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>','<android.renderscript.RenderScript: void validate()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateOtaspState()>','<android.webkit.CookieManagerClassic: void removeExpiredCookie()>','<android.media.AudioManager: void handleKeyDown(android.view.KeyEvent,int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: void cancel()>','<android.widget.AbsListView$2: void run()>','<com.android.server.WallpaperManagerService$WallpaperConnection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiOff()>','<com.android.internal.telephony.MccTable$MccEntry: void <init>(int,java.lang.String,int)>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributeNamespace(int)>','<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>','<com.android.internal.telephony.DefaultPhoneNotifier$1: void <clinit>()>','<com.android.internal.appwidget.IAppWidgetService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.NetworkPolicyManager: void <init>(android.net.INetworkPolicyManager)>','<android.os.Bundle: void putCharArray(java.lang.String,char[])>','<android.database.ContentObserver: void dispatchChange(boolean)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void access$1600(com.android.internal.telephony.sip.SipPhone$SipCall,com.android.internal.telephony.sip.SipPhone$SipConnection)>','<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>','<android.view.View: android.os.Parcelable onSaveInstanceState()>','<android.security.IKeyChainService$Stub: android.security.IKeyChainService asInterface(android.os.IBinder)>','<android.media.MediaRouter$Static$1: void <init>(android.media.MediaRouter$Static)>','<android.renderscript.RenderScript: int nFileA3DGetEntryByIndex(int,int)>','<com.android.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()>','<com.android.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcelable)>','<com.android.server.am.AppNotRespondingDialog: void onStop()>','<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcApplicationState findAppState(android.app.Application)>','<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>','<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean exactlySameAs(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>','<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>','<android.net.wifi.WifiStateMachine: void startFilteringMulticastV4Packets()>','<android.widget.AbsSpinner: int getCount()>','<android.app.LoaderManagerImpl: void <init>(android.app.Activity,boolean)>','<android.widget.ExpandableListConnector: long getItemId(int)>','<android.location.Location: float getAccuracy()>','<android.widget.CompoundButton: void drawableStateChanged()>','<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)>','<android.net.Uri$OpaqueUri: java.lang.String getScheme()>','<android.app.ContextImpl: android.os.DropBoxManager createDropBoxManager()>','<android.view.ViewRootImpl: void dequeueDisplayList(android.view.DisplayList)>','<com.android.internal.telephony.RIL: void getIMEISV(android.os.Message)>','<android.filterfw.core.NativeFrame: int getCapacity()>','<android.app.ContextImpl$ApplicationContentResolver: void unstableProviderDied(android.content.IContentProvider)>','<android.os.StrictMode$2: void <init>()>','<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>','<android.location.ILocationProvider$Stub$Proxy: boolean hasMonetaryCost()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1500(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.webkit.HTML5VideoFullScreen: boolean isFullScreenMode()>','<com.android.internal.view.menu.ActionMenuItem: boolean isVisible()>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void reset()>','<android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass valueOf(java.lang.String)>','<android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>','<android.telephony.GsmCellIdentity$1: android.telephony.GsmCellIdentity createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])>','<android.inputmethodservice.Keyboard: int getVerticalGap()>','<android.app.ContextImpl: java.io.File getObbDir()>','<com.android.server.am.ActivityManagerService: void killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>','<android.os.Build$VERSION: void <init>()>','<com.android.internal.telephony.DataConnection: void access$400(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: boolean access$1400(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<com.android.internal.telephony.cat.AppInterface$CommandType: com.android.internal.telephony.cat.AppInterface$CommandType[] values()>','<android.net.wifi.p2p.WifiP2pGroup: boolean isClientListEmpty()>','<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)>','<android.widget.RemoteViews$TextViewSizeAction: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>','<android.widget.TextView: void append(java.lang.CharSequence,int,int)>','<android.app.Notification$InboxStyle: void <init>()>','<android.database.AbstractWindowedCursor: java.lang.String getString(int)>','<android.os.RecoverySystem$1: void <init>(android.os.ConditionVariable)>','<com.android.server.sip.SipSessionListenerProxy: void onCallBusy(android.net.sip.ISipSession)>','<android.graphics.Interpolator$Result: void <clinit>()>','<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)>','<android.net.Credentials: int getGid()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void finalize()>','<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone getActivePhone()>','<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>','<com.android.internal.telephony.DataConnection: void access$2000(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<com.android.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)>','<android.view.DragEvent: int getAction()>','<android.widget.SearchView: void access$1100(android.widget.SearchView)>','<android.widget.AbsListView: int computeVerticalScrollOffset()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void cancelPreloadRecentApps()>','<android.net.http.HttpConnection: java.lang.String getScheme()>','<com.android.internal.telephony.BaseCommands: void unSetOnNewCdmaSms(android.os.Handler)>','<android.os.storage.StorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>','<android.view.ViewPropertyAnimator: void start()>','<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String)>','<android.text.TextUtils: int unpackRangeEndFromLong(long)>','<android.app.IServiceConnection$Stub$Proxy: android.os.IBinder asBinder()>','<android.database.ContentObserver$NotificationRunnable: void run()>','<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>','<android.widget.LinearLayout: void setOrientation(int)>','<android.webkit.WebViewClassic: boolean access$7300(android.webkit.WebViewClassic)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource[] values()>','<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.IState access$1000(com.android.internal.util.StateMachine$SmHandler)>','<android.widget.Editor: void ensureEndedBatchEdit()>','<android.media.CamcorderProfile: boolean hasProfile(int)>','<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>','<android.net.wifi.WifiStateMachine: boolean access$902(android.net.wifi.WifiStateMachine,boolean)>','<com.android.internal.telephony.ApnSetting: com.android.internal.telephony.ApnSetting fromString(java.lang.String)>','<android.view.GestureDetector$GestureHandler: void handleMessage(android.os.Message)>','<android.app.admin.IDevicePolicyManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>','<android.view.ViewRootImpl$WindowInputEventReceiver: void <init>(android.view.ViewRootImpl,android.view.InputChannel,android.os.Looper)>','<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$000(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<android.content.ContentProviderOperation: void <init>(android.os.Parcel,android.content.ContentProviderOperation$1)>','<android.net.NetworkTemplate: boolean equals(java.lang.Object)>','<com.android.server.InputMethodManagerService: void systemReady(com.android.server.StatusBarManagerService)>','<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>','<android.content.ComponentName: int compareTo(java.lang.Object)>','<com.android.internal.telephony.cat.CallSetupParams: boolean setIcon(android.graphics.Bitmap)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.text.Layout: boolean isLevelBoundary(int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>','<android.view.GLES20RecordingCanvas: void setPooled(boolean)>','<android.webkit.PluginFullScreenHolder$CustomFrameLayout: boolean onTouchEvent(android.view.MotionEvent)>','<android.app.ActivityThread$BindServiceData: void <init>()>','<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>','<android.app.ContextImpl: void setTheme(int)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void access$900(android.webkit.WebIconDatabaseClassic$EventHandler,android.os.Message)>','<android.filterfw.core.FieldPort: java.lang.Object getTarget()>','<android.widget.Filter: java.lang.Object access$300(android.widget.Filter)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void stopNetStatPoll()>','<android.net.LocalSocket: boolean isBound()>','<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.os.IPowerManager,android.net.INetworkStatsService,android.os.INetworkManagementService)>','<android.view.InputEventReceiver: void consumeBatchedInputEvents(long)>','<android.content.SyncManager$6: void <init>(android.content.SyncManager)>','<android.os.ParcelFileDescriptor: void close()>','<com.android.server.sip.SipSessionGroup$MakeCallCommand: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.SipProfile,java.lang.String)>','<android.nfc.tech.IsoDep: boolean isConnected()>','<android.hardware.Camera$Parameters: int getExposureCompensation()>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setText(java.lang.CharSequence)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: void exit()>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray: void <init>(android.appwidget.AppWidgetHostView$1)>','<android.opengl.GLLogWrapper: void glGenerateMipmapOES(int)>','<android.net.wifi.p2p.WifiP2pManager$Channel: int access$600(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.Object)>','<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>','<android.net.wifi.WifiStateMachine: android.content.IntentFilter access$8900(android.net.wifi.WifiStateMachine)>','<android.renderscript.BaseObj: void <init>(int,android.renderscript.RenderScript)>','<android.net.wifi.WifiNative: java.lang.String listNetworks()>','<android.content.ContentProviderResult: void <init>(int)>','<android.widget.AutoCompleteTextView: void performCompletion()>','<android.webkit.WebSyncManager: void onSyncInit()>','<com.android.internal.view.IInputMethod$Stub: void <init>()>','<android.view.GLES20RecordingCanvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>','<android.media.MediaRouter$UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>','<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>','<android.nfc.NdefRecord: void <init>(byte[])>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>','<com.android.internal.telephony.PhoneBase: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>','<android.accounts.AccountManagerService$4: void run()>','<android.view.AccessibilityInteractionController: void findFocusClientThread(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.widget.AdapterView: void access$000(android.widget.AdapterView,android.os.Parcelable)>','<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>','<com.android.internal.widget.TransportControlView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>','<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.widget.AbsListView: void setFriction(float)>','<com.android.server.LocationManagerService$SettingsObserver: void update(java.util.Observable,java.lang.Object)>','<com.android.internal.telephony.IccUtils: void <init>()>','<android.location.LocationManager$ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.media.MediaRouter$RouteGroup: void removeRoute(android.media.MediaRouter$RouteInfo)>','<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>','<android.view.View: int getNextFocusLeftId()>','<com.android.internal.os.ProcessStats: float getTotalCpuPercent()>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>','<android.telephony.GsmCellIdentity: void <init>(android.telephony.GsmCellIdentity)>','<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>','<com.android.server.am.ActivityManagerService: boolean access$300(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,int)>','<android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)>','<android.os.StrictMode: void access$1100(int,android.os.StrictMode$ViolationInfo)>','<android.opengl.GLLogWrapper: void glBufferData(int,int,java.nio.Buffer,int)>','<android.app.BackStackState: void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord)>','<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>','<android.app.backup.BackupHelperDispatcher$Header: void <init>(android.app.backup.BackupHelperDispatcher$1)>','<android.os.WorkSource: void <init>(int)>','<android.view.KeyCharacterMap: void <clinit>()>','<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>','<android.view.accessibility.AccessibilityRecord: boolean isFullScreen()>','<com.android.internal.content.PackageHelper: boolean unMountSdDir(java.lang.String)>','<android.filterpacks.videosink.MediaEncoderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>','<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>','<com.android.server.sip.SipHelper: void <clinit>()>','<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String,boolean)>','<android.net.wifi.WifiNative: boolean setSuspendOptimizations(boolean)>','<com.android.internal.telephony.RIL: void getLastCallFailCause(android.os.Message)>','<android.webkit.WebViewClassic: void setActive(boolean)>','<android.util.SparseArray: void append(int,java.lang.Object)>','<android.app.backup.BackupDataInputStream: java.lang.String getKey()>','<android.webkit.WebViewClassic: void stopLoading()>','<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>','<android.webkit.WebViewInputDispatcher$DispatchEvent: void <init>(android.webkit.WebViewInputDispatcher$1)>','<android.net.NetworkPolicyManager: android.net.NetworkPolicyManager from(android.content.Context)>','<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: boolean reset()>','<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>','<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void onChange(boolean)>','<com.android.internal.content.PackageMonitor: void <init>()>','<com.android.server.sip.SipSessionGroup: java.lang.String access$2300(com.android.server.sip.SipSessionGroup)>','<android.webkit.WebView: void <init>(android.content.Context)>','<android.webkit.WebViewClassic: void resumeTimers()>','<android.graphics.Canvas: void concat(android.graphics.Matrix)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: boolean isIncoming()>','<android.os.storage.IMountService$Stub: android.os.storage.IMountService asInterface(android.os.IBinder)>','<com.android.server.usb.UsbDeviceManager$1: void <init>(com.android.server.usb.UsbDeviceManager)>','<android.net.wifi.WpsResult$Status: void <clinit>()>','<com.android.server.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean)>','<com.android.server.am.TransferPipe: void go(com.android.server.am.TransferPipe$Caller,android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[],long)>','<android.webkit.CallbackProxy: void onProceededAfterSslError(android.net.http.SslError)>','<android.net.sip.SipManager$ListenerRelay: void onRegistering(android.net.sip.ISipSession)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>','<com.android.internal.policy.impl.FaceUnlock: void handlePokeWakelock(int)>','<android.widget.SearchView: void access$500(android.widget.SearchView)>','<android.app.ActivityGroup: void <init>()>','<android.widget.AbsListView$PositionScroller$3: void <init>(android.widget.AbsListView$PositionScroller,int,int,int)>','<android.net.wifi.WifiNative: boolean p2pReinvoke(int,java.lang.String)>','<android.content.IntentFilter: void addCategory(java.lang.String)>','<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>','<com.android.server.wm.InputMonitor: void setFocusedAppLw(com.android.server.wm.AppWindowToken)>','<com.android.server.EventLogTags: void writeWatchdog(java.lang.String)>','<android.webkit.WebCoreThreadWatchdog$1: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>','<com.android.server.InputMethodManagerService: int access$1600(android.view.inputmethod.InputMethodInfo,int)>','<android.content.res.StringBlock: void <init>(byte[],int,int,boolean)>','<android.webkit.WebViewCore: void access$2400(android.webkit.WebViewCore,android.webkit.WebViewClassic$ViewSizeData)>','<com.android.internal.view.InputBindResult: java.lang.String toString()>','<android.net.sip.SipAudioCall: void toggleMute()>','<com.android.internal.telephony.SMSDispatcher: void handleSendComplete(android.os.AsyncResult)>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int)>','<android.widget.FastScroller$1: void run()>','<android.media.AudioService$ForceControlStreamClient: void binderDied()>','<android.provider.ContactsContract$CommonDataKinds$Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<android.app.ContextImpl: android.content.Context getApplicationContext()>','<android.widget.AdapterViewAnimator$SavedState: void <clinit>()>','<android.media.AudioManager: void abandonAudioFocusForCall()>','<android.telephony.TelephonyManager: boolean isSmsCapable()>','<android.media.MediaRouter: void dispatchRouteGrouped(android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int)>','<android.net.NetworkStatsHistory: void <clinit>()>','<android.accounts.AccountAndUser: java.lang.String toString()>','<com.android.server.connectivity.Tethering$TetherMasterSM: int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM,int)>','<android.opengl.GLLogWrapper: void glClear(int)>','<android.text.style.ReplacementSpan: void <init>()>','<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>','<com.android.server.LocationManagerService: java.util.HashMap access$1400(com.android.server.LocationManagerService)>','<android.net.sip.SipAudioCall: void answerCall(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.MountService: com.android.server.MountService$ObbActionHandler access$000(com.android.server.MountService)>','<android.accounts.IAccountAuthenticator$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.os.PkgUsageStats: java.lang.String toString()>','<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>','<android.widget.TextView: void onStartTemporaryDetach()>','<android.net.NetworkUtils: boolean addressTypeMatches(java.net.InetAddress,java.net.InetAddress)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void finishSession()>','<android.nfc.NfcActivityManager: void onActivityResumed(android.app.Activity)>','<android.hardware.input.InputManager$InputDeviceVibrator: void cancel()>','<com.android.server.sip.SipWakeupTimer$MyEventComparator: int compare(com.android.server.sip.SipWakeupTimer$MyEvent,com.android.server.sip.SipWakeupTimer$MyEvent)>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: int getIntrinsicWidth()>','<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsSummaryXt()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void enter()>','<android.provider.Settings$Bookmarks: void <init>()>','<com.android.internal.telephony.BaseCommands: void registerForIccStatusChanged(android.os.Handler,int,java.lang.Object)>','<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>','<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>','<android.content.pm.PackageItemInfo: void <init>()>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: void onDataSetChangedAsync()>','<android.provider.Downloads$Impl: boolean isStatusSuccess(int)>','<android.widget.HorizontalScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: int getBatteryLevel()>','<com.android.server.location.LocationBasedCountryDetector$2: void run()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: boolean equals(java.lang.Object)>','<android.view.ViewRootImpl$AccessibilityInteractionConnectionManager: void <init>(android.view.ViewRootImpl)>','<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>','<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>','<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>','<android.bluetooth.BluetoothSocket$SdpHelper: void onRfcommChannelFound(int)>','<android.view.AbsSavedState: android.os.Parcelable getSuperState()>','<com.android.internal.app.ActionBarImpl: void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>','<android.hardware.SerialPort: java.lang.String getName()>','<android.view.KeyEvent$1: void <init>()>','<android.server.BluetoothService: void initAfterRegistration()>','<android.view.LayoutInflater: void <init>(android.content.Context)>','<android.view.ViewRootImpl: void profile()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void run()>','<com.android.server.pm.Installer: void <init>()>','<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>','<android.app.backup.BackupHelperDispatcher: void <init>()>','<android.widget.Editor$EasyEditPopupWindow: int getVerticalLocalPosition(int)>','<android.widget.Switch: void setThumbTextPadding(int)>','<android.net.wifi.WifiStateMachine: int access$14400(android.net.wifi.WifiStateMachine)>','<com.android.server.am.BatteryStatsService: void noteStopAudio(int)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List)>','<android.webkit.GeolocationPermissionsClassic: void access$400(java.lang.String)>','<com.android.server.wm.WindowManagerService: float[] getAnimationScales()>','<com.android.server.LocationManagerService$ProximityListener: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.internal.telephony.PhoneProxy: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>','<android.os.MessageQueue: boolean enqueueMessage(android.os.Message,long)>','<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.ApnSetting getApnSettingSync()>','<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String toString()>','<android.widget.ArrayAdapter$ArrayFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>','<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)>','<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: boolean deliverSelfNotifications()>','<android.widget.Editor$SuggestionsPopupWindow: void hide()>','<android.os.Bundle: int getInt(java.lang.String,int)>','<com.android.internal.widget.SlidingTab: void setRightHintText(int)>','<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)>','<android.database.SQLException: void <init>()>','<android.webkit.WebSettings: boolean getDisplayZoomControls()>','<com.android.internal.telephony.cdma.CDMAPhone: void getDataCallList(android.os.Message)>','<com.android.internal.util.StateMachine$SmHandler$StateInfo: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>','<android.view.accessibility.AccessibilityRecord: void setScrollY(int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$3200(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>','<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<com.android.internal.app.AlertController$AlertParams: void apply(com.android.internal.app.AlertController)>','<android.net.LinkCapabilities: int describeContents()>','<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>','<android.widget.TextView: void setShadowLayer(float,float,float,int)>','<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpOn(boolean)>','<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()>','<com.android.internal.widget.LockPatternUtils: void deleteTempGallery()>','<android.webkit.WebView: float getScale()>','<android.graphics.PorterDuff$Mode: void <clinit>()>','<com.android.internal.util.XmlUtils: int convertValueToUnsignedInt(java.lang.String,int)>','<android.widget.RemoteViews: void setViewVisibility(int,int)>','<android.view.Window: void setGravity(int)>','<com.android.internal.telephony.cdma.RuimRecords: void log(java.lang.String)>','<android.widget.AutoCompleteTextView: int getThreshold()>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)>','<com.android.internal.widget.IRemoteViewsFactory$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.BroadcastQueue$AppNotResponding: void <init>(com.android.server.am.BroadcastQueue,com.android.server.am.ProcessRecord,java.lang.String)>','<android.media.MediaRouter$RouteCategory: java.util.List getRoutes(java.util.List)>','<com.android.ex.variablespeed.VariableSpeed: int getCurrentPosition()>','<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)>','<android.webkit.WebViewInputDispatcher: void access$800(android.webkit.WebViewInputDispatcher,boolean)>','<android.net.INetworkPolicyManager$Stub$Proxy: boolean getRestrictBackground()>','<com.android.server.net.NetworkStatsService$7: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.internal.telephony.PhoneBase: void unregisterForServiceStateChanged(android.os.Handler)>','<android.accounts.Account: boolean equals(java.lang.Object)>','<com.android.internal.telephony.IccCard: boolean access$800(com.android.internal.telephony.IccCard)>','<android.opengl.GLLogWrapper: void glLightfv(int,int,float[],int)>','<com.android.internal.telephony.PhoneProxy: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked(android.os.WorkSource)>','<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>','<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>','<com.android.server.LocationManagerService: void access$800(com.android.server.LocationManagerService)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String)>','<android.util.SparseIntArray: void append(int,int)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean allowFilterResult(android.content.pm.PackageParser$ServiceIntentInfo,java.util.List)>','<android.webkit.WebViewCore: android.webkit.BrowserFrame getBrowserFrame()>','<android.webkit.WebSettingsClassic: boolean getLoadsImagesAutomatically()>','<android.app.ActivityManagerProxy: int startActivitiesInPackage(int,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatInOriginalFormat(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<android.hardware.SystemSensorManager: java.util.List getFullSensorList()>','<android.app.WallpaperManager$FastBitmapDrawable: int getIntrinsicWidth()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>','<com.android.internal.util.ArrayUtils: int idealObjectArraySize(int)>','<com.android.internal.telephony.IccIoResult: java.lang.String toString()>','<android.renderscript.RenderScript: int nContextCreateGL(int,int,int,int,int,int,int,int,int,int,int,int,int,float,int)>','<android.widget.ListPopupWindow: int getVerticalOffset()>','<android.net.http.Request: java.lang.String toString()>','<android.content.res.Resources: java.lang.String getResourceTypeName(int)>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] access$1100(com.android.server.InputMethodManagerService)>','<android.view.FocusFinder: void <init>(android.view.FocusFinder$1)>','<android.opengl.GLLogWrapper: void glPolygonOffset(float,float)>','<com.android.server.net.NetworkStatsService: android.net.INetworkStatsSession openSession()>','<android.view.MotionEvent: long getEventTime()>','<com.android.internal.policy.impl.KeyguardStatusViewManager$2: void <init>(com.android.internal.policy.impl.KeyguardStatusViewManager)>','<android.app.ActivityManager: int getLargeMemoryClass()>','<com.android.internal.telephony.IccIoResult: com.android.internal.telephony.IccException getException()>','<android.server.BluetoothService: boolean setRemoteAlias(java.lang.String,java.lang.String)>','<android.view.ViewPropertyAnimator: java.util.HashMap access$300(android.view.ViewPropertyAnimator)>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>','<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setInputMethodEnabled(java.lang.String,boolean)>','<android.speech.tts.ITextToSpeechService$Stub: void <init>()>','<android.view.ViewGroup: void resetAccessibilityStateChanged()>','<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void reportFailedAttempt()>','<android.os.INetworkManagementService$Stub$Proxy: void wifiFirmwareReload(java.lang.String,java.lang.String)>','<android.net.http.ConnectionThread: void run()>','<com.android.uiautomator.core.UiDevice: boolean hasWatcherTriggered(java.lang.String)>','<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>','<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()>','<android.accounts.AccountManager: android.os.Handler access$600(android.accounts.AccountManager)>','<android.view.View: android.view.HardwareLayer getHardwareLayer()>','<com.android.internal.util.FileRotator$FileInfo: java.lang.String build()>','<android.view.View: void onScreenStateChanged(int)>','<android.location.ICountryListener$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.os.BatteryStatsImpl$Uid: void <init>(com.android.internal.os.BatteryStatsImpl,int)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getLine1AlphaTag()>','<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>','<android.os.Debug: void resetThreadAllocSize()>','<com.android.internal.telephony.sip.SipCommandInterface: void setPreferredVoicePrivacy(boolean,android.os.Message)>','<android.animation.PropertyValuesHolder: void setIntValues(int[])>','<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long,byte)>','<android.widget.AbsSpinner: void setSelectionInt(int,boolean)>','<android.view.ViewConfiguration: void <clinit>()>','<com.android.server.AppWidgetServiceImpl: android.widget.RemoteViews getAppWidgetViews(int)>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>','<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>','<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void onChange(boolean)>','<com.android.internal.telephony.CallManager: boolean sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetDescriptionsResourceId()>','<android.media.AudioService: void access$2300(android.media.AudioService,int)>','<android.preference.Preference: void setKey(java.lang.String)>','<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void incStartsLocked()>','<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>','<android.content.res.XmlBlock$Parser: java.lang.String getText()>','<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>','<com.android.ex.variablespeed.VariableSpeed: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>','<android.renderscript.RenderScript: void nProgramBindSampler(int,int,int)>','<android.view.View$9: void setValue(android.view.View,float)>','<com.android.server.am.BatteryStatsService: void noteStartAudio(int)>','<com.android.server.am.ActivityRecord: void updateThumbnail(android.graphics.Bitmap,java.lang.CharSequence)>','<com.android.server.MountService$DefaultContainerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.widget.AbsSeekBar: void drawableStateChanged()>','<android.net.InterfaceConfiguration: void setInterfaceDown()>','<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>','<android.view.ViewRootImpl: void childAccessibilityStateChanged(android.view.View)>','<com.android.server.wm.WindowManagerService: void validateAppTokens(java.util.List)>','<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebViewClassic: void clearSslPreferences()>','<com.android.internal.app.ActionBarImpl: boolean access$700(com.android.internal.app.ActionBarImpl)>','<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>','<android.media.MediaRouter$Static$1$1: void <init>(android.media.MediaRouter$Static$1,android.media.AudioRoutesInfo)>','<com.android.server.am.ActivityManagerService$5: void run()>','<android.graphics.drawable.LayerDrawable$LayerState: int getChangingConfigurations()>','<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>','<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>','<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.telephony.GsmAlphabet: int charToGsm(char)>','<com.android.internal.view.menu.MenuPopupHelper: void updateMenuView(boolean)>','<com.android.server.input.InputManagerService: void access$200(com.android.server.input.InputManagerService)>','<android.net.LocalSocketImpl: void <init>(java.io.FileDescriptor)>','<android.provider.ContactsContract$PhoneLookup: void <clinit>()>','<android.app.Fragment$SavedState$1: android.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()>','<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>','<com.android.internal.telephony.cdma.CDMAPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.graphics.drawable.DrawableContainer$1: void run()>','<android.content.res.ColorStateList: int describeContents()>','<com.android.server.WifiService: android.os.Messenger getWifiServiceMessenger()>','<android.telephony.SmsCbCmasInfo: int describeContents()>','<com.android.internal.telephony.RIL: void rejectCall(android.os.Message)>','<android.filterfw.core.CachedFrameManager: void tearDown()>','<com.android.internal.view.WindowManagerPolicyThread: void set(java.lang.Thread,android.os.Looper)>','<android.text.style.StrikethroughSpan: int getSpanTypeId()>','<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>','<android.widget.Editor: void updateCursorsPositions()>','<com.android.internal.view.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataCallState$SetupResult access$1400(com.android.internal.telephony.DataConnection,android.os.AsyncResult)>','<android.text.method.TextKeyListener$SettingsObserver: void <init>(android.text.method.TextKeyListener)>','<com.android.internal.telephony.RIL: void queryCLIP(android.os.Message)>','<com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>','<android.media.MediaRouter$UserRouteInfo: void setVolumeHandling(int)>','<com.android.internal.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.webkit.WebView$HitTestResult: void <init>()>','<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setShowRunningNotification(boolean)>','<com.android.internal.view.menu.MenuItemImpl: boolean isEnabled()>','<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>','<com.android.server.usb.UsbSettingsManager: void <clinit>()>','<com.android.internal.telephony.sip.SipPhoneBase: void activateCellBroadcastSms(int,android.os.Message)>','<com.android.internal.policy.impl.GlobalActions$1: void changeStateFromPress(boolean)>','<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>','<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>','<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String)>','<android.webkit.WebViewInputDispatcher: void <init>(android.webkit.WebViewInputDispatcher$UiCallbacks,android.webkit.WebViewInputDispatcher$WebKitCallbacks)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnMasterTetherSettings()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationTimeout(android.net.sip.ISipSession)>','<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>','<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()>','<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>','<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void finishedEvent(int,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: boolean getMute()>','<android.widget.TextView: void setSingleLine(boolean)>','<com.android.internal.telephony.cat.TextAlignment: void <clinit>()>','<android.app.ActivityManager$RunningServiceInfo: int describeContents()>','<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>','<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>','<android.widget.AbsListView$3: boolean sendKeyEvent(android.view.KeyEvent)>','<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>','<android.view.View: int computeVerticalScrollOffset()>','<android.content.Intent: void setSourceBounds(android.graphics.Rect)>','<android.hardware.Camera$Parameters: java.lang.String getFlashMode()>','<com.android.internal.telephony.DataConnection$DcActivatingState: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<android.view.View: boolean awakenScrollBars(int)>','<android.net.Uri$StringUri: java.lang.String parsePath(java.lang.String,int)>','<android.app.ITransientNotification$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.location.LocationManager$GpsStatusListenerTransport: android.location.GpsStatus$Listener access$500(android.location.LocationManager$GpsStatusListenerTransport)>','<android.view.View: int getLayerType()>','<android.content.IntentFilter: void addDataType(java.lang.String)>','<android.widget.RemoteViews$MemoryUsageCounter: void increment(int)>','<android.database.Observable: void <init>()>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifiWildcard()>','<android.media.AudioService: int access$5000(android.media.AudioService)>','<android.net.sip.SipProfile: void <clinit>()>','<android.telephony.ServiceState$1: android.telephony.ServiceState createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothUuid: boolean isPanu(android.os.ParcelUuid)>','<android.widget.AbsSeekBar: void onStartTrackingTouch()>','<android.accessibilityservice.UiTestAutomationBridge$1: boolean onGesture(int)>','<android.location.Criteria$1: android.location.Criteria createFromParcel(android.os.Parcel)>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void <init>(com.android.server.pm.PackageManagerService)>','<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>','<android.view.accessibility.AccessibilityEvent: int describeContents()>','<android.bluetooth.BluetoothDeviceProfileState: void access$7800(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)>','<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>','<com.android.server.PowerManagerService: int access$900(com.android.server.PowerManagerService)>','<android.content.SyncStorageEngine: boolean isSyncPending(android.accounts.Account,int,java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: android.content.pm.ResolveInfo newResult(android.content.pm.PackageParser$ServiceIntentInfo,int,int)>','<android.os.Bundle: void <init>(android.os.Parcel,int)>','<android.net.wifi.WifiStateMachine: void access$13000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>','<com.android.server.wm.WindowManagerService: boolean updateOrientationFromAppTokensLocked(boolean)>','<android.widget.OverScroller: void extendDuration(int)>','<android.widget.TextView: void setPaintFlags(int)>','<android.webkit.AutoCompletePopup: android.webkit.WebViewClassic access$100(android.webkit.AutoCompletePopup)>','<android.app.IInstrumentationWatcher$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>','<android.webkit.WebViewClassic$6: void run()>','<android.bluetooth.BluetoothDeviceProfileState: int access$902(android.bluetooth.BluetoothDeviceProfileState,int)>','<android.view.Choreographer: android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object)>','<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>','<android.net.nsd.DnsSdTxtRecord$1: android.net.nsd.DnsSdTxtRecord[] newArray(int)>','<android.text.format.DateFormat: void <clinit>()>','<com.android.internal.telephony.PhoneProxy: java.util.List getPendingMmiCodes()>','<com.android.server.AppWidgetServiceImpl: void sendEnableIntentLocked(com.android.server.AppWidgetServiceImpl$Provider)>','<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>','<android.net.wifi.WifiNative: boolean p2pProvisionDiscovery(android.net.wifi.p2p.WifiP2pConfig)>','<android.view.InputDevice: java.util.List getMotionRanges()>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>','<android.bluetooth.BluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()>','<android.webkit.WebViewClassic$1: java.util.Set doInBackground(java.lang.Void[])>','<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByViewIdClientThread(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.internal.telephony.IccCard: boolean getIccLockEnabled()>','<android.os.INetworkManagementService$Stub$Proxy: void disableNat(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cat.ComprehensionTlvTag: com.android.internal.telephony.cat.ComprehensionTlvTag valueOf(java.lang.String)>','<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>','<android.widget.AbsListView: int access$800(android.widget.AbsListView)>','<com.android.internal.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)>','<android.webkit.WebView: boolean zoomIn()>','<android.os.Debug: void <clinit>()>','<com.android.server.LocationManagerService$ProximityListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.content.IntentSender$FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.WifiService$LockList: void access$2600(com.android.server.WifiService$LockList,java.io.PrintWriter)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$200(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>','<android.app.LoaderManagerImpl$LoaderInfo: void stop()>','<android.view.GLES20Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region$Op)>','<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)>','<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()>','<android.widget.FastScroller: void getSectionsFromIndexer()>','<android.widget.ImageView: void setVisibility(int)>','<com.android.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.server.BluetoothService: void sendUuidIntent(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker$3: void <clinit>()>','<android.text.Layout$TabStops: void reset(int,java.lang.Object[])>','<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>','<android.view.View: void measure(int,int)>','<android.content.ContentProviderResult: int describeContents()>','<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.view.ViewGroup$MarginLayoutParams: void setMarginsRelative(int,int,int,int)>','<android.net.LocalSocketImpl: int available()>','<android.filterfw.geometry.Quad: void <init>()>','<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<android.app.ContextImpl: void sendBroadcast(android.content.Intent)>','<android.os.Bundle: long[] getLongArray(java.lang.String)>','<android.os.Parcel: void <clinit>()>','<android.appwidget.AppWidgetHostView: void <clinit>()>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.IRemoteCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.graphics.Color: float brightness(int)>','<android.view.View$AttachInfo$InvalidateInfo: void release()>','<android.view.Gravity: boolean isHorizontal(int)>','<android.util.Log$1: void <init>()>','<android.widget.SearchView: android.view.View access$1000(android.widget.SearchView)>','<android.widget.Toast$TN: void handleShow()>','<android.preference.Preference: boolean persistString(java.lang.String)>','<android.widget.Editor: void prepareCursorControllers()>','<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd(android.animation.Animator)>','<com.android.internal.telephony.sip.SipConnectionBase: void setDisconnectCause(com.android.internal.telephony.Connection$DisconnectCause)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void <clinit>()>','<android.server.BluetoothPanProfileHandler: int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<android.view.View: boolean pointInView(float,float)>','<android.text.method.TimeKeyListener: void <init>()>','<android.app.FragmentManagerState$1: void <init>()>','<android.webkit.ZoomControlEmbedded: void hide()>','<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>','<android.hardware.input.KeyboardLayout: void <clinit>()>','<android.webkit.WebViewClassic: void setScrollYRaw(int)>','<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>','<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>','<android.os.StrictMode: void noteDiskWrite()>','<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: void unregisterForRingbackTone(android.os.Handler)>','<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>','<android.content.Loader: void deliverCancellation()>','<com.android.server.input.InputFilter$H: void handleMessage(android.os.Message)>','<com.android.server.WifiService: java.util.concurrent.atomic.AtomicBoolean access$900(com.android.server.WifiService)>','<android.webkit.HTML5VideoInline: void prepareDataAndDisplayMode(android.webkit.HTML5VideoViewProxy)>','<android.view.View: void setFitsSystemWindows(boolean)>','<android.content.pm.PackageInfoLite$1: android.content.pm.PackageInfoLite createFromParcel(android.os.Parcel)>','<com.android.server.ConnectivityService$FeatureUser: void expire()>','<android.content.pm.VerifierInfo: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeSummaryFromParcelLocked(android.os.Parcel,long)>','<android.telephony.SmsCbLocation$1: void <init>()>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>','<com.android.internal.telephony.IPhoneSubInfo$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.HardwareCanvas: void <init>()>','<android.widget.Editor$InsertionHandleView: void updateSelection(int)>','<android.os.Message: android.os.Bundle peekData()>','<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>','<android.database.DataSetObserver: void onInvalidated()>','<android.telephony.PhoneStateListener$1: void onServiceStateChanged(android.telephony.ServiceState)>','<android.view.View$ScrollabilityCache: void setFadeColor(int)>','<android.view.ViewRootImpl: void dispatchDoneAnimating()>','<android.app.IActivityManager$ContentProviderHolder: void <init>(android.os.Parcel,android.app.IActivityManager$1)>','<android.os.Parcel$1: void <init>()>','<android.server.BluetoothAdapterStateMachine: void access$900(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.app.LoadedApk$ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: void registerForT53AudioControlInfo(android.os.Handler,int,java.lang.Object)>','<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>','<com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.Phone$DataState convertDataState(int)>','<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>','<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyPhoneStateChanged()>','<android.content.res.XmlBlock$Parser: java.lang.String getIdAttribute()>','<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)>','<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>','<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context)>','<android.server.BluetoothAdapterStateMachine: void access$5700(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getConnectedPanDevices()>','<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>','<android.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String)>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void removeUser(int)>','<android.webkit.JsResult: void cancel()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void format(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.StringBuilder)>','<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>','<android.webkit.CallbackProxy$UploadFile: void <init>(android.webkit.CallbackProxy,android.webkit.CallbackProxy$1)>','<android.content.ContentProviderOperation: void <init>(android.content.ContentProviderOperation$Builder,android.content.ContentProviderOperation$1)>','<android.view.View: void requestLayout()>','<com.android.server.Watchdog: void init(android.content.Context,com.android.server.BatteryService,com.android.server.PowerManagerService,com.android.server.AlarmManagerService,com.android.server.am.ActivityManagerService)>','<android.widget.AbsListView$PositionScroller: void start(int,int)>','<android.database.AbstractCursor: void finalize()>','<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions: android.os.Handler access$1300(com.android.internal.policy.impl.GlobalActions)>','<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()>','<com.android.internal.telephony.IccIoResult: void <init>(int,int,java.lang.String)>','<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>','<android.webkit.AutoCompletePopup: boolean onKeyPreIme(int,android.view.KeyEvent)>','<com.android.internal.widget.DigitalClock$AmPm: void <init>(android.view.View,android.graphics.Typeface)>','<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>','<android.inputmethodservice.SoftInputWindow: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>','<android.net.sip.SipSession$State: java.lang.String toString(int)>','<android.content.Intent: android.os.Bundle getExtras()>','<android.inputmethodservice.Keyboard$Row: void <init>(android.inputmethodservice.Keyboard)>','<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>','<android.app.BackStackRecord: int getTransitionStyle()>','<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager$OnDismissListener)>','<android.text.style.BulletSpan: void <init>()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isMinInfoReady()>','<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>','<android.webkit.HTML5VideoInline: void start()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$1700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.opengl.GLLogWrapper: void glTexGenfv(int,int,float[],int)>','<android.app.ActivityManager: void forceStopPackage(java.lang.String)>','<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>','<android.content.SyncAdapterType: boolean equals(java.lang.Object)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>','<android.net.LocalSocketImpl$SocketOutputStream: void write(byte[])>','<android.text.Editable$Factory: android.text.Editable$Factory getInstance()>','<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>','<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<android.os.RemoteCallback$1: android.os.RemoteCallback createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.SMSDispatcher$1: void onReceive(android.content.Context,android.content.Intent)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void <init>(int,int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>','<android.widget.ListView: int lookForSelectablePosition(int,boolean)>','<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)>','<android.view.FocusFinder: int getWeightedDistanceFor(int,int)>','<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>','<android.content.res.Resources: java.lang.String getResourceName(int)>','<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)>','<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>','<android.view.inputmethod.EditorInfo$1: void <init>()>','<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>','<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],boolean,java.io.PrintWriter,java.lang.StringBuilder,java.lang.StringBuilder)>','<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>','<com.android.server.input.InputManagerService$7: void <init>(com.android.server.input.InputManagerService,android.os.Handler)>','<android.app.ResultInfo$1: void <init>()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void <clinit>()>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>','<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>','<com.android.internal.net.VpnConfig$1: void <init>()>','<com.android.internal.policy.impl.LockScreen$1: void onDevicePolicyManagerStateChanged()>','<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()>','<android.webkit.HTML5VideoFullScreen: int access$402(android.webkit.HTML5VideoFullScreen,int)>','<android.app.BackStackRecord: android.app.FragmentTransaction detach(android.app.Fragment)>','<android.webkit.WebViewClassic: void selectionDone()>','<com.android.ex.variablespeed.VariableSpeed$PlaybackRunnable: void run()>','<com.android.server.location.LocationProviderProxy: boolean meetsCriteria(android.location.Criteria)>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int)>','<android.content.IContentService$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.IccFileHandler: void loadEFImgTransparent(int,int,int,int,android.os.Message)>','<android.graphics.RectF: java.lang.String toShortString(java.lang.StringBuilder)>','<android.webkit.ViewManager$2: void run()>','<com.android.internal.widget.AbsActionBarView: void dismissPopupMenus()>','<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>','<com.android.server.Watchdog: long computeCalendarTime(java.util.Calendar,long,long)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getTimeAtCpuSpeedStep(int,int)>','<com.android.vcard.VCardUtils: boolean containsOnlyWhiteSpaces(java.lang.String[])>','<com.android.server.PowerManagerService: float access$1602(com.android.server.PowerManagerService,float)>','<com.android.server.NsdService$NsdStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetOptions(int,android.os.Bundle)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: android.bluetooth.BluetoothDevice access$1000(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<android.graphics.Paint$Join: void <clinit>()>','<android.net.wifi.WifiStateMachine: boolean access$1100(android.net.wifi.WifiStateMachine)>','<com.android.server.MountService: boolean access$900(com.android.server.MountService)>','<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean checkFreeStorage(com.android.internal.app.IMediaContainerService)>','<android.app.ContextImpl: int getThemeResId()>','<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: com.android.internal.telephony.Phone getPhone()>','<com.android.server.net.NetworkIdentitySet: void <init>()>','<android.view.ViewRootImpl: void setStopped(boolean)>','<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>','<android.webkit.GeolocationPermissionsClassic: void access$500()>','<android.widget.RemoteViews$BitmapCache: void <init>()>','<com.android.internal.telephony.DataConnectionAc: android.app.PendingIntent rspReconnectIntent(android.os.Message)>','<android.speech.tts.TtsEngines: void updateLocalePrefForEngine(java.lang.String,java.lang.String)>','<android.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context)>','<com.android.internal.telephony.IccCard: void registerForLocked(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean access$600(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<android.nfc.NfcAdapter: void <init>(android.content.Context)>','<android.content.ContentResolver: int modeToMode(android.net.Uri,java.lang.String)>','<android.widget.GridView: android.widget.ListAdapter getAdapter()>','<android.location.LocationManager: android.location.ILocationManager access$100(android.location.LocationManager)>','<com.android.server.ConnectivityService: void systemReady()>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataActivity(int)>','<android.os.storage.StorageManager$MountServiceBinderListener: void <init>(android.os.storage.StorageManager,android.os.storage.StorageManager$1)>','<com.android.internal.telephony.gsm.GsmCall: void dispose()>','<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setSendKeepAlive(boolean)>','<android.provider.MediaStore$Audio$Artists: void <init>()>','<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.content.pm.Signature: void <init>(android.os.Parcel,android.content.pm.Signature$1)>','<android.view.DisplayEventReceiver: void finalize()>','<com.android.internal.policy.impl.PhoneWindowManager$17: void <init>(com.android.internal.policy.impl.PhoneWindowManager,java.lang.CharSequence)>','<android.net.sip.SipSession$Listener: void onError(android.net.sip.SipSession,int,java.lang.String)>','<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.internal.policy.impl.RecentApplicationsDialog: void onCreate(android.os.Bundle)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState: int describeContents()>','<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>','<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>','<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>','<android.app.Service: void setForeground(boolean)>','<com.android.internal.os.ProcessStats: com.android.internal.os.ProcessStats$Stats getStats(int)>','<android.net.NetworkInfo: boolean isConnectedOrConnecting()>','<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>','<com.android.server.wm.WindowManagerService: boolean hasNavigationBar()>','<android.widget.ProgressBar: void incrementProgressBy(int)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.res.ObbInfo getObbInfo(java.lang.String)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1AlphaTag()>','<com.android.server.wm.AppWindowAnimator: boolean stepAnimationLocked(long,int,int)>','<android.net.http.RequestHandle: void waitUntilComplete()>','<com.android.internal.telephony.IccCardApplication$AppState: boolean isPinRequired()>','<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>','<android.webkit.CallbackProxy: android.webkit.WebResourceResponse shouldInterceptRequest(java.lang.String)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>','<android.webkit.WebViewCore: void sendStaticMessage(int,java.lang.Object)>','<com.android.internal.widget.ScrollingTabContainerView: void onDetachedFromWindow()>','<com.android.internal.telephony.cdma.CDMAPhone: void getNeighboringCids(android.os.Message)>','<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void onAttachedToWindow()>','<android.net.TrafficStats: long getMobileRxPackets()>','<android.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)>','<com.android.internal.telephony.IPhoneStateListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>','<android.media.AudioService: void adjustLocalOrRemoteStreamVolume(int,int)>','<android.security.KeyStore: int getLastError()>','<android.content.pm.IPackageMoveObserver$Stub: android.content.pm.IPackageMoveObserver asInterface(android.os.IBinder)>','<android.webkit.WebViewCore$WebKitHitTest: void <init>()>','<com.android.internal.telephony.PhoneBase: void notifyPreciseCallStateChangedP()>','<com.android.internal.statusbar.StatusBarNotification: boolean isClearable()>','<android.net.nsd.NsdServiceInfo$1: android.net.nsd.NsdServiceInfo[] newArray(int)>','<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>','<com.android.internal.os.BatteryStatsImpl: void writeLocked(boolean)>','<android.widget.GridView: void <init>(android.content.Context)>','<android.os.IPermissionController$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.LinearLayout: void setDividerPadding(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getDataCallList(android.os.Message)>','<android.widget.SearchView: void setAppSearchData(android.os.Bundle)>','<android.opengl.GLLogWrapper: void glClientActiveTexture(int)>','<android.widget.Editor$InputMethodState: void <init>()>','<com.android.internal.app.ActionBarImpl: void completeDeferredDestroyActionMode()>','<android.webkit.HTML5VideoView: boolean getStartWhenPrepared()>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>','<com.android.internal.policy.impl.LockScreen: void access$500(com.android.internal.policy.impl.LockScreen)>','<android.app.ContextImpl$30: void <init>()>','<android.net.rtp.AudioGroup: void finalize()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void handleMessage(android.os.Message)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource)>','<com.android.internal.telephony.IccCard: void setIccFdnEnabled(boolean,java.lang.String,android.os.Message)>','<android.bluetooth.BluetoothProfileState: int access$200(android.bluetooth.BluetoothProfileState)>','<com.android.internal.database.SortCursor: long getLong(int)>','<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>','<android.filterfw.core.GLEnvironment: void initWithNewContext()>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setTransportControlFlags(int,int)>','<android.webkit.WebStorageClassic: java.util.Map access$400(android.webkit.WebStorageClassic)>','<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>','<android.widget.ListView: boolean arrowScroll(int)>','<android.media.IAudioRoutesObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>','<android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData: void <init>(android.widget.RemoteViewsAdapter,android.widget.RemoteViews,long,boolean)>','<android.os.StrictMode$AndroidCloseGuardReporter: void report(java.lang.String,java.lang.Throwable)>','<android.app.ContextImpl: void revokeUriPermission(android.net.Uri,int)>','<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>','<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()>','<com.android.internal.telephony.cdma.SmsMessage: android.telephony.SmsCbMessage parseBroadcastSms()>','<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>','<android.server.BluetoothAdapterStateMachine$WarmUp: void enter()>','<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>','<android.os.ParcelUuid: java.lang.String toString()>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec: java.lang.String toString()>','<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>','<android.renderscript.Sampler$Value: void <clinit>()>','<android.content.ContentResolver$ParcelFileDescriptorInner: void finalize()>','<android.net.rtp.AudioGroup: int getMode()>','<android.app.SearchDialog$2: void onClick(android.view.View)>','<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()>','<android.os.CountDownTimer: long access$000(android.os.CountDownTimer)>','<android.widget.AdapterViewAnimator$SavedState: void <init>(android.os.Parcelable,int)>','<android.net.http.SslError: int getPrimaryError()>','<android.server.BluetoothService: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>','<android.webkit.WebStorageClassic: void <init>()>','<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()>','<android.os.Parcel: int readExceptionCode()>','<android.opengl.GLLogWrapper$PointerInfo: int getStride()>','<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)>','<com.android.vcard.VCardParser_V40: void cancel()>','<android.view.ViewRootImpl: void handleGetNewSurface()>','<android.app.ContextImpl: android.os.IBinder getActivityToken()>','<com.android.internal.widget.PointerLocationView$PointerState: void <init>()>','<android.ddm.DdmHandleThread: void register()>','<android.app.FragmentManagerImpl: void <clinit>()>','<android.widget.AdapterView: void removeView(android.view.View)>','<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>','<com.android.internal.logging.AndroidConfig: void <init>()>','<android.content.ContentProvider: void shutdown()>','<com.android.internal.policy.impl.PatternUnlockScreen$3: void <init>(com.android.internal.policy.impl.PatternUnlockScreen,long,long)>','<android.view.accessibility.AccessibilityEvent: int getRecordCount()>','<android.widget.AbsListView$PositionScroller$1: void <init>(android.widget.AbsListView$PositionScroller,int)>','<android.view.View: android.view.animation.Animation getAnimation()>','<android.app.Notification$BigPictureStyle: android.app.Notification build()>','<android.provider.BrowserContract$Bookmarks: void <clinit>()>','<com.android.server.pm.PackageManagerService: boolean hasSystemUidErrors()>','<com.android.internal.util.AsyncChannel: java.lang.String cmdToString(int)>','<android.telephony.SmsCbMessage: int describeContents()>','<android.text.Layout: void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int)>','<android.view.GLES20Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>','<android.hardware.input.InputManager: void removeKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.location.Location: void removeAccuracy()>','<android.net.wifi.WifiWatchdogStateMachine: void access$3400(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>','<com.android.server.MountService$MountServiceBinderListener: void <init>(com.android.server.MountService,android.os.storage.IMountServiceListener)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getEmailAddress()>','<android.webkit.SearchBoxImpl: void setVerbatim(boolean)>','<android.widget.ImageView: void setAdjustViewBounds(boolean)>','<android.telephony.TelephonyManager: int getDataState()>','<android.media.effect.Effect: void <init>()>','<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>','<android.os.BatteryStats$HistoryPrinter: void <init>()>','<android.net.DhcpInfoInternal: void <init>()>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: void <init>(com.android.internal.telephony.DataConnectionTracker)>','<android.bluetooth.BluetoothAdapter: boolean changeApplicationBluetoothState(boolean,android.bluetooth.BluetoothAdapter$BluetoothStateChangeCallback)>','<android.view.InputEventConsistencyVerifier: void onInputEvent(android.view.InputEvent,int)>','<android.net.wifi.WifiStateMachine$2: void onReceive(android.content.Context,android.content.Intent)>','<android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>','<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>','<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>','<com.android.internal.widget.ActionBarView: android.graphics.drawable.Drawable access$500(com.android.internal.widget.ActionBarView)>','<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>','<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.PhoneBase: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: void reset()>','<android.view.View$1: void <init>(android.view.View,java.lang.String)>','<android.app.Activity: void startActivities(android.content.Intent[])>','<android.filterpacks.videosrc.MediaSource$3: void onCompletion(android.media.MediaPlayer)>','<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>','<android.widget.TextView: void deleteText_internal(int,int)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean setRadio(boolean)>','<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>','<android.view.inputmethod.InputMethodManager$1: void onUnbindMethod(int)>','<android.content.pm.IPackageManager$Stub$Proxy: int checkPermission(java.lang.String,java.lang.String)>','<com.android.vcard.VCardUtils: void <clinit>()>','<android.webkit.AccessibilityInjector$CallbackHandler: boolean access$100(android.webkit.AccessibilityInjector$CallbackHandler,android.webkit.WebView,java.lang.String)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])>','<com.android.internal.telephony.sip.SipPhoneFactory: void <init>()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>','<com.android.internal.telephony.DataConnection: void access$3000(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: boolean isPlaying()>','<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>','<android.app.PendingIntent$CanceledException: void <init>(java.lang.Exception)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: com.android.server.sip.SipSessionGroup$SipSessionImpl duplicate()>','<com.android.server.am.UsageStatsService: void noteResumeComponent(android.content.ComponentName)>','<android.view.WindowManagerImpl: void closeAll()>','<android.media.AudioService: android.media.AudioService$ForceControlStreamClient access$900(android.media.AudioService)>','<android.preference.GenericInflater: android.content.Context getContext()>','<android.nfc.INfcAdapter$Stub$Proxy: boolean disable(boolean)>','<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.pm.UserManager: boolean removePackageFolders(int)>','<android.database.CursorWindow: boolean setNumColumns(int)>','<android.filterfw.format.ObjectFormat: void <init>()>','<com.android.internal.telephony.PhoneProxy: void unregisterForResendIncallMute(android.os.Handler)>','<android.net.http.Request: void complete()>','<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>','<android.text.method.BaseMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void preloadRecentApps()>','<android.webkit.CallbackProxy: void onNewHistoryItem(android.webkit.WebHistoryItem)>','<com.android.internal.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)>','<com.android.server.WallpaperManagerService$WallpaperData: void <init>(int)>','<android.accounts.AccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription)>','<android.bluetooth.IBluetoothCallback$Stub: void <init>()>','<android.view.FocusFinder$SequentialFocusComparator: void recycle()>','<android.content.res.CompatibilityInfo$Translator: void translateRectInScreenToAppWinFrame(android.graphics.Rect)>','<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()>','<android.os.RemoteCallback: void <init>(android.os.IRemoteCallback)>','<android.net.IConnectivityManager$Stub$Proxy: boolean protectVpn(android.os.ParcelFileDescriptor)>','<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>','<android.net.wifi.SupplicantStateTracker: android.os.Message access$700(android.net.wifi.SupplicantStateTracker)>','<android.view.LayoutInflater$BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.webkit.ClientCertRequestHandler$4: void run()>','<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToTop(java.util.List)>','<android.server.BluetoothAdapterStateMachine: int getBluetoothAdapterState()>','<com.android.server.net.NetworkStatsService$6: void <init>(com.android.server.net.NetworkStatsService)>','<android.widget.TextView: void setFilters(android.text.InputFilter[])>','<com.android.internal.telephony.EncodeException: void <init>()>','<android.hardware.input.KeyboardLayout: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>','<android.app.DownloadManager$Request: void <clinit>()>','<android.webkit.WebViewCore: void populateVisitedLinks()>','<android.net.wifi.WifiWatchdogStateMachine$3: void <init>(android.net.wifi.WifiWatchdogStateMachine,android.os.Handler)>','<android.security.KeyStore: byte[][] saw(byte[])>','<com.android.internal.telephony.DataConnection: java.lang.String getMessageInfo(android.os.Message)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getCurrentFailedPasswordAttempts()>','<android.text.method.CharacterPickerDialog: java.lang.String access$100(android.text.method.CharacterPickerDialog)>','<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.ExpandableListView: void <init>(android.content.Context)>','<com.android.server.net.NetworkStatsService$1: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)>','<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)>','<android.emoji.EmojiFactory: java.lang.String name()>','<android.graphics.SweepGradient: void <init>(float,float,int,int)>','<android.webkit.WebViewInputDispatcher$WebKitHandler: void handleMessage(android.os.Message)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void cancelPreloadRecentApps()>','<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>','<com.android.server.wm.AppWindowAnimator: boolean showAllWindowsLocked()>','<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>','<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)>','<android.net.NetworkStatsHistory: long getTotalBytes()>','<com.android.server.am.UriPermission: void clearModes(int)>','<android.inputmethodservice.Keyboard: int access$500(android.inputmethodservice.Keyboard)>','<android.view.InputChannel: void transferTo(android.view.InputChannel)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: void run()>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>','<android.net.rtp.RtpStream: void associate(java.net.InetAddress,int)>','<android.accounts.IAccountManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.IWindowSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>','<com.android.internal.telephony.RIL: void setCLIR(int,android.os.Message)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>','<android.webkit.WebSettingsClassic: boolean getLoadWithOverviewMode()>','<com.android.internal.policy.impl.RecentApplicationsDialog$2: void <init>(com.android.internal.policy.impl.RecentApplicationsDialog)>','<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList)>','<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChangedInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$1102(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<com.android.uiautomator.core.QueryController: java.lang.String getCurrentPackageName()>','<android.widget.ListPopupWindow: void setHeight(int)>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>','<android.animation.Keyframe$IntKeyframe: void setValue(java.lang.Object)>','<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>','<com.android.server.wm.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)>','<android.graphics.Matrix: void getValues(float[])>','<android.media.IAudioFocusDispatcher$Stub$Proxy: void <init>(android.os.IBinder)>','<android.os.CancellationSignal: void <init>()>','<com.android.internal.telephony.cat.CatService: void <clinit>()>','<com.android.server.input.InputManagerService$2: void <init>(com.android.server.input.InputManagerService)>','<android.webkit.DeviceMotionAndOrientationManager: void onMotionChange(java.lang.Double,java.lang.Double,java.lang.Double,double)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteInputEvent()>','<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>','<com.android.server.LocationManagerService: void access$1700(com.android.server.LocationManagerService,android.app.PendingIntent)>','<com.android.internal.telephony.IntRangeManager$IntRange: void insert(com.android.internal.telephony.IntRangeManager$ClientRange)>','<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>','<android.text.DynamicLayout: int getLineTop(int)>','<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>','<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>','<android.view.animation.AnticipateOvershootInterpolator: void <init>()>','<android.database.sqlite.SQLiteException: void <init>()>','<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>','<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)>','<android.webkit.WebViewClassic: android.webkit.WebView getWebView()>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>','<android.webkit.WebViewClassic$5: void onClick(android.content.DialogInterface,int)>','<android.content.res.StringBlock$StyleIDs: int access$1000(android.content.res.StringBlock$StyleIDs)>','<com.android.internal.view.BaseIWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>','<android.widget.ListPopupWindow: long getSelectedItemId()>','<com.android.internal.telephony.PhoneBase: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>','<android.view.KeyEvent: void <clinit>()>','<com.android.internal.telephony.cdma.SmsMessage: boolean isStatusReportMessage()>','<com.android.internal.telephony.SmsHeader: void <init>()>','<android.widget.TextView: int getMarqueeRepeatLimit()>','<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>','<android.webkit.WebSettings: int getMinimumFontSize()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,int,int,int)>','<android.telephony.SmsMessage: int getStatus()>','<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>','<android.nfc.INfcAdapter$Stub$Proxy: int getState()>','<android.database.sqlite.SQLiteConnection$Operation: void <clinit>()>','<android.view.MotionEvent: int getEdgeFlags()>','<com.android.internal.policy.impl.PasswordUnlockScreen$5: void onFinish()>','<com.android.internal.telephony.CallManager: void rejectCall(com.android.internal.telephony.Call)>','<com.android.internal.view.menu.ActionMenuView: void onMeasure(int,int)>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: boolean matches(android.hardware.usb.UsbAccessory)>','<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender)>','<android.net.wifi.WifiStateMachine: void access$2600(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.wifi.WifiStateMachine: int access$4602(android.net.wifi.WifiStateMachine,int)>','<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>','<android.os.DropBoxManager$Entry: void close()>','<android.filterpacks.base.FrameBranch: void setupPorts()>','<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,boolean)>','<android.media.AudioManager: void adjustStreamVolume(int,int,int)>','<com.android.server.DevicePolicyManagerService$3: void onReceive(android.content.Context,android.content.Intent)>','<android.view.Choreographer: java.lang.Object access$400()>','<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>','<com.android.internal.widget.SlidingTab: void startAnimating(boolean)>','<com.android.server.pm.UserManager: boolean exists(int)>','<android.widget.Switch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.webkit.QuadF: void <init>()>','<android.database.ContentObserver: void onChange(boolean)>','<android.webkit.WebViewClassic: int getHeight()>','<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>','<android.filterfw.io.GraphIOException: void <init>()>','<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: void enter()>','<android.net.IConnectivityManager$Stub$Proxy: void reportInetCondition(int,int)>','<android.webkit.WebView: int access$001(android.webkit.WebView)>','<android.provider.Settings$NameValueCache: void <clinit>()>','<com.android.server.wm.Session: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>','<android.widget.Toast$TN: void handleHide()>','<com.android.server.sip.SipSessionGroup: void <init>(android.net.sip.SipProfile,java.lang.String,com.android.server.sip.SipWakeupTimer,com.android.server.sip.SipWakeLock)>','<android.animation.Animator: void cancel()>','<android.webkit.WebSettingsClassic: void setPluginState(android.webkit.WebSettings$PluginState)>','<android.media.RingtoneManager: void <init>(android.content.Context)>','<android.hardware.Camera$Parameters: void setVideoStabilization(boolean)>','<android.net.wifi.WifiStateMachine: void access$17300(android.net.wifi.WifiStateMachine,android.os.Message)>','<com.android.server.input.InputManagerService: android.view.InputChannel monitorInput(java.lang.String)>','<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>','<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)>','<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributeName(int)>','<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])>','<com.android.internal.content.PackageMonitor: void onUidRemoved(int)>','<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)>','<android.content.ContentValues: void put(java.lang.String,byte[])>','<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.os.IBinder asBinder()>','<android.renderscript.RenderScript: void nContextBindProgramFragment(int)>','<com.android.server.NetworkManagementService: void startTethering(java.lang.String[])>','<android.location.ICountryDetector$Stub$Proxy: android.location.Country detectCountry()>','<android.view.GLES20RecordingCanvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>','<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>','<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1)>','<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>','<com.android.internal.telephony.cat.ValueParser: java.util.List retrieveTextAttribute(com.android.internal.telephony.cat.ComprehensionTlv)>','<android.app.LoaderManager: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: void setDataRoamingEnabled(boolean)>','<android.graphics.Path: void set(android.graphics.Path)>','<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>','<com.android.server.connectivity.Vpn: void interfaceAdded(java.lang.String)>','<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()>','<android.media.MediaRouter$VolumeCallbackInfo: void <init>(android.media.MediaRouter$VolumeCallback,android.media.MediaRouter$RouteInfo)>','<android.filterfw.core.FilterFactory: void <init>()>','<android.media.MediaPlayer: void reset()>','<android.filterfw.core.MutableFrameFormat: void <init>()>','<android.os.MessageQueue: void finalize()>','<android.content.IContentService$Stub$Proxy: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>','<com.android.internal.util.CharSequences: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>','<android.widget.ProgressBar$RefreshData: boolean isPooled()>','<com.android.internal.widget.ActionBarView$1: void <init>(com.android.internal.widget.ActionBarView)>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>','<android.view.View: int getScrollBarSize()>','<com.android.internal.telephony.CallManager$1: void <init>(com.android.internal.telephony.CallManager)>','<android.app.SearchManager: boolean isVisible()>','<android.content.Loader: void onStartLoading()>','<android.view.IWindowSession$Stub$Proxy: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>','<android.webkit.WebViewClassic$3: void onClick(android.content.DialogInterface,int)>','<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>','<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager)>','<android.util.DisplayMetrics: void setToDefaults()>','<android.widget.SeekBar: void onProgressRefresh(float,boolean)>','<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: void <init>(android.os.IBinder)>','<android.os.Parcel: void readBinderArray(android.os.IBinder[])>','<android.animation.ObjectAnimator: void setupEndValues()>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean endBatchEdit()>','<android.widget.AbsListView$RecycleBin: void clearTransientStateViews()>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getRingingPhone()>','<android.graphics.drawable.Drawable: int getLevel()>','<android.webkit.WebViewClassic: void pauseTimers()>','<android.app.ContextImpl: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>','<com.android.internal.telephony.RIL: void setPreferredVoicePrivacy(boolean,android.os.Message)>','<android.net.wifi.WifiInfo: boolean access$202(android.net.wifi.WifiInfo,boolean)>','<android.nfc.NfcActivityManager$NfcApplicationState: void <init>(android.nfc.NfcActivityManager,android.app.Application)>','<android.net.wifi.StateChangeResult: void <init>(int,java.lang.String,java.lang.String,android.net.wifi.SupplicantState)>','<com.android.internal.telephony.RIL: void cancelPendingUssd(android.os.Message)>','<com.android.internal.view.menu.MenuBuilder: void close(boolean)>','<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>','<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)>','<android.app.UiModeManager: void <init>()>','<android.net.NetworkInfo$1: void <init>()>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$1200(android.bluetooth.BluetoothDeviceProfileState)>','<android.net.wifi.WifiStateMachine: void access$5400(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4: void <init>(java.lang.String,int)>','<android.view.View$11: java.lang.Object get(java.lang.Object)>','<com.android.internal.statusbar.StatusBarNotification: com.android.internal.statusbar.StatusBarNotification clone()>','<android.database.DatabaseUtils: int cursorPickFillWindowStartPosition(int,int)>','<android.location.CountryDetector$ListenerTransport: android.location.CountryListener access$000(android.location.CountryDetector$ListenerTransport)>','<android.server.BluetoothService: void removeProfileState(java.lang.String)>','<com.android.server.PowerManagerService: int access$2700(com.android.server.PowerManagerService)>','<android.widget.ScrollView: boolean shouldDelayChildPressedState()>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>','<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performResumeActivity(android.os.IBinder,boolean)>','<android.widget.AbsListView$LayoutParams: void <init>(int,int)>','<android.opengl.GLLogWrapper: void glDepthRangef(float,float)>','<com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService valueOf(java.lang.String)>','<android.os.Message: boolean isInUse()>','<android.widget.Editor$HandleView: void positionAtCursorOffset(int,boolean)>','<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)>','<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>','<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.graphics.drawable.ShapeDrawable$1)>','<com.android.server.MountService: int getEncryptionState()>','<com.android.uiautomator.core.UiDevice: boolean hasAnyWatcherTriggered()>','<android.net.wifi.WifiManager$WifiLock: void acquire()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.Phone getPhone()>','<android.webkit.SslClientCertLookupTable: void Allow(java.lang.String,java.security.PrivateKey,byte[][])>','<android.content.res.XmlBlock$Parser: int getAttributeNameResource(int)>','<com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartWakeLocked(int,java.lang.String,int)>','<com.android.server.usb.UsbSettingsManager: void access$000(com.android.server.usb.UsbSettingsManager,java.lang.String)>','<android.util.SparseArray: void clear()>','<com.android.server.wm.WindowManagerService: void shutdown()>','<android.webkit.ZoomControlEmbedded: void show()>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$11100(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.os.ProcessStats: int countStats()>','<android.ddm.DdmHandleExit: void disconnected()>','<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)>','<android.app.DownloadManager$Query: android.app.DownloadManager$Query setOnlyIncludeVisibleInDownloadsUi(boolean)>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: void access$1100(com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer)>','<com.android.internal.telephony.IccUtils: int gsmBcdByteToInt(byte)>','<android.content.SyncAdaptersCache$MySerializer: void writeAsXml(android.content.SyncAdapterType,org.xmlpull.v1.XmlSerializer)>','<android.widget.AbsListView: boolean performLongPress(android.view.View,int,long)>','<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)>','<android.view.View: int getScrollBarFadeDuration()>','<com.android.internal.widget.multiwaveview.GlowPadView$AnimationBundle: void start()>','<android.widget.TextView: boolean isTextEditable()>','<android.renderscript.Element$DataKind: void <clinit>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState: void enter()>','<android.net.wifi.WifiManager$MulticastLock: void setReferenceCounted(boolean)>','<com.android.server.wm.WindowState: boolean isDrawnLw()>','<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()>','<android.app.ISearchManager$Stub: android.os.IBinder asBinder()>','<android.webkit.WebIconDatabaseClassic: void access$700(java.lang.String)>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>','<android.telephony.SignalStrength$1: android.telephony.SignalStrength createFromParcel(android.os.Parcel)>','<android.text.util.Linkify$1: boolean acceptMatch(java.lang.CharSequence,int,int)>','<com.android.internal.telephony.PhoneBase: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>','<com.android.internal.util.Preconditions: void <init>()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.ArrayList)>','<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>','<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>','<android.accounts.AccountManager$1: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String)>','<com.android.internal.app.AlertController: void <init>(android.content.Context,android.content.DialogInterface,android.view.Window)>','<android.widget.Editor: void onLocaleChanged()>','<com.android.internal.policy.impl.PhoneWindowManager: void access$200(com.android.internal.policy.impl.PhoneWindowManager)>','<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)>','<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getPasswordExpiration(android.content.ComponentName)>','<android.view.ViewStub: void draw(android.graphics.Canvas)>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>','<com.android.internal.app.AlertController: boolean canTextInput(android.view.View)>','<android.net.Uri: int compareTo(java.lang.Object)>','<com.android.server.location.PassiveProvider: int getPowerRequirement()>','<android.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>','<android.net.wifi.p2p.WifiP2pService: boolean access$8902(android.net.wifi.p2p.WifiP2pService,boolean)>','<com.android.server.net.NetworkStatsRecorder: void forcePersistLocked(long)>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>','<android.os.Parcel: void unmarshall(byte[],int,int)>','<android.view.View: float getPivotX()>','<android.webkit.WebViewClassic: android.os.Message access$8002(android.webkit.WebViewClassic,android.os.Message)>','<android.content.ContextWrapper: void <init>(android.content.Context)>','<android.webkit.WebViewClassic$Factory: android.webkit.WebViewProvider createWebView(android.webkit.WebView,android.webkit.WebView$PrivateAccess)>','<android.media.AudioService: void dispatchMediaKeyEvent(android.view.KeyEvent)>','<android.app.Fragment: boolean isInLayout()>','<android.filterpacks.videosrc.MediaSource: void tearDown(android.filterfw.core.FilterContext)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void setUpdateVersion(int)>','<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String)>','<android.media.MediaRouter: void clearUserRoutes()>','<android.webkit.ZoomControlExternal$3: void <init>(android.webkit.ZoomControlExternal)>','<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()>','<android.widget.Scroller: int getDuration()>','<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>','<com.android.internal.policy.impl.PhoneWindowManager$5: void onKeyguardExitResult(boolean)>','<android.content.pm.ApplicationInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<android.location.Address: java.lang.String getPhone()>','<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable,float,float)>','<android.net.sip.SipAudioCall: void startAudio()>','<android.filterfw.core.StreamPort: android.filterfw.core.Frame pullFrame()>','<android.os.storage.IMountService$Stub$Proxy: int destroySecureContainer(java.lang.String,boolean)>','<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>','<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>','<android.database.BulkCursorToCursorAdaptor: void <init>()>','<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>','<android.content.res.XmlBlock: void finalize()>','<android.webkit.WebStorage$Origin: long getQuota()>','<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>','<android.net.MobileDataStateTracker: void access$700(android.net.MobileDataStateTracker,java.lang.String)>','<android.view.SurfaceView: void handleGetNewSurface()>','<android.location.GpsStatus$SatelliteIterator: boolean hasNext()>','<com.android.internal.telephony.sip.SipCommandInterface: void setSmscAddress(java.lang.String,android.os.Message)>','<com.android.internal.telephony.SmsMessageBase: void <init>()>','<com.android.server.am.ActivityStack: void dismissKeyguardOnNextActivityLocked()>','<com.android.server.pm.Settings: void writePackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>','<android.app.SearchDialog$5: boolean onSuggestionClick(int)>','<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View,android.app.ActionBar$LayoutParams)>','<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>','<android.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>','<com.android.server.wm.DragState: void register()>','<android.app.QueuedWork: void remove(java.lang.Runnable)>','<android.view.View$TransformationInfo: android.graphics.Matrix access$1800(android.view.View$TransformationInfo)>','<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>','<android.view.ViewRootImpl: void onHardwarePostDraw(android.view.HardwareCanvas)>','<android.widget.AbsListView: android.view.inputmethod.InputConnection access$3300(android.widget.AbsListView)>','<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(android.content.ComponentName)>','<android.content.pm.InstrumentationInfo: void <init>(android.os.Parcel,android.content.pm.InstrumentationInfo$1)>','<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockAcquiredLocked(int)>','<android.nfc.TechListParcel$1: void <init>()>','<com.android.server.pm.PackageManagerService: void access$3600(com.android.server.pm.PackageManagerService,java.lang.String,boolean)>','<android.accounts.AccountManagerService$MessageHandler: void handleMessage(android.os.Message)>','<android.app.ISearchManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.widget.Editor: boolean access$1100(android.widget.Editor,int)>','<android.webkit.CallbackProxy: void onProgressChanged(int)>','<android.content.ContentService: java.util.List getCurrentSyncs()>','<android.app.Dialog: int getVolumeControlStream()>','<com.android.internal.telephony.gsm.GsmSmsCbMessage: void <clinit>()>','<android.net.NetworkStatsHistory$DataStreamUtils: long[] readFullLongArray(java.io.DataInputStream)>','<android.view.View: boolean isVisibleToUser()>','<com.android.server.AppWidgetService: void updateAppWidgetOptions(int,android.os.Bundle)>','<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>','<android.view.InputDevice: java.lang.String getName()>','<com.android.internal.telephony.DataConnectionAc: void reqGetApnList(com.android.internal.telephony.ApnContext)>','<android.view.GLES20Canvas: void rotate(float)>','<android.net.wifi.WifiManager: void startWps(android.net.wifi.WifiManager$Channel,android.net.wifi.WpsInfo,android.net.wifi.WifiManager$WpsListener)>','<com.android.internal.telephony.PhoneProxy: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>','<android.view.MotionEvent: long getHistoricalEventTime(int)>','<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void run()>','<android.net.wifi.WifiStateMachine: void access$12800(android.net.wifi.WifiStateMachine)>','<android.hardware.usb.UsbAccessory: int describeContents()>','<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>','<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>','<com.android.server.connectivity.Vpn$Connection: android.os.IBinder access$000(com.android.server.connectivity.Vpn$Connection)>','<com.android.internal.os.BatteryStatsImpl: long getRadioDataUptimeMs()>','<com.android.internal.database.SortCursor: short getShort(int)>','<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.view.GLES20DisplayList: void setRotationY(float)>','<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>','<android.app.Fragment: void setInitialSavedState(android.app.Fragment$SavedState)>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>','<android.content.ISyncContext$Stub: void <init>()>','<com.android.internal.policy.impl.KeyguardViewManager: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>','<android.net.LinkAddress$1: android.net.LinkAddress[] newArray(int)>','<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)>','<android.net.nsd.DnsSdTxtRecord: boolean equals(java.lang.Object)>','<android.net.wifi.p2p.WifiP2pInfo: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: void setNetworkSelectionModeAutomatic(android.os.Message)>','<com.android.internal.telephony.gsm.GSMPhone: java.util.List getPendingMmiCodes()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void onConnectionEnded(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler access$400(android.net.wifi.p2p.WifiP2pManager$Channel)>','<android.media.AudioService: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>','<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>','<android.webkit.WebViewCore: void access$3900(android.webkit.WebViewCore,int,int,int)>','<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] preceding(int)>','<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>','<android.preference.Preference: java.lang.CharSequence getSummary()>','<android.webkit.BrowserFrame: void loadUrl(java.lang.String,java.util.Map)>','<android.server.BluetoothBondState: boolean isAutoPairingBlacklisted(java.lang.String)>','<android.app.Instrumentation$Idler: boolean queueIdle()>','<com.android.internal.view.IInputMethod$Stub$Proxy: void attachToken(android.os.IBinder)>','<android.telephony.PhoneStateListener$1: void onCallStateChanged(int,java.lang.String)>','<android.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()>','<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)>','<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumWidth()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleUserChanged(int)>','<android.view.GLES20Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>','<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.String idToString(int)>','<com.android.internal.util.StateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>','<android.os.IPowerManager$Stub$Proxy: void setAttentionLight(boolean,int)>','<android.app.WallpaperInfo: java.lang.String getPackageName()>','<android.view.InputDevice: int[] getDeviceIds()>','<android.widget.TextView: void onEndBatchEdit()>','<com.android.server.AppWidgetServiceImpl: void saveStateLocked()>','<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>','<android.database.BulkCursorNative: void <init>()>','<android.webkit.ViewManager$ChildView$2: void run()>','<android.net.NetworkStatsHistory: void recordEntireHistory(android.net.NetworkStatsHistory)>','<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>','<android.net.NetworkPolicy$1: void <init>()>','<android.filterfw.core.SyncRunner$1: void run()>','<android.telephony.cdma.CdmaCellLocation: void <init>()>','<android.net.NetworkTemplate: void <init>(android.os.Parcel,android.net.NetworkTemplate$1)>','<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: boolean hasStableIds()>','<com.android.internal.telephony.DataConnectionTracker: void dispose()>','<com.android.server.MountService: void access$200(com.android.server.MountService,java.lang.String,java.lang.String,boolean)>','<android.app.Activity: void finishActivity(int)>','<android.accessibilityservice.UiTestAutomationBridge$1: void onSetConnectionId(int)>','<android.security.KeyStore: boolean generate(java.lang.String)>','<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>','<android.bluetooth.BluetoothProfileState$StableState: void enter()>','<android.filterfw.core.Frame: boolean requestResize(int[])>','<android.content.SyncManager: boolean access$400(android.content.SyncManager)>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>','<android.net.wifi.WifiStateMachine$TetheringState: boolean processMessage(android.os.Message)>','<android.net.EthernetDataTracker: int startUsingNetworkFeature(java.lang.String,int,int)>','<android.net.NetworkPolicyManager: void unregisterListener(android.net.INetworkPolicyListener)>','<android.text.Layout: int getHeight()>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>','<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>','<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas$EdgeType)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(com.android.internal.widget.multiwaveview.TargetDrawable)>','<android.net.sip.SipSession: void unregister()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getCurrentDataConnectionState()>','<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>','<android.content.Context: int getThemeResId()>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>','<android.widget.AbsListView: void access$3800(android.widget.AbsListView,android.view.View,boolean)>','<android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>','<android.media.IAudioService$Stub$Proxy: void unregisterAudioFocusClient(java.lang.String)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(float,float)>','<com.android.internal.widget.PasswordEntryKeyboardView: boolean setShifted(boolean)>','<com.android.server.location.GpsLocationProvider: void <clinit>()>','<android.net.sip.SipProfile: int access$402(android.net.sip.SipProfile,int)>','<android.net.wifi.WifiStateMachine$SupplicantStartedState: void exit()>','<android.webkit.CallbackProxy: void blockMessages()>','<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>','<android.graphics.drawable.AnimatedRotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.graphics.drawable.NinePatchDrawable: int getOpacity()>','<android.net.wifi.WifiStateMachine: void updateBatteryWorkSource(android.os.WorkSource)>','<android.app.PendingIntent$FinishedDispatcher: void <init>(android.app.PendingIntent,android.app.PendingIntent$OnFinished,android.os.Handler)>','<android.net.wifi.WifiStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.View getCustomView()>','<android.util.XmlPullAttributes: java.lang.String getPositionDescription()>','<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>','<com.android.server.NsdService: boolean access$1100(com.android.server.NsdService)>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: void <init>(int,int,int,int,int)>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: void updateTxRxSum()>','<android.content.pm.UserInfo: void <init>(android.os.Parcel,android.content.pm.UserInfo$1)>','<android.content.Loader: void onReset()>','<com.android.internal.telephony.RIL: void stopDtmf(android.os.Message)>','<android.text.style.URLSpan: void onClick(android.view.View)>','<com.android.server.wm.WindowManagerService: void adjustInputMethodDialogsLocked()>','<com.android.server.sip.SipWakeupTimer$MyEventComparator: boolean equals(java.lang.Object)>','<android.app.LoadedApk$ReceiverDispatcher$Args: void <init>(android.app.LoadedApk$ReceiverDispatcher,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<android.view.MotionEvent: float getTouchMajor(int)>','<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>','<android.webkit.WebViewCore$EventHub: int access$802(android.webkit.WebViewCore$EventHub,int)>','<com.android.server.net.NetworkAlertObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>','<android.webkit.BrowserFrame$2$1: void <init>(android.webkit.BrowserFrame$2)>','<android.view.HardwareLayer: void <init>()>','<android.graphics.Paint$Align: android.graphics.Paint$Align valueOf(java.lang.String)>','<com.android.server.PowerManagerService: void setStayOnSetting(int)>','<android.content.pm.IPackageDataObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: int[] getNextIndexToLoad()>','<android.webkit.WebViewClassic: android.webkit.WebViewDatabaseClassic access$2400(android.webkit.WebViewClassic)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void exit()>','<android.net.NetworkIdentity: boolean equals(java.lang.Object)>','<android.os.StrictMode: void noteDiskRead()>','<android.view.View: void setIsRootNamespace(boolean)>','<com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>','<android.app.Dialog: void setFeatureDrawableResource(int,int)>','<android.media.TimedText$Karaoke: void <init>(int,int,int,int)>','<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>','<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)>','<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)>','<com.android.internal.os.storage.ExternalStorageFormatter$1: void <init>(com.android.internal.os.storage.ExternalStorageFormatter)>','<android.telephony.cdma.CdmaSmsCbProgramData: void <clinit>()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean removeBond(java.lang.String)>','<android.content.SyncAdapterType: boolean isUserVisible()>','<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>','<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>','<android.content.ContentUris: long parseId(android.net.Uri)>','<com.android.server.AlarmManagerService$ClockReceiver: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider getGpsStatusProvider()>','<com.android.internal.policy.impl.PhoneWindowManager$3: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.view.GLES20Canvas: void access$000(int)>','<android.os.StrictMode: java.util.HashMap access$100()>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>','<com.android.server.NetworkManagementService: void setDefaultInterfaceForDns(java.lang.String)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeLongInteger(int)>','<android.net.Uri$PathPart: void <clinit>()>','<com.android.vcard.VCardParserImpl_V21: java.util.Set getAvailableEncodingSet()>','<android.webkit.CertTool: java.lang.String[] getKeyStrengthList()>','<android.net.NetworkTemplate: java.lang.String getNetworkId()>','<android.net.wifi.p2p.WifiP2pService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.content.pm.Signature: java.security.PublicKey getPublicKey()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>','<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher$SmsCbConcatInfo: int hashCode()>','<android.view.LayoutInflater$BlinkLayout: void onDetachedFromWindow()>','<android.net.Uri$PathPart: android.net.Uri$PathPart readFrom(android.os.Parcel)>','<com.android.server.location.LocationProviderProxy: java.lang.String getName()>','<com.android.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>','<android.widget.AbsListView$CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>','<com.android.server.IntentResolver: void <init>()>','<android.filterfw.core.GLFrame: float[] getFloats()>','<android.filterfw.core.Filter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>','<android.net.NetworkStats: void dump(java.lang.String,java.io.PrintWriter)>','<android.app.IActivityManager$ContentProviderHolder: int describeContents()>','<android.widget.TextView: void setRawInputType(int)>','<android.filterfw.core.FrameFormat: boolean isCompatibleWith(android.filterfw.core.FrameFormat)>','<android.view.AccessibilityIterators$ParagraphTextSegmentIterator: void <init>()>','<android.media.MediaRecorder: void setOrientationHint(int)>','<android.widget.ProgressBar: int getProgress()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onUserChanged(int)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1600(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.hardware.usb.UsbDevice: int hashCode()>','<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.net.nsd.NsdServiceInfo: java.lang.String access$002(android.net.nsd.NsdServiceInfo,java.lang.String)>','<android.net.rtp.AudioGroup: void add(android.net.rtp.AudioStream)>','<android.app.ActivityThread$DumpComponentInfo: void <init>()>','<android.net.wifi.WifiStateMachine: void access$2700(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.media.MediaRouter$VolumeChangeReceiver: void <init>()>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>','<com.android.internal.telephony.CallManager: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>','<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>','<com.android.server.input.InputManagerService$6: void onChange(boolean)>','<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>','<android.net.wifi.WifiInfo$1: void <init>()>','<android.widget.Editor: void onAttachedToWindow()>','<android.net.wifi.WifiManager$WifiLock: void setWorkSource(android.os.WorkSource)>','<com.android.internal.util.CharSequences$2: int length()>','<android.net.http.RequestHandle: java.lang.String authorizationHeader(boolean)>','<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)>','<android.widget.PopupWindow: void update(int,int,int,int)>','<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>','<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>','<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)>','<com.android.server.NetworkManagementService: void addRoute(java.lang.String,android.net.RouteInfo)>','<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()>','<com.android.internal.telephony.BaseCommands: void registerFoT53ClirlInfo(android.os.Handler,int,java.lang.Object)>','<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$3400(android.net.wifi.WifiStateMachine)>','<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>','<com.android.internal.widget.AbsActionBarView: void setSplitWhenNarrow(boolean)>','<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>','<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>','<android.opengl.GLLogWrapper: void glMultiTexCoord4x(int,int,int,int,int)>','<android.net.wifi.WifiStateMachine: int access$14404(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.gsm.GSMPhone$2: void <clinit>()>','<android.webkit.WebViewClassic: boolean canGoForward()>','<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>','<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getSubscriberId()>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: java.lang.Object getResult()>','<android.view.inputmethod.ExtractedText: void <clinit>()>','<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,java.io.File)>','<com.android.server.am.ActivityStack: void moveHomeToFrontFromLaunchLocked(int)>','<android.webkit.WebViewClassic: void loadUrl(java.lang.String)>','<android.view.GLES20Canvas: void onPostDraw()>','<com.android.server.LocationManagerService: java.lang.Object access$300(com.android.server.LocationManagerService)>','<android.media.IAudioService$Stub$Proxy: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>','<android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)>','<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>','<com.android.server.net.NetworkStatsService$5: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.net.VpnConfig$1: com.android.internal.net.VpnConfig[] newArray(int)>','<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>','<com.android.internal.os.PkgUsageStats: void <init>(com.android.internal.os.PkgUsageStats)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)>','<com.android.server.LocationManagerService$ProximityAlert: long getExpiration()>','<android.filterfw.geometry.Quad: java.lang.String toString()>','<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()>','<com.android.internal.database.SortCursor: byte[] getBlob(int)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getSubscriberId()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int getRecoveryAction()>','<android.telephony.PhoneStateListener$2: void <init>(android.telephony.PhoneStateListener)>','<com.android.internal.telephony.AdnRecordCache: void requestLoadAllAdnLike(int,int,android.os.Message)>','<com.android.internal.widget.SlidingTab: void onVisibilityChanged(android.view.View,int)>','<android.content.pm.IPackageMoveObserver$Stub: void <init>()>','<com.android.internal.view.BaseIWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>','<android.app.Notification$Builder: void <init>(android.content.Context)>','<com.android.server.net.NetworkPolicyManagerService: void addIdleHandler(android.os.MessageQueue$IdleHandler)>','<com.android.server.am.CompatModeDialog$1: void <init>(com.android.server.am.CompatModeDialog)>','<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionAttached(android.os.Handler,int,java.lang.Object)>','<com.android.server.pm.Settings: void transferPermissionsLPw(java.lang.String,java.lang.String)>','<com.android.internal.telephony.test.ModelInterpreter: void <init>(java.net.InetSocketAddress)>','<android.widget.ExpandableListView: boolean collapseGroup(int)>','<android.media.AudioService: boolean isBluetoothA2dpOn()>','<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,android.net.sip.SipProfile,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>','<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,int,boolean)>','<com.android.server.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName)>','<android.webkit.WebViewCore: boolean jsUnload(java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: void onPause()>','<android.content.ISyncStatusObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.net.NetworkStatsRecorder: void recordSnapshotLocked(android.net.NetworkStats,java.util.Map,long)>','<android.opengl.GLLogWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>','<android.content.res.Resources$NotFoundException: void <init>()>','<android.graphics.drawable.ClipDrawable: void onBoundsChange(android.graphics.Rect)>','<com.android.internal.telephony.CallManager: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>','<com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>','<android.app.IBackupAgent$Stub$Proxy: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>','<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>','<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>','<android.filterfw.core.OutputPort: void clear()>','<android.app.Activity: void performRestoreInstanceState(android.os.Bundle)>','<android.widget.ProgressBar$RefreshData: void setPooled(boolean)>','<com.android.internal.R$styleable: void <init>()>','<android.view.HardwareRenderer$Gl20Renderer: void <init>(boolean)>','<android.net.wifi.WifiStateMachine$ConnectedState: void exit()>','<android.server.search.SearchManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>','<android.opengl.GLLogWrapper: void glTexGeniv(int,int,int[],int)>','<android.graphics.Insets: java.lang.String toString()>','<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>','<com.android.server.location.PassiveProvider: boolean supportsBearing()>','<android.filterfw.core.GLFrame: void releaseNativeAllocation()>','<android.app.ContextImpl: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>','<com.android.server.sip.SipHelper: void sendInviteAck(javax.sip.ResponseEvent,javax.sip.Dialog)>','<android.content.ContentProvider: void setReadPermission(java.lang.String)>','<android.content.pm.IPackageDeleteObserver$Stub$Proxy: void packageDeleted(java.lang.String,int)>','<android.database.sqlite.SQLiteSession: void <init>(android.database.sqlite.SQLiteConnectionPool)>','<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>','<android.database.sqlite.SQLiteClosable: void close()>','<com.android.server.ShutdownActivity$1: void <init>(com.android.server.ShutdownActivity)>','<android.renderscript.RenderScript: void nScriptInvoke(int,int)>','<com.android.internal.telephony.cat.Duration$TimeUnit: int value()>','<android.app.ActivityThread$ApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>','<android.webkit.CallbackProxy$JsResultReceiver: void <init>(android.webkit.CallbackProxy,android.webkit.CallbackProxy$1)>','<android.view.animation.Animation: void scaleCurrentDuration(float)>','<android.graphics.Point: void offset(int,int)>','<com.android.internal.telephony.DataConnectionTracker: int apnTypeToId(java.lang.String)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long)>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: long getItemId(int)>','<com.android.server.am.ActivityStack: void validateAppTokensLocked()>','<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>','<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>','<android.opengl.GLLogWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>','<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: void <init>()>','<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int presentationFromCLIP(int)>','<com.android.server.EventLogTags: void writeWatchdogMeminfo(int,int,int,int,int,int,int,int,int,int,int)>','<android.database.DatabaseUtils$InsertHelper: long insert(android.content.ContentValues)>','<android.net.RouteInfo: int describeContents()>','<android.util.XmlPullAttributes: int getStyleAttribute()>','<com.android.internal.telephony.PhoneBase: void notifyCallForwardingIndicator()>','<android.webkit.WebViewClassic: int getTitleHeight()>','<android.provider.ContactsContract$CommonDataKinds$Email: int getTypeLabelResource(int)>','<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>','<android.view.Choreographer: void doFrame(long,int)>','<android.server.BluetoothPanProfileHandler$1: void <init>(android.server.BluetoothPanProfileHandler)>','<com.android.internal.telephony.BaseCommands: void unregisterForIccStatusChanged(android.os.Handler)>','<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>','<android.view.ViewGroup: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>','<android.net.INetworkPolicyListener$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.view.menu.MenuPopupHelper: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>','<android.graphics.RectF: void printShortString(java.io.PrintWriter)>','<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>','<android.app.INotificationManager$Stub$Proxy: boolean areNotificationsEnabledForPackage(java.lang.String)>','<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,com.android.server.am.ActivityRecord,android.os.Bundle)>','<android.accessibilityservice.UiTestAutomationBridge: java.util.List findAccessibilityNodeInfosByTextInActiveWindow(java.lang.String)>','<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>','<android.accounts.AccountsException: void <init>()>','<android.content.ClipDescription: void validate()>','<android.webkit.WebViewClassic$PrivateHandler: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>','<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties access$202(android.bluetooth.BluetoothTetheringDataTracker,android.net.LinkProperties)>','<com.android.internal.telephony.IWapPushManager$Stub: void <init>()>','<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>','<android.server.BluetoothService: void runBluetooth()>','<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>','<com.android.server.am.ProcessRecord: java.lang.String toShortString()>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$5100(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.hardware.usb.UsbEndpoint: int getDirection()>','<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>','<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>','<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>','<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>','<android.hardware.Camera: android.hardware.Camera$PictureCallback access$100(android.hardware.Camera)>','<android.accessibilityservice.UiTestAutomationBridge: boolean performAccessibilityActionInActiveWindow(long,int,android.os.Bundle)>','<com.android.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context)>','<android.view.WindowOrientationListener: boolean canDetectOrientation()>','<android.media.MediaPlayer$TrackInfo: void <init>(android.os.Parcel)>','<android.net.MobileDataStateTracker$MdstHandler: void <init>(android.os.Looper,android.net.MobileDataStateTracker)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteAudioTurnedOffLocked()>','<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>','<com.android.internal.widget.ScrollingTabContainerView: void animateToTab(int)>','<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.opengl.GLUtils: void <clinit>()>','<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()>','<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)>','<android.view.AbsSavedState: void <init>(android.os.Parcelable)>','<com.android.server.NotificationManagerService: void cancelNotificationWithTag(java.lang.String,java.lang.String,int)>','<android.view.ViewConfiguration: int getJumpTapTimeout()>','<android.net.http.Headers: java.util.ArrayList getSetCookie()>','<android.app.admin.DevicePolicyManager: void <clinit>()>','<android.webkit.ViewManager: void postResetStateAll()>','<com.android.vcard.VCardParser_V40: void addInterpreter(com.android.vcard.VCardInterpreter)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendPostals(java.util.List)>','<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>','<com.android.internal.content.PackageMonitor: boolean didSomePackagesChange()>','<com.android.server.NotificationManagerService$1: void onClearAll()>','<android.filterfw.core.SerializedFrame$DirectByteInputStream: void <init>(android.filterfw.core.SerializedFrame,byte[],int)>','<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>','<android.view.ViewGroup$ChildListForAccessibility: void recycle()>','<android.bluetooth.BluetoothDeviceProfileState: void cancelCommand(int)>','<android.os.TokenWatcher$1: void run()>','<android.text.TextLine: android.text.TextLine obtain()>','<android.widget.AutoCompleteTextView$PopupDataSetObserver$1: void <init>(android.widget.AutoCompleteTextView$PopupDataSetObserver)>','<android.server.BluetoothService: void updateRemoteDevicePropertiesCache(java.lang.String)>','<android.app.WallpaperManager: void setResource(int)>','<android.net.wifi.WifiStateMachine: void access$14800(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.webkit.WebViewInputDispatcher: boolean postPointerEvent(android.view.MotionEvent,int,int,float)>','<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>','<android.webkit.WebView: void saveWebArchive(java.lang.String)>','<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord access$702(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$NotificationRecord)>','<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)>','<android.os.Parcel: android.os.Parcel obtain(int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void answerRingingCall()>','<com.android.internal.os.BatteryStatsImpl$Uid: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>','<android.widget.AdapterViewAnimator: void setSelection(int)>','<android.filterpacks.videosink.MediaEncoderFilter: void setupPorts()>','<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>','<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>','<com.android.internal.logging.AndroidHandler: void <clinit>()>','<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>','<com.android.internal.view.IInputConnectionWrapper: void performPrivateCommand(java.lang.String,android.os.Bundle)>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(android.animation.Animator)>','<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>','<android.webkit.ClientCertRequestHandler$4: void <init>(android.webkit.ClientCertRequestHandler)>','<android.net.sip.SimpleSessionDescription$Media: int[] getRtpPayloadTypes()>','<android.graphics.Paint$Style: void <clinit>()>','<com.android.server.input.InputManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>','<android.os.UEventObserver$UEventThread: void <init>()>','<android.content.ContentResolver: android.content.IContentService getContentService()>','<android.os.Environment: java.io.File getRootDirectory()>','<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>','<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)>','<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>','<com.android.server.location.LocationProviderProxy: boolean hasMonetaryCost()>','<android.webkit.ViewManager: android.webkit.WebViewClassic access$200(android.webkit.ViewManager)>','<android.net.http.Headers: int getConnectionType()>','<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>','<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>','<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>','<android.widget.Editor: android.widget.TextView access$600(android.widget.Editor)>','<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.internal.database.SortCursor: boolean isNull(int)>','<android.view.GLES20Canvas: int getStencilSize()>','<android.widget.ZoomButtonsController$1: void <init>(android.widget.ZoomButtonsController)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedInputMethod(java.lang.String)>','<android.app.IBackupAgent$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.View$ListenerInfo: android.view.View$OnKeyListener access$202(android.view.View$ListenerInfo,android.view.View$OnKeyListener)>','<com.android.internal.policy.impl.FaceUnlock: void handleHideFaceUnlockView()>','<android.text.SpanSet: boolean hasSpansIntersecting(int,int)>','<android.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)>','<android.security.KeyChain$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState access$5000(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status[] values()>','<android.view.View$12: void setValue(java.lang.Object,float)>','<com.android.vcard.VCardParserImpl_V21: void parse(java.io.InputStream)>','<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: boolean processMessage(android.os.Message)>','<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>','<com.android.server.WifiService: void reconnect()>','<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>','<android.graphics.drawable.LayerDrawable$LayerState: boolean canConstantState()>','<com.android.internal.telephony.cdma.EriManager: void loadEriFile()>','<android.net.NetworkTemplate: java.lang.String toString()>','<com.android.internal.widget.LockPatternView: void setPattern(com.android.internal.widget.LockPatternView$DisplayMode,java.util.List)>','<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()>','<android.telephony.SmsCbLocation: int getCid()>','<com.android.internal.telephony.RestrictedState: boolean isCsNormalRestricted()>','<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.TextView access$300(com.android.internal.policy.impl.AccountUnlockScreen)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.graphics.drawable.Drawable getIcon()>','<android.hardware.usb.IUsbManager$Stub$Proxy: android.os.ParcelFileDescriptor openDevice(java.lang.String)>','<android.view.GLES20Layer$Finalizer: void finalize()>','<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>','<android.webkit.WebSettings: void setUseWideViewPort(boolean)>','<com.android.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onError(int,java.lang.String)>','<android.security.KeyStore: byte[] getPubkey(java.lang.String)>','<android.os.Debug: void resetGlobalExternalAllocCount()>','<com.android.internal.policy.impl.GlobalActions$2: boolean showDuringKeyguard()>','<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>','<android.widget.CompoundButton: void <clinit>()>','<android.animation.Keyframe: java.lang.Class getType()>','<android.webkit.WebViewClassic: void access$7100(android.webkit.WebViewClassic)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: java.lang.String getFormat()>','<com.android.internal.telephony.DataCallState$SetupResult: java.lang.String toString()>','<android.filterfw.core.GLFrame: void onFrameFetch()>','<com.android.vcard.VCardComposer: boolean init()>','<android.graphics.drawable.Drawable: boolean isVisible()>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void onGrabbedStateChange(android.view.View,int)>','<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>','<com.android.server.PowerManagerService$13: void onAccuracyChanged(android.hardware.Sensor,int)>','<com.android.internal.telephony.ApnSetting: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String,java.lang.String,boolean,int)>','<android.view.VolumePanel$2: void <init>(android.view.VolumePanel,android.content.Context,int)>','<android.provider.SyncStateContract$Helpers: void <clinit>()>','<com.android.internal.telephony.RIL: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>','<android.app.ActivityOptions: java.lang.String getPackageName()>','<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>','<android.webkit.WebView: void setBackgroundColor(int)>','<com.android.internal.view.menu.MenuItemImpl: char getShortcut()>','<com.android.server.wm.InputMonitor: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>','<android.text.style.BackgroundColorSpan: void <init>(int)>','<android.hardware.Camera$Parameters: boolean getAutoExposureLock()>','<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>','<android.webkit.CallbackProxy$UploadFileMessageData: void <init>(android.webkit.CallbackProxy$UploadFile,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowStateAnimator: void cancelExitAnimationForNextAnimationLocked()>','<android.webkit.WebViewClassic: float getDefaultZoomScale()>','<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>','<android.widget.TextView: void setPadding(int,int,int,int)>','<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater$Factory2)>','<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean handlePinMmi(java.lang.String)>','<android.filterpacks.videosrc.MediaSource: boolean access$802(android.filterpacks.videosrc.MediaSource,boolean)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setNotificationVisibility(int)>','<android.app.ContextImpl: android.content.Context getOuterContext()>','<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()>','<android.view.textservice.SpellCheckerSession$InternalListener: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>','<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,int[],int)>','<android.renderscript.RenderScript: void nContextBindProgramRaster(int)>','<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>','<android.widget.HeaderViewListAdapter: int getHeadersCount()>','<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.widget.MediaController: void show(int)>','<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>','<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()>','<android.telephony.CellInfo: java.lang.String toString()>','<com.android.internal.telephony.DataConnection: int getRetryTimer()>','<android.util.Xml$XmlSerializerFactory: void <clinit>()>','<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)>','<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.media.AudioManager: int getLastAudibleMasterVolume()>','<android.net.wifi.WifiStateMachine: boolean access$7802(android.net.wifi.WifiStateMachine,boolean)>','<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()>','<com.android.internal.policy.impl.AccountUnlockScreen: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<com.android.server.location.GpsLocationProvider: int access$1910(com.android.server.location.GpsLocationProvider)>','<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)>','<android.widget.SeekBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.MotionEvent: float getHistoricalOrientation(int,int)>','<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.content.pm.IPackageStatsObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>','<android.app.BackStackRecord: android.app.FragmentTransaction attach(android.app.Fragment)>','<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>','<com.android.internal.widget.PointerLocationView: void onAttachedToWindow()>','<android.database.sqlite.SQLiteCursor: void close()>','<android.app.Instrumentation$SyncRunnable: void <init>(java.lang.Runnable)>','<android.os.UserId: boolean isSameUser(int,int)>','<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent(android.view.MotionEvent)>','<android.graphics.drawable.ColorDrawable: int getColor()>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)>','<com.android.internal.telephony.BaseCommands: void registerForOn(android.os.Handler,int,java.lang.Object)>','<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>','<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeConstrainedEncoding(int)>','<android.app.INotificationManager$Stub$Proxy: void setNotificationsEnabledForPackage(java.lang.String,boolean)>','<android.content.pm.PackageParser$Package: void setPackageName(java.lang.String)>','<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>','<android.location.Location: java.lang.String toString()>','<android.widget.TextView: void setHeight(int)>','<android.speech.tts.TextToSpeech$9: void <init>(android.speech.tts.TextToSpeech)>','<android.server.BluetoothDeviceProperties: void <init>(android.server.BluetoothService)>','<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>','<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsTag(int)>','<android.view.Surface$1: android.view.Surface[] newArray(int)>','<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>','<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>','<android.net.wifi.p2p.WifiP2pService: android.os.Messenger access$9802(android.net.wifi.p2p.WifiP2pService,android.os.Messenger)>','<com.android.internal.telephony.BaseCommands: void unSetOnSuppServiceNotification(android.os.Handler)>','<android.webkit.WebViewClassic$8: void onPostExecute(java.lang.Object)>','<android.view.ViewGroup$3: void <init>(android.view.ViewGroup)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>','<android.renderscript.Element: android.renderscript.Element U16_3(android.renderscript.RenderScript)>','<com.android.internal.util.JournaledFile: void rollback()>','<android.animation.ObjectAnimator: void setIntValues(int[])>','<com.android.internal.telephony.gsm.GSMPhone: void disableLocationUpdates()>','<com.android.internal.policy.impl.GlobalActions$3: void <init>(com.android.internal.policy.impl.GlobalActions,int,java.lang.CharSequence,android.content.pm.UserInfo)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)>','<android.accounts.IAccountManagerResponse$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.InputDevice$MotionRange: float access$400(android.view.InputDevice$MotionRange)>','<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageSet()>','<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup)>','<com.android.server.Watchdog$RebootReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>','<android.telephony.SignalStrength: int getLteAsuLevel()>','<android.webkit.HTML5VideoViewProxy: void access$900(android.webkit.HTML5VideoViewProxy,int)>','<android.accounts.AccountManagerService$TestFeaturesSession: void onResult(android.os.Bundle)>','<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationDone(android.net.sip.ISipSession,int)>','<com.android.internal.telephony.cdma.CdmaConnection: long getCreateTime()>','<android.os.BatteryStats$HistoryItem: void <init>(long,android.os.Parcel)>','<com.android.internal.os.LoggingPrintStream: void flush()>','<android.graphics.Matrix$1: boolean preSkew(float,float,float,float)>','<android.app.Dialog: android.view.View onCreatePanelView(int)>','<android.widget.AutoCompleteTextView: void setDropDownDismissedOnCompletion(boolean)>','<android.app.SearchManager: void <init>(android.content.Context,android.os.Handler)>','<com.android.internal.telephony.CallManager: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>','<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>','<android.content.res.AssetManager$AssetInputStream: boolean markSupported()>','<android.view.WindowManager$LayoutParams$1: android.view.WindowManager$LayoutParams createFromParcel(android.os.Parcel)>','<android.view.MenuInflater$MenuState: void resetGroup()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getRadius()>','<com.android.internal.view.IInputConnectionWrapper: void commitText(java.lang.CharSequence,int)>','<com.android.internal.telephony.Phone$State: com.android.internal.telephony.Phone$State valueOf(java.lang.String)>','<android.net.wifi.WifiConfiguration$Status: void <clinit>()>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void exitFullScreenVideo(android.webkit.HTML5VideoViewProxy,android.webkit.WebViewClassic)>','<android.graphics.Point$1: android.graphics.Point[] newArray(int)>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.server.BatteryService$1: void <init>(com.android.server.BatteryService)>','<android.bluetooth.BluetoothHeadset: android.bluetooth.IBluetoothHeadset access$002(android.bluetooth.BluetoothHeadset,android.bluetooth.IBluetoothHeadset)>','<android.content.SyncManager$4: void <init>(android.content.SyncManager)>','<android.view.ViewRootImpl$RunQueue$HandlerAction: void <init>(android.view.ViewRootImpl$1)>','<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>','<android.view.ViewGroup$MarginLayoutParams: void onResolveLayoutDirection(int)>','<com.android.internal.widget.multiwaveview.Ease$Quart$1: float getInterpolation(float)>','<android.view.ViewRootImpl$RunQueue: void <init>()>','<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>','<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>','<android.database.sqlite.SQLiteDebug$DbStats: void <init>(java.lang.String,long,long,int,int,int,int)>','<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: boolean showBeforeProvisioning()>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>','<android.accounts.AccountAuthenticatorCache: void <clinit>()>','<android.view.textservice.SuggestionsInfo$1: void <init>()>','<android.webkit.WebBackForwardList: void setClearPending()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$1: void <init>(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<com.android.internal.location.DummyLocationProvider: boolean requiresCell()>','<android.widget.ListView: android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int)>','<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>','<com.android.server.wm.ViewServer$ViewServerWorker: void windowsChanged()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1: boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<android.server.BluetoothService: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats)>','<android.widget.ListPopupWindow: void setVerticalOffset(int)>','<com.android.server.LocationManagerService: java.lang.String access$2300(com.android.server.LocationManagerService)>','<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>','<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>','<android.animation.AnimatorSet$Builder: void <init>(android.animation.AnimatorSet,android.animation.Animator)>','<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>','<android.media.MediaPlayer: void release()>','<com.android.server.WifiService: void access$1100(com.android.server.WifiService)>','<com.android.internal.app.AlertController$RecycleListView: boolean recycleOnMeasure()>','<android.animation.ValueAnimator$AnimationHandler: java.util.ArrayList access$500(android.animation.ValueAnimator$AnimationHandler)>','<android.os.Debug: long threadCpuTimeNanos()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataStateChanged(android.os.AsyncResult)>','<android.view.SurfaceView$4: android.view.Surface getSurface()>','<com.android.internal.os.BatteryStatsImpl$Timer: void unplug(long,long)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupAll()>','<android.net.NetworkInfo$1: android.net.NetworkInfo[] newArray(int)>','<com.android.internal.widget.ActionBarView: android.view.View access$1100(com.android.internal.widget.ActionBarView)>','<android.widget.Scroller: void setFriction(float)>','<android.net.http.Headers: java.lang.String getPragma()>','<android.bluetooth.IBluetooth$Stub: android.os.IBinder asBinder()>','<android.app.ContextImpl$35: java.lang.Object createService(android.app.ContextImpl)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>','<android.webkit.WebViewClassic: int access$102(android.webkit.WebViewClassic,int)>','<android.view.accessibility.AccessibilityEvent: void <clinit>()>','<android.content.ClipData$Item: java.lang.CharSequence getText()>','<android.content.IntentFilter$AuthorityEntry: void writeToParcel(android.os.Parcel)>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>','<android.location.GpsStatus: void <init>()>','<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>','<android.net.wifi.WifiNative: java.lang.String status()>','<android.widget.Filter$FilterResults: void <init>()>','<android.accounts.AccountManagerService: java.util.HashMap readUserDataForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>','<com.android.server.IntentResolver$IteratorWrapper: android.content.IntentFilter next()>','<android.media.AudioService: android.media.AudioService$ForceControlStreamClient access$902(android.media.AudioService,android.media.AudioService$ForceControlStreamClient)>','<android.server.BluetoothAdapterStateMachine: void access$5800(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.view.Choreographer: void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long)>','<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab,int,boolean)>','<android.media.RingtoneManager: void <clinit>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.graphics.Typeface: boolean isBold()>','<android.app.Activity: android.app.ActionBar getActionBar()>','<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)>','<android.net.wifi.WifiConfigStore$1: void <clinit>()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean startDiscovery()>','<android.content.SyncOperation: int compareTo(java.lang.Object)>','<android.provider.Browser: void <init>()>','<android.inputmethodservice.InputMethodService: void onUnbindInput()>','<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionScaleUp(int,int,int,int)>','<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.ContentProviderProxy: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<android.widget.Switch: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.text.DynamicLayout: int[] getBlockIndices()>','<android.app.FragmentManagerImpl: void dispatchLowMemory()>','<com.android.server.MountService: void shutdown(android.os.storage.IMountShutdownObserver)>','<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>','<android.net.sip.SipSession: void <init>(android.net.sip.ISipSession,android.net.sip.SipSession$Listener)>','<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>','<android.graphics.drawable.DrawableContainer: void <init>()>','<android.net.InterfaceConfiguration$1: android.net.InterfaceConfiguration createFromParcel(android.os.Parcel)>','<android.widget.ListView: void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)>','<android.webkit.WebViewClassic$8: void <init>(android.webkit.WebViewClassic)>','<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>','<android.renderscript.RenderScript: java.lang.String nGetName(int)>','<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>','<com.android.server.pm.PackageManagerService: boolean isSafeMode()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$502(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.database.sqlite.SQLiteConnection: void collectDbStats(java.util.ArrayList)>','<android.widget.TextView: void setExtracting(android.view.inputmethod.ExtractedTextRequest)>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: java.lang.String getEfName()>','<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: long getAwakeTimeBattery()>','<android.test.IsolatedContext$MockAccountManager: android.accounts.Account[] getAccounts()>','<com.android.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>','<android.view.View: boolean getFitsSystemWindows()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void <init>()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textContains(java.lang.String)>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk$2: void run()>','<android.hardware.SerialManager: void <init>(android.content.Context,android.hardware.ISerialManager)>','<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>','<android.webkit.CallbackProxy$9: void onClick(android.content.DialogInterface,int)>','<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>','<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>','<android.graphics.ColorMatrix: void setYUV2RGB()>','<com.android.internal.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)>','<android.filterfw.core.FilterPort: boolean isBlocking()>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>','<android.webkit.WebViewCore$EventHub: boolean access$1200(android.webkit.WebViewCore$EventHub)>','<com.android.internal.telephony.WspTypeDecoder: void <clinit>()>','<com.android.internal.view.IInputConnectionWrapper: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,android.net.wifi.p2p.nsd.WifiP2pServiceRequest)>','<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>','<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>','<com.android.server.net.NetworkStatsService: void access$800(com.android.server.net.NetworkStatsService)>','<com.android.internal.widget.SlidingTab$Slider: void updateDrawableStates()>','<android.os.storage.StorageVolume$1: android.os.storage.StorageVolume createFromParcel(android.os.Parcel)>','<android.widget.LinearLayout: int getShowDividers()>','<android.view.View$3: boolean apply(java.lang.Object)>','<android.view.View: void invalidate()>','<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<android.webkit.WebSettingsClassic: void setSupportMultipleWindows(boolean)>','<android.net.NetworkStats$1: android.net.NetworkStats[] newArray(int)>','<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,int,int)>','<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isSidsAllZeros()>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String)>','<com.android.server.PowerManagerService: com.android.server.BatteryService access$700(com.android.server.PowerManagerService)>','<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>','<android.webkit.SearchBox$SearchBoxListener: void onCancelComplete(boolean)>','<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub$OnInflateListener)>','<com.android.internal.telephony.cat.LanguageResponseData: void <init>(java.lang.String)>','<android.renderscript.Element: int getSubElementOffsetBytes(int)>','<android.telephony.ServiceState: int getCssIndicator()>','<android.graphics.RectF: void <clinit>()>','<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>','<android.view.ContextThemeWrapper: void setTheme(int)>','<com.android.server.NotificationManagerService$ToastRecord: void <init>(int,java.lang.String,android.app.ITransientNotification,int)>','<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>','<android.widget.ListPopupWindow: void setSelection(int)>','<android.animation.LayoutTransition$4: void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener)>','<android.view.accessibility.AccessibilityNodeInfoCache: void add(android.view.accessibility.AccessibilityNodeInfo)>','<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>','<android.text.method.CharacterPickerDialog$OptionsAdapter: void <init>(android.text.method.CharacterPickerDialog,android.content.Context)>','<android.media.AudioService$2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.bluetooth.BluetoothDeviceProfileState: void access$2000(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.FragmentManagerState$1: android.app.FragmentManagerState[] newArray(int)>','<com.android.internal.telephony.PhoneProxy: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2: gov.nist.javax.sip.clientauthutils.UserCredentials getCredentials(javax.sip.ClientTransaction,java.lang.String)>','<android.nfc.tech.NfcB: byte[] getApplicationData()>','<android.text.HtmlToSpannedConverter: void startPrefixMapping(java.lang.String,java.lang.String)>','<android.content.pm.PackageParser$Service: java.lang.String toString()>','<android.net.DhcpInfoInternal: boolean hasMeteredHint()>','<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>','<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.lang.String toString()>','<android.text.method.ArrowKeyMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>','<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.HTML5VideoFullScreen: boolean canSeekForward()>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void onServiceConnected(android.os.IBinder)>','<android.location.IGpsStatusProvider$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.os.Parcel: byte readByte()>','<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.os.Looper: java.lang.String toString()>','<com.android.server.am.ActivityManagerService$2$1: void run()>','<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>','<com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>','<android.view.KeyEvent: void <init>(android.view.KeyEvent)>','<com.android.internal.widget.TransportControlView: void onMeasure(int,int)>','<android.media.MediaFile$MediaFileType: void <init>(int,java.lang.String)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String)>','<com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>','<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnection getDataConnection()>','<android.renderscript.RenderScript: void nAllocationData1D(int,int,int,int,short[],int)>','<android.os.IMessenger$Stub: android.os.IBinder asBinder()>','<android.widget.TextView$Marquee: void handleMessage(android.os.Message)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>','<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>','<android.widget.FastScroller: void <init>(android.content.Context,android.widget.AbsListView)>','<android.widget.GridView: int getNumColumns()>','<android.graphics.Paint: android.graphics.Shader getShader()>','<com.android.internal.util.CharSequences: int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>','<android.content.pm.ApplicationInfo$1: android.content.pm.ApplicationInfo[] newArray(int)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>','<android.widget.RemoteViews$SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<com.android.internal.telephony.PhoneBase: void registerForNumberInfo(android.os.Handler,int,java.lang.Object)>','<android.app.ApplicationPackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>','<android.os.StrictMode$AndroidBlockGuardPolicy$1: void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList)>','<android.app.StatusBarManager: void <init>(android.content.Context)>','<com.android.internal.policy.impl.LockScreen$2: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>','<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)>','<android.os.INetworkManagementService$Stub$Proxy: void clearInterfaceAddresses(java.lang.String)>','<android.opengl.GLLogWrapper: void glMaterialx(int,int,int)>','<com.android.internal.telephony.cdma.SmsMessage: boolean isCphsMwiMessage()>','<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>','<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void <init>(android.widget.RemoteViewsAdapter,int)>','<com.android.internal.telephony.IccCardStatus: void <init>()>','<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>','<com.android.server.wm.ScreenRotationAnimation: boolean stepAnimationLocked(long)>','<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>','<com.android.internal.telephony.CallManager: void hangupForegroundResumeBackground(com.android.internal.telephony.Call)>','<android.nfc.NdefRecord: android.nfc.NdefRecord createApplicationRecord(java.lang.String)>','<android.content.pm.VerifierDeviceIdentity: boolean equals(java.lang.Object)>','<android.view.View: void jumpDrawablesToCurrentState()>','<android.os.MemoryFile$MemoryOutputStream: void write(int)>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>','<com.android.server.AppWidgetService: int[] getAppWidgetIds(com.android.server.AppWidgetService$Provider)>','<android.content.PeriodicSync: void <clinit>()>','<com.android.internal.telephony.PhoneProxy: void unsetOnEcbModeExitResponse(android.os.Handler)>','<android.content.BroadcastReceiver: java.lang.String getResultData()>','<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>','<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>','<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>','<com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult: void <init>(android.net.LinkProperties)>','<com.android.internal.util.ArrayUtils: int idealBooleanArraySize(int)>','<android.bluetooth.BluetoothPbap: boolean disconnect()>','<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)>','<com.android.server.am.ActivityManagerService$6: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.EventLogTags: void writeBackupStart(java.lang.String)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiInfo access$1300(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void logState(android.util.Printer,java.lang.String)>','<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfigurationLocked()>','<android.text.LoginFilter: void onStop()>','<android.widget.Editor$InsertionHandleView: void onHandleMoved()>','<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>','<android.inputmethodservice.KeyboardView$SwipeTracker: void clear()>','<android.util.Base64: void <clinit>()>','<com.android.server.LocationManagerService: java.util.ArrayList access$1800(com.android.server.LocationManagerService)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>','<android.view.GLES20Canvas: void flushCaches(int)>','<android.net.wifi.p2p.WifiP2pService: int access$5904()>','<com.android.internal.telephony.DataConnectionAc: void reqUpdateLinkPropertiesDataCallState(com.android.internal.telephony.DataCallState)>','<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>','<android.graphics.Matrix: void setSkew(float,float,float,float)>','<com.android.vcard.VCardComposer: void finalize()>','<android.net.wifi.WifiStateMachine: boolean access$900(android.net.wifi.WifiStateMachine)>','<android.net.wifi.WifiStateMachine$SoftApStoppingState: void enter()>','<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>','<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$3000(com.android.server.sip.SipSessionGroup$SipSessionImpl,int)>','<com.android.internal.util.AsyncService: int onStartCommand(android.content.Intent,int,int)>','<com.android.internal.telephony.DataConnection: void clearSettings()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.wm.BlackFrame$BlackSurface: void <init>(com.android.server.wm.BlackFrame,android.view.SurfaceSession,int,int,int,int,int)>','<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>','<android.view.MotionEvent: float getHistoricalY(int,int)>','<com.android.internal.telephony.Connection: java.lang.Object getUserData()>','<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>','<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>','<android.view.View: int getTopPaddingOffset()>','<com.android.server.PowerManagerService: void <init>()>','<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>','<android.app.IWallpaperManager$Stub$Proxy: void setDimensionHints(int,int)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void appPrivateCommand(java.lang.String,android.os.Bundle)>','<android.net.wifi.NetworkUpdateResult: boolean hasProxyChanged()>','<android.net.wifi.WifiNative: void setScanInterval(int)>','<android.bluetooth.BluetoothHeadset: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>','<android.inputmethodservice.ExtractEditLayout: boolean isActionModeStarted()>','<android.net.sip.SipErrorCode: java.lang.String toString(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String)>','<android.test.IsolatedContext$MockAccountManager$MockAccountManagerFuture: boolean isDone()>','<com.android.uiautomator.core.UiAutomatorBridge: void setOperationTime()>','<android.view.inputmethod.EditorInfo$1: android.view.inputmethod.EditorInfo[] newArray(int)>','<android.util.Xml$Encoding: android.util.Xml$Encoding[] values()>','<android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>','<android.media.AudioService: boolean access$3400(android.media.AudioService)>','<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>','<android.opengl.GLLogWrapper: void glPointParameterfv(int,float[],int)>','<com.android.server.LocationManagerService$Receiver: android.app.PendingIntent getPendingIntent()>','<android.graphics.Bitmap$2: void <clinit>()>','<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()>','<android.webkit.CallbackProxy: void onScaleChanged(float,float)>','<android.view.ViewGroup: void onViewAdded(android.view.View)>','<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>','<com.android.server.pm.PackageManagerService: void startCleaningPackages()>','<android.view.FocusFinder: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>','<android.webkit.WebViewCore: void sendMessageAtFrontOfQueue(int,java.lang.Object)>','<android.hardware.usb.UsbManager: void setMassStorageBackingFile(java.lang.String)>','<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>','<com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver: void <init>()>','<android.app.IActivityController$Stub$Proxy: boolean activityResuming(java.lang.String)>','<com.android.internal.location.DummyLocationProvider: void setRequiresCell(boolean)>','<android.database.sqlite.SQLiteDatabase: void addCustomFunction(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CustomFunction)>','<android.app.Activity: void setImmersive(boolean)>','<com.android.internal.telephony.PhoneProxy: boolean getMessageWaitingIndicator()>','<android.view.ViewRootImpl$2: void setType(int)>','<com.android.internal.statusbar.StatusBarIcon: void <clinit>()>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float access$000(com.android.internal.widget.multiwaveview.PointCloud$GlowManager)>','<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>','<com.android.internal.telephony.RIL: void access$000(com.android.internal.telephony.RIL,boolean)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean addPermissionAsync(android.content.pm.PermissionInfo)>','<android.content.pm.IPackageMoveObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>','<android.database.DatabaseUtils$InsertHelper: void prepareForReplace()>','<android.os.Debug: void startAllocCounting()>','<android.text.method.ArrowKeyMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>','<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)>','<android.view.View: void access$2100(android.view.View,int)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>','<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>','<android.net.ConnectivityManager: boolean isTetheringSupported()>','<android.net.WebAddress: int getPort()>','<android.app.LoaderManagerImpl: void updateActivity(android.app.Activity)>','<android.view.Window: android.view.CompatibilityInfoHolder getCompatInfo(android.content.Context)>','<android.widget.Editor$HandleView: boolean isDragging()>','<android.app.ActivityManager$RunningAppProcessInfo: void <init>()>','<android.os.SystemProperties: int getInt(java.lang.String,int)>','<com.android.internal.telephony.SmsHeader: java.lang.String toString()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.internal.telephony.RIL: void setCdmaRoamingPreference(int,android.os.Message)>','<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>','<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>','<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>','<android.net.Uri$Part: android.net.Uri$Part readFrom(android.os.Parcel)>','<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>','<android.os.INetworkManagementService$Stub$Proxy: void removeSecondaryRoute(java.lang.String,android.net.RouteInfo)>','<android.view.Choreographer: void <clinit>()>','<android.widget.SearchView: void onWindowFocusChanged(boolean)>','<android.view.accessibility.AccessibilityRecord: int getScrollY()>','<android.bluetooth.BluetoothDeviceProfileState: void access$3800(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.media.AudioManager: boolean isStreamMute(int)>','<android.content.SyncStorageEngine: void doDatabaseCleanup(android.accounts.Account[],int)>','<android.database.CursorWindow: void <clinit>()>','<android.app.ApplicationPackageManager: boolean removeUser(int)>','<android.util.SparseLongArray: void <init>()>','<com.android.server.pm.PackageVerificationState: boolean setVerifierResponse(int,int)>','<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()>','<com.android.server.pm.PackageManagerService$InstallParams: void handleServiceError()>','<android.view.IWindow$Stub$Proxy: void dispatchScreenState(boolean)>','<android.server.BluetoothService: void onHealthDeviceChannelConnectionError(int,int)>','<android.provider.Browser$BookmarkColumns: void <init>()>','<com.android.internal.telephony.cdma.CDMAPhone: void prepareEri()>','<com.android.server.StatusBarManagerService$3: void <init>(com.android.server.StatusBarManagerService,android.os.IBinder,int,int)>','<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>','<android.renderscript.RenderScript: void nAllocationRead(int,int[])>','<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)>','<com.android.internal.telephony.GsmAlphabet: int[] access$100()>','<com.android.server.ConnectivityService: void access$1700(com.android.server.ConnectivityService,int,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean)>','<android.media.IRemoteControlDisplay$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.NetworkInfo: boolean isAvailable()>','<android.widget.LinearLayout: void layoutHorizontal()>','<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>','<android.nfc.FormatException: void <init>()>','<com.android.internal.telephony.IccCard$1: void <init>(com.android.internal.telephony.IccCard)>','<android.content.res.StringBlock$StyleIDs: int access$400(android.content.res.StringBlock$StyleIDs)>','<android.net.wifi.WifiStateMachine: android.net.NetworkInfo access$5700(android.net.wifi.WifiStateMachine)>','<android.media.IAudioService$Stub$Proxy: int getMasterStreamType()>','<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.content.res.CompatibilityInfo$Translator: void translatePointInScreenToAppWindow(android.graphics.PointF)>','<android.widget.AbsListView$FlingRunnable: void run()>','<android.net.sip.SipAudioCall$1: void onError(android.net.sip.SipSession,int,java.lang.String)>','<android.webkit.WebViewClassic: boolean savePicture(android.os.Bundle,java.io.File)>','<android.media.IAudioService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: void registerForLineControlInfo(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: byte[] access$002(com.android.internal.telephony.cdma.CdmaLteUiccRecords,byte[])>','<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent)>','<android.preference.Preference: boolean callChangeListener(java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void removeReferences()>','<com.android.server.PowerManagerService: int access$5500(com.android.server.PowerManagerService)>','<android.view.animation.LayoutAnimationController: void setOrder(int)>','<android.widget.OverScroller$SplineOverScroller: void extendDuration(int)>','<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>','<android.net.http.Headers: java.lang.String getLocation()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: void <init>(com.android.internal.telephony.ims.IsimUiccRecords,com.android.internal.telephony.ims.IsimUiccRecords$1)>','<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$100(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession$EventCallback)>','<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>','<android.widget.ListView: int getDividerHeight()>','<com.android.server.am.ActivityManagerService$ServiceMap: void <init>()>','<android.net.LocalSocketImpl: java.lang.Object access$200(android.net.LocalSocketImpl)>','<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.wm.WindowManagerService: void logSurface(android.view.Surface,java.lang.String,java.lang.String,java.lang.RuntimeException)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.WifiStateMachine: android.net.DhcpInfo syncGetDhcpInfo()>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogEnabledState: boolean processMessage(android.os.Message)>','<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.speech.tts.TextToSpeech: void access$1000(android.speech.tts.TextToSpeech,int)>','<android.hardware.Camera: void <init>(int)>','<com.android.internal.telephony.PhoneProxy: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>','<android.util.SparseLongArray: void put(int,long)>','<android.webkit.WebViewClassic: void onPinchToZoomAnimationEnd(android.view.ScaleGestureDetector)>','<android.os.BatteryStats$BitDescription: void <init>(int,int,java.lang.String,java.lang.String[])>','<android.content.SyncResult: int describeContents()>','<android.content.SyncManager$SyncAlarmIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.view.ViewRootImpl: void focusableViewAvailable(android.view.View)>','<com.android.server.EventLogTags: void writeBootProgressPmsSystemScanStart(long)>','<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord[])>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeMotionWhenKeyguardShowingTq()>','<android.widget.TextView$CharWrapper: char[] access$002(android.widget.TextView$CharWrapper,char[])>','<android.database.CursorWrapper: int getType(int)>','<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteOutOfBandData(java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean setInstallLocation(int)>','<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>','<com.android.internal.widget.LockPatternView$SavedState: int getDisplayMode()>','<android.view.Gravity: int getAbsoluteGravity(int,int)>','<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageBO(int,boolean,java.lang.Object)>','<android.security.IKeyChainService$Stub$Proxy: android.os.IBinder asBinder()>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.String toString()>','<android.view.GLES20Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void setSmscAddress(java.lang.String,android.os.Message)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)>','<android.view.View$PerformClick: void <init>(android.view.View,android.view.View$1)>','<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>','<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.net.wifi.p2p.WifiP2pService: boolean access$5202(android.net.wifi.p2p.WifiP2pService,boolean)>','<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>','<android.inputmethodservice.IInputMethodSessionWrapper: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>','<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.app.UiModeManager: void disableCarMode(int)>','<android.server.BluetoothService: java.lang.String[] getKnownDevices()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String normalize(java.lang.String)>','<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$6602(android.bluetooth.BluetoothDeviceProfileState,boolean)>','<android.widget.MediaController$3: void handleMessage(android.os.Message)>','<android.database.sqlite.SQLiteConnection: void <clinit>()>','<android.graphics.Picture$RecordingCanvas: void setBitmap(android.graphics.Bitmap)>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastEnabledLocked()>','<android.webkit.WebSettingsClassic: void setMaximumDecodedImageSize(long)>','<android.database.AbstractWindowedCursor: void clearOrCreateWindow(java.lang.String)>','<android.widget.ListPopupWindow: void setInputMethodMode(int)>','<android.view.ViewGroup: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>','<android.view.ViewRootImpl: void setLocalDragState(java.lang.Object)>','<android.widget.SearchView$7: void <init>(android.widget.SearchView)>','<com.android.internal.os.AndroidPrintStream: void <init>(int,java.lang.String)>','<com.android.internal.telephony.SmsStorageMonitor: void dispose()>','<com.android.internal.policy.impl.PhoneWindowManager: void setAttachedWindowFrames(android.view.WindowManagerPolicy$WindowState,int,int,android.view.WindowManagerPolicy$WindowState,boolean,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<android.widget.AbsListView$RecycleBin: void scrapActiveViews()>','<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>','<android.text.method.TimeKeyListener: char[] getAcceptedChars()>','<android.server.BluetoothService: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>','<android.filterfw.core.SerializedFrame: void setFloats(float[])>','<android.os.IHardwareService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.graphics.drawable.AnimationDrawable$AnimationState: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources)>','<android.content.ContentResolver: java.util.List getCurrentSyncs()>','<android.view.View: void invalidate(android.graphics.Rect)>','<android.server.BluetoothService: boolean setDiscoverableTimeout(int)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: android.os.IBinder asBinder()>','<android.media.MediaPlayer: void finalize()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteName(java.lang.String)>','<android.widget.ZoomControls: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.os.RemoteException: void <init>()>','<android.bluetooth.BluetoothServerSocket: int getChannel()>','<android.preference.Preference: android.content.Context getContext()>','<android.app.ActivityManager: java.util.Map getAllPackageLaunchCounts()>','<android.app.WallpaperManager$FastBitmapDrawable: void setBounds(int,int,int,int)>','<com.android.internal.telephony.sip.SipCallBase: java.util.List getConnections()>','<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>','<com.android.server.pm.PackageManagerService: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int)>','<android.widget.Editor$ErrorPopup: void update(int,int,int,int,boolean)>','<android.nfc.NfcAdapter: void enforceResumed(android.app.Activity)>','<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder$DeathRecipient)>','<com.android.internal.telephony.sip.SipCommandInterface: void queryCLIP(android.os.Message)>','<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)>','<android.content.Intent: java.lang.Object clone()>','<com.android.internal.telephony.cat.LanguageResponseData: void format(java.io.ByteArrayOutputStream)>','<com.android.internal.policy.impl.PhoneWindowManager$8: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.view.HardwareRenderer$Gl20Renderer$Gl20RendererEglContext: void onTerminate(javax.microedition.khronos.egl.EGLContext)>','<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)>','<android.webkit.AutoCompletePopup: void onDismiss()>','<android.view.IWindowManager$Stub$Proxy: float getAnimationScale(int)>','<android.text.method.BaseMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>','<android.net.EthernetDataTracker: android.net.NetworkInfo access$200(android.net.EthernetDataTracker)>','<android.net.http.Headers: void setCacheControl(java.lang.String)>','<android.webkit.WebSettingsClassic: java.lang.String getAcceptLanguage()>','<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean goHome()>','<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>','<android.media.MediaRouter$RouteInfo: java.lang.String toString()>','<com.android.server.TelephonyRegistry: void notifyMessageWaitingChanged(boolean)>','<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<com.android.server.TelephonyRegistry$Record: void <init>(com.android.server.TelephonyRegistry$1)>','<android.app.UiModeManager: int getNightMode()>','<com.android.server.NotificationManagerService$1: void <init>(com.android.server.NotificationManagerService)>','<android.net.wifi.WifiMonitor: void startMonitoring()>','<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>','<android.webkit.WebViewClassic: void access$1900(android.webkit.WebViewClassic,android.graphics.Picture,android.os.Bundle)>','<android.webkit.WebViewClassic: android.webkit.WebViewClassic fromWebView(android.webkit.WebView)>','<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getAddress()>','<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int,java.lang.Object)>','<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>','<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>','<android.webkit.CertTool: void <clinit>()>','<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getBandwidthTypes()>','<com.android.internal.telephony.test.ModelInterpreter: void resumeResponses()>','<android.view.accessibility.AccessibilityRecord: int getWindowId()>','<com.android.server.am.BatteryStatsService: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>','<android.app.Activity: void setTitleColor(int)>','<android.net.Uri: java.lang.String toSafeString()>','<android.os.Bundle: int getInt(java.lang.String)>','<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>','<com.android.server.am.ActivityManagerService: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>','<com.android.i18n.phonenumbers.NumberParseException: void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String)>','<com.android.internal.telephony.AdnRecord: void <init>(byte[])>','<android.app.Notification$Style: void setBuilder(android.app.Notification$Builder)>','<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>','<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>','<android.net.wifi.WifiStateTracker: android.net.LinkProperties access$200(android.net.wifi.WifiStateTracker)>','<android.content.IntentSender: void <init>(android.content.IIntentSender)>','<com.android.internal.telephony.cat.ToneSettings$1: com.android.internal.telephony.cat.ToneSettings createFromParcel(android.os.Parcel)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAutoRegistration(boolean)>','<android.media.IAudioService$Stub$Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)>','<android.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug$RecyclerTraceType,int[])>','<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>','<android.view.View: boolean requestFocus(int)>','<com.android.internal.telephony.cat.ComprehensionTlv: com.android.internal.telephony.cat.ComprehensionTlv decode(byte[],int)>','<android.os.BatteryStats$HistoryItem: void clear()>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <clinit>()>','<android.widget.RemoteViewsAdapter$3: void run()>','<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>','<android.webkit.WebSettings$PluginState: void <clinit>()>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void focusSearch(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>','<android.view.View: int getHeight()>','<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.database.sqlite.SQLiteConnection$OperationLog: java.lang.String describeCurrentOperation()>','<android.text.method.TextKeyListener$NullKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>','<com.android.internal.telephony.cdma.CdmaConnection: void onRemoteDisconnect(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult: void <clinit>()>','<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void setLastErrorAndTransitionToInitialState(int)>','<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>','<android.os.IVibratorService$Stub$Proxy: void cancelVibrate(android.os.IBinder)>','<android.telephony.PhoneStateListener$1: void onDataActivity(int)>','<com.android.server.ConnectivityService: void access$1100(com.android.server.ConnectivityService,android.net.NetworkInfo)>','<android.server.BluetoothAdapterStateMachine: void access$3400(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.util.Base64$Decoder: void <clinit>()>','<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>','<android.filterfw.core.GLFrame: java.lang.String toString()>','<android.widget.ListPopupWindow: int getSelectedItemPosition()>','<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>','<com.android.server.ConnectivityService$FeatureUser: void binderDied()>','<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>','<android.view.WindowManagerImpl: void setStoppedState(android.os.IBinder,boolean)>','<android.animation.LayoutTransition: java.util.List getTransitionListeners()>','<android.net.wifi.WifiStateMachine$DriverUnloadedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.location.Location: void removeAltitude()>','<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>','<android.webkit.WebViewClassic$Factory: android.webkit.WebStorage getWebStorage()>','<android.os.ResultReceiver$MyRunnable: void run()>','<android.content.ComponentName: java.lang.String toString()>','<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>','<android.net.wifi.WifiNative: boolean reassociate()>','<android.net.NetworkTemplate: int getMatchRule()>','<com.android.internal.telephony.PhoneSubInfo: void <init>(com.android.internal.telephony.Phone)>','<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>','<com.android.server.connectivity.Vpn$Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.os.Debug: void waitForDebugger()>','<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>','<com.android.server.wm.WindowAnimator: boolean isDimming()>','<android.util.SparseBooleanArray: void delete(int)>','<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>','<com.android.internal.telephony.gsm.GsmConnection: void onRemoteDisconnect(int)>','<android.graphics.Canvas: android.graphics.Rect getClipBounds()>','<android.view.View$4: void setValue(android.view.View,float)>','<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>','<com.android.internal.telephony.PhoneProxy: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>','<android.app.ContextImpl$35: void <init>()>','<android.app.ActivityManager$RecentTaskInfo: int describeContents()>','<com.android.internal.telephony.gsm.GsmMmiCode: void handleMessage(android.os.Message)>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>','<android.widget.AbsSpinner: void setSelection(int)>','<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>','<android.view.inputmethod.InputMethodManager$1: void onBindMethod(com.android.internal.view.InputBindResult)>','<android.media.DecoderCapabilities: java.util.List getAudioDecoders()>','<android.webkit.WebViewClassic: void onResume()>','<android.os.Environment: void <clinit>()>','<android.os.FileObserver: void finalize()>','<android.app.ActivityManager$RunningTaskInfo$1: android.app.ActivityManager$RunningTaskInfo[] newArray(int)>','<android.widget.ImageView: void setImageResource(int)>','<android.webkit.WebViewCore: void sendMessage(int,java.lang.Object)>','<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>','<android.net.sip.SipSessionAdapter: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>','<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.hardware.usb.UsbEndpoint: int getAttributes()>','<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>','<android.webkit.WebViewClassic: void setMapTrackballToArrowKeys(boolean)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void dump(java.io.PrintWriter,java.lang.String)>','<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()>','<com.android.server.ShutdownActivity: boolean access$000(com.android.server.ShutdownActivity)>','<android.widget.AbsListView: boolean isStackFromBottom()>','<com.android.server.wm.WindowManagerService: boolean computeScreenConfigurationLocked(android.content.res.Configuration)>','<com.android.server.ConnectivityService: int setUsbTethering(boolean)>','<android.webkit.WebViewCore: android.webkit.WebViewCore$WebKitHitTest access$3700(android.webkit.WebViewCore,int,int,int,boolean)>','<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)>','<android.widget.TextView: void invalidateCursor()>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<com.android.server.AppWidgetService$Provider: void <init>()>','<android.graphics.PointF: float length()>','<android.webkit.WebView: void stopLoading()>','<android.server.BluetoothService$3: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.net.wifi.WifiNative: boolean removeNetwork(int)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: boolean havePassword(int)>','<android.nfc.tech.BasicTagTechnology: boolean isConnected()>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>','<android.media.AudioService$VolumeStreamState: int getStreamType()>','<android.app.Notification$Action$1: android.app.Notification$Action createFromParcel(android.os.Parcel)>','<android.content.res.Configuration: void <clinit>()>','<android.content.res.StringBlock$StyleIDs: int access$602(android.content.res.StringBlock$StyleIDs,int)>','<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()>','<android.app.Fragment: void setUserVisibleHint(boolean)>','<com.android.internal.util.FastXmlSerializer: void <init>()>','<android.net.http.HttpsConnection: java.lang.String toString()>','<android.nfc.NdefMessage: byte[] toByteArray()>','<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage$MessageLevel)>','<com.android.server.wm.WindowManagerService: void getDisplaySize(android.graphics.Point)>','<android.widget.TextView$CharWrapper: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>','<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>','<com.android.internal.telephony.sip.SipPhone: void setCellBroadcastSmsConfig(int[],android.os.Message)>','<android.util.SparseBooleanArray: int indexOfValue(boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>','<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>','<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: void <init>(android.preference.PreferenceGroupAdapter$1)>','<android.os.ConditionVariable: void open()>','<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>','<com.android.internal.telephony.gsm.GsmCall: boolean isMultiparty()>','<android.hardware.Camera$Parameters: int getMaxExposureCompensation()>','<android.media.IAudioService$Stub$Proxy: void adjustSuggestedStreamVolume(int,int,int)>','<com.android.internal.widget.ActionBarView: void onMeasure(int,int)>','<com.android.server.wm.WindowState: boolean isVisibleNow()>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,java.lang.Object)>','<com.android.server.am.UsageStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.service.wallpaper.IWallpaperService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$1400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Message)>','<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>','<android.view.HardwareRenderer$GlRenderer: boolean draw(android.view.View,android.view.View$AttachInfo,android.view.HardwareRenderer$HardwareDrawCallbacks,android.graphics.Rect)>','<android.net.DhcpStateMachine: void access$2100(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<com.android.server.NsdService$NsdStateMachine: void access$900(com.android.server.NsdService$NsdStateMachine,com.android.internal.util.IState)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void getSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>','<android.widget.FrameLayout: void drawableStateChanged()>','<android.net.MobileDataStateTracker: android.os.Handler access$900(android.net.MobileDataStateTracker)>','<android.net.http.RequestQueue$SyncFeeder: void requeueRequest(android.net.http.Request)>','<android.content.res.XmlBlock: int access$600(int)>','<android.widget.Editor$SuggestionsPopupWindow: android.widget.Editor$SuggestionsPopupWindow$SuggestionInfo[] access$1700(android.widget.Editor$SuggestionsPopupWindow)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellChecker(java.lang.String,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<android.widget.AutoCompleteTextView: void access$800(android.widget.AutoCompleteTextView,int)>','<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchTrackballEvent(int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>','<com.android.internal.widget.multiwaveview.GlowPadView$5: void onAnimationEnd(android.animation.Animator)>','<android.graphics.SurfaceTexture$EventHandler: void <init>(android.graphics.SurfaceTexture,android.os.Looper)>','<android.view.HardwareRenderer$GlRenderer: android.graphics.Rect access$000(android.view.HardwareRenderer$GlRenderer)>','<android.view.View$AttachInfo$InvalidateInfo: void setNextPoolable(android.view.View$AttachInfo$InvalidateInfo)>','<android.view.GLES20Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>','<com.android.internal.telephony.PhoneSubInfoProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.webkit.BrowserFrame: java.lang.String saveWebArchive(java.lang.String,boolean)>','<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>','<android.net.http.RequestQueue: void <init>(android.content.Context,int)>','<android.widget.MediaController$1: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>','<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.gsm.GsmCallTracker,int)>','<com.android.server.am.FactoryErrorDialog: void <init>(android.content.Context,java.lang.CharSequence)>','<android.widget.Editor$SelectionModifierCursorController: int getMaxTouchOffset()>','<android.content.res.XmlBlock$Parser: int getAttributeCount()>','<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback)>','<android.app.backup.IRestoreObserver$Stub: android.app.backup.IRestoreObserver asInterface(android.os.IBinder)>','<android.graphics.Bitmap: void setPixel(int,int,int)>','<android.os.storage.IObbActionListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.SearchView: android.view.View access$400(android.widget.SearchView)>','<android.widget.ListPopupWindow: android.widget.PopupWindow access$700(android.widget.ListPopupWindow)>','<android.webkit.WebSettings$ZoomDensity: void <clinit>()>','<android.renderscript.BaseObj: void updateFromNative()>','<com.android.server.am.UsageStatsService$1: void <init>(com.android.server.am.UsageStatsService,java.lang.String)>','<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1)>','<android.media.AudioService: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>','<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>','<android.net.wifi.p2p.WifiP2pGroup$1: void <init>()>','<android.net.LinkCapabilities: void <clinit>()>','<android.text.style.QuoteSpan: int getSpanTypeId()>','<com.android.vcard.VCardUtils: com.android.vcard.VCardParser getAppropriateParser(int)>','<android.text.Layout: int getLineForOffset(int)>','<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayWidth(int,int,int)>','<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>','<com.android.internal.view.menu.ActionMenuItem: boolean isCheckable()>','<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>','<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>','<com.android.internal.telephony.DataConnection: void access$1100(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.security.KeyStore: boolean reset()>','<com.android.server.am.ActivityManagerService$6: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.EventLogTags: void writeWatchdogScheduledReboot(long,int,int,int,java.lang.String)>','<android.view.DragEvent$1: void <init>()>','<com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>','<android.animation.LayoutTransition: void <clinit>()>','<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.app.IAlarmManager$Stub: android.os.IBinder asBinder()>','<com.android.server.IntentResolver: void removeFilterInternal(android.content.IntentFilter)>','<android.net.INetworkStatsService$Stub$Proxy: void advisePersistThreshold(long)>','<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)>','<android.widget.TextView: void sendAfterTextChanged(android.text.Editable)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode()>','<android.widget.FrameLayout: void <init>(android.content.Context)>','<com.android.internal.widget.SlidingTab: void onLayout(boolean,int,int,int,int)>','<android.app.admin.DeviceAdminInfo$1: android.app.admin.DeviceAdminInfo createFromParcel(android.os.Parcel)>','<android.widget.ListView: boolean pageScroll(int)>','<android.view.GLES20Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void removeReferences()>','<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String)>','<android.provider.MediaStore$Audio$Media: void <clinit>()>','<android.webkit.WebViewClassic: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.app.Dialog: void cancel()>','<android.webkit.CacheManager$CacheResult: long getExpires()>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setDisplayName(java.lang.String)>','<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>','<android.os.IPowerManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean getTrustState(java.lang.String)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>','<com.android.server.AppWidgetService: void notifyAppWidgetViewDataChanged(int[],int)>','<android.widget.RemoteViews: void <init>(java.lang.String,int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<android.widget.AdapterViewAnimator$SavedState$1: android.widget.AdapterViewAnimator$SavedState createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>','<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>','<com.android.internal.policy.impl.KeyguardViewMediator$4: void handleMessage(android.os.Message)>','<android.widget.Editor: void createInputContentTypeIfNeeded()>','<android.view.LayoutInflater$FactoryMerger: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>','<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>','<android.os.AsyncTask$4: void <clinit>()>','<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>','<com.android.internal.widget.ActionBarView: void collapseActionView()>','<com.android.server.am.ActivityRecord: java.lang.String toString()>','<android.webkit.WebViewClassic: void access$6000(android.webkit.WebViewClassic,java.lang.String)>','<android.renderscript.Element: void <init>(int,android.renderscript.RenderScript,android.renderscript.Element$DataType,android.renderscript.Element$DataKind,boolean,int)>','<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionDetached(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void disableLocationUpdates()>','<android.widget.CompoundButton: void setOnCheckedChangeWidgetListener(android.widget.CompoundButton$OnCheckedChangeListener)>','<com.android.internal.widget.multiwaveview.Ease$Cubic$3: void <init>()>','<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.inputmethodservice.IInputMethodWrapper: void showSoftInput(int,android.os.ResultReceiver)>','<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>','<android.nfc.NdefRecord: java.lang.String toString()>','<com.android.server.wm.WindowManagerService: float fixScale(float)>','<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>','<android.webkit.HTML5VideoFullScreen: int access$1002(android.webkit.HTML5VideoFullScreen,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void getNeighboringCids(android.os.Message)>','<android.os.INetworkManagementService$Stub$Proxy: android.os.IBinder asBinder()>','<android.media.DecoderCapabilities$VideoDecoder: android.media.DecoderCapabilities$VideoDecoder valueOf(java.lang.String)>','<com.android.server.PowerManagerService$LockList: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.net.wifi.WifiConfigStore$DelayedDiskWrite: void access$000(java.util.List)>','<android.text.TextUtils: boolean delimitedStringContains(java.lang.String,char,java.lang.String)>','<android.net.DhcpStateMachine$WaitBeforeStartState: void <init>(android.net.DhcpStateMachine)>','<android.widget.Editor: android.graphics.drawable.Drawable access$2600(android.widget.Editor)>','<android.view.animation.GridLayoutAnimationController: void setDirection(int)>','<android.widget.AbsListView: android.view.View retrieveFromScrap(java.util.ArrayList,int)>','<android.media.effect.effects.AutoFixEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.widget.ListPopupWindow: android.view.View getAnchorView()>','<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>','<android.net.LinkProperties: android.net.LinkProperties$CompareResult compareAddresses(android.net.LinkProperties)>','<android.widget.CompoundButton$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.hardware.input.KeyboardLayout$1: android.hardware.input.KeyboardLayout createFromParcel(android.os.Parcel)>','<android.os.RemoteCallback: void <init>(android.os.Handler)>','<com.android.server.location.LocationProviderProxy$Connection: void run()>','<android.webkit.WebChromeClient: void setInstallableWebApp()>','<android.widget.Scroller: void <init>(android.content.Context)>','<com.android.server.sip.SipWakeupTimer: void <init>(android.content.Context,java.util.concurrent.Executor)>','<android.content.pm.ParceledListSlice: android.os.Parcelable populateList(java.util.List,android.os.Parcelable$Creator)>','<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()>','<android.os.Bundle: double[] getDoubleArray(java.lang.String)>','<android.media.RemoteControlClient: void setPlaybackInformation(int,int)>','<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>','<android.app.backup.IBackupManager$Stub$Proxy: void setBackupEnabled(boolean)>','<android.widget.ListPopupWindow$DropDownListView: android.view.View obtainView(int,boolean[])>','<com.android.internal.widget.SlidingTab: void setOnTriggerListener(com.android.internal.widget.SlidingTab$OnTriggerListener)>','<com.android.vcard.VCardBuilder: void <clinit>()>','<android.app.Activity$ManagedCursor: boolean access$302(android.app.Activity$ManagedCursor,boolean)>','<android.content.res.CompatibilityInfo: void applyToDisplayMetrics(android.util.DisplayMetrics)>','<android.net.DhcpInfoInternal: java.lang.String toString()>','<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void <init>(android.view.View,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardScreenCallback,boolean)>','<com.android.internal.view.IInputConnectionWrapper: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>','<android.bluetooth.BluetoothHealthAppConfiguration: int hashCode()>','<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<android.widget.ListPopupWindow: void setAnimationStyle(int)>','<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock()>','<android.location.Address: java.lang.String access$1202(android.location.Address,java.lang.String)>','<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence getMessage()>','<android.util.TimeUtils: void <init>()>','<com.android.internal.database.SortCursor: void <init>(android.database.Cursor[],java.lang.String)>','<android.text.style.CharacterStyle$Passthrough: android.text.style.CharacterStyle getUnderlying()>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: java.lang.String attemptToFormatAccruedDigits()>','<com.android.internal.telephony.RIL: void getDataCallList(android.os.Message)>','<android.filterfw.core.GLEnvironment: void <clinit>()>','<android.accounts.AccountManagerService: void confirmCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean)>','<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>','<android.accessibilityservice.AccessibilityService$1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.sip.SipCommandInterface: void queryCallWaiting(int,android.os.Message)>','<android.webkit.WebView: boolean canZoomOut()>','<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>','<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>','<android.widget.TextView: int getShadowColor()>','<android.animation.PropertyValuesHolder: void setFloatValues(float[])>','<android.location.Address: java.util.HashMap access$002(android.location.Address,java.util.HashMap)>','<android.server.BluetoothHealthProfileHandler: void access$1300(android.server.BluetoothHealthProfileHandler,android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>','<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>','<com.android.server.StatusBarManagerService: void onHardKeyboardStatusChange(boolean,boolean)>','<android.provider.MediaStore$Audio$Albums: void <init>()>','<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>','<com.android.server.wm.WindowManagerService: void executeAppTransition()>','<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$2100(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: java.lang.String getEfName()>','<android.view.HardwareRenderer: boolean isBackBufferPreserved()>','<android.widget.AutoCompleteTextView: void doBeforeTextChanged()>','<android.widget.Toast: void show()>','<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>','<com.android.internal.policy.impl.PhoneWindowManager$16: void run()>','<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>','<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<com.android.internal.view.menu.ActionMenuItem: int getGroupId()>','<com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>','<com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State[] values()>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPort(int)>','<android.content.ISyncContext$Stub$Proxy: void onFinished(android.content.SyncResult)>','<android.widget.TextView: android.text.Layout access$300(android.widget.TextView)>','<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>','<android.widget.ListView$FixedViewInfo: void <init>(android.widget.ListView)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>','<android.content.SyncStorageEngine: boolean isSyncActive(android.accounts.Account,int,java.lang.String)>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>','<com.android.internal.telephony.PhoneProxy: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>','<android.media.AudioService: void access$5700(android.media.AudioService)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void separate()>','<com.android.internal.os.BatteryStatsImpl: boolean startIteratingOldHistoryLocked()>','<android.content.res.AssetManager: int access$200(android.content.res.AssetManager,int)>','<com.android.server.sip.SipService$SipSessionGroupExt: boolean isOpenedToReceiveCalls()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>','<android.app.LoadedApk$ServiceDispatcher$RunConnection: void run()>','<com.android.server.pm.PackageManagerService: void grantPermission(java.lang.String,java.lang.String)>','<com.android.internal.policy.impl.FaceUnlock$2: void cancel()>','<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<android.widget.RemoteViews: int describeContents()>','<com.android.internal.telephony.DataConnectionAc: void reqCid()>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailAlphaTag()>','<android.app.Activity: void onDestroy()>','<com.android.vcard.VCardParserImpl_V21: void <init>()>','<android.text.style.ForegroundColorSpan: int getSpanTypeId()>','<android.view.textservice.SpellCheckerInfo: void <init>(android.os.Parcel)>','<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>','<android.text.HtmlToSpannedConverter: void setDocumentLocator(org.xml.sax.Locator)>','<android.widget.AdapterView: int lookForSelectablePosition(int,boolean)>','<com.android.server.WifiService: int access$2002(com.android.server.WifiService,int)>','<com.android.server.wm.WindowManagerService$H: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void unplug(long,long)>','<android.view.View: boolean startDrag(android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>','<android.hardware.usb.UsbDeviceConnection: void <init>(android.hardware.usb.UsbDevice)>','<android.webkit.WebViewClassic$7$1: void run()>','<android.content.ClipboardManager$1: void dispatchPrimaryClipChanged()>','<android.accessibilityservice.UiTestAutomationBridge$1: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.WebSettings$LayoutAlgorithm: void <clinit>()>','<android.media.AudioManager: int getRouting(int)>','<android.text.Layout$TabStops: float nextDefaultStop(float,int)>','<com.android.internal.content.PackageMonitor: void onPackageAppeared(java.lang.String,int)>','<android.widget.AbsListView: int[] onCreateDrawableState(int)>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionLocked(android.net.Uri,int)>','<com.android.server.location.PassiveProvider: void setMinTime(long,android.os.WorkSource)>','<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>','<android.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>','<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>','<com.android.internal.telephony.SmsUsageMonitor: void <init>(android.content.Context)>','<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence)>','<android.server.BluetoothService: java.util.List getPanDevicesMatchingConnectionStates(int[])>','<com.android.internal.util.StateMachine$ProcessedMessages: void setSize(int)>','<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()>','<android.webkit.CallbackProxy: void onCloseWindow(android.webkit.WebViewClassic)>','<android.widget.Spinner: void onDetachedFromWindow()>','<android.content.pm.PermissionGroupInfo: void <init>(android.os.Parcel,android.content.pm.PermissionGroupInfo$1)>','<android.os.TokenWatcher: java.util.WeakHashMap access$000(android.os.TokenWatcher)>','<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>','<com.android.internal.policy.impl.PatternUnlockScreen: boolean access$900(com.android.internal.policy.impl.PatternUnlockScreen)>','<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo)>','<android.location.Criteria$1: android.location.Criteria[] newArray(int)>','<com.android.internal.widget.LockPatternUtils: boolean isSecure()>','<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.hardware.SystemSensorManager: void <init>(android.os.Looper)>','<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>','<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>','<android.content.IContentService$Stub$Proxy: boolean isSyncPending(android.accounts.Account,java.lang.String)>','<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>','<android.os.Environment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)>','<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>','<android.inputmethodservice.KeyboardView$SwipeTracker: void addMovement(android.view.MotionEvent)>','<android.hardware.input.IInputManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>','<android.ddm.DdmHandleProfiling: void disconnected()>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy: void onResponse(boolean)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setAlpha(float)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>','<android.view.SurfaceView$2: void <init>(android.view.SurfaceView)>','<android.filterpacks.videosink.MediaEncoderFilter: void close(android.filterfw.core.FilterContext)>','<android.app.ActivityManager$ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void onCustomSlowCall(java.lang.String)>','<android.widget.ArrayAdapter: java.util.List access$302(android.widget.ArrayAdapter,java.util.List)>','<com.android.server.DeviceStorageMonitorService: boolean access$102(com.android.server.DeviceStorageMonitorService,boolean)>','<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: void <init>(android.content.Context,android.media.AudioManager,android.os.Handler)>','<android.widget.RelativeLayout$LayoutParams: int access$100(android.widget.RelativeLayout$LayoutParams)>','<android.widget.HeaderViewListAdapter: boolean hasStableIds()>','<android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,boolean,int,int)>','<android.net.wifi.WifiStateMachine: void setWifiEnabled(boolean)>','<android.graphics.RectF: void inset(float,float)>','<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>','<android.text.format.Time: void <init>(android.text.format.Time)>','<com.android.internal.telephony.IccCard$State: com.android.internal.telephony.IccCard$State valueOf(java.lang.String)>','<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.view.LayoutInflater$BlinkLayout: boolean access$100(android.view.LayoutInflater$BlinkLayout)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void <init>(com.android.internal.telephony.cdma.CDMAPhone,com.android.internal.telephony.SMSDispatcher)>','<com.android.internal.telephony.SmsHeader$MiscElt: void <init>()>','<android.webkit.HTML5VideoView: boolean isFullScreenMode()>','<com.android.ex.variablespeed.VariableSpeed: android.media.MediaPlayer$OnCompletionListener access$100(com.android.ex.variablespeed.VariableSpeed)>','<android.os.ResultReceiver: void <clinit>()>','<android.view.KeyEvent: int getUnicodeChar()>','<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>','<android.content.BroadcastReceiver$PendingResult: void setExtrasClassLoader(java.lang.ClassLoader)>','<com.android.internal.database.SortCursor: int getCount()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>','<android.widget.AbsListView: void onDetachedFromWindow()>','<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()>','<android.animation.AnimatorSet: boolean isStarted()>','<com.android.internal.telephony.sip.SipConnectionBase: void cancelPostDial()>','<android.widget.ExpandableListView: void <clinit>()>','<android.webkit.WebView$PrivateAccess: float getHorizontalScrollFactor()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getTemporaryMetaData()>','<android.content.Loader: java.lang.String toString()>','<com.android.server.PowerManagerService$13: void onSensorChanged(android.hardware.SensorEvent)>','<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo[] newArray(int)>','<android.net.http.HttpConnection: void closeConnection()>','<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>','<com.android.server.ConnectivityService: int access$1300(com.android.server.ConnectivityService)>','<android.app.Dialog: android.view.Window getWindow()>','<android.graphics.drawable.shapes.Shape: float getHeight()>','<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>','<com.android.internal.telephony.cat.Item: void <init>(int,java.lang.String)>','<android.webkit.HTML5VideoView: void reprepareData(android.webkit.HTML5VideoViewProxy)>','<android.database.sqlite.SQLiteConnection: void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo)>','<android.app.Activity: void setSecondaryProgress(int)>','<android.bluetooth.IBluetoothA2dp$Stub: android.os.IBinder asBinder()>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: void onDataSetChanged()>','<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)>','<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage(android.os.Message)>','<android.graphics.ColorMatrix: void reset()>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$008(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<com.android.server.wm.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<android.webkit.ClientCertRequestHandler: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$2900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<android.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>','<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.net.sip.SimpleSessionDescription$Media: int getPortCount()>','<android.telephony.TelephonyManager: int getDataActivity()>','<com.android.internal.widget.TransportControlView: void onClick(android.view.View)>','<com.android.internal.telephony.PhoneProxy: void unregisterForNewRingingConnection(android.os.Handler)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void setCurrentSpellCheckerSubtype(java.lang.String,int)>','<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>','<android.filterfw.core.Filter: void performTearDown(android.filterfw.core.FilterContext)>','<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.content.res.TypedArray: float getFloat(int,float)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>','<com.android.internal.policy.impl.RecentApplicationsDialog: void dismissAndSwitch()>','<android.text.Selection: void removeSelection(android.text.Spannable)>','<android.app.ActivityManager$RecentTaskInfo: void readFromParcel(android.os.Parcel)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector cloneSelectors()>','<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>','<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>','<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState access$302(android.net.wifi.WifiInfo,android.net.wifi.SupplicantState)>','<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>','<android.os.Parcel: void readLongArray(long[])>','<android.widget.AbsListView: float getTopFadingEdgeStrength()>','<android.view.View: boolean isScrollContainer()>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.ActivityManager: java.util.List getProcessesInErrorState()>','<android.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)>','<android.widget.RemoteViews$2: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg)>','<android.widget.SearchView: void onMeasure(int,int)>','<android.content.SyncStorageEngine: long insertStartSyncEvent(android.accounts.Account,int,java.lang.String,long,int,boolean)>','<android.media.MediaPlayer: android.media.MediaPlayer$OnPreparedListener access$100(android.media.MediaPlayer)>','<android.preference.Preference: int compareTo(java.lang.Object)>','<android.webkit.HTML5VideoView: void setStartWhenPrepared(boolean)>','<android.net.wifi.p2p.WifiP2pService: java.lang.String access$9900(android.net.wifi.p2p.WifiP2pService)>','<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String scToBarringFacility(java.lang.String)>','<android.net.sip.SipManager: void close(java.lang.String)>','<android.media.AudioService$1: void <init>(android.media.AudioService)>','<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.internal.widget.WaveView: int access$500(com.android.internal.widget.WaveView)>','<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)>','<android.inputmethodservice.IInputMethodSessionWrapper: void appPrivateCommand(java.lang.String,android.os.Bundle)>','<android.view.accessibility.AccessibilityRecord: void init(android.view.accessibility.AccessibilityRecord)>','<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>','<android.os.Debug: void resetThreadExternalAllocCount()>','<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>','<android.widget.TextView: void removeMisspelledSpans(android.text.Spannable)>','<android.widget.AbsListView: int computeVerticalScrollExtent()>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void setTransportControlFlags(int,int)>','<android.view.View: int getScrollBarDefaultDelayBeforeFade()>','<android.os.Bundle: boolean isParcelled()>','<android.media.AudioService: int getMasterVolume()>','<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()>','<com.android.internal.telephony.IccCard: java.lang.String getAid()>','<android.text.LoginFilter: void <init>(boolean)>','<android.net.sip.ISipSession$Stub$Proxy: void setListener(android.net.sip.ISipSessionListener)>','<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>','<android.graphics.Point$1: void <init>()>','<android.view.ActionProvider: boolean overridesItemVisibility()>','<com.android.internal.telephony.ServiceStateTracker: void reRegisterNetwork(android.os.Message)>','<android.net.NetworkStatsHistory: void generateRandom(long,long,long)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>','<com.android.server.net.NetworkStatsCollection: void recordCollection(com.android.server.net.NetworkStatsCollection)>','<com.android.internal.widget.multiwaveview.PointCloud: void makePointCloud(float,float)>','<com.android.server.BatteryService$Led: void updateLightsLocked()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasPersonalNumber()>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: java.lang.String access$602(android.server.BluetoothPanProfileHandler$BluetoothPanDevice,java.lang.String)>','<android.media.AudioManager: android.media.AudioManager$FocusEventHandlerDelegate access$200(android.media.AudioManager)>','<android.widget.ListView$FocusSelector: void <init>(android.widget.ListView,android.widget.ListView$1)>','<android.webkit.WebViewClassic: android.webkit.WebViewClient getWebViewClient()>','<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] access$700(com.android.server.ConnectivityService)>','<android.app.INotificationManager$Stub$Proxy: void cancelToast(java.lang.String,android.app.ITransientNotification)>','<android.net.INetworkStatsService$Stub$Proxy: android.net.INetworkStatsSession openSession()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean isItalianLeadingZero()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>','<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void readSummaryFromParcelLocked(android.os.Parcel)>','<com.android.internal.telephony.IccCard: void access$100(com.android.internal.telephony.IccCard)>','<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>','<android.view.VelocityTracker$1: void onAcquired(android.util.Poolable)>','<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>','<com.android.server.LocationManagerService: java.lang.String access$2302(com.android.server.LocationManagerService,java.lang.String)>','<android.view.ViewDebug$6: void run()>','<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.PatternUnlockScreen$FooterMode: void <clinit>()>','<android.nfc.NfcActivityManager$NfcActivityState: java.lang.String toString()>','<android.net.sip.SipProfile: boolean access$1002(android.net.sip.SipProfile,boolean)>','<android.content.res.XmlBlock$Parser: void setProperty(java.lang.String,java.lang.Object)>','<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>','<android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode valueOf(java.lang.String)>','<android.webkit.WebViewClassic: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)>','<android.net.wifi.WifiStateMachine$SoftApStartedState: boolean processMessage(android.os.Message)>','<android.content.pm.PackageParser$ActivityIntentInfo: java.lang.String toString()>','<android.graphics.Paint: android.graphics.Paint$Style getStyle()>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthority(android.accounts.Account,int,java.lang.String)>','<android.view.IWindowManager$Stub$Proxy: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>','<com.android.internal.telephony.RIL$1: void <init>(com.android.internal.telephony.RIL)>','<com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>','<android.widget.Editor$SelectionActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>','<android.media.AudioManager: void handleKeyUp(android.view.KeyEvent,int)>','<android.appwidget.AppWidgetHostView: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.content.res.XmlBlock$Parser: int nextTag()>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrength(android.telephony.SignalStrength)>','<android.util.SparseBooleanArray: int keyAt(int)>','<android.content.ContentProviderOperation$Builder: java.lang.String access$300(android.content.ContentProviderOperation$Builder)>','<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>','<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>','<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)>','<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle addLine(java.lang.CharSequence)>','<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>','<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo)>','<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.widget.AdapterView$SelectionNotifier: void <init>(android.widget.AdapterView,android.widget.AdapterView$1)>','<com.android.internal.policy.impl.SimUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void finish()>','<android.view.Choreographer: void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord)>','<com.android.internal.telephony.DataConnection$DcActiveState: void exit()>','<com.android.server.MountService$ShutdownCallBack: void handleFinished()>','<com.android.server.usb.UsbHostManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>','<android.content.pm.UserInfo: void <init>(android.content.pm.UserInfo)>','<android.net.wifi.WifiNative: java.lang.String waitForEvent()>','<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)>','<android.app.SearchDialog$SearchBar: void setSearchDialog(android.app.SearchDialog)>','<android.util.LogWriter: void write(char[],int,int)>','<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>','<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>','<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String)>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.SMSDispatcher: void handleMessage(android.os.Message)>','<com.android.server.location.MockProvider: void enableLocationTracking(boolean)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$2100(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>','<android.os.StrictMode$StrictModeCustomViolation: void <init>(int,java.lang.String)>','<android.inputmethodservice.InputMethodService: int getBackDisposition()>','<android.graphics.Color: int blue(int)>','<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>','<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()>','<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)>','<android.text.TextDirectionHeuristics$AnyStrong: android.text.TextDirectionHeuristics$TriState checkRtl(char[],int,int)>','<android.accounts.AccountManagerService$8: void run()>','<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat[] values()>','<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>','<android.webkit.WebSettings: boolean getJavaScriptEnabled()>','<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>','<android.os.INetworkManagementService$Stub$Proxy: void removeInterfaceQuota(java.lang.String)>','<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,java.lang.String,int)>','<android.filterfw.geometry.Point: void <init>(float,float)>','<android.webkit.WebViewClassic: void access$400(android.webkit.WebViewClassic)>','<android.graphics.Canvas: int getMaximumBitmapHeight()>','<android.app.Fragment: void onStart()>','<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>','<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent,android.view.InputEventReceiver,int,boolean)>','<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>','<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream,int)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.Drawable newDrawable()>','<com.android.vcard.JapaneseUtils: void <init>()>','<android.text.method.BaseMovementMethod: boolean scrollLeft(android.widget.TextView,android.text.Spannable,int)>','<com.android.internal.logging.AndroidHandler$1: void <init>()>','<android.widget.ExpandableListConnector: boolean isEnabled(int)>','<android.webkit.CallbackProxy: void onReceivedClientCertRequest(android.webkit.ClientCertRequestHandler,java.lang.String)>','<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>','<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>','<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>','<android.provider.Telephony$Mms$Sent: void <clinit>()>','<com.android.internal.telephony.gsm.GsmConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()>','<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getY()>','<com.android.internal.telephony.BaseCommands: void registerForRadioStateChanged(android.os.Handler,int,java.lang.Object)>','<android.os.CountDownTimer: android.os.CountDownTimer start()>','<android.webkit.URLUtil: byte[] decode(byte[])>','<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>','<com.android.internal.view.IInputContext$Stub$Proxy: void setComposingText(java.lang.CharSequence,int)>','<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsDetail()>','<android.content.Intent: char getCharExtra(java.lang.String,char)>','<android.net.wifi.WifiWatchdogStateMachine: void access$1100(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.os.StrictMode: int access$1000(java.lang.String)>','<android.widget.SearchView$9: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: int getMappedViewType(int)>','<android.graphics.drawable.BitmapDrawable: int getGravity()>','<com.android.internal.widget.ScrollingTabContainerView: void removeAllTabs()>','<android.view.GLES20Canvas: void destroyDisplayList(int)>','<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: void <clinit>()>','<com.android.vcard.VCardParser_V21: void parseOne(java.io.InputStream)>','<android.location.Country: int hashCode()>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: java.lang.String getPattern()>','<android.content.ContentResolver$1: void <init>(android.content.SyncStatusObserver)>','<android.view.animation.AnimationSet: void setStartOffset(long)>','<android.webkit.WebViewCore: void access$6300(android.webkit.WebViewCore,int)>','<android.net.wifi.WifiInfo: boolean getMeteredHint()>','<android.os.IPowerManager$Stub$Proxy: void userActivity(long,boolean)>','<android.os.Parcel$1: java.lang.String[] newArray(int)>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>','<android.net.http.SslCertificate$DName: void <init>(android.net.http.SslCertificate,java.lang.String)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>','<com.android.internal.util.FastXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void registerForLineControlInfo(android.os.Handler,int,java.lang.Object)>','<android.view.WindowLeaked: void <init>(java.lang.String)>','<android.text.format.Time: java.lang.String format3339(boolean)>','<android.widget.TextView: void beginBatchEdit()>','<android.webkit.FindActionModeCallback: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>','<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>','<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>','<com.android.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$2500(android.net.wifi.WifiStateMachine)>','<android.widget.Scroller: void setFinalY(int)>','<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[])>','<android.view.View: void dispatchScreenStateChanged(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$10500(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.ScaleGestureDetector: float getCurrentSpanX()>','<com.android.internal.util.AsyncChannel$AsyncChannelConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.internal.telephony.RIL: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>','<com.android.server.StatusBarManagerService$1: void <init>(com.android.server.StatusBarManagerService,int)>','<android.view.DragEvent: int describeContents()>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>','<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>','<android.bluetooth.BluetoothHealthAppConfiguration: int describeContents()>','<android.service.wallpaper.IWallpaperService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.content.SyncStorageEngine: int getIntColumn(android.database.Cursor,java.lang.String)>','<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>','<android.view.View: boolean isEnabled()>','<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void <init>(int)>','<android.view.View$SendViewScrolledAccessibilityEvent: void <init>(android.view.View,android.view.View$1)>','<android.graphics.Region: void <init>(android.graphics.Rect)>','<android.webkit.WebViewClassic: void access$3400(android.webkit.WebViewClassic,int,int,boolean)>','<android.webkit.WebView$HitTestResult: void setType(int)>','<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.View: int getBottomPaddingOffset()>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void dispose()>','<android.webkit.CallbackProxy: void onIndexChanged(android.webkit.WebHistoryItem,int)>','<android.location.IGpsStatusProvider$Stub$Proxy: void addGpsStatusListener(android.location.IGpsStatusListener)>','<android.widget.RemoteViews$MemoryUsageCounter: void clear()>','<android.renderscript.RenderScript: void nAllocationData1D(int,int,int,int,byte[],int)>','<android.media.AudioService: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.widget.GridView: int getRequestedHorizontalSpacing()>','<android.graphics.DrawFilter: void <init>()>','<android.view.InputEventReceiver: void finalize()>','<android.content.ContentService$ObserverNode: java.util.ArrayList access$000(android.content.ContentService$ObserverNode)>','<android.view.MotionEvent: long getHistoricalEventTimeNano(int)>','<android.bluetooth.BluetoothProfileState$PendingCommandState: boolean processMessage(android.os.Message)>','<android.webkit.WebView: int findAll(java.lang.String)>','<com.android.uiautomator.core.UiSelector: void <init>(com.android.uiautomator.core.UiSelector)>','<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getEsn()>','<android.media.RemoteControlClient: int[] access$200()>','<android.widget.TextView: void clearComposingText()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: boolean access$502(com.android.internal.policy.impl.KeyguardStatusViewManager,boolean)>','<android.accounts.AccountManager$2: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String[])>','<android.accounts.AccountManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>','<android.widget.MediaController$5: void onStartTrackingTouch(android.widget.SeekBar)>','<android.webkit.HTML5VideoFullScreen: boolean canSeekBackward()>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>','<android.widget.Spinner$DropDownAdapter: boolean hasStableIds()>','<android.view.Surface$1: void <init>()>','<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>','<android.net.Uri$AbstractHierarchicalUri: void <init>(android.net.Uri$1)>','<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.SyncManager: boolean access$2400(android.content.SyncManager,android.accounts.AccountAndUser[],android.accounts.Account,int)>','<com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesLI(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService: com.android.internal.util.AsyncChannel access$102(android.net.wifi.p2p.WifiP2pService,com.android.internal.util.AsyncChannel)>','<android.content.pm.InstrumentationInfo: int describeContents()>','<android.view.View: void setDrawingCacheBackgroundColor(int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>','<android.net.wifi.WifiStateMachine: void access$400(android.net.wifi.WifiStateMachine,java.lang.String)>','<com.android.internal.policy.impl.PatternUnlockScreen: void onPause()>','<android.text.BoringLayout: int getParagraphDirection(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState access$5400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRoamingOn()>','<com.android.server.WallpaperManagerService: android.os.ParcelFileDescriptor updateWallpaperBitmapLocked(java.lang.String,com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>','<android.widget.TextView: int getBaseline()>','<android.location.CountryDetector$ListenerTransport: void <init>(android.location.CountryListener,android.os.Looper)>','<com.android.internal.telephony.Call: boolean hasConnection(com.android.internal.telephony.Connection)>','<android.webkit.WebViewClassic$PrivateHandler: void dispatchUiEvent(android.view.MotionEvent,int,int)>','<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>','<android.net.wifi.WifiMonitor: int access$304(android.net.wifi.WifiMonitor)>','<com.android.internal.telephony.cdma.RuimRecords: void loge(java.lang.String)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(int)>','<com.android.internal.telephony.PhoneBase: void unregisterForEcmTimerReset(android.os.Handler)>','<android.app.PendingIntent: java.lang.String getTargetPackage()>','<android.media.MediaRouter$RouteInfo$1: void <init>(android.media.MediaRouter$RouteInfo)>','<android.webkit.WebView: void clearSslPreferences()>','<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>','<android.widget.Editor$HandleView: void show()>','<android.util.LocaleUtil: void <clinit>()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean cancelConnectThread()>','<android.view.ViewRootImpl: void dispatchInvalidateRectOnAnimation(android.view.View$AttachInfo$InvalidateInfo)>','<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>','<android.app.backup.RestoreSet$1: void <init>()>','<android.bluetooth.BluetoothPbap: boolean doesClassMatchSink(android.bluetooth.BluetoothClass)>','<android.widget.Editor$HandleView: void hideActionPopupWindow()>','<android.net.wifi.p2p.WifiP2pGroup: void setInterface(java.lang.String)>','<android.filterfw.core.FilterPort: boolean isAttached()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType: void <clinit>()>','<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>','<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>','<com.android.internal.view.menu.ActionMenuView: int getWindowAnimations()>','<android.webkit.WebViewCore$TouchHighlightData: void <init>()>','<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>','<android.nfc.TechListParcel: int describeContents()>','<com.android.server.NsdService: java.util.HashMap access$500(com.android.server.NsdService)>','<android.webkit.WebIconDatabase: void close()>','<android.webkit.AccessibilityInjector: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.content.SyncManager: void access$1100(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>','<android.view.IWindowManager$Stub$Proxy: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>','<com.android.server.input.PersistentDataStore: boolean removeUninstalledKeyboardLayouts(java.util.Set)>','<android.server.BluetoothAdapterStateMachine: void access$3800(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()>','<com.android.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>','<android.content.pm.ProviderInfo: int describeContents()>','<android.telephony.SmsMessage: int getIndexOnIcc()>','<android.widget.AbsListView$FlingRunnable: void edgeReached(int)>','<android.view.ViewGroup: void endViewTransition(android.view.View)>','<com.android.server.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int)>','<android.app.Activity: void recreate()>','<android.app.Dialog: void openContextMenu(android.view.View)>','<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>','<android.widget.AutoCompleteTextView: void dismissDropDown()>','<android.view.MotionEvent: float getY(int)>','<android.webkit.AutoCompletePopup: void clearAdapter()>','<android.widget.RemoteViews$SetEmptyView: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.net.Uri: boolean isOpaque()>','<android.webkit.WebViewCore$WebCoreThread$1: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService: java.util.Comparator access$1100()>','<com.android.internal.telephony.cdma.RuimRecords: int getDisplayRule(java.lang.String)>','<com.android.server.ConnectivityService: boolean access$2700(com.android.server.ConnectivityService)>','<android.database.CursorWindow: boolean putDouble(double,int,int)>','<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>','<android.net.wifi.p2p.WifiP2pDeviceList: void <init>()>','<android.net.DhcpStateMachine: com.android.internal.util.State access$1800(android.net.DhcpStateMachine)>','<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()>','<android.accounts.IAccountManagerResponse$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.content.ClipData: void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item)>','<com.android.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>','<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.List getConnections()>','<com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>','<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle)>','<android.app.DownloadManager$Query: void <init>()>','<android.webkit.ZoomManager$FocusMovementQueue: void <init>(android.webkit.ZoomManager)>','<com.android.server.wm.WindowManagerService: void freezeRotation(int)>','<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)>','<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>','<android.app.ContextImpl$21: java.lang.Object createService(android.app.ContextImpl)>','<android.widget.TextView: int getPaintFlags()>','<android.nfc.NfcActivityManager: void onActivityDestroyed(android.app.Activity)>','<android.net.sip.SipProfile: java.lang.String getUserName()>','<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>','<android.app.SharedPreferencesImpl$EditorImpl$1: void <init>(android.app.SharedPreferencesImpl$EditorImpl,android.app.SharedPreferencesImpl$MemoryCommitResult)>','<android.speech.tts.TextToSpeech$Connection$1: void <init>(android.speech.tts.TextToSpeech$Connection)>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void readFromParcelLocked(java.util.ArrayList,android.os.Parcel)>','<com.android.internal.telephony.cat.ToneSettings$1: com.android.internal.telephony.cat.ToneSettings[] newArray(int)>','<android.app.ActivityThread: void handleProfilerControl(boolean,android.app.ActivityThread$ProfilerControlData,int)>','<android.content.BroadcastReceiver: void setResultData(java.lang.String)>','<android.database.CursorToBulkCursorAdaptor: void onMove(int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.text.method.BaseMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>','<android.net.NetworkStatsHistory: int getIndexBefore(long)>','<android.widget.AbsListView: void onRemoteAdapterDisconnected()>','<com.android.internal.policy.impl.SimUnlockScreen: void updateConfiguration()>','<android.view.animation.BounceInterpolator: void <init>()>','<com.android.internal.telephony.DataConnectionAc: android.net.LinkProperties getLinkPropertiesSync()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.content.res.AssetManager$AssetInputStream: long skip(long)>','<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>','<com.android.internal.view.menu.MenuPopupHelper: void dismiss()>','<android.net.sip.SipProfile: java.lang.String access$802(android.net.sip.SipProfile,java.lang.String)>','<com.android.internal.widget.LockPatternView$SavedState: boolean isTactileFeedbackEnabled()>','<com.android.internal.os.LoggingPrintStream: void println(long)>','<android.bluetooth.BluetoothTetheringDataTracker: int startUsingNetworkFeature(java.lang.String,int,int)>','<com.android.internal.app.ActionBarImpl: void setDisplayShowHomeEnabled(boolean)>','<android.net.wifi.WifiManager$Channel: java.lang.Object access$100(android.net.wifi.WifiManager$Channel)>','<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)>','<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void writeToParcelLocked(android.os.Parcel)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getSubscriberId()>','<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager)>','<com.android.internal.widget.TransportControlView$SavedState: void <init>(android.os.Parcel,com.android.internal.widget.TransportControlView$1)>','<android.os.Bundle: void putFloatArray(java.lang.String,float[])>','<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>','<com.android.server.ConnectivityService: void access$2300(com.android.server.ConnectivityService,android.content.Intent)>','<android.widget.RelativeLayout$DependencyGraph: void getSortedViews(android.view.View[],int[])>','<android.view.inputmethod.BaseInputConnection: void <init>(android.view.inputmethod.InputMethodManager,boolean)>','<com.android.internal.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)>','<com.android.internal.widget.ScrollingTabContainerView$TabView: void update()>','<android.widget.LinearLayout: void measureVertical(int,int)>','<com.android.internal.telephony.CommandsInterface$RadioState: void <clinit>()>','<android.os.Debug$InstructionCount: int globalTotal()>','<com.android.internal.widget.multiwaveview.PointCloud: void <init>(android.graphics.drawable.Drawable)>','<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)>','<com.android.internal.policy.impl.FaceUnlock$2: void unlock()>','<com.android.i18n.phonenumbers.PhoneNumberMatch: java.lang.String toString()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean shouldShowBatteryInfo()>','<android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate()>','<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: android.view.View access$300(com.android.internal.policy.impl.KeyguardStatusViewManager)>','<com.android.server.InputMethodManagerService: android.app.AlertDialog access$600(com.android.server.InputMethodManagerService)>','<com.android.internal.telephony.IccCardApplication: com.android.internal.telephony.IccCardApplication$PersoSubState PersoSubstateFromRILInt(int)>','<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>','<android.ddm.DdmHandleHello: void sendWAIT(int)>','<android.widget.RemoteViews$ViewGroupAction: void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter)>','<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>','<android.os.Bundle: void putInt(java.lang.String,int)>','<android.location.Criteria: boolean isCostAllowed()>','<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()>','<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>','<android.webkit.WebViewCore: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec: java.lang.String toString()>','<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>','<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.telephony.AdnRecordLoader: void loadFromEF(int,int,int,android.os.Message)>','<android.webkit.WebIconDatabaseClassic$EventHandler: boolean access$1000(android.webkit.WebIconDatabaseClassic$EventHandler)>','<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>','<com.android.internal.util.HexDump: byte[] toByteArray(byte)>','<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void finalize()>','<android.os.storage.StorageVolume: void <clinit>()>','<com.android.internal.widget.LockPatternView$Cell: java.lang.String toString()>','<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromRotatedRect(android.filterfw.geometry.Point,android.filterfw.geometry.Point,float)>','<android.content.pm.IPackageManager$Stub$Proxy: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>','<android.text.TextDirectionHeuristics$TriState: void <clinit>()>','<android.content.pm.IPackageManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>','<android.database.sqlite.SQLiteConnectionPool: java.lang.Object access$000(android.database.sqlite.SQLiteConnectionPool)>','<com.android.server.ConnectivityService: boolean setRadios(boolean)>','<android.graphics.Matrix: void finalize()>','<android.location.GeocoderParams: void <init>(android.content.Context,java.util.Locale)>','<android.hardware.Camera$Parameters: void setRecordingHint(boolean)>','<android.net.sip.SipAudioCall$1: void onRegistrationFailed(android.net.sip.SipSession,int,java.lang.String)>','<com.android.internal.os.RuntimeInit: void wrapperInit(int,java.lang.String[])>','<android.view.MotionEvent: float getHistoricalY(int)>','<android.app.ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>','<android.util.TimeUtils: java.lang.String logTimeOfDay(long)>','<com.android.server.net.NetworkPolicyManagerService: java.util.HashMap access$900(com.android.server.net.NetworkPolicyManagerService)>','<android.app.Instrumentation: void sendKeyDownUpSync(int)>','<android.app.ActivityThread: void access$1000(android.app.ActivityThread,android.os.IBinder,boolean)>','<android.location.Address: java.lang.String getAdminArea()>','<com.android.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>','<android.view.animation.Transformation: int getTransformationType()>','<android.app.ActivityManager$RunningTaskInfo: void readFromParcel(android.os.Parcel)>','<android.text.BoringLayout: void ellipsized(int,int)>','<android.net.NetworkPolicyManager: void snapToCycleDay(android.text.format.Time,int)>','<android.media.effect.effects.BitmapOverlayEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.filterfw.core.StreamPort: void transfer(android.filterfw.core.FilterContext)>','<android.media.MediaRouter$RouteCategory: java.lang.CharSequence getName()>','<android.database.CursorWrapper: boolean move(int)>','<android.view.View: void setFilterTouchesWhenObscured(boolean)>','<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)>','<android.app.NotificationManager: void <init>(android.content.Context,android.os.Handler)>','<android.view.HardwareCanvas: boolean isHardwareAccelerated()>','<android.content.pm.VerifierDeviceIdentity: int describeContents()>','<com.android.internal.util.ProcFileReader: void close()>','<android.widget.TextView: int getMaxEms()>','<android.net.wifi.WifiWatchdogStateMachine: void access$3000(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.app.ActivityManager$RunningAppProcessInfo$1: android.app.ActivityManager$RunningAppProcessInfo createFromParcel(android.os.Parcel)>','<android.net.Uri$OpaqueUri: boolean isHierarchical()>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: void <clinit>()>','<android.net.http.RequestQueue$ActivePool: boolean recycleConnection(android.net.http.Connection)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>','<com.android.internal.policy.impl.PhoneWindowManager: void adjustWindowParamsLw(android.view.WindowManager$LayoutParams)>','<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>','<android.graphics.drawable.ColorDrawable: int getAlpha()>','<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession createSession()>','<android.view.ViewRootImpl: void requestTransitionStart(android.animation.LayoutTransition)>','<android.view.AccessibilityInteractionController$SomeArgs: void access$200(android.view.AccessibilityInteractionController$SomeArgs)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)>','<android.view.animation.Animation: long getStartTime()>','<android.bluetooth.BluetoothAdapter: void <init>(android.bluetooth.IBluetooth)>','<android.view.KeyEvent: boolean isModifierKey(int)>','<android.app.admin.DeviceAdminInfo: void writePoliciesToXml(org.xmlpull.v1.XmlSerializer)>','<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,int,android.view.KeyEvent$DispatcherState)>','<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>','<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>','<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void onLowMemory()>','<android.view.View: void resetResolvedTextDirection()>','<android.telephony.CellIdentity: java.lang.String getCellIdAttributes()>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>','<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>','<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()>','<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>','<android.app.ActivityThread$CreateServiceData: java.lang.String toString()>','<android.view.InputEventConsistencyVerifier: void <clinit>()>','<android.net.wifi.WifiConfigStore$DelayedDiskWrite: void <clinit>()>','<android.webkit.HTML5VideoInline: void <clinit>()>','<android.telephony.SignalStrength: void copyFrom(android.telephony.SignalStrength)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>','<com.android.internal.util.TypedProperties: java.io.StreamTokenizer initTokenizer(java.io.Reader)>','<com.android.internal.app.ActionBarImpl: boolean access$800(com.android.internal.app.ActionBarImpl)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupForeground()>','<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.LocationManagerService$ProximityAlert: void <init>(com.android.server.LocationManagerService,int,double,double,float,long,android.app.PendingIntent)>','<com.android.server.wm.WindowAnimator: void animate()>','<com.android.internal.telephony.gsm.GSMPhone: void removeReferences()>','<android.view.animation.BounceInterpolator: float getInterpolation(float)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)>','<com.android.server.am.ActivityManagerService: boolean isIntentSenderAnActivity(android.content.IIntentSender)>','<android.webkit.SearchBoxImpl: void addSearchBoxListener(android.webkit.SearchBox$SearchBoxListener)>','<android.os.FileObserver$ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)>','<android.widget.RemoteViews$ViewGroupAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.webkit.WebViewClassic: void onWindowFocusChanged(boolean)>','<android.os.Debug$MemoryInfo: void <clinit>()>','<android.preference.PreferenceGroupAdapter: boolean areAllItemsEnabled()>','<com.android.vcard.VCardParser_V40: void <clinit>()>','<com.android.server.LocationManagerService$ProximityListener: void <init>(com.android.server.LocationManagerService)>','<com.android.internal.telephony.OperatorInfo$State: void <clinit>()>','<android.provider.ContactsContract$CommonDataKinds$Callable: void <clinit>()>','<android.server.BluetoothService: java.util.List getHealthDevicesMatchingConnectionStates(int[])>','<android.graphics.Path: void lineTo(float,float)>','<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)>','<com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>','<com.android.internal.telephony.cat.Menu$1: com.android.internal.telephony.cat.Menu createFromParcel(android.os.Parcel)>','<com.android.internal.widget.WaveView: boolean onHoverEvent(android.view.MotionEvent)>','<android.net.wifi.WifiStateMachine$DriverFailedState: void enter()>','<android.os.Bundle: void putBoolean(java.lang.String,boolean)>','<android.app.ContextImpl: java.lang.String getPackageCodePath()>','<android.preference.Preference: boolean onKey(android.view.View,int,android.view.KeyEvent)>','<android.webkit.WebSyncManager: java.lang.Object clone()>','<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>','<android.net.wifi.WifiInfo: void setLinkSpeed(int)>','<android.graphics.drawable.shapes.RectShape: void <init>()>','<android.app.Notification$Builder: android.app.Notification$Builder setExtras(android.os.Bundle)>','<android.content.pm.PackageInfo$1: android.content.pm.PackageInfo[] newArray(int)>','<com.android.server.wm.WindowStateAnimator: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.WindowState,com.android.server.wm.WindowState)>','<android.webkit.WebViewCore: android.webkit.WebViewClassic access$1102(android.webkit.WebViewCore,android.webkit.WebViewClassic)>','<android.webkit.SelectActionModeCallback: void setWebView(android.webkit.WebViewClassic)>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$4400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pConfig,boolean)>','<com.android.internal.policy.impl.KeyguardViewManager$2: void <init>(com.android.internal.policy.impl.KeyguardViewManager,com.android.internal.policy.impl.KeyguardViewBase)>','<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable access$402(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable)>','<android.content.pm.FeatureInfo: void <clinit>()>','<android.webkit.WebView: boolean access$1300(android.webkit.WebView,int,boolean)>','<android.os.StrictMode$ViolationInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<android.content.ComponentName: java.lang.String getShortClassName()>','<android.app.Fragment: void onPause()>','<com.android.internal.widget.LockPatternView$DisplayMode: void <clinit>()>','<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>','<android.net.RouteInfo: void <init>(java.net.InetAddress)>','<android.graphics.SurfaceTexture: void release()>','<com.android.internal.telephony.ApnContext: void removeWaitingApn(com.android.internal.telephony.ApnSetting)>','<android.app.IThumbnailRetriever$Stub: android.os.IBinder asBinder()>','<android.webkit.WebViewCore: void enterFullscreenForVideoLayer(int,java.lang.String)>','<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)>','<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>','<android.bluetooth.BluetoothHealthCallback: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>','<android.widget.SuggestionsAdapter$1: void <init>(android.widget.SuggestionsAdapter)>','<android.graphics.drawable.GradientDrawable$GradientState: float access$202(android.graphics.drawable.GradientDrawable$GradientState,float)>','<android.net.wifi.WifiInfo: int getRssi()>','<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int)>','<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaPrlVersion()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onRefreshCarrierInfo(java.lang.CharSequence,java.lang.CharSequence)>','<android.app.ProgressDialog: void onStop()>','<com.android.internal.util.AsyncChannel$1ConnectAsync: void run()>','<com.android.server.input.InputManagerService: void access$100(com.android.server.input.InputManagerService)>','<android.media.MediaRecorder: void <init>()>','<android.webkit.SslCertLookupTable: void setIsAllowed(android.net.http.SslError)>','<com.android.internal.widget.TransportControlView$Metadata: android.graphics.Bitmap access$500(com.android.internal.widget.TransportControlView$Metadata)>','<android.view.View$5: void setValue(java.lang.Object,float)>','<android.os.Trace: void <clinit>()>','<com.android.internal.telephony.IccUtils: java.lang.String cdmaBcdToString(byte[],int,int)>','<android.view.ViewStub: android.view.View inflate()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>','<android.preference.Preference: java.lang.String getDependency()>','<com.android.internal.telephony.gsm.GSMPhone: void notifyUnknownConnection()>','<android.preference.PreferenceScreen: void <init>(android.content.Context,android.util.AttributeSet)>','<android.server.BluetoothService: java.lang.String getDockPin()>','<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>','<android.database.BulkCursorProxy: android.os.IBinder asBinder()>','<android.widget.AbsListView$1: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick)>','<com.android.server.WifiService: android.net.wifi.WifiInfo getConnectionInfo()>','<android.server.BluetoothAdapterStateMachine$HotOff: boolean processMessage(android.os.Message)>','<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>','<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)>','<android.text.Layout$SpannedEllipsizer: int getSpanFlags(java.lang.Object)>','<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)>','<android.view.View: boolean performHapticFeedback(int)>','<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean getMaxBiometricUnlockAttemptsReached()>','<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<android.os.storage.StorageManager: void enableUsbMassStorage()>','<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>','<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void handleMessage(android.os.Message)>','<android.app.ActivityThread$ApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int)>','<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: int getCurrentBrightness()>','<android.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()>','<android.widget.ExpandableListView: boolean expandGroup(int,boolean)>','<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>','<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>','<android.animation.AnimatorSet: void <init>()>','<android.content.pm.IPackageManager$Stub$Proxy: void removePermission(java.lang.String)>','<android.media.AudioService: void access$6000(android.media.AudioService,int,int,java.lang.String)>','<com.android.internal.telephony.DataConnectionTracker$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.widget.AbsActionBarView$1: void run()>','<android.webkit.WebViewClassic: android.webkit.WebViewClassic$FocusTransitionDrawable access$7500(android.webkit.WebViewClassic)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int available()>','<android.content.SyncManager: void dumpSyncState(java.io.PrintWriter)>','<android.content.ContentQueryMap: boolean access$002(android.content.ContentQueryMap,boolean)>','<com.android.server.wm.AppWindowToken: void updateReportedVisibilityLocked()>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>','<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription createFromParcel(android.os.Parcel)>','<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void animateCollapse()>','<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setPerformAccessibilityActionResult(boolean,int)>','<android.net.wifi.WifiStateMachine$DriverStartingState: void <init>(android.net.wifi.WifiStateMachine)>','<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNumberDescByType(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated90(int)>','<android.widget.Spinner$DropDownAdapter: long getItemId(int)>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>','<android.widget.PopupWindow: int getHeight()>','<android.widget.Spinner$DialogPopup: void onClick(android.content.DialogInterface,int)>','<android.view.ViewRootImpl: void doDie()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2100(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<android.net.wifi.p2p.WifiP2pManager: void <init>(android.net.wifi.p2p.IWifiP2pManager)>','<android.view.ViewGroup: void onAnimationEnd()>','<android.provider.SyncStateContract$Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>','<android.telephony.PhoneStateListener$1: void onSignalStrengthsChanged(android.telephony.SignalStrength)>','<android.content.ContextWrapper: boolean isRestricted()>','<com.android.server.MountService$1$1: void <init>(com.android.server.MountService$1)>','<android.app.Notification: android.os.Bundle access$102(android.app.Notification,android.os.Bundle)>','<android.preference.PreferenceManager: void dispatchActivityDestroy()>','<android.app.backup.BackupAgent: void onCreate()>','<android.view.ViewGroup: void childAccessibilityStateChanged(android.view.View)>','<com.android.internal.policy.impl.GlobalActions$1: void onToggle(boolean)>','<android.database.sqlite.SQLiteConnectionPool: void access$100(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)>','<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter access$100(android.filterfw.io.TextGraphReader)>','<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>','<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>','<android.filterfw.core.VertexFrame: void setInts(int[])>','<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int)>','<android.renderscript.BaseObj: void checkValid()>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$HotOff access$2700(android.server.BluetoothAdapterStateMachine)>','<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>','<android.view.IWindowManager$Stub$Proxy: void lockNow()>','<com.android.server.NativeDaemonConnector$ResponseQueue: void add(int,com.android.server.NativeDaemonEvent)>','<com.android.server.AppWidgetService$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.Connection: void <clinit>()>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: void <init>(com.android.internal.telephony.ims.IsimUiccRecords,com.android.internal.telephony.ims.IsimUiccRecords$1)>','<android.accounts.AccountManager: void access$200(android.accounts.AccountManager)>','<android.view.KeyEvent: char getNumber()>','<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter access$102(android.filterfw.io.TextGraphReader,android.filterfw.core.Filter)>','<android.content.pm.ActivityInfo: void <init>()>','<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)>','<android.media.AudioService$RcDisplayDeathHandler: void unlinkToRcDisplayDeath()>','<android.graphics.Matrix: void setScale(float,float)>','<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>','<android.app.WallpaperManager$Globals: android.app.IWallpaperManager access$300(android.app.WallpaperManager$Globals)>','<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>','<android.net.wifi.p2p.WifiP2pConfig: int describeContents()>','<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>','<android.filterfw.core.FilterContext: void setFrameManager(android.filterfw.core.FrameManager)>','<com.android.internal.telephony.gsm.GsmConnection: long getDisconnectTime()>','<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher)>','<android.provider.ContactsContract$ContactCounts: void <init>()>','<android.hardware.LegacySensorManager: void unregisterListener(android.hardware.SensorListener,int)>','<android.webkit.ZoomManager: void updateZoomRange(android.webkit.WebViewCore$ViewState,int,int)>','<android.webkit.WebSettings$TextSize: android.webkit.WebSettings$TextSize[] values()>','<android.server.BluetoothAdapterProperties: void <init>(android.content.Context,android.server.BluetoothService)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>','<com.android.server.pm.PackageSettingBase: void addEnabledComponent(java.lang.String,int)>','<android.hardware.Camera: boolean access$500(android.hardware.Camera)>','<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap)>','<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable mutate()>','<android.media.MediaRouter$RouteInfo: java.lang.Object getTag()>','<android.location.Location: long getTime()>','<android.server.search.SearchManagerService: android.server.search.Searchables access$200(android.server.search.SearchManagerService)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>','<android.view.View: android.graphics.Matrix getMatrix()>','<android.database.CursorWrapper: boolean isClosed()>','<android.app.ContextImpl$26: void <init>()>','<com.android.server.NotificationManagerService: android.media.IAudioService access$300(com.android.server.NotificationManagerService)>','<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>','<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$700(com.android.server.connectivity.Tethering$TetherInterfaceSM,boolean)>','<android.view.View: int getVerticalScrollbarPosition()>','<android.app.SearchDialog$3: void <init>(android.app.SearchDialog)>','<com.android.server.am.BatteryStatsService: byte[] getStatistics()>','<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>','<com.android.server.NetworkManagementService: java.util.concurrent.CountDownLatch access$102(com.android.server.NetworkManagementService,java.util.concurrent.CountDownLatch)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumTimeToLock(android.content.ComponentName,long)>','<android.telephony.ServiceState: void setRadioTechnology(int)>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcDisconnectingState access$2500(com.android.internal.telephony.DataConnection)>','<android.app.ApplicationErrorReport$CrashInfo: void dump(android.util.Printer,java.lang.String)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean releaseActiveAcceptHeldOrWaiting()>','<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>','<android.view.View$7: java.lang.Float get(android.view.View)>','<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)>','<android.location.GpsStatus$1: void <init>(android.location.GpsStatus)>','<android.text.method.TextKeyListener: void access$200(android.text.method.TextKeyListener,android.content.ContentResolver)>','<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>','<android.webkit.WebHistoryItem: java.lang.String getUrl()>','<android.content.ISyncAdapter$Stub$Proxy: void cancelSync(android.content.ISyncContext)>','<com.android.internal.telephony.sip.SipPhone: boolean handlePinMmi(java.lang.String)>','<com.android.server.NativeDaemonConnector: java.lang.String[] doListCommand(java.lang.String,int)>','<android.text.HtmlToSpannedConverter$Super: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>','<android.text.TextDirectionHeuristics: void <clinit>()>','<android.telephony.PhoneStateListener$1: void onOtaspChanged(int)>','<android.net.wifi.WifiNative: boolean setPersistentReconnect(boolean)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getEsn()>','<android.os.storage.IMountService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.BaseCommands: void unregisterForT53AudioControlInfo(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(long)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>','<android.inputmethodservice.IInputMethodSessionWrapper$InputMethodEventCallbackWrapper: void finishedEvent(int,boolean)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setCdmaTechnology(int)>','<com.android.internal.util.StateMachine: android.os.HandlerThread access$402(com.android.internal.util.StateMachine,android.os.HandlerThread)>','<android.filterpacks.videosrc.MediaSource: void open(android.filterfw.core.FilterContext)>','<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>','<android.webkit.WebView: void findNext(boolean)>','<android.os.Parcel: void writeBinderList(java.util.List)>','<com.android.internal.telephony.PhoneBase: void setCdmaRoamingPreference(int,android.os.Message)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteUserActivity(int,int)>','<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,int[],int)>','<android.os.storage.StorageVolume: boolean allowMassStorage()>','<android.content.res.XmlBlock: void <init>(android.content.res.AssetManager,int)>','<com.android.internal.os.BatteryStatsImpl$Uid: android.util.SparseArray getPidStats()>','<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>','<com.android.server.ConnectivityService$SettingsObserver: void observe(android.content.Context)>','<android.app.Activity$ManagedCursor: boolean access$200(android.app.Activity$ManagedCursor)>','<android.net.ConnectivityManager: android.net.ConnectivityManager from(android.content.Context)>','<android.view.View: void layout(int,int,int,int)>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>','<com.android.server.DevicePolicyManagerService$ActiveAdmin: void readFromXml(org.xmlpull.v1.XmlPullParser)>','<android.app.INotificationManager$Stub$Proxy: void cancelAllNotifications(java.lang.String)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>','<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>','<android.graphics.PointF: boolean equals(float,float)>','<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>','<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>','<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>','<com.android.internal.view.menu.MenuBuilder: void removeItemAt(int)>','<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>','<android.webkit.WebViewClassic: void requestImageRef(android.os.Message)>','<com.android.server.wm.WindowManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.PopupWindow: void showAtLocation(android.os.IBinder,int,int,int)>','<android.widget.TextView: float getShadowRadius()>','<android.net.sip.SipAudioCall$1: void <init>(android.net.sip.SipAudioCall)>','<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>','<android.view.KeyEvent$DispatcherState: void performedLongPress(android.view.KeyEvent)>','<android.location.IGpsStatusListener$Stub$Proxy: void onFirstFix(int)>','<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle)>','<android.media.IRingtonePlayer$Stub: android.os.IBinder asBinder()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>','<com.android.server.WallpaperManagerService: java.io.File access$000(int)>','<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<com.android.internal.view.IInputMethod$Stub$Proxy: android.os.IBinder asBinder()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.Menu getMenu()>','<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>','<com.android.internal.os.storage.ExternalStorageFormatter: boolean access$100(com.android.internal.os.storage.ExternalStorageFormatter)>','<android.filterfw.core.FrameFormat: int getBytesPerSample()>','<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)>','<com.android.internal.telephony.gsm.GsmConnection: void cancelPostDial()>','<android.view.accessibility.AccessibilityManager: void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager)>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>','<android.net.sip.SipSession$Listener: void onCallTransferring(android.net.sip.SipSession,java.lang.String)>','<android.server.BluetoothService: java.lang.String getPendingOutgoingBonding()>','<android.view.View: void setHapticFeedbackEnabled(boolean)>','<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)>','<android.webkit.WebViewClassic: boolean access$3800(android.webkit.WebViewClassic)>','<android.net.sip.SipAudioCall: android.net.sip.SipSession access$200(android.net.sip.SipAudioCall)>','<com.android.internal.telephony.RIL: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.sip.SipSession$1: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>','<com.android.internal.widget.multiwaveview.Tweener: void reset()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>','<android.view.textservice.SpellCheckerSession: void access$100(android.view.textservice.SpellCheckerSession,android.view.textservice.SentenceSuggestionsInfo[])>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: int access$5800(com.android.server.PowerManagerService$ScreenBrightnessAnimator)>','<android.graphics.drawable.GradientDrawable$GradientState: void setColors(int[])>','<com.android.internal.statusbar.StatusBarIconList: void <init>(android.os.Parcel)>','<android.widget.ListPopupWindow: void setAnchorView(android.view.View)>','<android.widget.EditText: void setSelection(int,int)>','<com.android.server.pm.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>','<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>','<android.view.VelocityTracker: void setNextPoolable(android.view.VelocityTracker)>','<android.widget.TextView: int getMinLines()>','<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager$OnCancelListener)>','<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>','<com.android.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>','<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>','<android.view.InputChannel: void dispose()>','<android.app.Activity: void onStart()>','<android.webkit.WebViewClassic: void updateDoubleTapZoom(int)>','<com.android.server.NsdService: boolean access$1700(com.android.server.NsdService,int,java.lang.String)>','<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>','<android.animation.PropertyValuesHolder: void access$200(java.lang.Object,int,int)>','<com.android.server.WallpaperManagerService: void access$200(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>','<android.text.SpannableString: int nextSpanTransition(int,int,java.lang.Class)>','<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>','<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)>','<android.view.inputmethod.InputMethodManager: void windowDismissed(android.os.IBinder)>','<com.android.uiautomator.core.UiSelector: boolean isLeaf()>','<com.android.internal.telephony.BaseCommands: void setOnNewCdmaSms(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void acceptCall()>','<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>','<android.widget.GridView: void setStretchMode(int)>','<android.webkit.WebViewClassic: boolean onTrackballEvent(android.view.MotionEvent)>','<android.app.SharedPreferencesImpl$MemoryCommitResult: void setDiskWriteResult(boolean)>','<android.view.MenuInflater: java.lang.Class[] access$500()>','<android.database.sqlite.SQLiteConnection$PreparedStatementCache: void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection$PreparedStatement,android.database.sqlite.SQLiteConnection$PreparedStatement)>','<com.android.server.wm.Session: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>','<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)>','<android.os.Debug$InstructionCount: int globalMethodInvocations()>','<android.inputmethodservice.KeyboardView$SwipeTracker: void computeCurrentVelocity(int)>','<android.hardware.Camera: android.hardware.Camera open(int)>','<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>','<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>','<com.android.server.MountService: java.util.Map access$2000(com.android.server.MountService)>','<com.android.server.am.AppWaitingForDebuggerDialog$1: void <init>(com.android.server.am.AppWaitingForDebuggerDialog)>','<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)>','<android.media.AudioManager: boolean isWiredHeadsetOn()>','<android.widget.Spinner: void layout(int,boolean)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void <init>(android.graphics.drawable.Drawable)>','<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>','<android.telephony.SignalStrength: int getEvdoDbm()>','<android.view.View: int getVerticalScrollbarWidth()>','<android.filterfw.geometry.Rectangle: float getHeight()>','<android.view.View: void dispatchWindowVisibilityChanged(int)>','<android.webkit.WebViewClassic: float tileProfilingGetFloat(int,int,java.lang.String)>','<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>','<android.media.IRingtonePlayer$Stub$Proxy: void stopAsync()>','<com.android.internal.telephony.ApnContext: boolean isReady()>','<android.view.GLES20RecordingCanvas$1: void onAcquired(android.util.Poolable)>','<com.android.server.WifiService$WifiLock: java.lang.String toString()>','<android.net.wifi.WifiManager: void disable(android.net.wifi.WifiManager$Channel,int,android.net.wifi.WifiManager$ActionListener)>','<android.os.DropBoxManager$Entry: long getTimeMillis()>','<android.net.wifi.WifiStateMachine: void access$7300(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.webkit.AccessibilityInjector: boolean performAccessibilityAction(int,android.os.Bundle)>','<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)>','<android.location.Criteria: boolean access$802(android.location.Criteria,boolean)>','<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>','<android.app.ActivityThread$ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>','<com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>','<com.android.internal.policy.impl.LockScreen: void cleanUp()>','<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>','<android.app.admin.IDevicePolicyManager$Stub: void <init>()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()>','<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>','<android.webkit.WebView: int access$1802(android.webkit.WebView,int)>','<android.content.pm.ManifestDigest: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentProvider: void onTrimMemory(int)>','<android.app.Activity: void performCreate(android.os.Bundle)>','<com.android.internal.telephony.DataConnectionAc: void <clinit>()>','<android.text.LoginFilter$UsernameFilterGeneric: void <init>(boolean)>','<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>','<com.android.uiautomator.core.UiDevice: boolean pressSearch()>','<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>','<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>','<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>','<android.content.SyncManager$SyncHandler: java.lang.Long access$1300(android.content.SyncManager$SyncHandler)>','<android.app.ActivityThread: void access$1400(android.app.ActivityThread,android.app.ActivityThread$NewIntentData)>','<android.view.ViewRootImpl$TraversalRunnable: void <init>(android.view.ViewRootImpl)>','<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>','<android.view.InputDevice: int getSources()>','<android.widget.RemoteViewsAdapter: android.view.LayoutInflater access$1200(android.widget.RemoteViewsAdapter)>','<com.android.internal.telephony.RetryManager: boolean isRetryNeeded()>','<android.content.ContentService: boolean getMasterSyncAutomatically()>','<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager: void userActivity()>','<android.app.ActivityGroup: void finishActivity(int)>','<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>','<android.text.style.AbsoluteSizeSpan: void <init>(int)>','<android.text.format.DateUtils: void <clinit>()>','<com.android.server.pm.PackageSettingBase: void setEnabledComponents(java.util.HashSet,int)>','<android.content.CursorEntityIterator: android.content.Entity next()>','<com.android.internal.telephony.RestrictedState: boolean isPsRestricted()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isAdminActive(android.content.ComponentName)>','<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>','<android.view.KeyEvent$DispatcherState: void reset()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>','<android.animation.AnimatorSet: void start()>','<com.android.internal.telephony.IccRecords: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>','<android.view.GLES20Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>','<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>','<android.text.TextDirectionHeuristics$FirstStrong: android.text.TextDirectionHeuristics$TriState checkRtl(char[],int,int)>','<com.android.server.pm.Installer: int rename(java.lang.String,java.lang.String)>','<android.view.animation.AccelerateInterpolator: void <init>()>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>','<android.media.TimedText$Style: void <init>(int,int,int,boolean,boolean,boolean,int,int)>','<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>','<android.util.SparseIntArray: void clear()>','<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)>','<com.android.server.net.NetworkPolicyManagerService$5: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.TaskRecord: java.lang.String toString()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$10900(android.net.wifi.WifiStateMachine)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.ISipSessionListener)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: void invalidateCache()>','<android.view.WindowManagerImpl$CompatModeWrapper: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getInternationalPrefix()>','<android.content.IContentService$Stub$Proxy: java.util.List getCurrentSyncs()>','<com.android.server.PowerManagerService: int access$2002(com.android.server.PowerManagerService,int)>','<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()>','<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()>','<com.android.server.LocationManagerService$Receiver: boolean isListener()>','<android.widget.Editor$Blink: void uncancel()>','<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void onInputEvent(android.view.InputEvent)>','<android.net.DummyDataStateTracker: boolean teardown()>','<android.app.Instrumentation: void sendCharacterSync(int)>','<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>','<com.android.internal.telephony.IWapPushManager$Stub: android.os.IBinder asBinder()>','<android.accounts.AccountManager$12: void <init>(android.accounts.AccountManager,android.accounts.OnAccountsUpdateListener,android.accounts.Account[])>','<com.android.server.PowerManagerService: void setAttentionLight(boolean,int)>','<android.os.UserId: boolean isSameApp(int,int)>','<android.os.BatteryStats$HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats$HistoryItem,long)>','<android.hardware.Sensor: float getResolution()>','<android.filterfw.core.SerializedFrame: int[] getInts()>','<com.android.internal.os.BatteryStatsImpl: void noteStopWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,int)>','<android.webkit.DeviceMotionAndOrientationManager: void <clinit>()>','<android.app.DownloadManager$Query: android.app.DownloadManager$Query setFilterByStatus(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String)>','<com.android.internal.view.InputBindResult: int describeContents()>','<com.android.internal.content.PackageHelper: void <init>()>','<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText access$700(com.android.internal.policy.impl.AccountUnlockScreen)>','<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int getApnProfileID(java.lang.String)>','<android.view.FocusFinder$SequentialFocusComparator: void setRoot(android.view.ViewGroup)>','<android.database.sqlite.SQLiteDiskIOException: void <init>()>','<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>','<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String)>','<com.android.server.NativeDaemonConnector$ResponseQueue: void <init>(int)>','<com.android.server.StatusBarManagerService: int gatherDisableActionsLocked()>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>','<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)>','<android.opengl.GLLogWrapper: void glLoadMatrixx(int[],int)>','<android.webkit.WebView: boolean access$1100(android.webkit.WebView,int,int,int,int,int,int,int,int,boolean)>','<android.provider.ContactsContract$SearchSnippetColumns: void <init>()>','<android.security.IKeyChainAliasCallback$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.ApnContext: void decWaitingApnsPermFailCount()>','<android.text.method.TextKeyListener$Capitalize: android.text.method.TextKeyListener$Capitalize valueOf(java.lang.String)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.os.IBinder asBinder()>','<android.nfc.NfcActivityManager: void onActivityCreated(android.app.Activity,android.os.Bundle)>','<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>','<android.app.ActivityThread$ActivityClientRecord: void <init>()>','<android.filterpacks.videosrc.MediaSource: int access$402(android.filterpacks.videosrc.MediaSource,int)>','<android.app.Activity: void runOnUiThread(java.lang.Runnable)>','<android.os.SystemVibrator: void <init>()>','<com.android.internal.telephony.GsmAlphabet$LanguagePairCount: void <init>(int)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: boolean hasStableIds()>','<com.android.internal.policy.impl.PasswordUnlockScreen$3: void afterTextChanged(android.text.Editable)>','<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.telephony.DataConnection: java.lang.String cmdToString(int)>','<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>','<com.android.internal.policy.impl.PhoneWindowManager$20: void run()>','<com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State[] values()>','<android.hardware.input.IInputManager$Stub$Proxy: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>','<android.location.GpsSatellite: void <init>(int)>','<android.preference.PreferenceScreen: android.app.Dialog getDialog()>','<android.widget.Editor: boolean reportExtractedText()>','<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)>','<android.view.View: boolean hasFocusable()>','<android.accessibilityservice.UiTestAutomationBridge: void <clinit>()>','<android.os.storage.IMountShutdownObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>','<android.server.BluetoothService: void <init>(android.content.Context)>','<android.server.BluetoothService: boolean connectHeadset(java.lang.String)>','<android.webkit.WebHistoryItem: void <init>(byte[])>','<android.net.wifi.p2p.WifiP2pConfig: void <init>(java.lang.String)>','<com.android.server.sip.SipWakeLock: void reset()>','<android.webkit.WebViewCore$1: void updateQuota(long)>','<com.android.internal.widget.LockPatternUtils: boolean isPermanentlyLocked()>','<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>','<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>','<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)>','<com.android.internal.os.PkgUsageStats$1: com.android.internal.os.PkgUsageStats createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String getSid()>','<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>','<android.util.LruCache: java.lang.String toString()>','<com.android.server.sip.SipSessionListenerProxy$9: void run()>','<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection access$200(android.speech.tts.TextToSpeech)>','<com.android.internal.policy.impl.FaceUnlock: android.os.Handler access$100(com.android.internal.policy.impl.FaceUnlock)>','<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsWithPinFromDevice(android.net.wifi.WpsInfo)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$500(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.filterfw.core.Filter: int getNumberOfInputs()>','<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>','<android.os.ParcelFileDescriptor: void <clinit>()>','<android.view.animation.AnimationSet: void <init>(boolean)>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getX()>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onDone(java.lang.String)>','<android.media.IRemoteVolumeObserver$Stub: android.media.IRemoteVolumeObserver asInterface(android.os.IBinder)>','<android.net.NetworkInfo: int getType()>','<android.media.AudioService$AudioServiceBroadcastReceiver: void <init>(android.media.AudioService,android.media.AudioService$1)>','<com.android.internal.app.IUsageStats$Stub$Proxy: void noteLaunchTime(android.content.ComponentName,int)>','<android.os.INetworkManagementService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>','<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>','<android.animation.LayoutTransition$3: void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup)>','<com.android.internal.policy.impl.PatternUnlockScreen: com.android.internal.widget.LockPatternView access$000(com.android.internal.policy.impl.PatternUnlockScreen)>','<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String,java.lang.String)>','<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getEarliestConnection()>','<android.filterfw.core.FilterContext: void tearDown()>','<android.app.FragmentState: int describeContents()>','<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>','<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>','<android.app.Dialog: void <init>(android.content.Context)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void restartDataStallAlarm()>','<android.bluetooth.BluetoothClass: java.lang.String toString()>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void setBoolean(java.lang.String,boolean,int)>','<android.net.NetworkPolicy: boolean equals(java.lang.Object)>','<android.webkit.WebSettingsClassic: void setAllowUniversalAccessFromFileURLs(boolean)>','<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)>','<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>','<com.android.server.pm.Settings: void <clinit>()>','<android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc valueOf(java.lang.String)>','<com.android.internal.telephony.cat.ComprehensionTlv: void <init>(int,boolean,int,byte[],int)>','<android.media.AudioService: void access$7400(android.media.AudioService,java.lang.String)>','<android.view.View: boolean showContextMenu()>','<android.app.SharedPreferencesImpl: void access$100(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl$MemoryCommitResult,java.lang.Runnable)>','<android.net.wifi.WifiNative: void enableBackgroundScan(boolean)>','<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isMinInfoReady()>','<com.android.internal.policy.impl.ShortcutManager: void <init>(android.content.Context,android.os.Handler)>','<android.view.ViewConfiguration: float getScrollFriction()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScanWifiLockAcquired(int)>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void reportFailedUnlockAttempt()>','<com.android.server.NativeDaemonConnector: void run()>','<android.net.wifi.WifiStateMachine: int access$16304(android.net.wifi.WifiStateMachine)>','<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean isDiscovering()>','<com.android.server.location.GpsLocationProvider: void enable()>','<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>','<android.webkit.WebSettings: void setSaveFormData(boolean)>','<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>','<android.widget.ListView: void layoutChildren()>','<com.android.server.MountService$UnmountObbAction: void handleError()>','<android.view.InputDevice: int describeContents()>','<com.android.server.pm.Installer: int unlinkNativeLibraryDirectory(java.lang.String)>','<com.android.internal.widget.SlidingTab$Slider: void startAnimation(android.view.animation.Animation,android.view.animation.Animation)>','<android.app.Instrumentation$ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>','<android.content.pm.ManifestDigest: void <clinit>()>','<android.media.AudioService: void unregisterMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.widget.SearchView$2: void <init>(android.widget.SearchView)>','<android.animation.ValueAnimator: boolean isRunning()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<com.android.internal.telephony.UUSInfo: void setDcs(int)>','<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>','<android.view.ViewGroup: void handleFocusGainInternal(int,android.graphics.Rect)>','<android.view.accessibility.AccessibilityNodeInfoCache: void clear()>','<android.text.format.Time: boolean after(android.text.format.Time)>','<android.location.GeocoderParams: java.util.Locale getLocale()>','<android.app.SearchDialog: void launchQuerySearch(int,java.lang.String)>','<com.android.internal.telephony.PhoneBase: boolean getMessageWaitingIndicator()>','<android.view.ViewPropertyAnimator$2: void run()>','<android.content.BroadcastReceiver$PendingResult: void sendFinished(android.app.IActivityManager)>','<android.location.Country$1: android.location.Country[] newArray(int)>','<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>','<android.graphics.drawable.Drawable: android.graphics.Insets getLayoutInsets()>','<android.content.res.Resources: boolean getBoolean(int)>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getNonEmptyLine()>','<android.widget.ProgressBar$RefreshData$1: void onAcquired(android.widget.ProgressBar$RefreshData)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState: void enter()>','<android.net.wifi.WifiConfigStore: boolean saveConfig()>','<android.accounts.AccountManagerService$UserAccounts: java.util.HashMap access$600(android.accounts.AccountManagerService$UserAccounts)>','<android.provider.Telephony$Mms: boolean isEmailAddress(java.lang.String)>','<com.android.internal.policy.impl.SimUnlockScreen$1$1: void <init>(com.android.internal.policy.impl.SimUnlockScreen$1,boolean)>','<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>','<com.android.ex.variablespeed.VariableSpeed: com.android.ex.variablespeed.MediaPlayerProxy createVariableSpeed(java.util.concurrent.Executor)>','<com.android.server.StatusBarManagerService$2: void run()>','<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()>','<android.os.Bundle: void putAll(android.os.Bundle)>','<com.android.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>','<android.os.Bundle$1: android.os.Bundle[] newArray(int)>','<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>','<com.android.server.am.StrictModeViolationDialog: com.android.server.am.ProcessRecord access$000(com.android.server.am.StrictModeViolationDialog)>','<android.media.Ringtone: void stop()>','<android.view.ViewRootImpl$2: void <init>(android.view.ViewRootImpl)>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void pokeWakelock(int)>','<android.accounts.Account: void <clinit>()>','<android.webkit.WebView$PrivateAccess: void awakenScrollBars(int,boolean)>','<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.ViewPropertyAnimator: java.util.HashMap access$400(android.view.ViewPropertyAnimator)>','<android.graphics.Bitmap: void <clinit>()>','<android.app.DownloadManager$CursorTranslator: void <clinit>()>','<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,int,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration)>','<com.android.internal.telephony.Call$State: boolean isAlive()>','<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>','<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>','<com.android.server.am.ActivityStack$1: void handleMessage(android.os.Message)>','<android.provider.ContactsContract$CommonDataKinds$Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<com.android.internal.telephony.PhoneProxy: void getSmscAddress(android.os.Message)>','<com.android.server.pm.Settings: boolean readLPw(java.util.List)>','<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void start(com.android.server.sip.SipSessionGroup)>','<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>','<android.view.ViewRootImpl: void access$100(android.view.View)>','<android.opengl.GLLogWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>','<android.media.AudioService: void access$5800(android.media.AudioService,android.media.AudioService$RemoteControlStackEntry,int)>','<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>','<android.os.Message$1: android.os.Message createFromParcel(android.os.Parcel)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2400(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.app.ActivityThread$ActivityClientRecord: java.lang.String toString()>','<com.android.server.location.PassiveProvider: void <init>(android.location.ILocationManager)>','<com.android.server.WifiService: void access$1500(com.android.server.WifiService)>','<com.android.internal.util.ProcFileReader: long nextLong()>','<android.net.NetworkStatsHistory: void recordData(long,long,long,long)>','<com.android.server.pm.PackageManagerService$7: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDeleteObserver)>','<android.net.LinkAddress$1: void <init>()>','<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker$1: void run()>','<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: void onInputEvent(android.view.InputEvent)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void writeToParcel(android.os.Parcel,long)>','<android.nfc.TechListParcel$1: android.nfc.TechListParcel[] newArray(int)>','<android.nfc.INfcAdapter$Stub$Proxy: void dispatch(android.nfc.Tag)>','<android.view.View$9: java.lang.Object get(java.lang.Object)>','<com.android.internal.telephony.PhoneBase: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$PostDialState getPostDialState()>','<android.media.MediaPlayer$TrackInfo$1: android.media.MediaPlayer$TrackInfo[] newArray(int)>','<com.android.server.net.NetworkStatsCollection: long getFirstAtomicBucketMillis()>','<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$4800(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.server.BluetoothEventLoop: void getProfileProxy()>','<android.net.INetworkPolicyManager$Stub$Proxy: void registerListener(android.net.INetworkPolicyListener)>','<android.database.sqlite.SQLiteQuery: java.lang.String toString()>','<android.app.Activity: boolean isTaskRoot()>','<android.webkit.WebViewDatabase: void clearUsernamePassword()>','<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$CellBroadcastRangeManager: void addRange(int,int,boolean)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: boolean access$902(android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection,boolean)>','<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void takeEmergencyCallAction()>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>','<android.app.ProgressDialog: int getProgress()>','<android.widget.RelativeLayout$LayoutParams: int access$312(android.widget.RelativeLayout$LayoutParams,int)>','<com.android.internal.telephony.cat.IconLoader: void loadIcon(int,android.os.Message)>','<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>','<com.android.internal.telephony.cdma.CdmaConnection: long getDurationMillis()>','<com.android.server.pm.PackageManagerService: boolean hasSystemFeature(java.lang.String)>','<android.app.Fragment: void restoreViewState()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>','<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>','<android.widget.EditText: void setSelection(int)>','<android.provider.ContactsContract$CommonDataKinds$Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDeath()>','<android.content.pm.IPackageDataObserver$Stub$Proxy: void onRemoveCompleted(java.lang.String,boolean)>','<android.app.Instrumentation$ActivityResult: void <init>(int,android.content.Intent)>','<com.android.internal.app.AlertController: void setCustomTitle(android.view.View)>','<com.android.internal.telephony.BaseCommands: void unregisterForSignalInfo(android.os.Handler)>','<com.android.internal.telephony.cdma.CdmaCall$1: void <clinit>()>','<android.provider.Settings$System: void clearConfiguration(android.content.res.Configuration)>','<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>','<android.content.ClipData: void toShortString(java.lang.StringBuilder)>','<android.text.Layout: int getWidth()>','<android.database.sqlite.SQLiteDatabase$2: boolean accept(java.io.File)>','<android.util.SparseLongArray: long get(int)>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcActiveState access$1500(com.android.internal.telephony.DataConnection)>','<com.android.internal.os.BatteryStatsImpl: byte[] readFully(java.io.FileInputStream)>','<android.view.AccessibilityInteractionController$PrivateHandler: void handleMessage(android.os.Message)>','<android.os.IPowerManager$Stub$Proxy: void setPokeLock(int,android.os.IBinder,java.lang.String)>','<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>','<android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,boolean,int)>','<android.webkit.WebViewClassic: int getWidth()>','<android.widget.ListPopupWindow$ListSelectorHider: void run()>','<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)>','<android.app.SearchableInfo: int getVoiceMaxResults()>','<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)>','<android.server.BluetoothService: int getPanDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean isSameMobileAndFixedLinePattern()>','<android.app.Application: void onTerminate()>','<com.android.internal.telephony.gsm.SmsCbHeader: int getSerialNumber()>','<com.android.internal.location.GpsNetInitiatedHandler: byte[] stringToByteArray(java.lang.String,boolean)>','<com.android.internal.widget.TransportControlView: void setCallback(com.android.internal.widget.LockScreenWidgetCallback)>','<com.android.vcard.VCardUtils: java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String)>','<android.provider.Telephony$Mms$Part: void <init>()>','<android.content.BroadcastReceiver: void setResultCode(int)>','<android.filterfw.core.Filter: void addInputPort(java.lang.String)>','<com.android.server.sip.SipService: boolean access$500(com.android.server.sip.SipService,com.android.server.sip.SipService$SipSessionGroupExt,com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])>','<com.android.server.net.NetworkStatsService: int access$1400(com.android.server.net.NetworkStatsService)>','<android.telephony.CellLocation: void requestLocationUpdate()>','<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>','<android.widget.Editor$SelectionStartHandleView: void updateSelection(int)>','<android.util.TypedValue: float complexToFraction(int,float,float)>','<android.provider.SyncStateContract$Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>','<android.location.Criteria$1: void <init>()>','<android.renderscript.RenderScript: void nContextBindSampler(int,int)>','<android.app.ApplicationErrorReport$1: void <init>()>','<android.widget.TextView: void setInputType(int)>','<android.telephony.CellIdentity: void <init>(android.os.Parcel)>','<android.net.wifi.WifiManager: boolean isWifiApEnabled()>','<android.webkit.WebView: boolean canGoBack()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionContains(java.lang.String)>','<com.android.server.usb.UsbService: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>','<com.android.server.MountService: void access$1100(com.android.server.MountService,boolean)>','<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()>','<com.android.internal.telephony.cat.CatException: void <init>()>','<com.android.server.wm.WindowManagerService: void dumpWindowsNoHeaderLocked(java.io.PrintWriter,boolean,java.util.ArrayList)>','<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.net.http.IdleCache: void access$200(android.net.http.IdleCache)>','<android.view.animation.LayoutAnimationController: boolean isDone()>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: int hashCode()>','<com.android.internal.telephony.PhoneBase: int getCdmaEriIconIndex()>','<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>','<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()>','<android.telephony.SignalStrength: int getEvdoSnr()>','<com.android.server.am.PendingThumbnailsRecord: void <init>(android.app.IThumbnailReceiver)>','<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>','<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>','<android.view.GLES20DisplayList: void setCameraDistance(float)>','<android.net.InterfaceConfiguration: void clearFlag(java.lang.String)>','<android.os.Handler: android.os.Message obtainMessage(int)>','<android.bluetooth.IBluetooth$Stub$Proxy: int addRfcommServiceRecord(java.lang.String,android.os.ParcelUuid,int,android.os.IBinder)>','<android.app.Activity: java.lang.String getLocalClassName()>','<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>','<com.android.internal.widget.PointerLocationView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>','<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()>','<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapContentURI(int)>','<android.app.SharedPreferencesImpl$EditorImpl$3: void run()>','<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.graphics.Color: void RGBToHSV(int,int,int,float[])>','<android.app.Instrumentation$Idler: void <init>(java.lang.Runnable)>','<android.content.ComponentName$1: android.content.ComponentName createFromParcel(android.os.Parcel)>','<android.text.style.TextAppearanceSpan: int getTextStyle()>','<android.webkit.WebSettings: int getMinimumLogicalFontSize()>','<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>','<android.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()>','<com.android.internal.os.BatteryStatsImpl$2: com.android.internal.os.BatteryStatsImpl createFromParcel(android.os.Parcel)>','<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>','<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>','<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()>','<android.server.BluetoothAdapterStateMachine: void access$700(android.server.BluetoothAdapterStateMachine,int)>','<android.graphics.Matrix: boolean preRotate(float,float,float)>','<com.android.internal.policy.impl.FaceUnlock: int getQuality()>','<android.net.sip.SipSessionAdapter: void <init>()>','<android.net.LinkAddress: int hashCode()>','<android.widget.RemoteViews$Action: int describeContents()>','<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getProcessStats()>','<android.widget.TextView: void sendAccessibilityEvent(int)>','<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIconVisibility(java.lang.String,boolean)>','<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>','<android.webkit.CallbackProxy: void onGeolocationPermissionsHidePrompt()>','<android.net.WebAddress: void setScheme(java.lang.String)>','<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.BaseCommands: void unregisterForRedirectedNumberInfo(android.os.Handler)>','<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>','<android.media.AudioManager: void loadSoundEffects()>','<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteAllHosts()>','<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)>','<android.webkit.WebViewClassic: int access$2800(android.webkit.WebViewClassic)>','<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<android.os.UserId: int getCallingUserId()>','<android.webkit.CacheManager: boolean removeAllCacheFiles()>','<android.view.View: boolean isClickable()>','<com.android.internal.telephony.gsm.SIMRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$6300(android.bluetooth.BluetoothDeviceProfileState)>','<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$2100(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.internal.telephony.IccFileHandler: void handleMessage(android.os.Message)>','<android.view.ViewDebug$3: void post(java.lang.Object[])>','<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter$Blur)>','<android.webkit.CacheManager$CacheResult: long getContentLength()>','<android.view.HardwareCanvas: int invokeFunctors(android.graphics.Rect)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getPhoneNumber()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>','<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>','<com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>','<android.animation.ObjectAnimator: java.lang.Object getTarget()>','<android.webkit.HTML5VideoViewProxy: boolean onInfo(android.media.MediaPlayer,int,int)>','<android.net.sip.ISipSession$Stub$Proxy: void changeCall(java.lang.String,int)>','<android.view.Surface$CompatibleCanvas: int getHeight()>','<com.android.server.am.UsageStatsService: int[] access$000()>','<android.os.MessageQueue: boolean hasMessages(android.os.Handler,java.lang.Runnable,java.lang.Object)>','<android.os.MemoryFile: void close()>','<android.media.AudioService$1: void onError(int)>','<android.view.ViewRootImpl: android.view.View getView()>','<com.android.internal.telephony.AdnRecord$1: com.android.internal.telephony.AdnRecord createFromParcel(android.os.Parcel)>','<android.widget.AbsListView: void clearChoices()>','<android.view.IWindowSession$Stub$Proxy: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>','<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)>','<android.view.View$7: void <init>(java.lang.String)>','<android.bluetooth.BluetoothTetheringDataTracker: void defaultRouteSet(boolean)>','<android.view.View: void onHoverChanged(boolean)>','<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>','<android.app.ApplicationPackageManager: void revokePermission(java.lang.String,java.lang.String)>','<android.nfc.tech.IsoDep: boolean isExtendedLengthApduSupported()>','<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>','<android.app.ActivityManager$RunningTaskInfo$1: void <init>()>','<android.net.wifi.p2p.WifiP2pDevice: boolean wpsKeypadSupported()>','<android.webkit.WebViewClassic$Factory: void setPlatformNotificationsEnabled(boolean)>','<android.bluetooth.BluetoothDeviceProfileState: android.content.Context access$1600(android.bluetooth.BluetoothDeviceProfileState)>','<android.server.BluetoothService: void sendProfileStateMessage(int,int)>','<com.android.internal.telephony.DataConnection: boolean configureRetry(int,int,int)>','<android.widget.RemoteViews$MemoryUsageCounter: void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1)>','<android.webkit.WebViewCore$FindAllRequest: void <init>(java.lang.String)>','<android.webkit.MimeTypeMap: java.lang.String remapGenericMimeType(java.lang.String,java.lang.String,java.lang.String)>','<android.net.LinkProperties: void clear()>','<android.view.Window: void setCallback(android.view.Window$Callback)>','<android.net.sip.SimpleSessionDescription: void <init>(long,java.lang.String)>','<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>','<com.android.server.input.InputManagerService: void removeKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<com.android.internal.telephony.DataConnection$DcActiveState: void enter()>','<com.android.server.am.ActivityManagerService: void batteryPowerChanged(boolean)>','<android.content.Entity: void <init>(android.content.ContentValues)>','<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$1300(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.uiautomator.core.UiDevice: boolean isPhone()>','<android.net.wifi.WifiNative: boolean startWpsPbc(java.lang.String,java.lang.String)>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: void <init>(com.android.internal.policy.impl.SimUnlockScreen,java.lang.String)>','<android.hardware.input.IInputDevicesChangedListener$Stub: android.hardware.input.IInputDevicesChangedListener asInterface(android.os.IBinder)>','<android.view.IOnKeyguardExitResult$Stub$Proxy: void onKeyguardExitResult(boolean)>','<android.preference.PreferenceFragment: void <init>()>','<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>','<com.android.vcard.VCardParserImpl_V30: java.lang.String maybeUnescapeCharacter(char)>','<com.android.server.NetworkManagementSocketTagger$1: void <init>()>','<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.io.OutputStream)>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String[] getSecureContainerList()>','<android.graphics.ColorMatrix: void <init>(float[])>','<com.android.server.sip.SipSessionListenerProxy: void onRegistrationTimeout(android.net.sip.ISipSession)>','<android.net.wifi.WifiStateMachine$SoftApStartingState: boolean processMessage(android.os.Message)>','<com.android.internal.util.StateMachine: void setProcessedMessagesSize(int)>','<com.android.internal.telephony.gsm.GsmCall: void hangup()>','<android.hardware.usb.UsbDevice: int getDeviceId()>','<com.android.server.input.InputManagerService$4: void visitKeyboardLayout(android.content.res.Resources,java.lang.String,java.lang.String,java.lang.String,int)>','<android.widget.LinearLayout: void layoutVertical()>','<android.widget.ProgressBar$SavedState$1: android.widget.ProgressBar$SavedState createFromParcel(android.os.Parcel)>','<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>','<android.net.wifi.WifiStateMachine: void access$7000(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>','<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasVoip()>','<android.view.ViewRootImpl$W: void dispatchAppVisibility(boolean)>','<com.android.server.am.ProcessList: void <init>()>','<android.animation.KeyframeSet: android.animation.KeyframeSet clone()>','<android.opengl.GLLogWrapper: void glTexEnvf(int,int,float)>','<android.server.BluetoothService: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.location.ILocationProvider$Stub$Proxy: void addListener(int)>','<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>','<android.app.IServiceConnection$Stub: void <init>()>','<android.os.Debug: void startMethodTracing(java.lang.String,int)>','<android.widget.TextView: boolean getFreezesText()>','<android.graphics.drawable.LayerDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>','<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>','<android.webkit.DeviceMotionAndOrientationManager: void setMockOrientation(boolean,double,boolean,double,boolean,double)>','<android.app.ActivityThread: void access$1300(android.app.ActivityThread,android.app.ActivityThread$AppBindData)>','<android.app.ISearchManager$Stub$Proxy: java.util.List getGlobalSearchActivities()>','<android.util.LongSparseArray: void put(long,java.lang.Object)>','<com.android.ex.variablespeed.MediaPlayerDataSource: void <init>(android.content.Context,android.net.Uri)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer$1: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer,int)>','<android.app.IAlarmManager$Stub$Proxy: void setTimeZone(java.lang.String)>','<android.content.pm.IPackageMoveObserver$Stub: android.os.IBinder asBinder()>','<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>','<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>','<android.net.sip.SipSession$1: void <init>(android.net.sip.SipSession)>','<android.media.AudioService$AudioHandler$1: void <init>(android.media.AudioService$AudioHandler)>','<android.hardware.Camera$Size: boolean equals(java.lang.Object)>','<android.widget.RemoteViews$SetOnClickFillInIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<com.android.server.input.InputFilter: void onInstalled()>','<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>','<com.android.internal.policy.impl.PhoneWindowManager: void setSafeMode(boolean)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)>','<android.content.ContentProviderOperation$Builder: boolean access$800(android.content.ContentProviderOperation$Builder)>','<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>','<android.nfc.INdefPushCallback$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.WifiService: void access$500(com.android.server.WifiService)>','<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>','<android.os.Bundle: void putShortArray(java.lang.String,short[])>','<android.content.SyncManager: void clearScheduledSyncOperations(android.accounts.Account,int,java.lang.String)>','<android.content.Intent: void <init>(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<android.net.IConnectivityManager$Stub$Proxy: void setDataDependency(int,boolean)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>','<android.widget.SearchView$5: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>','<android.media.MediaRouter$RouteGroup: int getRouteCount()>','<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources)>','<com.android.server.am.ActivityRecord: boolean isInHistory()>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: com.android.i18n.phonenumbers.PhoneNumberMatch next()>','<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>','<android.net.wifi.WifiWatchdogStateMachine$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.policy.impl.PhoneWindowManager: void readLidState()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBluetoothOff()>','<android.view.HardwareRenderer$GlRenderer: void destroy(boolean)>','<com.android.internal.policy.impl.FaceUnlock$1: void onServiceDisconnected(android.content.ComponentName)>','<android.text.format.Time: int getWeekNumber()>','<android.net.http.RequestHandle: void pauseRequest(boolean)>','<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>','<android.view.ViewRootImpl$2: android.view.Surface getSurface()>','<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>','<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>','<android.net.TrafficStats: long getRxBytes(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>','<android.view.Window: android.view.View findViewById(int)>','<android.view.View$ListenerInfo: void <init>()>','<com.android.uiautomator.core.UiSelector: boolean getBoolean(int)>','<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$PerProcessState access$3700(android.server.BluetoothAdapterStateMachine)>','<android.ddm.DdmHandleAppName: void disconnected()>','<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>','<android.media.AudioService: void access$5200(android.media.AudioService,int,boolean)>','<android.media.AudioService$ForceControlStreamClient: void release()>','<android.webkit.WebSettingsClassic: void <init>(android.content.Context,android.webkit.WebViewClassic)>','<android.view.ViewGroup: boolean isAnimationCacheEnabled()>','<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccounts(int)>','<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>','<android.text.Layout$TabStops: float nextTab(float)>','<com.android.internal.os.BatteryStatsImpl: void addHistoryBufferLocked(long,byte)>','<com.android.server.PowerManagerService$PokeLock: void binderDied()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>','<com.android.internal.widget.multiwaveview.Ease$Quad$3: void <init>()>','<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>','<com.android.internal.widget.LockPatternUtils: boolean isTactileFeedbackEnabled()>','<com.android.internal.telephony.PhoneProxy: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>','<android.speech.tts.TtsEngines: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>','<android.content.SyncAdapterType: int describeContents()>','<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>','<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>','<android.widget.Scroller: void <clinit>()>','<android.view.View: void onAttachedToWindow()>','<com.android.server.input.PersistentDataStore$InputDeviceState: void loadFromXml(org.xmlpull.v1.XmlPullParser)>','<android.graphics.Bitmap: boolean hasAlpha()>','<com.android.internal.app.ActionBarImpl$TabImpl: void select()>','<com.android.server.am.BatteryStatsService: void noteScanWifiLockAcquiredFromSource(android.os.WorkSource)>','<android.accounts.AccountManager$3: void doWork()>','<com.android.server.input.InputManagerService$InputFilterHost: void <init>(com.android.server.input.InputManagerService,com.android.server.input.InputManagerService$1)>','<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>','<android.app.IActivityController$Stub$Proxy: int appNotResponding(java.lang.String,int,java.lang.String)>','<android.net.http.Headers: void parseHeader(org.apache.http.util.CharArrayBuffer)>','<android.util.SparseBooleanArray: void clear()>','<com.android.server.wm.DragState: void endDragLw()>','<android.app.Activity: void setContentView(int)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>','<android.app.IWallpaperManager$Stub$Proxy: void clearWallpaper()>','<android.net.NetworkIdentity: boolean getRoaming()>','<android.content.Intent: void removeCategory(java.lang.String)>','<com.android.server.PowerManagerService$UnsynchronizedWakeLock: java.lang.String toString()>','<android.os.UEventObserver$UEventThread: void run()>','<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.webkit.WebViewClassic: void clearHistory()>','<android.content.res.XmlBlock$Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>','<com.android.server.WallpaperManagerService: void switchUser(int)>','<android.app.Fragment: boolean equals(java.lang.Object)>','<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminUncheckedLocked(android.content.ComponentName)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Phone getPhone()>','<com.android.internal.location.DummyLocationProvider: boolean supportsSpeed()>','<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>','<com.android.server.NsdService: boolean access$2100(com.android.server.NsdService,int,android.net.nsd.NsdServiceInfo)>','<android.net.wifi.WifiConfigStore: java.lang.String access$100()>','<android.app.backup.IBackupManager$Stub$Proxy: android.content.Intent getConfigurationIntent(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker$1: void <clinit>()>','<android.telephony.SmsCbLocation$1: android.telephony.SmsCbLocation[] newArray(int)>','<android.preference.PreferenceGroup: void setEnabled(boolean)>','<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>','<android.view.WindowOrientationListener$SensorEventListenerImpl: void <clinit>()>','<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>','<android.app.ApplicationThreadNative: void <init>()>','<com.android.internal.logging.AndroidHandler: void flush()>','<android.text.SpannableStringBuilder: java.lang.String substring(int,int)>','<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>','<com.android.server.sip.SipHelper: void sendInviteBusyHere(javax.sip.RequestEvent,javax.sip.ServerTransaction)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void release()>','<com.android.server.pm.PackageManagerService: void systemReady()>','<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>','<android.accounts.Account: void <init>(android.os.Parcel)>','<android.widget.Editor$HandleView: void updateDrawable()>','<com.android.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl)>','<android.view.animation.Animation: int getZAdjustment()>','<android.text.HtmlToSpannedConverter: void <clinit>()>','<android.webkit.WebSettingsClassic: android.webkit.BrowserFrame access$000(android.webkit.WebSettingsClassic)>','<android.net.rtp.AudioStream: void setCodec(android.net.rtp.AudioCodec)>','<android.location.ICountryDetector$Stub: android.os.IBinder asBinder()>','<android.webkit.JsPromptResult: java.lang.String getStringResult()>','<android.location.LocationManager$GpsStatusListenerTransport: void <init>(android.location.LocationManager,android.location.GpsStatus$Listener)>','<android.app.backup.RestoreSet$1: android.app.backup.RestoreSet[] newArray(int)>','<android.view.SurfaceView$4: void setType(int)>','<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>','<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>','<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>','<android.widget.TextView: void setHint(int)>','<android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType[] values()>','<android.view.AccessibilityInteractionController$1: void onReleased(android.view.AccessibilityInteractionController$SomeArgs)>','<android.content.SyncQueue: void onDelayUntilTimeChanged(android.accounts.Account,java.lang.String,long)>','<com.android.internal.widget.LockPatternUtils: boolean savedPasswordExists()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void setState(com.android.internal.telephony.DataConnectionTracker$State)>','<com.android.internal.policy.impl.PhoneWindowManager: int prepareAddWindowLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManager$LayoutParams)>','<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState access$402(android.net.MobileDataStateTracker,com.android.internal.telephony.Phone$DataState)>','<android.view.View: boolean includeForAccessibility()>','<com.android.internal.policy.impl.PhoneWindowManager: void setCurrentOrientationLw(int)>','<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>','<com.android.server.PowerManagerService: java.lang.Runnable access$6900(com.android.server.PowerManagerService)>','<android.os.Message: android.os.Message obtain(android.os.Handler,int)>','<android.webkit.WebViewClassic: void tileProfilingClear()>','<android.view.View: int getScrollX()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void finalize()>','<android.net.http.RequestQueue$ActivePool: void startTiming()>','<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>','<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.content.Intent: void setClipData(android.content.ClipData)>','<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>','<com.android.internal.widget.DrawableHolder: void setScaleY(float)>','<android.database.CursorToBulkCursorAdaptor$ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder$DeathRecipient)>','<android.webkit.WebSettingsClassic: int getDoubleTapZoom()>','<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<com.android.internal.telephony.IccRecords: void unregisterForNetworkSelectionModeAutomatic(android.os.Handler)>','<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>','<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>','<android.app.Activity: void setContentView(android.view.View)>','<android.webkit.SslErrorHandler: void <init>()>','<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebHistoryItem: void finalize()>','<android.widget.TextView: int length()>','<android.text.Selection: void selectAll(android.text.Spannable)>','<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceAlert(java.lang.String,long)>','<android.app.Instrumentation$SyncRunnable: void run()>','<android.hardware.usb.UsbInterface: void <init>(int,int,int,int,android.os.Parcelable[])>','<com.android.internal.view.menu.ActionMenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>','<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()>','<com.android.server.PowerManagerService: void lowLevelReboot(java.lang.String)>','<android.graphics.NinePatch: int getWidth()>','<android.location.ILocationProvider$Stub$Proxy: void enable()>','<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>','<android.net.INetworkPolicyListener$Stub$Proxy: void onUidRulesChanged(int,int)>','<com.android.server.DeviceStorageMonitorService$CacheFileDeletedObserver: void onEvent(int,java.lang.String)>','<android.net.nsd.DnsSdTxtRecord$1: void <init>()>','<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()>','<android.os.MemoryFile$MemoryInputStream: int read()>','<com.android.internal.util.CharSequences$1: void <init>(byte[])>','<android.telephony.ServiceState: boolean equals(java.lang.Object)>','<com.android.internal.telephony.SmsAddress: void <init>()>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone)>','<android.location.Criteria: int getVerticalAccuracy()>','<android.os.Debug$MemoryInfo: void writeToParcel(android.os.Parcel,int)>','<android.widget.ScrollView: void <init>(android.content.Context)>','<com.android.internal.widget.PointerLocationView$PointerState: float[] access$300(com.android.internal.widget.PointerLocationView$PointerState)>','<android.animation.Animator: java.util.ArrayList getListeners()>','<android.nfc.NdefMessage: void <init>(byte[])>','<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>','<com.android.server.BatteryService: int access$500(com.android.server.BatteryService)>','<android.media.AudioService: boolean shouldVibrate(int)>','<android.view.InputChannel$1: android.view.InputChannel[] newArray(int)>','<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()>','<android.content.Intent: android.content.Intent setPackage(java.lang.String)>','<android.media.AudioService: android.media.AudioSystem$ErrorCallback access$4800(android.media.AudioService)>','<com.android.internal.telephony.IccCard: boolean getIccFdnEnabled()>','<android.text.DynamicLayout$ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>','<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)>','<android.media.AudioManager: void reloadAudioSettings()>','<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>','<android.view.Display: int getMaximumSizeDimension()>','<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>','<android.view.ActionProvider: void subUiVisibilityChanged(boolean)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>','<android.widget.ListView: void drawDivider(android.graphics.Canvas,android.graphics.Rect,int)>','<android.text.method.TimeKeyListener: int getInputType()>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStopGps()>','<android.os.BatteryStats$Uid: void <clinit>()>','<android.content.res.TypedArray: java.lang.String toString()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getBase64(java.lang.String)>','<android.telephony.SignalStrength: int getAsuLevel()>','<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>','<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>','<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>','<android.media.AudioService: boolean access$6800(android.media.AudioService,boolean,int,java.lang.String)>','<android.telephony.SignalStrength: int getGsmSignalStrength()>','<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>','<android.app.PendingIntent: boolean equals(java.lang.Object)>','<android.app.Fragment$SavedState$1: android.app.Fragment$SavedState createFromParcel(android.os.Parcel)>','<android.server.BluetoothService: void <clinit>()>','<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardWindowController)>','<android.widget.AbsListView$MultiChoiceModeWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void enter()>','<android.view.View: void dispatchDraw(android.graphics.Canvas)>','<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()>','<com.android.internal.policy.impl.GlobalActions$SinglePressAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>','<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>','<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>','<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>','<android.widget.AbsListView: android.view.View getSelectedView()>','<android.view.accessibility.IAccessibilityManagerClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.View: boolean updateLocalSystemUiVisibility(int,int)>','<android.util.SparseArray: void put(int,java.lang.Object)>','<android.widget.RemoteViews$ReflectionAction: void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter)>','<android.widget.RelativeLayout$DependencyGraph$Node: void setNextPoolable(android.widget.RelativeLayout$DependencyGraph$Node)>','<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.AsYouTypeFormatter getAsYouTypeFormatter(java.lang.String)>','<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>','<com.android.internal.app.ActionBarImpl: void hide()>','<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.NinePatch,android.graphics.Rect)>','<android.widget.AutoCompleteTextView$MyWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.util.MathUtils: float dist(float,float,float,float)>','<com.android.server.NsdService: boolean access$2200(com.android.server.NsdService,int)>','<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()>','<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>','<android.view.animation.AccelerateInterpolator: void <init>(float)>','<android.media.AudioService: java.lang.Object access$1500(android.media.AudioService)>','<android.content.IContentService$Stub$Proxy: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>','<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>','<android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getAttributeNames()>','<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>','<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy$FakeWindow addFakeWindow(android.os.Looper,android.view.InputEventReceiver$Factory,java.lang.String,int,int,boolean,boolean,boolean)>','<android.widget.GridView: void setNumColumns(int)>','<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>','<com.android.internal.telephony.PhoneBase: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>','<android.webkit.ViewManager: void postReadyToDrawAll()>','<android.widget.EdgeEffect: void setSize(int,int)>','<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>','<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDreamComponent()>','<android.graphics.Bitmap: void setDefaultDensity(int)>','<android.app.WallpaperInfo$1: android.app.WallpaperInfo createFromParcel(android.os.Parcel)>','<android.text.style.QuoteSpan: void <init>(int)>','<android.nfc.Tag: android.os.Bundle getTechExtras(int)>','<android.content.res.XmlBlock$Parser: boolean isWhitespace()>','<android.net.wifi.p2p.WifiP2pDevice: boolean isServiceDiscoveryCapable()>','<android.database.sqlite.SQLiteDatabase$1: void <init>(android.database.sqlite.SQLiteDatabase)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean hasSystemUidErrors()>','<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.net.wifi.WifiMonitor$MonitorThread: void run()>','<android.app.DownloadManager$Query: android.database.Cursor runQuery(android.content.ContentResolver,java.lang.String[],android.net.Uri)>','<android.text.style.MetricAffectingSpan$Passthrough: void <init>(android.text.style.MetricAffectingSpan)>','<android.widget.MediaController: void access$1200(android.widget.MediaController)>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>','<android.media.SoundPool: android.media.SoundPool$OnLoadCompleteListener access$100(android.media.SoundPool)>','<android.app.Fragment: void performStart()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>','<android.os.Message: android.os.Handler getTarget()>','<android.graphics.Rect: void set(int,int,int,int)>','<android.widget.SuggestionsAdapter: boolean hasStableIds()>','<com.android.internal.telephony.PhoneProxy: java.lang.String getImei()>','<android.content.Loader: boolean isReset()>','<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>','<android.location.IGpsStatusListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.Notification$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>','<android.widget.ScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>','<android.bluetooth.IBluetoothPbap$Stub: android.os.IBinder asBinder()>','<android.net.NetworkInfo: void setRoaming(boolean)>','<android.graphics.drawable.Drawable: int getResolvedLayoutDirectionSelf()>','<com.android.server.pm.GrantedPermissions: void <init>(com.android.server.pm.GrantedPermissions)>','<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>','<com.android.internal.telephony.ims.IsimUiccRecords: void loge(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void handleMessage(android.os.Message)>','<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>','<android.webkit.SearchBox$SearchBoxListener: void onSuggestionsReceived(java.lang.String,java.util.List)>','<android.net.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>','<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.cat.ToneSettings: void <init>(com.android.internal.telephony.cat.Duration,com.android.internal.telephony.cat.Tone,boolean)>','<android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)>','<android.widget.SuggestionsAdapter: void onClick(android.view.View)>','<android.text.method.MetaKeyKeyListener: int getMetaState(long)>','<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>','<com.android.internal.telephony.DataConnectionTracker: void setDataOnRoamingEnabled(boolean)>','<com.android.server.am.TransferPipe: void kill()>','<com.android.server.PowerManagerService: android.view.WindowManagerPolicy$ScreenOnListener access$3600(com.android.server.PowerManagerService)>','<android.content.ComponentName: boolean equals(java.lang.Object)>','<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>','<android.server.search.Searchables$1: int compare(java.lang.Object,java.lang.Object)>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()>','<android.content.Intent: java.lang.String resolveType(android.content.Context)>','<android.view.GLES20Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>','<android.app.ApplicationErrorReport$1: android.app.ApplicationErrorReport[] newArray(int)>','<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>','<android.accounts.AccountManagerService: android.accounts.AccountManagerService$MessageHandler access$1600(android.accounts.AccountManagerService)>','<android.widget.TextView$3: void <clinit>()>','<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()>','<android.graphics.Paint: void <init>(int)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean getCameraDisabled(android.content.ComponentName)>','<android.server.BluetoothAdapterStateMachine$BluetoothOn: boolean processMessage(android.os.Message)>','<com.android.internal.os.PowerProfile: int getNumSpeedSteps()>','<com.android.internal.telephony.WapPushOverSms: void <init>(com.android.internal.telephony.Phone,com.android.internal.telephony.SMSDispatcher)>','<android.os.Message: void setTarget(android.os.Handler)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: int copyResource(android.net.Uri,android.content.pm.ContainerEncryptionParams,android.os.ParcelFileDescriptor)>','<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$1: void onCancel(android.content.DialogInterface)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState: void exit()>','<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClass(java.lang.Class,java.lang.String)>','<android.app.ActivityThread$ResultData: java.lang.String toString()>','<android.provider.Settings$NameValueTable: void <init>()>','<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>','<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.Intent: boolean isExcludingStopped()>','<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>','<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>','<android.graphics.drawable.shapes.Shape: float getWidth()>','<com.android.i18n.phonenumbers.RegexCache: boolean containsRegex(java.lang.String)>','<android.graphics.Region: boolean union(android.graphics.Rect)>','<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>','<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>','<android.filterfw.core.GLEnvironment: boolean isActive()>','<android.content.SyncAdaptersCache$MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>','<com.android.internal.widget.WaveView: void setOnTriggerListener(com.android.internal.widget.WaveView$OnTriggerListener)>','<com.android.internal.telephony.AdnRecordCache: void reset()>','<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>','<com.android.server.DeviceStorageMonitorService: void updateMemory()>','<com.android.server.am.UsageStatsService$2: void <init>(com.android.server.am.UsageStatsService)>','<android.webkit.WebViewClassic: int access$5200(android.webkit.WebViewClassic)>','<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)>','<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>','<android.widget.Toast$TN: void <init>()>','<com.android.internal.telephony.sip.SipPhone: void sendBurstDtmf(java.lang.String)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationToSystemCache()>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)>','<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>','<com.android.internal.view.IInputConnectionWrapper: void finishComposingText()>','<com.android.internal.telephony.RIL: void setCdmaBroadcastActivation(boolean,android.os.Message)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setSystemUiVisibility(int,int)>','<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>','<android.opengl.GLLogWrapper: void glMaterialxv(int,int,int[],int)>','<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)>','<com.android.internal.os.BatteryStatsImpl: int getStartCount()>','<android.animation.LayoutTransition: long getStagger(int)>','<android.net.LocalSocket: java.io.InputStream getInputStream()>','<com.android.internal.telephony.BaseCommands: void unSetOnUnsolOemHookRaw(android.os.Handler)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>','<com.android.internal.telephony.CallManager: void unregisterForMmiInitiate(android.os.Handler)>','<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)>','<android.view.View$ScrollabilityCache: void <init>(android.view.ViewConfiguration,android.view.View)>','<android.location.Location: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>','<android.media.IRemoteVolumeObserver$Stub: void <init>()>','<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>','<com.android.internal.textservice.ITextServicesSessionListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.bluetooth.BluetoothHealth: void close()>','<android.widget.RemoteViewsAdapter: int getCount()>','<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener$Capitalize,boolean)>','<com.android.internal.util.StateMachine: void halting()>','<com.android.internal.telephony.PhoneBase: void unregisterForDisplayInfo(android.os.Handler)>','<com.android.server.PowerManagerService$6: void onReceive(android.content.Context,android.content.Intent)>','<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>','<com.android.internal.view.IInputMethodCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.Matrix: java.lang.String toShortString()>','<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>','<com.android.internal.util.ArrayUtils: boolean equals(byte[],byte[],int)>','<com.android.internal.telephony.SmsAddress: boolean isAlphanumeric()>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingScoOn()>','<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreFinished(int)>','<com.android.server.EventLogTags: void writePowerPartialWakeState(int,java.lang.String)>','<android.os.StrictMode$7: android.os.StrictMode$ThreadSpanState initialValue()>','<com.android.internal.telephony.cat.DTTZResponseData: void <init>(java.util.Calendar)>','<com.android.internal.policy.impl.SimUnlockScreen: com.android.internal.policy.impl.KeyguardUpdateMonitor access$200(com.android.internal.policy.impl.SimUnlockScreen)>','<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>','<com.android.internal.app.ActionBarImpl: java.lang.CharSequence getTitle()>','<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onDial(java.lang.String)>','<com.android.internal.telephony.RIL: void setCdmaBroadcastConfig(int[],android.os.Message)>','<android.view.GLES20DisplayList: void setTop(int)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void reset(boolean)>','<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>','<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>','<android.webkit.WebViewClassic: void <init>(android.webkit.WebView,android.webkit.WebView$PrivateAccess)>','<android.telephony.SmsMessage: java.lang.String getEmailBody()>','<android.content.IIntentReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>','<com.android.internal.telephony.test.CallInfo: java.lang.String toCLCCLine(int)>','<com.android.uiautomator.core.QueryController: java.lang.String getLastTraversedText()>','<android.webkit.WebView: void onWindowVisibilityChanged(int)>','<android.net.ConnectivityManager: boolean isNetworkSupported(int)>','<android.net.NetworkStatsHistory$ParcelUtils: long[] readLongArray(android.os.Parcel)>','<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>','<android.webkit.WebViewClassic: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<com.android.server.AppWidgetService: android.util.SparseArray access$100(com.android.server.AppWidgetService)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasTollFree()>','<com.android.internal.widget.ActionBarView: void setWindowCallback(android.view.Window$Callback)>','<android.os.Binder: void <init>()>','<android.content.Intent: java.lang.String toUri(int)>','<android.content.res.StringBlock$Height: void <init>(int)>','<android.media.RemoteControlClient: void access$1700(android.media.RemoteControlClient,int)>','<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>','<android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings valueOf(java.lang.String)>','<android.view.GLES20Canvas: int getWidth()>','<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>','<android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>','<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void <init>(android.view.ViewRootImpl)>','<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>','<android.net.nsd.DnsSdTxtRecord: int describeContents()>','<com.android.vcard.VCardParser_V21: void addInterpreter(com.android.vcard.VCardInterpreter)>','<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>','<android.view.ViewGroup: void onChildVisibilityChanged(android.view.View,int,int)>','<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>','<android.graphics.Rect: java.lang.String flattenToString()>','<android.net.EthernetDataTracker: void setTeardownRequested(boolean)>','<android.net.wifi.WifiManager: boolean pingSupplicant()>','<android.graphics.drawable.ShapeDrawable$ShapeState: int getChangingConfigurations()>','<com.android.server.usb.UsbHostManager$1: void run()>','<android.content.res.AssetManager$AssetInputStream: void close()>','<com.android.internal.policy.impl.KeyguardViewMediator: android.content.Intent access$100(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<com.android.internal.telephony.sip.SipPhoneBase: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: java.lang.String toString()>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onRestorePackage(java.lang.String)>','<com.android.internal.util.FileRotator: void maybeRotate(long)>','<android.app.ActivityThread$ResourcesKey: void <init>(java.lang.String,float)>','<android.server.BluetoothBondState: boolean isAutoPairingAttemptsInProgress(java.lang.String)>','<android.widget.MediaController: boolean access$602(android.widget.MediaController,boolean)>','<android.webkit.DeviceMotionService$2: void <clinit>()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void <clinit>()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>','<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>','<android.os.RemoteCallbackList: void finishBroadcast()>','<android.widget.OverScroller: void setInterpolator(android.view.animation.Interpolator)>','<com.android.internal.widget.LockPatternView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>','<android.graphics.Paint: void setBidiFlags(int)>','<android.view.VolumePanel: android.media.AudioManager access$300(android.view.VolumePanel)>','<android.os.Parcel: void writeInterfaceToken(java.lang.String)>','<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>','<android.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: long[] getLongIntArray(android.content.res.Resources,int)>','<com.android.internal.telephony.PhoneProxy: void setDataRoamingEnabled(boolean)>','<android.provider.Telephony$Mms$Rate: void <init>()>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void updateResources()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>','<android.content.res.ColorStateList$1: android.content.res.ColorStateList createFromParcel(android.os.Parcel)>','<android.text.Layout: float getPrimaryHorizontal(int)>','<android.net.NetworkStats: void <clinit>()>','<android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>','<android.location.Address: int getMaxAddressLineIndex()>','<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getWakeTimerLocked(java.lang.String,int)>','<android.webkit.HTML5VideoView: void init(int,int,boolean)>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$3200(android.net.wifi.WifiWatchdogStateMachine)>','<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>','<android.webkit.SslClientCertLookupTable: boolean IsDenied(java.lang.String)>','<com.android.internal.telephony.Call$State: boolean isDialing()>','<android.text.ClipboardManager: void <init>()>','<android.webkit.WebSettings: boolean getUseDoubleTree()>','<android.inputmethodservice.ExtractEditText: boolean hasFocus()>','<android.net.wifi.WifiStateMachine: boolean syncSaveConfig(com.android.internal.util.AsyncChannel)>','<com.android.server.am.ActivityManagerService: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)>','<android.net.http.Connection: void cancel()>','<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>','<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char,boolean)>','<android.hardware.Sensor: int getVersion()>','<android.app.SearchableInfo: int getVoiceLanguageModeId()>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>','<android.bluetooth.BluetoothDeviceProfileState: void access$5700(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$1)>','<com.android.internal.widget.LockPatternView: void disableInput()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasPreferredDomesticCarrierCode()>','<com.android.internal.os.LoggingPrintStream: void println(char)>','<com.android.server.WifiService$LockList: com.android.server.WifiService$WifiLock access$3500(com.android.server.WifiService$LockList,android.os.IBinder)>','<android.app.Activity: int getTaskId()>','<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>','<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls access$000(android.webkit.ZoomControlExternal)>','<android.net.http.RequestQueue: boolean requestsPending()>','<android.nfc.INdefPushCallback$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.cat.PresentationType: com.android.internal.telephony.cat.PresentationType[] values()>','<com.android.internal.telephony.cat.ValueParser: com.android.internal.telephony.cat.DeviceIdentities retrieveDeviceIdentities(com.android.internal.telephony.cat.ComprehensionTlv)>','<com.android.internal.telephony.test.SimulatedGsmCallState: void setNextDialFailImmediately(boolean)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>','<android.widget.LinearLayout: void setShowDividers(int)>','<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)>','<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>','<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost: void dispatchDraw(android.graphics.Canvas)>','<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)>','<android.widget.AbsListView: void smoothScrollByOffset(int)>','<android.net.http.RequestHandle: void processRequest()>','<android.webkit.WebViewClassic$PackageListener: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.ListView: long[] getCheckItemIds()>','<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>','<android.media.Ringtone: boolean isPlaying()>','<android.app.LoadedApk$WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>','<android.app.SharedPreferencesImpl: int access$310(android.app.SharedPreferencesImpl)>','<android.view.InputChannel: void readFromParcel(android.os.Parcel)>','<android.net.NetworkStatsHistory: long getStart()>','<android.view.accessibility.AccessibilityRecord: int getAddedCount()>','<android.view.ViewRootImpl: void dispatchInvalidateOnAnimation(android.view.View)>','<android.app.ApplicationLoaders: void <clinit>()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>','<com.android.server.am.ActivityManagerService: void removeContentProvider(android.os.IBinder,boolean)>','<android.app.PendingIntent: java.lang.String toString()>','<android.content.SyncOperation: void updateEffectiveRunTime()>','<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getLocalProfile()>','<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean,boolean)>','<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>','<android.media.MediaPlayer: void pause()>','<android.inputmethodservice.IInputMethodSessionWrapper: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>','<android.app.Service: void <init>()>','<android.graphics.Matrix: boolean preScale(float,float)>','<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getImei()>','<android.view.animation.AnimationSet: void setDuration(long)>','<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>','<android.webkit.ZoomManager$FocusMovementQueue: void access$300(android.webkit.ZoomManager$FocusMovementQueue)>','<android.view.MotionEvent: int getAction()>','<android.server.BluetoothService: void onHealthDeviceChannelChanged(java.lang.String,java.lang.String,boolean)>','<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>','<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getLocalIp()>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent access$102(android.accessibilityservice.UiTestAutomationBridge,android.view.accessibility.AccessibilityEvent)>','<android.net.wifi.NetworkUpdateResult: boolean hasIpChanged()>','<android.webkit.WebViewCore$AutoFillData: java.lang.String getPreviewString()>','<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>','<android.webkit.CookieSyncManager: void startSync()>','<android.server.BluetoothAdapterStateMachine: void access$5400(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.os.Message: void clearForRecycle()>','<android.widget.RemoteViewsAdapter: android.os.Handler access$600(android.widget.RemoteViewsAdapter)>','<com.android.internal.telephony.PhoneProxy: void exitEmergencyCallbackMode()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<com.android.internal.widget.PasswordEntryKeyboard$LatinKey: void setEnabled(boolean)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>','<com.android.vcard.VCardParserImpl_V30: void <init>()>','<android.bluetooth.BluetoothAdapter: int getState()>','<android.opengl.GLLogWrapper: void glScissor(int,int,int,int)>','<android.widget.AccessibilityIterators$PageTextSegmentIterator: void <init>()>','<android.webkit.WebViewClassic$Factory: android.webkit.WebIconDatabase getWebIconDatabase()>','<com.android.server.MountService$VoldResponseCode: void <init>(com.android.server.MountService)>','<android.graphics.SurfaceTexture: void finalize()>','<android.net.NetworkIdentity: java.lang.String getSubscriberId()>','<android.content.SyncStorageEngine: void removePeriodicSync(android.accounts.Account,int,java.lang.String,android.os.Bundle)>','<android.telephony.ServiceState: int getCdmaEriIconMode()>','<android.service.dreams.IDreamManager$Stub$Proxy: void testDream(android.content.ComponentName)>','<android.content.pm.VerifierDeviceIdentity$1: android.content.pm.VerifierDeviceIdentity[] newArray(int)>','<android.graphics.Matrix: void setSinCos(float,float)>','<android.view.View$CheckForLongPress: void run()>','<android.view.Surface: void setOrientation(int,int)>','<android.os.storage.IMountService$Stub$Proxy: void unmountVolume(java.lang.String,boolean,boolean)>','<android.text.format.Time: void <clinit>()>','<android.filterfw.core.NativeFrame: java.lang.String toString()>','<android.os.Debug: java.lang.String getCallers(int)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void answerCall(java.lang.String,int)>','<android.app.IWallpaperManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimLiLoaded: void onRecordLoaded(android.os.AsyncResult)>','<com.android.server.net.NetworkStatsCollection: long getTotalBytes()>','<com.android.internal.telephony.RIL: void hangupConnection(int,android.os.Message)>','<com.android.internal.view.menu.MenuBuilder: void <clinit>()>','<android.app.Instrumentation$InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>','<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions$OnAnimationStartedListener)>','<com.android.server.WallpaperManagerService: int getWidthHint()>','<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>','<android.opengl.GLLogWrapper: void glLoadMatrixf(float[],int)>','<android.webkit.ZoomManager: void updateMultiTouchSupport(android.content.Context)>','<android.appwidget.AppWidgetManager: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)>','<android.app.KeyguardManager: boolean isKeyguardLocked()>','<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>','<com.android.server.DevicePolicyManagerService: void sendAdminCommandLocked(com.android.server.DevicePolicyManagerService$ActiveAdmin,java.lang.String)>','<android.view.View: boolean isPaddingRelative()>','<com.android.server.pm.GrantedPermissions: void setFlags(int)>','<com.android.internal.telephony.DataConnectionTracker: void broadcastMessenger()>','<com.android.vcard.VCardConfig: boolean needsToConvertPhoneticString(int)>','<android.bluetooth.BluetoothTetheringDataTracker$1: void <init>(android.bluetooth.BluetoothTetheringDataTracker)>','<android.view.ViewRootImpl: boolean access$000(android.view.ViewRootImpl)>','<android.bluetooth.BluetoothDeviceProfileState: android.server.BluetoothA2dpService access$4000(android.bluetooth.BluetoothDeviceProfileState)>','<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>','<com.android.internal.widget.multiwaveview.GlowPadView: void onDraw(android.graphics.Canvas)>','<android.hardware.usb.UsbAccessory: boolean equals(java.lang.Object)>','<android.app.PendingIntent: android.content.IIntentSender getTarget()>','<android.provider.Downloads$Impl: boolean isStatusClientError(int)>','<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>','<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.view.animation.Animation: long computeDurationHint()>','<android.server.BluetoothService: void setA2dpService(android.server.BluetoothA2dpService)>','<com.android.internal.telephony.cat.Input: void <init>(android.os.Parcel,com.android.internal.telephony.cat.Input$1)>','<android.webkit.WebViewClassic: void addJavascriptInterface(java.lang.Object,java.lang.String)>','<android.speech.tts.TextToSpeech$5: java.util.Set run(android.speech.tts.ITextToSpeechService)>','<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String)>','<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>','<android.net.wifi.IWifiManager$Stub$Proxy: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>','<android.webkit.CacheManager$CacheResult: java.lang.String getContentDisposition()>','<android.hardware.input.IInputManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode access$100(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.net.DummyDataStateTracker: void defaultRouteSet(boolean)>','<android.app.Activity: void closeOptionsMenu()>','<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback,android.view.KeyEvent$DispatcherState,java.lang.Object)>','<com.android.server.sip.SipService$SipSessionGroupExt: void onKeepAliveIntervalChanged()>','<android.view.inputmethod.InputBinding: int getPid()>','<android.media.RemoteControlClient$1: void <init>(android.media.RemoteControlClient)>','<com.android.server.am.TaskRecord: void <init>(int,android.content.pm.ActivityInfo,android.content.Intent)>','<android.telephony.SmsCbLocation: int hashCode()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimMdnLoaded: java.lang.String getEfName()>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: java.lang.String toString()>','<com.android.internal.telephony.cat.ComprehensionTlv: int getTag()>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiInfo access$4800(android.net.wifi.WifiStateMachine)>','<android.net.NetworkPolicy: java.lang.String toString()>','<com.android.internal.telephony.cat.ResultCode: com.android.internal.telephony.cat.ResultCode valueOf(java.lang.String)>','<android.webkit.CookieManagerClassic: java.lang.String getCookie(android.net.WebAddress)>','<com.android.server.StatusBarManagerService: void onNotificationClick(java.lang.String,java.lang.String,int)>','<android.widget.ProgressBar$RefreshData$1: void <init>()>','<com.android.server.AttributeCache$Package: android.util.SparseArray access$000(com.android.server.AttributeCache$Package)>','<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int)>','<android.location.Address: boolean access$1500(android.location.Address)>','<android.app.Fragment: boolean isVisible()>','<android.webkit.WebHistoryItem: void setFavicon(android.graphics.Bitmap)>','<com.android.server.PowerManagerService: void preventScreenOn(boolean)>','<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()>','<android.widget.TextView: void stopSelectionActionMode()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void onPackageUpdateFinished(java.lang.String,int)>','<android.view.KeyEvent: boolean isDown()>','<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>','<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>','<com.android.internal.telephony.CallManager: void unregisterPhone(com.android.internal.telephony.Phone)>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcast(int)>','<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ViewDelegate getViewDelegate()>','<android.widget.MediaController$6: void <init>(android.widget.MediaController)>','<android.net.wifi.WifiNative: boolean stopSupplicant()>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: void <init>(byte[])>','<com.android.internal.telephony.cdma.CdmaCallTracker: void unregisterForVoiceCallEnded(android.os.Handler)>','<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setY(float)>','<com.android.server.pm.PackageManagerService$AppDirObserver: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean)>','<android.view.animation.Animation: boolean getFillAfter()>','<android.telephony.GsmCellIdentity: int describeContents()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState access$1200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.DevicePolicyManagerService: void access$200(com.android.server.DevicePolicyManagerService)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>','<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendRegister(android.net.sip.SipProfile,java.lang.String,int)>','<android.view.View: void assignParent(android.view.ViewParent)>','<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>','<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)>','<android.os.Registrant: void clear()>','<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>','<android.widget.ExpandableListConnector: boolean isEmpty()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void setCustomView(android.view.View)>','<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<android.net.rtp.RtpStream: void <clinit>()>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>','<android.filterfw.geometry.Quad: float getBoundingHeight()>','<android.app.ContextImpl$26: java.lang.Object createService(android.app.ContextImpl)>','<android.opengl.GLLogWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>','<android.os.storage.StorageManager: java.util.List access$000(android.os.storage.StorageManager)>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.TextMessage geTextMessage()>','<android.app.SharedPreferencesImpl: void startReloadIfChangedUnexpectedly()>','<android.view.PointerIcon: float getHotSpotY()>','<android.inputmethodservice.KeyboardView: void onClick(android.view.View)>','<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>','<android.view.View: boolean isVisibleToUser(android.graphics.Rect)>','<com.android.server.net.NetworkStatsService: void incrementOperationCount(int,int,int)>','<android.net.Uri$StringUri: boolean isHierarchical()>','<android.view.GLES20RecordingCanvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>','<com.android.internal.telephony.cat.Input$1: com.android.internal.telephony.cat.Input[] newArray(int)>','<com.android.internal.widget.PointerLocationView: void onDetachedFromWindow()>','<com.android.server.MountService: boolean access$2700(com.android.server.MountService,java.lang.String,int)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void clearFailedAttempts()>','<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)>','<android.graphics.Paint$FontMetrics: void <init>()>','<com.android.server.pm.PackageManagerService: java.io.File getDataPathForUser(int)>','<com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler: android.os.Message access$402(com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler,android.os.Message)>','<android.widget.PopupWindow: int getSoftInputMode()>','<android.graphics.Canvas: void drawRGB(int,int,int)>','<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>','<android.widget.OverScroller$SplineOverScroller: boolean access$002(android.widget.OverScroller$SplineOverScroller,boolean)>','<android.media.AudioService: void access$6400(android.media.AudioService,int,int,int)>','<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()>','<android.os.Environment: java.io.File getMediaStorageDirectory()>','<android.net.Uri$OpaqueUri: android.net.Uri$Builder buildUpon()>','<com.android.server.AlarmManagerService$Alarm: void <init>()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int describeContents()>','<android.net.MobileDataStateTracker: android.content.Context access$1100(android.net.MobileDataStateTracker)>','<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)>','<android.media.MediaRouter$SimpleCallback: void <init>()>','<android.filterfw.core.InputPort: boolean acceptsFrame()>','<com.android.internal.telephony.cdma.CDMAPhone: void onMMIDone(com.android.internal.telephony.cdma.CdmaMmiCode)>','<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>','<com.android.server.wm.WindowManagerService: void setWallpaperAnimLayerAdjustmentLocked(int)>','<android.app.ApplicationPackageManager: void addPackageToPreferred(java.lang.String)>','<com.android.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int,boolean)>','<android.app.ProgressDialog: boolean isIndeterminate()>','<com.android.internal.net.LegacyVpnInfo: void <clinit>()>','<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>','<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>','<com.android.server.net.NetworkAlertObserver: void interfaceRemoved(java.lang.String)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseEf(com.android.internal.telephony.gsm.SimTlv,java.util.Map,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isFilterStopped(android.content.pm.PackageParser$ActivityIntentInfo,int)>','<android.util.Log: int w(java.lang.String,java.lang.String)>','<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>','<com.android.internal.telephony.sip.SipPhone: void acceptCall()>','<com.android.server.pm.PackageManagerService: android.content.pm.IPackageManager main(android.content.Context,boolean,boolean)>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: java.lang.String getEfName()>','<android.bluetooth.BluetoothProfileState: void <init>(android.content.Context,int)>','<com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void set(android.widget.RemoteViewsAdapter$RemoteViewsMetaData)>','<com.android.internal.util.CharSequences$1: char charAt(int)>','<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>','<com.android.vcard.VCardUtils$PhoneNumberUtilsPort: java.lang.String formatNumber(java.lang.String,int)>','<android.widget.RadioButton: void <init>(android.content.Context)>','<android.webkit.WebViewClassic: android.webkit.WebView$HitTestResult getHitTestResult()>','<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>','<android.view.ViewDebug$1: void run()>','<com.android.internal.os.BatteryStatsImpl: int getInputEventCount(int)>','<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void wipeData(int)>','<com.android.uiautomator.core.InteractionController: boolean isNaturalRotation()>','<android.widget.AdapterView: java.lang.Object getSelectedItem()>','<android.util.SparseLongArray: int size()>','<android.app.LoaderManagerImpl$LoaderInfo: void retain()>','<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>','<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>','<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)>','<android.text.DynamicLayout$ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>','<android.widget.ProgressBar$SavedState: void <init>(android.os.Parcel,android.widget.ProgressBar$1)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getImei()>','<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onGrabbedStateChange(android.view.View,int)>','<android.net.wifi.p2p.WifiP2pService: java.lang.String[] access$9000()>','<android.view.Choreographer$CallbackQueue: void addCallbackLocked(long,java.lang.Object,java.lang.Object)>','<android.location.Criteria: void setBearingAccuracy(int)>','<android.filterfw.core.Filter: void prepare(android.filterfw.core.FilterContext)>','<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int)>','<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>','<android.app.ActivityThread$ApplicationThread: void scheduleStopService(android.os.IBinder)>','<android.app.ActionBar: android.content.Context getThemedContext()>','<com.android.server.net.NetworkPolicyManagerService: android.util.SparseArray access$1500(com.android.server.net.NetworkPolicyManagerService)>','<com.android.internal.telephony.cdma.CDMAPhone: void <clinit>()>','<android.net.wifi.WpsResult$1: void <init>()>','<com.android.server.sip.SipSessionListenerProxy$12: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,int,java.lang.String)>','<android.hardware.usb.UsbEndpoint: int getInterval()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.util.List getInputDevicesMatchingConnectionStates(int[])>','<android.app.ActivityManager$ProcessErrorStateInfo: void <init>()>','<android.webkit.QuadF: java.lang.String toString()>','<android.widget.OverScroller$SplineOverScroller: int access$700(android.widget.OverScroller$SplineOverScroller)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()>','<android.app.ActivityOptions: void <init>(android.os.Bundle)>','<android.os.CancellationSignal: boolean isCanceled()>','<com.android.server.net.NetworkPolicyManagerService: android.os.Handler access$000(com.android.server.net.NetworkPolicyManagerService)>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1)>','<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>','<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>','<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo)>','<android.content.pm.ServiceInfo: java.lang.String toString()>','<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>','<android.opengl.GLLogWrapper: void glGetBooleanv(int,boolean[],int)>','<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>','<android.preference.PreferenceFragment: void onDestroyView()>','<android.view.View$1: void onClick(android.view.View)>','<com.android.internal.telephony.gsm.SIMRecords: boolean isCspPlmnEnabled()>','<android.app.admin.DevicePolicyManager: void reportSuccessfulPasswordAttempt()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForType(java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)>','<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>','<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>','<com.android.internal.telephony.IccCardApplication$PersoSubState: boolean isPersoSubStateUnknown()>','<android.app.Application: void dispatchActivityResumed(android.app.Activity)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>','<com.android.server.location.MockProvider: void updateLocation(android.location.Location)>','<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>','<android.nfc.NfcAdapter: void <clinit>()>','<android.media.MediaRouter$RouteInfo: android.media.MediaRouter$RouteGroup getGroup()>','<com.android.internal.telephony.cat.AppInterface$CommandType: com.android.internal.telephony.cat.AppInterface$CommandType valueOf(java.lang.String)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void enableAllIMEsIfThereIsNoEnabledIME()>','<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>','<android.media.effect.SizeChangeEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()>','<android.provider.Settings$System: void <clinit>()>','<com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)>','<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>','<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindAppWidgetId(int,android.content.ComponentName)>','<android.webkit.CallbackProxy$4: void onClick(android.content.DialogInterface,int)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection$1: void run()>','<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>','<com.android.internal.widget.LockPatternView: void setOnPatternListener(com.android.internal.widget.LockPatternView$OnPatternListener)>','<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region$Op)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>','<com.android.server.usb.UsbService: void clearDefaults(java.lang.String)>','<android.webkit.WebSettingsClassic: void setGeolocationDatabasePath(java.lang.String)>','<com.android.server.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>','<android.inputmethodservice.Keyboard: int getHorizontalGap()>','<android.inputmethodservice.IInputMethodWrapper: void bindInput(android.view.inputmethod.InputBinding)>','<android.webkit.WebViewClassic: android.webkit.WebView access$000(android.webkit.WebViewClassic)>','<com.android.internal.telephony.cat.CommandDetails: void <clinit>()>','<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>','<android.view.AccessibilityIterators$AbstractTextSegmentIterator: void initialize(java.lang.String)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedSubtype(int)>','<com.android.server.am.CompatModePackages: void saveCompatModes()>','<android.media.AudioService: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.net.sip.SipAudioCall: int access$1002(android.net.sip.SipAudioCall,int)>','<com.android.internal.telephony.PhoneProxy: void getCellBroadcastSmsConfig(android.os.Message)>','<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>','<android.app.Fragment: void onDestroy()>','<android.accounts.AccountManagerService$5: java.lang.String toDebugString(long)>','<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>','<android.net.NetworkStatsHistory: void recordHistory(android.net.NetworkStatsHistory,long,long)>','<android.os.Debug: void stopNativeTracing()>','<android.view.View$ListenerInfo: java.util.ArrayList access$000(android.view.View$ListenerInfo)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$302(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: android.os.IBinder access$4200(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>','<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>','<android.text.LoginFilter$UsernameFilterGeneric: boolean isAllowed(char)>','<com.android.server.InputMethodManagerService: boolean access$2100(android.view.inputmethod.InputMethodInfo,int)>','<android.media.AudioManager: int getMode()>','<com.android.internal.telephony.DataConnection: void resetRetryCount()>','<android.view.ViewDebug: void <clinit>()>','<android.inputmethodservice.IInputMethodWrapper: void unbindInput()>','<com.android.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>','<android.widget.Editor$EasyEditSpanController: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>','<android.content.SyncStorageEngine: void clearAllBackoffs(android.content.SyncQueue)>','<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build()>','<android.database.CursorWrapper: boolean isFirst()>','<android.webkit.Plugin: java.lang.String getName()>','<android.content.Intent: boolean hasFileDescriptors()>','<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>','<android.widget.CompoundButton$SavedState: java.lang.String toString()>','<android.view.VelocityTracker: void setNextPoolable(java.lang.Object)>','<android.app.Activity: void onUserLeaveHint()>','<android.text.style.SpellCheckSpan: boolean isSpellCheckInProgress()>','<android.webkit.ZoomManager: boolean onNewPicture(android.webkit.WebViewCore$DrawData)>','<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.animation.PropertyValuesHolder: void init()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>','<android.widget.TextView: void setSelectAllOnFocus(boolean)>','<android.bluetooth.IBluetoothCallback$Stub: android.os.IBinder asBinder()>','<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)>','<android.widget.AbsListView$CheckForTap: void run()>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onMessageWaitingIndicatorChanged(boolean)>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName)>','<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>','<android.webkit.WebSettings: void setDefaultFontSize(int)>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)>','<android.security.KeyStore: android.security.KeyStore getInstance()>','<android.location.LocationManager$GpsStatusListenerTransport: void onGpsStarted()>','<android.view.inputmethod.InputMethodManager$2: void run()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>','<com.android.internal.telephony.SmsRawData: byte[] getBytes()>','<android.widget.Spinner$DialogPopup: java.lang.CharSequence getHintText()>','<android.bluetooth.BluetoothDeviceProfileState: void access$2800(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.content.pm.PackageStats$1: android.content.pm.PackageStats[] newArray(int)>','<android.server.BluetoothEventLoop$2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.media.Metadata: java.lang.String getString(int)>','<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>','<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName)>','<android.view.View: void setSystemUiVisibility(int)>','<android.media.MediaRecorder: android.media.MediaRecorder$OnInfoListener access$200(android.media.MediaRecorder)>','<android.preference.PreferenceGroupAdapter: void onPreferenceChange(android.preference.Preference)>','<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>','<android.app.backup.BackupDataOutput: void finalize()>','<android.net.wifi.WifiStateMachine$DriverLoadedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>','<android.hardware.input.IInputManager$Stub$Proxy: android.view.InputDevice getInputDevice(int)>','<android.webkit.PluginList: java.util.List getList()>','<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain()>','<android.os.storage.StorageManager$ListenerDelegate: void sendStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>','<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.media.AudioManager: void <clinit>()>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>','<android.graphics.Typeface: boolean equals(java.lang.Object)>','<android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>','<com.android.server.PowerManagerService: int access$5302(com.android.server.PowerManagerService,int)>','<android.app.ActivityThread: void cleanUpPendingRemoveWindows(android.app.ActivityThread$ActivityClientRecord)>','<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>','<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>','<com.android.vcard.VCardParserImpl_V21: void handleEncoding(com.android.vcard.VCardProperty,java.lang.String)>','<android.content.ContextWrapper: java.io.File getFilesDir()>','<android.net.ThrottleManager: java.lang.String getHelpUri()>','<com.android.server.am.AppNotRespondingDialog: com.android.server.am.ProcessRecord access$000(com.android.server.am.AppNotRespondingDialog)>','<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)>','<android.os.Bundle: void <init>(android.os.Parcel)>','<android.webkit.WebViewCore: void access$3300(android.webkit.WebViewCore,int,int,java.lang.String,int,int,boolean,boolean,boolean,boolean)>','<android.nfc.INfcTag$Stub$Proxy: boolean ndefIsWritable(int)>','<android.webkit.WebViewCore: void resumeUpdatePicture(android.webkit.WebViewCore)>','<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.graphics.Matrix: void mapVectors(float[],float[])>','<android.widget.AbsListView: boolean resurrectSelection()>','<android.net.wifi.p2p.WifiP2pService: java.lang.String access$5702(android.net.wifi.p2p.WifiP2pService,java.lang.String)>','<com.android.internal.telephony.IccCardStatus: com.android.internal.telephony.IccCardStatus$PinState getUniversalPinState()>','<android.view.View: void setDrawingCacheEnabled(boolean)>','<android.os.PowerManager: void reboot(java.lang.String)>','<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>','<com.android.server.AlarmManagerService: android.app.PendingIntent access$200(com.android.server.AlarmManagerService)>','<android.media.IAudioService$Stub$Proxy: int getMasterMaxVolume()>','<com.android.internal.telephony.ApnContext: void setDataConnection(com.android.internal.telephony.DataConnection)>','<com.android.server.location.GeocoderProxy: void <init>(android.content.Context,java.lang.String)>','<android.webkit.WebViewClassic: void onMeasure(int,int)>','<com.android.server.connectivity.Vpn: void interfaceStatusChanged(java.lang.String,boolean)>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DialogListener access$302(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)>','<android.graphics.Paint: void clearShadowLayer()>','<android.content.res.XmlBlock$Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>','<com.android.uiautomator.core.QueryController: void <init>(com.android.uiautomator.core.UiAutomatorBridge)>','<android.os.CancellationSignal: android.os.ICancellationSignal createTransport()>','<android.view.Choreographer: void setFrameDelay(long)>','<com.android.server.wm.Watermark: void positionSurface(int,int)>','<com.android.internal.telephony.cat.Duration$TimeUnit: void <clinit>()>','<com.android.internal.app.ActionBarImpl: void show()>','<android.net.http.RequestQueue: org.apache.http.HttpHost access$100(android.net.http.RequestQueue)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: int access$300(android.server.BluetoothPanProfileHandler$BluetoothPanDevice)>','<android.text.MeasuredText: void <clinit>()>','<android.net.http.SslCertificate: android.view.View inflateCertificateView(android.content.Context)>','<android.animation.LayoutTransition: long access$300(android.animation.LayoutTransition)>','<com.android.server.am.ProviderMap: void dumpProvidersLocked(java.io.PrintWriter,boolean)>','<android.text.BoringLayout: float getLineMax(int)>','<android.widget.AbsListView$MultiChoiceModeWrapper: void onDestroyActionMode(android.view.ActionMode)>','<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder after(android.animation.Animator)>','<com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>','<com.android.internal.telephony.DataCallState: void <init>()>','<com.android.server.AlarmManagerService$Alarm: java.lang.String toString()>','<com.android.internal.telephony.gsm.GsmCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>','<android.os.INetworkManagementService$Stub$Proxy: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.location.Address: java.util.HashMap access$000(android.location.Address)>','<android.widget.PopupWindow: void setClipToScreenEnabled(boolean)>','<android.content.res.TypedArray: float getDimension(int,float)>','<android.accounts.AccountManager$AmsTask: android.os.Bundle getResult()>','<com.android.internal.widget.multiwaveview.TargetDrawable: boolean hasState(int[])>','<android.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>','<com.android.server.wm.WindowState: boolean isOpaqueDrawn()>','<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>','<android.net.NetworkPolicyManager: void dumpRules(java.io.PrintWriter,int)>','<android.view.View: android.view.View findViewWithTag(java.lang.Object)>','<android.app.backup.IBackupManager$Stub$Proxy: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>','<android.widget.ZoomButtonsController$4: void onClick(android.view.View)>','<android.renderscript.RenderScript: void nScriptSetVarF(int,int,float)>','<com.android.server.sip.SipSessionListenerProxy: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>','<com.android.server.PowerManagerService: boolean access$4600(com.android.server.PowerManagerService)>','<android.accounts.AccountManager$13: void onReceive(android.content.Context,android.content.Intent)>','<android.content.pm.IPackageManager$Stub: void <init>()>','<android.webkit.WebViewClassic: void removeJavascriptInterface(java.lang.String)>','<android.inputmethodservice.Keyboard$Key: int[] parseCSV(java.lang.String)>','<android.graphics.Paint: void setCompatibilityScaling(float)>','<android.content.ContentProvider: boolean isTemporary()>','<android.database.sqlite.SQLiteSession: boolean hasNestedTransaction()>','<com.android.server.LocationManagerService: void removeGpsStatusListener(android.location.IGpsStatusListener)>','<android.view.WindowManager$LayoutParams: java.lang.String debug(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: int finishAnimationLw()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType[] values()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasSharedCost()>','<android.view.View: boolean checkInputConnectionProxy(android.view.View)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>','<com.android.internal.policy.impl.FaceUnlock$1: void <init>(com.android.internal.policy.impl.FaceUnlock)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>','<android.webkit.WebViewClassic: int access$5302(android.webkit.WebViewClassic,int)>','<com.android.internal.widget.PointerLocationView$PointerState: void clearTrace()>','<com.android.server.input.InputFilter: void install(com.android.server.input.InputFilter$Host)>','<com.android.internal.telephony.sip.SipCommandInterface: void conference(android.os.Message)>','<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>','<com.android.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>','<android.widget.TextView: android.text.InputFilter[] getFilters()>','<android.hardware.usb.UsbAccessory: java.lang.String getUri()>','<android.view.ViewPropertyAnimator: void access$900(android.view.ViewPropertyAnimator,int,float)>','<android.webkit.WebViewCore: void exceededDatabaseQuota(java.lang.String,java.lang.String,long,long)>','<android.widget.RelativeLayout$DependencyGraph$Node: void <clinit>()>','<com.android.server.NotificationManagerService: void enqueueNotificationWithTag(java.lang.String,java.lang.String,int,android.app.Notification,int[])>','<android.widget.ImageView: int getMaxWidth()>','<com.android.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)>','<com.android.internal.telephony.cat.CommandParamsFactory: void handleMessage(android.os.Message)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)>','<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void setEnableHaptics(boolean)>','<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.Phone$DataState)>','<android.app.ActivityThread$CreateServiceData: void <init>()>','<android.app.ActivityThread$ApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>','<com.android.vcard.JapaneseUtils: java.lang.String tryGetHalfWidthText(char)>','<android.widget.OverScroller: boolean isScrollingInDirection(float,float)>','<android.widget.RemoteViews$SetOnClickPendingIntent$1: void <init>(android.widget.RemoteViews$SetOnClickPendingIntent,android.widget.RemoteViews$OnClickHandler)>','<android.content.pm.PackageParser$Provider: void setPackageName(java.lang.String)>','<com.android.vcard.VCardUtils$PhoneNumberUtilsPort: void <init>()>','<android.view.ViewGroup: boolean isViewTransitioning(android.view.View)>','<android.media.AudioService: android.bluetooth.BluetoothHeadset access$2500(android.media.AudioService)>','<android.app.ActivityManagerProxy: void finishHeavyWeightApp()>','<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void writeToParcelLocked(android.os.Parcel,long)>','<android.graphics.Matrix: void setSinCos(float,float,float,float)>','<com.android.internal.telephony.DataCallState: java.lang.String toString()>','<android.content.pm.ServiceInfo: void <init>()>','<com.android.internal.telephony.cat.CommandDetails: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebSettings: int getUserAgent()>','<com.android.internal.telephony.CallManager: void setMute(boolean)>','<android.content.ISyncContext$Stub: android.content.ISyncContext asInterface(android.os.IBinder)>','<android.webkit.WebStorage$Origin: void <init>(java.lang.String)>','<android.widget.AbsSeekBar: void onStopTrackingTouch()>','<android.text.Annotation: java.lang.String getKey()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: boolean handleSslErrorRequest(android.net.http.SslError)>','<android.view.KeyEvent: java.lang.String metaStateToString(int)>','<com.android.internal.widget.DrawableHolder: void draw(android.graphics.Canvas)>','<android.widget.Editor: void onTouchUpEvent(android.view.MotionEvent)>','<android.webkit.WebStorage$Origin: void <init>(java.lang.String,long)>','<android.widget.AbsListView: boolean hasTextFilter()>','<android.os.Message: void copyFrom(android.os.Message)>','<android.media.AudioService: void setBluetoothA2dpOnInt(boolean)>','<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>','<android.webkit.WebViewClassic$FocusTransitionDrawable: float getProgress()>','<android.os.Bundle: boolean setAllowFds(boolean)>','<android.database.sqlite.SQLiteProgram: int getUniqueId()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>','<android.webkit.WebViewClassic: int getContentHeight()>','<android.net.http.Headers: long getTransferEncoding()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)>','<com.android.internal.telephony.gsm.GsmConnection: void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>','<com.android.internal.telephony.DataConnection: int access$000(com.android.internal.telephony.DataConnection)>','<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>','<android.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)>','<com.android.server.ConnectivityService$FeatureUser: boolean isSameUser(int,int,int,java.lang.String)>','<com.android.internal.app.IUsageStats$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.BaseAdapter: void notifyDataSetChanged()>','<android.view.inputmethod.CompletionInfo: int describeContents()>','<com.android.server.StatusBarManagerService$6: void <init>(com.android.server.StatusBarManagerService,boolean,boolean)>','<android.net.wifi.WifiStateMachine$SupplicantStartedState: void enter()>','<android.view.SurfaceView$4: void addCallback(android.view.SurfaceHolder$Callback)>','<android.view.VelocityTracker$Estimator: float estimateX(float)>','<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void handleMessage(android.os.Message)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withExpectedCount(int)>','<android.database.CursorWrapper: boolean isAfterLast()>','<android.app.QueuedWork: void <init>()>','<android.text.method.ScrollingMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isSimLocked()>','<android.net.LocalSocketImpl: void create(boolean)>','<com.android.server.location.LocationProviderProxy: android.os.WorkSource access$700(com.android.server.location.LocationProviderProxy)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCleanUpAllConnections(java.lang.String)>','<com.android.internal.net.LegacyVpnInfo: void writeToParcel(android.os.Parcel,int)>','<android.media.IRemoteControlClient$Stub: android.os.IBinder asBinder()>','<android.provider.Telephony$Mms: java.lang.String getMessageBoxName(int)>','<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyPhoneStateChanged()>','<android.view.AccessibilityInteractionController$SomeArgs: void setNextPoolable(android.view.AccessibilityInteractionController$SomeArgs)>','<android.media.AudioManager: int getStreamMaxVolume(int)>','<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>','<android.media.IAudioService$Stub$Proxy: void unloadSoundEffects()>','<android.util.ReflectiveProperty: void <init>(java.lang.Class,java.lang.Class,java.lang.String)>','<android.widget.CompoundButton$SavedState$1: android.widget.CompoundButton$SavedState[] newArray(int)>','<com.android.internal.policy.impl.GlobalActions$1: boolean showBeforeProvisioning()>','<android.app.backup.IRestoreSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: com.android.internal.util.State access$1700(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<android.content.SyncManager$ActiveSyncContext: void sendHeartbeat()>','<com.android.internal.widget.ActionBarContextView: void onAnimationRepeat(android.animation.Animator)>','<com.android.server.sip.SipService$MyExecutor: void handleMessage(android.os.Message)>','<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(java.util.ArrayList)>','<com.android.server.NetworkManagementSocketTagger: void install()>','<android.view.MenuInflater: android.content.Context access$100(android.view.MenuInflater)>','<android.net.wifi.WifiNative: void <init>(java.lang.String)>','<com.android.server.wm.WindowManagerService: void dumpPolicyLocked(java.io.PrintWriter,java.lang.String[],boolean)>','<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>','<android.widget.MediaController: boolean access$600(android.widget.MediaController)>','<android.text.PackedObjectVector: void dump()>','<android.content.ActivityNotFoundException: void <init>(java.lang.String)>','<android.accounts.AccountManagerService: void <clinit>()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>','<android.content.SyncStorageEngine: java.util.ArrayList getAuthorities()>','<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>(java.lang.String)>','<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>','<android.view.GLES20Canvas: int getRenderer()>','<com.android.internal.telephony.sip.SipCommandInterface: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>','<com.android.server.NotificationManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.filterfw.io.GraphReader: void addReferencesByMap(android.filterfw.core.KeyValueMap)>','<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>','<android.app.Activity: android.app.Dialog onCreateDialog(int)>','<com.android.server.InputMethodManagerService: void clearCurMethodLocked()>','<android.os.Parcel: byte[] marshall()>','<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)>','<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: void <init>(android.webkit.WebViewClassic$InvokeListBox)>','<com.android.vcard.VCardProperty: java.util.Collection getParameters(java.lang.String)>','<com.android.server.net.NetworkStatsCollection: void read(java.io.DataInputStream)>','<android.view.inputmethod.InputMethodManager$1: void setActive(boolean)>','<android.webkit.HTML5VideoView: boolean surfaceTextureDeleted()>','<com.android.server.usb.UsbDeviceManager: boolean access$1400(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.statusbar.StatusBarIcon$1: com.android.internal.statusbar.StatusBarIcon createFromParcel(android.os.Parcel)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLength(android.content.ComponentName,int)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void <init>(java.lang.String,android.webkit.HTML5VideoViewProxy)>','<com.android.internal.widget.ActionBarView: com.android.internal.widget.ScrollingTabContainerView access$900(com.android.internal.widget.ActionBarView)>','<com.android.internal.telephony.PhoneProxy: boolean isDnsCheckDisabled()>','<android.graphics.Insets: boolean equals(java.lang.Object)>','<android.bluetooth.BluetoothSocket: void close()>','<com.android.server.location.GpsLocationProvider: void enableLocationTracking(boolean)>','<com.android.internal.telephony.CallManager: boolean isSamePhone(com.android.internal.telephony.Phone,com.android.internal.telephony.Phone)>','<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaRoamingPreference(int,android.os.Message)>','<android.content.Intent: int getFlags()>','<android.content.pm.VerifierDeviceIdentity$1: void <init>()>','<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCleared()>','<android.net.IConnectivityManager$Stub$Proxy: void setMobileDataEnabled(boolean)>','<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>','<android.hardware.SerialPort: void open(android.os.ParcelFileDescriptor,int)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void onKey(int,int[])>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: void show(boolean)>','<android.net.wifi.WifiStateMachine: void access$10200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>','<android.webkit.WebView: boolean isPaused()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void <clinit>()>','<android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>','<android.app.Activity: void onResume()>','<com.android.internal.telephony.PhoneProxy: void getDataCallList(android.os.Message)>','<android.content.Loader: android.content.Context getContext()>','<android.filterfw.core.SimpleFrame: float[] getFloats()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: boolean containsMetaDataAt(int)>','<android.os.SystemProperties: void callChangeCallbacks()>','<com.android.server.input.InputManagerService: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>','<android.os.BatteryStats$HistoryItem: void setTo(long,byte,android.os.BatteryStats$HistoryItem)>','<android.net.wifi.WifiNative: int getBand()>','<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>','<android.view.AccessibilityInteractionController: void access$700(android.view.AccessibilityInteractionController,android.os.Message)>','<android.webkit.SearchBoxImpl: void isSupportedCallback(boolean)>','<android.os.PowerManager$WakeLock: void <init>(android.os.PowerManager,int,java.lang.String)>','<android.server.BluetoothService$1: void <init>(android.server.BluetoothService)>','<com.android.internal.telephony.sip.SipPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>','<android.nfc.NfcActivityManager: android.nfc.NdefMessage createMessage()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRadioAvailable()>','<android.text.format.Time: boolean before(android.text.format.Time)>','<android.filterfw.io.TextGraphReader$ImportPackageCommand: void execute(android.filterfw.io.TextGraphReader)>','<android.hardware.input.IInputDevicesChangedListener$Stub: void <init>()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean showCallScreen()>','<com.android.server.PowerManagerService: int access$5900(com.android.server.PowerManagerService)>','<android.net.wifi.WifiInfo: void setNetworkId(int)>','<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.PatternMatcher: int describeContents()>','<com.android.internal.telephony.cdma.CDMAPhone: void initSstIcc()>','<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>','<android.app.SearchDialog$4: boolean onQueryTextChange(java.lang.String)>','<android.app.ContextImpl$11: java.lang.Object createService(android.app.ContextImpl)>','<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<com.android.vcard.VCardParser_V21: void cancel()>','<android.webkit.WebView: void refreshPlugins(boolean)>','<com.android.server.wm.WindowManagerService: com.android.server.input.InputManagerService getInputManagerService()>','<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>','<android.webkit.WebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)>','<android.content.Intent: android.content.Intent setAction(java.lang.String)>','<com.android.internal.telephony.ApnContext: java.lang.String getApnType()>','<android.os.ServiceManager: void <clinit>()>','<android.media.MediaRouter: int getRouteCount()>','<android.net.DhcpStateMachine: android.content.Context access$300(android.net.DhcpStateMachine)>','<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>','<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)>','<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)>','<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(java.lang.String,int)>','<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>','<android.widget.AccessibilityIterators$LineTextSegmentIterator: int getLineEdgeIndex(int,int)>','<com.android.internal.policy.impl.PhoneWindowManager$11$1: void handleMessage(android.os.Message)>','<android.location.Address: java.lang.String getSubLocality()>','<com.android.server.PowerManagerService: void systemReady()>','<android.widget.OverScroller$SplineOverScroller: boolean springback(int,int,int)>','<android.text.method.ArrowKeyMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>','<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>','<android.net.TrafficStats: long getMobileRxBytes()>','<android.media.MediaFile: void addFileType(java.lang.String,int,java.lang.String)>','<android.widget.OverScroller: void setFinalX(int)>','<android.nfc.Tag: android.nfc.INfcTag getTagService()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void disableLocationUpdates()>','<android.media.AudioService: boolean access$000(android.media.AudioService)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1: void run()>','<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>','<com.android.server.WallpaperManagerService$1: void <init>(com.android.server.WallpaperManagerService)>','<android.app.FragmentManagerImpl: void addBackStackState(android.app.BackStackRecord)>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$17,android.content.Context)>','<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.server.am.ActivityRecord: void removeUriPermissionsLocked()>','<android.os.Message: android.os.Message obtain(android.os.Message)>','<android.net.NetworkPolicy$1: android.net.NetworkPolicy[] newArray(int)>','<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>','<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)>','<android.content.SyncManager: android.os.PowerManager access$1900(android.content.SyncManager)>','<com.android.server.location.GpsLocationProvider: void addListener(int)>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getBgPhone()>','<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>','<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyProperties)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>','<com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>','<com.android.vcard.VCardUtils: int getPhoneNumberFormat(int)>','<android.app.LoadedApk: java.lang.String getResDir()>','<android.util.FloatProperty: void set(java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void unregisterForPreciseCallStateChanged(android.os.Handler)>','<com.android.server.pm.UserManager: void <init>(com.android.server.pm.Installer,java.io.File)>','<android.webkit.CallbackProxy: void onReceivedCertificate(android.net.http.SslCertificate)>','<android.server.BluetoothAdapterStateMachine: void access$6000(android.server.BluetoothAdapterStateMachine,boolean)>','<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>','<android.graphics.drawable.AnimatedRotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<com.android.vcard.VCardProperty: java.util.Map getParameterMap()>','<android.media.MediaRouter: void dispatchRouteUnselected(int,android.media.MediaRouter$RouteInfo)>','<android.hardware.usb.IUsbManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.bluetooth.BluetoothTetheringDataTracker: boolean teardown()>','<com.android.internal.policy.impl.LockPatternKeyguardView: void wakeWhenReadyTq(int)>','<android.database.sqlite.SQLiteStatement: java.lang.String toString()>','<android.renderscript.RenderScript: void nContextSetSurfaceTexture(int,int,android.graphics.SurfaceTexture)>','<android.graphics.drawable.ColorDrawable: void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1)>','<android.graphics.SurfaceTexture$OutOfResourcesException: void <init>(java.lang.String)>','<android.inputmethodservice.ExtractEditLayout: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[])>','<com.android.internal.widget.AbsActionBarView: void setVisibility(int)>','<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)>','<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>','<com.android.server.AttributeCache: void removePackage(java.lang.String)>','<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>','<android.os.storage.StorageManager$ListenerDelegate: void <init>(android.os.storage.StorageManager,android.os.storage.StorageEventListener)>','<android.app.IServiceConnection$Stub: android.app.IServiceConnection asInterface(android.os.IBinder)>','<com.android.internal.widget.multiwaveview.GlowPadView: void <init>(android.content.Context)>','<android.content.SyncOperation: java.lang.String toString()>','<android.view.MotionEvent: android.view.MotionEvent clampNoHistory(float,float,float,float)>','<android.filterfw.io.TextGraphReader$AddLibraryCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>','<android.webkit.PluginList: void pluginClicked(android.content.Context,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean access$2802(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,boolean)>','<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>','<com.android.server.StatusBarManagerService$2: void <init>(com.android.server.StatusBarManagerService,boolean)>','<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>','<com.android.server.am.ActivityManagerService: int access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int,int)>','<android.net.http.AndroidHttpClientConnection: int getLocalPort()>','<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>','<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>','<android.view.View: android.view.View findViewByAccessibilityId(int)>','<android.widget.ListPopupWindow: void dismiss()>','<com.android.server.PowerManagerService: void access$7300(com.android.server.PowerManagerService,int,boolean)>','<android.net.wifi.WifiMonitor: void <init>(com.android.internal.util.StateMachine,android.net.wifi.WifiNative)>','<android.webkit.WebSettings: boolean supportZoom()>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.graphics.RectF: void set(android.graphics.RectF)>','<android.net.IThrottleManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.ContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.widget.Spinner$DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int)>','<android.app.ActionBar$LayoutParams: void <init>(android.app.ActionBar$LayoutParams)>','<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<android.app.ProgressDialog$1: void handleMessage(android.os.Message)>','<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>','<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.app.ContextImpl$11: void <init>()>','<android.hardware.Camera$Parameters: void setPreviewFormat(int)>','<android.view.ViewGroup: void onDebugDraw(android.graphics.Canvas)>','<android.widget.Switch: void setTextOn(java.lang.CharSequence)>','<com.android.server.wm.WindowStateAnimator: void applyEnterAnimationLocked()>','<android.view.ViewRootImpl$RunQueue$HandlerAction: int hashCode()>','<android.preference.PreferenceScreen$SavedState: void <init>(android.os.Parcelable)>','<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>','<android.app.WallpaperManager$FastBitmapDrawable: void setDither(boolean)>','<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>','<android.app.backup.RestoreSet: void <init>(android.os.Parcel,android.app.backup.RestoreSet$1)>','<android.view.View: boolean isDrawingCacheEnabled()>','<android.webkit.WebViewClassic: void destroy()>','<android.widget.Editor: android.graphics.drawable.Drawable access$2702(android.widget.Editor,android.graphics.drawable.Drawable)>','<com.android.internal.telephony.BaseCommands: void registerForAvailable(android.os.Handler,int,java.lang.Object)>','<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.internal.telephony.cat.RilMessageDecoder: void access$400(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.util.IState)>','<android.app.SharedPreferencesImpl$1: void <init>(android.app.SharedPreferencesImpl,java.lang.String)>','<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>','<android.webkit.WebViewCore: android.webkit.CallbackProxy access$1400(android.webkit.WebViewCore)>','<android.os.BatteryStats$HistoryItem: void readDelta(android.os.Parcel)>','<android.net.wifi.WifiStateMachine$WpsRunningState: boolean processMessage(android.os.Message)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>','<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.wm.Session: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()>','<android.server.BluetoothHealthProfileHandler: boolean connectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<com.android.vcard.VCardConfig: boolean isVersion21(int)>','<android.net.EthernetDataTracker: void defaultRouteSet(boolean)>','<com.android.internal.widget.WaveView: long access$614(com.android.internal.widget.WaveView,long)>','<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>','<android.content.Loader: void onForceLoad()>','<android.nfc.NdefMessage: int hashCode()>','<com.android.server.DevicePolicyManagerService: void syncDeviceCapabilitiesLocked()>','<android.widget.Switch: void jumpDrawablesToCurrentState()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String peekLine()>','<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)>','<com.android.internal.widget.ActionBarView$HomeView: boolean dispatchHoverEvent(android.view.MotionEvent)>','<android.view.ViewRootImpl: void dispatchResized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>','<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>','<android.location.Address: void setUrl(java.lang.String)>','<android.net.wifi.IWifiManager$Stub$Proxy: void reconnect()>','<com.android.internal.telephony.gsm.GSMPhone: void getDataCallList(android.os.Message)>','<android.appwidget.AppWidgetHostView$1: void <init>()>','<android.widget.ListView: boolean getItemsCanFocus()>','<com.android.server.am.ServiceRecord: int makeNextStartId()>','<android.webkit.WebViewClassic: boolean showFindDialog(java.lang.String,boolean)>','<android.net.DummyDataStateTracker: void setTeardownRequested(boolean)>','<android.content.res.StringBlock$StyleIDs: int access$800(android.content.res.StringBlock$StyleIDs)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>','<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>','<android.server.BluetoothBondState: java.lang.String[] listInState(int)>','<com.android.internal.app.ActionBarImpl: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.net.wifi.WifiStateMachine: long access$6600(android.net.wifi.WifiStateMachine)>','<android.view.View: int getResolvedLayoutDirection()>','<android.view.InputChannel$1: void <init>()>','<com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>','<android.graphics.drawable.LayerDrawable: int getId(int)>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void <init>(android.os.IBinder)>','<android.opengl.GLLogWrapper: void glLightxv(int,int,int[],int)>','<com.android.server.MountService: android.content.Context access$2400(com.android.server.MountService)>','<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>','<android.server.BluetoothService: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>','<com.android.server.PowerManagerService: void goToSleepWithReason(long,int)>','<android.graphics.drawable.ColorDrawable$ColorState: void <init>(android.graphics.drawable.ColorDrawable$ColorState)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>','<android.util.SparseLongArray: long valueAt(int)>','<android.view.IWindowManager$Stub$Proxy: void removeWindowToken(android.os.IBinder)>','<android.graphics.PointF$1: android.graphics.PointF createFromParcel(android.os.Parcel)>','<android.app.AlertDialog: void setView(android.view.View)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency: void <clinit>()>','<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>','<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getVoiceMailAlphaTag()>','<android.hardware.LegacySensorManager: int getSensors()>','<android.test.IsolatedContext$MockAccountManager: void <init>(android.test.IsolatedContext)>','<android.widget.Editor$SelectionEndHandleView: void updatePosition(float,float)>','<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>','<com.android.internal.policy.impl.PhoneWindowManager$PointerLocationInputEventReceiver: void onInputEvent(android.view.InputEvent)>','<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)>','<android.view.View: void refreshDrawableState()>','<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>','<com.android.server.connectivity.Vpn: void interfaceRemoved(java.lang.String)>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: com.android.internal.widget.PointerLocationView$FasterStringBuilder append(java.lang.String)>','<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>','<android.net.MobileDataStateTracker: boolean teardown()>','<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>','<android.view.IWindow$Stub$Proxy: void dispatchAppVisibility(boolean)>','<android.view.HardwareRenderer$Gl20Renderer: void destroyLayers(android.view.View)>','<com.android.server.wm.WindowManagerService: boolean setTokenVisibilityLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,boolean,int,boolean)>','<android.location.GeocoderParams: void <init>(android.location.GeocoderParams$1)>','<android.database.CursorWrapper: java.lang.String getColumnName(int)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityIdInActiveWindow(long)>','<com.android.server.am.ActivityManagerService$ServiceLookupResult: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ServiceRecord,java.lang.String)>','<com.android.server.EventLogTags: void writeNotificationEnqueue(java.lang.String,int,java.lang.String,java.lang.String)>','<android.location.CountryDetector$ListenerTransport$1: void run()>','<android.text.TextPaint: void <init>()>','<android.widget.AutoCompleteTextView: void ensureImeVisible(boolean)>','<android.bluetooth.BluetoothA2dp: boolean suspendSink(android.bluetooth.BluetoothDevice)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$5500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.util.StateMachine$ProcessedMessages: void add(android.os.Message,java.lang.String,com.android.internal.util.State,com.android.internal.util.State)>','<android.widget.PopupWindow: void setContentView(android.view.View)>','<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>','<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>','<android.util.FinitePool: void <init>(android.util.PoolableManager,int)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>','<android.webkit.WebViewClassic: int access$5402(android.webkit.WebViewClassic,int)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>','<com.android.vcard.VCardParserImpl_V21: void handleCharset(com.android.vcard.VCardProperty,java.lang.String)>','<android.app.ActivityManagerProxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>','<android.view.Surface: android.graphics.Matrix access$200(android.view.Surface)>','<android.telephony.SignalStrength: void <clinit>()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>','<android.graphics.Rect: boolean contains(android.graphics.Rect)>','<android.net.IThrottleManager$Stub: android.net.IThrottleManager asInterface(android.os.IBinder)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$2: void <init>(android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$State getState()>','<android.app.IActivityManager$WaitResult: void <init>(android.os.Parcel,android.app.IActivityManager$1)>','<android.view.textservice.SpellCheckerInfo: void <clinit>()>','<android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode[] values()>','<android.filterfw.core.InputPort: boolean isReady()>','<android.media.MediaRecorder: void <clinit>()>','<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>','<android.location.Location: java.lang.String convert(double,int)>','<com.android.internal.widget.PasswordEntryKeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.location.ILocationProvider$Stub: android.os.IBinder asBinder()>','<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiRunningLocked()>','<android.app.SearchDialog: void setWorking(boolean)>','<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void getChars(int,int,char[],int)>','<android.location.IGeocodeProvider$Stub: android.os.IBinder asBinder()>','<com.android.internal.app.AlertController: android.os.Handler access$700(com.android.internal.app.AlertController)>','<android.widget.Editor$EasyEditSpanController: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>','<com.android.internal.telephony.DataConnection: void access$500(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause)>','<android.widget.LinearLayout: int getDividerWidth()>','<android.net.nsd.NsdServiceInfo: void setTxtRecord(android.net.nsd.DnsSdTxtRecord)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasRawInput()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: boolean isInCall()>','<android.os.Binder: int getOrigCallingUser()>','<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>','<android.graphics.Path: boolean isEmpty()>','<android.app.IThumbnailReceiver$Stub: android.app.IThumbnailReceiver asInterface(android.os.IBinder)>','<com.android.server.NotificationManagerService$NotificationRecord: void <init>(java.lang.String,java.lang.String,int,int,int,int,android.app.Notification)>','<android.app.Service: boolean stopSelfResult(int)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: int access$400(android.server.BluetoothPanProfileHandler$BluetoothPanDevice)>','<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>','<android.app.ContextImpl$20: void <init>()>','<android.bluetooth.IBluetoothHealthCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebViewCore: void access$3000(android.webkit.WebViewCore,boolean)>','<android.net.http.LoggingEventHandler: void error(int,java.lang.String)>','<android.webkit.ZoomManager: int access$1202(android.webkit.ZoomManager,int)>','<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>','<android.webkit.CacheManager: boolean startCacheTransaction()>','<com.android.internal.telephony.cat.Duration$1: void <init>()>','<android.net.nsd.DnsSdTxtRecord: java.lang.String toString()>','<android.webkit.WebViewCore$4: void invoke(java.lang.String,boolean,boolean)>','<android.webkit.ZoomManager: void clearDocumentAnchor()>','<android.net.ConnectivityManager: void setDataDependency(int,boolean)>','<com.android.server.location.LocationProviderProxy: void disable()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode()>','<com.android.internal.view.menu.ActionMenuView: com.android.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()>','<android.widget.AbsListView$RecycleBin: android.view.View getActiveView(int)>','<com.android.server.InputMethodManagerService$2: void <init>(com.android.server.InputMethodManagerService)>','<android.webkit.HTML5VideoViewProxy: int access$802(android.webkit.HTML5VideoViewProxy,int)>','<android.view.VolumePanel: void onRemoteVolumeChanged(int,int)>','<android.net.nsd.NsdManager$ServiceHandler: void handleMessage(android.os.Message)>','<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>','<com.android.server.PowerManagerService: android.content.BroadcastReceiver access$4200(com.android.server.PowerManagerService)>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: int compareTo(java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getMeid()>','<android.text.SpannedString: int getSpanFlags(java.lang.Object)>','<com.android.internal.telephony.gsm.GsmDataConnection: com.android.internal.telephony.gsm.GsmDataConnection makeDataConnection(com.android.internal.telephony.PhoneBase,int,com.android.internal.telephony.RetryManager,com.android.internal.telephony.DataConnectionTracker)>','<android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean removeUninstalledKeyboardLayouts(java.util.Set)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void reset()>','<android.opengl.GLLogWrapper: void glAlphaFunc(int,float)>','<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.IAccessibilityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.Message: void setAsynchronous(boolean)>','<android.os.ResultReceiver$1: void <init>()>','<android.bluetooth.BluetoothHealthAppConfiguration: void <init>(java.lang.String,int)>','<android.content.pm.PackageParser$PermissionGroup: void <init>(android.content.pm.PackageParser$Package,android.content.pm.PermissionGroupInfo)>','<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>','<android.renderscript.RenderScript: void nAllocationSetSurface(int,android.view.Surface)>','<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>','<android.graphics.drawable.AnimatedRotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.net.wifi.WifiNative: java.lang.String scanResults()>','<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: java.lang.String toDebugString(long)>','<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String)>','<android.os.Handler: void removeMessages(int,java.lang.Object)>','<android.server.BluetoothHealthProfileHandler: void access$400(android.server.BluetoothHealthProfileHandler,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void setMassStorageBackingFile(java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean isKeyguardLocked()>','<com.android.server.am.ActivityManagerService: void finishHeavyWeightApp()>','<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>','<android.net.sip.SipAudioCall: void continueCall(int)>','<com.android.internal.os.HandlerCaller$SomeArgs: void <init>()>','<android.view.textservice.SentenceSuggestionsInfo$1: android.view.textservice.SentenceSuggestionsInfo createFromParcel(android.os.Parcel)>','<android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace[] values()>','<android.view.MotionEvent: float getHistoricalSize(int)>','<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo)>','<android.content.SyncManager: android.os.PowerManager$WakeLock access$2000(android.content.SyncManager)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: java.lang.CharSequence access$802(com.android.internal.policy.impl.KeyguardStatusViewManager,java.lang.CharSequence)>','<android.net.Uri$Builder: android.net.Uri$Builder path(android.net.Uri$PathPart)>','<android.provider.Browser: void clearHistory(android.content.ContentResolver)>','<com.android.internal.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>','<android.widget.ListView: void smoothScrollByOffset(int)>','<android.bluetooth.BluetoothAdapter: boolean enable()>','<android.media.AudioService: int access$2400(android.media.AudioService)>','<android.view.Window$LocalWindowManager: boolean isHardwareAccelerated()>','<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getSharedCost()>','<com.android.internal.widget.ActionBarContextView: boolean isTitleOptional()>','<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()>','<android.os.Message: android.os.Bundle getData()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object)>','<android.view.VolumePanel: void onClick(android.view.View)>','<com.android.internal.telephony.cdma.CDMAPhone: void finalize()>','<android.location.LocationManager: java.util.List getAllProviders()>','<android.view.KeyCharacterMap$UnavailableException: void <init>(java.lang.String)>','<com.android.server.am.ActivityStack: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>','<android.location.Location: void setTime(long)>','<com.android.internal.telephony.gsm.GSMPhone: android.telephony.ServiceState getServiceState()>','<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: void removePackageLI(android.content.pm.PackageParser$Package,boolean)>','<android.inputmethodservice.KeyboardView: void access$1200(android.inputmethodservice.KeyboardView,int,int,int,long)>','<android.location.Address: void setLocality(java.lang.String)>','<android.net.wifi.WifiInfo: void setRssi(int)>','<com.android.server.location.LocationProviderProxy$Connection: android.location.ILocationProvider getProvider()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isMusicActive()>','<com.android.ex.variablespeed.EngineParameters: int getMaxPlayBufferCount()>','<android.widget.AbsListView: int access$2300(android.widget.AbsListView)>','<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(android.net.wifi.p2p.WifiP2pDevice)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata clearIntlNumberFormat()>','<com.android.server.PowerManagerService: void noteStartWakeLocked(com.android.server.PowerManagerService$WakeLock,android.os.WorkSource)>','<android.database.AbstractCursor: boolean moveToNext()>','<android.webkit.BrowserFrame: void goBackOrForward(int)>','<android.content.SyncManager: android.app.AlarmManager access$3700(android.content.SyncManager)>','<android.app.ActivityManager$RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>','<android.util.SparseArray: android.util.SparseArray clone()>','<android.webkit.ZoomManager: float getInvDefaultScale()>','<android.webkit.CallbackProxy: void setWebViewClient(android.webkit.WebViewClient)>','<com.android.server.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.AppWidgetServiceImpl: android.os.Bundle getAppWidgetOptions(int)>','<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>','<android.view.View: void onResolvedLayoutDirectionReset()>','<android.os.AsyncTask: void access$600(android.os.AsyncTask,java.lang.Object)>','<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>','<android.app.IAlarmManager$Stub: android.app.IAlarmManager asInterface(android.os.IBinder)>','<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>','<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>','<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>','<android.content.SyncAdaptersCache: void <init>(android.content.Context)>','<android.text.TextUtils: void recycle(char[])>','<com.android.server.pm.ShutdownThread: void run()>','<com.android.server.PowerManagerService$10: void <init>(com.android.server.PowerManagerService,java.lang.String)>','<android.app.BackStackRecord$Op: void <init>()>','<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>','<com.android.internal.view.IInputContext$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.AsyncTask: java.lang.Object get()>','<com.android.server.MountService$ShutdownCallBack: void <init>(com.android.server.MountService,java.lang.String,android.os.storage.IMountShutdownObserver)>','<android.emoji.EmojiFactory: void finalize()>','<com.android.server.AlarmManagerService: java.util.ArrayList access$600(com.android.server.AlarmManagerService)>','<com.android.server.WifiService: int access$408(com.android.server.WifiService)>','<com.android.internal.telephony.gsm.GSMPhone: void syncClirSetting()>','<android.os.Handler: void removeMessages(int)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()>','<android.content.res.XmlBlock$Parser: java.lang.String getClassAttribute()>','<com.android.server.EventLogTags: void writeFreeStorageChanged(long)>','<android.database.CursorWindow: int getStartPosition()>','<com.android.server.InputMethodManagerService: void access$1300(com.android.server.InputMethodManagerService)>','<android.media.RingtoneManager: boolean getStopPreviousRingtone()>','<android.webkit.WebViewCore: void addMessageToConsole(java.lang.String,int,java.lang.String,int)>','<com.android.server.sip.SipHelper: void sendResponse(javax.sip.RequestEvent,int)>','<android.nfc.NfcAdapter: boolean enable()>','<android.graphics.Rect: int height()>','<android.os.storage.IMountServiceListener$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.test.SimulatedGsmCallState: void progressConnectingCallState()>','<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>','<android.webkit.WebViewClassic$2: void <init>(android.webkit.WebViewClassic,android.os.Message)>','<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>','<android.net.wifi.WifiWatchdogStateMachine: long access$3102(android.net.wifi.WifiWatchdogStateMachine,long)>','<android.hardware.usb.UsbDevice: int describeContents()>','<android.view.IWindow$Stub$Proxy: void dispatchGetNewSurface()>','<com.android.internal.widget.ActionBarContextView: void setContentHeight(int)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>','<com.android.server.sip.SipService: android.os.Looper access$1800()>','<com.android.server.MountService: java.lang.String[] getSecureContainerList()>','<android.preference.PreferenceGroup: int getPreferenceCount()>','<com.android.internal.widget.PointerLocationView$PointerState: android.view.VelocityTracker$Estimator access$800(com.android.internal.widget.PointerLocationView$PointerState)>','<com.android.internal.telephony.gsm.GSMPhone: void sendUssdResponse(java.lang.String)>','<android.net.sip.SipProfile$Builder: void <init>(java.lang.String,java.lang.String)>','<android.net.wifi.WifiStateMachine: android.net.ConnectivityManager access$13800(android.net.wifi.WifiStateMachine)>','<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)>','<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.preference.Preference: void notifyChanged()>','<android.view.Window: boolean hasFeature(int)>','<com.android.internal.widget.PointerLocationView$PointerState: boolean access$102(com.android.internal.widget.PointerLocationView$PointerState,boolean)>','<android.widget.ListView: void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect)>','<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>','<com.android.internal.statusbar.StatusBarNotification$1: void <init>()>','<android.inputmethodservice.KeyboardView: boolean access$500(android.inputmethodservice.KeyboardView)>','<android.os.MessageQueue: int enqueueSyncBarrier(long)>','<android.inputmethodservice.KeyboardView: void swipeLeft()>','<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()>','<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)>','<com.android.internal.view.menu.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getBluetoothState()>','<com.android.internal.telephony.PhoneProxy: void setSmscAddress(java.lang.String,android.os.Message)>','<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>','<android.util.SparseIntArray: void <init>(int)>','<android.accounts.AccountManagerService$Session: java.lang.String toDebugString(long)>','<android.location.ILocationManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.connectivity.Vpn: int access$400(com.android.server.connectivity.Vpn,java.lang.String)>','<android.view.FocusFinder$SequentialFocusComparator: void <init>(android.view.FocusFinder$1)>','<android.widget.RelativeLayout: void onMeasure(int,int)>','<android.webkit.ConsoleMessage: java.lang.String message()>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>','<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>','<android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>','<android.accounts.AccountManager$9: void doWork()>','<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,boolean)>','<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>','<android.widget.AbsListView: boolean isTextFilterEnabled()>','<android.view.GLES20Canvas: int onPreDraw(android.graphics.Rect)>','<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<android.view.ViewRootImpl: void disposeResizeBuffer()>','<android.view.View: boolean postDelayed(java.lang.Runnable,long)>','<com.android.server.am.ActivityManagerService$DbBinder: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.internal.telephony.PhoneBase: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>','<android.webkit.WebViewCore: java.lang.String access$4800(android.webkit.WebViewCore,java.lang.String,boolean)>','<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.view.View: android.view.View findViewByPredicate(com.android.internal.util.Predicate)>','<android.view.View: void setRotation(float)>','<android.os.SystemVibrator: void vibrate(long)>','<android.webkit.HTML5VideoFullScreen: void <init>(android.content.Context,int,int,boolean)>','<android.server.BluetoothA2dpService$IntentBroadcastHandler: void handleMessage(android.os.Message)>','<android.content.ContentService: void removeStatusChangeListener(android.content.ISyncStatusObserver)>','<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>','<android.security.IKeyChainService$Stub$Proxy: void setGrant(int,java.lang.String,boolean)>','<android.content.ContentProvider$Transport: android.content.ContentProvider getContentProvider()>','<android.view.ViewGroup$MarginLayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas)>','<com.android.server.am.ActivityManagerService: boolean dumpServicesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>','<android.location.Location: float getBearing()>','<com.android.internal.widget.multiwaveview.GlowPadView: void setVibrateEnabled(boolean)>','<com.android.internal.telephony.PhoneSubInfo: void finalize()>','<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int enableApnType(java.lang.String)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceState(android.telephony.ServiceState)>','<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void cancelAndReleaseQueue()>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer$OnTimedTextListener)>','<com.android.internal.statusbar.StatusBarIconList: com.android.internal.statusbar.StatusBarIcon getIcon(int)>','<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>','<android.net.INetworkPolicyManager$Stub: android.net.INetworkPolicyManager asInterface(android.os.IBinder)>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$3900(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDevice)>','<android.net.Uri$StringUri: boolean isRelative()>','<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallForwardingIndicatorChanged(boolean)>','<android.app.backup.IBackupManager$Stub$Proxy: void agentConnected(java.lang.String,android.os.IBinder)>','<android.content.ClipData$Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>','<android.media.AudioRoutesInfo: void <clinit>()>','<com.android.server.wm.WindowManagerService: void clearForcedDisplaySize()>','<android.app.ContextImpl: android.os.Looper getMainLooper()>','<com.android.internal.widget.multiwaveview.GlowPadView$3: void <init>(com.android.internal.widget.multiwaveview.GlowPadView)>','<android.graphics.drawable.LayerDrawable: void setOpacity(int)>','<android.graphics.Matrix$1: boolean setPolyToPoly(float[],int,float[],int,int)>','<com.android.server.wm.WindowState: boolean isGoneForLayoutLw()>','<com.android.server.pm.PackageManagerService: java.io.File access$2000(com.android.server.pm.PackageManagerService,java.io.File)>','<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>','<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>','<android.webkit.WebView: void setFindListener(android.webkit.WebView$FindListener)>','<android.net.MobileDataStateTracker: java.lang.String networkTypeToApnType(int)>','<android.net.wifi.WifiStateMachine$DriverStoppedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.view.GLES20TextureLayer: void redraw(android.view.DisplayList,android.graphics.Rect)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>','<android.webkit.DeviceMotionAndOrientationManager: void setUseMock()>','<android.net.wifi.WifiStateTracker$WifiStateReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.app.ActivityManager: int staticGetMemoryClass()>','<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>','<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>','<android.view.WindowManagerImpl: void finishRemoveViewLocked(android.view.View,int)>','<android.net.wifi.SupplicantStateTracker$InactiveState: void enter()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<android.util.LruCache: java.lang.Object remove(java.lang.Object)>','<android.app.ContextImpl$1: java.lang.Object createService(android.app.ContextImpl)>','<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()>','<com.android.internal.telephony.ATResponseParser: boolean nextBoolean()>','<android.content.res.AssetManager: void xmlBlockGone(int)>','<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder maxPlayBufferCount(int)>','<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>','<android.location.ILocationManager$Stub$Proxy: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>','<android.webkit.DeviceMotionService: boolean access$000(android.webkit.DeviceMotionService)>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>','<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>','<android.media.AudioManager: void <init>(android.content.Context)>','<android.ddm.DdmHandleHello: void <clinit>()>','<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()>','<android.location.IGpsStatusProvider$Stub: android.os.IBinder asBinder()>','<com.android.server.am.ActivityManagerService: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<android.os.StrictMode$3: void <init>()>','<android.util.NtpTrustedTime: long getCachedNtpTime()>','<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>','<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getCurrentTransport()>','<android.filterfw.core.FilterPort: void checkFrameType(android.filterfw.core.Frame,boolean)>','<android.app.ContextImpl$12: java.lang.Object createService(android.app.ContextImpl)>','<com.android.internal.telephony.sip.SipCommandInterface: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.net.wifi.WifiStateMachine: void access$14000(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.content.SyncManager: int access$2800()>','<android.widget.ExpandableListConnector$GroupMetadata$1: android.widget.ExpandableListConnector$GroupMetadata createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>','<android.widget.AutoCompleteTextView$PassThroughClickListener: android.view.View$OnClickListener access$302(android.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener)>','<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconMode()>','<android.widget.ProgressBar$RefreshData: void setNextPoolable(java.lang.Object)>','<android.net.NetworkState$1: android.net.NetworkState createFromParcel(android.os.Parcel)>','<com.android.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>','<com.android.internal.widget.ActionBarView$SavedState$1: com.android.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel)>','<com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>','<com.android.server.AlarmManagerService$UninstallReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.app.LoadedApk: java.lang.String getPackageName()>','<android.view.View: void setSelected(boolean)>','<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters build()>','<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>','<com.android.internal.telephony.IccCardStatus: void setCdmaSubscriptionAppIndex(int)>','<com.android.internal.telephony.Phone$DataActivityState: void <clinit>()>','<android.view.ViewStub: void onMeasure(int,int)>','<android.database.ContentObserver$Transport: void onChange(boolean,android.net.Uri)>','<android.media.AudioManager: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>','<android.text.TextUtils$Reverser: java.lang.CharSequence subSequence(int,int)>','<com.android.internal.telephony.gsm.GSMPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>','<android.graphics.SurfaceTexture: void attachToGLContext(int)>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>','<android.webkit.WebViewClassic: void saveViewState(java.io.OutputStream,android.webkit.ValueCallback)>','<android.view.Window: void setCloseOnTouchOutside(boolean)>','<android.view.AccessibilityIterators$WordTextSegmentIterator: int[] following(int)>','<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>','<android.app.ITransientNotification$Stub: void <init>()>','<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>','<android.view.MotionEvent: boolean isWithinBoundsNoHistory(float,float,float,float)>','<android.renderscript.Element: android.renderscript.Element U16_4(android.renderscript.RenderScript)>','<android.app.AlertDialog$Builder: android.app.AlertDialog create()>','<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<android.view.VelocityTracker: void setPooled(boolean)>','<com.android.server.sip.SipService: void close(java.lang.String)>','<com.android.server.AppWidgetServiceImpl: boolean hasBindAppWidgetPermission(java.lang.String)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>','<com.android.internal.telephony.MccTable: java.lang.String defaultLanguageForMcc(int)>','<android.view.View: void getLocationInWindow(int[])>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType valueOf(java.lang.String)>','<android.filterfw.core.FrameFormat: int getNumberOfDimensions()>','<com.android.server.LocationManagerService$UpdateRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>','<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>','<android.net.Proxy: int getPort(android.content.Context)>','<com.android.internal.telephony.gsm.GsmConnection: boolean update(com.android.internal.telephony.DriverCall)>','<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>','<com.android.internal.view.menu.BaseMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<android.net.Uri: java.lang.String decode(java.lang.String)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartSensor(int,int)>','<android.app.ActivityThread: android.app.ActivityThread$ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean)>','<android.widget.TextView: java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence)>','<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()>','<android.content.ContentResolver: boolean getMasterSyncAutomatically()>','<android.text.Layout: java.lang.CharSequence getText()>','<com.android.server.wm.AppWindowToken: void dump(java.io.PrintWriter,java.lang.String)>','<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>','<android.webkit.WebTextView: java.lang.String urlForAutoCompleteData(java.lang.String)>','<android.media.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)>','<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>','<android.webkit.DeviceMotionService$2: void run()>','<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)>','<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>','<android.provider.ContactsContract$CommonDataKinds$Phone: void <clinit>()>','<android.os.DropBoxManager$Entry: void <init>(java.lang.String,long,byte[],int)>','<android.content.Intent$1: android.content.Intent createFromParcel(android.os.Parcel)>','<android.accounts.AccountManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.ddm.DdmHandleExit: void <clinit>()>','<com.android.internal.location.DummyLocationProvider: void setHasMonetaryCost(boolean)>','<android.provider.MediaStore$Audio$Artists$Albums: void <init>()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: int getIntrinsicHeight()>','<com.android.internal.telephony.SmsStorageMonitor: boolean isStorageAvailable()>','<android.os.IVibratorService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: int hashCode()>','<android.net.wifi.p2p.WifiP2pService: boolean access$8900(android.net.wifi.p2p.WifiP2pService)>','<android.view.ViewGroup: void setPadding(int,int,int,int)>','<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>','<android.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean getIsAutoFillable()>','<android.view.inputmethod.BaseInputConnection: void reportFinish()>','<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>','<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>','<com.android.internal.widget.LockPatternUtils: void setPowerButtonInstantlyLocks(boolean)>','<com.android.vcard.VCardProperty: void setValues(java.lang.String[])>','<android.content.SyncManager: void onAccountsUpdated(android.accounts.Account[])>','<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)>','<android.database.AbstractCursor: android.net.Uri getNotificationUri()>','<com.android.internal.telephony.Connection: java.lang.String getOrigDialString()>','<android.util.SparseArray: int keyAt(int)>','<android.graphics.Matrix: void setValues(float[])>','<android.net.wifi.WifiStateMachine: int access$7100(android.net.wifi.WifiStateMachine)>','<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>','<android.view.ViewPropertyAnimator$PropertyBundle: boolean cancel(int)>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>','<com.android.internal.widget.multiwaveview.Tweener$1: void onAnimationEnd(android.animation.Animator)>','<com.android.server.wm.WindowManagerService: int getLidState()>','<android.widget.FastScroller: void startPendingDrag()>','<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>','<com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: void <init>(com.android.internal.telephony.WapPushOverSms,android.content.Context)>','<android.widget.TextView: void setError(java.lang.CharSequence)>','<android.accounts.AccountManager$BaseFutureTask$Response: void onError(int,java.lang.String)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$12000(android.net.wifi.WifiStateMachine)>','<android.widget.Editor$SuggestionsPopupWindow: void show()>','<android.content.SyncManager$ActiveSyncContext: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.net.NetworkAlertObserver: void <init>()>','<android.net.rtp.RtpStream: boolean isBusy()>','<android.view.ViewRootImpl$TakenSurfaceHolder: void setFormat(int)>','<android.view.View$5: java.lang.Object get(java.lang.Object)>','<android.webkit.WebViewClassic: void dumpDomTree(boolean)>','<android.widget.ImageView: void setImageState(int[],boolean)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void <init>(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.cat.RilMessageDecoder$1)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void enter()>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: void <init>()>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$902(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>','<android.view.IWindowManager$Stub$Proxy: void statusBarVisibilityChanged(int)>','<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getUserData(android.accounts.Account,java.lang.String)>','<android.accounts.AccountManagerService$7: void run()>','<android.webkit.WebViewClassic: void pageSwapCallback(boolean)>','<com.android.server.am.ActivityManagerService$ServiceMap: void removeServiceByName(android.content.ComponentName,int)>','<android.net.INetworkStatsService$Stub$Proxy: void forceUpdate()>','<android.widget.Spinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>','<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>','<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>','<android.app.IBackupAgent$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.location.ICountryListener$Stub: android.location.ICountryListener asInterface(android.os.IBinder)>','<android.media.IRingtonePlayer$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimImsimLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.os.Debug$MemoryInfo: void <init>()>','<com.android.server.WifiService: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>','<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>','<android.net.http.Headers: java.lang.String getContentEncoding()>','<com.android.server.NativeDaemonConnector: void monitor()>','<com.android.server.MountService: boolean isUsbMassStorageEnabled()>','<android.filterfw.core.GLFrameTimer: void <clinit>()>','<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.content.ContextWrapper: java.io.File getCacheDir()>','<android.webkit.ZoomManager: boolean supportsPanDuringZoom()>','<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.net.nsd.DnsSdTxtRecord: boolean contains(java.lang.String)>','<android.security.IKeyChainAliasCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasMobile()>','<com.android.server.ConnectivityService: java.lang.Object access$300(com.android.server.ConnectivityService)>','<android.content.ISyncStatusObserver$Stub: void <init>()>','<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getPeerProfile()>','<com.android.server.net.NetworkStatsCollection: boolean isDirty()>','<android.webkit.HTML5VideoView: void onPrepared(android.media.MediaPlayer)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneState(int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: com.android.internal.os.BatteryStatsImpl$Timer getSensorTime()>','<com.android.internal.telephony.cdma.CdmaCallTracker: boolean canDial()>','<com.android.internal.telephony.DataConnectionAc: android.net.LinkCapabilities rspLinkCapabilities(android.os.Message)>','<android.opengl.GLLogWrapper: void glColor4f(float,float,float,float)>','<com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>','<android.widget.TextView: void onDraw(android.graphics.Canvas)>','<com.android.uiautomator.core.InteractionController: boolean access$100(com.android.uiautomator.core.InteractionController,int,int)>','<android.server.BluetoothService: int getProfileConnectionState(int)>','<android.renderscript.RenderScript$RSErrorHandler: void run()>','<android.text.Layout$SpannedEllipsizer: int getSpanEnd(java.lang.Object)>','<android.util.SynchronizedPool: android.util.Poolable acquire()>','<com.android.server.sip.SipSessionGroup: boolean access$600(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>','<com.android.server.sip.SipSessionGroup: void openToReceiveCalls(android.net.sip.ISipSessionListener)>','<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo createOutgoingCall(java.lang.String)>','<android.net.rtp.AudioGroup: void clear()>','<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>','<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void setBindAppWidgetPermission(java.lang.String,boolean)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getPhoneName()>','<android.location.GeocoderParams: int describeContents()>','<android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode[] values()>','<android.filterfw.core.FieldPort: java.lang.String toString()>','<com.android.server.input.PersistentDataStore: void <init>()>','<com.android.server.am.AppErrorDialog: void <init>(android.content.Context,com.android.server.am.AppErrorResult,com.android.server.am.ProcessRecord)>','<android.graphics.Bitmap$BitmapFinalizer: void <init>(int)>','<com.android.server.ConnectivityService: int access$200(com.android.server.ConnectivityService,com.android.server.ConnectivityService$FeatureUser,boolean)>','<com.android.server.location.LocationProviderProxy: void reconnect(java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8000(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.app.ActivityGroup: void <init>(boolean)>','<android.view.WindowManager$LayoutParams: void <init>(android.os.Parcel)>','<android.webkit.BrowserFrame$ConfigCallback: void <init>(android.view.WindowManager)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimImpi()>','<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.app.ActivityThread$1: void run()>','<android.content.pm.PackageStats$1: void <init>()>','<android.content.pm.ProviderInfo$1: android.content.pm.ProviderInfo[] newArray(int)>','<android.webkit.CallbackProxy$UploadFileMessageData: android.webkit.CallbackProxy$UploadFile getUploadFile()>','<android.content.IIntentSender$Stub$Proxy: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)>','<com.android.internal.widget.TransportControlView: void access$100(com.android.internal.widget.TransportControlView,int)>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream printf(java.util.Locale,java.lang.String,java.lang.Object[])>','<android.bluetooth.BluetoothProfileState: void access$400(android.bluetooth.BluetoothProfileState,java.lang.String)>','<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>','<android.net.sip.SipProfile: java.lang.String access$800(android.net.sip.SipProfile)>','<android.content.BroadcastReceiver: void abortBroadcast()>','<android.widget.Editor$HandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.widget.Editor$HandleView: boolean isShowing()>','<android.os.RemoteCallbackList: void <init>()>','<android.webkit.FindActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>','<com.android.internal.telephony.cat.IconLoader: void handleMessage(android.os.Message)>','<android.widget.ZoomButtonsController: void <init>(android.view.View)>','<com.android.internal.policy.impl.ShortcutManager: void observe()>','<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>','<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>','<android.app.NotificationManager: void cancel(int)>','<com.android.internal.telephony.CallManager: boolean canTransfer(com.android.internal.telephony.Call)>','<android.net.wifi.p2p.WifiP2pDeviceList$1: android.net.wifi.p2p.WifiP2pDeviceList createFromParcel(android.os.Parcel)>','<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()>','<com.android.server.InputMethodManagerService: void onSessionCreated(com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession)>','<com.android.server.am.PendingIntentRecord: java.lang.String toString()>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void stopListening(int)>','<com.android.internal.telephony.DataConnection: com.android.internal.util.IState access$100(com.android.internal.telephony.DataConnection)>','<android.telephony.SmsCbCmasInfo: int getCategory()>','<android.app.ContextImpl$ServiceFetcher: java.lang.Object createService(android.app.ContextImpl)>','<android.text.TextUtils$Reverser: char charAt(int)>','<com.android.internal.widget.DigitalClock: void onDetachedFromWindow()>','<android.webkit.WebViewCore: void access$6600(android.webkit.WebViewCore,int,int)>','<android.hardware.Camera: android.hardware.Camera$FaceDetectionListener access$1100(android.hardware.Camera)>','<com.android.server.NetworkManagementSocketTagger: void tag(java.io.FileDescriptor)>','<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$1)>','<android.net.sip.SipSessionAdapter: void onRegistering(android.net.sip.ISipSession)>','<android.filterfw.core.ShaderProgram: void <clinit>()>','<com.android.internal.os.IResultReceiver$Stub: com.android.internal.os.IResultReceiver asInterface(android.os.IBinder)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()>','<android.widget.LinearLayout: int getDividerPadding()>','<android.view.animation.Animation$2: void <init>(android.view.animation.Animation)>','<com.android.internal.telephony.RIL: void getOperator(android.os.Message)>','<android.filterfw.core.SyncRunner: void close()>','<android.app.ActivityManager: int getLauncherLargeIconSize()>','<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>','<android.app.FragmentManagerState: int describeContents()>','<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)>','<android.widget.ProgressBar$RefreshData$1: void onReleased(android.util.Poolable)>','<android.location.Address: void <init>(java.util.Locale)>','<android.content.ClipData: android.content.ClipDescription getDescription()>','<android.net.http.RequestQueue$ActivePool: void startConnectionThread()>','<android.content.pm.VerifierInfo$1: void <init>()>','<com.android.ex.variablespeed.EngineParameters$Builder: void <init>()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>','<android.net.DhcpStateMachine: boolean access$400(android.net.DhcpStateMachine)>','<android.net.sip.SipProfile$1: android.net.sip.SipProfile createFromParcel(android.os.Parcel)>','<android.view.animation.AnimationSet: long computeDurationHint()>','<android.preference.Preference: int getPersistedInt(int)>','<android.net.http.Headers: void setContentType(java.lang.String)>','<android.net.EthernetDataTracker: void setPolicyDataEnable(boolean)>','<android.net.wifi.WifiStateMachine: android.os.PowerManager$WakeLock access$2100(android.net.wifi.WifiStateMachine)>','<android.webkit.WebCoreThreadWatchdog: android.os.Handler access$200(android.webkit.WebCoreThreadWatchdog)>','<android.webkit.PluginFullScreenHolder: void show()>','<android.text.format.DateUtils: java.util.Calendar newCalendar(boolean)>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean showCallScreenWithDialpad(boolean)>','<android.net.wifi.WifiNative: boolean setConcurrencyPriority(java.lang.String)>','<android.view.DragEvent: android.content.ClipData getClipData()>','<android.webkit.WebViewClassic: void selectAll()>','<android.text.Layout: int getParagraphRight(int)>','<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()>','<android.view.ViewRootImpl$TakenSurfaceHolder: void setKeepScreenOn(boolean)>','<android.widget.Editor$SelectionEndHandleView: void setActionPopupWindow(android.widget.Editor$ActionPopupWindow)>','<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int)>','<android.app.backup.BackupAgent$BackupServiceBinder: void <init>(android.app.backup.BackupAgent,android.app.backup.BackupAgent$1)>','<android.server.BluetoothA2dpService: void access$1000(java.lang.String)>','<com.android.internal.app.ActionBarImpl: int getTabCount()>','<android.location.ICountryDetector$Stub: android.location.ICountryDetector asInterface(android.os.IBinder)>','<android.net.wifi.WifiStateMachine: java.util.List syncGetConfiguredNetworks(com.android.internal.util.AsyncChannel)>','<android.view.GLES20Canvas: boolean clipRect(float,float,float,float)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendOrganizations(java.util.List)>','<android.server.BluetoothAdapterStateMachine: void <init>(android.content.Context,android.server.BluetoothService,android.bluetooth.BluetoothAdapter)>','<android.widget.Toast$TN$2: void run()>','<com.android.server.input.InputManagerService$3: void <init>(com.android.server.input.InputManagerService,java.util.HashSet)>','<android.net.Uri: void <clinit>()>','<android.widget.FastScroller: void setState(int)>','<android.widget.Toast: int getDuration()>','<com.android.server.AppWidgetServiceImpl: java.util.List getInstalledProviders()>','<android.graphics.drawable.RotateDrawable$RotateState: void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources)>','<android.net.sip.SipSession$1: void onRegistering(android.net.sip.ISipSession)>','<android.graphics.Bitmap$Config: void <clinit>()>','<com.android.internal.database.SortCursor$1: void onInvalidated()>','<com.android.server.AppWidgetServiceImpl: void computeMaximumWidgetBitmapMemory()>','<com.android.internal.telephony.cat.CommandDetails: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String maybeStripExtension(java.lang.StringBuilder)>','<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>','<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>','<android.telephony.SmsCbEtwsInfo: void <init>(android.os.Parcel)>','<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>','<android.view.ActionProvider: boolean onPerformDefaultAction()>','<android.accessibilityservice.AccessibilityServiceInfo: void access$000(android.accessibilityservice.AccessibilityServiceInfo,android.os.Parcel)>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.KeyEvent: int access$076(android.view.KeyEvent,int)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void access$400(android.webkit.WebIconDatabaseClassic$EventHandler,java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<android.webkit.WebView: void debugDump()>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)>','<android.text.style.URLSpan: int describeContents()>','<android.net.sip.SipManager$ListenerRelay: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.telephony.cat.RilMessageDecoder: void sendStartDecodingMessageParams(com.android.internal.telephony.cat.RilMessage)>','<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>','<com.android.internal.telephony.cat.CatCmdMessage$BrowserSettings: void <init>(com.android.internal.telephony.cat.CatCmdMessage)>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.IntKeyframeSet)>','<android.database.CursorWrapper: byte[] getBlob(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$Mode: void <clinit>()>','<android.location.ICountryListener$Stub: void <init>()>','<android.server.BluetoothBondState: java.util.ArrayList access$200(android.server.BluetoothBondState)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isDataAllowed()>','<android.app.IAlarmManager$Stub: void <init>()>','<android.webkit.BrowserFrame: void access$200(android.webkit.BrowserFrame,int)>','<com.android.server.StatusBarManagerService: void setSystemUiVisibility(int,int)>','<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()>','<android.telephony.SignalStrength: int getCdmaDbm()>','<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>','<com.android.internal.telephony.BaseCommands: void setOnSmsOnSim(android.os.Handler,int,java.lang.Object)>','<android.content.pm.VerifierInfo$1: android.content.pm.VerifierInfo[] newArray(int)>','<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>','<android.net.NetworkTemplate$1: android.net.NetworkTemplate[] newArray(int)>','<com.android.server.am.BatteryStatsService: void noteScanWifiLockReleased(int)>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$2: void run()>','<com.android.server.pm.PackageManagerService: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<android.app.backup.BackupDataInput: boolean readNextHeader()>','<android.net.http.Headers: java.lang.String getCacheControl()>','<com.android.ex.variablespeed.EngineParameters: int getTargetFrames()>','<android.app.SharedPreferencesImpl: int access$300(android.app.SharedPreferencesImpl)>','<android.content.pm.ContainerEncryptionParams: void <clinit>()>','<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>','<android.speech.tts.TtsEngines: java.lang.String[] parseLocalePref(java.lang.String)>','<android.util.AndroidException: void <init>(java.lang.String)>','<android.net.LocalSocket: int getReceiveBufferSize()>','<android.content.res.TypedArray: int getResourceId(int,int)>','<android.text.style.ScaleXSpan: float getScaleX()>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.webkit.ByteArrayBuilder$Chunk: void release()>','<android.view.GLES20Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>','<com.android.internal.policy.impl.LockPatternKeyguardView$4: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.view.inputmethod.InputMethodSubtype$1: android.view.inputmethod.InputMethodSubtype createFromParcel(android.os.Parcel)>','<android.widget.PopupWindow: void setTouchInterceptor(android.view.View$OnTouchListener)>','<android.view.accessibility.AccessibilityEvent: long getEventTime()>','<android.view.View$AttachInfo$InvalidateInfo$1: void onAcquired(android.view.View$AttachInfo$InvalidateInfo)>','<android.webkit.L10nUtils: void setApplicationContext(android.content.Context)>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>','<android.net.sip.SipAudioCall$1: void onRegistrationTimeout(android.net.sip.SipSession)>','<android.security.KeyChain: void <init>()>','<android.widget.TextView$CharWrapper: void set(char[],int,int)>','<android.app.ITransientNotification$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>','<com.android.internal.telephony.PhoneProxy: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>','<android.widget.AdapterView: android.view.View getEmptyView()>','<android.graphics.drawable.DrawableContainer: void animate(boolean)>','<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>','<android.os.Bundle: void putByte(java.lang.String,byte)>','<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<android.view.HardwareLayer: boolean isOpaque()>','<android.webkit.WebViewClassic: android.webkit.AccessibilityInjector access$5600(android.webkit.WebViewClassic)>','<com.android.internal.telephony.cdma.CDMALTEPhone: boolean updateCurrentCarrierInProvider()>','<com.android.internal.telephony.cdma.CdmaDataConnection: java.lang.String toString()>','<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>','<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster create()>','<android.database.sqlite.SQLiteStatement: void execute()>','<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>','<android.server.BluetoothService: boolean setTrust(java.lang.String,boolean)>','<android.view.VolumePanel: void postMuteChanged(int,int)>','<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$302(com.android.server.pm.PackageManagerService,com.android.internal.app.IMediaContainerService)>','<com.android.server.pm.PackageManagerService: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void onScreenTurnedOn()>','<android.hardware.Camera$Parameters: void setPictureFormat(int)>','<android.filterfw.core.GLFrame: void onFrameStore()>','<android.app.LoaderManagerImpl$LoaderInfo: void cancel()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] execute(int,java.lang.String,java.lang.Object[])>','<android.media.MediaRouter: android.media.MediaRouter$RouteCategory createRouteCategory(int,boolean)>','<com.android.internal.telephony.RIL: int access$300(java.io.InputStream,byte[])>','<android.view.View$ListenerInfo: android.view.View$OnHoverListener access$500(android.view.View$ListenerInfo)>','<com.android.internal.view.IInputContextCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.Editor$InsertionPointCursorController: void hide()>','<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>','<android.webkit.WebViewClassic$PrivateHandler: android.content.Context getContext()>','<android.appwidget.AppWidgetProviderInfo: void <init>()>','<android.app.FragmentManagerImpl: void popBackStack()>','<android.os.storage.StorageVolume: void <init>(java.lang.String,int,boolean,boolean,int,int,boolean,long,android.os.storage.StorageVolume$1)>','<android.content.res.XmlBlock: int access$1300(int)>','<android.graphics.Bitmap: int getDefaultDensity()>','<android.graphics.drawable.PaintDrawable: void <init>(int)>','<android.net.wifi.WifiStateMachine: android.app.PendingIntent access$14200(android.net.wifi.WifiStateMachine)>','<android.webkit.WebViewClassic: boolean performAccessibilityAction(int,android.os.Bundle)>','<android.view.View: void postInvalidate(int,int,int,int)>','<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)>','<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>','<android.hardware.Camera$Parameters: void setPictureSize(int,int)>','<android.graphics.Region: void setEmpty()>','<com.android.server.NativeDaemonEvent: boolean isClassServerError()>','<android.view.DisplayEventReceiver: void <init>(android.os.Looper)>','<android.inputmethodservice.InputMethodService: void setTheme(int)>','<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putString(int,java.lang.String)>','<android.view.View$10: void setValue(android.view.View,float)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()>','<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>','<android.preference.GenericInflater: void <init>(android.content.Context)>','<android.accounts.AccountManagerService$Session: void onTimedOut()>','<android.widget.AbsListView: int getSolidColor()>','<com.android.internal.view.menu.MenuPopupHelper: void onDismiss()>','<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>','<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>','<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>','<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()>','<android.server.BluetoothService$Reaper: void binderDied()>','<android.widget.TextView: int getOffsetForPosition(float,float)>','<com.android.internal.telephony.BaseCommands: void registerForRedirectedNumberInfo(android.os.Handler,int,java.lang.Object)>','<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)>','<android.hardware.usb.UsbEndpoint$1: void <init>()>','<android.net.sip.ISipSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.service.dreams.IDreamManager$Stub: void <init>()>','<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOff(int)>','<android.view.InputDevice: java.lang.String getDescriptor()>','<android.widget.BaseAdapter: boolean areAllItemsEnabled()>','<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>','<com.android.internal.content.NativeLibraryHelper: void <init>()>','<android.app.ExpandableListActivity: long getSelectedPosition()>','<com.android.server.am.ActivityManagerService$13: int compare(android.util.Pair,android.util.Pair)>','<com.android.server.am.ActivityStack: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,java.lang.String,android.os.ParcelFileDescriptor,int)>','<android.media.MediaRouter$Callback: void <init>()>','<com.android.internal.telephony.cdma.CDMAPhone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<android.view.ViewPropertyAnimator: long getStartDelay()>','<android.location.Location: boolean access$702(android.location.Location,boolean)>','<android.widget.Spinner: int getGravity()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void collapse()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRadioAvailable()>','<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfacePairs()>','<com.android.internal.view.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>','<com.android.server.wm.WindowToken: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.internal.view.BaseSurfaceHolder: void setSurfaceFrameSize(int,int)>','<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()>','<android.filterfw.core.Filter: void clearInputs()>','<android.media.SoundPool: int load(java.lang.String,int)>','<android.webkit.WebViewCore$AutoFillData: void <init>()>','<android.net.wifi.WifiStateMachine: boolean access$000(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode: com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode[] values()>','<android.net.sip.SipSession$1: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void read(java.io.InputStream)>','<android.view.View: void onVisibilityChanged(android.view.View,int)>','<android.os.storage.IMountServiceListener$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isSimPinEnabled()>','<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>','<android.net.Uri$OpaqueUri: int describeContents()>','<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceId()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.sip.SipPhone$SipCall access$1200(com.android.internal.telephony.sip.SipPhone)>','<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6300(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.net.wifi.WifiWatchdogStateMachine: long access$2700(android.net.wifi.WifiWatchdogStateMachine)>','<android.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>','<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>','<android.os.FileUtils$FileStatus: void <init>()>','<com.android.server.pm.PackageSettingBase: int getInstallStatus()>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void addNotification(android.os.IBinder,com.android.internal.statusbar.StatusBarNotification)>','<android.view.VolumePanel: void onShowVolumeChanged(int,int)>','<android.text.method.TextKeyListener$NullKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.policy.impl.RecentApplicationsDialog: void onClick(android.view.View)>','<com.android.internal.telephony.sip.SipCommandInterface: void getPreferredVoicePrivacy(android.os.Message)>','<android.webkit.WebSettingsClassic: boolean getUseWebViewBackgroundForOverscrollBackground()>','<android.hardware.usb.UsbDeviceConnection: void close()>','<android.net.wifi.WifiStateMachine: void access$13700(android.net.wifi.WifiStateMachine)>','<android.view.ViewDebug$2: void post(java.lang.Object[])>','<android.app.ProgressDialog: void setIndeterminate(boolean)>','<android.filterfw.core.SyncRunner: boolean isRunning()>','<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>','<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>','<com.android.server.pm.PackageManagerService: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>','<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>','<android.app.ActivityThread: android.os.Looper getLooper()>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$900(com.android.server.wm.WindowManagerService$LayoutFields)>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: void write(org.xmlpull.v1.XmlSerializer)>','<android.webkit.CallbackProxy$UploadFile: void onReceiveValue(android.net.Uri)>','<android.widget.Editor: boolean access$2100(android.widget.Editor)>','<android.content.pm.ConfigurationInfo$1: android.content.pm.ConfigurationInfo[] newArray(int)>','<android.view.GLES20RecordingCanvas: void setNextPoolable(android.view.GLES20RecordingCanvas)>','<android.net.wifi.p2p.WifiP2pManager$Channel: void access$1100(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector patternBuilder(com.android.uiautomator.core.UiSelector,com.android.uiautomator.core.UiSelector)>','<android.widget.TextView: void append(java.lang.CharSequence)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void <init>(com.android.internal.policy.impl.LockScreen,com.android.internal.widget.multiwaveview.GlowPadView)>','<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeRight()>','<android.telephony.GsmCellIdentity: void <init>(android.os.Parcel,android.telephony.GsmCellIdentity$1)>','<android.app.ActivityManagerProxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>','<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle)>','<android.net.NetworkInfo: boolean access$202(android.net.NetworkInfo,boolean)>','<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>','<android.os.Debug: void setFieldsOn(java.lang.Class)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>','<android.net.LinkCapabilities: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiWatchdogStateMachine: void access$1900(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>','<com.android.internal.policy.impl.SimPukUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>','<android.graphics.ColorMatrix: void setRGB2YUV()>','<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>','<android.media.SoundPool: void <clinit>()>','<com.android.internal.telephony.UUSInfo: int getDcs()>','<com.android.internal.telephony.RIL: void supplyIccPin2(java.lang.String,android.os.Message)>','<android.widget.OverScroller$SplineOverScroller: float access$200(android.widget.OverScroller$SplineOverScroller)>','<android.content.res.CompatibilityInfo: java.lang.String toString()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)>','<com.android.server.am.ActivityManagerService: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>','<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>','<android.webkit.WebViewClassic: void access$6100(int,int,android.graphics.Rect)>','<android.app.ActivityManager: void moveTaskToFront(int,int)>','<android.bluetooth.BluetoothHealthAppConfiguration: boolean equals(java.lang.Object)>','<android.view.InputEvent: int getSequenceNumber()>','<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnectionTracker$State getState()>','<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()>','<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>','<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>','<android.content.res.ColorStateList: int getDefaultColor()>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int,int,java.lang.Object)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$1500(com.android.server.sip.SipSessionGroup$SipSessionImpl,java.util.EventObject)>','<android.app.FragmentManagerImpl$6: void onAnimationEnd(android.animation.Animator)>','<android.widget.AbsListView: int access$2400(android.widget.AbsListView)>','<android.app.DownloadManager$CursorTranslator: void <init>(android.database.Cursor,android.net.Uri)>','<android.webkit.WebViewClassic: void setScrollXRaw(int)>','<android.opengl.GLLogWrapper: void glEnableClientState(int)>','<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.am.ActivityStack: void finishActivityResultsLocked(com.android.server.am.ActivityRecord,int,android.content.Intent)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()>','<android.database.SQLException: void <init>(java.lang.String)>','<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>','<com.android.server.am.ActivityManagerService$7: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.BatteryStatsService: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>','<com.android.internal.app.ActionBarImpl: void setLogo(int)>','<android.app.FragmentManagerImpl$5: void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment)>','<android.graphics.Rect: boolean intersect(android.graphics.Rect)>','<android.util.XmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser)>','<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)>','<android.webkit.WebView: void clearCache(boolean)>','<com.android.server.am.ProviderMap: void removeProviderByClass(android.content.ComponentName,int)>','<com.android.internal.telephony.gsm.GSMPhone: android.telephony.SignalStrength getSignalStrength()>','<android.app.BackStackRecord: void bumpBackStackNesting(int)>','<com.android.internal.view.menu.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void setTransactionId(int)>','<android.app.ActivityThread$Profiler: void <init>()>','<com.android.server.MountService: void access$2200(com.android.server.MountService,com.android.server.MountService$ObbState)>','<android.app.WallpaperManager$FastBitmapDrawable: void setAlpha(int)>','<com.android.internal.telephony.sip.SipPhone: void setMute(boolean)>','<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()>','<android.widget.PopupWindow: int getInputMethodMode()>','<android.nfc.NdefMessage: int describeContents()>','<android.telephony.cdma.CdmaSmsCbProgramData: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewGroup: void dispatchCollectViewAttributes(android.view.View$AttachInfo,int)>','<android.widget.Editor$Blink: void run()>','<com.android.server.PowerManagerService: android.content.Intent access$4100(com.android.server.PowerManagerService)>','<android.app.WallpaperManager: void initGlobals(android.os.Looper)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>','<android.hardware.usb.UsbEndpoint$1: android.hardware.usb.UsbEndpoint[] newArray(int)>','<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void rejectCall()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()>','<com.android.internal.telephony.DataConnectionTracker$State: com.android.internal.telephony.DataConnectionTracker$State valueOf(java.lang.String)>','<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>','<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>','<android.widget.OverScroller: int getDuration()>','<android.view.View: int getActualAndReportedWindowLeftDelta()>','<android.inputmethodservice.KeyboardView$3: void swipeDown()>','<android.provider.MediaStore$Audio$Albums: android.net.Uri getContentUri(java.lang.String)>','<android.util.Xml: void parse(java.io.InputStream,android.util.Xml$Encoding,org.xml.sax.ContentHandler)>','<com.android.internal.telephony.PhoneBase: void removeReferences()>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName)>','<android.bluetooth.IBluetoothA2dp$Stub: android.bluetooth.IBluetoothA2dp asInterface(android.os.IBinder)>','<android.app.backup.IBackupManager$Stub$Proxy: boolean isBackupEnabled()>','<android.webkit.WebSettingsClassic: void setTextSize(android.webkit.WebSettings$TextSize)>','<android.bluetooth.BluetoothUuid: boolean isAvrcpTarget(android.os.ParcelUuid)>','<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: void <clinit>()>','<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,float[],int)>','<com.android.internal.telephony.RestrictedState: void setCsEmergencyRestricted(boolean)>','<android.graphics.Matrix$1: void oops()>','<android.view.MotionEvent: int getSource()>','<android.net.EthernetDataTracker: int getDefaultGatewayAddr()>','<android.app.Fragment: int getId()>','<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler,boolean)>','<com.android.internal.telephony.CallManager: void unregisterForCallWaiting(android.os.Handler)>','<com.android.internal.telephony.sip.SipCommandInterface: void dial(java.lang.String,int,android.os.Message)>','<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>','<com.android.internal.os.BatteryStatsImpl: void finishIteratingHistoryLocked()>','<com.android.internal.widget.DrawableHolder: void onAnimationStart(android.animation.Animator)>','<com.android.server.DevicePolicyManagerService$1$1: void <init>(com.android.server.DevicePolicyManagerService$1)>','<com.android.internal.view.InputBindResult$1: com.android.internal.view.InputBindResult createFromParcel(android.os.Parcel)>','<android.webkit.ZoomManager: boolean isScaleOverLimits(float)>','<android.webkit.WebSettingsClassic: boolean isPrivateBrowsingEnabled()>','<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi(java.lang.String)>','<android.widget.Editor$SuggestionsPopupWindow: void <init>(android.widget.Editor)>','<android.webkit.WebViewClassic: void disablePlatformNotifications()>','<android.view.GLES20Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>','<android.widget.ZoomButtonsController$Container: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenOn()>','<android.webkit.WebViewClassic: boolean access$2902(android.webkit.WebViewClassic,boolean)>','<android.webkit.ZoomManager: boolean access$1000(android.webkit.ZoomManager)>','<com.android.server.input.InputManagerService: void <init>(android.content.Context,com.android.server.input.InputManagerService$Callbacks)>','<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>','<android.view.View: void setX(float)>','<com.android.server.wm.DragState: void notifyMoveLw(float,float)>','<android.os.StrictMode$StrictModeDiskWriteViolation: void <init>(int)>','<android.util.StateSet: boolean isWildCard(int[])>','<android.opengl.GLLogWrapper: void glViewport(int,int,int,int)>','<android.widget.AdapterView: void access$200(android.widget.AdapterView)>','<android.media.effect.effects.StraightenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.net.wifi.SupplicantStateTracker$UninitializedState: void enter()>','<android.accounts.GrantCredentialsPermissionActivity$1: void run(android.accounts.AccountManagerFuture)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setAllowedOverMetered(boolean)>','<com.android.internal.policy.impl.PatternUnlockScreen$1: void run()>','<android.webkit.WebView: android.graphics.Picture capturePicture()>','<android.widget.Spinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>','<com.android.internal.telephony.test.ModelInterpreter: void triggerIncomingUssd(java.lang.String,java.lang.String)>','<android.text.method.BaseMovementMethod: boolean canSelectArbitrarily()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree access$2200(android.bluetooth.BluetoothDeviceProfileState)>','<android.util.LongSparseArray: int size()>','<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>','<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void finish()>','<android.filterfw.core.NativeFrame: float[] getFloats()>','<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void unplug(long,long)>','<android.view.InputDevice$1: android.view.InputDevice createFromParcel(android.os.Parcel)>','<android.widget.SpellChecker: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>','<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: void enter()>','<com.android.internal.policy.impl.PasswordUnlockScreen$4: void onClick(android.view.View)>','<android.widget.AdapterViewAnimator: int getNumActiveViews()>','<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>','<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromUssdUserInput(java.lang.String,com.android.internal.telephony.gsm.GSMPhone)>','<com.android.internal.telephony.Connection: void setUserData(java.lang.Object)>','<android.renderscript.RenderScript: void nAllocationIoReceive(int)>','<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>','<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>','<android.app.LocalActivityManager: void dispatchPause(boolean)>','<android.content.pm.ContainerEncryptionParams$1: void <init>()>','<android.view.ViewDebug: java.lang.Object resolveId(android.content.Context,int)>','<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void <init>(com.android.server.am.ContentProviderRecord,android.os.IBinder)>','<android.webkit.ZoomManager: void refreshZoomScale(boolean)>','<com.android.internal.telephony.PhoneBase: void notifyMessageWaitingIndicator()>','<android.text.style.RelativeSizeSpan: void <init>(float)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean isApnTypeAvailable(java.lang.String)>','<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>','<android.filterfw.core.Filter: java.lang.String getName()>','<android.webkit.WebViewClassic: void externalRepresentation(android.os.Message)>','<android.server.BluetoothService: boolean setBondState(java.lang.String,int,int)>','<android.webkit.WebViewClassic$InvokeListBox$4: void <init>(android.webkit.WebViewClassic$InvokeListBox)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForCountryCode(int)>','<android.app.IAlarmManager$Stub$Proxy: void setInexactRepeating(int,long,long,android.app.PendingIntent)>','<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews,boolean)>','<android.webkit.CookieManager: boolean hasCookies(boolean)>','<com.android.internal.telephony.gsm.SmsCbHeader: boolean isEtwsPrimaryNotification()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.List)>','<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)>','<android.telephony.SignalStrength: java.lang.String toString()>','<android.text.StaticLayout: boolean getLineContainsTab(int)>','<android.view.View: int getLayoutDirection()>','<android.filterfw.core.OutputPort: boolean filterMustClose()>','<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void access$1300(com.android.internal.telephony.cdma.CdmaLteUiccRecords,android.os.AsyncResult)>','<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>','<android.view.ViewGroup: void dispatchDetachedFromWindow()>','<com.android.internal.widget.multiwaveview.Ease$Quart$1: void <init>()>','<android.view.animation.Transformation: void setAlpha(float)>','<android.view.HardwareRenderer: void disableVsync()>','<android.widget.AdapterView: int getPositionForView(android.view.View)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List numberFormats()>','<android.database.Observable: void unregisterObserver(java.lang.Object)>','<android.view.accessibility.AccessibilityEvent: int getAction()>','<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest access$100(com.android.internal.telephony.RIL,int)>','<android.server.BluetoothHealthProfileHandler: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<com.android.internal.telephony.test.ModelInterpreter: void triggerIncomingSMS(java.lang.String)>','<android.media.MediaRouter$UserRouteInfo: void <init>(android.media.MediaRouter$RouteCategory)>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkCapabilities getLinkCapabilities()>','<android.widget.ListPopupWindow: void setHorizontalOffset(int)>','<android.net.wifi.SupplicantStateTracker$InactiveState: void <init>(android.net.wifi.SupplicantStateTracker)>','<android.view.IWindowSession$Stub$Proxy: boolean outOfMemory(android.view.IWindow)>','<com.android.server.location.PassiveProvider: void updateNetworkState(int,android.net.NetworkInfo)>','<com.android.internal.telephony.cdma.CdmaConnection: long getConnectTime()>','<android.net.wifi.WifiStateMachine: java.util.List access$9902(android.net.wifi.WifiStateMachine,java.util.List)>','<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>','<android.opengl.GLLogWrapper: void glDisable(int)>','<android.server.BluetoothHealthProfileHandler: int access$000(android.server.BluetoothHealthProfileHandler)>','<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>','<com.android.server.location.GpsLocationProvider$2: void onReceive(android.content.Context,android.content.Intent)>','<android.content.pm.ProviderInfo$1: void <init>()>','<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<com.android.internal.telephony.AdnRecordCache: void <init>(com.android.internal.telephony.IccFileHandler)>','<android.content.pm.UserInfo: void writeToParcel(android.os.Parcel,int)>','<android.app.ApplicationThreadNative: android.app.IApplicationThread asInterface(android.os.IBinder)>','<android.animation.AnimatorSet$AnimatorSetListener: void onAnimationRepeat(android.animation.Animator)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$1600(android.net.wifi.WifiStateMachine)>','<com.android.server.NsdService$ClientInfo: java.lang.String toString()>','<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void initIncomingCall(android.net.sip.SipAudioCall,com.android.internal.telephony.Call$State)>','<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.CookieSyncManager: void stopSync()>','<android.widget.Editor: void onWindowFocusChanged(boolean)>','<android.app.backup.RestoreSet: int describeContents()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2800(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void sortResults(java.util.List)>','<com.android.server.WifiService$WifiLock: void binderDied()>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable: android.os.Handler access$400(android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable)>','<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getDeviceIdentity(android.os.Message)>','<android.app.Notification$BigTextStyle: void <init>()>','<android.util.SparseIntArray: int indexOfValue(int)>','<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$SwipeTracker access$600(android.inputmethodservice.KeyboardView)>','<android.webkit.AutoCompletePopup$AnchorView: void <init>(android.content.Context)>','<android.net.Uri: java.util.Set getQueryParameterNames()>','<android.widget.AdapterViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.WebSettingsClassic: android.webkit.WebSettings$TextSize getTextSize()>','<com.android.internal.os.BatteryStatsImpl: void writeOldHistory(android.os.Parcel)>','<android.content.ContentProvider$Transport: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.view.IInputMethodManager$Stub: void <init>()>','<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>','<android.widget.ScrollBarDrawable: void <init>()>','<android.location.LocationManager$GpsStatusListenerTransport$1: void handleMessage(android.os.Message)>','<android.view.View: void onDisplayHint(int)>','<com.android.internal.telephony.cdma.CdmaCall: boolean update(com.android.internal.telephony.cdma.CdmaConnection,com.android.internal.telephony.DriverCall)>','<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)>','<android.view.animation.AnimationSet: void setFillBefore(boolean)>','<com.android.server.am.ServiceRecord$2: void run()>','<com.android.server.NotificationManagerService: void access$1000(com.android.server.NotificationManagerService)>','<android.net.wifi.WifiStateMachine: void access$13500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.server.InputMethodManagerService$SessionState: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession)>','<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)>','<android.widget.SeekBar: void <init>(android.content.Context)>','<android.filterfw.core.Filter: void <init>(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void getOperator(android.os.Message)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void <init>(android.content.Context)>','<android.widget.AutoCompleteTextView: void clearListSelection()>','<com.android.internal.os.RuntimeInit$1: java.lang.String getId()>','<android.view.IWindowManager$Stub$Proxy: boolean isKeyguardSecure()>','<android.accounts.AccountManagerService: void <init>(android.content.Context)>','<android.text.Layout: void draw(android.graphics.Canvas)>','<com.android.server.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName)>','<com.android.server.AppWidgetServiceImpl: void <init>(android.content.Context,int)>','<android.graphics.drawable.RotateDrawable$RotateState: boolean canConstantState()>','<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)>','<android.hardware.input.KeyboardLayout: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>','<com.android.server.MountService$MountServiceBinderListener: void binderDied()>','<android.webkit.ZoomManager: float access$400(android.webkit.ZoomManager)>','<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>','<android.opengl.GLLogWrapper: void glPolygonOffsetx(int,int)>','<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])>','<android.inputmethodservice.InputMethodService: int getMaxWidth()>','<android.preference.PreferenceManager: void unregisterOnActivityDestroyListener(android.preference.PreferenceManager$OnActivityDestroyListener)>','<android.app.ActivityThread$ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>','<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>','<android.webkit.WebViewCore: boolean access$6800(android.webkit.WebViewCore,int)>','<com.android.internal.statusbar.StatusBarIconList: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaConnection: long getDisconnectTime()>','<android.widget.TextView: boolean onCheckIsTextEditor()>','<android.telephony.TelephonyManager: java.lang.String getMsisdn()>','<com.android.internal.widget.LockPatternUtils: java.util.List stringToPattern(java.lang.String)>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: int getMinimumWidth()>','<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>','<android.filterfw.core.FilterPort: void <init>(android.filterfw.core.Filter,java.lang.String)>','<android.content.res.ObbInfo$1: android.content.res.ObbInfo[] newArray(int)>','<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)>','<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab,boolean)>','<com.android.server.location.GpsLocationProvider: void access$2000(com.android.server.location.GpsLocationProvider)>','<android.database.Observable: void unregisterAll()>','<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>','<android.media.AudioService: void adjustStreamVolume(int,int,int)>','<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>','<android.app.SearchDialog$2: void <init>(android.app.SearchDialog)>','<com.android.server.am.ActivityRecord: void pauseKeyDispatchingLocked()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void cleanUpAllConnections(boolean,java.lang.String)>','<android.graphics.Matrix: boolean preTranslate(float,float)>','<android.media.AudioManager$1: void dispatchAudioFocusChange(int,java.lang.String)>','<android.view.View: java.util.ArrayList getFocusables(int)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>','<android.content.pm.UserInfo$1: android.content.pm.UserInfo createFromParcel(android.os.Parcel)>','<com.android.server.am.ProcessRecord: void updateHasAboveClientLocked()>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteHost(int)>','<android.accounts.IAccountAuthenticatorResponse$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.PopupWindow: void update(android.view.View,int,int)>','<android.view.View$AttachInfo$InvalidateInfo$1: void onAcquired(android.util.Poolable)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.UserInfo getUser(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)>','<android.content.pm.Signature: int describeContents()>','<android.animation.ValueAnimator: void end()>','<android.webkit.BrowserFrame: boolean firstLayoutDone()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<android.net.RouteInfo: boolean equals(java.lang.Object)>','<android.app.FragmentManagerImpl: void dispatchResume()>','<com.android.internal.telephony.gsm.GSMPhone: boolean updateCurrentCarrierInProvider()>','<android.view.MotionEvent: int getPointerId(int)>','<android.app.SearchableInfo: boolean useBadgeLabel()>','<android.webkit.WebSettingsClassic: void setUserAgentString(java.lang.String)>','<android.media.AudioManager: boolean isSpeakerphoneOn()>','<com.android.server.am.ActivityManagerService$DbBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.database.AbstractCursor: boolean isLast()>','<android.util.FloatProperty: void <init>(java.lang.String)>','<android.nfc.INfcTag$Stub$Proxy: boolean isNdef(int)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handleMessage(android.os.Message)>','<android.content.ClipData$Item: java.lang.String coerceToHtmlText(android.content.Context)>','<android.net.wifi.WifiInfo: java.lang.String removeDoubleQuotes(java.lang.String)>','<android.os.Messenger: int hashCode()>','<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>','<android.telephony.cdma.CdmaSmsCbProgramData: void <init>(int,int,java.lang.String,int,int,java.lang.String)>','<com.android.internal.statusbar.IStatusBarService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.telephony.SignalStrength: int getCdmaAsuLevel()>','<android.widget.Toast$TN: void hide()>','<android.view.inputmethod.CorrectionInfo: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void plug(long,long)>','<android.filterfw.io.TextGraphReader$AllocateFilterCommand: void execute(android.filterfw.io.TextGraphReader)>','<android.webkit.WebSettings: boolean getAllowFileAccess()>','<com.android.internal.telephony.DataConnectionAc: void <init>(com.android.internal.telephony.DataConnection,java.lang.String)>','<android.widget.AdapterView: void onDetachedFromWindow()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: void <init>()>','<android.security.SystemKeyStore: void deleteKey(java.lang.String)>','<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>','<android.widget.TextView: long prepareSpacesAroundPaste(int,int,java.lang.CharSequence)>','<com.android.internal.view.IInputContext$Stub$Proxy: void setSelection(int,int)>','<com.android.server.pm.PackageSettingBase: int getCurrentEnabledStateLPr(java.lang.String,int)>','<android.media.MediaFile: boolean isVideoFileType(int)>','<android.widget.SearchView$11: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)>','<android.net.wifi.WifiManager$MulticastLock: void <init>(android.net.wifi.WifiManager,java.lang.String,android.net.wifi.WifiManager$1)>','<android.text.method.SingleLineTransformationMethod: void <init>()>','<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$9500(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.webkit.ZoomManager: boolean isPreventingWebkitUpdates()>','<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)>','<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void log(java.lang.String)>','<android.hardware.usb.UsbDevice: int getProductId()>','<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>','<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>','<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setDataSource(java.lang.String)>','<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] following(int)>','<android.webkit.WebStorageClassic: void update()>','<android.widget.RemoteViewsAdapter: long getItemId(int)>','<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>','<android.view.Choreographer: long getFrameDelay()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean packageHasActiveAdmins(java.lang.String)>','<android.net.http.AndroidHttpClient$2: org.apache.http.protocol.HttpContext createHttpContext()>','<com.android.internal.os.BatteryStatsImpl: boolean getNextOldHistoryLocked(android.os.BatteryStats$HistoryItem)>','<android.widget.PopupWindow: int getWidth()>','<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String)>','<android.location.Location: java.lang.String getProvider()>','<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.internal.policy.impl.LockPatternKeyguardView$2: void requestShow(android.view.View)>','<android.app.Dialog: boolean onSearchRequested()>','<android.widget.Editor$EasyEditSpanController: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>','<com.android.server.MountService$2: void <init>(com.android.server.MountService,java.lang.String)>','<android.view.ViewGroup: android.view.View findViewWithTagTraversal(java.lang.Object)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setTag(java.lang.Object)>','<android.telephony.SmsCbLocation: void <init>(java.lang.String)>','<android.telephony.SmsMessage: boolean isReplace()>','<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>','<com.android.server.sip.SipService$SipSessionGroupExt: void setIncomingCallPendingIntent(android.app.PendingIntent)>','<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageIndicatorAddress()>','<android.view.HardwareRenderer: boolean isEnabled()>','<android.widget.Editor$ErrorPopup: void fixDirection(boolean)>','<com.android.uiautomator.core.UiDevice: boolean pressDPadRight()>','<com.android.server.wm.AppWindowAnimator: void clearAnimation()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.regex.Pattern access$600()>','<android.view.View: void debug()>','<com.android.server.NativeDaemonConnector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.CallManager: boolean access$000(com.android.internal.telephony.CallManager)>','<com.android.server.am.ActivityManagerService: void dumpDbInfo(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.WindowManagerImpl: android.view.WindowManager getDefault(android.content.res.CompatibilityInfo)>','<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>','<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>','<android.net.LinkProperties: android.net.LinkProperties$CompareResult compareDnses(android.net.LinkProperties)>','<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: void enter()>','<android.nfc.NfcActivityManager: void destroyActivityState(android.app.Activity)>','<android.view.HardwareRenderer$Gl20Renderer: void initCaches()>','<android.media.AudioService$RcClientDeathHandler: void binderDied()>','<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>','<android.server.BluetoothService: boolean startDiscovery()>','<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>','<android.media.RemoteControlClient: void access$1900(android.media.RemoteControlClient,android.media.IRemoteControlDisplay)>','<android.widget.SearchView: void access$2100(android.widget.SearchView,boolean)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasCountryCode()>','<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>','<android.filterfw.core.FieldPort: void transfer(android.filterfw.core.FilterContext)>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.ContentService$1: int compare(java.lang.Integer,java.lang.Integer)>','<com.android.internal.telephony.DataConnectionTracker$2: void <clinit>()>','<android.webkit.CookieManager: java.lang.Object clone()>','<android.webkit.WebSettingsClassic: void setMinimumLogicalFontSize(int)>','<android.os.StrictMode$7: void <init>()>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$1: void <init>(com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy,boolean)>','<com.android.internal.policy.impl.SimUnlockScreen: void cleanUp()>','<com.android.server.wm.Session: boolean outOfMemory(android.view.IWindow)>','<android.graphics.drawable.AnimatedRotateDrawable: boolean isStateful()>','<android.view.HardwareRenderer$Gl20Renderer: android.view.HardwareLayer createHardwareLayer(int,int,boolean)>','<android.location.Location: double getLatitude()>','<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.textservice.ITextServicesManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.policy.impl.PatternUnlockScreen: void onWindowFocusChanged(boolean)>','<com.android.server.location.MockProvider: boolean supportsAltitude()>','<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>','<android.view.View: int combineMeasuredStates(int,int)>','<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>','<android.view.ViewConfiguration: void <init>()>','<com.android.internal.app.ActionBarImpl: int getNavigationMode()>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void prepare()>','<android.net.TrafficStats: void closeQuietly(android.net.INetworkStatsSession)>','<com.android.internal.telephony.BaseCommands: void <clinit>()>','<com.android.internal.telephony.IccCard: boolean access$600(com.android.internal.telephony.IccCard)>','<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>','<android.content.pm.ParceledListSlice: void <clinit>()>','<com.android.internal.telephony.PhoneBase: void setEchoSuppressionEnabled(boolean)>','<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.os.StrictMode$6: void finish()>','<android.database.CursorWrapper: java.lang.String[] getColumnNames()>','<android.content.SyncStorageEngine$SyncHistoryItem: void <init>()>','<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>','<android.webkit.CallbackProxy: android.net.Uri openFileChooser(java.lang.String,java.lang.String)>','<android.content.ContentQueryMap: void finalize()>','<com.android.internal.telephony.cdma.EriManager: int getEriNumberOfEntries()>','<android.widget.RemoteViewsAdapter$2: void run()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: boolean processMessage(android.os.Message)>','<com.android.internal.view.menu.BaseMenuPresenter: void setId(int)>','<android.webkit.DeviceOrientationService: void onAccuracyChanged(android.hardware.Sensor,int)>','<android.content.Intent: int describeContents()>','<com.android.internal.telephony.BaseCommands: void setCurrentPreferredNetworkType()>','<com.android.internal.telephony.PhoneProxy: boolean handleInCallMmiCommands(java.lang.String)>','<android.content.IOnPrimaryClipChangedListener$Stub: android.os.IBinder asBinder()>','<android.content.pm.Signature: char[] toChars()>','<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.widget.SearchView$1: void <init>(android.widget.SearchView)>','<android.widget.RemoteViewsAdapter: int getViewTypeCount()>','<android.security.KeyChain: android.content.Intent createInstallIntent()>','<android.view.ViewPropertyAnimator: android.animation.Animator$AnimatorListener access$500(android.view.ViewPropertyAnimator)>','<android.view.ViewRootImpl: void dispatchImeFinishedEvent(int,boolean)>','<com.android.internal.telephony.IccCardApplication$AppType: com.android.internal.telephony.IccCardApplication$AppType valueOf(java.lang.String)>','<android.view.ViewGroup: boolean hasTransientState()>','<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)>','<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>','<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>','<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>','<android.graphics.Canvas: void setScreenDensity(int)>','<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>','<android.widget.OverScroller$SplineOverScroller: int access$300(android.widget.OverScroller$SplineOverScroller)>','<android.media.AudioService: int access$3700(android.media.AudioService,int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfPlLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<com.android.server.am.ActivityManagerService: void foregroundTokenDied(com.android.server.am.ActivityManagerService$ForegroundToken)>','<android.view.GLES20RenderLayer: android.view.HardwareCanvas start(android.graphics.Canvas)>','<android.widget.AbsListView$FlingRunnable: void startOverfling(int)>','<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>','<com.android.internal.telephony.cat.CommandDetails: boolean compareTo(com.android.internal.telephony.cat.CommandDetails)>','<android.net.wifi.WifiStateMachine: void access$11600(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.AbsListView$RecycleBin: void setViewTypeCount(int)>','<android.widget.OverScroller$SplineOverScroller: void finish()>','<com.android.server.pm.PackageManagerService$3: void <init>()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>','<android.app.UiModeManager: void enableCarMode(int)>','<com.android.server.location.GpsLocationProvider: boolean isSupported()>','<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()>','<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>','<android.content.ContentProvider$Transport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.content.pm.RegisteredServicesCache$ServiceInfo: java.lang.String toString()>','<android.net.wifi.WifiStateMachine: void access$1700(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.webkit.WebViewCore$EventHub: void access$7100(android.webkit.WebViewCore$EventHub,android.os.Message)>','<android.view.ViewRootImpl: void enqueueDisplayList(android.view.DisplayList)>','<android.view.ActionMode: void setTag(java.lang.Object)>','<android.os.WorkSource: void <init>(android.os.Parcel)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVoiceMailNumber()>','<android.net.wifi.WifiWatchdogStateMachine: void access$2100(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: int getCountryCodeForRegion(java.lang.String)>','<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>','<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void access$100(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<android.widget.Editor$SelectionActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>','<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)>','<com.android.internal.telephony.cdma.CdmaDataConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.ViewRootImpl: int getHostVisibility()>','<android.content.Intent: java.lang.String getDataString()>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<com.android.i18n.phonenumbers.PhoneNumberMatch: int start()>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanEnd(java.lang.Object)>','<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>','<android.net.http.RequestQueue: void shutdown()>','<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>','<android.webkit.WebViewDatabaseClassic: boolean hasUsernamePassword()>','<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimSpnLoaded: void onRecordLoaded(android.os.AsyncResult)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>','<com.android.internal.telephony.cdma.CdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>','<com.android.server.sip.SipSessionListenerProxy: void onCallEnded(android.net.sip.ISipSession)>','<android.view.MotionEvent: float getYPrecision()>','<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)>','<android.location.Criteria: int getAccuracy()>','<com.android.internal.telephony.RIL: void getPreferredVoicePrivacy(android.os.Message)>','<com.android.server.location.LocationProviderProxy: java.lang.String getInternalState()>','<com.android.internal.os.BatteryStatsImpl: void prepareForDumpLocked()>','<android.renderscript.RenderScript: void nObjDestroy(int)>','<android.webkit.WebViewCore: android.webkit.DeviceOrientationService getDeviceOrientationService()>','<com.android.server.wm.Session: void windowAddedLocked()>','<android.location.GeocoderParams$1: android.location.GeocoderParams createFromParcel(android.os.Parcel)>','<com.android.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>','<android.util.Log: int d(java.lang.String,java.lang.String)>','<android.net.nsd.NsdManager: void access$400(android.net.nsd.NsdManager,int)>','<android.content.res.Resources: java.lang.String getResourceEntryName(int)>','<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>','<com.android.internal.util.StateMachine: void deferMessage(android.os.Message)>','<android.app.ContextImpl$ApplicationContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>','<android.net.sip.ISipSession$Stub: void <init>()>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(boolean)>','<android.app.WallpaperManager: void forgetLoadedWallpaper()>','<com.android.internal.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)>','<android.util.LongSparseArray: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasVoicemail()>','<android.webkit.WebSyncManager: void stopSync()>','<android.view.PointerIcon: boolean isLoaded()>','<android.animation.Animator: void start()>','<com.android.internal.widget.WaveView: int access$000(com.android.internal.widget.WaveView)>','<android.content.ClipDescription$1: android.content.ClipDescription[] newArray(int)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onRefreshBatteryInfo(boolean,boolean,int)>','<com.android.server.wm.WindowState: void removeLocked()>','<com.android.server.connectivity.Tethering: com.android.internal.util.StateMachine access$500(com.android.server.connectivity.Tethering)>','<com.android.internal.telephony.AdnRecordLoader: void <init>(com.android.internal.telephony.IccFileHandler)>','<com.android.internal.widget.AbsActionBarView: void postShowOverflowMenu()>','<android.content.pm.ActivityInfo: int getRealConfigChanged()>','<com.android.server.am.AppWaitingForDebuggerDialog: void onStop()>','<com.android.internal.policy.impl.PhoneWindowManager: int rotationForOrientationLw(int,int)>','<android.accounts.AccountManagerService$Session: void onServiceDisconnected(android.content.ComponentName)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: void bind(android.content.Context,int,android.content.Intent)>','<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>','<android.hardware.input.IInputManager$Stub$Proxy: void addKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>','<com.android.server.NsdService$NsdStateMachine: void access$1500(com.android.server.NsdService$NsdStateMachine,com.android.internal.util.IState)>','<android.net.TrafficStats: void <clinit>()>','<android.webkit.WebViewClassic: android.view.View getZoomControls()>','<com.android.server.am.ActivityManagerService: void ensurePackageDexOpt(java.lang.String)>','<android.net.wifi.WifiStateTracker: boolean teardown()>','<com.android.server.PowerManagerService$9: void <init>(com.android.server.PowerManagerService)>','<com.android.internal.telephony.BaseCommands: int getLteOnCdmaMode()>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performGlobalAction(int)>','<com.android.internal.view.IInputContext$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.DevicePolicyManagerService$ActiveAdmin: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.internal.telephony.IccFileHandler: void loadEFLinearFixed(int,int,android.os.Message)>','<android.view.View$ListenerInfo: android.view.View$OnGenericMotionListener access$400(android.view.View$ListenerInfo)>','<android.content.BroadcastReceiver: int getResultCode()>','<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)>','<com.android.internal.os.storage.ExternalStorageFormatter: int onStartCommand(android.content.Intent,int,int)>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession$EventCallback)>','<android.content.ContentResolver$CursorWrapperInner: void <init>(android.content.ContentResolver,android.database.Cursor,android.content.IContentProvider)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>','<com.android.internal.view.BaseIWindow: void windowFocusChanged(boolean,boolean)>','<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>','<android.widget.ListPopupWindow$1: void <init>(android.widget.ListPopupWindow)>','<android.telephony.SmsManager: void <clinit>()>','<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>','<com.android.internal.telephony.CallManager$1: void handleMessage(android.os.Message)>','<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void viewClicked(boolean)>','<android.net.wifi.p2p.WifiP2pDevice: int describeContents()>','<com.android.internal.telephony.cdma.RuimFileHandler: java.lang.String getEFPath(int)>','<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>','<com.android.server.pm.PackageManagerService: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void plug(long,long)>','<com.android.server.wm.DimSurface: void <init>(android.view.SurfaceSession)>','<android.webkit.HTML5VideoView: int getTextureName()>','<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>','<android.os.FileObserver: void <clinit>()>','<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>','<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>','<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>','<android.opengl.Matrix: void setIdentityM(float[],int)>','<android.net.sip.SipAudioCall$1: void onCalling(android.net.sip.SipSession)>','<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getStatus()>','<android.net.wifi.WifiManager$MulticastLock: void finalize()>','<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>','<com.android.internal.telephony.MmiCode$State: void <clinit>()>','<android.animation.AnimatorSet: java.util.ArrayList access$200(android.animation.AnimatorSet)>','<android.content.ISyncStatusObserver$Stub: android.content.ISyncStatusObserver asInterface(android.os.IBinder)>','<android.net.WebAddress: void setPort(int)>','<com.android.internal.telephony.PhoneBase: java.lang.String getIccSerialNumber()>','<android.location.Criteria: void setAltitudeRequired(boolean)>','<com.android.internal.app.ActionBarImpl: void doHide(boolean)>','<android.widget.TextView: int getTotalPaddingEnd()>','<android.webkit.WebViewClassic: boolean pageUp(boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$4900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.media.IRemoteVolumeObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>','<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>','<android.net.wifi.WifiManager$WifiLock: java.lang.String toString()>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>','<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>','<com.android.server.am.ActivityManagerService$1: java.lang.String packageForFilter(com.android.server.am.BroadcastFilter)>','<android.view.View: void destroyDrawingCache()>','<android.view.IWindowManager$Stub$Proxy: void closeSystemDialogs(java.lang.String)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.sip.SipPhone$SipCall getCall()>','<android.widget.AbsListView: android.view.View focusSearch(android.view.View,int)>','<com.android.server.WifiService$LockList: java.util.List access$2300(com.android.server.WifiService$LockList)>','<android.nfc.NfcActivityManager: android.net.Uri[] getUris()>','<com.android.server.net.NetworkAlertObserver: void interfaceStatusChanged(java.lang.String,boolean)>','<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()>','<android.view.MenuInflater$MenuState: void <init>(android.view.MenuInflater,android.view.Menu)>','<com.android.internal.telephony.gsm.GSMPhone: void onMMIDone(com.android.internal.telephony.gsm.GsmMmiCode)>','<android.widget.Spinner: void <init>(android.content.Context,int)>','<android.accessibilityservice.UiTestAutomationBridge$1: void onServiceConnected()>','<android.bluetooth.IBluetooth$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.MotionEvent$PointerCoords: void <init>()>','<android.media.MediaPlayer: void <clinit>()>','<com.android.server.wm.AppWindowAnimator: void setDummyAnimation()>','<android.webkit.WebViewClassic$PastePopupWindow: void measureContent()>','<android.webkit.WebView: boolean shouldDelayChildPressedState()>','<android.widget.OverScroller: void <init>(android.content.Context)>','<com.android.internal.telephony.PhoneProxy: void unregisterForEcmTimerReset(android.os.Handler)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)>','<android.content.SyncOperation: void extrasToStringBuilder(android.os.Bundle,java.lang.StringBuilder)>','<android.widget.ZoomButtonsController: boolean access$000(android.widget.ZoomButtonsController)>','<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>','<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>','<android.net.wifi.WifiStateMachine$SupplicantStoppingState: boolean processMessage(android.os.Message)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Pkg getPackageStatsLocked(java.lang.String)>','<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()>','<com.android.internal.view.InputConnectionWrapper: boolean endBatchEdit()>','<android.util.MathUtils: float tan(float)>','<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>','<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.telephony.CallManager: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatOutOfCountryKeepingAlphaChars(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<com.android.server.pm.ShutdownThread: void actionDone()>','<android.webkit.WebViewClassic$WebViewInputConnection: void setAutoFillable(int)>','<android.widget.ListPopupWindow: void postShow()>','<com.android.internal.os.ProcessStats: int getLastIrqTime()>','<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)>','<android.widget.ListView$ArrowScrollFocusResult: int getSelectedPosition()>','<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>','<android.widget.ImageView: void onDraw(android.graphics.Canvas)>','<com.android.server.LightsService: android.os.Handler access$000(com.android.server.LightsService)>','<android.bluetooth.BluetoothProfileState: android.os.Message access$700(android.bluetooth.BluetoothProfileState)>','<com.android.internal.os.LoggingPrintStream: void println(java.lang.String)>','<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)>','<android.net.sip.SipAudioCall: void access$1200(android.net.sip.SipAudioCall,int,java.lang.String)>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()>','<com.android.internal.telephony.sip.SipCommandInterface: void getIMEI(android.os.Message)>','<android.view.WindowManagerImpl: void removeView(android.view.View)>','<android.webkit.HTML5VideoFullScreen$FullScreenMediaController: void hide()>','<android.hardware.Camera$Parameters: java.lang.String getSceneMode()>','<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void reset()>','<android.os.HandlerThread: void run()>','<android.os.AsyncTask$2: java.lang.Object call()>','<android.webkit.WebCoreThreadWatchdog: java.util.Set access$300(android.webkit.WebCoreThreadWatchdog)>','<android.util.MathUtils: float log(float)>','<android.webkit.WebViewClassic: int getViewHeight()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean truncateTooLongNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>','<android.net.NetworkQuotaInfo$1: android.net.NetworkQuotaInfo createFromParcel(android.os.Parcel)>','<android.filterfw.core.Filter: boolean isAvailable(java.lang.String)>','<android.webkit.WebViewCore$2: void updateQuota(long)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: int getTargetPosition(int)>','<android.widget.PopupWindow: void showAsDropDown(android.view.View)>','<android.webkit.BrowserFrame$1: void <init>(android.webkit.BrowserFrame,boolean,int,boolean)>','<com.android.vcard.VCardUtils: java.lang.String getPhoneTypeString(java.lang.Integer)>','<com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>','<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>','<com.android.internal.telephony.PhoneBase: boolean isInEcm()>','<android.view.ViewConfiguration: int getKeyRepeatDelay()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String)>','<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>','<com.android.server.NetworkManagementService: int getInterfaceRxThrottle(java.lang.String)>','<android.widget.AutoCompleteTextView: int getDropDownHeight()>','<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>','<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)>','<android.app.Activity: android.content.ComponentName getComponentName()>','<android.view.ViewPropertyAnimator: void <init>(android.view.View)>','<android.view.GLES20Canvas: void <init>(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getPreferredInternationalPrefix()>','<android.widget.AdapterView: void setSelectedPositionInt(int)>','<com.android.internal.telephony.cdma.CdmaConnection: void dispose()>','<android.media.AudioService: android.media.AudioService$AudioHandler access$100(android.media.AudioService)>','<android.server.BluetoothAdapterStateMachine: void access$600(java.lang.String)>','<android.text.style.URLSpan: java.lang.String getURL()>','<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection access$1900(com.android.internal.telephony.DataConnection)>','<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: boolean processMessage(android.os.Message)>','<android.accounts.AccountManagerService$1: void <init>(android.accounts.AccountManagerService)>','<android.net.wifi.p2p.WifiP2pDeviceList: boolean remove(android.net.wifi.p2p.WifiP2pDevice)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void lockNow()>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.widget.RemoteViews getViewAt(int)>','<android.view.View: void startAnimation(android.view.animation.Animation)>','<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<android.os.storage.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.gsm.GsmConnection: long getConnectTime()>','<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray: int describeContents()>','<android.bluetooth.BluetoothDevice: int hashCode()>','<com.android.server.wm.WindowManagerService$LayoutFields: com.android.server.wm.Session access$1100(com.android.server.wm.WindowManagerService$LayoutFields)>','<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>','<android.net.NetworkInfo: boolean isConnected()>','<com.android.internal.telephony.sip.SipCommandInterface: void getIMEISV(android.os.Message)>','<android.webkit.AutoCompletePopup: void setText(java.lang.CharSequence)>','<android.widget.Editor: boolean isCursorVisible()>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: int getHandle()>','<android.app.IThumbnailReceiver$Stub: void <init>()>','<android.server.search.SearchManagerService: void <init>(android.content.Context)>','<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder before(android.animation.Animator)>','<android.view.AccessibilityInteractionController: void access$800(android.view.AccessibilityInteractionController,android.os.Message)>','<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.view.ViewGroup$HoverTarget: void recycle()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$800(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<com.android.internal.telephony.gsm.GsmConnection: long getDurationMillis()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getSubtitle()>','<android.util.EventLog$Event: int getThreadId()>','<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>','<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>','<android.media.MediaRouter$UserRouteInfo: void setName(int)>','<android.net.Uri$HierarchicalUri: java.lang.String toString()>','<android.media.MediaRouter$RouteGroup: void removeRoute(int)>','<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder setContactId(long)>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>','<android.util.LruCache: int size()>','<android.view.ViewDebug: void <init>()>','<android.view.Window: void setDefaultWindowFormat(int)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean isInputRestricted()>','<com.android.server.wm.InputMonitor: int getPointerLayer()>','<android.location.LocationManager$GpsStatusListenerTransport: void onFirstFix(int)>','<android.widget.SearchView: void onActionViewCollapsed()>','<android.widget.FastScroller$ScrollFade: void run()>','<android.util.NtpTrustedTime: long getCacheCertainty()>','<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()>','<android.os.RemoteCallback$RemoteCallbackProxy: void <init>(android.os.IRemoteCallback)>','<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()>','<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>','<android.renderscript.Element$DataType: android.renderscript.Element$DataType valueOf(java.lang.String)>','<android.os.StrictMode$InstanceTracker: void <init>(java.lang.Object)>','<android.server.BluetoothPanProfileHandler: android.content.BroadcastReceiver access$100(android.server.BluetoothPanProfileHandler)>','<android.view.GLES20Canvas: void drawColor(int)>','<android.app.ActivityThread$ApplicationThread: void unstableProviderDied(android.os.IBinder)>','<android.widget.RemoteViews$ReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: int computeCurrentCountLocked()>','<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>','<android.app.ActivityThread: android.app.ActivityThread systemMain()>','<android.net.wifi.WifiConfiguration$PairwiseCipher: void <clinit>()>','<android.webkit.WebView: void onDraw(android.graphics.Canvas)>','<android.view.animation.Animation: boolean willChangeBounds()>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getSubscriberId()>','<android.net.IThrottleManager$Stub: void <init>()>','<android.media.AudioService$ScoClient: android.os.IBinder getBinder()>','<com.android.server.sip.SipHelper: javax.sip.ServerTransaction sendInviteOk(javax.sip.RequestEvent,android.net.sip.SipProfile,java.lang.String,javax.sip.ServerTransaction,java.lang.String,int)>','<android.net.wifi.WifiNative: boolean p2pFind(int)>','<android.database.sqlite.SQLiteQuery: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal)>','<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>','<android.bluetooth.BluetoothDeviceProfileState: void access$9400(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.widget.ZoomButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>','<android.provider.ContactsContract: void <init>()>','<android.view.GLES20Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>','<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>','<android.bluetooth.BluetoothDevice: int getBondState()>','<android.text.style.ForegroundColorSpan: int describeContents()>','<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>','<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$8: void run()>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine newTestInstance(android.content.Context)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasSameMobileAndFixedLinePattern()>','<com.android.internal.telephony.CallManager: void clearDisconnected()>','<android.webkit.AutoCompletePopup$1: void handleMessage(android.os.Message)>','<android.view.VelocityTracker: boolean isPooled()>','<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onVoiceCallStarted()>','<android.view.View: void setRotationY(float)>','<com.android.internal.telephony.RIL: void sendUSSD(java.lang.String,android.os.Message)>','<android.os.storage.StorageManager$ObbListenerDelegate$1: void <init>(android.os.storage.StorageManager$ObbListenerDelegate,android.os.Looper,android.os.storage.StorageManager)>','<android.accessibilityservice.AccessibilityService: int access$002(android.accessibilityservice.AccessibilityService,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void show()>','<com.android.server.PowerManagerService: android.hardware.Sensor access$7000(com.android.server.PowerManagerService)>','<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void acceptCall()>','<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>','<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls getControls()>','<com.android.internal.os.LoggingPrintStream: void print(char)>','<android.net.TrafficStats: android.net.NetworkStats stopDataProfiling(android.content.Context)>','<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfosResult(java.util.List,int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void setMute(boolean)>','<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager$ResolveListener)>','<android.media.AudioService$2: void onServiceDisconnected(int)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreCopy()>','<android.content.IIntentSender$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.PowerManagerService: void enableUserActivity(boolean)>','<com.android.internal.policy.impl.SimPukUnlockScreen$1: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen,java.lang.String,java.lang.String)>','<android.widget.MediaController$7: void onClick(android.view.View)>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>','<android.widget.FrameLayout: boolean getMeasureAllChildren()>','<android.animation.AnimatorListenerAdapter: void <init>()>','<com.android.server.InputMethodManagerService$6: void <init>(com.android.server.InputMethodManagerService)>','<android.view.View: void setAccessibilityFocusable(int)>','<com.android.internal.view.menu.MenuPopupHelper: boolean tryShow()>','<com.android.server.InputMethodManagerService: android.view.View access$700(com.android.server.InputMethodManagerService)>','<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>','<android.app.DownloadManager$CursorTranslator: int getInt(int)>','<android.widget.ExpandableListView$SavedState$1: android.widget.ExpandableListView$SavedState createFromParcel(android.os.Parcel)>','<android.os.storage.IMountService$Stub$Proxy: int verifyEncryptionPassword(java.lang.String)>','<android.view.animation.Animation: void setStartOffset(long)>','<com.android.internal.util.AsyncChannel$AsyncChannelConnection: void <init>(com.android.internal.util.AsyncChannel)>','<android.webkit.WebSettings: boolean getSaveFormData()>','<android.os.Bundle: float[] getFloatArray(java.lang.String)>','<android.webkit.WebViewClassic: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.content.pm.InstrumentationInfo$1: android.content.pm.InstrumentationInfo[] newArray(int)>','<android.graphics.drawable.GradientDrawable$GradientState: int getChangingConfigurations()>','<android.net.wifi.p2p.WifiP2pDevice: void <init>()>','<android.net.wifi.p2p.WifiP2pService: android.app.ActivityManager access$10000(android.net.wifi.p2p.WifiP2pService)>','<com.android.server.PowerManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.database.AbstractCursor: void onDeactivateOrClose()>','<com.android.internal.telephony.DataConnection: void access$1300(com.android.internal.telephony.DataConnection,android.os.Message)>','<android.opengl.GLLogWrapper: void glDepthFunc(int)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$2: void onChange(boolean)>','<com.android.internal.content.PackageMonitor: void onFinishPackageChanges()>','<android.widget.RelativeLayout$DependencyGraph$Node$1: void <init>()>','<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothPan access$002(android.bluetooth.BluetoothTetheringDataTracker,android.bluetooth.BluetoothPan)>','<android.app.ContextImpl: boolean stopService(android.content.Intent)>','<com.android.server.wm.WindowToken: java.lang.String toString()>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: com.android.internal.telephony.IWapPushManager access$000(com.android.internal.telephony.WapPushOverSms$WapPushConnection)>','<android.graphics.RectF: float centerX()>','<android.provider.MediaStore$Audio$Artists: android.net.Uri getContentUri(java.lang.String)>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(java.lang.String)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>','<com.android.server.am.ActivityManagerService$10: void run()>','<com.android.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>','<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: void <init>(com.android.internal.widget.multiwaveview.PointCloud)>','<android.bluetooth.BluetoothInputDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>','<com.android.internal.policy.impl.PasswordUnlockScreen: void onPause()>','<android.os.IMessenger$Stub$Proxy: void send(android.os.Message)>','<android.content.pm.VerifierInfo: void writeToParcel(android.os.Parcel,int)>','<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>','<com.android.server.am.ServiceRecord$StartItem: java.lang.String toString()>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getName()>','<android.server.BluetoothAdapterStateMachine: void access$1700(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setBlendFunc(android.renderscript.ProgramStore$BlendSrcFunc,android.renderscript.ProgramStore$BlendDstFunc)>','<android.app.ContextImpl$1: void <init>()>','<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>','<android.os.Handler: void <init>()>','<android.content.SyncStorageEngine: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>','<android.net.sip.SimpleSessionDescription$Fields: void access$000(android.net.sip.SimpleSessionDescription$Fields,java.lang.String)>','<com.android.server.wm.WindowState: boolean isVisibleOrAdding()>','<android.media.MediaPlayer: java.lang.String getStringParameter(int)>','<com.android.internal.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)>','<android.widget.AbsSpinner$SavedState: java.lang.String toString()>','<android.hardware.input.InputManager: void unregisterInputDeviceListener(android.hardware.input.InputManager$InputDeviceListener)>','<android.graphics.Paint$Cap: android.graphics.Paint$Cap[] values()>','<android.net.wifi.WifiNative: boolean ping()>','<android.filterfw.core.FieldPort: android.filterfw.core.Frame pullFrame()>','<android.net.wifi.WifiNative: boolean setScanMode(boolean)>','<com.android.internal.os.BatteryStatsImpl: void readLocked()>','<android.content.SyncStats$1: android.content.SyncStats[] newArray(int)>','<android.view.View$AccessibilityDelegate: void <init>()>','<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>','<android.animation.ValueAnimator: boolean doAnimationFrame(long)>','<android.text.style.SpellCheckSpan: int describeContents()>','<android.server.BluetoothAdapterStateMachine: void access$6700(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.view.MotionEvent: int getToolType(int)>','<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)>','<com.android.internal.policy.impl.KeyguardViewMediator$5: void <clinit>()>','<android.graphics.BlurMaskFilter$Blur: android.graphics.BlurMaskFilter$Blur[] values()>','<android.webkit.AutoCompletePopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder)>','<android.webkit.WebViewClassic: void requestListBox(java.lang.String[],int[],int[])>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>','<android.widget.AbsListView$WindowRunnnable: void rememberWindowAttachCount()>','<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>','<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.android.internal.view.menu.MenuView$ItemView)>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>','<android.view.animation.Animation: void detach()>','<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>','<com.android.internal.appwidget.IAppWidgetService$Stub: void <init>()>','<android.view.View: android.graphics.Insets getOpticalInsets()>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>','<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()>','<com.android.server.wm.WindowState: boolean canReceiveKeys()>','<android.os.IPowerManager$Stub$Proxy: void clearUserActivityTimeout(long,long)>','<android.media.AudioManager: boolean isBluetoothA2dpOn()>','<android.os.StrictMode$InstanceTracker: int getInstanceCount(java.lang.Class)>','<com.android.server.am.ActivityManagerService: boolean shutdown(int)>','<android.widget.Editor$InsertionPointCursorController: void <init>(android.widget.Editor,android.widget.Editor$1)>','<android.content.pm.InstrumentationInfo: java.lang.String toString()>','<android.net.LinkAddress: int describeContents()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>','<android.media.AudioService$AudioHandler: void handleMessage(android.os.Message)>','<android.telephony.CellIdentity: void <init>(int,java.lang.String)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int access$502(com.android.internal.telephony.gsm.GsmDataConnectionTracker,int)>','<android.content.SyncManager: boolean access$000(android.content.SyncManager)>','<android.app.IUiModeManager$Stub$Proxy: void setNightMode(int)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean isInCall()>','<com.android.server.input.InputApplicationHandle: void finalize()>','<com.android.internal.location.DummyLocationProvider: void setSupportsBearing(boolean)>','<android.view.View: float getRotationX()>','<com.android.server.sip.SipService: int access$1200(com.android.server.sip.SipService)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void access$500(android.webkit.WebIconDatabaseClassic$EventHandler,android.os.Message)>','<android.view.View: android.view.IWindowSession getWindowSession()>','<android.app.LocalActivityManager$LocalActivityRecord: void <init>(java.lang.String,android.content.Intent)>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void stop()>','<com.android.server.LocationManagerService$LpAccuracyComparator: int compare(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>','<com.android.internal.view.menu.MenuBuilder: void changeMenuMode()>','<android.os.storage.IMountShutdownObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>','<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>','<com.android.server.EventLogTags: void writeBatteryLevel(int,int,int)>','<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>','<android.net.DhcpStateMachine$DhcpAction: void <clinit>()>','<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>','<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>','<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>','<com.android.server.LocationManagerService$LpPowerComparator: int compare(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<com.android.internal.widget.multiwaveview.GlowPadView: void access$600(com.android.internal.widget.multiwaveview.GlowPadView,int)>','<android.widget.TextView: int computeHorizontalScrollRange()>','<com.android.server.pm.Settings: void readAllUsersPackageRestrictionsLPr()>','<android.os.Bundle: void putByteArray(java.lang.String,byte[])>','<android.graphics.Paint$Cap: android.graphics.Paint$Cap valueOf(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: void writeExternal(java.io.ObjectOutput)>','<android.accounts.IAccountManager$Stub$Proxy: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>','<android.widget.AutoCompleteTextView: void performValidation()>','<android.renderscript.RenderScript$MessageThread: void <init>(android.renderscript.RenderScript)>','<android.view.View: boolean requestAccessibilityFocus()>','<android.net.ConnectivityManager: boolean requestNetworkTransitionWakelock(java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingHid access$3102(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$OutgoingHid)>','<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<android.hardware.SensorManager: float[] getOrientation(float[],float[])>','<android.webkit.CallbackProxy$1: void onCancel(android.content.DialogInterface)>','<android.view.View: void setHovered(boolean)>','<android.content.ClipData$Item: void <init>(java.lang.CharSequence,java.lang.String)>','<com.android.internal.telephony.test.SimulatedGsmCallState: void <init>(android.os.Looper)>','<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean,java.lang.String)>','<android.net.wifi.WifiConfigStore$DelayedDiskWrite: void write(java.util.List)>','<com.android.internal.view.BaseSurfaceHolder: void setType(int)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)>','<android.view.HardwareLayer: int getHeight()>','<android.content.pm.ContainerEncryptionParams: long getDataEnd()>','<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)>','<android.text.Layout: int getOffsetForHorizontal(int,float)>','<com.android.internal.policy.impl.SimUnlockScreen: void access$700(com.android.internal.policy.impl.SimUnlockScreen,int)>','<android.server.BluetoothDeviceProperties: java.util.Map updateCache(java.lang.String)>','<android.bluetooth.BluetoothTetheringDataTracker: void setTeardownRequested(boolean)>','<android.bluetooth.BluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>','<com.android.internal.policy.impl.KeyguardViewBase$1: void draw(android.graphics.Canvas)>','<android.os.AsyncTask$1: java.lang.Thread newThread(java.lang.Runnable)>','<com.android.internal.view.menu.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.webkit.WebView: int getVisibleTitleHeight()>','<android.database.sqlite.SQLiteClosable: void releaseReference()>','<android.webkit.WebViewCore: void access$4600(android.webkit.WebViewCore,int,boolean)>','<android.app.SearchableInfo: int getImeOptions()>','<android.app.LoaderManagerImpl: void doRetain()>','<android.content.pm.IPackageManager$Stub$Proxy: void removePackageFromPreferred(java.lang.String)>','<com.android.internal.policy.impl.PasswordUnlockScreen: com.android.internal.widget.PasswordEntryKeyboardView access$500(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.hardware.Camera$Parameters: void setMeteringAreas(java.util.List)>','<android.server.BluetoothService: boolean enable()>','<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>','<com.android.internal.widget.LockPatternUtils: void updateEmergencyCallButtonState(android.widget.Button,int,boolean)>','<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>','<com.android.server.NsdService: void access$700(com.android.server.NsdService,boolean)>','<android.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>','<com.android.internal.telephony.cat.CommandDetails: void <init>()>','<android.graphics.drawable.Drawable: boolean onLevelChange(int)>','<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: int access$1202(android.server.BluetoothHealthProfileHandler$HealthChannel,int)>','<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$702(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<android.net.INetworkStatsService$Stub$Proxy: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>','<com.android.server.am.IntentBindRecord: void dumpInService(java.io.PrintWriter,java.lang.String)>','<android.webkit.WebViewClassic: void documentAsText(android.os.Message)>','<android.app.Service: boolean onUnbind(android.content.Intent)>','<com.android.server.PowerManagerService: void userActivity(long,boolean,int,boolean)>','<android.server.BluetoothAdapterStateMachine$PowerOff: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<com.android.internal.telephony.test.InterpreterEx: void <init>(java.lang.String)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getLine1Number()>','<android.media.AudioService: boolean loadSoundEffects()>','<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>','<android.view.MotionEvent: float getPressure(int)>','<com.android.server.pm.PackageSettingBase: void setEnabled(int,int)>','<com.android.internal.widget.ILockSettings$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebViewClassic: void setBaseLayer(int,boolean,boolean)>','<com.android.internal.policy.impl.FaceUnlock: void handleServiceConnected()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$1: void run()>','<android.media.MediaRouter$RouteGroup: void memberNameChanged(android.media.MediaRouter$RouteInfo,java.lang.CharSequence)>','<android.webkit.AccessibilityInjectorFallback: void onSelectionStringChange(java.lang.String)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: int getCurrentPosition()>','<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>','<android.view.View$AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>','<com.android.internal.policy.impl.FaceUnlock: com.android.internal.policy.IFaceLockInterface access$002(com.android.internal.policy.impl.FaceUnlock,com.android.internal.policy.IFaceLockInterface)>','<android.net.sip.SipSession$1: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>','<com.android.server.pm.PackageManagerService: int access$2408(com.android.server.pm.PackageManagerService)>','<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>','<android.hardware.ISerialManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.animation.ObjectAnimator: void initAnimation()>','<android.app.ContextImpl$16: java.lang.Object createService(android.app.ContextImpl)>','<android.app.FragmentManagerState: void <init>()>','<com.android.server.InputMethodManagerService: void removeClient(com.android.internal.view.IInputMethodClient)>','<android.app.ActivityThread: void scheduleGcIdler()>','<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>','<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>','<android.view.Window: void destroy()>','<android.content.ContextWrapper: android.content.res.Resources getResources()>','<com.android.internal.widget.ActionBarContextView: void onDetachedFromWindow()>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)>','<android.widget.AbsListView: android.widget.EdgeEffect access$1900(android.widget.AbsListView)>','<android.hardware.usb.UsbInterface: int getEndpointCount()>','<android.graphics.Canvas: void scale(float,float,float,float)>','<com.android.server.am.ActivityRecord: void takeFromHistory()>','<com.android.internal.os.BatteryStatsImpl$Uid: java.util.Map getSensorStats()>','<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ResultReceiver access$1200(com.android.server.AlarmManagerService)>','<android.content.res.CompatibilityInfo$Translator: void translateCanvas(android.graphics.Canvas)>','<android.graphics.Region: boolean set(int,int,int,int)>','<android.widget.AbsSpinner$SavedState$1: android.widget.AbsSpinner$SavedState createFromParcel(android.os.Parcel)>','<android.view.HardwareRenderer$Gl20Renderer: android.view.HardwareRenderer create(boolean)>','<android.app.ApplicationErrorReport: int describeContents()>','<com.android.server.wm.WindowManagerService$1: void released()>','<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>','<android.os.ZygoteStartFailedEx: void <init>(java.lang.String)>','<com.android.internal.telephony.IccRecords: java.lang.String getServiceProviderName()>','<android.widget.TextView: float getTextSize()>','<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>','<com.android.server.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>','<android.preference.GenericInflater: void <init>(android.preference.GenericInflater,android.content.Context)>','<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isNetworkSpecific()>','<android.webkit.WebViewCore: void access$1700(android.webkit.WebViewCore,int)>','<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onRequestContinued()>','<com.android.server.WifiService: boolean releaseWifiLock(android.os.IBinder)>','<android.webkit.WebViewCore: void stopLoading()>','<android.app.ApplicationThreadProxy: void scheduleSuicide()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean keyguardOn()>','<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>','<com.android.server.wm.WindowManagerService$PolicyThread: void <init>(android.view.WindowManagerPolicy,com.android.server.wm.WindowManagerService,android.content.Context,com.android.server.PowerManagerService)>','<com.android.internal.telephony.test.SimulatedGsmCallState: void setAutoProgressConnectingCall(boolean)>','<android.app.ActivityManagerNative: android.app.IActivityManager asInterface(android.os.IBinder)>','<android.location.Country$1: void <init>()>','<com.android.internal.telephony.PhoneBase: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>','<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>','<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>','<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>','<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()>','<android.net.LinkProperties: void setInterfaceName(java.lang.String)>','<android.webkit.JsResult: boolean getResult()>','<com.android.internal.policy.impl.GlobalActions: void onClick(android.content.DialogInterface,int)>','<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>','<com.android.internal.widget.multiwaveview.Ease$Cubic$3: float getInterpolation(float)>','<android.widget.ScrollBarDrawable: void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimCdmaHomeLoaded: java.lang.String getEfName()>','<com.android.internal.widget.LockPatternUtils: boolean resumeCall()>','<android.content.res.Resources: int getColor(int)>','<com.android.internal.os.BatteryStatsImpl$Counter: void logState(android.util.Printer,java.lang.String)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focusable(boolean)>','<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)>','<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)>','<android.net.EthernetDataTracker$InterfaceObserver: void limitReached(java.lang.String,java.lang.String)>','<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>','<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()>','<android.os.Debug$MemoryInfo: void <init>(android.os.Parcel,android.os.Debug$1)>','<com.android.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<com.android.internal.telephony.cdma.CdmaDataConnection: com.android.internal.telephony.cdma.CdmaDataConnection makeDataConnection(com.android.internal.telephony.cdma.CDMAPhone,int,com.android.internal.telephony.RetryManager,com.android.internal.telephony.DataConnectionTracker)>','<com.android.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>','<com.android.internal.telephony.cdma.CDMAPhone: void getOutgoingCallerIdDisplay(android.os.Message)>','<android.view.GLES20RecordingCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>','<android.content.SyncStorageEngine: android.content.SyncInfo addActiveSync(android.content.SyncManager$ActiveSyncContext)>','<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: void <init>()>','<android.text.style.AbsoluteSizeSpan: boolean getDip()>','<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>','<com.android.internal.widget.LockPatternView$SavedState: void <init>(android.os.Parcel,com.android.internal.widget.LockPatternView$1)>','<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void loge(java.lang.String)>','<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata addIntlNumberFormat(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)>','<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView$Validator)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>','<com.android.server.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName)>','<com.android.server.wm.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)>','<android.widget.ListPopupWindow$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>','<android.opengl.GLLogWrapper: void glTexEnviv(int,int,int[],int)>','<com.android.internal.view.menu.ListMenuItemView: void setChecked(boolean)>','<android.location.ILocationManager$Stub$Proxy: void clearTestProviderLocation(java.lang.String)>','<android.app.ApplicationPackageManager$ResourceName: boolean equals(java.lang.Object)>','<android.view.ViewGroup: void setClipChildren(boolean)>','<android.bluetooth.BluetoothAdapter$1: void <init>(android.bluetooth.BluetoothAdapter,android.os.Looper)>','<android.bluetooth.IBluetoothA2dp$Stub: void <init>()>','<com.android.uiautomator.core.InteractionController$2: boolean apply(java.lang.Object)>','<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>','<android.app.WallpaperManager$Globals: android.graphics.Bitmap access$102(android.app.WallpaperManager$Globals,android.graphics.Bitmap)>','<com.android.internal.widget.multiwaveview.Ease$Quad: void <init>()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: int getWakeups(int)>','<com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State valueOf(java.lang.String)>','<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$1300(android.net.sip.SipAudioCall)>','<android.view.ViewDebug$4: void <init>(android.view.View)>','<android.app.Notification: java.lang.String toString()>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,int,int,byte[],int)>','<android.app.LoadedApk$ReceiverDispatcher: java.lang.RuntimeException getUnregisterLocation()>','<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>','<android.accessibilityservice.AccessibilityService: void <init>()>','<android.os.BadParcelableException: void <init>(java.lang.Exception)>','<android.view.View: boolean fitsSystemWindows()>','<android.content.SyncManager$10: int compare(android.content.SyncManager$AuthoritySyncStats,android.content.SyncManager$AuthoritySyncStats)>','<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>','<com.android.server.am.UsageStatsService$2: void onPackageRemoved(java.lang.String,int)>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy: com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback access$3100(com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy)>','<android.webkit.WebSettings: boolean getBuiltInZoomControls()>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void <init>(android.inputmethodservice.InputMethodService)>','<android.widget.SearchView: int getInputType()>','<android.net.wifi.WifiManager$MulticastLock: void release()>','<com.android.server.sip.SipSessionGroup: boolean containsSession(java.lang.String)>','<android.os.PatternMatcher$1: android.os.PatternMatcher createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.CallManager$2: void <clinit>()>','<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>','<android.webkit.WebView: int computeHorizontalScrollRange()>','<android.net.wifi.WifiStateMachine: int access$6700(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver$1: void run()>','<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>','<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>','<android.view.animation.AnimationSet: void reset()>','<android.media.MediaRouter$Static: void <init>(android.content.Context)>','<android.view.ViewGroup: void addView(android.view.View,int,int)>','<android.os.Parcel: void writeLongArray(long[])>','<com.android.server.MountService$ObbState: void unlink()>','<android.view.ViewPropertyAnimator$1: void run()>','<android.webkit.WebViewCore$2: void <init>(android.webkit.WebViewCore)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getPremiumRate()>','<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>','<android.view.MotionEvent$PointerProperties: void clear()>','<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>','<android.webkit.SearchBoxImpl: void setSelection(int,int)>','<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>','<android.webkit.CookieManagerClassic: boolean acceptCookie()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isApnTypeAvailable(java.lang.String)>','<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>','<com.android.server.WifiService$WifiStateMachineHandler: void handleMessage(android.os.Message)>','<android.preference.PreferenceFragment: void onDestroy()>','<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>','<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.ThumbnailHolder,boolean)>','<android.graphics.drawable.AnimationDrawable: void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>','<com.android.internal.telephony.PhoneBase: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>','<android.accounts.AccountManagerService$Session: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>','<android.net.wifi.WifiStateMachine: void access$3500(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.app.ITransientNotification$Stub: android.app.ITransientNotification asInterface(android.os.IBinder)>','<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>','<com.android.server.InputMethodManagerService$ImeSubtypeListItem: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.view.inputmethod.InputMethodInfo,int,java.lang.String,java.lang.String)>','<com.android.server.net.NetworkStatsService: int access$1502(com.android.server.net.NetworkStatsService,int)>','<android.graphics.Rect: void printShortString(java.io.PrintWriter)>','<android.os.StrictMode$VmPolicy$Builder: void <init>()>','<android.graphics.Path: void reset()>','<android.text.method.WordIterator: int following(int)>','<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>','<android.hardware.SensorManager: void <init>()>','<com.android.internal.telephony.PhoneSubInfoProxy: void setmPhoneSubInfo(com.android.internal.telephony.PhoneSubInfo)>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>()>','<android.app.ApplicationErrorReport$AnrInfo: void <init>(android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int)>','<android.webkit.CallbackProxy: void setInstallableWebApp()>','<android.hardware.input.IInputManager$Stub$Proxy: void removeKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.hardware.usb.UsbDevice: int getInterfaceCount()>','<android.widget.CompoundButton$SavedState: void <clinit>()>','<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>','<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewBase: void resetBackground()>','<android.hardware.Camera: android.hardware.Camera$AutoFocusCallback access$900(android.hardware.Camera)>','<android.net.wifi.WifiStateMachine: android.app.AlarmManager access$9500(android.net.wifi.WifiStateMachine)>','<android.net.NetworkIdentity: java.lang.String getNetworkId()>','<android.animation.LayoutTransition: boolean access$1000(android.animation.LayoutTransition)>','<android.telephony.SmsMessage: int getStatusOnIcc()>','<com.android.internal.view.menu.MenuItemImpl: void setSubMenu(com.android.internal.view.menu.SubMenuBuilder)>','<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getBackgroundCall()>','<android.location.LocationManager$ListenerTransport: void onProviderDisabled(java.lang.String)>','<android.widget.TextView: void setTextColor(int)>','<android.webkit.WebView: void access$101(android.webkit.WebView,int,int)>','<android.media.MediaRouter: void dispatchRouteAdded(android.media.MediaRouter$RouteInfo)>','<android.app.Activity: android.app.Application getApplication()>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void end()>','<android.net.http.Connection: boolean getCanPersist()>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: android.view.View getCustomView()>','<android.media.MediaRouter$SimpleCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo)>','<android.view.HardwareRenderer$GlRenderer: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>','<com.android.internal.statusbar.StatusBarIconList$1: void <init>()>','<com.android.server.pm.ShutdownThread$5: void run()>','<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)>','<com.android.internal.telephony.RIL: void setGsmBroadcastActivation(boolean,android.os.Message)>','<android.view.View: int getTextDirection()>','<android.app.PendingIntent$1: android.app.PendingIntent createFromParcel(android.os.Parcel)>','<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>','<android.util.SparseArray: void setValueAt(int,java.lang.Object)>','<android.content.IntentFilter: java.lang.String getCategory(int)>','<android.view.MenuInflater: void inflate(int,android.view.Menu)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.StringBuilder access$500(java.lang.String,boolean)>','<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()>','<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>','<android.app.ContextImpl: void enforcePermission(java.lang.String,int,int,java.lang.String)>','<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.am.ActivityManagerService: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,boolean)>','<com.android.internal.telephony.RIL: void getSmscAddress(android.os.Message)>','<android.content.SyncManager$ServiceConnectionData: void <init>(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.ISyncAdapter)>','<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>','<com.android.internal.widget.PointerLocationView$PointerState: android.view.VelocityTracker$Estimator access$700(com.android.internal.widget.PointerLocationView$PointerState)>','<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>','<android.webkit.WebSettingsClassic: java.lang.String getProperty(java.lang.String)>','<android.location.Location$1: android.location.Location createFromParcel(android.os.Parcel)>','<com.android.server.am.ActivityManagerService$7: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.widget.ActionBarContextView$1: void <init>(com.android.internal.widget.ActionBarContextView,android.view.ActionMode)>','<com.android.internal.policy.impl.KeyguardViewBase: void handleMediaKeyEvent(android.view.KeyEvent)>','<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>','<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>','<android.os.IPowerManager$Stub$Proxy: int getSupportedWakeLockFlags()>','<com.android.server.location.GpsLocationProvider: void access$900(com.android.server.location.GpsLocationProvider)>','<android.media.MediaFile: void <clinit>()>','<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatus(android.content.SyncStorageEngine$AuthorityInfo)>','<android.webkit.ConsoleMessage$MessageLevel: android.webkit.ConsoleMessage$MessageLevel[] values()>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: void <init>(java.lang.CharSequence,char[],char[])>','<android.view.HardwareRenderer$GlRenderer: boolean canDraw()>','<com.android.internal.view.IInputConnectionWrapper: void commitCompletion(android.view.inputmethod.CompletionInfo)>','<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>','<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>','<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>','<android.net.sip.SipSessionAdapter: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean enableDataConnectivity()>','<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.ZoomControlExternal: android.webkit.WebViewClassic access$400(android.webkit.ZoomControlExternal)>','<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>','<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>','<android.app.Notification$Action: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.view.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>','<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>','<com.android.internal.telephony.sip.SipPhone: boolean getMute()>','<com.android.internal.policy.impl.PasswordUnlockScreen: void onResume()>','<com.android.server.am.BatteryStatsService: void noteStartWakelock(int,int,java.lang.String,int)>','<android.opengl.GLLogWrapper: void glScalef(float,float,float)>','<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>','<android.app.ProgressDialog$1: void <init>(android.app.ProgressDialog)>','<com.android.ex.variablespeed.VariableSpeed: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>','<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean)>','<android.net.TrafficStats: long getTxBytes(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State getState()>','<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>','<android.net.LinkProperties: int hashCode()>','<com.android.server.am.ActivityManagerService$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison)>','<android.os.ParcelFormatException: void <init>()>','<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>','<com.android.internal.telephony.PhoneBase: void unregisterForDisconnect(android.os.Handler)>','<com.android.server.net.NetworkStatsService$9: boolean handleMessage(android.os.Message)>','<com.android.internal.policy.impl.LockScreen$3: void run()>','<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>','<android.app.ProgressDialog: java.lang.String access$100(android.app.ProgressDialog)>','<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>','<android.net.wifi.WifiNative: boolean p2pFind()>','<com.android.internal.telephony.BaseCommands: void unregisterForRilConnected(android.os.Handler)>','<android.app.PendingIntent$CanceledException: void <init>(java.lang.String)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.am.ContentProviderConnection: void toClientString(java.lang.StringBuilder)>','<com.android.internal.policy.impl.GlobalActions: android.content.Context access$200(com.android.internal.policy.impl.GlobalActions)>','<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>','<android.media.IRingtonePlayer$Stub: void <init>()>','<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>','<android.animation.ValueAnimator: void setDurationScale(float)>','<android.content.pm.PackageParser$Activity: void setPackageName(java.lang.String)>','<android.filterfw.core.StopWatch: void start()>','<android.renderscript.ProgramStore: boolean isDepthMaskEnabled()>','<android.inputmethodservice.ExtractEditText: boolean performClick()>','<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>','<android.view.MotionEvent: float getHistoricalPressure(int)>','<android.app.ContextImpl: void startActivity(android.content.Intent)>','<android.view.ViewConfiguration: int getScrollBarSize()>','<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>','<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>','<android.content.SyncManager$3: void onReceive(android.content.Context,android.content.Intent)>','<android.net.sip.SipSession: void endCall()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String getNid()>','<android.view.View$AttachInfo$InvalidateInfo: void <clinit>()>','<android.server.BluetoothService: boolean setPin(java.lang.String,byte[])>','<android.webkit.WebViewClassic: android.webkit.SearchBox getSearchBox()>','<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: java.lang.String inputDigitAndRememberPosition(char)>','<android.net.DummyDataStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>','<android.accounts.AccountAuthenticatorActivity: void <init>()>','<android.app.ActivityOptions: void abort()>','<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.server.wm.WindowManagerService: void checkDrawnWindowsLocked()>','<com.android.internal.telephony.sip.SipCallBase: void <init>()>','<android.view.ViewGroup: void removeAllViews()>','<com.android.server.MountService: android.os.Handler access$400(com.android.server.MountService)>','<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>','<android.filterfw.core.FrameFormat: int getHeight()>','<android.view.animation.Animation: android.view.animation.Animation clone()>','<android.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)>','<com.android.internal.telephony.ims.IsimUiccRecords: void <init>()>','<com.android.internal.telephony.SmsRawData: void <init>(byte[])>','<android.text.TextUtils: boolean isGraphic(char)>','<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>','<android.view.KeyCharacterMap: boolean deviceHasKey(int)>','<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>','<android.security.KeyStore: boolean grant(java.lang.String,int)>','<android.os.Parcel: void readFloatArray(float[])>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>','<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>','<android.widget.SpellChecker: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>','<android.accounts.GrantCredentialsPermissionActivity: void onClick(android.view.View)>','<android.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>','<android.text.HtmlToSpannedConverter$Blockquote: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.text.SpanSet: void init(android.text.Spanned,int,int)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isConnected()>','<android.view.ActionProvider: void <init>(android.content.Context)>','<android.text.method.AllCapsTransformationMethod: void setLengthChangesAllowed(boolean)>','<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void onClick(android.view.View)>','<com.android.server.AppWidgetServiceImpl: void sendInitialBroadcasts()>','<android.telephony.CellInfo: void <init>(android.os.Parcel,android.telephony.CellInfo$1)>','<android.net.http.AndroidHttpClientConnection: void <init>()>','<android.net.wifi.SupplicantStateTracker: int access$002(android.net.wifi.SupplicantStateTracker,int)>','<com.android.server.sip.SipSessionGroup: java.lang.String access$700(java.util.EventObject)>','<android.app.BackStackRecord: boolean isEmpty()>','<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>','<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: void <init>(android.content.Context,int,java.util.List,int)>','<android.filterfw.core.SerializedFrame$DirectByteInputStream: long skip(long)>','<com.android.server.StatusBarManagerService: void topAppWindowChanged(boolean)>','<android.preference.PreferenceFragment$2: void run()>','<android.graphics.Bitmap: int getScaledWidth(int)>','<android.location.IGeocodeProvider$Stub: void <init>()>','<android.graphics.ColorMatrix: void setScale(float,float,float,float)>','<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe[])>','<com.android.internal.policy.impl.KeyguardViewMediator: int access$500(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.server.net.NetworkStatsService: void access$700(com.android.server.net.NetworkStatsService,int)>','<com.android.server.BatteryService: int access$400(com.android.server.BatteryService)>','<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])>','<android.view.View: void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>','<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.widget.ProgressBar: java.util.ArrayList access$000(android.widget.ProgressBar)>','<com.android.server.EventLogTags: void writeNetstatsMobileSample(long,long,long,long,long,long,long,long,long,long,long,long,long)>','<android.view.ViewGroup: java.util.ArrayList access$400(android.view.ViewGroup)>','<com.android.internal.telephony.cdma.sms.BearerData$TimeStamp: com.android.internal.telephony.cdma.sms.BearerData$TimeStamp fromByteArray(byte[])>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean getMainCountryForCode()>','<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.gsm.SIMRecords: void <init>(com.android.internal.telephony.IccCard,android.content.Context,com.android.internal.telephony.CommandsInterface)>','<com.android.internal.telephony.Call: boolean isIdle()>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.widget.RemoteViews$SetPendingIntentTemplate$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void loge(java.lang.String)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int speak(android.os.IBinder,java.lang.String,int,android.os.Bundle)>','<com.android.internal.policy.impl.PhoneWindowManager: int selectAnimationLw(android.view.WindowManagerPolicy$WindowState,int)>','<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>','<android.webkit.GeolocationPermissionsClassic: void <init>()>','<android.bluetooth.BluetoothDeviceProfileState: void <init>(android.content.Context,java.lang.String,android.server.BluetoothService,android.server.BluetoothA2dpService,boolean)>','<android.renderscript.RenderScript: void nContextSetSurface(int,int,android.view.Surface)>','<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)>','<android.location.ILocationProvider$Stub$Proxy: boolean requiresSatellite()>','<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>','<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler)>','<android.media.DecoderCapabilities$AudioDecoder: android.media.DecoderCapabilities$AudioDecoder[] values()>','<android.media.MediaRouter$RouteGroup: void updateName()>','<android.server.BluetoothA2dpService: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>','<android.os.Bundle: void clear()>','<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()>','<android.provider.Telephony$Mms$Rate: void <clinit>()>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: void notifyDataSetChanged()>','<android.os.storage.IMountService$Stub$Proxy: int getEncryptionState()>','<android.os.storage.IObbActionListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.animation.ObjectAnimator: java.lang.String getPropertyName()>','<android.database.AbstractWindowedCursor: boolean isLong(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$7500(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.webkit.HTML5VideoView: boolean getReadyToUseSurfTex()>','<android.app.ApplicationThreadProxy: void processInBackground()>','<com.android.server.StatusBarManagerService: void setHardKeyboardEnabled(boolean)>','<android.graphics.RectF: void round(android.graphics.Rect)>','<android.content.pm.PackageInfo$1: void <init>()>','<com.android.server.connectivity.Tethering: void interfaceLinkStateChanged(java.lang.String,boolean)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: boolean access$802(android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection,boolean)>','<android.service.wallpaper.IWallpaperEngine$Stub: android.os.IBinder asBinder()>','<com.android.server.PowerManagerService: android.content.Context access$3700(com.android.server.PowerManagerService)>','<android.webkit.WebView: void resumeTimers()>','<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>','<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.server.search.Searchables$1: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>','<android.hardware.SystemSensorManager: int access$000()>','<android.os.StrictMode: long access$1500()>','<android.nfc.NdefMessage$1: android.nfc.NdefMessage createFromParcel(android.os.Parcel)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>','<android.app.backup.IFullBackupRestoreObserver$Stub: android.app.backup.IFullBackupRestoreObserver asInterface(android.os.IBinder)>','<android.view.View: boolean canResolveLayoutDirection()>','<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController$MediaPlayerControl)>','<android.bluetooth.BluetoothDeviceProfileState: void access$6800(android.bluetooth.BluetoothDeviceProfileState)>','<android.widget.AutoCompleteTextView: void setListSelection(int)>','<android.widget.AbsListView$AdapterDataSetObserver: void onChanged()>','<android.os.Debug$InstructionCount: boolean collect()>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl: boolean isRevoked()>','<com.android.internal.policy.impl.RecentApplicationsDialog: void <init>(android.content.Context)>','<android.media.MediaPlayer$TrackInfo$1: void <init>()>','<android.text.style.TextAppearanceSpan: int getTextSize()>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiStateMachine: void access$12100(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.animation.LayoutTransition: void startChangingAnimations()>','<android.media.IRemoteControlClient$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>','<android.webkit.CallbackProxy: void onSearchboxSuggestionsReceived(java.lang.String,java.util.List)>','<com.android.internal.telephony.IccIoResult: void <init>(int,int,byte[])>','<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>','<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>','<android.app.WallpaperManager$FastBitmapDrawable: int getMinimumHeight()>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>','<android.view.inputmethod.InputMethodSubtype: int hashCode()>','<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>','<android.app.Fragment: boolean isHidden()>','<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController$OnZoomListener)>','<android.webkit.OverScrollGlow: void pullGlow(int,int,int,int,int,int)>','<android.server.BluetoothAdapterStateMachine: void access$5000(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int)>','<android.util.TypedValue: java.lang.String coerceToString(int,int)>','<android.provider.ContactsContract$Data: void <clinit>()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsMetaData getMetaData()>','<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>','<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.gsm.GsmCall getCall()>','<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)>','<android.webkit.JsPromptResult: void <init>(android.webkit.JsResult$ResultReceiver)>','<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)>','<com.android.server.pm.PackageManagerService$HandlerParams: void serviceError()>','<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>','<android.location.Address: java.lang.String getCountryCode()>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void disable(int)>','<android.webkit.WebIconDatabaseClassic$EventHandler: void <init>(android.webkit.WebIconDatabaseClassic$1)>','<android.media.AudioService: boolean access$7702(android.media.AudioService,boolean)>','<android.view.WindowManagerImpl$1: void <init>(android.view.WindowManagerImpl)>','<android.os.StrictMode: java.lang.ThreadLocal access$900()>','<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)>','<com.android.internal.telephony.cdma.CdmaMmiCode: boolean isPukCommand()>','<android.media.AudioService$SoundPoolCallback: int status()>','<android.widget.Spinner: void setDropDownHorizontalOffset(int)>','<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.http.Headers: java.lang.String getExpires()>','<com.android.internal.policy.impl.SimUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$300(com.android.internal.policy.impl.SimUnlockScreen)>','<com.android.internal.telephony.ServiceStateTracker: void disableSingleLocationUpdate()>','<com.android.internal.policy.impl.PhoneWindowManager$9: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.view.WindowManagerImpl: android.view.WindowManager$LayoutParams getRootViewLayoutParameter(android.view.View)>','<com.android.server.am.TransferPipe: android.os.ParcelFileDescriptor getReadFd()>','<android.webkit.WebViewClassic: int getViewWidth()>','<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(com.android.server.pm.PackageManagerService,android.os.Looper)>','<com.android.internal.telephony.sip.SipPhone: android.net.LinkProperties getLinkProperties(java.lang.String)>','<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>','<android.graphics.Matrix: float mapRadius(float)>','<android.nfc.NdefRecord: android.net.Uri toUri()>','<android.app.ContextImpl: int checkCallingPermission(java.lang.String)>','<android.webkit.CookieManagerClassic: void setAcceptCookie(boolean)>','<android.app.Dialog: void dismiss()>','<android.media.AudioService$RcDisplayDeathHandler: void binderDied()>','<com.android.internal.telephony.Connection$DisconnectCause: void <clinit>()>','<android.app.admin.DeviceAdminInfo: void <init>(android.os.Parcel)>','<android.net.rtp.AudioStream: void setDtmfType(int)>','<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>','<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>','<android.net.wifi.p2p.WifiP2pGroup: boolean contains(android.net.wifi.p2p.WifiP2pDevice)>','<com.android.server.IntentResolver: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.lang.String,boolean)>','<android.app.Fragment: int hashCode()>','<com.android.server.am.ServiceRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,java.lang.Runnable)>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)>','<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>','<android.webkit.WebSettingsClassic: void setBuiltInZoomControls(boolean)>','<android.hardware.SerialPort: void <init>(java.lang.String)>','<android.net.wifi.WifiStateMachine$DriverStartedState: void enter()>','<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean disableDataConnectivity()>','<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>','<android.animation.AnimatorSet: long getDuration()>','<android.webkit.ClientCertRequestHandler: void ignore()>','<android.app.IActivityController$Stub: android.os.IBinder asBinder()>','<com.android.internal.app.AlertController$RecycleListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.webkit.HTML5VideoViewProxy: void dispatchOnRestoreState()>','<com.android.internal.telephony.RIL: void access$400(com.android.internal.telephony.RIL,android.os.Parcel)>','<com.android.internal.telephony.gsm.GSMPhone: boolean canConference()>','<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput: void onClick(android.view.View)>','<android.animation.Keyframe$IntKeyframe: void <init>(float,int)>','<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>','<android.text.TextLine: float nextTab(float)>','<android.app.Dialog$1: void <init>(android.app.Dialog)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()>','<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>','<android.webkit.WebSettingsClassic: java.lang.String getFixedFontFamily()>','<android.media.AudioService: int access$7202(android.media.AudioService,int)>','<android.app.NotificationManager: void notify(int,android.app.Notification)>','<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,int[],int)>','<com.android.internal.telephony.cdma.sms.CdmaSmsSubaddress: void <init>()>','<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>','<android.content.Intent: int getIntExtra(java.lang.String,int)>','<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>','<android.app.BackStackRecord: boolean isAddToBackStackAllowed()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(java.lang.String,java.lang.Object[])>','<android.net.sip.SipManager$ListenerRelay: void onRegistrationTimeout(android.net.sip.ISipSession)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>','<android.webkit.ZoomManager: float getDefaultMaxZoomScale()>','<android.media.AudioService$RemoteControlStackEntry: void unlinkToRcClientDeath()>','<com.android.internal.telephony.GsmAlphabet: void setEnabledLockingShiftTables(int[])>','<android.view.View$TransformationInfo: int access$1300(android.view.View$TransformationInfo)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>','<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>','<com.android.server.pm.PackageSettingBase: void setNotLaunched(boolean,int)>','<android.widget.ArrayAdapter: java.util.List access$300(android.widget.ArrayAdapter)>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.lang.String bin2HexStr(byte[])>','<android.app.Activity: void attach(android.content.Context,android.app.ActivityThread,android.app.Instrumentation,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,android.app.Activity$NonConfigurationInstances,android.content.res.Configuration)>','<android.inputmethodservice.InputMethodService: void onExtractedDeleteText(int,int)>','<android.os.UEventObserver: void stopObserving()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7200(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<android.widget.ImageView: void setBaselineAlignBottom(boolean)>','<android.view.View$AttachInfo$InvalidateInfo: android.view.View$AttachInfo$InvalidateInfo getNextPoolable()>','<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>','<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType)>','<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>','<android.text.style.BackgroundColorSpan: int getSpanTypeId()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean)>','<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,boolean)>','<android.view.View: void announceForAccessibility(java.lang.CharSequence)>','<android.content.pm.InstrumentationInfo$1: void <init>()>','<android.view.AbsSavedState$2: android.view.AbsSavedState[] newArray(int)>','<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>','<android.webkit.CacheManager: void <clinit>()>','<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>','<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)>','<android.bluetooth.BluetoothDevice: void <init>(java.lang.String)>','<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: void dispatchPrimaryClipChanged()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.am.UsageStatsService)>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void onError(int,java.lang.String)>','<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)>','<com.android.server.pm.PackageManagerService$8: void run()>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: android.filterfw.core.SerializedFrame$DirectByteInputStream getInputStream()>','<android.filterfw.core.FilterGraph: void connect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: boolean matches(android.hardware.usb.UsbDevice)>','<com.android.internal.telephony.cat.Item$1: com.android.internal.telephony.cat.Item createFromParcel(android.os.Parcel)>','<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>','<com.android.server.am.UsageStatsService: void publish(android.content.Context)>','<android.webkit.BrowserFrame$1: void proceed(java.lang.String,java.lang.String)>','<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>','<android.location.Address: java.lang.String getSubThoroughfare()>','<android.app.Instrumentation: android.app.Instrumentation$ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>','<android.view.accessibility.AccessibilityManager$1: void setState(int)>','<android.telephony.SmsCbMessage: boolean isEmergencyMessage()>','<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getViewTypeCount()>','<android.provider.ContactsContract$ProfileSyncState: void <clinit>()>','<com.android.internal.widget.LockPatternUtils: boolean checkPasswordHistory(java.lang.String)>','<android.webkit.WebViewClassic: float getScale()>','<android.net.wifi.WifiStateMachine: android.os.Message access$2000(android.net.wifi.WifiStateMachine)>','<android.telephony.SignalStrength: int getCdmaEcio()>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean beginBatchEdit()>','<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation$ActivityMonitor)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: int getPhoneType()>','<com.android.uiautomator.core.UiDevice: boolean pressBack()>','<com.android.ex.variablespeed.EngineParameters: float getWindowDuration()>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: com.android.internal.net.LegacyVpnInfo getInfo()>','<android.content.pm.ApplicationInfo: int describeContents()>','<android.webkit.WebViewCore: void pauseUpdatePicture(android.webkit.WebViewCore)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: int countExcessivePowers()>','<android.util.LongSparseArray: void removeAt(int)>','<android.server.BluetoothService: int getBondState(java.lang.String)>','<android.media.RemoteControlClient$1: void onInformationRequested(int,int,int,int)>','<android.bluetooth.BluetoothDevice$1: android.bluetooth.BluetoothDevice createFromParcel(android.os.Parcel)>','<android.widget.Editor: void showSuggestions()>','<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>','<android.view.ViewConfiguration: int getHoverTapTimeout()>','<android.view.MotionEvent$PointerCoords: void setAxisValue(int,float)>','<android.net.EthernetDataTracker: void disconnect()>','<android.widget.RemoteViewsAdapter: void access$100(android.widget.RemoteViewsAdapter)>','<com.android.internal.statusbar.IStatusBar$Stub: void <init>()>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>','<android.app.ActivityThread: android.content.res.Configuration getConfiguration()>','<android.net.ProxyProperties: boolean isExcluded(java.lang.String)>','<android.os.MemoryFile: int readBytes(byte[],int,int,int)>','<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>','<com.android.internal.policy.PolicyManager: android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)>','<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl onCreateInputMethodInterface()>','<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>','<android.app.SearchableInfo: boolean useBadgeIcon()>','<android.net.NetworkStats$1: void <init>()>','<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>','<com.android.internal.telephony.cdma.CdmaMmiCode: void processCode()>','<android.widget.ExpandableListConnector$GroupMetadata: int describeContents()>','<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()>','<android.filterfw.core.NativeBuffer: int size()>','<android.animation.LayoutTransition$5: void onAnimationEnd(android.animation.Animator)>','<android.view.InputEventConsistencyVerifier$KeyState: void <clinit>()>','<android.webkit.WebSettingsClassic: boolean getUseWideViewPort()>','<com.android.internal.telephony.test.ModelInterpreter: void triggerRing(java.lang.String)>','<android.os.Looper: void <clinit>()>','<android.accounts.Account$1: android.accounts.Account[] newArray(int)>','<android.widget.Editor: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>','<android.media.MediaRouter$UserRouteInfo: void setIconResource(int)>','<android.os.BatteryStats$Uid$Pkg$Serv: void <init>(android.os.BatteryStats$Uid$Pkg)>','<android.nfc.INfcAdapter$Stub: void <init>()>','<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>','<com.android.internal.telephony.ApnContext: void setEnabled(boolean)>','<android.database.sqlite.SQLiteConnection: java.lang.String describeCurrentOperationUnsafe()>','<com.android.internal.view.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getIccSerialNumber()>','<android.preference.Preference: java.lang.CharSequence getTitle()>','<com.android.internal.telephony.cat.Duration: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebViewCore$ShowRectData: void <init>()>','<android.app.SharedPreferencesImpl$2: void run()>','<android.content.SyncStatusInfo$1: void <init>()>','<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int disableApnType(java.lang.String)>','<android.view.HardwareRenderer$GlRenderer: android.view.HardwareCanvas getCanvas()>','<com.android.server.WifiService: void checkAndStartWifi()>','<android.view.IRotationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.accounts.AccountManager$AmsTask: void done()>','<com.android.server.location.GpsLocationProvider: void setMinTime(long,android.os.WorkSource)>','<android.renderscript.RenderScript: void nScriptSetVarV(int,int,byte[])>','<com.android.server.PowerManagerService: com.android.server.PowerManagerService$UnsynchronizedWakeLock access$6100(com.android.server.PowerManagerService)>','<android.content.res.CompatibilityInfo$Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)>','<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>','<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>','<android.net.wifi.ScanResult$1: android.net.wifi.ScanResult createFromParcel(android.os.Parcel)>','<com.android.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>','<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>','<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>','<com.android.server.PowerManagerService: void goToSleep(long)>','<android.server.BluetoothService: boolean isApplicationStateChangeTrackerEmpty()>','<android.webkit.WebViewClassic: java.lang.String getTitle()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int regCodeToServiceState(int)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void topAppWindowChanged(boolean)>','<android.app.ActivityManager$RecentTaskInfo$1: android.app.ActivityManager$RecentTaskInfo createFromParcel(android.os.Parcel)>','<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>','<com.android.server.EventLogTags: void writeRestoreSuccess(int,int)>','<android.location.ILocationManager$Stub$Proxy: void clearTestProviderStatus(java.lang.String)>','<android.bluetooth.BluetoothHealth: boolean registerAppConfiguration(java.lang.String,int,int,int,android.bluetooth.BluetoothHealthCallback)>','<com.android.server.net.NetworkPolicyManagerService: void access$1900(com.android.server.net.NetworkPolicyManagerService)>','<android.os.IVibratorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>','<android.app.SearchableInfo: int getVoicePromptTextId()>','<com.android.server.wm.WindowState: boolean isAnimatingLw()>','<android.media.MediaPlayer: android.media.MediaPlayer$OnCompletionListener access$200(android.media.MediaPlayer)>','<android.media.AudioService$SettingsObserver: void <init>(android.media.AudioService)>','<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>','<com.android.internal.telephony.IccCardApplication: java.lang.String toString()>','<com.android.internal.telephony.PhoneBase: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<android.graphics.drawable.LevelListDrawable$LevelListState: void addLevel(int,int,android.graphics.drawable.Drawable)>','<com.android.internal.policy.impl.PhoneWindowManager: void screenOnStoppedLw()>','<android.app.Activity: boolean onNavigateUp()>','<android.app.backup.BackupAgent$BackupServiceBinder: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<com.android.uiautomator.core.UiDevice: void clearLastTraversedText()>','<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1: android.net.wifi.p2p.nsd.WifiP2pServiceInfo[] newArray(int)>','<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)>','<android.widget.AutoCompleteTextView: void onAttachedToWindow()>','<android.media.AudioRoutesInfo: void <init>(android.os.Parcel)>','<android.webkit.WebViewClassic: int tileProfilingNumTilesInFrame(int)>','<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>','<com.android.server.usb.UsbSettingsManager$DeviceFilter: void write(org.xmlpull.v1.XmlSerializer)>','<android.inputmethodservice.IInputMethodSessionWrapper: void <init>(android.content.Context,android.view.inputmethod.InputMethodSession)>','<android.webkit.ZoomManager$FocusMovementQueue: float access$800(android.webkit.ZoomManager$FocusMovementQueue)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean allowAppAnimationsLw()>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine1()>','<android.graphics.drawable.Drawable: boolean setLevel(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: boolean isVerifyUnlockOnly()>','<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>','<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>','<android.view.AbsSavedState: void <init>(android.view.AbsSavedState$1)>','<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.SSLCertificateSocketFactory: void verifyHostname(java.net.Socket,java.lang.String)>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void getChars(int,int,char[],int)>','<android.app.Fragment: void onResume()>','<android.content.IntentFilter: int countDataSchemes()>','<android.webkit.ViewManager: void showAll()>','<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>','<android.app.ActivityThread: void completeRemoveProvider(android.app.ActivityThread$ProviderRefCount)>','<android.media.Ringtone: void <init>(android.content.Context,boolean)>','<com.android.server.PowerManagerService: void lowLevelShutdown()>','<com.android.server.AppWidgetService: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews)>','<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>','<android.filterpacks.videosrc.MediaSource: boolean access$000(android.filterpacks.videosrc.MediaSource)>','<com.android.server.NetworkManagementSocketTagger: void <init>()>','<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()>','<com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>','<android.widget.BaseAdapter: void <init>()>','<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)>','<android.view.ViewGroup: void addView(android.view.View)>','<com.android.server.LocationManagerService: void removeUpdatesPI(android.app.PendingIntent)>','<android.animation.AnimatorSet$DependencyListener: void onAnimationRepeat(android.animation.Animator)>','<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>','<com.android.server.usb.UsbDeviceManager: void setMassStorageBackingFile(java.lang.String)>','<android.widget.AbsSpinner$SavedState: void <clinit>()>','<com.android.internal.telephony.DataConnection: int getRilRadioTechnology(int)>','<android.location.CountryDetector: android.location.Country detectCountry()>','<android.accounts.AccountsException: void <init>(java.lang.Throwable)>','<com.android.server.sip.SipSessionListenerProxy$4: void run()>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall getCall()>','<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getForegroundCall()>','<com.android.internal.telephony.gsm.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>','<com.android.server.wm.WindowManagerService: void dumpSessionsLocked(java.io.PrintWriter,boolean)>','<com.android.internal.telephony.gsm.GsmConnection: int getNumberPresentation()>','<android.net.wifi.WifiManager: int access$300(android.net.wifi.WifiManager)>','<android.media.AudioService: android.media.IRemoteControlDisplay access$8402(android.media.AudioService,android.media.IRemoteControlDisplay)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void updateResources()>','<android.app.ContextImpl: java.lang.String getPackageResourcePath()>','<android.view.CompatibilityInfoHolder: void <init>()>','<android.webkit.WebIconDatabaseClassic$EventHandler$IconResult: void <init>(android.webkit.WebIconDatabaseClassic$EventHandler,java.lang.String,android.graphics.Bitmap,android.webkit.WebIconDatabase$IconListener)>','<android.net.LinkCapabilities: android.net.LinkCapabilities createNeedsMap(java.lang.String)>','<com.android.internal.telephony.gsm.SIMRecords: void <clinit>()>','<android.server.BluetoothPanProfileHandler: android.content.Context access$200(android.server.BluetoothPanProfileHandler)>','<android.os.Parcel: java.lang.String[] createStringArray()>','<com.android.internal.policy.impl.PhoneWindowManager: void beginLayoutLw(int,int,int)>','<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.server.am.StrictModeViolationDialog: void <init>(android.content.Context,com.android.server.am.AppErrorResult,com.android.server.am.ProcessRecord)>','<android.app.ActivityManager: boolean switchUser(int)>','<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>','<android.app.Fragment: boolean isAdded()>','<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()>','<android.view.View: int getScrollY()>','<android.webkit.WebViewClassic: void emulateShiftHeld()>','<com.android.internal.telephony.cdma.RuimRecords: void onRadioOffOrNotAvailable()>','<android.database.AbstractCursor: boolean moveToFirst()>','<android.net.Uri$PathPart: android.net.Uri$PathPart appendDecodedSegment(android.net.Uri$PathPart,java.lang.String)>','<com.android.internal.telephony.IccCardStatus: java.lang.String toString()>','<android.widget.ListView$ArrowScrollFocusResult: int getAmountToScroll()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<android.net.LocalSocketAddress$Namespace: void <clinit>()>','<com.android.server.AlarmManagerService: void <clinit>()>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaMin()>','<android.net.rtp.RtpStream: int getRemotePort()>','<android.graphics.Matrix$1: boolean preSkew(float,float)>','<android.content.Context: java.lang.String getString(int)>','<android.app.LoaderManagerImpl$LoaderInfo: void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>','<android.text.format.DateUtils: boolean isUTC(java.lang.String)>','<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()>','<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothService: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>','<android.os.HandlerThread: int getThreadId()>','<android.webkit.CacheManager: java.io.File access$000()>','<com.android.internal.os.PowerProfile: double getBatteryCapacity()>','<android.net.LocalSocketImpl: void shutdownOutput()>','<android.net.http.AndroidHttpClient$CurlLogger: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>','<android.webkit.GeolocationPermissionsClassic: void clearAll()>','<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)>','<com.android.internal.app.ActionBarImpl: void setSubtitle(int)>','<android.content.pm.Signature: char[] toChars(char[],int[])>','<android.widget.ExpandableListView: int getPackedPositionType(long)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1600(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.internal.telephony.PhoneProxy: void unregisterForDisplayInfo(android.os.Handler)>','<com.android.internal.util.CharSequences: java.lang.CharSequence forAsciiBytes(byte[])>','<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle)>','<com.android.internal.telephony.cat.Item: void <init>(android.os.Parcel)>','<android.preference.PreferenceGroup: void onPrepareForRemoval()>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCallState(int,java.lang.String)>','<android.view.GLES20DisplayList: void invalidate()>','<android.opengl.GLLogWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>','<android.media.IAudioService$Stub$Proxy: void playSoundEffectVolume(int,float)>','<android.webkit.WebSettingsClassic: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>','<com.android.internal.os.ProcessStats: void <init>(boolean)>','<android.graphics.Region: void <clinit>()>','<com.android.internal.telephony.sip.SipCommandInterface: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void setEnabled(int,boolean)>','<android.app.Instrumentation: void setInTouchMode(boolean)>','<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress access$502(android.widget.AbsListView,android.widget.AbsListView$CheckForLongPress)>','<android.widget.Editor: boolean areSuggestionsShown()>','<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.res.AssetManager: void ensureStringBlocks()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: void onPress()>','<android.app.IWallpaperManager$Stub: android.app.IWallpaperManager asInterface(android.os.IBinder)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$4800(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$AlarmHandler access$1300(com.android.server.AlarmManagerService)>','<com.android.ex.variablespeed.VariableSpeed: java.lang.Object access$000(com.android.ex.variablespeed.VariableSpeed)>','<com.android.server.am.ActivityManagerService: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>','<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.media.MediaRouter$CallbackInfo: void <init>(android.media.MediaRouter$Callback,int,android.media.MediaRouter)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase()>','<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: void <init>()>','<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>','<android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>','<android.accounts.AccountManager$5: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.widget.TextView: android.text.TextPaint getPaint()>','<com.android.server.MountService: java.lang.String access$1600(com.android.server.MountService)>','<android.text.style.AlignmentSpan$Standard: int getSpanTypeId()>','<android.security.KeyStore: boolean password(java.lang.String)>','<android.view.View$BaseSavedState$1: void <init>()>','<com.android.internal.telephony.ApnContext: void setReason(java.lang.String)>','<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>','<android.os.Parcel: java.util.ArrayList createStringArrayList()>','<android.server.search.SearchManagerService$BootCompletedReceiver: void <init>(android.server.search.SearchManagerService,android.server.search.SearchManagerService$1)>','<android.widget.PopupWindow: void update(int,int,int,int,boolean)>','<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>','<android.webkit.WebViewClassic: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.uiautomator.core.UiDevice: void setRotationNatural()>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>','<android.webkit.CallbackProxy: void handleMessage(android.os.Message)>','<com.android.internal.telephony.test.CallInfo: boolean isConnecting()>','<com.android.server.wm.WindowManagerService: void updateStatusBarVisibilityLocked(int)>','<com.android.server.pm.UserManager: android.content.pm.UserInfo getUser(int)>','<android.content.res.CompatibilityInfo: void <init>(android.os.Parcel,android.content.res.CompatibilityInfo$1)>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4200(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.widget.OverScroller: boolean computeScrollOffset()>','<com.android.internal.telephony.RIL: void getMute(android.os.Message)>','<android.app.ContextImpl$31: java.lang.Object createService(android.app.ContextImpl)>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>','<com.android.server.am.ActivityManagerService: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>','<com.android.internal.telephony.Connection: void clearUserData()>','<com.android.internal.telephony.cat.ToneSettings: int describeContents()>','<android.app.ContextImpl$7: java.lang.Object createService(android.app.ContextImpl)>','<android.graphics.drawable.AnimationDrawable$AnimationState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.net.http.HttpLog: void <init>()>','<android.bluetooth.BluetoothTetheringDataTracker$2: void run()>','<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)>','<android.provider.SyncStateContract$Helpers: void <init>()>','<com.android.server.WifiService$1: void <init>(com.android.server.WifiService)>','<android.app.ApplicationPackageManager: void clearPackagePreferredActivities(java.lang.String)>','<android.inputmethodservice.IInputMethodWrapper: void <init>(android.inputmethodservice.AbstractInputMethodService,android.view.inputmethod.InputMethod)>','<com.android.internal.telephony.cat.FontSize: com.android.internal.telephony.cat.FontSize valueOf(java.lang.String)>','<android.widget.ProgressBar$SavedState: void <init>(android.os.Parcelable)>','<com.android.internal.telephony.gsm.GsmCallTracker: void separate(com.android.internal.telephony.gsm.GsmConnection)>','<android.app.ContextImpl$16: void <init>()>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$900(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$700(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<com.android.internal.telephony.DataConnection: void access$700(com.android.internal.telephony.DataConnection,android.os.Message)>','<android.widget.AbsListView$AdapterDataSetObserver: void <init>(android.widget.AbsListView)>','<android.os.Environment: boolean isExternalStorageEmulated()>','<android.view.inputmethod.InputMethodInfo$1: android.view.inputmethod.InputMethodInfo createFromParcel(android.os.Parcel)>','<android.net.NetworkStatsHistory: int size()>','<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)>','<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener$Capitalize,boolean)>','<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>','<android.net.NetworkPolicy: boolean hasCycle()>','<com.android.internal.policy.impl.PatternUnlockScreen: void onResume()>','<android.media.IRingtonePlayer$Stub$Proxy: void play(android.os.IBinder,android.net.Uri,int)>','<android.graphics.MaskFilter: void finalize()>','<com.android.internal.util.FastXmlSerializer: void processingInstruction(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager$15: void run()>','<android.content.res.CompatibilityInfo: void applyToConfiguration(android.content.res.Configuration)>','<android.text.style.LeadingMarginSpan$Standard: void <init>(int,int)>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onFocusChange(android.view.View,boolean)>','<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>','<android.app.ActivityThread: void access$2700(android.app.ActivityThread,android.os.IBinder,boolean)>','<android.view.View: android.view.View findViewWithTagTraversal(java.lang.Object)>','<android.webkit.WebViewClassic: int getBaseLayer()>','<android.widget.ImageView: void drawableStateChanged()>','<android.webkit.WebViewCore$AutoFillData: int getQueryId()>','<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>','<com.android.internal.policy.impl.PhoneWindowManager$MyOrientationListener: void <init>(com.android.internal.policy.impl.PhoneWindowManager,android.content.Context)>','<com.android.server.am.ActivityManagerService$9: void <init>(com.android.server.am.ActivityManagerService,java.util.ArrayList,java.lang.Runnable)>','<android.net.MobileDataStateTracker: void <init>(int,java.lang.String)>','<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>','<android.webkit.CallbackProxy$1: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<com.android.internal.os.BatteryStatsImpl$Uid$Sensor: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int)>','<android.opengl.GLLogWrapper: void glSampleCoveragex(int,boolean)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordQuality(android.content.ComponentName)>','<android.text.method.BaseMovementMethod: boolean scrollDown(android.widget.TextView,android.text.Spannable,int)>','<com.android.internal.telephony.cat.GetInkeyInputResponseData: void format(java.io.ByteArrayOutputStream)>','<com.android.server.sip.SipSessionListenerProxy$5: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void removeClient(com.android.internal.view.IInputMethodClient)>','<android.preference.PreferenceManager: void setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener)>','<android.widget.CompoundButton$SavedState$1: android.widget.CompoundButton$SavedState createFromParcel(android.os.Parcel)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>','<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>','<android.view.MotionEvent: float getSize(int)>','<android.webkit.WebView$PrivateAccess: float getVerticalScrollFactor()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$1: void <init>(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>','<android.app.Activity: void onPause()>','<android.graphics.Matrix: boolean preRotate(float)>','<android.media.RemoteControlClient: android.graphics.Bitmap access$500(android.media.RemoteControlClient,android.graphics.Bitmap,int,int)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onVoiceCallEnded()>','<android.os.Looper: void setMessageLogging(android.util.Printer)>','<android.media.MediaRouter$SimpleCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)>','<android.renderscript.ProgramRaster$Builder: void <init>(android.renderscript.RenderScript)>','<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)>','<android.view.View: boolean isSaveFromParentEnabled()>','<android.webkit.WebBackForwardList: void addHistoryItem(android.webkit.WebHistoryItem)>','<android.bluetooth.BluetoothUuid: void <clinit>()>','<android.speech.tts.TextToSpeech$1: java.lang.Void run(android.speech.tts.ITextToSpeechService)>','<android.widget.SeekBar: void onStopTrackingTouch()>','<android.net.MobileDataStateTracker: void access$500(android.net.MobileDataStateTracker,android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>','<android.provider.Telephony$Mms: boolean isPhoneNumber(java.lang.String)>','<com.android.server.location.LocationProviderProxy: int getAccuracy()>','<com.android.internal.telephony.IccCardApplication$AppState: com.android.internal.telephony.IccCardApplication$AppState valueOf(java.lang.String)>','<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>','<com.android.internal.telephony.PhoneProxy: boolean getCallForwardingIndicator()>','<com.android.server.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean)>','<android.os.Message: int describeContents()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector instance(int)>','<android.content.SyncManager: void scheduleSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long,boolean)>','<com.android.internal.util.FastXmlSerializer: void docdecl(java.lang.String)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_NONE(android.renderscript.RenderScript)>','<com.android.server.usb.UsbDeviceManager: java.lang.String access$400()>','<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.wifi.WifiMonitor: void <clinit>()>','<android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()>','<android.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1200(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.content.res.TypedArray: int getInteger(int,int)>','<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>','<com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>','<android.widget.Editor$SelectionEndHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.view.AbsSavedState$2: void <init>()>','<android.view.VolumePanel: void onSliderVisibilityChanged(int,int)>','<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>','<com.android.server.location.LocationBasedCountryDetector: void access$000(com.android.server.location.LocationBasedCountryDetector,android.location.Location)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void <init>(com.android.internal.telephony.gsm.UsimPhoneBookManager,java.util.ArrayList)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder decodeBufferInitialSize(int)>','<android.app.Notification$Action: void <clinit>()>','<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>','<android.net.sip.SipAudioCall$Listener: void onChanged(android.net.sip.SipAudioCall)>','<android.view.inputmethod.InputMethodInfo: void <init>(android.os.Parcel)>','<android.net.wifi.WifiStateMachine: boolean access$3000(android.net.wifi.WifiStateMachine)>','<android.view.MenuInflater$MenuState: android.view.SubMenu addSubMenuItem()>','<android.os.Bundle: void remove(java.lang.String)>','<android.content.res.Resources$Theme: void finalize()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCountry()>','<android.net.wifi.WifiStateMachine: void access$16600(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.renderscript.Element: android.renderscript.Element U32_2(android.renderscript.RenderScript)>','<android.content.IntentFilter: java.lang.String getDataType(int)>','<com.android.server.ConnectivityService: void access$3200(com.android.server.ConnectivityService,android.net.ProxyProperties)>','<android.net.LocalSocketImpl: void access$700(android.net.LocalSocketImpl,int,java.io.FileDescriptor)>','<com.android.server.sip.SipService: void start(android.content.Context)>','<android.widget.AbsSpinner: int getChildWidth(android.view.View)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>','<android.speech.tts.TextToSpeech$10: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<android.util.FinitePool: void <init>(android.util.PoolableManager)>','<com.android.internal.policy.impl.PhoneWindowManager: void enableScreenAfterBoot()>','<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage createFromParcel(android.os.Parcel)>','<android.view.inputmethod.InputBinding: int getUid()>','<android.net.wifi.SupplicantStateTracker$UninitializedState: void <init>(android.net.wifi.SupplicantStateTracker)>','<android.app.IAlarmManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.accessibility.AccessibilityRecord: int getToIndex()>','<com.android.vcard.exception.VCardVersionException: void <init>()>','<android.net.TrafficStats: void clearThreadStatsTag()>','<android.view.Display: void <init>(int,android.view.CompatibilityInfoHolder)>','<android.media.MediaRouter: void dispatchRouteVolumeChanged(android.media.MediaRouter$RouteInfo)>','<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>','<com.android.internal.telephony.IccFileHandler: void getEFLinearRecordSize(int,android.os.Message)>','<android.server.BluetoothAdapterStateMachine: void access$2100(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.os.Messenger$1: android.os.Messenger createFromParcel(android.os.Parcel)>','<android.view.View: void debug(int)>','<com.android.server.wm.WindowManagerService: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>','<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()>','<android.widget.AdapterViewAnimator: int getDisplayedChild()>','<android.view.GLES20Canvas: int save()>','<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: com.android.internal.util.State access$1300(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<android.renderscript.RenderScript: void nAllocationResize2D(int,int,int)>','<android.view.View: java.lang.Object getTag()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void unregisterForCallWaiting(android.os.Handler)>','<android.net.LinkCapabilities$1: android.net.LinkCapabilities createFromParcel(android.os.Parcel)>','<android.opengl.GLLogWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>','<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater$Parent)>','<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)>','<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)>','<com.android.internal.view.BaseIWindow: void doneAnimating()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>','<com.android.internal.telephony.cat.CommandParamsFactory$1: void <clinit>()>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void binderDied()>','<android.view.ViewGroup$LayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas)>','<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>','<android.os.INetworkManagementService$Stub$Proxy: void untetherInterface(java.lang.String)>','<com.android.server.LocationManagerService$ProximityAlert: java.lang.String toString()>','<android.net.Uri$PathPart: android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String)>','<android.webkit.BrowserFrame: void loadData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.vcard.VCardParserImpl_V40: java.lang.String unescapeCharacter(char)>','<com.android.server.location.GpsLocationProvider$1: void removeGpsStatusListener(android.location.IGpsStatusListener)>','<com.android.internal.view.IInputConnectionWrapper: void setComposingRegion(int,int)>','<android.graphics.drawable.ShapeDrawable$ShapeState: android.graphics.drawable.Drawable newDrawable()>','<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>','<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>','<android.location.ILocationProvider$Stub$Proxy: void updateLocation(android.location.Location)>','<android.widget.AbsListView: void onOverScrolled(int,int,boolean,boolean)>','<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdnNumber()>','<android.widget.ExpandableListConnector: int findGroupPosition(long,int)>','<android.telephony.NeighboringCellInfo: java.lang.String toString()>','<android.util.Property: android.util.Property of(java.lang.Class,java.lang.Class,java.lang.String)>','<android.os.Parcel: long[] createLongArray()>','<android.content.pm.PackageStats$1: android.content.pm.PackageStats createFromParcel(android.os.Parcel)>','<android.os.TokenWatcher: int access$100(android.os.TokenWatcher)>','<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>','<android.content.ContentService: void setMasterSyncAutomatically(boolean)>','<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void setHoldScreenLocked(boolean)>','<android.net.rtp.AudioGroup: void setMode(int)>','<com.android.server.LocationManagerService$Receiver: boolean equals(java.lang.Object)>','<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onGrabbedStateChange(android.view.View,int)>','<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$DrawData access$2000(android.webkit.WebViewClassic)>','<com.android.internal.widget.multiwaveview.PointCloud: float getScale()>','<com.android.server.usb.UsbDeviceManager: java.lang.String access$300(com.android.server.usb.UsbDeviceManager,java.lang.String)>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>','<com.android.server.LightsService$Light: void pulse()>','<android.os.Parcel: void writeByte(byte)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>','<android.filterfw.core.Frame: void onFrameFetch()>','<android.webkit.AccessibilityInjector: void <init>(android.webkit.WebViewClassic)>','<android.server.BluetoothService: boolean allowIncomingTethering()>','<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)>','<android.net.wifi.SupplicantState$2: void <clinit>()>','<com.android.internal.telephony.PhoneProxy: void getEnhancedVoicePrivacy(android.os.Message)>','<android.net.TrafficStats: void setThreadStatsTag(int)>','<com.android.internal.telephony.cat.RilMessageDecoder: void access$800(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.util.IState)>','<android.app.SearchableInfo: int getVoiceLanguageId()>','<android.media.AudioService: void playSoundEffect(int)>','<com.android.internal.os.ProcessStats: int onMeasureProcessName(java.lang.String)>','<com.android.internal.telephony.ims.IsimUiccRecords: void log(java.lang.String)>','<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.am.IntentBindRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>','<android.webkit.WebViewClassic: android.graphics.Rect sendOurVisibleRect()>','<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener)>','<com.android.internal.telephony.BaseCommands: void unregisterForAvailable(android.os.Handler)>','<android.webkit.DeviceMotionAndOrientationManager: void <init>(android.webkit.WebViewCore)>','<android.view.View$8: void setValue(android.view.View,float)>','<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>','<android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>','<android.opengl.GLLogWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>','<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean)>','<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void onPackageModified(java.lang.String)>','<com.android.server.InputMethodManagerService$MethodCallback: void sessionCreated(com.android.internal.view.IInputMethodSession)>','<com.android.internal.telephony.gsm.SIMRecords: void logw(java.lang.String,java.lang.Throwable)>','<android.renderscript.BaseObj: boolean equals(java.lang.Object)>','<com.android.server.AlarmManagerService: void removeLocked(java.lang.String)>','<com.android.internal.telephony.CallStateException: void <init>()>','<android.webkit.WebViewClassic: android.webkit.AutoCompletePopup access$500(android.webkit.WebViewClassic)>','<android.app.SearchDialog: void onStart()>','<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>','<android.server.BluetoothHealthProfileHandler: void onHealthDeviceChannelConnectionError(int,int)>','<android.widget.TextView: android.content.Context access$400(android.widget.TextView)>','<android.app.ActivityManager$RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>','<android.view.View: float getBottomFadingEdgeStrength()>','<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void ping()>','<android.view.MotionEvent: float getOrientation(int)>','<android.telephony.cdma.CdmaSmsCbProgramData$1: android.telephony.cdma.CdmaSmsCbProgramData[] newArray(int)>','<android.filterpacks.base.NullFilter: void setupPorts()>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)>','<android.webkit.SslClientCertLookupTable: void Deny(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean isInCall()>','<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getSmscAddress(android.os.Message)>','<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>','<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>','<android.view.KeyEvent: boolean isScrollLockOn()>','<com.android.server.NsdService$NativeResponseCode: void <init>(com.android.server.NsdService)>','<com.android.internal.widget.TransportControlView: android.widget.ImageView access$600(com.android.internal.widget.TransportControlView)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.app.INotificationManager$Stub$Proxy: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>','<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)>','<android.view.ViewRootImpl$WindowInputEventReceiver: void dispose()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleDevicePolicyManagerStateChanged()>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: int getTargetPosition(int)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void <init>(int,int,int,int,boolean)>','<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)>','<android.content.res.StringBlock$StyleIDs: int access$900(android.content.res.StringBlock$StyleIDs)>','<com.android.internal.util.FileRotator: void rewriteAll(com.android.internal.util.FileRotator$Rewriter)>','<com.android.server.net.NetworkPolicyManagerService$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.util.IndentingPrintWriter: void println()>','<android.net.sip.SipAudioCall$Listener: void onCalling(android.net.sip.SipAudioCall)>','<android.webkit.CookieManagerClassic: void <clinit>()>','<android.view.accessibility.AccessibilityEvent: void init(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.sip.SipCommandInterface: void exitEmergencyCallbackMode(android.os.Message)>','<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.cdma.CdmaCallTracker,int)>','<android.app.Activity: void onContentChanged()>','<com.android.internal.telephony.IccPhoneBookInterfaceManager: void publish()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getResourcePath()>','<android.view.ViewGroup: void removeAllViewsInLayout()>','<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<android.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>','<android.graphics.drawable.TransitionDrawable$TransitionState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)>','<android.app.WallpaperManager$Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>','<android.database.ContentObserver: boolean deliverSelfNotifications()>','<com.android.internal.view.menu.ActionMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean access$200(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<android.net.wifi.WifiInfo$1: android.net.wifi.WifiInfo[] newArray(int)>','<android.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>','<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,boolean)>','<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>','<android.app.ITransientNotification$Stub: android.os.IBinder asBinder()>','<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>','<android.location.Address: java.lang.String getUrl()>','<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$SmHandler access$502(com.android.internal.util.StateMachine,com.android.internal.util.StateMachine$SmHandler)>','<android.text.LoginFilter$PasswordFilterGMail: boolean isAllowed(char)>','<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>','<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>','<android.view.accessibility.AccessibilityEvent: void appendRecord(android.view.accessibility.AccessibilityRecord)>','<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()>','<android.webkit.AutoCompletePopup$1: void <init>(android.webkit.AutoCompletePopup)>','<android.ddm.DdmHandleHello: void connected()>','<android.widget.Spinner: boolean performClick()>','<android.content.pm.ActivityInfo: int activityInfoConfigToNative(int)>','<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>','<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void acceptCall()>','<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>','<android.os.Parcel: void recycle()>','<android.webkit.WebSettingsClassic: void setShowVisualIndicator(boolean)>','<android.widget.RelativeLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.cdma.CDMAPhone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<android.os.UEventObserver: void startObserving(java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$11: void run()>','<com.android.internal.widget.WaveView: void onMeasure(int,int)>','<android.graphics.Matrix: boolean rectStaysRect()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>','<android.app.BackStackRecord: java.lang.String getName()>','<android.view.View: void setWillNotDraw(boolean)>','<android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>','<com.android.server.pm.PackageManagerService: void freeStorage(long,android.content.IntentSender)>','<com.android.server.PowerManagerService$12: void onAccuracyChanged(android.hardware.Sensor,int)>','<android.text.method.BaseMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.bluetooth.IBluetooth$Stub$Proxy: byte[] readOutOfBandData()>','<com.android.server.location.MockProvider: void enable()>','<android.opengl.GLLogWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>','<android.security.KeyStore: boolean isEmpty()>','<android.view.InputChannel: int describeContents()>','<android.widget.TextView: int getGravity()>','<android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType valueOf(java.lang.String)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getIccSerialNumber()>','<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>','<android.opengl.GLLogWrapper: void glLightModelfv(int,float[],int)>','<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String toString()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: void willCreate()>','<com.android.internal.telephony.ISms$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.ZoomControlEmbedded$ZoomListener: void onZoom(boolean)>','<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>','<android.os.storage.StorageManager: void disableUsbMassStorage()>','<com.android.internal.telephony.cat.CatCmdMessage$2: void <clinit>()>','<android.provider.BrowserContract$ImageMappings: void <clinit>()>','<android.filterfw.core.ShaderProgram: void setVertexCount(int)>','<com.android.server.wm.WindowManagerService: void monitor()>','<com.android.internal.telephony.SmsResponse: java.lang.String toString()>','<android.graphics.RectF: void sort()>','<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>','<com.android.server.MountService: void onDaemonConnected()>','<com.android.server.wm.WindowManagerService: void moveAppToken(int,android.os.IBinder)>','<android.view.View$TransformationInfo: int access$1400(android.view.View$TransformationInfo)>','<android.media.AudioService: android.media.AudioService$VolumeStreamState[] access$3900(android.media.AudioService)>','<android.filterfw.core.GLEnvironment: void activate()>','<android.webkit.HTML5VideoViewProxy: void access$700(android.webkit.HTML5VideoViewProxy,int,int,int,int)>','<android.view.Surface$CompatibleCanvas: void <init>(android.view.Surface,android.view.Surface$1)>','<android.text.TextPaint: void <init>(int)>','<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>','<android.media.effect.effects.BlackWhiteEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.location.Location: double convert(java.lang.String)>','<android.os.storage.IMountService$Stub$Proxy: int changeEncryptionPassword(java.lang.String)>','<android.content.pm.VerifierDeviceIdentity: int hashCode()>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.view.accessibility.IAccessibilityInteractionConnectionCallback asInterface(android.os.IBinder)>','<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()>','<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>','<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.ActivityStack: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>','<android.net.sip.SipManager$ListenerRelay: void <init>(android.net.sip.SipRegistrationListener,java.lang.String)>','<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength()>','<android.app.Activity: void performRestart()>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.content.SyncManager: java.util.List access$1800(android.content.SyncManager)>','<com.android.server.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>','<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.Class)>','<android.widget.ZoomButton: boolean access$000(android.widget.ZoomButton)>','<android.text.format.Time: void set(int,int,int,int,int,int)>','<android.view.ViewGroup: android.view.View getChildAt(int)>','<android.text.StaticLayout: int getLineCount()>','<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>','<android.graphics.drawable.GradientDrawable: void setGradientType(int)>','<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>','<android.location.Location: void setSpeed(float)>','<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>','<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onDataConnectionStateChanged(int,int)>','<com.android.internal.telephony.IccCardStatus$PinState: void <clinit>()>','<android.inputmethodservice.InputMethodService: void initViews()>','<com.android.internal.telephony.Connection: boolean isRinging()>','<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>','<android.widget.RemoteViews$SetEmptyView: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearExtension()>','<android.content.IContentService$Stub$Proxy: void unregisterContentObserver(android.database.IContentObserver)>','<android.media.MediaRouter: int getRouteCountStatic()>','<android.text.HtmlToSpannedConverter$Sub: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.text.DynamicLayout$ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>','<com.android.internal.policy.impl.PasswordUnlockScreen: com.android.internal.widget.PasswordEntryKeyboardHelper access$000(com.android.internal.policy.impl.PasswordUnlockScreen)>','<com.android.server.location.MockProvider: void <init>(java.lang.String,android.location.ILocationManager,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>','<android.widget.LinearLayout: int measureNullChild(int)>','<android.bluetooth.BluetoothTetheringDataTracker: void startMonitoring(android.content.Context,android.os.Handler)>','<android.content.Loader: boolean isStarted()>','<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>','<android.widget.TextView: boolean onTextContextMenuItem(int)>','<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.widget.TextView: boolean isSuggestionsEnabled()>','<android.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>','<android.content.ClipDescription: void <init>(android.os.Parcel)>','<android.view.ViewConfiguration: int getTapTimeout()>','<android.content.pm.ManifestDigest: java.lang.String toString()>','<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>','<android.app.SharedPreferencesImpl$2: void <init>(android.app.SharedPreferencesImpl,android.app.SharedPreferencesImpl$MemoryCommitResult,java.lang.Runnable)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1500(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.hardware.usb.UsbInterface: int describeContents()>','<android.content.Loader: boolean takeContentChanged()>','<android.view.GLES20RenderLayer: boolean isValid()>','<android.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)>','<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>','<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int)>','<android.app.ActivityManager: void restartPackage(java.lang.String)>','<android.os.storage.StorageManager: void <init>(android.os.Looper)>','<com.android.internal.content.PackageMonitor: void onPackageUpdateStarted(java.lang.String,int)>','<android.location.IGeocodeProvider$Stub: android.location.IGeocodeProvider asInterface(android.os.IBinder)>','<android.net.wifi.p2p.WifiP2pDevice$1: void <init>()>','<android.security.IKeyChainService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.KeyEvent: boolean isGamepadButton(int)>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$CallSettings getCallSettings()>','<com.android.internal.telephony.RIL: void changeIccPin(java.lang.String,java.lang.String,android.os.Message)>','<android.content.Intent: int filterHashCode()>','<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getAccessibilityRootNode()>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: void <init>()>','<android.view.IRotationWatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void getCallWaiting(android.os.Message)>','<com.android.server.AppWidgetService: void deleteAllHosts()>','<android.media.AudioService: void access$7900(android.media.AudioService,android.os.IBinder)>','<com.android.internal.telephony.cat.CatResponseMessage: void setInput(java.lang.String)>','<com.android.server.ConnectivityService: void updateNetworkSettings(android.net.NetworkStateTracker)>','<android.telephony.CellInfo: boolean isRegistered()>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findFocus(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>','<android.net.wifi.p2p.WifiP2pConfig$Persist: android.net.wifi.p2p.WifiP2pConfig$Persist valueOf(java.lang.String)>','<android.os.IVibratorService$Stub$Proxy: void vibratePattern(long[],int,android.os.IBinder)>','<android.app.ActivityThread: void <clinit>()>','<com.android.server.NetworkManagementService: void setUidNetworkRules(int,boolean)>','<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanFlags(java.lang.Object)>','<android.database.sqlite.SQLiteDatabaseConfiguration: boolean isInMemoryDb()>','<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>','<android.webkit.WebSettingsClassic: int getTextZoom()>','<android.net.wifi.WifiStateMachine: void access$5500(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.view.KeyEvent: char getDisplayLabel()>','<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.Spannable$Factory: void <clinit>()>','<android.widget.RemoteViews$Action: void setBitmapCache(android.widget.RemoteViews$BitmapCache)>','<com.android.internal.widget.ActionBarContainer: void onMeasure(int,int)>','<android.database.BulkCursorNative: android.os.IBinder asBinder()>','<android.net.MobileDataStateTracker: com.android.internal.telephony.Phone$DataState access$400(android.net.MobileDataStateTracker)>','<com.android.internal.telephony.cdma.SmsMessage: boolean isMwiDontStore()>','<com.android.internal.telephony.PhoneProxy: void unregisterForDisconnect(android.os.Handler)>','<com.android.internal.view.IInputContext$Stub$Proxy: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>','<com.android.vcard.VCardBuilder: void appendPostalLine(int,java.lang.String,android.content.ContentValues,boolean,boolean)>','<android.opengl.GLLogWrapper: void glTranslatef(float,float,float)>','<android.widget.RemoteViews$SetEmptyView: void writeToParcel(android.os.Parcel,int)>','<android.app.backup.BackupAgent$BackupServiceBinder: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>','<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getText()>','<android.opengl.GLLogWrapper: void glNormalPointer(int,int,int)>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int)>','<android.widget.RemoteViewsAdapter$2: void <init>(android.widget.RemoteViewsAdapter)>','<android.renderscript.RenderScript: void nContextBindProgramStore(int)>','<android.util.LongSparseArray: void <init>(int)>','<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)>','<android.content.pm.ParceledListSlice: void setLastSlice(boolean)>','<com.android.server.InputMethodManagerService$ClientState: java.lang.String toString()>','<com.android.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()>','<com.android.internal.telephony.PhoneProxy: void sendDtmf(char)>','<com.android.internal.widget.multiwaveview.GlowPadView: void setOnTriggerListener(com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener)>','<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>','<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>','<com.android.internal.view.IInputConnectionWrapper: void deleteSurroundingText(int,int)>','<android.webkit.SearchBoxImpl: void handleDispatchCompleteCallback(java.lang.String,int,boolean)>','<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>','<android.location.Address: void writeToParcel(android.os.Parcel,int)>','<android.view.InputEvent: void <init>()>','<android.os.Environment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$9100(android.bluetooth.BluetoothDeviceProfileState)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>','<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.server.LightsService: void finalize()>','<android.util.Log: int v(java.lang.String,java.lang.String)>','<com.android.internal.telephony.DataConnectionTracker: void onSetDependencyMet(java.lang.String,boolean)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setHardKeyboardStatus(boolean,boolean)>','<com.android.internal.telephony.CallManager: boolean getMute()>','<android.content.pm.UserInfo: void <clinit>()>','<android.opengl.GLLogWrapper: void glClipPlanef(int,float[],int)>','<com.android.server.location.GpsLocationProvider$1: void addGpsStatusListener(android.location.IGpsStatusListener)>','<android.graphics.drawable.AnimatedRotateDrawable: void run()>','<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>','<android.nfc.Tag: void <clinit>()>','<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>','<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)>','<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>','<android.opengl.GLLogWrapper: void glLightf(int,int,float)>','<android.view.View: void createContextMenu(android.view.ContextMenu)>','<android.webkit.WebView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.server.sip.SipService: void access$1100(com.android.server.sip.SipService)>','<android.view.View$UnsetPressedState: void <init>(android.view.View,android.view.View$1)>','<android.content.ISyncStatusObserver$Stub: android.os.IBinder asBinder()>','<android.webkit.SelectActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setTitle(java.lang.CharSequence)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$DrawData access$3700(android.webkit.WebViewClassic)>','<android.webkit.WebViewClassic: void discardAllTextures()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>','<android.os.StrictMode$StrictModeNetworkViolation: void <init>(int)>','<android.view.Display: void getMetricsWithSize(android.util.DisplayMetrics,int,int)>','<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>','<android.os.Parcel: java.lang.String readString()>','<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>','<android.view.KeyEvent: boolean isFunctionPressed()>','<android.database.AbstractCursor: boolean isFieldUpdated(int)>','<android.text.HtmlToSpannedConverter: android.text.Spanned convert()>','<com.android.server.LocationManagerService: boolean access$1900(com.android.server.LocationManagerService,java.lang.String)>','<android.os.CancellationSignal: void throwIfCanceled()>','<android.view.View: int getBottom()>','<android.content.Intent: double getDoubleExtra(java.lang.String,double)>','<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)>','<android.media.AudioService: void access$7500(android.media.AudioService,android.content.Context)>','<android.os.Looper: android.os.Looper myLooper()>','<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>','<com.android.server.am.ActivityRecord: boolean keyDispatchingTimedOut()>','<com.android.uiautomator.core.UiSelector: java.lang.String toString()>','<android.app.LoadedApk$ServiceDispatcher$DeathMonitor: void binderDied()>','<android.webkit.WebView: void onSizeChanged(int,int,int,int)>','<com.android.server.net.NetworkPolicyManagerService: void registerListener(android.net.INetworkPolicyListener)>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>','<com.android.internal.telephony.test.SimulatedGsmCallState: void progressConnectingToActive()>','<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)>','<com.android.server.wm.Session: void killSessionLocked()>','<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>','<com.android.internal.view.IInputMethodManager$Stub: android.os.IBinder asBinder()>','<android.view.ViewGroup: void makeOptionalFitsSystemWindows()>','<android.view.inputmethod.CompletionInfo: long getId()>','<com.android.internal.widget.PointerLocationView: void addPointerEvent(android.view.MotionEvent)>','<android.graphics.Path: void rQuadTo(float,float,float,float)>','<android.os.UserId: boolean isIsolated(int)>','<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>','<com.android.internal.widget.multiwaveview.GlowPadView: void access$300(com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)>','<android.filterfw.core.OutputPort: boolean hasFrame()>','<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>','<android.app.Application: void onTrimMemory(int)>','<android.app.Activity: android.app.LoaderManager getLoaderManager()>','<com.android.internal.telephony.sip.SipConnectionBase: long getDurationMillis()>','<android.webkit.WebViewDatabaseClassic: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)>','<android.opengl.GLLogWrapper: void glGetIntegerv(int,int[],int)>','<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>','<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getPrlVersion()>','<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>','<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>','<com.android.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>','<android.content.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: void findAccessibilityNodeInfoByAccessibilityId(long,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>','<com.android.internal.telephony.CallManager: boolean hasDisconnectedBgCall()>','<android.renderscript.RenderScript: int nElementCreate(int,int,boolean,int)>','<android.app.ActivityThread: java.lang.String currentPackageName()>','<com.android.vcard.VCardParserImpl_V30: java.lang.String getBase64(java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$6: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,java.lang.String)>','<android.os.StrictMode$2: java.util.ArrayList initialValue()>','<com.android.internal.view.menu.MenuPopupHelper: void onGlobalLayout()>','<android.net.wifi.WifiWatchdogStateMachine$1: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.widget.AbsListView: int access$1400(android.widget.AbsListView)>','<android.view.ViewRootImpl: void destroyHardwareResources()>','<android.app.ActivityThread: void installSystemProviders(java.util.List)>','<android.widget.RelativeLayout$DependencyGraph$Node$1: void onReleased(android.util.Poolable)>','<android.webkit.DeviceOrientationService: void suspend()>','<com.android.internal.telephony.sip.SipConnectionBase: int getNumberPresentation()>','<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])>','<android.webkit.FindActionModeCallback: void finish()>','<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>','<android.view.IWindowManager$Stub$Proxy: boolean isViewServerRunning()>','<com.android.internal.telephony.DataConnection: int getRetryCount()>','<com.android.internal.telephony.DataConnectionTracker$DataRoamingSettingObserver: void register(android.content.Context)>','<android.net.http.IdleCache: void <init>()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)>','<com.android.internal.os.BatteryStatsImpl: void shutdownLocked()>','<android.text.style.LeadingMarginSpan$Standard: void <init>(int)>','<android.view.ViewStub: void <init>(android.content.Context)>','<android.server.BluetoothPanProfileHandler: boolean isTetheringOn()>','<android.view.ViewConfiguration: int getScrollBarFadeDuration()>','<com.android.internal.view.menu.ListMenuItemView: void onFinishInflate()>','<com.android.internal.telephony.cat.Input$1: com.android.internal.telephony.cat.Input createFromParcel(android.os.Parcel)>','<android.view.ViewGroup: void debug(int)>','<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)>','<android.hardware.input.IInputManager$Stub$Proxy: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>','<android.media.AudioManager: boolean isMasterMute()>','<android.view.AccessibilityInteractionController$SomeArgs: void setNextPoolable(java.lang.Object)>','<android.content.pm.IPackageManager$Stub$Proxy: void systemReady()>','<android.database.CursorWindow: int getInt(int,int)>','<android.emoji.EmojiFactory$CustomLinkedHashMap: void <init>(android.emoji.EmojiFactory)>','<android.widget.SearchView: void access$2000(android.widget.SearchView,java.lang.CharSequence)>','<android.view.View: android.view.TouchDelegate getTouchDelegate()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$16100(android.net.wifi.WifiStateMachine)>','<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>','<android.widget.RemoteViews: android.widget.RemoteViews clone()>','<com.android.internal.app.IUsageStats$Stub: void <init>()>','<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>','<android.app.IWallpaperManager$Stub: void <init>()>','<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.sip.SipPhone: void activateCellBroadcastSms(int,android.os.Message)>','<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAddress()>','<com.android.internal.content.PackageMonitor: void onPackageChanged(java.lang.String,int,java.lang.String[])>','<android.view.MenuInflater: void <init>(android.content.Context)>','<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>','<android.preference.Preference: void onAttachedToActivity()>','<android.widget.MediaController$1: void <init>(android.widget.MediaController)>','<android.graphics.Matrix$1: boolean postTranslate(float,float)>','<android.widget.Editor$Blink: void <init>(android.widget.Editor,android.widget.Editor$1)>','<android.view.animation.Transformation: void set(android.view.animation.Transformation)>','<com.android.internal.widget.multiwaveview.PointCloud: void setScale(float)>','<android.net.wifi.NetworkUpdateResult: void setNetworkId(int)>','<com.android.server.usb.UsbDeviceManager: android.content.ContentResolver access$000(com.android.server.usb.UsbDeviceManager)>','<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>','<android.app.ActivityThread$Profiler: void startProfiling()>','<com.android.server.am.UsageStatsService: void <clinit>()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1900(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String access$4902(com.android.server.connectivity.Tethering$TetherMasterSM,java.lang.String)>','<android.net.http.Connection: org.apache.http.HttpHost getHost()>','<android.security.SystemKeyStore: java.lang.String retrieveKeyHexString(java.lang.String)>','<com.android.internal.widget.LockPatternView$SavedState: void <clinit>()>','<android.content.SyncManager$9: void <init>(android.content.SyncManager)>','<com.android.internal.telephony.gsm.GSMPhone: void startDtmf(char)>','<android.widget.AutoCompleteTextView$PopupDataSetObserver$1: void run()>','<com.android.server.connectivity.Tethering: void access$400(com.android.server.connectivity.Tethering,boolean)>','<android.view.inputmethod.InputMethodInfo: int hashCode()>','<android.app.backup.IRestoreObserver$Stub: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.lang.String getNationalPrefix()>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$4000(android.net.wifi.WifiStateMachine)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean isMainCountryForCode()>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>','<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>','<android.widget.SearchView: void setMaxWidth(int)>','<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>','<android.filterfw.core.FilterFunction: void close()>','<com.android.server.am.ActivityManagerService: void showBootMessage(java.lang.CharSequence,boolean)>','<com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State valueOf(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$Timer: int getCountLocked(int)>','<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()>','<com.android.server.input.InputManagerService$8: void visitKeyboardLayout(android.content.res.Resources,java.lang.String,java.lang.String,java.lang.String,int)>','<android.text.LoginFilter$UsernameFilterGMail: void <init>()>','<com.android.server.pm.PackageManagerService: int[] removeInts(int[],int[])>','<android.net.wifi.WifiStateMachine: java.util.List syncGetScanResultsList()>','<android.media.Ringtone: void setStreamType(int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>','<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>','<android.text.style.ForegroundColorSpan: void <init>(int)>','<android.view.DragEvent$1: android.view.DragEvent[] newArray(int)>','<android.text.style.StrikethroughSpan: int describeContents()>','<com.android.internal.telephony.gsm.GsmConnection: void separate()>','<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>','<android.net.sip.SipManager$ListenerRelay: void onRegistrationDone(android.net.sip.ISipSession,int)>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)>','<com.android.internal.app.ActionBarImpl$TabImpl: void <init>(com.android.internal.app.ActionBarImpl)>','<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$OutgoingHid access$3100(android.bluetooth.BluetoothDeviceProfileState)>','<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>','<android.renderscript.Element: android.renderscript.Element I64_2(android.renderscript.RenderScript)>','<android.graphics.Rect: void <clinit>()>','<com.android.server.sip.SipService: void access$1400(com.android.server.sip.SipService,android.net.sip.SipProfile)>','<android.content.pm.ResolveInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<android.webkit.ZoomControlExternal: void <clinit>()>','<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffMasterTetherSettings()>','<android.app.ActivityThread$ResourcesKey: boolean equals(java.lang.Object)>','<com.android.server.PowerManagerService: void setButtonBrightnessOverride(int)>','<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>','<android.view.MotionEvent: float getHistoricalOrientation(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pInfo access$700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.ddm.DdmHandleHeap: void <clinit>()>','<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>','<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiMulticastEnabled(int)>','<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>','<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)>','<android.widget.EdgeEffect: void onRelease()>','<com.android.server.WallpaperManagerService$WallpaperObserver: void <init>(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>','<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>','<android.renderscript.RenderScript: void contextDump()>','<android.net.wifi.SupplicantStateTracker$CompletedState: boolean processMessage(android.os.Message)>','<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>','<android.view.View: void flushLayer()>','<com.android.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)>','<android.graphics.Path: boolean isInverseFillType()>','<com.android.internal.telephony.ApnContext: void setDataConnectionAc(com.android.internal.telephony.DataConnectionAc)>','<com.android.internal.os.BatteryStatsImpl$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.am.BatteryStatsService: void shutdown()>','<android.accessibilityservice.UiTestAutomationBridge: void connect()>','<android.widget.TextView: int getTotalPaddingTop()>','<com.android.server.WallpaperManagerService: java.lang.String getName()>','<com.android.server.pm.PackageManagerService$2: void run()>','<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>','<android.widget.Switch: void setTrackResource(int)>','<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>','<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeUp()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>','<android.telephony.cdma.CdmaSmsCbProgramData: void <init>(android.os.Parcel)>','<android.os.Debug$MemoryInfo$1: android.os.Debug$MemoryInfo[] newArray(int)>','<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>','<android.widget.EditText: void <init>(android.content.Context)>','<android.app.Dialog: void setDismissMessage(android.os.Message)>','<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void updateServiceLocation()>','<android.webkit.WebView: void computeScroll()>','<android.net.sip.SipSession: android.net.sip.SipSession$Listener access$000(android.net.sip.SipSession)>','<com.android.server.ConnectivityService$FeatureUser: void <init>(com.android.server.ConnectivityService,int,java.lang.String,android.os.IBinder)>','<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.pm.IPackageManager$Stub$Proxy: int checkUidPermission(java.lang.String,int)>','<android.animation.KeyframeSet: android.animation.KeyframeSet ofObject(java.lang.Object[])>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setCursorCapsMode(int,int)>','<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$600(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>','<android.media.TimedText: android.graphics.Rect getBounds()>','<com.android.internal.widget.SlidingTab: void setRightTabResources(int,int,int,int)>','<com.android.server.NetworkManagementService: void access$700(com.android.server.NetworkManagementService,java.lang.String,boolean)>','<com.android.internal.util.StateMachine$ProcessedMessages: int count()>','<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>','<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>','<com.android.internal.telephony.sip.SipCommandInterface: void setupDataCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.app.Fragment$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>','<android.text.SpannableStringBuilder: char charAt(int)>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$1700(android.net.wifi.WifiWatchdogStateMachine)>','<android.content.pm.PackageParser$Activity: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ActivityInfo)>','<com.android.server.NotificationManagerService$2: void <init>(com.android.server.NotificationManagerService)>','<android.hardware.usb.UsbDevice$1: android.hardware.usb.UsbDevice createFromParcel(android.os.Parcel)>','<android.view.MotionEvent: java.lang.String axisToString(int)>','<android.hardware.Camera$Parameters: float getFocalLength()>','<android.view.ViewPropertyAnimator$3: void <init>(android.view.ViewPropertyAnimator,int)>','<android.media.AudioService: void access$6200(android.media.AudioService,android.bluetooth.BluetoothDevice,int)>','<android.webkit.WebViewClassic: boolean onHoverEvent(android.view.MotionEvent)>','<android.net.Uri: boolean isAbsolute()>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getVoiceMailAlphaTag()>','<com.android.internal.telephony.gsm.GSMPhone: void setRadioPower(boolean)>','<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>','<android.webkit.WebView: boolean zoomOut()>','<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>','<android.server.BluetoothService: boolean notifyIncomingConnection(java.lang.String,boolean)>','<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)>','<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()>','<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: android.content.Context access$100(com.android.internal.telephony.WapPushOverSms$WapPushConnection)>','<android.media.RemoteControlClient: void setRcseId(int)>','<android.widget.AbsListView: boolean performAccessibilityAction(int,android.os.Bundle)>','<com.android.internal.telephony.PhoneBase: boolean isDnsCheckDisabled()>','<android.content.SyncManager$SyncHandler: void stopSyncEvent(long,android.content.SyncOperation,java.lang.String,int,int,long)>','<com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesIfNeededLI(java.io.File,java.io.File)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)>','<android.net.wifi.WifiStateMachine: android.net.DhcpStateMachine access$11800(android.net.wifi.WifiStateMachine)>','<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.app.Activity: void setVolumeControlStream(int)>','<android.webkit.L10nUtils: java.lang.String getLocalisedString(int)>','<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>','<android.app.IUiModeManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.filterfw.core.SyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)>','<android.os.storage.IMountService$Stub$Proxy: boolean isUsbMassStorageEnabled()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void dumpAllSurfaces()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispose()>','<android.content.res.TypedArray: int getIndex(int)>','<android.filterfw.core.NativeBuffer: int getElementSize()>','<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int)>','<com.android.vcard.VCardParserImpl_V21: void handlePropertyValue(com.android.vcard.VCardProperty,java.lang.String)>','<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader$TileMode)>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleX()>','<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getNextWaitingApn()>','<com.android.internal.policy.impl.PhoneWindowManager: void beginAnimationLw(int,int)>','<com.android.internal.view.IInputContext$Stub$Proxy: void sendKeyEvent(android.view.KeyEvent)>','<android.view.ViewGroup: void startLayoutAnimation()>','<android.os.Debug: int getGlobalGcInvocationCount()>','<com.android.server.connectivity.Tethering: int access$4700(com.android.server.connectivity.Tethering)>','<com.android.internal.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)>','<android.widget.Toast: void <init>(android.content.Context)>','<android.content.ContentQueryMap$1: void <init>(android.content.ContentQueryMap,android.os.Handler)>','<android.app.Fragment: android.app.Activity getActivity()>','<android.telephony.SmsCbEtwsInfo: void <clinit>()>','<android.content.res.AssetManager: void <init>()>','<android.widget.OverScroller$SplineOverScroller: void notifyEdgeReached(int,int,int)>','<android.accounts.AccountManager$9: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,android.app.Activity,android.os.Bundle)>','<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>','<android.view.GLES20Canvas: void drawARGB(int,int,int,int)>','<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)>','<android.view.ViewConfiguration: int getScaledTouchSlop()>','<android.view.WindowManagerImpl: android.view.WindowManagerImpl getDefault()>','<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()>','<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>','<android.util.PrefixPrinter: android.util.Printer create(android.util.Printer,java.lang.String)>','<com.android.server.pm.PackageManagerService$12: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$MoveParams)>','<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.content.IIntentReceiver$Stub$Proxy: android.os.IBinder asBinder()>','<android.media.effect.effects.AutoFixEffect: void apply(int,int,int,int)>','<com.android.server.usb.UsbDeviceManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>','<com.android.server.location.MockProvider: void setMinTime(long,android.os.WorkSource)>','<com.android.internal.telephony.DataConnection: void access$600(com.android.internal.telephony.DataConnection,android.os.Message)>','<android.app.ExpandableListActivity: void onGroupExpand(int)>','<com.android.uiautomator.core.UiDevice: int getDisplayWidth()>','<com.android.server.location.LocationProviderProxy: int getPowerRequirement()>','<android.animation.Animator: void removeListener(android.animation.Animator$AnimatorListener)>','<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>','<android.net.wifi.WifiStateTracker: android.net.NetworkInfo access$100(android.net.wifi.WifiStateTracker)>','<android.app.AppGlobals: java.lang.String getInitialPackage()>','<android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc[] values()>','<android.preference.Preference: void dispatchRestoreInstanceState(android.os.Bundle)>','<android.telephony.SmsCbCmasInfo: int getMessageClass()>','<android.telephony.SignalStrength: int getGsmDbm()>','<android.widget.ImageView: int getMaxHeight()>','<android.media.AudioRoutesInfo$1: android.media.AudioRoutesInfo createFromParcel(android.os.Parcel)>','<com.android.internal.statusbar.IStatusBar$Stub: com.android.internal.statusbar.IStatusBar asInterface(android.os.IBinder)>','<android.webkit.HTML5VideoViewProxy: boolean onError(android.media.MediaPlayer,int,int)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getBandwidthTypes()>','<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>','<com.android.internal.telephony.cat.IconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: void detach()>','<android.net.wifi.WifiStateMachine: void access$10700(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void forgotPattern(boolean)>','<android.os.AsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)>','<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>','<android.net.wifi.WifiStateMachine: boolean access$9000(android.net.wifi.WifiStateMachine)>','<android.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()>','<android.nfc.NfcManager: void <init>(android.content.Context)>','<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>','<android.view.ViewGroup: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>','<android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper: void <init>(android.content.Context,com.android.internal.view.IInputMethodCallback)>','<android.content.pm.PackageInfo: void <init>(android.os.Parcel,android.content.pm.PackageInfo$1)>','<android.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: void changeStateFromPress(boolean)>','<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>','<android.database.CursorWindow$1: android.database.CursorWindow createFromParcel(android.os.Parcel)>','<android.bluetooth.BluetoothProfileState$PendingCommandState: void <init>(android.bluetooth.BluetoothProfileState,android.bluetooth.BluetoothProfileState$1)>','<android.os.INetworkManagementService$Stub$Proxy: void flushDefaultDnsCache()>','<android.widget.MediaController$5: void onProgressChanged(android.widget.SeekBar,int,boolean)>','<android.app.backup.IBackupManager$Stub$Proxy: void clearBackupData(java.lang.String)>','<android.nfc.NfcActivityManager: void <init>(android.nfc.NfcAdapter)>','<android.app.ISearchManager$Stub: void <init>()>','<android.content.pm.PackageParser$ServiceIntentInfo: void <init>(android.content.pm.PackageParser$Service)>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String getVolumeState(java.lang.String)>','<android.widget.PopupWindow: int getWindowLayoutType()>','<android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristics$TriState access$200(int)>','<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)>','<com.android.internal.telephony.PhoneProxy: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.WifiStateMachine$DisconnectedState: boolean processMessage(android.os.Message)>','<android.webkit.CacheManager$CacheResult: java.lang.String getExpiresString()>','<com.android.server.EventLogTags: void writeBootProgressPmsReady(long)>','<android.database.sqlite.SQLiteSession: boolean hasTransaction()>','<android.net.Uri$Part: void <clinit>()>','<android.webkit.HTML5VideoViewProxy: void pause()>','<com.android.internal.telephony.cdma.CDMALTEPhone: void dispose()>','<android.widget.AutoCompleteTextView: void doAfterTextChanged()>','<android.app.ActivityManager$RunningServiceInfo$1: android.app.ActivityManager$RunningServiceInfo createFromParcel(android.os.Parcel)>','<android.database.DataSetObservable: void <init>()>','<android.util.MathUtils: float min(float,float,float)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$402(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.preference.Preference: boolean shouldDisableDependents()>','<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>','<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>','<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>','<android.widget.RemoteViewsAdapter: android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection access$200(android.widget.RemoteViewsAdapter)>','<com.android.server.am.BatteryStatsService: void notePhoneSignalStrength(android.telephony.SignalStrength)>','<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>','<android.nfc.Tag: boolean hasTech(int)>','<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>','<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>','<com.android.server.sip.SipSessionListenerProxy: void <init>()>','<android.os.WorkSource: void <clinit>()>','<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()>','<android.webkit.WebSettingsClassic: boolean getDisplayZoomControls()>','<android.graphics.Interpolator: int getValueCount()>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>','<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>','<android.os.storage.StorageVolume: java.lang.String getPath()>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>','<android.view.AccessibilityIterators$WordTextSegmentIterator: android.view.AccessibilityIterators$WordTextSegmentIterator getInstance(java.util.Locale)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: void enter()>','<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onClearAllNotifications()>','<com.android.internal.telephony.PhoneBase: boolean getCallForwardingIndicator()>','<android.net.wifi.WifiInfo: void <clinit>()>','<android.server.search.SearchManagerService$BootCompletedReceiver$1: void run()>','<com.android.server.net.NetworkPolicyManagerService: android.os.RemoteCallbackList access$1400(com.android.server.net.NetworkPolicyManagerService)>','<android.util.MathUtils: void <clinit>()>','<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)>','<android.hardware.Camera$Parameters: void dump()>','<android.webkit.WebSettingsClassic: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>','<android.webkit.HTML5VideoFullScreen: int access$000(android.webkit.HTML5VideoFullScreen)>','<com.android.server.pm.PackageManagerService: int checkUidPermission(java.lang.String,int)>','<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>','<android.media.AudioService$VolumeStreamState: void setAllIndexes(android.media.AudioService$VolumeStreamState,boolean)>','<com.android.server.AlarmManagerService: void finalize()>','<android.webkit.WebViewClassic: boolean selectText(int,int)>','<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>','<com.android.server.net.NetworkPolicyManagerService: java.lang.Object access$100(com.android.server.net.NetworkPolicyManagerService)>','<android.net.sip.SipSession$Listener: void onRegistrationFailed(android.net.sip.SipSession,int,java.lang.String)>','<android.app.ActivityManagerProxy: void goingToSleep()>','<android.widget.SearchView$SearchAutoComplete: void setSearchView(android.widget.SearchView)>','<android.accounts.AuthenticatorException: void <init>()>','<android.content.res.StringBlock$StyleIDs: int access$300(android.content.res.StringBlock$StyleIDs)>','<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>','<android.provider.Settings$Bookmarks: void <clinit>()>','<android.accounts.AccountManager$AmsTask$Response: void onError(int,java.lang.String)>','<android.os.storage.IMountServiceListener$Stub: void <init>()>','<com.android.server.WifiService$Multicaster: int getUid()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRoamingOff()>','<com.android.server.net.NetworkAlertObserver: void interfaceAdded(java.lang.String)>','<android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc valueOf(java.lang.String)>','<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: void add(android.os.DropBoxManager$Entry)>','<android.webkit.PluginManager: java.lang.String[] getPluginDirectories()>','<android.webkit.FindActionModeCallback$NoAction: void <init>()>','<android.util.LongSparseArray: java.lang.Object get(long)>','<android.widget.EditText: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)>','<android.webkit.DeviceMotionAndOrientationManager: void onOrientationChange(java.lang.Double,java.lang.Double,java.lang.Double)>','<com.android.internal.telephony.gsm.GSMPhone: void dispose()>','<android.view.animation.LinearInterpolator: float getInterpolation(float)>','<com.android.internal.widget.SlidingTab: void access$300(com.android.internal.widget.SlidingTab)>','<android.text.style.BulletSpan: int getLeadingMargin(boolean)>','<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>','<android.view.View: void cancelLongPress()>','<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>','<android.media.AudioService$SetModeDeathHandler: void <init>(android.media.AudioService,android.os.IBinder,int)>','<android.widget.LinearLayout: void measureHorizontal(int,int)>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void <init>(android.os.Handler)>','<com.android.server.location.PassiveProvider: void updateLocation(android.location.Location)>','<android.media.AudioService: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>','<android.webkit.WebView$PrivateAccess: void setScrollXRaw(int)>','<com.android.server.LocationManagerService: void access$2000(com.android.server.LocationManagerService,android.location.Location,boolean)>','<android.widget.SearchView$4: void onFocusChange(android.view.View,boolean)>','<com.android.internal.policy.impl.PhoneWindowManager$3: void run()>','<android.content.SyncStats$1: void <init>()>','<android.nfc.NdefRecord: void <clinit>()>','<android.view.GLES20Canvas: void outputDisplayList(android.view.DisplayList)>','<android.server.BluetoothService: android.os.ParcelUuid[] getUuidFromCache(java.lang.String)>','<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>','<com.android.server.AppWidgetServiceImpl: void updateProvidersForPackageLocked(java.lang.String)>','<com.android.internal.telephony.cat.ComprehensionTlv: java.util.List decodeMany(byte[],int)>','<android.content.ContentService$ObserverNode$ObserverEntry: void <init>(android.content.ContentService$ObserverNode,android.database.IContentObserver,boolean,java.lang.Object,int,int)>','<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int)>','<android.webkit.ByteArrayBuilder: java.lang.ref.ReferenceQueue access$100()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>','<android.widget.LinearLayout: int getVirtualChildCount()>','<android.hardware.Camera$Parameters: void <init>(android.hardware.Camera,android.hardware.Camera$1)>','<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>','<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<com.android.internal.widget.SlidingTab$1: void <init>(com.android.internal.widget.SlidingTab)>','<com.android.internal.widget.AbsActionBarView: void setContentHeight(int)>','<android.text.HtmlToSpannedConverter$Bold: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.nfc.NfcActivityManager: void requestNfcServiceCallback(boolean)>','<android.os.ICancellationSignal$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: void reset()>','<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>','<android.view.View: void getHitRect(android.graphics.Rect)>','<android.media.AudioService: android.content.ContentResolver access$3300(android.media.AudioService)>','<com.android.server.am.ActivityManagerService: void forceStopPackage(java.lang.String)>','<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void setCursorCapsMode(int,int)>','<android.widget.ImageView: void setImageLevel(int)>','<com.android.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.android.internal.widget.ScrollingTabContainerView,com.android.internal.widget.ScrollingTabContainerView$1)>','<android.os.Parcel: java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)>','<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>','<com.android.internal.telephony.gsm.SIMRecords$Get_Spn_Fsm_State: void <clinit>()>','<android.graphics.Point: boolean equals(java.lang.Object)>','<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getAlpha()>','<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows()>','<android.content.ContentProviderOperation: java.lang.String toString()>','<android.view.WindowManagerImpl$CompatModeWrapper: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.view.View: float getRotation()>','<android.content.pm.PackageManager: void <init>()>','<android.location.Criteria: void setPowerRequirement(int)>','<android.security.KeyStore: boolean importKey(java.lang.String,byte[])>','<com.android.internal.statusbar.StatusBarNotification: void <init>(java.lang.String,int,java.lang.String,int,int,int,android.app.Notification)>','<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>','<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)>','<android.widget.ArrayAdapter: long getItemId(int)>','<android.view.accessibility.AccessibilityRecord: int getItemCount()>','<android.view.View: int computeHorizontalScrollExtent()>','<android.filterfw.core.FrameFormat: int bytesPerSampleOf(int)>','<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getPassword(android.accounts.Account)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addForegroundTimeLocked(long)>','<com.android.server.ConnectivityService$1: void onUidRulesChanged(int,int)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec: void <init>(java.lang.String,int,int,int,int,int)>','<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: android.content.pm.UserInfo getUser(int)>','<android.content.ContentResolver$OpenResourceIdResult: void <init>(android.content.ContentResolver)>','<android.view.inputmethod.ExtractedTextRequest: int describeContents()>','<android.animation.KeyframeSet: android.animation.KeyframeSet ofInt(int[])>','<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.IIntentReceiver$Stub$Proxy: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.pm.PackageManagerService: java.lang.String access$3000(java.lang.String,java.lang.String,java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: int numberFormatSize()>','<android.renderscript.ProgramRaster$CullMode: void <clinit>()>','<android.renderscript.RenderScript: int safeID(android.renderscript.BaseObj)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$1402(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.CallManager: void unregisterForSuppServiceFailed(android.os.Handler)>','<android.widget.AbsListView: int getCheckedItemCount()>','<com.android.internal.telephony.sip.SipCommandInterface: void requestIsimAuthentication(java.lang.String,android.os.Message)>','<android.widget.RelativeLayout$LayoutParams: int access$302(android.widget.RelativeLayout$LayoutParams,int)>','<android.app.Activity: void onStop()>','<android.renderscript.RenderScript: void nProgramBindConstants(int,int,int)>','<android.inputmethodservice.KeyboardView: void swipeRight()>','<android.app.SearchDialog: boolean isLandscapeMode(android.content.Context)>','<android.widget.CheckedTextView: void toggle()>','<android.app.Notification$Builder: android.app.Notification access$500(android.app.Notification$Builder)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>','<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>','<android.net.InterfaceConfiguration: boolean isActive()>','<com.android.server.am.ActivityManagerService$14: int compare(java.lang.Object,java.lang.Object)>','<android.widget.ExpandableListConnector: boolean collapseGroup(android.widget.ExpandableListConnector$PositionMetadata)>','<com.android.internal.telephony.GsmAlphabet: void stringToGsm8BitUnpackedField(java.lang.String,byte[],int,int)>','<android.webkit.ZoomManager$ScaleDetectorListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>','<android.database.IContentObserver$Stub: android.os.IBinder asBinder()>','<com.android.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.util.Collection)>','<android.app.ActivityThread: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>','<com.android.server.NotificationManagerService: android.os.Vibrator access$400(com.android.server.NotificationManagerService)>','<android.view.IWindowManager$Stub$Proxy: void addAppToken(int,android.view.IApplicationToken,int,int,boolean)>','<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>','<android.app.backup.IFullBackupRestoreObserver$Stub: void <init>()>','<android.widget.ListPopupWindow: android.widget.ListPopupWindow$ResizePopupRunnable access$800(android.widget.ListPopupWindow)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void reset()>','<android.net.wifi.SupplicantState: boolean isDriverActive(android.net.wifi.SupplicantState)>','<android.os.Message: void sendToTarget()>','<android.app.ExpandableListActivity: long getSelectedId()>','<android.view.inputmethod.InputMethodManager: void closeCurrentInput()>','<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: com.android.internal.util.State getOriginalState()>','<android.bluetooth.IBluetooth$Stub$Proxy: int getRemoteClass(java.lang.String)>','<android.net.wifi.WifiStateMachine: void access$11900(android.net.wifi.WifiStateMachine,android.net.DhcpInfoInternal)>','<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>','<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver$OnDrawListener)>','<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long)>','<android.webkit.WebViewCore: int access$6500(android.webkit.WebViewCore,int,boolean)>','<android.net.sip.SipSession: boolean isInCall()>','<android.filterfw.core.SyncRunner$1: void <init>(android.filterfw.core.SyncRunner,android.filterfw.core.Filter,android.os.ConditionVariable)>','<android.view.IApplicationToken$Stub$Proxy: boolean keyDispatchingTimedOut()>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy: void <init>(com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>','<com.android.server.wm.WindowState$DeathRecipient: void <init>(com.android.server.wm.WindowState,com.android.server.wm.WindowState$1)>','<android.app.ProgressDialog: android.widget.ProgressBar access$000(android.app.ProgressDialog)>','<android.media.IRingtonePlayer$Stub: android.media.IRingtonePlayer asInterface(android.os.IBinder)>','<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)>','<android.text.Layout$Ellipsizer: void getChars(int,int,char[],int)>','<android.net.wifi.WifiStateMachine$SoftApStartingState: void enter()>','<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)>','<com.android.server.StatusBarManagerService$6: void run()>','<com.android.internal.util.StateMachine$SmHandler$QuittingState: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>','<android.os.Bundle$1: android.os.Bundle createFromParcel(android.os.Parcel)>','<android.net.Uri$OpaqueUri: java.util.List getPathSegments()>','<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>','<com.android.internal.telephony.PhoneBase: void <init>(com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<com.android.server.EventLogTags: void writeBootProgressPmsScanEnd(long)>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)>','<com.android.internal.telephony.test.CallInfo: void <init>(boolean,com.android.internal.telephony.test.CallInfo$State,boolean,java.lang.String)>','<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>','<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>','<com.android.internal.view.menu.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()>','<android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$102(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList)>','<android.opengl.GLLogWrapper: void glDrawArrays(int,int,int)>','<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()>','<com.android.server.net.NetworkStatsCollection: long getStartMillis()>','<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>','<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>','<android.server.BluetoothA2dpService: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>','<com.android.server.MountService$ObbAction: void execute(com.android.server.MountService$ObbActionHandler)>','<android.os.Bundle: java.lang.Object clone()>','<android.bluetooth.IBluetoothStateChangeCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebViewClassic$FocusNodeHref: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getLine1AlphaTag()>','<android.content.res.ObbInfo: int describeContents()>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1: void <init>()>','<android.app.Notification$1: android.app.Notification createFromParcel(android.os.Parcel)>','<com.android.server.wm.WindowManagerService: void dismissKeyguard()>','<com.android.internal.telephony.cdma.CDMAPhone: void handleTimerInEmergencyCallbackMode(int)>','<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter)>','<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.bluetooth.BluetoothProfileState: void access$600(android.bluetooth.BluetoothProfileState,com.android.internal.util.IState)>','<com.android.internal.policy.impl.LockScreen$4: void <init>(com.android.internal.policy.impl.LockScreen)>','<com.android.server.am.ActivityManagerService: void noteWakeupAlarm(android.content.IIntentSender)>','<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>','<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>','<android.database.sqlite.SQLiteConnection$OperationLog: void endOperation(int)>','<com.android.server.NativeDaemonEvent: java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[],int)>','<android.webkit.WebSyncManager: void resetSync()>','<android.renderscript.RenderScript: int nProgramStoreCreate(boolean,boolean,boolean,boolean,boolean,boolean,int,int,int)>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)>','<android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)>','<com.android.server.MountService$5: void run()>','<com.android.server.ConnectivityService: boolean requestRouteToHost(int,int)>','<android.widget.ExpandableListConnector$MyDataSetObserver: void onInvalidated()>','<android.text.style.LeadingMarginSpan$Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onAttachedToWindow()>','<android.webkit.DeviceOrientationService: void onSensorChanged(android.hardware.SensorEvent)>','<android.view.GLES20Canvas: void detachFunctor(int)>','<android.widget.SearchView$SearchAutoComplete: void setThreshold(int)>','<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)>','<android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getDeviceSvn()>','<android.text.Layout: int getLineBaseline(int)>','<android.view.KeyEvent: boolean isAltPressed()>','<com.android.internal.telephony.gsm.GsmCall: java.lang.String toString()>','<android.webkit.WebHistoryItem: void inflate(int)>','<com.android.internal.telephony.gsm.GsmConnection$MyHandler: void <init>(com.android.internal.telephony.gsm.GsmConnection,android.os.Looper)>','<android.graphics.Region: java.lang.String toString()>','<android.media.MediaRouter$RouteInfo: void requestSetVolume(int)>','<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>','<android.database.AbstractCursor: android.database.CursorWindow getWindow()>','<com.android.server.WifiService: java.util.List access$100(com.android.server.WifiService)>','<android.graphics.drawable.AnimatedRotateDrawable: void start()>','<com.android.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setScanMode(int,int)>','<android.view.ViewDebug$4: void run(java.lang.Object[])>','<android.location.Address: java.lang.String getCountryName()>','<com.android.internal.telephony.sip.SipPhone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.content.CursorEntityIterator: void reset()>','<android.filterfw.core.FilterContext: void <init>()>','<android.nfc.tech.BasicTagTechnology: void <init>(android.nfc.Tag,int)>','<android.view.MotionEvent: float getTouchMinor(int)>','<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>','<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>','<android.widget.HeaderViewListAdapter: long getItemId(int)>','<com.android.internal.telephony.AdnRecordCache: int extensionEfForEf(int)>','<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getRUIMOperatorNumeric()>','<android.view.MotionEvent: void offsetLocation(float,float)>','<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>','<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>','<com.android.internal.view.menu.MenuItemImpl: boolean isCheckable()>','<com.android.internal.telephony.Phone$DataState: com.android.internal.telephony.Phone$DataState valueOf(java.lang.String)>','<android.content.ContextWrapper: java.lang.String[] fileList()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean resetPassword(java.lang.String,int)>','<com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>','<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>','<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)>','<android.view.GLES20DisplayList$DisplayListFinalizer: void <init>(int)>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.server.am.BatteryStatsService: void noteNetworkInterfaceType(java.lang.String,int)>','<android.text.style.EasyEditSpan: int describeContents()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void access$300(android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl,com.android.internal.textservice.ISpellCheckerSession,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams,boolean)>','<com.android.server.am.ServiceRecord$1: void <init>(com.android.server.am.ServiceRecord,java.lang.String,int,int,int,android.app.Notification)>','<android.webkit.WebBackForwardList: boolean getClearPending()>','<android.net.wifi.WpsInfo: java.lang.String toString()>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void onGesture(int)>','<android.net.http.SslCertificate$DName: java.lang.String getUName()>','<com.android.internal.telephony.IccSmsInterfaceManager: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<com.android.server.am.ActivityStack: void activityDestroyed(android.os.IBinder)>','<android.webkit.HTML5VideoViewProxy: void dispatchOnPaused()>','<android.graphics.Paint: void setShadowLayer(float,float,float,int)>','<android.server.BluetoothAdapterStateMachine$PerProcessState: boolean processMessage(android.os.Message)>','<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>','<android.view.View: void offsetTopAndBottom(int)>','<android.net.INetworkPolicyManager$Stub: void <init>()>','<android.net.LocalSocket: boolean isOutputShutdown()>','<com.android.internal.statusbar.StatusBarIconList: int getViewIndex(int)>','<android.util.NtpTrustedTime: boolean forceRefresh()>','<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>','<android.app.FragmentManagerImpl$2: void run()>','<android.net.DhcpInfo: int describeContents()>','<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>','<android.app.backup.IBackupManager$Stub$Proxy: void setAutoRestore(boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.webkit.WebView$PrivateAccess: void super_scrollTo(int,int)>','<android.os.Debug: void dumpHprofData(java.lang.String)>','<android.net.nsd.NsdServiceInfo$1: void <init>()>','<com.android.vcard.VCardConfig: boolean refrainPhoneNumberFormatting(int)>','<android.net.wifi.WifiStateMachine: void access$8100(android.net.wifi.WifiStateMachine,android.net.NetworkInfo$DetailedState)>','<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>','<android.server.BluetoothBondState: boolean hasAutoPairingFailed(java.lang.String)>','<android.graphics.Path: void addPath(android.graphics.Path)>','<android.app.ActivityThread: void access$800(android.app.ActivityThread,android.os.IBinder,boolean,boolean,int)>','<android.opengl.GLLogWrapper: void glClearDepthx(int)>','<android.app.ActivityManagerNative: android.os.IBinder asBinder()>','<com.android.internal.content.PackageMonitor: int isPackageAppearing(java.lang.String)>','<android.opengl.GLLogWrapper: void glFogxv(int,java.nio.IntBuffer)>','<android.view.View: void <init>()>','<android.webkit.WebViewCore: void access$5100(android.webkit.WebViewCore,int,int)>','<android.util.AndroidRuntimeException: void <init>()>','<android.net.wifi.WifiInfo: java.lang.String getBSSID()>','<android.widget.TextView: java.lang.CharSequence getHint()>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1Number()>','<android.net.wifi.ScanResult: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int)>','<android.filterfw.geometry.Rectangle: float getWidth()>','<android.location.IGpsStatusListener$Stub$Proxy: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>','<android.content.SyncManager$ActiveSyncContext: boolean bindToSyncAdapter(android.content.pm.RegisteredServicesCache$ServiceInfo)>','<android.webkit.WebViewClassic$1: void onPostExecute(java.util.Set)>','<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()>','<android.telephony.SmsMessage: java.lang.String getEmailFrom()>','<android.webkit.WebViewCore: void access$2100(android.webkit.WebViewCore,int)>','<android.view.GLES20Canvas: void drawLines(float[],int,int,android.graphics.Paint)>','<android.media.AudioService: void setPlaybackInfoForRcc(int,int,int)>','<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>','<android.webkit.QuadF: boolean containsPoint(float,float)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.String packageForFilter(android.content.IntentFilter)>','<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>','<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>','<android.hardware.Camera: void stopPreview()>','<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>','<android.widget.ImageView: void <init>(android.content.Context)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: boolean processMessage(android.os.Message)>','<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>','<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region$Op)>','<com.android.internal.telephony.BaseCommands: void setOnCatProactiveCmd(android.os.Handler,int,java.lang.Object)>','<android.app.Dialog: void onCreate(android.os.Bundle)>','<com.android.server.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean getDataRoamingEnabled()>','<android.database.sqlite.SQLiteDatabase: void onCorruption()>','<com.android.internal.widget.LockPatternView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.KeyboardView$SwipeTracker: void computeCurrentVelocity(int,float)>','<android.view.animation.AlphaAnimation: boolean willChangeBounds()>','<com.android.internal.telephony.IccRecords: void unregisterForNewSms(android.os.Handler)>','<android.accounts.AccountManager$6: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>','<android.view.ActionProvider: void setSubUiVisibilityListener(android.view.ActionProvider$SubUiVisibilityListener)>','<com.android.internal.telephony.gsm.GsmCall$1: void <clinit>()>','<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: int access$102(com.android.internal.telephony.gsm.UsimPhoneBookManager,int)>','<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>','<android.view.HardwareRenderer$GlRenderer: void <clinit>()>','<android.animation.KeyframeSet: void <init>(android.animation.Keyframe[])>','<android.os.StrictMode$Span: android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span)>','<android.view.Surface$CompatibleCanvas: int getWidth()>','<android.media.AudioService: java.lang.Object access$800(android.media.AudioService)>','<android.telephony.SmsCbLocation: boolean isInLocationArea(android.telephony.SmsCbLocation)>','<android.net.IConnectivityManager$Stub$Proxy: int setUsbTethering(boolean)>','<android.telephony.TelephonyManager: void <init>(android.content.Context)>','<com.android.server.wm.WindowManagerService: boolean stopViewServer()>','<com.android.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>','<android.webkit.SslClientCertLookupTable: boolean IsAllowed(java.lang.String)>','<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()>','<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>','<com.android.internal.util.AsyncChannel: android.os.Messenger access$502(com.android.internal.util.AsyncChannel,android.os.Messenger)>','<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>','<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>','<com.android.server.am.ActivityManagerService: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>','<android.text.method.MultiTapKeyListener$Timeout: android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable)>','<android.view.inputmethod.InputMethodManager: boolean startInputInner(android.os.IBinder,int,int,int)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>','<android.view.Display: android.view.IWindowManager getWindowManager()>','<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()>','<android.location.Address: int access$102(android.location.Address,int)>','<com.android.common.io.MoreCloseables: void closeQuietly(android.content.res.AssetFileDescriptor)>','<android.hardware.Sensor: int getMinDelay()>','<com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.cdma.CdmaMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.cdma.CDMAPhone)>','<android.net.sip.SipSessionAdapter: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<com.android.internal.util.FastXmlSerializer: void cdsect(java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine: int access$4000(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.server.sip.SipHelper: void sendCancel(javax.sip.ClientTransaction)>','<android.net.LocalSocketImpl$SocketInputStream: int read(byte[])>','<com.android.server.am.PendingIntentRecord: void completeFinalize()>','<com.android.server.pm.PackageSignatures: void <init>()>','<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)>','<android.content.SyncStorageEngine: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.app.IApplicationThread,android.content.pm.ApplicationInfo,java.lang.String,boolean)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>','<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchCount(java.lang.String)>','<android.animation.AnimatorSet$AnimatorSetListener: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet)>','<android.os.Parcel: void readIntArray(int[])>','<com.android.server.am.ActivityManagerService$5$1: void <init>(com.android.server.am.ActivityManagerService$5,android.app.Dialog)>','<android.graphics.drawable.LevelListDrawable$LevelListState: int indexOfLevel(int)>','<android.graphics.PointF: void <init>(android.graphics.Point)>','<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>','<android.text.style.QuoteSpan: int getColor()>','<android.app.ApplicationThreadNative: android.os.IBinder asBinder()>','<android.inputmethodservice.Keyboard$Key: void <clinit>()>','<android.view.ViewGroup$ChildListForAccessibility: android.view.View getChildAt(int)>','<com.android.server.NativeDaemonConnector$Command: com.android.server.NativeDaemonConnector$Command appendArg(java.lang.Object)>','<android.widget.AdapterViewAnimator: void configureViewAnimator(int,int)>','<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard$Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard$Row,int,int,android.content.res.XmlResourceParser)>','<android.graphics.drawable.TransitionDrawable: void <init>()>','<android.content.SyncInfo$1: android.content.SyncInfo createFromParcel(android.os.Parcel)>','<android.graphics.drawable.PaintDrawable: void <init>()>','<android.net.wifi.IWifiManager$Stub$Proxy: void clearBlacklist()>','<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>','<android.view.View$UnsetPressedState: void run()>','<com.android.internal.telephony.ServiceStateTracker: void <clinit>()>','<android.view.GLES20TextureLayer: void <init>(android.graphics.SurfaceTexture,boolean)>','<android.view.animation.Animation: void setFillEnabled(boolean)>','<com.android.server.wm.WindowManagerService: void performEnableScreen()>','<android.server.BluetoothService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>','<android.view.InputEventConsistencyVerifier: void reset()>','<com.android.server.pm.PackageSettingBase: boolean restoreComponentLPw(java.lang.String,int)>','<com.android.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.accounts.Account$1: void <init>()>','<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()>','<com.android.server.usb.UsbSettingsManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>','<com.android.server.wm.ViewServer: boolean stop()>','<android.webkit.WebSettings: boolean getNavDump()>','<com.android.internal.policy.impl.AccountUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>','<android.view.View: android.view.View findViewById(int)>','<android.renderscript.RenderScript: int nContextCreate(int,int,int)>','<android.view.InputDevice: int getId()>','<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>','<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,java.lang.String)>','<android.view.View: void onWindowFocusChanged(boolean)>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3200(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.app.IWallpaperManagerCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.TextView: void setEnabled(boolean)>','<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()>','<com.android.internal.app.AlertController: android.widget.Button access$200(com.android.internal.app.AlertController)>','<android.content.SyncStatusInfo$1: android.content.SyncStatusInfo[] newArray(int)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isMWIClearMessage()>','<android.view.InputDevice$MotionRange: float getRange()>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>','<android.text.AndroidBidi: void <init>()>','<android.media.effect.FilterEffect: void endGLEffect()>','<com.android.internal.telephony.gsm.GsmCall: boolean isFull()>','<android.os.StrictMode$ViolationInfo: void <init>()>','<android.net.InterfaceConfiguration: void setHardwareAddress(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: void readExternal(java.io.ObjectInput)>','<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.telephony.gsm.GsmCellLocation: int hashCode()>','<com.android.internal.telephony.AdnRecord: boolean isEmpty()>','<android.net.wifi.WifiNative: boolean p2pListen()>','<android.widget.AbsListView: void confirmCheckedPositionsById()>','<android.view.View$BaseSavedState$1: android.view.View$BaseSavedState[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaCallTracker: boolean isInEmergencyCall()>','<android.content.pm.ActivityInfo$1: android.content.pm.ActivityInfo createFromParcel(android.os.Parcel)>','<android.app.SearchableInfo: int describeContents()>','<android.os.Binder$1: void <init>(android.os.Binder,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.hardware.input.KeyboardLayout: java.lang.String toString()>','<android.net.wifi.IWifiManager$Stub$Proxy: void addToBlacklist(java.lang.String)>','<android.view.GLES20RecordingCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>','<com.android.internal.telephony.cat.CommandParams: com.android.internal.telephony.cat.AppInterface$CommandType getCommandType()>','<android.nfc.NfcActivityManager: void unregisterApplication(android.app.Application)>','<android.webkit.WebViewClassic: void savePassword(java.lang.String,java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic: void centerFitRect(android.graphics.Rect)>','<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>','<com.android.server.MountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>','<com.android.server.WifiService: boolean removeNetwork(int)>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>','<com.android.server.sip.SipService: void access$1300(com.android.server.sip.SipService,android.net.sip.SipProfile,int)>','<android.net.wifi.WifiInfo: void <init>(android.net.wifi.WifiInfo)>','<android.util.SparseIntArray: android.util.SparseIntArray clone()>','<android.widget.Editor$ErrorPopup: void <init>(android.widget.TextView,int,int)>','<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>','<android.speech.tts.TextToSpeech$Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.content.pm.Signature: boolean equals(java.lang.Object)>','<com.android.internal.telephony.DataConnectionTracker: void onSetInternalDataEnabled(boolean)>','<android.view.HardwareRenderer$GlRenderer: void <init>(int,boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: void startRingbackTone()>','<android.webkit.ZoomManager: void setInitialScaleInPercent(int)>','<android.webkit.WebViewCore: void geolocationPermissionsHidePrompt()>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: void <init>(android.os.IBinder)>','<android.hardware.usb.UsbRequest: boolean cancel()>','<com.android.server.wm.WindowManagerService: void setWallpaperOffset(com.android.server.wm.WindowStateAnimator,int,int)>','<android.animation.KeyframeSet: android.animation.KeyframeSet ofFloat(float[])>','<com.android.internal.telephony.gsm.GSMPhone: void notifyPreciseCallStateChanged()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$1: void onCancel(android.content.DialogInterface)>','<com.android.internal.telephony.RIL: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>','<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>','<com.android.internal.telephony.SmsStorageMonitor: void handleMessage(android.os.Message)>','<android.os.Parcel: int readInt()>','<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>','<android.database.sqlite.SQLiteDatabaseConfiguration: void <clinit>()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: int access$600(android.webkit.HTML5VideoViewProxy$PosterDownloader)>','<android.text.HtmlToSpannedConverter: void skippedEntity(java.lang.String)>','<android.os.Parcel: java.util.ArrayList createBinderArrayList()>','<android.graphics.Point: void readFromParcel(android.os.Parcel)>','<com.android.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.lang.String[])>','<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,boolean)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>','<android.widget.AbsListView$1: void run()>','<com.android.internal.telephony.PhoneBase: void unregisterForNewRingingConnection(android.os.Handler)>','<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void getCallWaiting(android.os.Message)>','<com.android.internal.telephony.CommandException$Error: void <clinit>()>','<android.location.Address: void clearLongitude()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>','<com.android.server.wm.WindowState: void attach()>','<com.android.internal.util.TypedProperties$ParseException: void <init>(java.io.StreamTokenizer,java.lang.String)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean onTrySetupData(com.android.internal.telephony.ApnContext)>','<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>','<android.content.ContentProviderOperation: void <clinit>()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.BaseCommands: void setOnUSSD(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.SmsUsageMonitor: boolean check(java.lang.String,int)>','<com.android.server.WallpaperManagerService: void attachServiceLocked(com.android.server.WallpaperManagerService$WallpaperConnection,com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection$1: void <init>(com.android.internal.telephony.WapPushOverSms$WapPushConnection,android.content.ServiceConnection)>','<android.net.wifi.WifiStateMachine$SupplicantStoppingState: void enter()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel access$500(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin$2: void run()>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void enter()>','<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentProvider: java.lang.String getReadPermission()>','<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>','<com.android.server.wm.WindowManagerService: void access$800(com.android.server.wm.WindowManagerService)>','<android.widget.TextView$Marquee: boolean shouldDrawGhost()>','<android.view.IApplicationToken$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>','<android.webkit.WebSyncManager: void startSync()>','<com.android.internal.statusbar.StatusBarNotification$1: com.android.internal.statusbar.StatusBarNotification[] newArray(int)>','<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>','<com.android.internal.os.storage.ExternalStorageFormatter: void onCancel(android.content.DialogInterface)>','<android.app.ContextImpl: java.io.File getCacheDir()>','<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void <clinit>()>','<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>','<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>','<android.widget.OverScroller$SplineOverScroller: void startScroll(int,int,int)>','<android.animation.LayoutTransition: boolean isTransitionTypeEnabled(int)>','<android.widget.RelativeLayout: android.widget.RelativeLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.app.ContextImpl$ServiceFetcher: void <init>()>','<android.app.ContextImpl: void startActivities(android.content.Intent[],android.os.Bundle)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: boolean isTethered()>','<android.provider.Browser: void <clinit>()>','<android.content.SyncStorageEngine: void setDelayUntilTime(android.accounts.Account,int,java.lang.String,long)>','<com.android.server.wm.Session: void wallpaperOffsetsComplete(android.os.IBinder)>','<android.location.Location: void removeSpeed()>','<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>','<android.renderscript.RenderScript: void nScriptInvokeV(int,int,byte[])>','<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.os.StatFs: void restat(java.lang.String)>','<android.graphics.drawable.NinePatchDrawable$NinePatchState: void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState)>','<android.graphics.drawable.LayerDrawable: void setDither(boolean)>','<com.android.server.wm.WindowManagerService: boolean dumpWindows(java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLetters(android.content.ComponentName)>','<com.android.server.NsdService: boolean access$1000(com.android.server.NsdService)>','<android.preference.Preference: java.lang.String toString()>','<android.content.SyncStats: void clear()>','<android.webkit.WebSyncManager$SyncHandler: void <init>(android.webkit.WebSyncManager,android.webkit.WebSyncManager$1)>','<android.hardware.Camera$Parameters: java.lang.String flatten()>','<android.view.GLES20Layer: void flush()>','<android.net.wifi.WifiMonitor: int access$302(android.net.wifi.WifiMonitor,int)>','<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>','<android.widget.AbsListView$ListItemAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()>','<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>','<android.net.Uri$PathSegmentsBuilder: void add(java.lang.String)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setAlpha(int)>','<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>','<com.android.internal.telephony.sip.SipPhone: boolean equals(com.android.internal.telephony.sip.SipPhone)>','<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>','<android.view.GestureDetector$SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>','<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>','<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onClockVisibilityChanged()>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray$1: void <init>()>','<android.view.View: void setLongClickable(boolean)>','<android.database.sqlite.SQLiteConnectionPool: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>','<android.webkit.WebViewDatabaseClassic: void setFormData(java.lang.String,java.util.HashMap)>','<com.android.server.am.ActivityManagerService: void checkExcessivePowerUsageLocked(boolean)>','<android.os.Message$1: android.os.Message[] newArray(int)>','<android.webkit.CacheManager$1: void <init>()>','<android.app.ApplicationPackageManager: void <init>(android.app.ContextImpl,android.content.pm.IPackageManager)>','<android.os.BatteryStats$Uid$Wakelock: void <init>()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void handleMessage(android.os.Message)>','<android.net.wifi.IWifiManager$Stub$Proxy: void setFrequencyBand(int,boolean)>','<android.hardware.usb.UsbAccessory: int hashCode()>','<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallBusy(android.net.sip.SipAudioCall)>','<android.view.View: int getActualAndReportedWindowTopDelta()>','<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()>','<android.graphics.RectF: void <init>(android.graphics.Rect)>','<com.android.server.PowerManagerService$TimeoutTask: void <init>(com.android.server.PowerManagerService,com.android.server.PowerManagerService$1)>','<android.widget.ArrayAdapter: java.lang.Object access$200(android.widget.ArrayAdapter)>','<com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService[] values()>','<android.preference.Preference$BaseSavedState: void <init>(android.os.Parcel)>','<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>','<android.app.FragmentManagerImpl$6: void <init>(android.app.FragmentManagerImpl,android.app.Fragment)>','<android.content.SyncManager$8: void onServiceChanged(java.lang.Object,boolean)>','<android.media.AudioService: int getStreamMaxVolume(int)>','<com.android.server.PowerManagerService: void acquireWakeLockLocked(int,android.os.IBinder,int,int,java.lang.String,android.os.WorkSource)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void <init>(com.android.internal.policy.impl.KeyguardStatusViewManager)>','<android.view.GLES20RecordingCanvas: void drawLines(float[],int,int,android.graphics.Paint)>','<android.content.pm.ParceledListSlice$1: android.content.pm.ParceledListSlice createFromParcel(android.os.Parcel)>','<android.os.StrictMode$ThreadSpanState: void <init>(android.os.StrictMode$1)>','<com.android.internal.telephony.BaseCommands: void unregisterForNumberInfo(android.os.Handler)>','<com.android.internal.policy.impl.PhoneWindowManager: int getNonDecorDisplayHeight(int,int,int)>','<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>','<android.view.View: boolean showContextMenu(float,float,int)>','<android.location.ICountryDetector$Stub: void <init>()>','<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>','<android.view.GLES20RecordingCanvas: void <init>(android.view.GLES20RecordingCanvas$1)>','<com.android.internal.widget.ScrollingTabContainerView$TabView: void <init>(com.android.internal.widget.ScrollingTabContainerView,android.content.Context,android.app.ActionBar$Tab,boolean)>','<android.net.wifi.WifiManager: int access$310(android.net.wifi.WifiManager)>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceRemoved(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: int access$4800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>','<android.view.IWindowManager$Stub$Proxy: void setStrictModeVisualIndicatorPreference(java.lang.String)>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiInfo syncRequestConnectionInfo()>','<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.BaseCommands: void unregisterForVoiceNetworkStateChanged(android.os.Handler)>','<android.view.FocusFinder: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<android.content.SyncStorageEngine$AccountInfo: void <init>(android.accounts.AccountAndUser)>','<com.android.server.am.ActivityStack: boolean switchUser(int)>','<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>','<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>','<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()>','<android.appwidget.AppWidgetManager: void unbindRemoteViewsService(int,android.content.Intent)>','<android.app.Fragment: void onCreate(android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void loge(java.lang.String)>','<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>','<android.view.View: int getAccessibilityFocusable()>','<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.net.http.AndroidHttpClientConnection: int getRemotePort()>','<android.widget.Scroller: void forceFinished(boolean)>','<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String)>','<android.webkit.JWebCoreJavaBridge: void storeFilePathForContentUri(java.lang.String,java.lang.String)>','<com.android.server.am.ReceiverList: int hashCode()>','<com.android.internal.telephony.PhoneProxy: void unregisterForLineControlInfo(android.os.Handler)>','<android.nfc.INdefPushCallback$Stub: void <init>()>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void cancelAnimation()>','<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>','<com.android.internal.os.BatteryStatsImpl: int describeContents()>','<android.graphics.PathEffect: void finalize()>','<com.android.internal.os.BatteryStatsImpl$KernelWakelockStats: void <init>(com.android.internal.os.BatteryStatsImpl,int,long,int)>','<android.view.Surface: void <init>(android.os.Parcel,android.view.Surface$1)>','<android.net.Uri$Part: android.net.Uri$Part fromEncoded(java.lang.String)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setContentDescription(int)>','<android.os.INetworkManagementService$Stub$Proxy: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>','<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>','<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>','<android.content.SyncManager$5: void <init>(android.content.SyncManager)>','<android.content.ContentProviderOperation$1: android.content.ContentProviderOperation createFromParcel(android.os.Parcel)>','<android.provider.ContactsContract$CommonDataKinds$Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<com.android.internal.telephony.gsm.GsmCallTracker: void finalize()>','<android.widget.AbsSpinner$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.app.IActivityManager$WaitResult$1: android.app.IActivityManager$WaitResult createFromParcel(android.os.Parcel)>','<com.android.internal.util.StateMachine: void transitionTo(com.android.internal.util.IState)>','<android.widget.ProgressBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.telephony.DataConnection: boolean isRetryForever()>','<com.android.server.AppWidgetService: void deleteHost(int)>','<com.android.server.pm.PackageManagerService: int checkPermission(java.lang.String,java.lang.String)>','<android.emoji.EmojiFactory$CustomLinkedHashMap: boolean removeEldestEntry(java.util.Map$Entry)>','<com.android.server.location.GpsLocationProvider: void <init>(android.content.Context,android.location.ILocationManager)>','<com.android.internal.telephony.sip.SipPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>','<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: void draw(android.graphics.Canvas)>','<com.android.internal.policy.impl.PatternUnlockScreen: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>','<android.content.Intent$ShortcutIconResource$1: android.content.Intent$ShortcutIconResource createFromParcel(android.os.Parcel)>','<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>','<android.widget.Scroller: void setFinalX(int)>','<android.view.ViewRootImpl$W: void dispatchDragEvent(android.view.DragEvent)>','<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>','<com.android.server.MountService: void access$2500(com.android.server.MountService)>','<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>','<android.view.GLES20TextureLayer: void <init>(boolean)>','<android.webkit.WebCoreThreadWatchdog: void registerWebView(android.webkit.WebViewClassic)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector index(int)>','<com.android.server.MountService: com.android.internal.app.IMediaContainerService access$1902(com.android.server.MountService,com.android.internal.app.IMediaContainerService)>','<android.widget.Editor$EasyEditPopupWindow: void initContentView()>','<android.filterfw.core.Filter: void performClose(android.filterfw.core.FilterContext)>','<android.location.Criteria: int access$002(android.location.Criteria,int)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: float getAlpha()>','<com.android.internal.util.StateMachine: void setInitialState(com.android.internal.util.State)>','<android.hardware.Camera$Parameters: boolean isZoomSupported()>','<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.media.IRemoteVolumeObserver$Stub: android.os.IBinder asBinder()>','<android.view.animation.ScaleAnimation: float resolveScale(float,int,int,int,int)>','<android.text.method.MultiTapKeyListener: void <clinit>()>','<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int,int,int)>','<android.os.IPowerManager$Stub$Proxy: boolean isScreenOn()>','<android.accounts.AuthenticatorDescription$1: android.accounts.AuthenticatorDescription[] newArray(int)>','<android.webkit.HTML5VideoViewProxy: void access$1100(android.webkit.HTML5VideoViewProxy,android.graphics.Bitmap,int)>','<android.database.AbstractCursor: void onChange(boolean)>','<android.view.MotionEvent: float getHistoricalPressure(int,int)>','<android.media.IRemoteControlDisplay$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Activity: java.lang.CharSequence getTitle()>','<android.media.AudioManager: android.media.AudioManager$OnAudioFocusChangeListener access$100(android.media.AudioManager,java.lang.String)>','<android.content.ClipData: void <clinit>()>','<android.widget.PopupWindow$1: void <init>(android.widget.PopupWindow)>','<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)>','<android.widget.TextView: int getMaxWidth()>','<android.net.wifi.WifiWatchdogStateMachine: void access$2800(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>','<android.graphics.Region$Op: void <clinit>()>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean commitText(java.lang.CharSequence,int)>','<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>','<com.android.server.pm.PackageManagerService: void removePermission(java.lang.String)>','<android.app.IActivityController$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.pm.PackageParser$ParsePackageItemArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int)>','<android.app.WallpaperManager$Globals: android.graphics.Bitmap access$002(android.app.WallpaperManager$Globals,android.graphics.Bitmap)>','<android.content.IntentFilter: void <clinit>()>','<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>','<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[])>','<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>','<android.webkit.WebView: int computeVerticalScrollExtent()>','<android.graphics.DashPathEffect: void <init>(float[],float)>','<android.renderscript.Element: android.renderscript.Element FONT(android.renderscript.RenderScript)>','<android.app.Activity: void setTitle(int)>','<android.telephony.SmsCbEtwsInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setAlpha(float)>','<android.view.VolumePanel: void <init>(android.content.Context,android.media.AudioService)>','<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>','<android.hardware.SystemSensorManager: void <clinit>()>','<com.android.internal.telephony.AdnRecord: boolean isEqual(com.android.internal.telephony.AdnRecord)>','<com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>','<android.webkit.PluginFullScreenHolder: android.view.View access$200(android.webkit.PluginFullScreenHolder)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommOn(int)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>','<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>','<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>','<android.webkit.WebViewClassic: boolean access$6600(android.webkit.WebViewClassic)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)>','<android.filterfw.core.GLEnvironment: int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)>','<android.app.Activity: void setResult(int)>','<android.media.RemoteControlClient: android.media.RemoteControlClient$EventHandler access$1300(android.media.RemoteControlClient)>','<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager)>','<android.net.IConnectivityManager$Stub$Proxy: boolean isTetheringSupported()>','<android.net.wifi.WifiStateMachine: void access$8000(android.net.wifi.WifiStateMachine)>','<com.android.server.TelephonyRegistry: void notifyCellInfo(android.telephony.CellInfo)>','<android.content.res.ColorStateList: boolean isStateful()>','<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>','<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<com.android.internal.os.BatteryStatsImpl: void addHistoryRecordLocked(android.os.BatteryStats$HistoryItem)>','<android.widget.AbsListView: boolean isInFilterMode()>','<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<android.preference.Preference: void setDependency(java.lang.String)>','<android.webkit.WebViewClassic: int viewToContentX(int)>','<android.view.View: int getMeasuredWidthAndState()>','<android.widget.TextView: int getHighlightColor()>','<android.content.res.AssetManager: android.content.res.XmlBlock openXmlBlockAsset(java.lang.String)>','<android.filterfw.core.SerializedFrame$DirectByteOutputStream: int getSize()>','<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.NsdService$NsdStateMachine$DisabledState: void enter()>','<android.app.AlarmManager: void cancel(android.app.PendingIntent)>','<android.view.View: void resolvePadding()>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>','<com.android.server.am.ActivityStack: void activitySleptLocked(com.android.server.am.ActivityRecord)>','<android.webkit.SearchBox$SearchBoxListener: void onResizeComplete(boolean)>','<com.android.internal.telephony.PhoneBase: void unregisterForSubscriptionInfoReady(android.os.Handler)>','<android.content.pm.IPackageManager$Stub$Proxy: void freeStorage(long,android.content.IntentSender)>','<android.os.ResultReceiver$1: android.os.ResultReceiver[] newArray(int)>','<com.android.server.net.NetworkPolicyManagerService: void systemReady()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCustomTitle(android.view.View)>','<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>','<com.android.server.sip.SipService$IntervalMeasurementProcess: void onResponse(boolean)>','<android.database.AbstractCursor: boolean moveToLast()>','<com.android.internal.telephony.RetryManager: void <init>()>','<android.widget.Editor: android.graphics.Rect access$1902(android.widget.Editor,android.graphics.Rect)>','<com.android.internal.policy.impl.FaceUnlock: boolean start()>','<android.widget.LinearLayout: int getOrientation()>','<android.bluetooth.IBluetoothCallback$Stub: android.bluetooth.IBluetoothCallback asInterface(android.os.IBinder)>','<android.widget.TextView: void setText(java.lang.CharSequence)>','<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>','<android.util.NtpTrustedTime: long getCachedNtpTimeReference()>','<android.widget.MediaController: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.widget.AbsListView$SavedState$1: void <init>()>','<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String)>','<android.graphics.Bitmap: void <init>(int,byte[],boolean,byte[],int[],int)>','<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getCarrierName(java.lang.String)>','<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitNetwork()>','<android.view.IWindowManager$Stub$Proxy: int getRotation()>','<com.android.server.am.ProcessRecord: void setPid(int)>','<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>','<android.net.sip.SipAudioCall: void makeCall(android.net.sip.SipProfile,android.net.sip.SipSession,int)>','<android.widget.TextView$CharWrapper: float measureText(int,int,android.graphics.Paint)>','<com.android.internal.widget.LockPatternUtils: boolean checkPassword(java.lang.String)>','<android.webkit.WebViewInputDispatcher: void dispatchWebKitEvents()>','<android.webkit.BrowserFrame: void access$000(android.webkit.BrowserFrame,int,java.lang.String,java.lang.String)>','<android.filterfw.core.NativeBuffer: void <init>()>','<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>','<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>','<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener access$702(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)>','<android.text.SpannableStringInternal: int length()>','<android.accounts.AccountManager$AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>','<com.android.server.pm.PackageManagerService: boolean addPermissionAsync(android.content.pm.PermissionInfo)>','<com.android.internal.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.server.MountService$ObbState: java.lang.String toString()>','<com.android.server.Watchdog: void checkReboot(boolean)>','<android.bluetooth.BluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>','<android.provider.SyncStateContract$Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>','<android.webkit.WebViewClassic: void access$3300(android.webkit.WebViewClassic,int,int)>','<com.android.server.usb.UsbSettingsManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>','<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent)>','<android.app.ActivityOptions: int getStartX()>','<android.webkit.WebSettings: boolean supportMultipleWindows()>','<android.text.style.SuggestionSpan: void <init>(java.util.Locale,java.lang.String[],int)>','<com.android.server.wm.WindowStateAnimator: void clearAnimation()>','<com.android.server.wm.WindowManagerService: void saveLastInputMethodWindowForTransition()>','<android.app.ActivityGroup: void onStop()>','<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>','<android.app.ActivityManager$RunningTaskInfo: int describeContents()>','<com.android.server.PowerManagerService$1: void <init>(com.android.server.PowerManagerService,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: void setAppPolicy(int,int)>','<android.preference.Preference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()>','<android.widget.LinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>','<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>','<android.net.sip.SipSession: void <init>(android.net.sip.ISipSession)>','<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>','<android.database.sqlite.SQLiteAbortException: void <init>()>','<android.app.IProcessObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.HashMap access$900(com.android.server.pm.PackageManagerService$ServiceIntentResolver)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: int access$1100(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>','<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Point: java.lang.String toString()>','<com.android.server.DeviceStorageMonitorService$1: void handleMessage(android.os.Message)>','<com.android.vcard.VCardParser_V30: void parseOne(java.io.InputStream)>','<com.android.internal.telephony.gsm.GsmCallTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>','<com.android.internal.policy.impl.KeyguardViewManager$1: void run()>','<com.android.internal.widget.multiwaveview.GlowPadView: boolean access$802(com.android.internal.widget.multiwaveview.GlowPadView,boolean)>','<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>','<android.provider.BrowserContract$Combined: void <clinit>()>','<android.widget.RemoteViews$ViewPaddingAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>','<com.android.server.input.InputManagerService: void start()>','<com.android.server.am.BatteryStatsService: void noteScreenBrightness(int)>','<android.webkit.CacheManager: boolean cacheDisabled()>','<com.android.internal.telephony.PhoneProxy: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>','<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>','<android.filterfw.core.FilterContext: void initGLEnvironment(android.filterfw.core.GLEnvironment)>','<android.server.BluetoothHealthProfileHandler: java.lang.String access$100(android.server.BluetoothHealthProfileHandler,int)>','<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>','<com.android.internal.util.HexDump: java.lang.String toHexString(byte)>','<com.android.server.am.ActivityManagerService: void performServiceRestartLocked(com.android.server.am.ServiceRecord)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean hasSystemNavBar()>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryInstrumentation(java.lang.String,int)>','<android.nfc.NfcActivityManager: void <clinit>()>','<com.android.server.location.MockProvider: void clearStatus()>','<android.net.wifi.WifiStateMachine: void setScanType(boolean)>','<android.content.pm.UserInfo: boolean isAdmin()>','<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.content.SyncStorageEngine$AuthorityInfo: void <init>(android.accounts.Account,int,java.lang.String,int)>','<android.webkit.WebViewCore: void access$3100(android.webkit.WebViewCore,int)>','<android.filterfw.core.NativeFrame: void setFloats(float[])>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>','<android.provider.Telephony$Carriers: void <clinit>()>','<com.android.internal.telephony.cat.PresentationType: com.android.internal.telephony.cat.PresentationType valueOf(java.lang.String)>','<com.android.server.wm.Session: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>','<android.view.GLES20Layer: void update(int,int,boolean)>','<android.widget.ImageView: void setCropToPadding(boolean)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void explicitCallTransfer()>','<android.app.Service: void onCreate()>','<com.android.internal.os.AtomicFile: void truncate()>','<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>','<android.view.ViewGroup: void invalidateChildFast(android.view.View,android.graphics.Rect)>','<com.android.server.location.LocationBasedCountryDetector$3: void <init>(com.android.server.location.LocationBasedCountryDetector,android.location.Location)>','<android.webkit.PluginManager: java.lang.Class getPluginClass(java.lang.String,java.lang.String)>','<android.inputmethodservice.Keyboard$Row: android.inputmethodservice.Keyboard access$600(android.inputmethodservice.Keyboard$Row)>','<android.media.MediaRouter$RouteGroup: void <init>(android.media.MediaRouter$RouteCategory)>','<android.view.textservice.SuggestionsInfo: int getSequence()>','<android.net.wifi.WifiStateMachine$DriverUnloadingState: void enter()>','<android.widget.SpellChecker$SpellParser: void parse(int,int)>','<android.media.RemoteControlClient$1: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.content.res.XmlBlock$Parser: java.lang.String nextText()>','<android.os.Trace$1: void run()>','<android.animation.LayoutTransition: void enableTransitionType(int)>','<android.widget.SearchView: android.app.SearchableInfo access$1400(android.widget.SearchView)>','<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>','<android.nfc.NfcActivityManager$NfcApplicationState: void register()>','<com.android.server.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int)>','<android.view.GLES20Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>','<com.android.internal.telephony.sip.SipPhone: void getNeighboringCids(android.os.Message)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>','<com.android.internal.widget.ActionBarContainer: void <init>(android.content.Context)>','<android.filterfw.core.NativeFrame: int[] getInts()>','<android.media.MediaRouter$Static: void updateRoutes(android.media.AudioRoutesInfo)>','<com.android.internal.telephony.DataConnection: void access$900(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$DisconnectParams,boolean)>','<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStack: void activityStoppedLocked(com.android.server.am.ActivityRecord,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)>','<com.android.server.sip.SipService$ConnectivityReceiver: void <init>(com.android.server.sip.SipService,com.android.server.sip.SipService$1)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void endData()>','<com.android.server.wm.ScreenRotationAnimation: void printTo(java.lang.String,java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String)>','<android.content.ContentProviderOperation$Builder: android.content.ContentValues access$700(android.content.ContentProviderOperation$Builder)>','<com.android.server.usb.UsbSettingsManager: boolean hasPermission(android.hardware.usb.UsbDevice)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$7700(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>','<android.widget.ProgressBar: void onProgressRefresh(float,boolean)>','<android.appwidget.AppWidgetProviderInfo: int describeContents()>','<android.app.ContextImpl$7: void <init>()>','<com.android.internal.policy.impl.SimPukUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$300(com.android.internal.policy.impl.SimPukUnlockScreen)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$ApnChangeObserver: void onChange(boolean)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyOtaspChanged(int)>','<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>','<android.opengl.GLLogWrapper: void glFogfv(int,java.nio.FloatBuffer)>','<android.os.AsyncTask$Status: android.os.AsyncTask$Status valueOf(java.lang.String)>','<android.app.ActivityThread: void performNewIntents(android.os.IBinder,java.util.List)>','<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.webkit.AccessibilityInjectorFallback: void <clinit>()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>','<android.app.Activity: void finish()>','<android.provider.Browser: void clearSearches(android.content.ContentResolver)>','<android.view.animation.Animation: void setStartTime(long)>','<android.media.AudioService$RcClientDeathHandler: android.os.IBinder access$8200(android.media.AudioService$RcClientDeathHandler)>','<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>','<android.net.wifi.p2p.WifiP2pDevice$1: android.net.wifi.p2p.WifiP2pDevice[] newArray(int)>','<android.text.Layout: void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt)>','<android.webkit.WebViewClassic: void updateMultiTouchSupport(android.content.Context)>','<android.widget.SearchView: boolean access$1900(android.widget.SearchView,int)>','<android.speech.tts.TextToSpeech$Connection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.internal.telephony.sip.SipPhoneBase: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: void <init>()>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>','<com.android.server.NotificationManagerService: void access$500(com.android.server.NotificationManagerService,java.lang.String,java.lang.String,int,int,int,boolean)>','<com.android.server.sip.SipSessionGroup: com.android.server.sip.SipSessionGroup$SipSessionImpl access$400(com.android.server.sip.SipSessionGroup,javax.sip.RequestEvent,android.net.sip.ISipSessionListener,javax.sip.ServerTransaction,int)>','<android.server.BluetoothPanProfileHandler$1: void onReceive(android.content.Context,android.content.Intent)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: int playSilence(android.os.IBinder,long,int,android.os.Bundle)>','<android.accounts.AccountAuthenticatorCache: void <init>(android.content.Context)>','<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$400(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.media.RingtoneManager: void <init>(android.app.Activity)>','<com.android.server.pm.PackageManagerService$HandlerParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<com.android.internal.telephony.SmsStorageMonitor$1: void onReceive(android.content.Context,android.content.Intent)>','<android.database.CursorWindow: short getShort(int,int)>','<android.webkit.WebViewClassic: void access$7000(android.webkit.WebViewClassic)>','<android.content.pm.IPackageDeleteObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt valueOf(java.lang.String)>','<android.app.Activity: void setFinishOnTouchOutside(boolean)>','<com.android.internal.telephony.sip.SipPhone: int getPhoneType()>','<android.media.Metadata: int lastType()>','<android.webkit.BrowserFrame: void handleMessage(android.os.Message)>','<android.net.NetworkQuotaInfo: int describeContents()>','<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>','<android.hardware.Camera$Parameters: boolean isSmoothZoomSupported()>','<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>','<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>','<android.content.pm.IPackageManager$Stub$Proxy: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>','<android.view.IWindow$Stub$Proxy: void doneAnimating()>','<android.provider.MediaStore$Audio$Genres: void <init>()>','<android.webkit.WebViewClassic$FocusTransitionDrawable: void setAlpha(int)>','<com.android.internal.app.ActionBarImpl: boolean isShowing()>','<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void setCallWaiting(boolean,android.os.Message)>','<android.text.style.SuggestionSpan: int describeContents()>','<android.graphics.Bitmap$1: android.graphics.Bitmap createFromParcel(android.os.Parcel)>','<com.android.server.am.BatteryStatsService$1: void onServiceDisconnected(int)>','<android.net.arp.ArpPeer: void close()>','<android.net.sip.SipAudioCall: android.net.sip.SipSession access$600(android.net.sip.SipAudioCall)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getStarts(int)>','<android.app.IAlarmManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>','<android.view.ViewRootImpl: android.view.View findViewToTakeAccessibilityFocusFromHover(android.view.View,android.view.View)>','<android.util.MathUtils: float max(float,float,float)>','<android.bluetooth.BluetoothDeviceProfileState$1: void onReceive(android.content.Context,android.content.Intent)>','<android.nfc.INdefPushCallback$Stub: android.nfc.INdefPushCallback asInterface(android.os.IBinder)>','<android.view.MotionEvent: float getTouchMinor()>','<android.content.pm.ContainerEncryptionParams$1: android.content.pm.ContainerEncryptionParams[] newArray(int)>','<android.net.IThrottleManager$Stub$Proxy: int getThrottle(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager$11: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>','<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>','<android.widget.Editor$PinnedPopupWindow: void updatePosition(int,int,boolean,boolean)>','<android.accounts.AccountManager$AmsTask: void access$500(android.accounts.AccountManager$AmsTask,java.lang.Throwable)>','<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>','<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>','<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator$AnimatorUpdateListener)>','<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>','<com.android.internal.widget.DigitalClock: void onAttachedToWindow()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalAlertBytes(long)>','<com.android.internal.telephony.cdma.CdmaConnection: void cancelPostDial()>','<android.app.WallpaperInfo: java.lang.String toString()>','<android.preference.Preference: int compareTo(android.preference.Preference)>','<android.inputmethodservice.KeyboardView$SwipeTracker: float getXVelocity()>','<com.android.internal.os.BatteryStatsImpl: long getBluetoothOnTime(long,int)>','<android.media.AudioManager: void setMode(int)>','<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>','<android.net.wifi.NetworkUpdateResult: void <init>(boolean,boolean)>','<android.server.BluetoothAdapterStateMachine: boolean access$2902(android.server.BluetoothAdapterStateMachine,boolean)>','<android.renderscript.RenderScript: void nScriptSetVarVE(int,int,byte[],int,int[])>','<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>','<android.view.MotionEvent: float getToolMinor(int)>','<com.android.internal.telephony.DataConnectionAc: android.net.LinkProperties rspLinkProperties(android.os.Message)>','<android.filterfw.core.FrameFormat: void <init>()>','<android.telephony.ServiceState: int describeContents()>','<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>','<com.android.internal.telephony.sip.SipCommandInterface: void changeIccPin2(java.lang.String,java.lang.String,android.os.Message)>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>','<android.server.BluetoothService: boolean enable(boolean,boolean)>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>','<android.content.Intent: void removeExtra(java.lang.String)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void updateResources()>','<android.net.http.Request: void readResponse(android.net.http.AndroidHttpClientConnection)>','<com.android.server.PowerManagerService$8: void run()>','<android.text.style.SuggestionRangeSpan: int describeContents()>','<android.animation.ValueAnimator: int getRepeatMode()>','<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>','<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>','<com.android.internal.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)>','<android.webkit.WebSettingsClassic: void setUseDoubleTree(boolean)>','<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>','<com.android.server.location.PassiveProvider: boolean meetsCriteria(android.location.Criteria)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: int getFailedAttempts()>','<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>','<android.location.Address: void setSubThoroughfare(java.lang.String)>','<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.server.wm.WindowManagerService: void setAnimationScale(int,float)>','<android.os.ConditionVariable: void <init>()>','<android.media.effect.EffectContext: void restoreGLState()>','<android.webkit.DeviceMotionService: android.webkit.DeviceMotionAndOrientationManager access$100(android.webkit.DeviceMotionService)>','<android.webkit.WebIconDatabaseClassic: void removeAllIcons()>','<com.android.internal.telephony.IccServiceTable: java.lang.String toString()>','<com.android.server.NsdService$NsdStateMachine$EnabledState: boolean processMessage(android.os.Message)>','<com.android.server.WallpaperManagerService: void clearWallpaperLocked(boolean,int)>','<android.media.AudioService: void access$6300(android.media.AudioService)>','<android.graphics.Region: int ni()>','<android.view.Surface: android.content.res.CompatibilityInfo$Translator access$100(android.view.Surface)>','<com.android.internal.telephony.IccCard: boolean access$500(com.android.internal.telephony.IccCard)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void enter()>','<android.view.View: void setTagInternal(int,java.lang.Object)>','<android.widget.SpellChecker: void <clinit>()>','<android.view.IWindowSession$Stub$Proxy: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData getMetaDataAt(int)>','<android.filterpacks.imageproc.RedEyeFilter: void process(android.filterfw.core.FilterContext)>','<com.android.internal.widget.SlidingTab: void onMeasure(int,int)>','<com.android.internal.telephony.sip.SipPhone: void <init>(android.content.Context,com.android.internal.telephony.PhoneNotifier,android.net.sip.SipProfile)>','<android.net.wifi.WifiStateMachine: void access$700(android.net.wifi.WifiStateMachine,android.os.Message,int,int)>','<android.graphics.drawable.LayerDrawable: boolean isStateful()>','<android.app.Instrumentation: void startAllocCounting()>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void doWork()>','<android.app.Notification: void writeToParcel(android.os.Parcel,int)>','<android.view.View: int getResolvedTextDirection()>','<com.android.internal.policy.impl.LockScreen: android.content.Context access$1100(com.android.internal.policy.impl.LockScreen)>','<com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String)>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>','<android.net.NetworkTemplate$1: void <init>()>','<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>','<android.bluetooth.BluetoothHeadset$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>','<com.android.server.PowerManagerService: void access$1800(com.android.server.PowerManagerService)>','<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager$RegistrationListener)>','<android.widget.RemoteViews$ViewGroupAction: void writeToParcel(android.os.Parcel,int)>','<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>','<android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>','<android.text.method.BaseMovementMethod: boolean scrollLineStart(android.widget.TextView,android.text.Spannable)>','<android.media.IAudioService$Stub$Proxy: void adjustMasterVolume(int,int)>','<android.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>','<com.android.server.pm.PackageManagerService: java.lang.String getTempContainerId()>','<com.android.server.PowerManagerService$LockList: void addLock(com.android.server.PowerManagerService$WakeLock)>','<com.android.internal.widget.multiwaveview.TargetDrawable: boolean isEnabled()>','<android.widget.AbsSpinner: android.view.View getSelectedView()>','<android.text.Layout: float getLineWidth(int)>','<com.android.server.sip.SipSessionGroup: android.net.sip.ISipSession createSession(android.net.sip.ISipSessionListener)>','<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>','<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>','<android.view.ViewRootImpl$RunQueue: void executeActions(android.os.Handler)>','<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>','<com.android.server.am.ActivityManagerService$ForegroundToken: void <init>(com.android.server.am.ActivityManagerService)>','<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>','<com.android.server.am.BatteryStatsService$1: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.app.ActivityManagerProxy: boolean switchUser(int)>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>','<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.sip.SipPhone$SipCall access$900(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder: void <init>()>','<android.view.HardwareRenderer$GlRenderer$FunctorsRunnable: void run()>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(com.android.server.AlarmManagerService$Alarm,com.android.server.AlarmManagerService$Alarm)>','<android.filterfw.core.FrameFormat: int getTarget()>','<android.location.Criteria: void <init>(android.location.Criteria)>','<android.view.IWindowSession$Stub$Proxy: void wallpaperOffsetsComplete(android.os.IBinder)>','<com.android.server.StatusBarManagerService: void onClearAllNotifications()>','<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()>','<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context,com.android.server.usb.UsbSettingsManager)>','<com.android.internal.os.BatteryStatsImpl$Uid: int getUserActivityCount(int,int)>','<com.android.server.sip.SipWakeLock: void acquire(long)>','<com.android.internal.widget.EditableInputConnection: boolean performEditorAction(int)>','<android.media.AudioService$ScoClient: int getPid()>','<android.location.Address: void <clinit>()>','<com.android.internal.statusbar.StatusBarNotification: int describeContents()>','<android.content.res.Resources$Theme: void applyStyle(int,boolean)>','<com.android.internal.widget.LockPatternView$Cell: com.android.internal.widget.LockPatternView$Cell of(int,int)>','<com.android.server.input.InputManagerService: void setInputFilter(com.android.server.input.InputFilter)>','<android.app.Application: void attach(android.content.Context)>','<android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)>','<com.android.server.pm.PackageSignatures: void <init>(android.content.pm.Signature[])>','<com.android.internal.os.BatteryStatsImpl: void noteVideoOnLocked(int)>','<android.os.Debug: int getGlobalExternalFreedCount()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void fetchSimRecords()>','<android.view.ViewRootImpl: void detachFunctor(int)>','<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.view.IInputMethodCallback$Stub: com.android.internal.view.IInputMethodCallback asInterface(android.os.IBinder)>','<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>','<com.android.server.wm.DimAnimator: void updateParameters(android.content.res.Resources,com.android.server.wm.DimAnimator$Parameters,long)>','<android.content.IContentService$Stub$Proxy: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>','<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<android.media.AudioService: void <clinit>()>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>','<android.accounts.AccountManagerService$3: void run()>','<android.view.KeyEvent: boolean isMetaPressed()>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquired(int)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void notifyAppWidgetViewDataChanged(int[],int)>','<com.android.internal.policy.impl.SimPukUnlockScreen: void cleanUp()>','<android.location.Location: double access$202(android.location.Location,double)>','<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>','<android.os.Binder: boolean pingBinder()>','<com.android.server.wm.WindowManagerService$WMThread: void <init>(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>','<android.graphics.Path: void incReserve(int)>','<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void stopDtmf(android.os.Message)>','<com.android.server.location.LocationBasedCountryDetector$3: void run()>','<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>','<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>','<com.android.server.NsdService: int access$1600(com.android.server.NsdService)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void setBandMode(int,android.os.Message)>','<com.android.server.pm.PackageManagerService: void <clinit>()>','<android.opengl.GLLogWrapper: void glMatrixMode(int)>','<com.android.ex.variablespeed.VariableSpeedNative: void loadLibrary()>','<android.text.style.SuggestionSpan$1: android.text.style.SuggestionSpan createFromParcel(android.os.Parcel)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager$1: int compare(java.lang.Object,java.lang.Object)>','<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.ViewRootImpl: void requestChildFocus(android.view.View,android.view.View)>','<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>','<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnectionAc getDataConnectionAc()>','<android.opengl.GLLogWrapper: void glGenTextures(int,int[],int)>','<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>','<android.bluetooth.BluetoothServerSocket: void setCloseHandler(android.os.Handler,int)>','<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebView$PrivateAccess: int super_getScrollBarStyle()>','<com.android.internal.view.menu.ActionMenuItemView: boolean dispatchHoverEvent(android.view.MotionEvent)>','<android.widget.AbsListView$PositionScroller: void start(int)>','<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>','<android.app.BackStackRecord: int commitInternal(boolean)>','<com.android.server.wm.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)>','<android.webkit.WebSettingsClassic: void setEnableSmoothTransition(boolean)>','<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>','<android.view.View: void onMeasure(int,int)>','<android.text.BoringLayout: int getLineTop(int)>','<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>','<android.graphics.Color: int HSBtoColor(float,float,float)>','<android.content.pm.IPackageManager$Stub: android.os.IBinder asBinder()>','<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>','<android.view.animation.Transformation: float getAlpha()>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>','<android.app.backup.IRestoreSession$Stub: void <init>()>','<android.media.AudioService: void access$5300(android.media.AudioService)>','<com.android.internal.telephony.DataConnection$CallSetupException: void <init>(int)>','<android.app.ContextImpl$31: void <init>()>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContainer access$400(com.android.internal.app.ActionBarImpl)>','<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>','<android.widget.FastScroller: boolean isAlwaysShowEnabled()>','<android.net.LinkProperties: void addRoute(android.net.RouteInfo)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: com.android.internal.os.BatteryStatsImpl getBatteryStats()>','<android.view.ViewGroup: void requestTransitionStart(android.animation.LayoutTransition)>','<android.widget.TextView: int getFadeHeight(boolean)>','<com.android.server.wm.WindowState: boolean isVisibleLw()>','<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>','<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiManager$Channel,android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)>','<android.view.ViewRootImpl$WindowInputEventReceiver: void onBatchedInputEventPending()>','<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>','<android.os.DropBoxManager$Entry: void <init>(java.lang.String,long)>','<android.net.http.AndroidHttpClient$LoggingConfiguration: void <init>(java.lang.String,int,android.net.http.AndroidHttpClient$1)>','<com.android.server.net.NetworkPolicyManagerService$1: void onImportanceChanged(int,int,int)>','<com.android.internal.view.IInputConnectionWrapper: void reportFullscreenMode(boolean)>','<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbDevice)>','<android.view.View$13: void <init>(java.lang.String)>','<com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: void notifyOtaspChanged(int)>','<android.util.Base64$Decoder: void <init>(int,byte[])>','<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>','<com.android.server.pm.ShutdownThread$1: void onClick(android.content.DialogInterface,int)>','<android.net.wifi.WifiStateMachine: boolean access$602(android.net.wifi.WifiStateMachine,boolean)>','<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int)>','<android.filterfw.io.TextGraphReader$AllocateFilterCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String)>','<android.telephony.SmsCbLocation: java.lang.String getPlmn()>','<com.android.internal.os.IResultReceiver$Stub: void <init>()>','<android.widget.AutoCompleteTextView: boolean isPopupShowing()>','<android.content.pm.ProviderInfo: java.lang.String toString()>','<android.net.http.Request: void waitUntilComplete()>','<android.webkit.WebSettings: int getCacheMode()>','<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)>','<android.widget.Switch: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>','<android.webkit.ZoomManager: void onFirstLayout(android.webkit.WebViewCore$DrawData)>','<com.android.internal.util.StateMachine$SmHandler: void access$2300(com.android.internal.util.StateMachine$SmHandler,boolean)>','<com.android.internal.view.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>','<com.android.internal.telephony.PhoneProxy: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>','<android.view.IWindowManager$Stub$Proxy: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,android.os.IBinder,boolean)>','<android.webkit.WebSettingsClassic: boolean getNeedInitialFocus()>','<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>','<android.bluetooth.BluetoothTetheringDataTracker: boolean isTeardownRequested()>','<com.android.internal.policy.impl.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>','<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>','<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>','<android.util.SparseIntArray: int keyAt(int)>','<android.widget.Scroller: boolean isScrollingInDirection(float,float)>','<com.android.server.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>','<com.android.internal.telephony.IntRangeManager$ClientRange: void <init>(com.android.internal.telephony.IntRangeManager,int,int,java.lang.String)>','<com.android.ex.variablespeed.EngineParameters$Builder: com.android.ex.variablespeed.EngineParameters$Builder decodeBufferMaxSize(int)>','<android.net.EthernetDataTracker: boolean isAvailable()>','<com.android.internal.telephony.IccCard: void registerForAbsent(android.os.Handler,int,java.lang.Object)>','<android.content.res.XmlBlock$Parser: java.lang.String getNamespace(java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>','<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>','<android.widget.AdapterView: void setNextSelectedPositionInt(int)>','<android.content.ClipData: void <init>(android.os.Parcel)>','<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>','<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>','<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>','<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>','<android.filterfw.core.Frame: void setData(byte[],int,int)>','<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>','<android.view.AccessibilityInteractionController$1: void onAcquired(android.util.Poolable)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory$Options)>','<android.content.pm.PathPermission: void <clinit>()>','<android.widget.AbsListView: void access$3900(android.widget.AbsListView,android.view.View,boolean)>','<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>','<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()>','<android.graphics.Region$1: android.graphics.Region createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.sip.SipPhone: android.net.sip.SipProfile access$100(com.android.internal.telephony.sip.SipPhone)>','<android.content.pm.ResolveInfo$1: android.content.pm.ResolveInfo[] newArray(int)>','<android.app.ActivityThread$ApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setRemoteAlias(java.lang.String,java.lang.String)>','<android.database.DatabaseUtils$InsertHelper: long execute()>','<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.MmiCode$State getState()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>','<android.accounts.AccountManagerService$UserAccounts: java.util.HashMap access$500(android.accounts.AccountManagerService$UserAccounts)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String)>','<android.app.backup.IBackupManager$Stub$Proxy: void restoreAtInstall(java.lang.String,int)>','<com.android.internal.os.BinderInternal: void <clinit>()>','<android.security.KeyStore$State: void <clinit>()>','<com.android.internal.telephony.gsm.SmsMessage: boolean isMwiDontStore()>','<com.android.internal.telephony.sip.SipCommandInterface: void setCLIR(int,android.os.Message)>','<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(android.accounts.AccountManagerService$UserAccounts,java.lang.String)>','<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>','<android.content.SyncAdapterType: java.lang.String toString()>','<android.animation.AnimatorSet: void setupStartValues()>','<android.app.Activity: int getTitleColor()>','<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>','<android.graphics.Region: boolean quickReject(android.graphics.Rect)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getTimeCacheMaxAge()>','<com.android.internal.os.BatteryStatsImpl$Timer: void readSummaryFromParcelLocked(android.os.Parcel)>','<com.android.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()>','<com.android.server.pm.PackageManagerService: boolean addPermission(android.content.pm.PermissionInfo)>','<android.net.wifi.WifiStateMachine$DriverUnloadedState: void enter()>','<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>','<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.filterpacks.base.FrameSource: void setupPorts()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getRingingCall()>','<android.view.ViewGroup$TouchTarget: android.view.ViewGroup$TouchTarget obtain(android.view.View,int)>','<android.widget.PopupWindow$PopupViewContainer: void <init>(android.widget.PopupWindow,android.content.Context)>','<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()>','<android.inputmethodservice.IInputMethodWrapper: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<android.content.pm.PermissionInfo: int describeContents()>','<android.widget.AbsListView: boolean showContextMenu(float,float,int)>','<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>','<android.os.IRemoteCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.RIL: void getGsmBroadcastConfig(android.os.Message)>','<com.android.internal.widget.LockPatternView: boolean isInStealthMode()>','<android.net.wifi.p2p.WifiP2pDeviceList: int describeContents()>','<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>','<android.content.SyncQueue: void removeUser(int)>','<android.text.util.Linkify: void <init>()>','<android.security.Credentials: android.security.Credentials getInstance()>','<com.android.internal.telephony.cat.IconId: void <init>()>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.android.internal.view.menu.ActionMenuPresenter,android.content.Context)>','<com.android.server.BatteryService$Led: void <init>(com.android.server.BatteryService,android.content.Context,com.android.server.LightsService)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void setRadius(float)>','<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getEmergency()>','<com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>','<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>','<android.filterfw.core.GraphRunner: void deactivateGlContext()>','<com.android.internal.util.StateMachine$SmHandler$HaltingState: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>','<android.widget.AbsListView: void sendAccessibilityEvent(int)>','<android.view.View: java.lang.Object getTag(int)>','<com.android.server.BatteryService: void systemReady()>','<android.os.storage.IMountServiceListener$Stub: android.os.storage.IMountServiceListener asInterface(android.os.IBinder)>','<com.android.server.location.GpsLocationProvider$2: void <init>(com.android.server.location.GpsLocationProvider)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.Intent: android.content.Intent cloneFilter()>','<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>','<android.bluetooth.BluetoothUuid: boolean isHeadset(android.os.ParcelUuid)>','<android.server.BluetoothBondState: boolean isFixedPinZerosAutoPairKeyboard(java.lang.String)>','<com.android.server.sip.SipService$SipSessionGroupExt: void onConnectivityChanged(boolean)>','<android.graphics.drawable.LayerDrawable$ChildDrawable: void <init>()>','<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>','<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>','<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>','<android.app.ContextImpl: void unregisterReceiver(android.content.BroadcastReceiver)>','<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>','<android.content.ClipData$Item: android.net.Uri getUri()>','<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>','<com.android.internal.telephony.cdma.CDMALTEPhone: void getSmscAddress(android.os.Message)>','<com.android.server.pm.PackageSettingBase: void removeUser(int)>','<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>','<com.android.internal.util.State: void <init>()>','<android.app.ActivityManager: int getLauncherLargeIconDensity()>','<com.android.internal.telephony.gsm.SIMRecords: void finalize()>','<android.os.ParcelUuid: java.util.UUID getUuid()>','<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>','<android.server.BluetoothA2dpService: java.util.HashMap access$200(android.server.BluetoothA2dpService)>','<com.android.internal.telephony.PhoneBase: void unsetOnEcbModeExitResponse(android.os.Handler)>','<com.android.internal.telephony.RIL: void getPDPContextList(android.os.Message)>','<android.location.Location: float access$802(android.location.Location,float)>','<android.inputmethodservice.IInputMethodSessionWrapper: void executeMessage(android.os.Message)>','<android.server.BluetoothInputProfileHandler: int getInputDevicePriority(android.bluetooth.BluetoothDevice)>','<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>','<android.widget.TextView: void onBeginBatchEdit()>','<com.android.internal.telephony.IccCardApplication$AppState: boolean isPukRequired()>','<android.net.sip.SimpleSessionDescription: java.lang.String[] getBandwidthTypes()>','<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>','<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>','<android.location.GpsSatellite: boolean hasEphemeris()>','<android.media.Metadata: boolean parse(android.os.Parcel)>','<android.service.dreams.IDreamManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.webkit.ZoomManager: float computeScaleWithLimits(float)>','<android.widget.PopupWindow: boolean isOutsideTouchable()>','<android.net.SSLSessionCache: void <init>(android.content.Context)>','<android.net.ProxyProperties: void <init>(android.net.ProxyProperties)>','<android.net.NetworkState: int describeContents()>','<com.android.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>','<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)>','<com.android.server.am.BatteryStatsService: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>','<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>','<android.widget.SearchView: android.view.View access$800(android.widget.SearchView)>','<com.android.uiautomator.core.UiAutomatorBridge: void disconnect()>','<android.util.EventLog: java.lang.String getTagName(int)>','<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)>','<android.view.accessibility.AccessibilityInteractionClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.widget.PasswordEntryKeyboard$LatinKey: void onReleased(boolean)>','<android.content.res.TypedArray: boolean getBoolean(int,boolean)>','<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onStart(java.lang.String)>','<android.filterfw.core.SyncRunner: java.lang.Exception getError()>','<android.telephony.SmsCbCmasInfo: int getSeverity()>','<com.android.internal.policy.impl.GlobalActions$4: void <init>(com.android.internal.policy.impl.GlobalActions)>','<android.opengl.GLLogWrapper: void glGetFloatv(int,float[],int)>','<android.widget.SearchView: boolean isLandscapeMode(android.content.Context)>','<com.android.internal.content.PackageMonitor: void onPackagesUnavailable(java.lang.String[])>','<android.os.Debug: void changeDebugPort(int)>','<android.webkit.WebViewCore: void access$4900(android.webkit.WebViewCore,int,java.lang.String,boolean,boolean)>','<com.android.server.connectivity.Tethering: boolean access$202(com.android.server.connectivity.Tethering,boolean)>','<android.webkit.WebView: int access$1902(android.webkit.WebView,int)>','<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>','<android.app.ActivityThread: void scheduleContextCleanup(android.app.ContextImpl,java.lang.String,java.lang.String)>','<android.filterfw.core.Filter: void initWithAssignmentString(java.lang.String)>','<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>','<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>','<android.widget.TextView$CharWrapper: int length()>','<android.view.InputChannel: java.lang.String getName()>','<com.android.internal.widget.LockPatternView: void setTactileFeedbackEnabled(boolean)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void unbindInput()>','<com.android.internal.util.BitwiseInputStream: void skip(int)>','<com.android.server.pm.PackageManagerService$MeasureParams: void handleStartCopy()>','<com.android.server.am.ActivityManagerService$4: void <init>(java.lang.String,int)>','<android.app.Notification$Builder: android.widget.RemoteViews access$300(android.app.Notification$Builder,int)>','<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()>','<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>','<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>','<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>','<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$1: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.app.ActivityThread$ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder)>','<android.inputmethodservice.InputMethodService: void onBindInput()>','<android.webkit.WebViewCore: void access$5600(android.webkit.WebViewCore,int,int,android.graphics.Rect)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: int getState()>','<android.util.DebugUtils: void <init>()>','<android.os.StrictMode: boolean hasGatheredViolations()>','<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)>','<com.android.internal.os.BatteryStatsImpl: void dumpLocked(java.io.PrintWriter)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getRtpmap(int)>','<com.android.internal.app.ActionBarImpl: com.android.internal.widget.ActionBarContextView access$1000(com.android.internal.app.ActionBarImpl)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<com.android.internal.telephony.sip.SipCommandInterface: void switchWaitingOrHoldingAndActive(android.os.Message)>','<android.view.ViewGroup$HoverTarget: android.view.ViewGroup$HoverTarget obtain(android.view.View)>','<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>','<android.content.res.Configuration: boolean needNewResources(int,int)>','<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>','<android.webkit.WebSettingsClassic: void setAllowContentAccess(boolean)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void deleteAppWidgetId(int)>','<android.webkit.WebSettingsClassic: void setFantasyFontFamily(java.lang.String)>','<android.os.IPowerManager$Stub$Proxy: void setMaximumScreenOffTimeount(int)>','<android.view.ViewRootImpl$1$1: void run()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$8600(android.net.wifi.WifiStateMachine)>','<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>','<android.location.IGpsStatusListener$Stub$Proxy: void onGpsStopped()>','<android.webkit.WebSettings: boolean getAllowContentAccess()>','<android.view.GLES20DisplayList: void setCaching(boolean)>','<android.view.IOnKeyguardExitResult$Stub$Proxy: void <init>(android.os.IBinder)>','<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLowerCase(android.content.ComponentName)>','<com.android.server.DevicePolicyManagerService: void setExpirationAlarmCheckLocked(android.content.Context)>','<com.android.vcard.VCardParserImpl_V21: void parseItems()>','<android.ddm.DdmHandleHeap: void disconnected()>','<android.view.DisplayList: void <init>()>','<android.view.View: boolean willNotDraw()>','<android.provider.Settings$Secure: java.lang.String getBluetoothInputDevicePriorityKey(java.lang.String)>','<android.net.NetworkStats$Entry: void add(android.net.NetworkStats$Entry)>','<com.android.internal.policy.impl.KeyguardViewMediator: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>','<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>','<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>','<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>','<com.android.server.PowerManagerService$5: void <init>(com.android.server.PowerManagerService)>','<com.android.internal.util.StateMachine$SmHandler$HaltingState: boolean processMessage(android.os.Message)>','<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>','<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int)>','<android.location.Criteria: int getSpeedAccuracy()>','<android.net.http.RequestQueue$ActivePool: void stopTiming()>','<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>','<android.view.View$PerformClick: void run()>','<android.content.IContentService$Stub$Proxy: boolean isSyncActive(android.accounts.Account,java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean reclaimSomeSurfaceMemoryLocked(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>','<android.content.pm.IPackageInstallObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.telephony.PhoneStateListener$1: void onCallForwardingIndicatorChanged(boolean)>','<android.os.ParcelUuid: boolean equals(java.lang.Object)>','<android.os.IPowerManager$Stub$Proxy: void crash(java.lang.String)>','<android.graphics.drawable.TransitionDrawable$TransitionState: android.graphics.drawable.Drawable newDrawable()>','<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getSipUri()>','<com.android.internal.telephony.Call: void <init>()>','<android.media.AudioService: int getMode()>','<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>','<android.renderscript.Element: int getBytesSize()>','<android.app.ISearchManager$Stub: android.app.ISearchManager asInterface(android.os.IBinder)>','<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void onChange(boolean)>','<com.android.server.WifiService: int access$2900(com.android.server.WifiService)>','<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<android.media.AudioService: void setMode(int,android.os.IBinder)>','<android.view.InputQueue: android.view.InputChannel getInputChannel()>','<android.content.pm.IPackageManager$Stub$Proxy: void grantPermission(java.lang.String,java.lang.String)>','<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,int,int,short[],int)>','<com.android.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.ActivityManagerProxy: void wakingUp()>','<android.webkit.WebSettings$RenderPriority: void <clinit>()>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$15700(android.net.wifi.WifiStateMachine)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)>','<android.text.method.PasswordTransformationMethod$Visible: void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod)>','<android.graphics.drawable.ColorDrawable$ColorState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<com.android.internal.telephony.RIL: void deleteSmsOnSim(int,android.os.Message)>','<android.net.NetworkStats$Entry: java.lang.String toString()>','<android.view.ViewDebug$2: void post(java.lang.Void[])>','<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>','<com.android.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>','<android.content.res.XmlBlock: int access$200(int)>','<android.opengl.GLLogWrapper: void glMaterialf(int,int,float)>','<android.net.wifi.WifiStateMachine: int getFrequencyBand()>','<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)>','<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()>','<android.content.ContentProvider$1: java.lang.Object doInBackground(java.lang.Object[])>','<android.net.wifi.WifiStateMachine$DriverStartingState: void enter()>','<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>','<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>','<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()>','<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)>','<android.view.SurfaceView: void onWindowVisibilityChanged(int)>','<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.filterfw.core.Frame: void onFrameStore()>','<android.server.search.Searchables: boolean access$000(android.content.pm.ResolveInfo)>','<android.os.CountDownTimer$1: void handleMessage(android.os.Message)>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: byte[] access$102(com.android.internal.telephony.cdma.CdmaLteUiccRecords,byte[])>','<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>','<android.util.FastImmutableArraySet: java.util.Iterator iterator()>','<android.database.sqlite.SQLiteConnection$Operation: java.lang.String access$600(android.database.sqlite.SQLiteConnection$Operation)>','<android.widget.AbsListView: int getFooterViewsCount()>','<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>','<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>','<android.net.wifi.WifiStateMachine: void access$12700(android.net.wifi.WifiStateMachine)>','<android.graphics.Canvas$CanvasFinalizer: void finalize()>','<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.os.Bundle)>','<android.content.SyncManager: boolean access$500(android.content.SyncManager)>','<android.webkit.HTML5VideoViewProxy: void onCompletion(android.media.MediaPlayer)>','<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>','<com.android.server.InputMethodManagerService$MethodCallback: void <init>(com.android.internal.view.IInputMethod,com.android.server.InputMethodManagerService)>','<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)>','<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)>','<android.view.accessibility.AccessibilityManager: void access$000(android.view.accessibility.AccessibilityManager,int)>','<android.app.ISearchManager$Stub$Proxy: java.util.List getSearchablesInGlobalSearch()>','<android.content.pm.IPackageManager$Stub$Proxy: int checkUidSignatures(int,int)>','<android.net.DhcpStateMachine: android.app.PendingIntent access$1500(android.net.DhcpStateMachine)>','<com.android.internal.view.IInputMethodCallback$Stub: void <init>()>','<com.android.internal.telephony.PhoneBase: java.lang.String[] getActiveApnTypes()>','<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>','<android.view.ViewPropertyAnimator$3: void run()>','<android.media.MediaRouter: void addRouteInt(android.media.MediaRouter$RouteInfo)>','<com.android.server.wm.WindowManagerService: void performDeferredDestroyWindow(com.android.server.wm.Session,android.view.IWindow)>','<android.content.res.XmlBlock: int access$900(int,int)>','<android.view.ViewGroup: int getChildCount()>','<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>','<android.app.admin.DeviceAdminInfo$1: android.app.admin.DeviceAdminInfo[] newArray(int)>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>','<com.android.server.StatusBarManagerService$3: void run()>','<android.widget.ExpandableListConnector: boolean isGroupExpanded(int)>','<android.view.View$DragShadowBuilder: void <init>(android.view.View)>','<android.content.res.XmlBlock$Parser: int getIdAttributeResourceValue(int)>','<com.android.server.net.NetworkPolicyManagerService$9: void limitReached(java.lang.String,java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()>','<android.view.Window: void setUiOptions(int,int)>','<android.accounts.AccountManagerResponse: void <init>(android.accounts.IAccountManagerResponse)>','<android.widget.AbsListView: void deferNotifyDataSetChanged()>','<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>','<android.accounts.GrantCredentialsPermissionActivity$1: void <init>(android.accounts.GrantCredentialsPermissionActivity,android.widget.TextView)>','<android.view.WindowOrientationListener: void <clinit>()>','<android.widget.ListPopupWindow: void setModal(boolean)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: android.content.pm.PackageManager access$1500(com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager)>','<android.app.ContextImpl$10: void <init>()>','<android.widget.ExpandableListConnector: void setExpandableListAdapter(android.widget.ExpandableListAdapter)>','<com.android.server.AlarmManagerService: java.util.LinkedList access$1600(com.android.server.AlarmManagerService)>','<android.widget.ZoomButtonsController$3: void onClick(android.view.View)>','<android.net.RouteInfo: java.lang.String toString()>','<android.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.policy.impl.PhoneWindowManager$11: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.internal.view.menu.MenuItemImpl$1: void <init>(com.android.internal.view.menu.MenuItemImpl)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.util.List,boolean,boolean)>','<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>','<com.android.server.LightsService$Light: void access$500(com.android.server.LightsService$Light)>','<android.app.ActivityManager$ProcessErrorStateInfo$1: android.app.ActivityManager$ProcessErrorStateInfo createFromParcel(android.os.Parcel)>','<android.content.SyncStorageEngine: long getDelayUntilTime(android.accounts.Account,int,java.lang.String)>','<android.view.View: android.os.IBinder getWindowToken()>','<android.net.wifi.WifiApConfigStore: void <init>(android.content.Context,android.os.Handler)>','<android.net.MobileDataStateTracker: android.net.LinkCapabilities access$800(android.net.MobileDataStateTracker)>','<android.hardware.Camera$Parameters: boolean isAutoWhiteBalanceLockSupported()>','<com.android.server.input.InputManagerService: void access$900(com.android.server.input.InputManagerService,int)>','<android.webkit.WebViewInputDispatcher$UiHandler: void <init>(android.webkit.WebViewInputDispatcher,android.os.Looper)>','<android.net.wifi.SupplicantState: void <clinit>()>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.WebViewClassic: void onDetachedFromWindow()>','<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>','<android.net.EthernetDataTracker$InterfaceObserver: void <init>(android.net.EthernetDataTracker)>','<android.view.GLES20RecordingCanvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void waitForResultLocked()>','<android.view.ViewRootImpl: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>','<com.android.internal.telephony.DataConnectionTracker: void onDataStallAlarm(int)>','<com.android.internal.widget.ScrollingTabContainerView$TabView: android.app.ActionBar$Tab getTab()>','<android.view.ViewRootImpl$1: void <init>(android.view.ViewRootImpl)>','<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>','<android.database.AbstractCursor: android.os.Bundle getExtras()>','<com.android.internal.view.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>','<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>','<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: void <init>(java.io.Reader)>','<android.provider.ContactsContract$CommonDataKinds$StructuredPostal: int getTypeLabelResource(int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void onRecordLoaded()>','<android.os.Environment: java.io.File getSystemSecureDirectory()>','<com.android.server.am.BaseErrorDialog$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: void <init>()>','<com.android.vcard.VCardUtils: java.lang.String toHalfWidthString(java.lang.String)>','<android.text.style.ImageSpan: java.lang.String getSource()>','<com.android.server.wm.BlackFrame: void <init>(android.view.SurfaceSession,android.graphics.Rect,android.graphics.Rect,int)>','<com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>','<android.net.NetworkStatsHistory: int estimateResizeBuckets(long)>','<android.util.Base64: byte[] decode(byte[],int,int,int)>','<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>','<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)>','<com.android.internal.policy.IFaceLockCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.StrictMode$InstanceTracker: void <clinit>()>','<android.view.ViewTreeObserver$InternalInsetsInfo: void setTouchableInsets(int)>','<android.view.View: boolean isVerticalFadingEdgeEnabled()>','<com.android.internal.os.AtomicFile: void finishWrite(java.io.FileOutputStream)>','<com.android.internal.telephony.cat.CatCmdMessage: void <clinit>()>','<android.location.IGpsStatusProvider$Stub$Proxy: android.os.IBinder asBinder()>','<android.database.sqlite.SQLiteProgram: void onCorruption()>','<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.sip.ISipSession$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.vcard.VCardUtils: java.lang.Object getPhoneTypeFromStrings(java.util.Collection,java.lang.String)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void log(java.lang.String)>','<android.telephony.SmsCbMessage: java.lang.String getMessageBody()>','<android.database.IContentObserver$Stub: android.database.IContentObserver asInterface(android.os.IBinder)>','<android.net.wifi.WifiWatchdogStateMachine: long access$3700(android.net.wifi.WifiWatchdogStateMachine)>','<android.os.ICancellationSignal$Stub: android.os.IBinder asBinder()>','<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>','<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)>','<android.content.pm.IPackageMoveObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.UEventObserver$UEventThread: void removeObserver(android.os.UEventObserver)>','<com.android.server.wm.WindowManagerService: void notifyHardKeyboardStatusChange()>','<android.database.sqlite.SQLiteConnection$Operation: void describe(java.lang.StringBuilder)>','<android.graphics.Matrix: void set(android.graphics.Matrix)>','<android.content.Loader: void onAbandon()>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteVideoTurnedOffLocked()>','<android.view.View: void setScrollY(int)>','<android.graphics.drawable.ClipDrawable: int getOpacity()>','<com.android.server.PowerManagerService: boolean access$3100(com.android.server.PowerManagerService)>','<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>','<android.inputmethodservice.IInputMethodWrapper: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>','<com.android.internal.telephony.cat.ResultException: boolean hasAdditionalInfo()>','<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>','<android.view.ScaleGestureDetector: float getCurrentSpan()>','<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.widget.MediaController$2: void <init>(android.widget.MediaController)>','<android.net.NetworkInfo: java.lang.String getReason()>','<android.net.NetworkStats: void <init>(long,int)>','<android.app.NotificationManager: void cancel(java.lang.String,int)>','<android.net.sip.ISipSessionListener$Stub: void <init>()>','<com.android.server.wm.InputMonitor: void freezeInputDispatchingLw()>','<com.android.internal.policy.impl.GlobalActions$SilentModeTriStateAction: boolean isEnabled()>','<android.nfc.TransceiveResult: void <clinit>()>','<android.widget.AccessibilityIterators$PageTextSegmentIterator: int[] preceding(int)>','<android.location.ILocationManager$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.sip.SipSessionGroup: void access$2000(com.android.server.sip.SipSessionGroup,javax.sip.ResponseEvent)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getForegroundTime(int)>','<com.android.server.PowerManagerService$UnsynchronizedWakeLock: boolean isHeld()>','<android.database.sqlite.SQLiteDirectCursorDriver: java.lang.String toString()>','<android.net.LinkCapabilities: java.util.Set keySet()>','<com.android.server.am.AppNotRespondingDialog: com.android.server.am.ActivityManagerService access$100(com.android.server.am.AppNotRespondingDialog)>','<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void setListener(android.net.sip.ISipSessionListener)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: java.lang.String getExampleNumber()>','<android.preference.PreferenceInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$000()>','<android.net.SntpClient: long getNtpTimeReference()>','<android.hardware.usb.UsbDevice: int getDeviceSubclass()>','<android.text.style.SpellCheckSpan: void writeToParcel(android.os.Parcel,int)>','<android.hardware.usb.UsbManager: void <init>(android.content.Context,android.hardware.usb.IUsbManager)>','<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>','<android.nfc.tech.NfcB: android.nfc.Tag getTag()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.android.internal.widget.ActionBarView,com.android.internal.widget.ActionBarView$1)>','<com.android.server.wm.Session: void binderDied()>','<android.webkit.FindActionModeCallback$NoAction: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>','<com.android.internal.os.BatteryStatsImpl$Counter: void reset(boolean)>','<android.os.PowerManager: void setBacklightBrightness(int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasPreferredInternationalPrefix()>','<com.android.internal.widget.WaveView: java.util.ArrayList access$800(com.android.internal.widget.WaveView)>','<com.android.server.Watchdog$RebootRequestReceiver: void <init>(com.android.server.Watchdog)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendCdmaSms(byte[],android.os.Message)>','<android.animation.LayoutTransition$3: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>','<com.android.server.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.webkit.WebViewClassic: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.net.INetworkPolicyListener$Stub: void <init>()>','<android.os.ConditionVariable: void close()>','<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>','<android.net.wifi.IWifiManager$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.NotificationManagerService: void checkCallerIsSystem()>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(java.lang.String)>','<com.android.internal.telephony.RIL: void sendSMS(java.lang.String,java.lang.String,android.os.Message)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$2800(android.net.wifi.WifiStateMachine)>','<android.view.animation.AnimationSet: void restrictDuration(long)>','<android.view.View: android.content.Context getContext()>','<com.android.internal.widget.PointerLocationView: void setPrintCoords(boolean)>','<android.webkit.WebSettingsClassic: boolean getJavaScriptEnabled()>','<com.android.server.am.ActivityManagerService: void resumeAppSwitches()>','<android.widget.PopupWindow: void <init>(android.view.View,int,int)>','<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)>','<android.app.Dialog: void <init>(android.content.Context,boolean,android.os.Message)>','<android.net.ProxyProperties: java.lang.String getExclusionList()>','<android.text.format.Time: long setJulianDay(int)>','<android.bluetooth.BluetoothTetheringDataTracker$1: void onServiceDisconnected(int)>','<com.android.server.wm.WindowManagerService: int handleAppTransitionReadyLocked()>','<android.content.SyncStorageEngine: void removeActiveSync(android.content.SyncInfo,int)>','<android.media.SoundPool: int load(android.content.Context,int,int)>','<android.content.pm.IPackageDeleteObserver$Stub: void <init>()>','<android.location.INetInitiatedListener$Stub$Proxy: boolean sendNiResponse(int,int)>','<com.android.internal.util.State: java.lang.String getName()>','<android.database.sqlite.SQLiteProgram: void bindNull(int)>','<com.android.server.net.NetworkStatsCollection: void reset()>','<com.android.internal.telephony.DataConnectionTracker: boolean isDataSetupCompleteOk(android.os.AsyncResult)>','<android.webkit.WebViewCore: void access$6000(android.webkit.WebViewCore,int)>','<android.hardware.Camera$Parameters: int getZoom()>','<android.app.AlarmManager: void setTimeZone(java.lang.String)>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>','<android.content.IIntentSender$Stub: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: java.lang.String getIccSerialNumber()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void handleMessage(android.os.Message)>','<android.media.IRemoteControlClient$Stub$Proxy: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.renderscript.Element$DataType: android.renderscript.Element$DataType[] values()>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec: java.lang.String toString()>','<android.telephony.TelephonyManager: int getPhoneType()>','<android.app.ExpandableListActivity: void setSelectedGroup(int)>','<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()>','<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>','<android.database.CursorWindow: long getLong(int,int)>','<com.android.internal.telephony.DataConnection: void access$2600(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimLiLoaded: java.lang.String getEfName()>','<android.webkit.PluginManager: void <clinit>()>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<android.app.ContextImpl: boolean deleteFile(java.lang.String)>','<android.view.GLES20Canvas: void drawPatch(android.graphics.Bitmap,byte[],android.graphics.RectF,android.graphics.Paint)>','<com.android.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel,com.android.internal.widget.ActionBarView$1)>','<com.android.server.NotificationManagerService: void cancelAll()>','<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<com.android.server.am.BroadcastQueue: void cancelBroadcastTimeoutLocked()>','<android.appwidget.AppWidgetHostView$ParcelableSparseArray$1: android.appwidget.AppWidgetHostView$ParcelableSparseArray[] newArray(int)>','<android.widget.TextView$BufferType: void <clinit>()>','<android.filterfw.core.FrameFormat: int getWidth()>','<android.webkit.WebViewCore: void sendMessage(int,int,int,java.lang.Object)>','<com.android.server.net.NetworkPolicyManagerService$6: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<android.text.HtmlToSpannedConverter$Italic: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>','<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)>','<com.android.internal.telephony.PhoneBase: java.lang.String getActiveApnHost(java.lang.String)>','<android.telephony.SignalStrength: int getEvdoLevel()>','<android.media.IRemoteControlDisplay$Stub$Proxy: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>','<android.webkit.WebViewClassic: void onConfigurationChanged(android.content.res.Configuration)>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>','<android.net.nsd.NsdManager: com.android.internal.util.AsyncChannel access$100(android.net.nsd.NsdManager)>','<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>','<com.android.server.ConnectivityService: void setDataDependency(int,boolean)>','<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>','<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)>','<android.view.animation.AnimationSet: void setStartTime(long)>','<android.graphics.Paint: boolean isSubpixelText()>','<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int)>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getIsimDomain()>','<android.opengl.GLLogWrapper$PointerInfo: int sizeof(int)>','<android.server.BluetoothService: int getDiscoverableTimeout()>','<android.net.LinkCapabilities: int size()>','<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>','<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>','<android.app.ActivityThread$ApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>','<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>','<android.widget.SpellChecker: android.widget.SpellChecker$SpellParser[] access$100(android.widget.SpellChecker)>','<com.android.internal.content.PackageMonitor: void onSomePackagesChanged()>','<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>','<com.android.internal.telephony.ApnSetting: boolean equals(java.lang.Object)>','<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>','<android.widget.Editor: android.graphics.drawable.Drawable access$2700(android.widget.Editor)>','<android.filterfw.core.ProgramPort: java.lang.String toString()>','<android.renderscript.BaseObj: java.lang.String getName()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void calculateValue(float)>','<android.accounts.AccountManagerService: void <init>(android.content.Context,android.content.pm.PackageManager,android.accounts.IAccountAuthenticatorCache)>','<android.content.ClipDescription: void <clinit>()>','<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>','<android.net.http.CharArrayBuffers: int setLowercaseIndexOf(org.apache.http.util.CharArrayBuffer,int)>','<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>','<android.view.Choreographer$2: void <init>()>','<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()>','<android.content.Loader: void startLoading()>','<android.app.LoadedApk$ServiceDispatcher: void validate(android.content.Context,android.os.Handler)>','<android.webkit.WebViewCore: void sendMessageDelayed(int,java.lang.Object,long)>','<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>','<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>','<android.text.Selection: boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean)>','<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView$RecyclerListener)>','<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>','<com.android.internal.policy.impl.KeyguardViewMediator$1: void <init>(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.accounts.AccountManagerService: boolean access$1100(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDepthMaskEnabled(boolean)>','<com.android.uiautomator.core.UiDevice: boolean pressHome()>','<android.content.ContentProviderOperation$Builder: int access$000(android.content.ContentProviderOperation$Builder)>','<android.content.res.Resources: android.content.res.AssetManager getAssets()>','<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>','<android.app.LoadedApk$ReceiverDispatcher: void validate(android.content.Context,android.os.Handler)>','<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>','<android.content.pm.PackageInfo: void <clinit>()>','<com.android.internal.view.menu.MenuPopupHelper: void show()>','<com.android.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>','<android.widget.SearchView$10: void onNothingSelected(android.widget.AdapterView)>','<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>','<com.android.internal.util.StateMachine: void sendMessageDelayed(int,java.lang.Object,long)>','<com.android.internal.telephony.DataConnectionTracker: int disableApnType(java.lang.String)>','<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>','<android.webkit.ZoomManager: float access$1500(android.webkit.ZoomManager)>','<android.media.RemoteControlClient: android.graphics.Bitmap access$800(android.media.RemoteControlClient)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()>','<android.view.MotionEvent: java.lang.String buttonStateToString(int)>','<android.bluetooth.BluetoothDeviceProfileState: void access$10900(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.internal.telephony.sip.SipCommandInterface: void getIMSIForApp(java.lang.String,android.os.Message)>','<com.android.server.pm.PackageManagerService: void access$500(com.android.server.pm.PackageManagerService,java.util.Set)>','<android.webkit.JWebCoreJavaBridge: void setActiveWebView(android.webkit.WebViewClassic)>','<android.database.sqlite.SQLiteConnection: byte[] access$500()>','<android.text.method.BaseMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>','<android.view.KeyEvent: int getRepeatCount()>','<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<com.android.server.wm.StrictModeFlash: void setVisibility(boolean)>','<android.renderscript.RenderScript: int nProgramVertexCreate(java.lang.String,java.lang.String[],int[])>','<android.os.TokenWatcher$Death: void <init>(android.os.TokenWatcher,android.os.IBinder,java.lang.String)>','<android.view.DragEvent: java.lang.Object getLocalState()>','<android.content.ContentValues: void clear()>','<android.net.sip.SipAudioCall: void holdCall(int)>','<android.util.LongSparseArray: java.lang.Object valueAt(int)>','<com.android.server.am.ActivityManagerService: void wakingUp()>','<android.content.pm.IPackageManager$Stub$Proxy: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<android.ddm.DdmHandleNativeHeap: void disconnected()>','<android.text.method.QwertyKeyListener$Replaced: char[] access$000(android.text.method.QwertyKeyListener$Replaced)>','<android.view.AccessibilityInteractionController$PrivateHandler: java.lang.String getMessageName(android.os.Message)>','<com.android.server.IntentResolver: java.util.Set filterSet()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasLeadingDigits()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>','<android.widget.AbsListView: android.content.Context access$2900(android.widget.AbsListView)>','<android.renderscript.ProgramStore: void <init>(int,android.renderscript.RenderScript)>','<com.android.server.am.ActivityStack: void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)>','<android.media.MediaRouter: void addUserRoute(android.media.MediaRouter$UserRouteInfo)>','<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>','<android.view.accessibility.AccessibilityEvent: void clear()>','<com.android.internal.telephony.RetryManager: java.lang.String toString()>','<android.view.textservice.SpellCheckerSession: void access$000(android.view.textservice.SpellCheckerSession,android.view.textservice.SuggestionsInfo[])>','<android.net.wifi.WifiStateMachine: android.net.DhcpStateMachine access$11802(android.net.wifi.WifiStateMachine,android.net.DhcpStateMachine)>','<com.android.server.wm.WindowManagerService: void removeAppToken(android.os.IBinder)>','<android.media.MediaRouter$Static: void startMonitoringRoutes(android.content.Context)>','<android.app.SharedPreferencesImpl: android.content.SharedPreferences$Editor edit()>','<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.WifiNative: boolean setDeviceType(java.lang.String)>','<android.webkit.WebViewDatabaseClassic$1: void run()>','<com.android.internal.telephony.cat.AppInterface$CommandType: com.android.internal.telephony.cat.AppInterface$CommandType fromInt(int)>','<android.server.BluetoothService: boolean disconnectSink(java.lang.String)>','<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int,int)>','<com.android.server.wm.WindowManagerService: void startAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,int)>','<com.android.server.PowerManagerService: void initInThread()>','<com.android.server.AlarmManagerService: int access$1800(com.android.server.AlarmManagerService,int,int)>','<android.view.ViewGroup: void measureChild(android.view.View,int,int)>','<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>','<com.android.internal.policy.impl.PhoneWindowManager: int getConfigDisplayHeight(int,int,int)>','<android.telephony.SignalStrength: void <init>(int,int,int,int,int,int,int,int,int,int,int,int,boolean)>','<android.net.SSLCertificateSocketFactory$1: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$11: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList access$5000(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.vcard.VCardUtils$QuotedPrintableCodecPort: void <clinit>()>','<android.content.IContentService$Stub$Proxy: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>','<android.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void removeIcon(int)>','<android.app.ActivityThread$ApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>','<android.net.http.RequestQueue: boolean haveRequest(org.apache.http.HttpHost)>','<com.android.server.LocationManagerService$UpdateRecord: void <init>(com.android.server.LocationManagerService,java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver,int)>','<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment)>','<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>','<android.view.IWindowSession$Stub$Proxy: boolean getInTouchMode()>','<android.provider.Settings$Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)>','<android.telephony.CellInfo: int getTimeStampType()>','<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)>','<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>','<android.widget.RemoteViews: void access$500(android.widget.RemoteViews,android.widget.RemoteViews$BitmapCache)>','<android.view.WindowManagerImpl: void startTrimMemory(int)>','<android.webkit.PluginList: void clear()>','<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)>','<android.speech.tts.TextToSpeech$Connection$1: void onDone(java.lang.String)>','<com.android.internal.view.menu.MenuPopupHelper: void onViewDetachedFromWindow(android.view.View)>','<android.view.animation.Animation$1: void run()>','<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>','<android.view.ViewTreeObserver: void merge(android.view.ViewTreeObserver)>','<android.view.GLES20Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region$Op)>','<com.android.server.WifiService$DeathRecipient: void unlinkDeathRecipient()>','<android.security.KeyChain$AliasResponse: void alias(java.lang.String)>','<com.android.server.InputMethodManagerService$5: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<com.android.internal.telephony.RIL: void setMute(boolean,android.os.Message)>','<android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<android.os.MemoryFile$MemoryInputStream: int read(byte[],int,int)>','<com.android.internal.widget.ActionBarView$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>','<android.accounts.IAccountManager$Stub$Proxy: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>','<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>','<android.webkit.ZoomManager$ScaleDetectorListener: boolean handleScale(android.view.ScaleGestureDetector)>','<android.content.ContentProviderOperation$Builder: void <init>(int,android.net.Uri,android.content.ContentProviderOperation$1)>','<com.android.internal.widget.multiwaveview.Tweener$1: void onAnimationCancel(android.animation.Animator)>','<android.view.animation.Animation: float getScaleFactor()>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder setClassInstanceLimit(java.lang.Class,int)>','<android.graphics.drawable.AnimatedRotateDrawable: void draw(android.graphics.Canvas)>','<android.app.admin.DevicePolicyManager: void wipeData(int)>','<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()>','<android.content.SyncManager$ActiveSyncContext: void <init>(android.content.SyncManager,android.content.SyncOperation,long,int)>','<com.android.internal.telephony.AdnRecord$1: void <init>()>','<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>','<com.android.internal.widget.multiwaveview.GlowPadView$1: void onAnimationEnd(android.animation.Animator)>','<android.util.SparseArray: void <clinit>()>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>','<android.bluetooth.BluetoothDeviceProfileState: void access$11400(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.media.effect.effects.CropEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean isAlpha()>','<android.view.View$TransformationInfo: boolean access$1700(android.view.View$TransformationInfo)>','<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>','<com.android.server.usb.UsbDeviceManager: boolean access$1602(com.android.server.usb.UsbDeviceManager,boolean)>','<android.bluetooth.BluetoothUuid: boolean isInputDevice(android.os.ParcelUuid)>','<com.android.vcard.VCardBuilder: void clear()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasFixedLine()>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.LoadedApk$ServiceDispatcher: void setUnbindLocation(java.lang.RuntimeException)>','<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)>','<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>','<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>','<android.webkit.HTML5VideoView: void switchProgressView(boolean)>','<com.android.uiautomator.core.QueryController: java.lang.String getCurrentActivityName()>','<com.android.internal.statusbar.StatusBarIcon$1: void <init>()>','<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>','<com.android.internal.util.IndentingPrintWriter: void write(char[],int,int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleMessage(android.os.Message)>','<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void logd(java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<android.app.ActivityThread$ApplicationThread: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>','<com.android.internal.telephony.cdma.EriManager: int getEriFileVersion()>','<android.widget.CheckedTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.media.MediaPlayer: void selectTrack(int)>','<android.app.ActivityThread$ApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallBusy(android.net.sip.ISipSession)>','<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>','<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>','<android.content.Loader: boolean cancelLoad()>','<android.util.Slog: int w(java.lang.String,java.lang.Throwable)>','<com.android.internal.telephony.gsm.GsmCall: void clearDisconnected()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onPause()>','<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshot(java.lang.String,android.content.pm.PackageInfo)>','<android.telephony.SmsCbCmasInfo$1: android.telephony.SmsCbCmasInfo createFromParcel(android.os.Parcel)>','<android.net.LocalSocketImpl: void shutdownInput()>','<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()>','<android.content.SyncStorageEngine: void writeAllState()>','<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)>','<android.os.Process: boolean supportsProcesses()>','<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>','<com.android.internal.widget.WaveView: java.lang.Runnable access$1200(com.android.internal.widget.WaveView)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse newInstance(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>','<com.android.internal.widget.ActionBarView$HomeView: void onLayout(boolean,int,int,int,int)>','<com.android.vcard.VCardBuilder: java.lang.String toString()>','<com.android.internal.telephony.RIL: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>','<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>','<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>','<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object)>','<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>','<android.media.MediaRouter: void addRoute(android.media.MediaRouter$RouteInfo)>','<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getRemainingPostDialString()>','<com.android.internal.telephony.sip.SipCommandInterface: void getGsmBroadcastConfig(android.os.Message)>','<com.android.internal.telephony.DataConnection: int access$2100(com.android.internal.telephony.DataConnection,android.os.AsyncResult)>','<com.android.server.LocationManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.telephony.PhoneStateListener$1: void onCellInfoChanged(android.telephony.CellInfo)>','<android.widget.AbsListView: int getTranscriptMode()>','<android.bluetooth.BluetoothTetheringDataTracker: android.os.Handler access$400(android.bluetooth.BluetoothTetheringDataTracker)>','<android.os.StrictMode$AndroidBlockGuardPolicy$1: void run()>','<android.os.Debug$MemoryInfo$1: void <init>()>','<android.app.DownloadManager: boolean isActiveNetworkExpensive(android.content.Context)>','<android.content.ContextWrapper: boolean stopService(android.content.Intent)>','<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>','<android.hardware.Camera: android.hardware.Camera$PictureCallback access$200(android.hardware.Camera)>','<android.hardware.LegacySensorManager: void <clinit>()>','<android.webkit.WebSettingsClassic: void setDefaultFontSize(int)>','<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<android.content.ContentProvider$Transport: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>','<android.database.sqlite.SQLiteConnection: boolean isPreparedStatementInCache(java.lang.String)>','<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>','<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>','<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>','<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>','<com.android.server.wm.WindowManagerService: int getOrientationFromWindowsLocked()>','<android.view.GLES20Canvas: int drawDisplayList(android.view.DisplayList,android.graphics.Rect,int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.IBinder asBinder()>','<android.webkit.AccessibilityInjector: void removeAccessibilityApisIfNecessary()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onSetDependencyMet(java.lang.String,boolean)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean needsOtaServiceProvisioning()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)>','<android.net.MobileDataStateTracker: android.os.Handler access$1200(android.net.MobileDataStateTracker)>','<android.view.View: int getImportantForAccessibility()>','<com.android.internal.widget.DrawableHolder: void setScaleX(float)>','<com.android.internal.telephony.PhoneProxy: boolean getUnitTestMode()>','<android.content.ComponentName: java.lang.String flattenToShortString()>','<android.content.res.AssetManager: long access$300(android.content.res.AssetManager,int)>','<android.content.res.Configuration: void <init>(android.content.res.Configuration)>','<com.android.internal.util.Objects: void <init>()>','<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>','<android.widget.Scroller: int getStartX()>','<android.widget.Spinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.net.IThrottleManager$Stub$Proxy: long getResetTime(java.lang.String)>','<android.content.res.XmlBlock$Parser: int getColumnNumber()>','<android.view.ViewDebug: long getViewRootImplCount()>','<android.app.IActivityController$Stub: android.app.IActivityController asInterface(android.os.IBinder)>','<android.webkit.WebHistoryItem: void <clinit>()>','<android.widget.ZoomButtonsController: android.view.View getZoomControls()>','<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.Choreographer$FrameDisplayEventReceiver: void <init>(android.view.Choreographer,android.os.Looper)>','<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>','<com.android.internal.app.AlertController$ButtonHandler: void <init>(android.content.DialogInterface)>','<android.net.sip.SipSession$Listener: void onRingingBack(android.net.sip.SipSession)>','<android.os.StrictMode: java.lang.Object trackActivity(java.lang.Object)>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)>','<com.android.internal.os.PkgUsageStats$1: void <init>()>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>','<android.view.Display: int getRawExternalWidth()>','<android.text.style.BulletSpan: int describeContents()>','<android.view.VolumePanel$3: void onDismiss(android.content.DialogInterface)>','<android.widget.FastScroller$ScrollFade: void startFade()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$202(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>','<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>','<android.location.GeocoderParams: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.ActivityManagerService$13: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.ActivityManagerService: void moveTaskToFront(int,int,android.os.Bundle)>','<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>','<android.text.style.LeadingMarginSpan$Standard: int describeContents()>','<com.android.internal.telephony.cdma.CDMAPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>','<android.filterfw.core.ShaderProgram: void finalize()>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>','<com.android.internal.os.ProcessStats: java.lang.String printCurrentState(long)>','<com.android.server.pm.PackageManagerService$InstallArgs: int doPostCopy(int)>','<com.android.server.wm.WindowState: android.graphics.RectF getShownFrameLw()>','<android.hardware.SerialManager: android.hardware.SerialPort openSerialPort(java.lang.String,int)>','<android.view.Choreographer: android.view.Choreographer getInstance()>','<android.media.IAudioService$Stub: android.os.IBinder asBinder()>','<com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState valueOf(java.lang.String)>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.os.Debug: boolean isMethodTracingActive()>','<com.android.internal.os.storage.ExternalStorageFormatter: android.os.IBinder onBind(android.content.Intent)>','<android.os.ResultReceiver$MyRunnable: void <init>(android.os.ResultReceiver,int,android.os.Bundle)>','<android.widget.MediaController: android.widget.MediaController$MediaPlayerControl access$700(android.widget.MediaController)>','<android.net.Uri$HierarchicalUri: boolean isHierarchical()>','<com.android.internal.telephony.BaseCommands: void setOnCatCallSetUp(android.os.Handler,int,java.lang.Object)>','<com.android.server.net.NetworkStatsRecorder: void maybePersistLocked(long)>','<android.graphics.Rect: int centerX()>','<android.app.IWallpaperManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])>','<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1600(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>','<android.view.VelocityTracker$Estimator: float getYCoeff(int)>','<com.android.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>','<com.android.internal.policy.impl.PhoneWindowManager$4: void run()>','<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>','<android.preference.PreferenceManager: int getNextRequestCode()>','<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>','<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>','<android.content.IIntentSender$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.wm.WindowManagerService: void systemReady()>','<android.view.accessibility.AccessibilityEvent$1: void <init>()>','<android.webkit.CallbackProxy: void onReceivedSslError(android.webkit.SslErrorHandler,android.net.http.SslError)>','<android.accounts.AccountManager$AmsTask$1: android.os.Bundle call()>','<com.android.internal.telephony.IntRangeManager: boolean updateRanges()>','<com.android.vcard.VCardUtils: java.lang.String getPropertyNameForIm(int)>','<com.android.internal.telephony.cdma.sms.CdmaSmsAddress: com.android.internal.telephony.cdma.sms.CdmaSmsAddress parse(java.lang.String)>','<android.app.backup.BackupDataInput$EntityHeader: void <init>(android.app.backup.BackupDataInput$1)>','<android.filterfw.core.NativeBuffer: void assertWritable()>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>','<com.android.internal.content.NativeLibraryHelper: long sumNativeBinariesLI(java.io.File)>','<com.android.server.WifiService: void setCountryCode(java.lang.String,boolean)>','<android.os.Message: android.os.Message obtain(android.os.Handler)>','<android.webkit.WebIconDatabase: void <init>()>','<android.os.Parcel: java.lang.CharSequence readCharSequence()>','<android.net.http.IdleCache: android.net.http.IdleCache$IdleReaper access$302(android.net.http.IdleCache,android.net.http.IdleCache$IdleReaper)>','<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>','<android.util.Property: void set(java.lang.Object,java.lang.Object)>','<android.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)>','<android.filterfw.core.CachedFrameManager: void <init>()>','<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<com.android.internal.telephony.sip.SipCommandInterface: void getIMSI(android.os.Message)>','<com.android.server.PowerManagerService: com.android.server.LightsService$Light access$4900(com.android.server.PowerManagerService)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean setCurrentKeyboardLayout(java.lang.String)>','<android.provider.BrowserContract$History: void <clinit>()>','<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()>','<com.android.internal.policy.impl.PhoneWindowManager$15: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.app.INotificationManager$Stub$Proxy: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>','<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()>','<com.android.internal.view.menu.MenuItemImpl: boolean isVisible()>','<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>','<android.view.animation.AnticipateInterpolator: void <init>()>','<android.text.HtmlToSpannedConverter$Small: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.webkit.WebViewDatabase: void clearFormData()>','<android.view.inputmethod.CompletionInfo$1: void <init>()>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: java.lang.String inputDigit(char)>','<android.webkit.HttpAuthHandler: void cancel()>','<android.net.wifi.WifiStateMachine: void access$14700(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.util.Base64$Coder: void <init>()>','<android.nfc.tech.NfcB: void close()>','<android.filterfw.core.SyncRunner: void waitUntilWake()>','<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>','<android.content.pm.PackageParser$Provider: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ProviderInfo)>','<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)>','<android.webkit.ZoomManager: boolean canZoomIn()>','<android.webkit.CallbackProxy: int getProgress()>','<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)>','<com.android.internal.telephony.sip.SipPhone$SipAudioCallAdapter: void onCallEnded(android.net.sip.SipAudioCall)>','<android.webkit.WebViewCore: void access$5500(android.webkit.WebViewCore,int,int)>','<com.android.internal.app.ActionBarImpl: android.app.ActionBar$Tab newTab()>','<android.content.res.StringBlock$StyleIDs: int access$502(android.content.res.StringBlock$StyleIDs,int)>','<android.view.PointerIcon$1: void <init>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isOffhook()>','<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>','<android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence: int getSpanStart(java.lang.Object)>','<android.view.ViewRootImpl$TakenSurfaceHolder: boolean onAllowLockCanvas()>','<com.android.internal.os.BatteryStatsImpl: long getBatteryUptimeLocked(long)>','<android.graphics.drawable.GradientDrawable: void setShape(int)>','<com.android.server.am.ActivityManagerService: void showLaunchWarningLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<android.net.wifi.NetworkUpdateResult: void <init>(int)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean canDial()>','<com.android.internal.telephony.SmsRawData: void <clinit>()>','<android.content.SyncStorageEngine: void <clinit>()>','<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)>','<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>','<android.app.SharedPreferencesImpl: java.util.Map getAll()>','<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void calculateValue(float)>','<android.service.wallpaper.IWallpaperService$Stub$Proxy: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int)>','<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])>','<com.android.internal.widget.ScrollingTabContainerView$1: void run()>','<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String)>','<android.content.Intent: android.graphics.Rect getSourceBounds()>','<android.view.inputmethod.EditorInfo: int describeContents()>','<com.android.internal.os.HandlerCaller$MyHandler: void handleMessage(android.os.Message)>','<com.android.internal.os.ProcessStats: int getLastIoWaitTime()>','<android.database.CursorWindow: java.lang.String toString()>','<android.widget.RemoteViewsAdapter: java.lang.ref.WeakReference access$500(android.widget.RemoteViewsAdapter)>','<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>','<android.content.ContentValues: void putNull(java.lang.String)>','<android.text.TextUtils: void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getRemoteAlias(java.lang.String)>','<com.android.internal.telephony.IccCardStatus$PinState: com.android.internal.telephony.IccCardStatus$PinState[] values()>','<android.webkit.WebViewClassic: float getZoomOverviewScale()>','<android.net.ProxyProperties$1: android.net.ProxyProperties createFromParcel(android.os.Parcel)>','<com.android.server.LightsService$Light: void pulse(int,int)>','<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>','<android.server.BluetoothService: java.util.List getConnectedHealthDevices()>','<android.view.KeyEvent: int getMaxKeyCode()>','<android.net.EthernetDataTracker: void startMonitoring(android.content.Context,android.os.Handler)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: boolean processMessage(android.os.Message)>','<android.widget.AdapterView: int getLastVisiblePosition()>','<android.widget.Spinner: void setEnabled(boolean)>','<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>','<com.android.server.pm.PackageManagerService$MeasureParams: void <init>(com.android.server.pm.PackageManagerService,android.content.pm.PackageStats,android.content.pm.IPackageStatsObserver)>','<com.android.server.pm.PackageManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>','<android.os.Trace: void traceEnd(long)>','<android.text.method.DigitsKeyListener: void <init>()>','<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<android.accounts.AccountManagerService$Session: void onRequestContinued()>','<android.widget.AdapterViewAnimator$SavedState: void <init>(android.os.Parcel,android.widget.AdapterViewAnimator$1)>','<android.media.AudioManager: void setWiredHeadsetOn(boolean)>','<android.webkit.WebViewClassic: void updateDefaultZoomDensity(float)>','<android.widget.AbsListView: void smoothScrollBy(int,int)>','<android.preference.PreferenceManager: void registerOnActivityDestroyListener(android.preference.PreferenceManager$OnActivityDestroyListener)>','<com.android.internal.widget.ActionBarView: android.widget.Spinner access$1000(com.android.internal.widget.ActionBarView)>','<android.view.View: void makeOptionalFitsSystemWindows()>','<android.view.View: void sendAccessibilityEventInternal(int)>','<com.android.internal.policy.impl.GlobalActions$2: boolean onLongPress()>','<android.server.BluetoothService: java.lang.String getRemoteAlias(java.lang.String)>','<android.view.View$MeasureSpec: java.lang.String toString(int)>','<android.telephony.ServiceState: void setStateOutOfService()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>','<android.content.res.XmlBlock$Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>','<android.telephony.ServiceState: java.lang.String toString()>','<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>','<android.widget.Spinner$DialogPopup: boolean isShowing()>','<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()>','<android.view.PointerIcon: boolean isNullIcon()>','<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>','<android.net.wifi.WifiWatchdogStateMachine: int[] access$3800()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$100(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$BatteryStatus)>','<android.util.AndroidException: void <init>(java.lang.Exception)>','<android.app.ActivityThread$ApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>','<android.os.BadParcelableException: void <init>(java.lang.String)>','<android.webkit.WebViewClassic: void access$5900(android.webkit.WebViewClassic,android.webkit.WebViewCore$WebKitHitTest)>','<android.net.wifi.WifiConfiguration$AuthAlgorithm: void <clinit>()>','<android.widget.RemoteViews$ActionException: void <init>(java.lang.String)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>','<com.android.internal.telephony.gsm.GSMPhone: void getAvailableNetworks(android.os.Message)>','<android.os.ParcelUuid$1: android.os.ParcelUuid[] newArray(int)>','<android.view.GLES20RecordingCanvas: void drawPoints(float[],int,int,android.graphics.Paint)>','<android.renderscript.Element: void updateFromNative()>','<android.view.MotionEvent: float getY()>','<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>','<com.android.server.PowerManagerService: boolean access$5400(com.android.server.PowerManagerService)>','<android.content.pm.PackageParser: java.lang.String access$000(java.lang.String,java.lang.CharSequence,java.lang.String[])>','<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>','<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)>','<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void dial(java.lang.String)>','<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>','<android.widget.AbsListView: android.os.StrictMode$Span access$1302(android.widget.AbsListView,android.os.StrictMode$Span)>','<android.content.pm.IPackageManager$Stub$Proxy: void setPermissionEnforced(java.lang.String,boolean)>','<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>','<android.hardware.SystemSensorManager$SensorThread: void finalize()>','<android.webkit.WebViewClassic: void access$300(android.webkit.WebViewClassic)>','<android.content.Entity: android.content.ContentValues getEntityValues()>','<android.location.LocationManager: android.location.GpsStatus access$200(android.location.LocationManager)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>','<android.database.BulkCursorProxy: void onMove(int)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void dispatchPointer(android.view.MotionEvent)>','<com.android.internal.view.menu.MenuPopupHelper: void onViewAttachedToWindow(android.view.View)>','<android.webkit.PluginFullScreenHolder$CustomFrameLayout: boolean onTrackballEvent(android.view.MotionEvent)>','<com.android.internal.telephony.gsm.GSMPhone: void getCallForwardingOption(int,android.os.Message)>','<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>','<android.webkit.SearchBoxImpl: void onchange(android.webkit.SearchBox$SearchBoxListener)>','<com.android.server.usb.UsbSettingsManager$MyPackageMonitor: void <init>(com.android.server.usb.UsbSettingsManager,com.android.server.usb.UsbSettingsManager$1)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.view.View getCustomView()>','<android.net.wifi.WifiStateTracker: void setTeardownRequested(boolean)>','<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>','<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>','<android.webkit.GeolocationPermissionsClassic$2: void <init>(android.webkit.GeolocationPermissionsClassic)>','<android.net.LocalSocket: void setSendBufferSize(int)>','<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()>','<com.android.internal.telephony.ApnContext: java.lang.String toString()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse$1: android.net.wifi.p2p.nsd.WifiP2pServiceResponse createFromParcel(android.os.Parcel)>','<android.content.ContentProvider: void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[])>','<android.filterfw.core.VertexFrame: void setFloats(float[])>','<com.android.server.AppWidgetServiceImpl: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName)>','<android.content.res.XmlBlock$Parser: boolean isEmptyElementTag()>','<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: boolean isConnected()>','<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>','<android.preference.Preference: void setFragment(java.lang.String)>','<android.content.res.XmlBlock: int access$300(int)>','<android.view.ViewRootImpl$InvalidateOnAnimationRunnable: void addView(android.view.View)>','<android.app.ContextImpl$22: void <init>()>','<com.android.internal.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>','<android.server.BluetoothService: void shutoffBluetooth()>','<android.hardware.Camera: void access$600(android.hardware.Camera,boolean,boolean)>','<android.content.pm.IPackageDataObserver$Stub: android.content.pm.IPackageDataObserver asInterface(android.os.IBinder)>','<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>','<android.widget.TextView$CharWrapper: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1: void <init>(android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection,android.widget.RemoteViewsAdapter)>','<com.android.internal.telephony.gsm.GsmMmiCode: void cancel()>','<android.filterfw.core.SimpleFrame: int[] getInts()>','<android.database.CursorWindow: boolean isString(int,int)>','<com.android.internal.telephony.cat.TextMessage: void <clinit>()>','<android.media.MediaRouter: android.media.MediaRouter$RouteCategory createRouteCategory(java.lang.CharSequence,boolean)>','<com.android.server.connectivity.Vpn: void limitReached(java.lang.String,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)>','<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile access$2600(javax.sip.header.HeaderAddress)>','<android.net.wifi.SupplicantStateTracker$ScanState: void enter()>','<android.net.rtp.AudioGroup: void remove(android.net.rtp.AudioStream)>','<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>','<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>','<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: java.lang.String readLine()>','<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>','<android.telephony.TelephonyManager: void enableLocationUpdates()>','<android.bluetooth.BluetoothProfileState: android.bluetooth.BluetoothDevice access$300(android.bluetooth.BluetoothProfileState)>','<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)>','<android.widget.RemoteViews$SetOnClickPendingIntent$1: void onClick(android.view.View)>','<android.net.EthernetDataTracker: int stopUsingNetworkFeature(java.lang.String,int,int)>','<com.android.internal.view.menu.MenuItemImpl: void <init>(com.android.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)>','<com.android.server.WallpaperManagerService$WallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine)>','<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>','<com.android.server.sip.SipSessionGroup: void processTimeout(javax.sip.TimeoutEvent)>','<com.android.server.input.InputManagerService$5: void visitKeyboardLayout(android.content.res.Resources,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.internal.telephony.RetryManager: void increaseRetryCount()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getCallId()>','<com.android.server.PowerManagerService: int access$1402(com.android.server.PowerManagerService,int)>','<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>','<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,int[],int)>','<com.android.server.wm.WindowManagerService: void waitForWindowDrawn(android.os.IBinder,android.os.IRemoteCallback)>','<android.view.inputmethod.CompletionInfo: java.lang.String toString()>','<android.net.NetworkStats$1: android.net.NetworkStats createFromParcel(android.os.Parcel)>','<android.app.ContextImpl$8: java.lang.Object createService(android.app.ContextImpl)>','<com.android.server.WifiService: boolean pingSupplicant()>','<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()>','<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>','<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>','<android.app.IBackupAgent$Stub$Proxy: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>','<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)>','<android.speech.tts.TextToSpeech$9: java.util.Locale run(android.speech.tts.ITextToSpeechService)>','<android.webkit.SslClientCertLookupTable: java.security.PrivateKey PrivateKey(java.lang.String)>','<com.android.server.net.NetworkIdentitySet: void writeToStream(java.io.DataOutputStream)>','<com.android.internal.app.ActionBarImpl: void setDisplayUseLogoEnabled(boolean)>','<android.net.http.RequestQueue$1: void <init>(android.net.http.RequestQueue)>','<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)>','<com.android.internal.policy.impl.SimPukUnlockScreen: void updateConfiguration()>','<com.android.ex.variablespeed.VariableSpeedNative: void <init>()>','<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void enter()>','<android.text.PackedObjectVector: void <init>(int)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>','<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewClassic: int getScrollY()>','<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)>','<android.os.DropBoxManager$Entry: java.io.InputStream getInputStream()>','<com.android.internal.telephony.Connection: void <init>()>','<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>','<android.inputmethodservice.KeyboardView: void closing()>','<android.graphics.drawable.ColorDrawable: void setColor(int)>','<android.filterfw.core.ShaderProgram: void beginDrawing()>','<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>','<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: boolean shouldWrite()>','<android.view.AccessibilityInteractionController$SomeArgs: boolean isPooled()>','<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setText(int)>','<com.android.server.pm.PackageManagerService$HandlerParams: boolean startCopy()>','<android.widget.RemoteViews: void setEmptyView(int,int)>','<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()>','<android.hardware.SystemSensorManager$ListenerDelegate: java.lang.Object getListener()>','<android.animation.FloatKeyframeSet: void <init>(android.animation.Keyframe$FloatKeyframe[])>','<android.widget.ProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>','<android.app.ApplicationPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>','<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>','<android.view.animation.LayoutAnimationController: void start()>','<android.widget.ScrollBarDrawable: int getOpacity()>','<com.android.server.input.InputApplicationHandle: void <init>(java.lang.Object)>','<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.telephony.PhoneProxy: void getCallWaiting(android.os.Message)>','<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.opengl.GLLogWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>','<android.app.SharedPreferencesImpl$MemoryCommitResult: void <init>(android.app.SharedPreferencesImpl$1)>','<android.nfc.INfcTag$Stub$Proxy: boolean canMakeReadOnly(int)>','<android.view.KeyEvent: boolean isLongPress()>','<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>','<android.widget.Editor$SuggestionsPopupWindow: void onParentLostFocus()>','<android.content.IntentFilter: java.util.Iterator actionsIterator()>','<android.net.wifi.WifiStateMachine: long access$5802(android.net.wifi.WifiStateMachine,long)>','<android.app.Service: void stopSelf()>','<com.android.internal.policy.impl.ShortcutManager: android.content.Intent getIntent(android.view.KeyCharacterMap,int,int)>','<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>','<android.view.ViewGroup$LayoutParams: void <init>()>','<android.widget.Spinner: int getBaseline()>','<com.android.server.net.NetworkPolicyManagerService$8: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupWaitingOrBackground()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean canTransfer()>','<com.android.internal.telephony.DataConnectionAc: int rspRefCount(android.os.Message)>','<android.net.LinkCapabilities: void clear()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>','<android.webkit.WebCoreThreadWatchdog: android.webkit.WebCoreThreadWatchdog start(android.os.Handler)>','<android.database.CursorWindow$1: android.database.CursorWindow[] newArray(int)>','<com.android.server.EventLogTags: void writeImfForceReconnectIme(java.lang.Object[],long,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getTollFree()>','<android.app.ActivityOptions: int getStartHeight()>','<com.android.internal.policy.impl.GlobalActions: com.android.internal.policy.impl.GlobalActions$ToggleAction access$1400(com.android.internal.policy.impl.GlobalActions)>','<android.webkit.WebViewClassic$PrivateHandler: void clearPreviousHitTest()>','<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)>','<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>','<android.server.BluetoothA2dpService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.IccCard: void access$300(com.android.internal.telephony.IccCard,android.os.AsyncResult)>','<android.animation.Keyframe: boolean hasValue()>','<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>','<android.view.View$8: java.lang.Object get(java.lang.Object)>','<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()>','<com.android.uiautomator.core.UiDevice: void removeWatcher(java.lang.String)>','<android.webkit.SelectActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>','<android.content.res.Configuration: java.lang.String toString()>','<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>','<android.net.http.HttpLog: void v(java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1000(com.android.server.connectivity.Tethering$TetherInterfaceSM,int)>','<com.android.server.location.LocationProviderProxy: android.net.NetworkInfo access$800(com.android.server.location.LocationProviderProxy)>','<android.net.Uri$OpaqueUri: void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1)>','<android.webkit.WebViewClassic: void requestFormData(java.lang.String,int,boolean,boolean)>','<android.bluetooth.BluetoothClass$Device: void <init>()>','<com.android.server.wm.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void unlinkFromOwnDeathLocked()>','<android.accounts.AccountManagerService$RemoveAccountSession: void onResult(android.os.Bundle)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>','<com.android.uiautomator.core.UiDevice: boolean pressDPadLeft()>','<android.telephony.GsmCellIdentity: int getCid()>','<android.view.Window: int getLocalFeatures()>','<com.android.server.MountService: boolean isUsbMassStorageConnected()>','<com.android.uiautomator.core.InteractionController: boolean swipe(android.graphics.Point[],int)>','<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>','<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)>','<android.content.res.TypedArray: int getLayoutDimension(int,int)>','<android.os.Debug: boolean waitingForDebugger()>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void notifyTetheredOfNewUpstreamIface(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaConnection: void hangup()>','<com.android.internal.telephony.cat.LaunchBrowserMode: com.android.internal.telephony.cat.LaunchBrowserMode[] values()>','<android.content.ComponentName: void <clinit>()>','<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>','<android.widget.ArrayAdapter: void setDropDownViewResource(int)>','<com.android.internal.widget.LockPatternView$SavedState$1: com.android.internal.widget.LockPatternView$SavedState createFromParcel(android.os.Parcel)>','<android.provider.ContactsContract$Intents: void <init>()>','<com.android.internal.telephony.PhoneProxy: void unregisterForIncomingRing(android.os.Handler)>','<android.net.http.CharArrayBuffers: boolean containsIgnoreCaseTrimmed(org.apache.http.util.CharArrayBuffer,int,java.lang.String)>','<android.webkit.WebViewClassic: void replaceTextfieldText(int,int,java.lang.String,int,int)>','<android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter: void <init>(android.database.sqlite.SQLiteConnectionPool$1)>','<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>','<com.android.internal.policy.impl.LockScreen$4: void run()>','<com.android.server.am.ActivityManagerService$ServiceRestarter: void run()>','<com.android.server.WifiService: boolean access$800(com.android.server.WifiService)>','<com.android.internal.util.FastXmlSerializer: void comment(java.lang.String)>','<com.android.server.am.ActivityManagerService: void enterSafeMode()>','<android.preference.PreferenceGroupAdapter$1: void <init>(android.preference.PreferenceGroupAdapter)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>','<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)>','<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>','<com.android.internal.widget.PointerLocationView$PointerState: android.view.MotionEvent$PointerCoords access$200(com.android.internal.widget.PointerLocationView$PointerState)>','<android.os.Looper: java.lang.Thread getThread()>','<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>','<com.android.server.location.GpsLocationProvider: boolean requiresCell()>','<android.app.backup.RestoreSession$RestoreObserverWrapper: void restoreStarting(int)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>','<android.view.InputDevice: android.os.Vibrator getVibrator()>','<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<com.android.server.TelephonyRegistry: void <init>(android.content.Context)>','<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>','<com.android.server.NativeDaemonConnector$NativeDaemonFailureException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<android.webkit.JWebCoreJavaBridge: void handleMessage(android.os.Message)>','<android.content.SyncManager$8: void <init>(android.content.SyncManager)>','<com.android.internal.app.ActionBarImpl: void setTitle(int)>','<android.content.SyncManager$SyncTimeTracker: void update()>','<android.net.sip.ISipSessionListener$Stub: android.net.sip.ISipSessionListener asInterface(android.os.IBinder)>','<com.android.internal.telephony.Call$State: boolean isRinging()>','<android.widget.TextView: float getRightFadingEdgeStrength()>','<android.content.SyncManager: android.app.NotificationManager access$3200(android.content.SyncManager)>','<android.opengl.GLLogWrapper: void glRenderbufferStorageOES(int,int,int,int)>','<android.view.View: void onResolvedTextDirectionReset()>','<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingHid access$3302(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$IncomingHid)>','<android.media.RemoteControlClient$EventHandler: void handleMessage(android.os.Message)>','<android.bluetooth.BluetoothDevice$1: android.bluetooth.BluetoothDevice[] newArray(int)>','<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>','<com.android.server.BatteryService$1: void onUEvent(android.os.UEventObserver$UEvent)>','<com.android.internal.telephony.cdma.CdmaConnection: void separate()>','<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.location.Criteria: void setHorizontalAccuracy(int)>','<android.database.IContentObserver$Stub: void <init>()>','<android.text.format.Time: boolean parse3339(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean killProcessesBelowForeground(java.lang.String)>','<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>','<android.widget.HorizontalScrollView: void requestDisallowInterceptTouchEvent(boolean)>','<com.android.internal.util.CharSequences$2: java.lang.CharSequence subSequence(int,int)>','<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>','<com.android.internal.view.BaseSurfaceHolder: void setFixedSize(int,int)>','<android.net.wifi.SupplicantStateTracker$DefaultState: void enter()>','<com.android.internal.view.BaseIWindow: void dispatchGetNewSurface()>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void setVisibility(boolean)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void logState(android.util.Printer,java.lang.String)>','<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>','<com.android.uiautomator.core.InteractionController: boolean longTap(int,int)>','<android.widget.TextView$BufferType: android.widget.TextView$BufferType valueOf(java.lang.String)>','<android.webkit.WebViewCore: void initializeSubwindow()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>','<android.widget.LinearLayout: void onMeasure(int,int)>','<com.android.server.am.AppWaitingForDebuggerDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord)>','<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>','<android.webkit.WebView: void goBack()>','<com.android.server.NotificationManagerService: java.lang.String access$000(android.content.Context,java.lang.String,int)>','<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>','<android.webkit.WebViewCore: void pauseWebKitDraw()>','<com.android.vcard.VCardUtils: java.lang.String guessImageType(byte[])>','<android.content.res.XmlBlock$Parser: boolean isAttributeDefault(int)>','<com.android.server.pm.Installer: int remove(java.lang.String,int)>','<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>','<android.text.style.StyleSpan: int getSpanTypeId()>','<android.app.AlertDialog: void <init>(android.content.Context,int,boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.server.BluetoothAdapterStateMachine: void access$5500(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunning(android.os.WorkSource)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String enableString(int)>','<android.widget.ProgressBar$SavedState$1: android.widget.ProgressBar$SavedState[] newArray(int)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getIccSerialNumber()>','<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)>','<com.android.internal.telephony.IccException: void <init>()>','<android.opengl.GLLogWrapper: void glGenBuffers(int,int[],int)>','<android.text.TextUtils: boolean isPrintableAscii(char)>','<android.media.MediaPlayer$TrackInfo$1: android.media.MediaPlayer$TrackInfo createFromParcel(android.os.Parcel)>','<android.media.AudioService: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<android.os.IHardwareService$Stub: android.os.IBinder asBinder()>','<android.os.Debug: void resetGlobalAllocSize()>','<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setHardKeyboardEnabled(boolean)>','<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>','<android.hardware.Camera$Area: boolean equals(java.lang.Object)>','<android.view.accessibility.AccessibilityManager: boolean isEnabled()>','<com.android.internal.widget.SlidingTab: void access$000(com.android.internal.widget.SlidingTab)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>','<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>','<com.android.server.net.NetworkPolicyManagerService$1: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.widget.ExpandableListConnector: void access$000(android.widget.ExpandableListConnector,boolean,boolean)>','<android.view.ViewDebug$2: void <init>(android.view.View)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)>','<android.widget.OverScroller$SplineOverScroller: void initFromContext(android.content.Context)>','<android.graphics.Matrix: void printShortString(java.io.PrintWriter)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getMeid()>','<android.os.Environment: java.io.File getSecureDataDirectory()>','<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage createFromEfRecord(int,byte[])>','<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>','<com.android.internal.policy.impl.PatternUnlockScreen$3: void onFinish()>','<android.content.res.Resources: int selectDefaultTheme(int,int)>','<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>','<android.media.MediaPlayer: void setRetransmitEndpoint(java.net.InetSocketAddress)>','<android.webkit.HTML5VideoViewProxy: void access$1400(android.webkit.HTML5VideoViewProxy,int)>','<android.accounts.AccountManager$Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>','<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.hardware.usb.UsbRequest: boolean initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)>','<com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler: android.os.Message access$400(com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler)>','<android.net.wifi.WifiStateMachine: int access$4702(android.net.wifi.WifiStateMachine,int)>','<com.android.internal.widget.multiwaveview.Ease$Quart$2: float getInterpolation(float)>','<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>','<android.text.method.ScrollingMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>','<android.net.sip.SimpleSessionDescription$Media: void setAttribute(java.lang.String,java.lang.String)>','<android.filterpacks.videoproc.BackDropperFilter: void close(android.filterfw.core.FilterContext)>','<android.webkit.ZoomManager: float getZoomOverviewScale()>','<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>','<android.location.Address: boolean hasLongitude()>','<android.os.storage.IMountService$Stub$Proxy: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String convertAlphaCharactersInNumber(java.lang.String)>','<com.android.internal.telephony.gsm.GsmConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.gsm.GsmCallTracker,com.android.internal.telephony.gsm.GsmCall)>','<android.content.SyncManager$ActiveSyncContext: void toString(java.lang.StringBuilder)>','<android.app.ActivityThread$ApplicationThread: void scheduleCrash(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void getLastPdpFailCause(android.os.Message)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>','<android.renderscript.RenderScript: void nAllocationElementData1D(int,int,int,int,byte[],int)>','<com.android.internal.util.StateMachine$SmHandler$QuittingState: boolean processMessage(android.os.Message)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void removeActiveAdmin(android.content.ComponentName)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>','<android.webkit.SearchBox$SearchBoxListener: void onSubmitComplete(boolean)>','<com.android.internal.view.IInputMethodClient$Stub: android.os.IBinder asBinder()>','<android.view.GLES20DisplayList: void setLeftTop(int,int)>','<android.graphics.drawable.InsetDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<android.graphics.Matrix: boolean postSkew(float,float)>','<android.telephony.SmsCbEtwsInfo: boolean isPopupAlert()>','<android.view.View: void destroyHardwareResources()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasCountryCodeSource()>','<android.net.sip.SipSessionAdapter: void onRegistrationTimeout(android.net.sip.ISipSession)>','<android.graphics.Point$1: android.graphics.Point createFromParcel(android.os.Parcel)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void <init>(android.inputmethodservice.InputMethodService)>','<android.os.StrictMode$1: java.util.ArrayList initialValue()>','<android.content.ContentValues: java.util.Set keySet()>','<android.text.method.Touch$DragState: void <init>(float,float,int,int)>','<com.android.internal.view.menu.ActionMenuItemView: boolean showsIcon()>','<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()>','<com.android.server.am.ActivityManagerService: void backupAgentCreated(java.lang.String,android.os.IBinder)>','<android.app.ContextImpl$27: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>','<com.android.server.Watchdog: java.lang.String shouldWeBeBrutalLocked(long)>','<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest()>','<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>','<com.android.vcard.VCardParserImpl_V30: void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String)>','<android.speech.tts.TextToSpeech$Connection$1: void onStart(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.MmiCode$State getState()>','<android.app.Instrumentation$1MenuRunnable: void run()>','<android.os.Bundle: float getFloat(java.lang.String,float)>','<android.text.style.SuggestionRangeSpan: void setBackgroundColor(int)>','<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>','<android.telephony.NeighboringCellInfo$1: android.telephony.NeighboringCellInfo[] newArray(int)>','<android.app.SearchDialog$5: boolean onSuggestionSelect(int)>','<android.view.View: void setLayoutDirection(int)>','<com.android.internal.telephony.PhoneProxy: void stopDtmf()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$3700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,android.net.wifi.p2p.nsd.WifiP2pServiceRequest)>','<com.android.internal.view.IInputMethodCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>','<android.view.GLES20RecordingCanvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>','<android.webkit.CallbackProxy$6: void <init>(android.webkit.CallbackProxy,android.webkit.JsPromptResult)>','<android.widget.Spinner$DropDownAdapter: int getCount()>','<com.android.internal.telephony.cdma.SmsMessage$SubmitPdu: void <init>()>','<com.android.internal.telephony.cat.Duration$TimeUnit: com.android.internal.telephony.cat.Duration$TimeUnit[] values()>','<com.android.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>','<android.app.ActivityManagerProxy: int getProcessLimit()>','<android.opengl.GLES20: void <init>()>','<com.android.internal.util.JournaledFile: void commit()>','<android.webkit.WebView: void setScrollBarStyle(int)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.policy.impl.RecentApplicationsDialog$RecentTag: void <init>(com.android.internal.policy.impl.RecentApplicationsDialog)>','<android.accounts.AccountAuthenticatorResponse: void <clinit>()>','<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>','<android.os.WorkSource: boolean diff(android.os.WorkSource)>','<android.database.DefaultDatabaseErrorHandler: void <init>()>','<com.android.internal.widget.ActionBarView: void onRestoreInstanceState(android.os.Parcelable)>','<com.android.internal.policy.impl.LockScreen: boolean access$600(com.android.internal.policy.impl.LockScreen)>','<android.nfc.Tag: void <init>(byte[],int[],android.os.Bundle[],int,android.nfc.INfcTag)>','<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>','<android.opengl.GLLogWrapper: void glNormal3f(float,float,float)>','<android.widget.ProgressBar: int getSecondaryProgress()>','<android.content.res.Resources: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>','<android.webkit.HTML5VideoView: int getCurrentPosition()>','<android.net.LocalSocketImpl: int access$300(android.net.LocalSocketImpl,java.io.FileDescriptor)>','<android.widget.GridView: int getGravity()>','<android.os.INetworkManagementService$Stub$Proxy: void shutdown()>','<android.content.ComponentName: int compareTo(android.content.ComponentName)>','<android.view.View: boolean isLongClickable()>','<android.media.MediaPlayer: void start()>','<android.webkit.WebViewCore: int access$300(android.webkit.WebViewCore)>','<android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>','<com.android.server.am.ActivityStack: void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)>','<android.net.wifi.WifiInfo: int getLinkSpeed()>','<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>','<android.content.IntentSender: int hashCode()>','<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getCdmaBroadcastConfig(android.os.Message)>','<com.android.internal.telephony.PhoneProxy: android.content.Context getContext()>','<android.accounts.AccountAndUser: boolean equals(java.lang.Object)>','<android.hardware.Camera$Area: void <init>(android.graphics.Rect,int)>','<android.view.textservice.TextServicesManager: void <clinit>()>','<android.graphics.Interpolator: void <init>(int,int)>','<android.animation.ValueAnimator: void setRepeatMode(int)>','<android.content.pm.VerifierDeviceIdentity: void <init>(long)>','<android.content.ContentProvider$Transport: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>','<android.os.Parcel: void readCharArray(char[])>','<com.android.internal.telephony.cdma.CDMALTEPhone: void getAvailableNetworks(android.os.Message)>','<com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>','<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>','<android.webkit.WebViewClassic: void setWebChromeClient(android.webkit.WebChromeClient)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void revokeSession(com.android.internal.view.IInputMethodSession)>','<android.os.storage.IMountServiceListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.database.AbstractWindowedCursor: float getFloat(int)>','<android.webkit.WebSettingsClassic$EventHandler: void <init>(android.webkit.WebSettingsClassic,android.webkit.WebSettingsClassic$1)>','<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>','<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>','<android.webkit.FindActionModeCallback$NoAction: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>','<android.app.admin.DeviceAdminInfo: int describeContents()>','<com.android.internal.telephony.ATParseEx: void <init>()>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$1400(android.net.wifi.WifiWatchdogStateMachine)>','<android.net.DhcpStateMachine$DefaultState: void <init>(android.net.DhcpStateMachine)>','<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>','<android.webkit.WebSettings: boolean getBlockNetworkLoads()>','<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void toggleSoftInput(int,int)>','<android.widget.Editor$SelectionStartHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>','<android.webkit.Plugin: java.lang.String getDescription()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$1002(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>','<android.speech.tts.TextToSpeech$2: void <init>(android.speech.tts.TextToSpeech,java.lang.String,int,java.util.HashMap)>','<android.content.IntentFilter$AuthorityEntry: void <init>(android.os.Parcel)>','<com.android.internal.telephony.IccVmNotSupportedException: void <init>(java.lang.String)>','<android.view.View$4: void setValue(java.lang.Object,float)>','<android.webkit.ZoomManager: boolean isDoubleTapEnabled()>','<android.webkit.WebSettingsClassic$EventHandler: void access$300(android.webkit.WebSettingsClassic$EventHandler)>','<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>','<com.android.uiautomator.core.UiAutomatorBridge: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.server.PowerManagerService: void setMaximumScreenOffTimeount(int)>','<android.view.ViewRootImpl: boolean showContextMenuForChild(android.view.View)>','<com.android.server.am.PendingIntentRecord: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)>','<android.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>','<android.server.BluetoothAdapterStateMachine: void access$1100(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.telephony.SmsCbEtwsInfo: int getWarningType()>','<android.provider.Settings$System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>','<android.widget.CompoundButton: boolean isChecked()>','<android.app.QueuedWork: void add(java.lang.Runnable)>','<android.app.SearchDialog: void hide()>','<android.view.VolumePanel: void access$000(android.view.VolumePanel)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp access$2900(android.bluetooth.BluetoothDeviceProfileState)>','<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>','<android.content.IIntentSender$Stub: android.content.IIntentSender asInterface(android.os.IBinder)>','<android.net.NetworkStatsHistory: int getIndexAfter(long)>','<android.net.Uri$PathSegments: void <init>(java.lang.String[],int)>','<com.android.server.InputMethodManagerService: void hideInputMethodMenu()>','<com.android.internal.telephony.sip.SipPhoneBase: boolean getCallForwardingIndicator()>','<com.android.internal.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>','<android.location.Location: double access$402(android.location.Location,double)>','<com.android.server.BatteryService: void <init>(android.content.Context,com.android.server.LightsService)>','<android.content.pm.PackageParser$Component: void setPackageName(java.lang.String)>','<android.net.sip.SipSession$1: void onRegistrationTimeout(android.net.sip.ISipSession)>','<android.net.wifi.WifiStateMachine: void access$12600(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.policy.impl.KeyguardViewManager: void verifyUnlock()>','<com.android.internal.telephony.sip.SipPhoneBase: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromIntent(android.content.Intent,android.preference.PreferenceScreen)>','<android.os.PatternMatcher: void <init>(android.os.Parcel)>','<android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler: void <init>(android.net.wifi.p2p.WifiP2pManager$Channel,android.os.Looper)>','<android.nfc.NdefMessage: boolean equals(java.lang.Object)>','<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>','<android.app.Instrumentation$1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>','<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>','<android.widget.HorizontalScrollView: void scrollTo(int,int)>','<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>','<android.widget.TextView: int getTotalPaddingBottom()>','<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>','<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location)>','<android.view.IWindowManager$Stub$Proxy: void moveAppTokensToBottom(java.util.List)>','<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>','<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>','<android.text.MeasuredText: void setPos(int)>','<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>','<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()>','<android.net.wifi.WifiStateMachine$DriverStartedState: void exit()>','<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>','<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>','<com.android.internal.util.StateMachine$SmHandler: void access$2400(com.android.internal.util.StateMachine$SmHandler)>','<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>','<android.hardware.SerialPort: void write(java.nio.ByteBuffer,int)>','<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>','<android.media.IAudioService$Stub$Proxy: void playSoundEffect(int)>','<com.android.server.PowerManagerService$3: void <init>(com.android.server.PowerManagerService)>','<android.widget.AbsSpinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int)>','<android.database.sqlite.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)>','<com.android.internal.view.IInputConnectionWrapper: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>','<android.server.BluetoothService$ServiceRecordClient: void <init>(android.server.BluetoothService$1)>','<android.app.SharedPreferencesImpl$EditorImpl$2: void <init>(android.app.SharedPreferencesImpl$EditorImpl,java.lang.Runnable)>','<com.android.uiautomator.core.InteractionController$3: void run()>','<android.net.wifi.WifiNative: java.lang.String startWpsPinDisplay(java.lang.String,java.lang.String)>','<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>','<com.android.server.wm.WindowManagerService$WMThread: void run()>','<android.net.sip.SimpleSessionDescription: void <init>(java.lang.String)>','<android.media.MediaRouter$RouteInfo: void routeUpdated()>','<android.graphics.Matrix$1: void <init>()>','<android.telephony.PhoneNumberUtils: java.lang.String convertAndStrip(java.lang.String)>','<com.android.internal.widget.LockPatternView: void clearPattern()>','<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>','<android.webkit.DeviceOrientationService: void resume()>','<com.android.server.PowerManagerService: void access$3200(com.android.server.PowerManagerService,int,int)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getAlpha()>','<android.widget.Spinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)>','<com.android.server.ConnectivityService: int getNetworkPreference()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.LockPatternKeyguardView$Mode access$000(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>','<android.webkit.HTML5VideoInline: void decideDisplayMode()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>','<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>','<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void resetStatusInfo()>','<android.accessibilityservice.UiTestAutomationBridge$1: void onInterrupt()>','<android.opengl.GLLogWrapper: void glStencilFunc(int,int,int)>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordHistoryLength()>','<android.media.AudioService: void setMasterVolume(int,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasPreferredExtnPrefix()>','<android.view.accessibility.AccessibilityEvent: int getEventType()>','<com.android.internal.policy.impl.LockPatternKeyguardView$FastBitmapDrawable: void setAlpha(int)>','<com.android.internal.telephony.gsm.GsmConnection: void proceedAfterWildChar(java.lang.String)>','<android.net.wifi.IWifiManager$Stub$Proxy: void stopWifi()>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>','<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>','<com.android.server.am.CoreSettingsObserver: void <clinit>()>','<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,int,android.content.Intent,java.lang.String,boolean)>','<android.text.BoringLayout: void <clinit>()>','<android.media.AudioService: void reloadAudioSettings()>','<android.widget.RemoteViews$BitmapReflectionAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>','<android.media.IAudioRoutesObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiWatchdogStateMachine: long access$4200(android.net.wifi.WifiWatchdogStateMachine)>','<android.content.pm.ServiceInfo: int describeContents()>','<android.server.BluetoothAdapterStateMachine: void access$2600(android.server.BluetoothAdapterStateMachine,int)>','<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>','<android.view.SurfaceView$4: void setFormat(int)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void <init>(com.android.server.connectivity.Tethering$TetherInterfaceSM)>','<android.filterfw.core.Program: void reset()>','<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>','<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()>','<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncOperation)>','<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>','<android.media.AudioService: android.os.PowerManager$WakeLock access$6100(android.media.AudioService)>','<android.filterfw.core.Filter: void pushInputValue(java.lang.String,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void finishDrawingWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>','<android.inputmethodservice.KeyboardView: void swipeUp()>','<android.animation.LayoutTransition: void cancel(int)>','<com.android.internal.telephony.PhoneProxy: void handleMessage(android.os.Message)>','<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>','<android.view.ViewGroup: void detachViewFromParent(android.view.View)>','<android.media.AudioService: java.lang.String[] access$4600()>','<android.media.AudioService: boolean access$002(android.media.AudioService,boolean)>','<com.android.internal.telephony.IccCard: void supplyPin2(java.lang.String,android.os.Message)>','<android.media.DecoderCapabilities$AudioDecoder: android.media.DecoderCapabilities$AudioDecoder valueOf(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void unregisterForVoiceCallStarted(android.os.Handler)>','<com.android.internal.widget.TransportControlView: void access$200(com.android.internal.widget.TransportControlView,android.os.Bundle)>','<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>','<com.android.server.am.BatteryStatsService: void noteBluetoothOff()>','<android.app.IUiModeManager$Stub$Proxy: int getNightMode()>','<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onError(int,java.lang.String)>','<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>','<android.filterfw.core.StreamPort: java.lang.String toString()>','<android.opengl.GLLogWrapper: void glLogicOp(int)>','<android.net.http.SSLConnectionClosedByUserException: void <init>(java.lang.String)>','<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()>','<android.net.SSLCertificateSocketFactory: void <clinit>()>','<com.android.internal.telephony.CallTracker: boolean isCommandExceptionRadioNotAvailable(java.lang.Throwable)>','<com.android.internal.telephony.IccCard$State: com.android.internal.telephony.IccCard$State[] values()>','<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>','<android.app.FragmentManagerImpl: void noteStateNotSaved()>','<android.view.ViewRootImpl: void childHasTransientStateChanged(android.view.View,boolean)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>','<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>','<android.bluetooth.BluetoothDeviceProfileState: void access$6200(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onPanelRevealed()>','<com.android.internal.widget.ActionBarView$3: void onClick(android.view.View)>','<android.widget.TextView: void onResolvedTextDirectionChanged()>','<android.net.sip.SipAudioCall: void access$700(android.net.sip.SipAudioCall)>','<com.android.internal.telephony.BaseCommands: void unSetOnUSSD(android.os.Handler)>','<android.webkit.WebView: boolean access$601(android.webkit.WebView,int,int,int,int)>','<android.view.DragEvent: float getY()>','<com.android.server.wm.WindowAnimator: void setDisplayDimensions(int,int,int,int)>','<android.webkit.WebViewFactory: void <init>()>','<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>','<android.view.ViewDebug$4: void post(java.lang.Object[])>','<android.view.GLES20Canvas: int invokeFunctors(android.graphics.Rect)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyFlashScreen()>','<com.android.internal.widget.TransportControlView: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void setX(float)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onCleanUpConnection(boolean,int,java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: void readExternal(java.io.ObjectInput)>','<android.view.KeyEvent: int getModifiers()>','<android.webkit.WebTextView: void <init>()>','<android.webkit.BrowserFrame: void documentAsText(android.os.Message)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onCleanUpAllConnections(java.lang.String)>','<android.net.wifi.WifiConfiguration$Protocol: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)>','<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>','<android.widget.ImageView: void setImageURI(android.net.Uri)>','<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>','<android.view.textservice.SpellCheckerSession: void <clinit>()>','<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)>','<android.app.Activity: java.lang.CharSequence onCreateDescription()>','<android.widget.RelativeLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>','<android.os.StrictMode$StrictModeDiskReadViolation: void <init>(int)>','<com.android.internal.telephony.BaseCommands: void unregisterForCallWaitingInfo(android.os.Handler)>','<com.android.internal.telephony.MccTable: void <clinit>()>','<android.hardware.Camera: android.hardware.Camera$ShutterCallback access$000(android.hardware.Camera)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void handleMessage(android.os.Message)>','<android.view.View: boolean isInEditMode()>','<android.webkit.ViewManager: void startZoom()>','<android.media.MediaRouter$RouteInfo: int getVolume()>','<com.android.server.IntentResolver: void <clinit>()>','<android.widget.ImageView: void clearColorFilter()>','<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>','<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>','<android.widget.Spinner$DropdownPopup: android.widget.ListAdapter access$100(android.widget.Spinner$DropdownPopup)>','<android.webkit.WebViewClassic$InvokeListBox$1: void onClick(android.content.DialogInterface,int)>','<android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace valueOf(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void <init>(com.android.internal.os.BatteryStatsImpl$Uid,int,java.util.ArrayList,java.util.ArrayList,android.os.Parcel)>','<com.android.internal.telephony.ServiceStateTracker: void enableLocationUpdates()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$7600(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.util.Set getSupportedRegions()>','<android.preference.Preference: void setWidgetLayoutResource(int)>','<android.webkit.ViewManager: java.util.ArrayList access$300(android.webkit.ViewManager)>','<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>','<android.accounts.IAccountManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewCore$3: void <init>(android.webkit.WebViewCore)>','<com.android.i18n.phonenumbers.ShortNumberUtil: void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil)>','<android.widget.FastScroller: void cancelPendingDrag()>','<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)>','<com.android.internal.util.StateMachine: void removeMessages(int)>','<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>','<android.webkit.WebHistoryItem: byte[] getFlattenedData()>','<android.content.pm.Signature: byte[] toByteArray()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: int getConnectionState(android.bluetooth.BluetoothDevice)>','<android.preference.Preference: int getLayoutResource()>','<android.location.IGpsStatusListener$Stub: android.location.IGpsStatusListener asInterface(android.os.IBinder)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatNationalNumberWithPreferredCarrierCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)>','<com.android.internal.telephony.RIL: void sendEnvelope(java.lang.String,android.os.Message)>','<android.view.View: android.graphics.Bitmap getDrawingCache()>','<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>','<android.widget.MediaController: int access$500(android.widget.MediaController)>','<android.webkit.CallbackProxy: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)>','<com.android.server.InputMethodManagerService: void access$100(com.android.server.InputMethodManagerService)>','<android.location.GpsStatus: void setStatus(int,int[],float[],float[],float[],int,int,int)>','<android.graphics.drawable.GradientDrawable: void setColor(int)>','<android.app.ActivityManagerProxy: boolean removeSubTask(int,int)>','<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>','<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>','<android.app.LoadedApk$ServiceDispatcher$InnerConnection: void <init>(android.app.LoadedApk$ServiceDispatcher)>','<android.text.TextUtils$1: java.lang.CharSequence[] newArray(int)>','<com.android.internal.view.menu.ActionMenuView: void onDetachedFromWindow()>','<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>','<android.text.method.ArrowKeyMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>','<com.android.internal.telephony.DataConnection: void <init>(com.android.internal.telephony.PhoneBase,java.lang.String,int,com.android.internal.telephony.RetryManager,com.android.internal.telephony.DataConnectionTracker)>','<android.graphics.drawable.AnimationDrawable$AnimationState: boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean)>','<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>','<com.android.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>','<com.android.internal.telephony.cat.ResultException: java.lang.String toString()>','<android.graphics.Color: int alpha(int)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void onInterrupt()>','<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>','<android.webkit.SelectActionModeCallback: void finish()>','<com.android.server.location.LocationProviderProxy: long access$600(com.android.server.location.LocationProviderProxy)>','<android.view.View: void buildLayer()>','<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,android.app.LoadedApk)>','<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>','<com.android.server.net.NetworkPolicyManagerService$1: void onProcessDied(int,int)>','<android.net.sip.SipAudioCall$1: void onRegistrationDone(android.net.sip.SipSession,int)>','<android.opengl.GLLogWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$3300(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.content.pm.VerifierDeviceIdentity: void <init>(android.os.Parcel,android.content.pm.VerifierDeviceIdentity$1)>','<com.android.server.WallpaperManagerService: void removeUser(int)>','<android.app.Fragment: boolean getRetainInstance()>','<com.android.internal.policy.impl.PatternUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.telephony.IccCardApplication: com.android.internal.telephony.IccCardApplication$AppType AppTypeFromRILInt(int)>','<android.net.sip.SipProfile: java.lang.String getProfileName()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String)>','<android.widget.ExpandableListView: boolean handleItemClick(android.view.View,int,long)>','<android.util.MathUtils: float atan2(float,float)>','<com.android.internal.telephony.gsm.GsmCallTracker: void unregisterForVoiceCallStarted(android.os.Handler)>','<android.nfc.TagLostException: void <init>(java.lang.String)>','<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>','<com.android.server.EventLogTags: void writeLowStorage(long)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)>','<com.android.server.BatteryService: boolean isPowered()>','<com.android.server.usb.UsbDeviceManager: boolean access$1402(com.android.server.usb.UsbDeviceManager,boolean)>','<android.net.wifi.WifiStateMachine: void access$6900(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.nfc.NfcEvent: void <init>(android.nfc.NfcAdapter)>','<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>','<com.android.server.am.ActivityManagerService$ServiceMap: void putServiceByIntent(android.content.Intent$FilterComparison,int,com.android.server.am.ServiceRecord)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doPostDeleteLI(boolean)>','<android.media.AudioService$VolumeStreamState: void mute(android.os.IBinder,boolean)>','<android.app.BackStackRecord: int commit()>','<android.media.AudioService$VolumeStreamState: void adjustLastAudibleIndex(int,int)>','<android.text.style.UnderlineSpan: int getSpanTypeId()>','<android.net.MobileDataStateTracker: android.os.Messenger access$1000(android.net.MobileDataStateTracker)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker$ApnChangeObserver: void <init>(com.android.internal.telephony.gsm.GsmDataConnectionTracker)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.IBinder asBinder()>','<android.telephony.ServiceState: int getNetworkId()>','<android.accounts.AuthenticatorDescription: void <clinit>()>','<android.location.ICountryListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>','<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean access$102(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,boolean)>','<android.content.res.AssetManager: void access$500(android.content.res.AssetManager,int)>','<android.webkit.WebViewCore: void access$2700(android.webkit.WebViewCore,int)>','<android.net.sip.SipSession$Listener: void onCallEnded(android.net.sip.SipSession)>','<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.UserInfo createUser(java.lang.String,int)>','<com.android.server.DeviceStorageMonitorService: boolean isMemoryLow()>','<com.android.internal.widget.multiwaveview.PointCloud: void setCenter(float,float)>','<android.nfc.tech.BasicTagTechnology: void reconnect()>','<android.media.AudioManager: boolean isMusicActive()>','<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)>','<android.server.BluetoothService: void removeServiceRecord(int)>','<com.android.server.ProcessMap: void remove(java.lang.String,int)>','<android.widget.Editor: void invalidateTextDisplayList(android.text.Layout,int,int)>','<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>','<com.android.internal.policy.impl.FaceUnlock: boolean handleMessage(android.os.Message)>','<android.filterfw.core.FrameFormat: boolean isBinaryDataType()>','<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory access$000(android.filterfw.io.TextGraphReader)>','<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings$PluginState)>','<android.location.Criteria: int getHorizontalAccuracy()>','<android.net.wifi.WifiStateMachine: void access$6100(android.net.wifi.WifiStateMachine)>','<com.android.internal.policy.impl.PhoneWindowManager$2: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<com.android.server.AlarmManagerService: android.content.Intent access$1100()>','<android.os.Message: java.lang.Runnable getCallback()>','<android.security.KeyStore: boolean ungrant(java.lang.String,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties access$200(android.bluetooth.BluetoothTetheringDataTracker)>','<com.android.internal.telephony.gsm.SIMRecords$Get_Spn_Fsm_State: com.android.internal.telephony.gsm.SIMRecords$Get_Spn_Fsm_State[] values()>','<android.view.GLES20Canvas: void drawLines(float[],android.graphics.Paint)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>','<android.animation.ValueAnimator: boolean access$302(android.animation.ValueAnimator,boolean)>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void ping()>','<com.android.server.am.FactoryErrorDialog$1: void handleMessage(android.os.Message)>','<com.android.internal.view.menu.ActionMenuItemView: void onClick(android.view.View)>','<com.android.server.NetworkManagementService: void removeInterfaceAlert(java.lang.String)>','<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>','<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>','<com.android.server.NetworkManagementService: void monitor()>','<com.android.server.am.ActivityStack: void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)>','<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.CellLocation getCellLocation()>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$DcActivatingState access$1000(com.android.internal.telephony.DataConnection)>','<android.content.ISyncContext$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>','<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addSpeedStepTimes(long[])>','<com.android.internal.telephony.cat.Input: void <clinit>()>','<com.android.internal.telephony.gsm.GSMPhone: void switchHoldingAndActive()>','<android.webkit.WebViewClassic$OnTrimMemoryListener: void onTrimMemory(int)>','<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebViewCore: void removeMessages(int)>','<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>','<android.os.StrictMode$InstanceCountViolation: void <init>(java.lang.Class,long,int)>','<com.android.ex.variablespeed.EngineParameters: int getDecodeBufferMaxSize()>','<com.android.internal.telephony.test.ModelInterpreter: void print(java.lang.String)>','<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccCard getIccCard()>','<android.animation.LayoutTransition: void setDuration(int,long)>','<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean)>','<android.webkit.WebIconDatabaseClassic: void releaseIconForPageUrl(java.lang.String)>','<android.view.IWindow$Stub$Proxy: void windowFocusChanged(boolean,boolean)>','<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>','<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.database.SortCursor$1: void onChanged()>','<android.net.wifi.WifiWatchdogStateMachine: int access$3900(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccCard getIccCard()>','<android.net.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration syncGetWifiApConfiguration()>','<android.app.SearchManager: java.util.List getGlobalSearchActivities()>','<com.android.internal.policy.impl.PatternUnlockScreen: void cleanUp()>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>','<android.net.wifi.WifiStateTracker: android.os.Handler access$500(android.net.wifi.WifiStateTracker)>','<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>','<android.location.ILocationListener$Stub$Proxy: void onProviderDisabled(java.lang.String)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>','<android.app.IThumbnailRetriever$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.TextView: void setHint(java.lang.CharSequence)>','<android.bluetooth.BluetoothPbap: void close()>','<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>','<android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>','<android.view.View$12: void setValue(android.view.View,float)>','<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)>','<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>','<android.graphics.Region$Op: android.graphics.Region$Op[] values()>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector scrollable(boolean)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getDiscoverableTimeout()>','<com.android.server.NativeDaemonConnectorException: int getCode()>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getAddressLine2()>','<android.webkit.WebViewClassic: android.graphics.Paint access$7400(android.webkit.WebViewClassic)>','<android.app.ITransientNotification$Stub$Proxy: android.os.IBinder asBinder()>','<android.filterfw.core.Filter: java.lang.String toString()>','<com.android.internal.policy.impl.PhoneWindowManager: void access$100(com.android.internal.policy.impl.PhoneWindowManager)>','<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)>','<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>','<com.android.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>','<android.view.Surface: void setPosition(int,int)>','<com.android.server.PowerManagerService$SettingsObserver: void update(java.util.Observable,java.lang.Object)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: boolean processMessage(android.os.Message)>','<android.view.KeyEvent: boolean isSystem()>','<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>','<android.util.LruCache: int putCount()>','<android.net.wifi.IWifiManager$Stub$Proxy: boolean removeNetwork(int)>','<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>','<android.webkit.HTML5VideoFullScreen$1: void surfaceDestroyed(android.view.SurfaceHolder)>','<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel access$102(android.net.MobileDataStateTracker,com.android.internal.util.AsyncChannel)>','<android.view.accessibility.AccessibilityNodeInfo: void setSealed(boolean)>','<android.media.Ringtone: void setTitle(java.lang.String)>','<com.android.internal.telephony.cdma.sms.BearerData: com.android.internal.telephony.SmsMessageBase$TextEncodingDetails calcTextEncodingDetails(java.lang.CharSequence,boolean)>','<android.security.IKeyChainService$Stub$Proxy: boolean deleteCaCertificate(java.lang.String)>','<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>','<android.net.http.HttpsConnection: void closeConnection()>','<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)>','<android.server.BluetoothEventLoop: java.util.HashMap getPasskeyAgentRequestData()>','<com.android.internal.widget.multiwaveview.Tweener: void <clinit>()>','<android.text.Selection$START: void <init>(android.text.Selection$1)>','<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneType()>','<android.net.LocalSocketImpl: java.lang.Object access$500(android.net.LocalSocketImpl)>','<android.app.ActivityThread$1: void <init>(android.app.ActivityThread)>','<com.android.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()>','<android.webkit.Plugin: void dispatchClickEvent(android.content.Context)>','<android.bluetooth.BluetoothSocket: int write(byte[],int,int)>','<android.webkit.SearchBoxImpl: void setQuery(java.lang.String)>','<com.android.internal.telephony.CallManager: void <clinit>()>','<android.widget.TextView: void setLineSpacing(float,float)>','<com.android.internal.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)>','<android.widget.AdapterViewAnimator: void showNext()>','<android.widget.EdgeEffect: void onAbsorb(int)>','<android.os.UEventObserver: void <init>()>','<com.android.internal.telephony.sip.SipCommandInterface: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>','<android.webkit.WebViewClassic: int access$100(android.webkit.WebViewClassic)>','<android.webkit.WebViewCore$EventHub: android.os.Looper getWebKitLooper()>','<android.view.inputmethod.InputMethodManager$H: void handleMessage(android.os.Message)>','<android.content.IntentFilter$MalformedMimeTypeException: void <init>()>','<android.widget.ListPopupWindow$1: void run()>','<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>','<android.net.wifi.WifiConfigStore$DelayedDiskWrite$1: void <init>(java.util.List)>','<com.android.server.EventLogTags: void writeRestorePackage(java.lang.String,int)>','<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>','<com.android.internal.util.FastXmlSerializer: int getDepth()>','<android.view.ViewGroup$ChildListForAccessibility: int getChildCount()>','<com.android.internal.telephony.AdnRecord: boolean hasExtendedRecord()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumLength(android.content.ComponentName)>','<android.os.StrictMode: java.lang.ThreadLocal access$2200()>','<com.android.server.WifiService: void initializeMulticastFiltering()>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: int computeCurrentCountLocked()>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>','<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>','<android.webkit.CookieManager: boolean allowFileSchemeCookiesImpl()>','<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>','<android.media.effect.FilterGraphEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class)>','<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>','<android.view.View: void setPivotX(float)>','<com.android.internal.policy.impl.GlobalActions$1: boolean showDuringKeyguard()>','<android.content.res.XmlBlock$Parser: boolean getAttributeBooleanValue(int,boolean)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid: void enter()>','<android.opengl.GLLogWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>','<android.database.sqlite.SQLiteDatabase: int getVersion()>','<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>','<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.method.PasswordTransformationMethod: void <clinit>()>','<android.app.ContextImpl$3: void <init>()>','<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()>','<android.app.ActivityThread: void access$600(android.app.ActivityThread,android.app.ActivityThread$ActivityClientRecord,android.content.Intent)>','<com.android.server.ConnectivityService: boolean protectVpn(android.os.ParcelFileDescriptor)>','<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getLastCallFailCause(android.os.Message)>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isServiceCodeCallBarring(java.lang.String)>','<android.view.textservice.TextInfo$1: void <init>()>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getRingingCall()>','<android.os.storage.StorageManager$ListenerDelegate$1: void <init>(android.os.storage.StorageManager$ListenerDelegate,android.os.Looper,android.os.storage.StorageManager)>','<android.view.DragEvent: boolean getResult()>','<android.webkit.HTML5VideoView: void seekTo(int)>','<android.net.wifi.WifiConfigStore: boolean enableNetwork(int,boolean)>','<android.view.ViewRootImpl: void doTraversal()>','<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>','<android.net.wifi.IWifiManager$Stub: android.net.wifi.IWifiManager asInterface(android.os.IBinder)>','<android.view.ViewGroup: void access$500(android.graphics.Canvas,int,int,int,int,int)>','<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>','<com.android.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>','<android.app.ContextImpl$34: java.lang.Object createService(android.app.ContextImpl)>','<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewCore$PostUrlData: void <init>()>','<android.nfc.INfcAdapter$Stub: android.nfc.INfcAdapter asInterface(android.os.IBinder)>','<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>','<android.net.sip.ISipSession$Stub$Proxy: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>','<com.android.internal.policy.impl.GlobalActions: com.android.internal.policy.impl.GlobalActions$MyAdapter access$800(com.android.internal.policy.impl.GlobalActions)>','<android.view.VolumePanel: void postRemoteSliderVisibility(boolean)>','<android.content.res.StringBlock$StyleIDs: int access$302(android.content.res.StringBlock$StyleIDs,int)>','<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>','<android.content.Intent: android.content.Intent setType(java.lang.String)>','<android.net.nsd.DnsSdTxtRecord: int hashCode()>','<android.filterfw.core.GLFrame: boolean hasNativeAllocation()>','<com.android.internal.view.IInputConnectionWrapper$MyHandler: void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper)>','<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>','<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>','<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder$Callback[] getCallbacks()>','<com.android.server.sip.SipWakeupTimer$MyEventComparator: int compare(java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyPreciseCallStateChanged()>','<com.android.internal.telephony.RIL: void acceptCall(android.os.Message)>','<android.app.backup.RestoreSession$RestoreObserverWrapper: void <init>(android.app.backup.RestoreSession,android.content.Context,android.app.backup.RestoreObserver)>','<android.content.SyncResult: java.lang.String toDebugString()>','<android.widget.TextView: void removeParcelableSpans(android.text.Spannable,int,int)>','<android.widget.SearchView: void setIconifiedByDefault(boolean)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState$1: void <init>()>','<android.bluetooth.BluetoothHeadset: void close()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState: void exit()>','<android.webkit.WebViewCore: void reachedMaxAppCacheSize(long)>','<android.content.pm.IPackageStatsObserver$Stub: void <init>()>','<android.view.View$AttachInfo$InvalidateInfo: boolean isPooled()>','<android.app.ContextImpl: void startActivities(android.content.Intent[])>','<android.webkit.WebView$PrivateAccess: boolean super_dispatchKeyEvent(android.view.KeyEvent)>','<android.telephony.ServiceState: void setEmergencyOnly(boolean)>','<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewGroup$2: void <init>(android.view.ViewGroup)>','<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>','<android.widget.TextView: void invalidateRegion(int,int,boolean)>','<android.preference.Preference: void setEnabled(boolean)>','<android.app.IProcessObserver$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.input.InputManagerService: void access$600(com.android.server.input.InputManagerService)>','<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String)>','<com.android.internal.view.BaseSurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>','<android.webkit.SearchBoxImpl: void handleIsSupportedCallback(boolean)>','<com.android.server.am.ActivityManagerService$AppDeathRecipient: void binderDied()>','<android.bluetooth.BluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.location.Location: void setExtras(android.os.Bundle)>','<android.app.admin.DeviceAdminInfo: void <clinit>()>','<android.graphics.Rect$1: android.graphics.Rect[] newArray(int)>','<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.server.wm.Session: void windowRemovedLocked()>','<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)>','<android.view.KeyCharacterMap: boolean isPrintingKey(int)>','<android.net.wifi.WifiStateMachine: void access$2300(android.net.wifi.WifiStateMachine,int)>','<android.webkit.WebView$PrivateAccess: void overScrollBy(int,int,int,int,int,int,int,int,boolean)>','<android.view.GLES20Canvas: int getMaximumBitmapWidth()>','<android.webkit.CallbackProxy: void onReceivedHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.webkit.WebStorageClassic: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>','<android.renderscript.RenderScript: int nAllocationCreateBitmapRef(int,android.graphics.Bitmap)>','<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()>','<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()>','<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void unregisterForSubscriptionInfoReady(android.os.Handler)>','<android.content.IntentFilter: void <init>()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentGprsState()>','<com.android.uiautomator.core.UiAutomatorBridge: void <init>()>','<com.android.server.PowerManagerService: void enforceWakeSourcePermission(int,int)>','<android.view.SurfaceView$1: void <init>(android.view.SurfaceView)>','<android.widget.AdapterView: void selectionChanged()>','<com.android.server.LocationManagerService$ProximityAlert: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.internal.telephony.OperatorInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.NetworkManagementService: void stopAccessPoint(java.lang.String)>','<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>','<android.webkit.WebSettings: void setAllowFileAccess(boolean)>','<android.media.RemoteControlClient: android.media.IRemoteControlClient getIRemoteControlClient()>','<android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>','<android.graphics.drawable.StateListDrawable: int getStateCount()>','<android.text.DynamicLayout: void access$000(android.text.DynamicLayout,java.lang.CharSequence,int,int,int)>','<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>','<com.android.vcard.VCardConfig: boolean showPerformanceLog()>','<com.android.internal.policy.impl.SimUnlockScreen: void onAttachedToWindow()>','<com.android.server.WifiService: void access$1400(com.android.server.WifiService)>','<android.net.MobileDataStateTracker: android.net.LinkProperties access$600(android.net.MobileDataStateTracker)>','<android.os.RemoteCallback$RemoteCallbackProxy: void onResult(android.os.Bundle)>','<android.provider.Downloads$Impl: boolean isNotificationToBeDisplayed(int)>','<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)>','<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()>','<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)>','<com.android.internal.telephony.IntRangeManager$IntRange: void <init>(com.android.internal.telephony.IntRangeManager,com.android.internal.telephony.IntRangeManager$IntRange,int)>','<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int)>','<android.util.Log: int wtf(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cat.Duration: void <clinit>()>','<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.os.storage.IMountService$Stub$Proxy: int renameSecureContainer(java.lang.String,java.lang.String)>','<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants)>','<android.app.ActivityManager$MemoryInfo: void writeToParcel(android.os.Parcel,int)>','<android.net.DhcpInfoInternal: java.util.Collection getRoutes()>','<com.android.internal.telephony.RIL: void sendDtmf(char,android.os.Message)>','<android.view.ViewRootImpl: void terminateHardwareResources()>','<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupOrAddHostLocked(int,java.lang.String,int)>','<android.os.storage.IObbActionListener$Stub$Proxy: void onObbResult(java.lang.String,int,int)>','<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: int getCount()>','<com.android.internal.telephony.AdnRecordLoader: void loadAllFromEF(int,int,android.os.Message)>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnNumber()>','<android.content.Loader$ForceLoadContentObserver: void onChange(boolean)>','<com.android.internal.telephony.gsm.GSMPhone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>','<android.os.AsyncTask: void onPostExecute(java.lang.Object)>','<android.graphics.drawable.Drawable: int getIntrinsicWidth()>','<android.webkit.WebSettings: java.lang.String getUserAgentString()>','<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void setSelectedText(java.lang.CharSequence,int)>','<android.content.ClipboardManager: void <init>(android.content.Context,android.os.Handler)>','<android.webkit.DeviceMotionService: void suspend()>','<com.android.internal.widget.TransportControlView: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.widget.PointerLocationView$PointerState: float access$1002(com.android.internal.widget.PointerLocationView$PointerState,float)>','<android.os.StrictMode$ViolationInfo: void <init>(android.os.Parcel)>','<android.server.BluetoothService: int getInputDeviceConnectionState(android.bluetooth.BluetoothDevice)>','<android.webkit.WebViewClassic$InvokeListBox: android.webkit.WebViewClassic$InvokeListBox$Container[] access$7700(android.webkit.WebViewClassic$InvokeListBox)>','<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)>','<android.filterfw.core.FrameManager: void setContext(android.filterfw.core.FilterContext)>','<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,int)>','<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)>','<android.widget.TextView: boolean hasOverlappingRendering()>','<android.bluetooth.BluetoothDeviceProfileState: void access$7900(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.provider.ContactsContract$Intents$Insert: void <init>()>','<com.android.internal.policy.impl.GlobalActions$7: void <init>(com.android.internal.policy.impl.GlobalActions)>','<com.android.server.pm.PackageManagerService: void access$4000(com.android.server.pm.PackageManagerService,boolean,java.util.ArrayList,int[],android.content.IIntentReceiver)>','<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>','<android.content.ComponentName: java.lang.String getClassName()>','<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>','<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>','<android.widget.TextView: int getAccessibilityCursorPosition()>','<android.webkit.WebSettingsClassic: int getMinimumFontSize()>','<android.content.res.StringBlock$StyleIDs: int access$700(android.content.res.StringBlock$StyleIDs)>','<com.android.ex.variablespeed.VariableSpeed: void pause()>','<android.os.Build$VERSION_CODES: void <init>()>','<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)>','<android.view.ViewGroup: boolean hasFocusable()>','<android.net.wifi.WifiStateMachine: void access$16700(android.net.wifi.WifiStateMachine,android.os.Message)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$3: void <clinit>()>','<android.renderscript.BaseObj: int hashCode()>','<android.preference.PreferenceScreen$SavedState: void <clinit>()>','<android.webkit.ZoomManager: float access$1300(android.webkit.ZoomManager)>','<android.net.wifi.WifiApConfigStore: com.android.internal.util.State access$200(android.net.wifi.WifiApConfigStore)>','<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>','<com.android.internal.policy.impl.AccountUnlockScreen: void onTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.internal.telephony.CallManager: void switchHoldingAndActive(com.android.internal.telephony.Call)>','<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: android.view.View getView()>','<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>','<android.media.IAudioService$Stub$Proxy: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>','<com.android.server.pm.PackageManagerService: void access$1600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>','<android.app.Fragment$SavedState$1: android.app.Fragment$SavedState[] newArray(int)>','<com.android.internal.telephony.gsm.SIMFileHandler: void loge(java.lang.String)>','<android.renderscript.RenderScript: int nSamplerCreate(int,int,int,int,int,float)>','<com.android.internal.app.ActionBarImpl: int access$300(com.android.internal.app.ActionBarImpl)>','<android.text.style.StyleSpan: int getStyle()>','<com.android.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>','<android.view.View: boolean removeCallbacks(java.lang.Runnable)>','<com.android.internal.policy.impl.AccountUnlockScreen: android.widget.EditText access$400(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.view.DragEvent: java.lang.String toString()>','<android.content.pm.PackageParser$Permission: void <init>(android.content.pm.PackageParser$Package)>','<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>','<com.android.server.WifiService$WifiStateMachineHandler: void <init>(com.android.server.WifiService,android.os.Looper)>','<com.android.internal.widget.DigitalClock: void onFinishInflate()>','<android.app.Activity: android.content.Intent getParentActivityIntent()>','<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>','<android.widget.TextView: void endBatchEdit()>','<android.util.Base64: byte[] encode(byte[],int)>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void <init>(com.android.internal.telephony.cdma.CDMAPhone,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>','<android.graphics.BitmapFactory$Options: void <init>()>','<android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>','<android.hardware.input.InputManager: int[] getInputDeviceIds()>','<com.android.server.AppWidgetServiceImpl: void unbindRemoteViewsService(int,android.content.Intent)>','<android.server.search.Searchables: void <clinit>()>','<com.android.internal.telephony.sip.SipPhone: boolean canTransfer()>','<android.view.ViewGroup: void measureChildren(int,int)>','<android.widget.AbsListView: void jumpDrawablesToCurrentState()>','<com.android.server.connectivity.Tethering: java.lang.String[] access$3700(com.android.server.connectivity.Tethering)>','<android.net.wifi.WifiStateMachine: void access$6000(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>','<android.webkit.WebViewClassic$Factory: android.webkit.WebViewDatabase getWebViewDatabase(android.content.Context)>','<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getDriverCalls()>','<com.android.internal.telephony.sip.SipCommandInterface: void rejectCall(android.os.Message)>','<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>','<android.hardware.Camera$Parameters: float getExposureCompensationStep()>','<com.android.internal.widget.TransportControlView: int access$002(com.android.internal.widget.TransportControlView,int)>','<android.view.accessibility.AccessibilityRecord: boolean isScrollable()>','<android.view.FocusFinder$SequentialFocusComparator: int compare(java.lang.Object,java.lang.Object)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasItalianLeadingZero()>','<com.android.internal.view.menu.ActionMenuItemView: void onMeasure(int,int)>','<android.net.Uri: boolean equals(java.lang.Object)>','<android.webkit.WebViewClassic: int computeVerticalScrollExtent()>','<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>','<android.view.GLES20RecordingCanvas: void drawPath(android.graphics.Path,android.graphics.Paint)>','<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>','<android.app.AlertDialog: void <init>(android.content.Context)>','<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>','<com.android.server.location.GpsLocationProvider: long getStatusUpdateTime()>','<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater$Factory2)>','<android.view.View$ListenerInfo: java.util.concurrent.CopyOnWriteArrayList access$100(android.view.View$ListenerInfo)>','<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()>','<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getLine1Number()>','<android.content.SyncStorageEngine: android.util.Pair getBackoff(android.accounts.Account,int,java.lang.String)>','<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)>','<com.android.internal.policy.impl.PhoneWindowManager: void updateSettings()>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onError(com.android.internal.telephony.Connection$DisconnectCause)>','<android.app.BackStackState$1: android.app.BackStackState[] newArray(int)>','<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>','<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>','<android.preference.Preference: void setOrder(int)>','<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>','<android.net.wifi.WifiStateMachine: void setHighPerfModeEnabled(boolean)>','<android.app.IProcessObserver$Stub$Proxy: void onForegroundActivitiesChanged(int,int,boolean)>','<android.graphics.Matrix$1: boolean preRotate(float,float,float)>','<android.media.ToneGenerator: void <init>(int,int)>','<android.telephony.ServiceState: int getCdmaEriIconIndex()>','<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>','<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(boolean,int)>','<com.android.internal.statusbar.StatusBarIconList: void writeToParcel(android.os.Parcel,int)>','<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectHeadset(java.lang.String)>','<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>','<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>','<android.webkit.WebSettingsClassic: void setBlockNetworkImage(boolean)>','<com.android.server.PowerManagerService: void clearUserActivityTimeout(long,long)>','<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>','<android.webkit.HTML5VideoFullScreen$4: void <init>(android.webkit.HTML5VideoFullScreen)>','<android.view.View: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager$1: void <init>(com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager,com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager$Data)>','<android.os.Messenger: int describeContents()>','<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$400(android.net.sip.SipAudioCall,java.lang.String)>','<android.widget.Editor$ActionPopupWindow: int getTextOffset()>','<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>','<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[],java.util.List)>','<android.app.ITransientNotification$Stub$Proxy: void hide()>','<android.provider.MediaStore$Audio$Playlists$Members: void <init>()>','<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>','<android.app.ProgressDialog: android.widget.TextView access$400(android.app.ProgressDialog)>','<android.filterfw.geometry.Point: boolean IsInUnitRange()>','<android.view.animation.Animation: boolean getFillBefore()>','<android.location.GpsStatus: void setStatus(android.location.GpsStatus)>','<android.view.textservice.SpellCheckerSession: void cancel()>','<android.opengl.GLLogWrapper: void glDeleteTextures(int,int[],int)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: java.lang.String access$1502(android.server.BluetoothHealthProfileHandler$HealthChannel,java.lang.String)>','<com.android.internal.telephony.DriverCall: int presentationFromCLIP(int)>','<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()>','<android.hardware.usb.IUsbManager$Stub$Proxy: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<android.app.ApplicationPackageManager: void <clinit>()>','<com.android.server.PowerManagerService$UnsynchronizedWakeLock: void release()>','<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>','<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>','<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>','<com.android.internal.policy.impl.FaceUnlock: void cleanUp()>','<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>','<android.text.method.ScrollingMovementMethod: void <init>()>','<com.android.internal.view.menu.ActionMenuItem: boolean isEnabled()>','<android.bluetooth.BluetoothSocket: int available()>','<android.app.Fragment: void registerForContextMenu(android.view.View)>','<android.filterfw.core.SyncRunner: void stop()>','<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)>','<android.os.ParcelUuid: void <init>(java.util.UUID)>','<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>','<android.view.View$ListenerInfo: android.view.View$OnTouchListener access$302(android.view.View$ListenerInfo,android.view.View$OnTouchListener)>','<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail()>','<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>','<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>','<android.net.LocalServerSocket: void close()>','<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>','<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$800(com.android.server.connectivity.Tethering$TetherInterfaceSM,boolean)>','<com.android.internal.view.menu.MenuBuilder: boolean isQwertyMode()>','<android.net.wifi.WifiApConfigStore: void loadApConfiguration()>','<android.content.pm.RegisteredServicesCache$2: void run()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse$Status: java.lang.String toString(int)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector patternBuilder(com.android.uiautomator.core.UiSelector)>','<android.widget.TextView$CharWrapper: char charAt(int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean switchKeyboardLayout(int)>','<com.android.server.MountService: int formatVolume(java.lang.String)>','<android.os.Parcel: void writeFloatArray(float[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7700(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,int)>','<android.view.WindowManager$LayoutParams: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$PbapServiceListener access$4502(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$PbapServiceListener)>','<android.content.pm.ContainerEncryptionParams: void <init>(android.os.Parcel,android.content.pm.ContainerEncryptionParams$1)>','<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()>','<android.view.AccessibilityInteractionController: boolean access$300(android.view.AccessibilityInteractionController,android.view.View)>','<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>','<com.android.server.MountService$ObbAction: void sendNewStatusOrIgnore(int)>','<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>','<android.webkit.WebSettingsClassic: void setDoubleTapToastCount(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForSubscriptionInfoReady(android.os.Handler)>','<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int)>','<com.android.server.MountService$UnmountCallBack: void handleFinished()>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>','<android.os.AsyncTask$3: void <init>(android.os.AsyncTask,java.util.concurrent.Callable)>','<android.database.CursorWindow: boolean isNull(int,int)>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.AppInterface$CommandType getCmdType()>','<android.webkit.KeyStoreHandler: void didReceiveData(byte[],int)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void data(byte[],int)>','<com.android.internal.telephony.PhoneBase: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>','<android.webkit.ConsoleMessage$MessageLevel: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getUserTime(int)>','<android.animation.LayoutTransition$1: boolean onPreDraw()>','<com.android.server.NetworkManagementService: boolean isTetheringStarted()>','<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()>','<android.accounts.AccountManager$Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>','<android.webkit.WebViewClassic: void loadViewState(java.io.InputStream)>','<com.android.server.NotificationManagerService: int access$200(com.android.server.NotificationManagerService)>','<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)>','<android.content.pm.RegisteredServicesCache: void close()>','<android.view.GLES20DisplayList: void setRight(int)>','<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>','<android.view.View: void getDrawingRect(android.graphics.Rect)>','<android.content.pm.RegisteredServicesCache: void generateServicesMap()>','<android.webkit.WebViewClassic: boolean access$6700(android.webkit.WebViewClassic)>','<android.bluetooth.BluetoothDevice: boolean createBondOutOfBand(byte[],byte[])>','<android.filterfw.core.Filter: void tearDown(android.filterfw.core.FilterContext)>','<android.media.RemoteControlClient: void access$1400(android.media.RemoteControlClient)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>','<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>','<com.android.server.am.ActivityManagerService$11: void run()>','<android.net.NetworkStatsHistory: int describeContents()>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$2002(android.media.AudioService$VolumeStreamState$VolumeDeathHandler,int)>','<android.accounts.AccountManagerService: void access$000(android.accounts.AccountManagerService)>','<android.webkit.ByteArrayBuilder: java.util.LinkedList access$000()>','<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>','<android.accounts.AccountManagerService: android.content.Context access$1500(android.accounts.AccountManagerService)>','<android.webkit.BrowserFrame$2$1: void run()>','<android.net.http.AndroidHttpClient: void enableCurlLogging(java.lang.String,int)>','<android.net.nsd.NsdServiceInfo$1: android.net.nsd.NsdServiceInfo createFromParcel(android.os.Parcel)>','<android.webkit.CallbackProxy: void setDownloadListener(android.webkit.DownloadListener)>','<android.view.InputEvent: int describeContents()>','<com.android.internal.widget.PointerLocationView$PointerState: float[] access$400(com.android.internal.widget.PointerLocationView$PointerState)>','<android.webkit.WebSettings: void setAppCacheMaxSize(long)>','<android.net.wifi.WifiStateMachine: boolean access$1000(android.net.wifi.WifiStateMachine)>','<android.widget.AbsListView: int getTopPaddingOffset()>','<android.net.NetworkStats: int findIndexHinted(java.lang.String,int,int,int,int)>','<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady access$300(com.android.internal.telephony.cat.RilMessageDecoder)>','<com.android.server.wm.WindowManagerService: android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String)>','<com.android.server.wm.BlackFrame: void clearMatrix()>','<android.net.LinkProperties: java.util.Collection getLinkAddresses()>','<android.location.ILocationManager$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)>','<android.text.method.DateKeyListener: char[] getAcceptedChars()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: void <init>()>','<android.location.IGpsStatusProvider$Stub$Proxy: void removeGpsStatusListener(android.location.IGpsStatusListener)>','<android.content.ContentProviderProxy: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>','<com.android.server.net.NetworkStatsService$2: void <init>(com.android.server.net.NetworkStatsService)>','<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>','<android.widget.PopupWindow: void setLayoutInsetDecor(boolean)>','<android.media.effect.EffectFactory: boolean isEffectSupported(java.lang.String)>','<android.view.View: int[] onCreateDrawableState(int)>','<android.widget.ZoomButtonsController: void setZoomSpeed(long)>','<android.filterfw.core.FrameFormat: int getDimension(int)>','<android.opengl.GLLogWrapper: void glClearDepthf(float)>','<com.android.internal.telephony.RILRequest: void <clinit>()>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>','<android.hardware.usb.UsbInterface$1: android.hardware.usb.UsbInterface createFromParcel(android.os.Parcel)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>','<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>','<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setTextAfterCursor(java.lang.CharSequence,int)>','<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>','<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.os.IPowerManager,android.net.INetworkStatsService,android.os.INetworkManagementService,android.util.TrustedTime,java.io.File,boolean)>','<android.net.sip.ISipService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>','<android.webkit.WebView: int computeVerticalScrollOffset()>','<android.media.Ringtone: int getStreamType()>','<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>','<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()>','<android.renderscript.RenderScript$MessageThread: void run()>','<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>','<android.widget.CompoundButton$SavedState: void <init>(android.os.Parcel,android.widget.CompoundButton$1)>','<android.content.Intent: java.lang.String getType()>','<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>','<com.android.internal.telephony.PhoneSubInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.SmsMessageBase: void extractEmailAddressFromMessageBody()>','<android.view.MotionEvent$PointerCoords: void copyFrom(android.view.MotionEvent$PointerCoords)>','<android.widget.TextView: void setImeOptions(int)>','<com.android.internal.telephony.ISms$Stub: void <init>()>','<android.net.wifi.WifiStateMachine: android.os.Message access$15300(android.net.wifi.WifiStateMachine)>','<android.view.View: void scrollTo(int,int)>','<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>','<com.android.internal.view.IInputConnectionWrapper: void endBatchEdit()>','<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>','<android.content.ContentProvider: void setWritePermission(java.lang.String)>','<android.location.Address: android.os.Bundle getExtras()>','<com.android.server.PreferredComponent: boolean sameSet(java.util.List,int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void parseSidNid(java.lang.String,java.lang.String)>','<com.android.internal.telephony.RetryManager: boolean configure(int,int,int)>','<com.android.internal.telephony.cat.RilMessageDecoder: void <clinit>()>','<android.graphics.drawable.Drawable: int getIntrinsicHeight()>','<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>','<android.webkit.ConsoleMessage$MessageLevel: android.webkit.ConsoleMessage$MessageLevel valueOf(java.lang.String)>','<com.android.server.am.ActivityStack$1: void <init>(com.android.server.am.ActivityStack)>','<com.android.server.wm.WindowManagerService$AnimationRunnable: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.WindowManagerService$1)>','<android.net.arp.ArpPeer: byte[] doArp(int)>','<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setActivePasswordState(int,int,int,int,int,int,int,int)>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)>','<com.android.internal.telephony.cdma.CDMAPhone: boolean getDataRoamingEnabled()>','<android.view.ViewRootImpl: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>','<android.view.ViewRootImpl: void requestFitSystemWindows()>','<android.widget.ZoomButtonsController$2: void handleMessage(android.os.Message)>','<com.android.server.wm.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)>','<android.content.res.AssetManager$AssetInputStream: int getAssetInt()>','<android.text.format.Time: java.lang.String getCurrentTimezone()>','<com.android.server.ConnectivityService: android.net.ProxyProperties getProxy()>','<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean canConference()>','<android.widget.CursorAdapter: boolean hasStableIds()>','<android.view.ViewGroup$TouchTarget: void <clinit>()>','<android.widget.AbsListView: int getCacheColorHint()>','<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()>','<android.widget.AutoCompleteTextView: int getDropDownWidth()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void restartDataStallAlarm()>','<android.os.StrictMode$Span: java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String)>','<android.renderscript.RenderScript: void finish()>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>','<android.net.LinkAddress: boolean equals(java.lang.Object)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$3: void onChange(boolean)>','<android.net.wifi.WifiWatchdogStateMachine: void access$4400(android.net.wifi.WifiWatchdogStateMachine)>','<android.widget.AbsListView$MultiChoiceModeWrapper: void <init>(android.widget.AbsListView)>','<android.app.ActivityManagerProxy: long[] getProcessPss(int[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$2: void onClick(android.content.DialogInterface,int)>','<android.opengl.GLLogWrapper: void glShadeModel(int)>','<android.widget.AutoCompleteTextView: int getDropDownAnchor()>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Call getRingingCall()>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPuk(java.lang.String,java.lang.String,android.os.Message)>','<com.android.internal.os.LoggingPrintStream: void print(boolean)>','<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>','<android.text.TextLine: void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops)>','<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>','<android.view.View: boolean performLongClick()>','<com.android.vcard.VCardParser_V40: void <init>()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState: void enter()>','<android.webkit.WebViewClassic: java.lang.String findAddress(java.lang.String,boolean)>','<android.webkit.WebSettings$ZoomDensity: android.webkit.WebSettings$ZoomDensity[] values()>','<android.view.accessibility.AccessibilityRecord: int getFromIndex()>','<android.widget.RemoteViews$SetDrawableParameters: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.IccCard: boolean access$502(com.android.internal.telephony.IccCard,boolean)>','<com.android.server.WifiService: void addToBlacklist(java.lang.String)>','<android.app.IActivityController$Stub: void <init>()>','<android.renderscript.RenderScript: int nFontCreateFromAsset(android.content.res.AssetManager,java.lang.String,float,int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToNextInputMethod(android.os.IBinder,boolean)>','<com.android.internal.telephony.cat.CatCmdMessage: int describeContents()>','<android.widget.TextView$SavedState$1: android.widget.TextView$SavedState[] newArray(int)>','<android.webkit.WebCoreThreadWatchdog$1: void <init>(android.webkit.WebCoreThreadWatchdog)>','<android.webkit.WebViewClassic: void deleteSelection(int,int)>','<android.net.wifi.WifiStateMachine$DriverUnloadingState$1: void run()>','<com.android.internal.view.menu.ActionMenuView: boolean isExpandedFormat()>','<android.os.PowerManager$WakeLock: void acquire()>','<com.android.server.BatteryService: int getBatteryLevel()>','<com.android.internal.widget.ActionBarView$HomeView: void onMeasure(int,int)>','<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager$DiscoveryListener)>','<android.view.View: boolean setFrame(int,int,int,int)>','<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>','<com.android.server.net.NetworkPolicyManagerService$XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getCallId()>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onBackupPackage(java.lang.String)>','<com.android.internal.telephony.sip.SipConnectionBase: void proceedAfterWildChar(java.lang.String)>','<android.app.ActivityThread$UpdateCompatibilityData: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyDisconnect(com.android.internal.telephony.Connection)>','<android.media.MediaRouter: void systemVolumeChanged(int)>','<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>','<android.webkit.WebSettingsClassic$EventHandler$1: void handleMessage(android.os.Message)>','<com.android.server.wm.WindowManagerService: android.view.InputChannel monitorInput(java.lang.String)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void disable(int,android.os.IBinder,java.lang.String)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setCustomView(int)>','<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>','<com.android.internal.statusbar.IStatusBar$Stub$Proxy: void preloadRecentApps()>','<android.provider.ContactsContract$Directory: void <clinit>()>','<android.net.IThrottleManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.os.Parcel: void writeFloat(float)>','<android.net.wifi.WifiInfo: void setMacAddress(java.lang.String)>','<android.telephony.SmsCbMessage: java.lang.String toString()>','<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>','<android.view.View: void onDetachedFromWindow()>','<android.view.ViewGroup: void dispatchSetActivated(boolean)>','<android.view.inputmethod.InputBinding: void <clinit>()>','<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyLog()>','<android.content.res.Configuration: void setTo(android.content.res.Configuration)>','<com.android.server.pm.PackageSettingBase: void init(java.io.File,java.io.File,java.lang.String,int)>','<com.android.internal.content.PackageHelper: boolean renameSdDir(java.lang.String,java.lang.String)>','<android.graphics.Rect: void <init>(android.graphics.Rect)>','<com.android.internal.telephony.cat.TextMessage$1: void <init>()>','<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.internal.telephony.Call: long getEarliestConnectTime()>','<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,boolean,java.lang.String,android.os.ParcelFileDescriptor)>','<android.webkit.WebViewCore$BaseUrlData: void <init>()>','<com.android.server.NetworkManagementService: void flushInterfaceDnsCache(java.lang.String)>','<com.android.internal.telephony.UUSInfo: void setUserData(byte[])>','<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>','<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.inputmethodservice.IInputMethodSessionWrapper: void dispatchKeyEvent(int,android.view.KeyEvent,com.android.internal.view.IInputMethodCallback)>','<com.android.internal.telephony.RILRequest: void resetSerial()>','<com.android.server.usb.UsbDeviceManager: boolean access$1800(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.policy.impl.PhoneWindowManager$17: void run()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean rotationHasCompatibleMetricsLw(int,int)>','<com.android.internal.widget.ActionBarContextView: boolean hideOverflowMenu()>','<android.accounts.AccountManagerService$2: void <init>(android.accounts.AccountManagerService)>','<android.webkit.WebViewClassic: boolean canGoBackOrForward(int)>','<android.content.pm.IPackageDataObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.PhoneProxy: void unregisterForSubscriptionInfoReady(android.os.Handler)>','<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()>','<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.RouteInfo: java.net.InetAddress getGateway()>','<com.android.internal.telephony.gsm.SIMFileHandler: java.lang.String getEFPath(int)>','<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>','<android.text.method.SingleLineTransformationMethod: void <clinit>()>','<android.graphics.Picture$RecordingCanvas: void drawPicture(android.graphics.Picture)>','<android.widget.ScrollView: void setFillViewport(boolean)>','<android.database.sqlite.SQLiteGlobal: void <clinit>()>','<android.net.sip.SipSessionAdapter: void onCallBusy(android.net.sip.ISipSession)>','<android.app.backup.BackupManager: void <init>(android.content.Context)>','<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>','<com.android.internal.telephony.PhoneBase: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>','<android.net.INetworkPolicyManager$Stub$Proxy: void setAppPolicy(int,int)>','<android.text.TextDirectionHeuristics: void <init>()>','<android.bluetooth.BluetoothTetheringDataTracker: void setPolicyDataEnable(boolean)>','<android.util.PrintWriterPrinter: void println(java.lang.String)>','<android.content.SyncAdapterType: int hashCode()>','<android.view.ViewRootImpl: void invalidate()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallEnded(android.net.sip.ISipSession)>','<android.view.GLES20Canvas: int getMaximumBitmapHeight()>','<android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState)>','<com.android.internal.os.BatteryStatsImpl$Counter: void plug(long,long)>','<android.widget.FrameLayout: void draw(android.graphics.Canvas)>','<com.android.server.MountService: java.lang.String getSecureContainerPath(java.lang.String)>','<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>','<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>','<android.renderscript.RenderScript: void nContextDestroy()>','<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>','<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.telephony.gsm.GsmCellLocation: void <init>()>','<android.net.EthernetDataTracker: android.net.LinkProperties access$500(android.net.EthernetDataTracker)>','<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>','<com.android.internal.telephony.test.ModelInterpreter: java.lang.String[] splitCommands(java.lang.String)>','<com.android.internal.telephony.RIL: void startDtmf(char,android.os.Message)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>','<android.view.View: int resolveSize(int,int)>','<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void observe()>','<android.widget.ImageView$ScaleType: void <clinit>()>','<android.media.MediaRouter$RouteInfo: int getPlaybackStream()>','<com.android.server.am.ServiceRecord: void resetRestartCounter()>','<com.android.internal.widget.ScrollingTabContainerView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.telephony.DataConnection: void increaseRetryCount()>','<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>','<com.android.server.NotificationManagerService: void <init>(android.content.Context,com.android.server.StatusBarManagerService,com.android.server.LightsService)>','<android.app.ActivityManager$RunningServiceInfo$1: void <init>()>','<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>','<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>','<com.android.server.DevicePolicyManagerService: void removeActiveAdminLocked(android.content.ComponentName)>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)>','<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()>','<android.widget.RemoteViewsAdapter: void access$700(android.widget.RemoteViewsAdapter)>','<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>','<android.app.Activity: void overridePendingTransition(int,int)>','<android.test.IsolatedContext: java.io.File getFilesDir()>','<android.net.wifi.p2p.IWifiP2pManager$Stub: android.net.wifi.p2p.IWifiP2pManager asInterface(android.os.IBinder)>','<android.widget.TextView$CharWrapper: void getChars(int,int,char[],int)>','<android.bluetooth.IBluetooth$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()>','<android.net.wifi.p2p.WifiP2pInfo: void <clinit>()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$2508(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.view.ViewRootImpl$W: void <init>(android.view.ViewRootImpl)>','<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>','<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>','<android.view.ViewConfiguration: int getMinimumFlingVelocity()>','<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>','<android.content.SyncManager: android.net.ConnectivityManager access$300(android.content.SyncManager)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.PowerManager$WakeLock access$1100(android.bluetooth.BluetoothDeviceProfileState)>','<android.database.BulkCursorProxy: void close()>','<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)>','<android.text.SpannableStringBuilder: void clearSpans()>','<com.android.internal.telephony.gsm.SIMRecords: void onAllRecordsLoaded()>','<android.animation.Animator: void <init>()>','<com.android.internal.telephony.ApnContext: java.util.ArrayList getWaitingApns()>','<com.android.internal.view.menu.MenuItemImpl: int getItemId()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>','<android.widget.SearchView: boolean isIconfiedByDefault()>','<android.graphics.Paint: void <init>(android.graphics.Paint)>','<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.view.InputBindResult: void writeToParcel(android.os.Parcel,int)>','<com.android.server.location.MockProvider: void updateNetworkState(int,android.net.NetworkInfo)>','<android.media.SoundPool: java.lang.Object access$000(android.media.SoundPool)>','<android.view.View: int computeVerticalScrollExtent()>','<com.android.internal.widget.DrawableHolder: int getHeight()>','<android.widget.Editor$EasyEditPopupWindow: android.text.style.EasyEditSpan access$800(android.widget.Editor$EasyEditPopupWindow)>','<android.text.method.TextKeyListener$NullKeyListener: android.text.method.TextKeyListener$NullKeyListener getInstance()>','<android.webkit.CallbackProxy$2: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>','<com.android.internal.view.menu.ActionMenuItem: com.android.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>','<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>','<android.speech.tts.UtteranceProgressListener: android.speech.tts.UtteranceProgressListener from(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>','<android.animation.AnimatorSet: void setupEndValues()>','<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>','<android.view.SurfaceView: void onAttachedToWindow()>','<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>','<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>','<android.location.Address: void setThoroughfare(java.lang.String)>','<android.os.MemoryFile: java.io.OutputStream getOutputStream()>','<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>','<android.media.AudioService: android.media.SoundPool access$1600(android.media.AudioService)>','<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()>','<android.widget.RelativeLayout$LayoutParams: java.lang.String debug(java.lang.String)>','<android.accessibilityservice.AccessibilityServiceInfo: void <clinit>()>','<android.net.sip.SimpleSessionDescription$Fields: int getBandwidth(java.lang.String)>','<android.widget.RemoteViews$ReflectionActionWithoutParams: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.view.View: boolean dispatchPointerEvent(android.view.MotionEvent)>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmCall)>','<android.app.backup.IBackupManager$Stub$Proxy: void setBackupProvisioned(boolean)>','<android.content.ContextWrapper: java.io.File getExternalCacheDir()>','<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState access$800(com.android.server.NsdService$NsdStateMachine)>','<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>','<android.app.Activity: android.os.IBinder getActivityToken()>','<com.android.internal.widget.IRemoteViewsFactory$Stub: android.os.IBinder asBinder()>','<android.media.MediaRouter$RouteCategory: boolean isGroupable()>','<com.android.internal.os.BatteryStatsImpl: void <init>()>','<android.widget.SearchView$11: void <init>(android.widget.SearchView)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$010(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteStartGps()>','<android.content.IntentFilter$1: android.content.IntentFilter createFromParcel(android.os.Parcel)>','<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>','<android.os.ServiceManagerNative: void <init>()>','<android.net.http.SslCertificate: java.lang.String toString()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupForegroundResumeBackground()>','<com.android.server.input.InputManagerService: void access$400(com.android.server.input.InputManagerService,android.view.InputDevice[])>','<android.view.Surface: void <init>(android.view.SurfaceSession,int,java.lang.String,int,int,int,int,int)>','<com.android.internal.telephony.cat.Tone$1: com.android.internal.telephony.cat.Tone[] newArray(int)>','<android.app.IActivityManager$WaitResult: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.os.BatteryStatsImpl: void readFromParcelLocked(android.os.Parcel)>','<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: java.lang.String toString()>','<android.widget.HorizontalScrollView: void setFillViewport(boolean)>','<android.telephony.CellIdentity: int describeContents()>','<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState access$1400(com.android.server.NsdService$NsdStateMachine)>','<android.webkit.WebSettingsClassic: void setGeolocationEnabled(boolean)>','<com.android.server.am.StrictModeViolationDialog$1: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>','<com.android.internal.location.DummyLocationProvider: void setRequiresSatellite(boolean)>','<com.android.internal.telephony.gsm.SIMRecords: void setVoiceCallForwardingFlag(int,boolean)>','<android.server.BluetoothService$3: void onServiceDisconnected(int)>','<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.accessibilityservice.IAccessibilityServiceConnection asInterface(android.os.IBinder)>','<com.android.internal.telephony.cat.CatService$1: void <clinit>()>','<android.net.wifi.WifiStateMachine: void access$12400(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.view.VolumePanel: int access$200(android.view.VolumePanel)>','<android.webkit.WebViewClassic: int access$3900(android.webkit.WebViewClassic)>','<com.android.internal.telephony.gsm.SIMRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>','<com.android.server.wm.InputMonitor: void setInputFocusLw(com.android.server.wm.WindowState,boolean)>','<com.android.server.pm.PackageManagerService: void access$2900(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$MoveParams,int)>','<android.graphics.drawable.shapes.Shape: void onResize(float,float)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingInvitationState: boolean processMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>','<com.android.server.am.ReceiverList: void dumpLocal(java.io.PrintWriter,java.lang.String)>','<android.graphics.Point: int hashCode()>','<android.content.pm.RegisteredServicesCache$1: void onReceive(android.content.Context,android.content.Intent)>','<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()>','<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>','<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>','<android.app.ActivityManager$RecentTaskInfo$1: android.app.ActivityManager$RecentTaskInfo[] newArray(int)>','<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>','<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>','<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)>','<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>','<android.net.sip.SipAudioCall$Listener: void onCallBusy(android.net.sip.SipAudioCall)>','<com.android.internal.widget.PointerLocationView: void onMeasure(int,int)>','<com.android.server.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>','<com.android.internal.app.AlertController: android.os.Message access$100(com.android.internal.app.AlertController)>','<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)>','<com.android.server.am.StrictModeViolationDialog: com.android.server.am.AppErrorResult access$100(com.android.server.am.StrictModeViolationDialog)>','<android.webkit.CallbackProxy: void onReceivedIcon(android.graphics.Bitmap)>','<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>','<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.bluetooth.BluetoothUuid: boolean isAudioSink(android.os.ParcelUuid)>','<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String,android.text.TextDirectionHeuristic)>','<com.android.uiautomator.core.InteractionController: void setRotationNatural()>','<android.graphics.drawable.Drawable: void invalidateSelf()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()>','<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>','<com.android.server.MountService: boolean access$1000(com.android.server.MountService)>','<android.net.wifi.WifiStateMachine$4: void <init>(android.net.wifi.WifiStateMachine)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: void <init>(android.server.BluetoothHealthProfileHandler,android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,android.os.ParcelFileDescriptor,boolean,java.lang.String)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.bluetooth.BluetoothDevice: java.lang.String getAlias()>','<android.webkit.ZoomManager: float getDefaultScale()>','<android.bluetooth.BluetoothDeviceProfileState: void access$3400(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.util.SynchronizedPool: void release(android.util.Poolable)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addExcessiveCpu(long,long)>','<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>','<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>','<android.content.pm.ActivityInfo$1: android.content.pm.ActivityInfo[] newArray(int)>','<android.os.ServiceManagerNative: android.os.IBinder asBinder()>','<android.app.PendingIntent: int hashCode()>','<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>','<android.location.Address: java.lang.String access$902(android.location.Address,java.lang.String)>','<android.webkit.WebSettingsClassic: void setNavDump(boolean)>','<android.view.IWindowManager$Stub$Proxy: void prepareAppTransition(int,boolean)>','<com.android.internal.policy.impl.LockScreen: boolean onKeyDown(int,android.view.KeyEvent)>','<android.view.View: void buildDrawingCache(boolean)>','<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>','<android.widget.TextView: boolean textCanBeSelected()>','<android.webkit.WebView$PrivateAccess: boolean super_onGenericMotionEvent(android.view.MotionEvent)>','<android.os.Debug: int getThreadExternalAllocCount()>','<android.widget.Editor$EasyEditSpanController$1: void <init>(android.widget.Editor$EasyEditSpanController)>','<com.android.internal.widget.ILockSettings$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.RIL: void setFacilityLock(java.lang.String,boolean,java.lang.String,int,android.os.Message)>','<android.app.AlertDialog$Builder: void <init>(android.content.Context,int)>','<android.text.DynamicLayout$ChangeWatcher: void afterTextChanged(android.text.Editable)>','<android.webkit.ClientCertRequestHandler$5: void run()>','<android.net.LinkProperties: void <init>(android.net.LinkProperties)>','<com.android.internal.appwidget.IAppWidgetHost$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.wifi.WifiManager$Channel$WifiHandler: void handleMessage(android.os.Message)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean isDataPossible(java.lang.String)>','<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>','<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,boolean)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8400(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.net.http.LoggingEventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>','<android.os.StrictMode: boolean vmClosableObjectLeaksEnabled()>','<android.view.ScaleGestureDetector: float getCurrentSpanY()>','<android.net.wifi.p2p.WifiP2pGroup: void <clinit>()>','<com.android.uiautomator.core.InteractionController$2: boolean apply(android.view.accessibility.AccessibilityEvent)>','<android.accessibilityservice.UiTestAutomationBridge: void <init>()>','<android.media.MediaRouter$UserRouteInfo: void setPlaybackType(int)>','<android.bluetooth.BluetoothHealth: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>','<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToRGB(byte[],int,boolean)>','<android.filterpacks.videoproc.BackDropperFilter: void setupPorts()>','<com.android.internal.telephony.sip.SipPhone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)>','<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>','<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>','<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>','<android.app.ActivityManager$RunningAppProcessInfo$1: void <init>()>','<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition$TransitionListener)>','<android.view.MotionEvent: int axisFromString(java.lang.String)>','<com.android.server.wm.WindowManagerService: void displayReady()>','<android.net.sip.SipSession$1: void onCallBusy(android.net.sip.ISipSession)>','<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>','<android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate(java.util.Random)>','<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainChildPosition(int,int)>','<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>','<android.view.MotionEvent: float getHistoricalTouchMajor(int)>','<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>','<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>','<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.server.BluetoothService: int getBluetoothStateInternal()>','<com.android.server.sip.SipService$ConnectivityReceiver$1: void <init>(com.android.server.sip.SipService$ConnectivityReceiver,android.net.NetworkInfo)>','<android.content.SyncStorageEngine$AuthorityInfo: void <init>(android.content.SyncStorageEngine$AuthorityInfo)>','<android.view.VolumePanel: void handleMessage(android.os.Message)>','<android.text.style.SubscriptSpan: int getSpanTypeId()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pDeviceList access$500(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.widget.EditableInputConnection: boolean performContextMenuAction(int)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void hideSoftInput(int,android.os.ResultReceiver)>','<com.android.internal.telephony.CallManager: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>','<android.net.rtp.AudioStream: void <init>(java.net.InetAddress)>','<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>','<android.content.ContentValues: java.lang.String toString()>','<android.view.animation.AnimationSet: boolean willChangeBounds()>','<com.android.internal.telephony.PhoneProxy: void unregisterForSuppServiceFailed(android.os.Handler)>','<android.content.ContentProviderProxy: android.os.IBinder asBinder()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: boolean isEnabled()>','<android.provider.Telephony$Mms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.pm.PackageParser$Component: void <init>(android.content.pm.PackageParser$ParseComponentArgs,android.content.pm.ComponentInfo)>','<com.android.server.NsdService: android.os.Messenger getMessenger()>','<android.animation.KeyframeSet: java.lang.Object getValue(float)>','<android.util.LruCache: java.lang.Object get(java.lang.Object)>','<android.preference.Preference: boolean isEnabled()>','<android.hardware.Camera: void <init>()>','<android.location.Criteria: void <clinit>()>','<com.android.internal.telephony.PhoneBase: boolean isOtaSpNumber(java.lang.String)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setPassword(java.lang.String)>','<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>','<android.view.HardwareRenderer$Gl20Renderer: void destroy(boolean)>','<android.bluetooth.BluetoothTetheringDataTracker: int stopUsingNetworkFeature(java.lang.String,int,int)>','<com.android.internal.view.menu.MenuItemImpl: boolean expandActionView()>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void cancel()>','<android.view.View: boolean canAcceptDrag()>','<android.net.TrafficStats: void startDataProfiling(android.content.Context)>','<android.view.View: void dispatchCollectViewAttributes(android.view.View$AttachInfo,int)>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistering(android.net.sip.ISipSession)>','<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>','<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)>','<android.app.Notification$Builder: android.app.Notification$Builder addKind(java.lang.String)>','<android.widget.RemoteViews: void removeAllViews(int)>','<android.net.sip.SipProfile: void <init>(android.os.Parcel,android.net.sip.SipProfile$1)>','<android.view.MotionEvent: float getHistoricalX(int)>','<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>','<android.content.SyncStorageEngine: java.util.List getCurrentSyncs(int)>','<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,float[],int)>','<android.view.MotionEvent: void setEdgeFlags(int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastRecord broadcastRecordForReceiverLocked(android.os.IBinder)>','<android.bluetooth.BluetoothDeviceProfileState: int access$1002(android.bluetooth.BluetoothDeviceProfileState,int)>','<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>','<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>','<android.widget.Editor$InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>','<android.graphics.Canvas: void checkRange(int,int,int)>','<android.webkit.HTML5VideoFullScreen: android.view.View access$900()>','<android.net.sip.SipProfile: java.lang.String getDisplayName()>','<android.content.ISyncStatusObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder with(android.animation.Animator)>','<android.database.BulkCursorToCursorAdaptor: boolean requery()>','<com.android.internal.telephony.IccSmsInterfaceManagerProxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>','<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>','<android.text.method.DateTimeKeyListener: void <init>()>','<android.location.ILocationProvider$Stub$Proxy: boolean supportsAltitude()>','<android.widget.OverScroller$SplineOverScroller: void <init>()>','<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>','<android.os.WorkSource: void set(android.os.WorkSource)>','<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean conference()>','<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>','<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<android.webkit.HTML5VideoFullScreen: void access$500(android.webkit.HTML5VideoFullScreen)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>','<android.util.Pools: android.util.Pool simplePool(android.util.PoolableManager)>','<android.webkit.ZoomManager: void restoreZoomState(android.os.Bundle)>','<com.android.i18n.phonenumbers.RegexCache$LRUCache: boolean containsKey(java.lang.Object)>','<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>','<android.widget.AbsListView: void onTouchModeChanged(boolean)>','<android.widget.AbsListView: int access$1500(android.widget.AbsListView)>','<android.app.ActivityThread$ApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>','<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)>','<android.app.FragmentManagerImpl: void dispatchCreate()>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>','<android.os.Bundle: java.lang.String getString(java.lang.String)>','<android.server.BluetoothDeviceProperties: boolean isInCache(java.lang.String)>','<android.net.Uri$PathSegments: void <clinit>()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearItalianLeadingZero()>','<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()>','<android.widget.Editor: boolean hasInsertionController()>','<com.android.internal.os.RuntimeInit$Arguments: void <init>(java.lang.String[])>','<android.net.nsd.NsdManager: void <init>(android.content.Context,android.net.nsd.INsdManager)>','<android.view.SurfaceView$4: boolean isCreating()>','<android.content.res.XmlBlock: void access$1600(android.content.res.XmlBlock)>','<android.webkit.WebViewClassic: int pinLoc(int,int,int)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void unplug(long,long)>','<com.android.internal.view.IInputContext$Stub$Proxy: void clearMetaKeyStates(int)>','<com.android.internal.policy.impl.FaceUnlock$2: void <init>(com.android.internal.policy.impl.FaceUnlock)>','<android.view.View$10: java.lang.Object get(java.lang.Object)>','<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>','<android.net.EthernetDataTracker$InterfaceObserver: void interfaceAdded(java.lang.String)>','<android.view.WindowManager$LayoutParams: void restore()>','<android.widget.EdgeEffect: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>','<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>','<com.android.server.MountService$ObbAction: android.content.res.ObbInfo getObbInfo()>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void <init>(com.android.server.net.NetworkStatsCollection)>','<android.speech.tts.UtteranceProgressListener$1: void <init>(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>','<android.webkit.WebViewCore: boolean access$6200(android.webkit.WebViewCore,int,int,int)>','<android.util.MathUtils: float lerp(float,float,float)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState: void enter()>','<com.android.internal.telephony.BaseCommands: void setOnUnsolOemHookRaw(android.os.Handler,int,java.lang.Object)>','<android.nfc.NdefMessage: int getByteArrayLength()>','<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>','<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>','<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>','<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>','<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)>','<com.android.server.WallpaperManagerService$WallpaperObserver: void onEvent(int,java.lang.String)>','<com.android.internal.os.IResultReceiver$Stub: android.os.IBinder asBinder()>','<android.widget.ListView: void onMeasure(int,int)>','<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<com.android.server.wm.WindowState: long getInputDispatchingTimeoutNanos()>','<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String)>','<com.android.server.sip.SipService$ConnectivityReceiver$1: void run()>','<com.android.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()>','<com.android.internal.telephony.PhoneBase: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>','<com.android.server.PowerManagerService: boolean access$4602(com.android.server.PowerManagerService,boolean)>','<com.android.internal.telephony.BaseCommands: void unSetOnSmsOnSim(android.os.Handler)>','<com.android.server.location.MockProvider: boolean meetsCriteria(android.location.Criteria)>','<android.view.InputEventReceiver: void onBatchedInputEventPending()>','<android.media.AudioService$2: void <init>(android.media.AudioService)>','<android.app.IActivityManager$WaitResult: void <clinit>()>','<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>','<android.text.DynamicLayout$ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.webkit.HTML5VideoFullScreen: int access$102(android.webkit.HTML5VideoFullScreen,int)>','<android.content.res.XmlBlock$Parser: int getAttributeResourceValue(int,int)>','<android.net.wifi.WifiStateMachine: boolean syncEnableNetwork(com.android.internal.util.AsyncChannel,int,boolean)>','<android.view.View: void setClickable(boolean)>','<android.media.IAudioFocusDispatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void merge(com.android.internal.telephony.sip.SipPhone$SipCall)>','<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)>','<com.android.internal.widget.multiwaveview.GlowPadView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.webkit.WebViewClassic: boolean zoomOut()>','<com.android.server.LightsService$2: void <init>(com.android.server.LightsService)>','<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>','<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>','<android.content.Intent$ShortcutIconResource: void <init>()>','<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>','<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void <init>(android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask)>','<android.view.View: boolean hasFocus()>','<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)>','<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)>','<android.webkit.WebViewClassic$Factory: android.webkit.GeolocationPermissions getGeolocationPermissions()>','<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.am.ActivityManagerService$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>','<android.widget.RelativeLayout$LayoutParams: int access$200(android.widget.RelativeLayout$LayoutParams)>','<com.android.internal.policy.impl.LockScreen$1: void <init>(com.android.internal.policy.impl.LockScreen)>','<android.hardware.Camera$Parameters: void setZoom(int)>','<android.accounts.AccountManagerService$DatabaseHelper: void <init>(android.content.Context,int)>','<android.webkit.WebResourceResponse: java.lang.String getEncoding()>','<android.security.KeyChain$KeyChainConnection: void close()>','<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>','<com.android.vcard.VCardComposer: boolean initWithRawContactsEntityUri(android.net.Uri)>','<android.media.IAudioFocusDispatcher$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>','<com.android.internal.widget.ActionBarContextView: boolean showOverflowMenu()>','<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>','<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>','<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>','<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>','<android.view.View: void setNextFocusForwardId(int)>','<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String,java.lang.String)>','<android.webkit.L10nUtils: void <clinit>()>','<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>','<android.app.Fragment: void setMenuVisibility(boolean)>','<android.webkit.CallbackProxy: void getVisitedHistory(android.webkit.ValueCallback)>','<android.renderscript.RenderScript: void nContextPause()>','<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)>','<com.android.server.PowerManagerService: void logPointerUpEvent()>','<android.media.AudioService$VolumeStreamState: java.util.ArrayList access$1900(android.media.AudioService$VolumeStreamState)>','<android.content.BroadcastReceiver: void checkSynchronousHint()>','<android.webkit.WebSettingsClassic: java.lang.String getDefaultTextEncodingName()>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: void hide()>','<android.view.SurfaceView: void <init>(android.content.Context)>','<com.android.server.pm.Settings: void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>','<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>','<android.content.IntentSender$SendIntentException: void <init>()>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub: void <init>()>','<android.net.sip.ISipSessionListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.widget.ILockSettings$Stub: android.os.IBinder asBinder()>','<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>','<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>','<android.hardware.Camera$Parameters: boolean isVideoSnapshotSupported()>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setScaleX(float)>','<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseTag(com.android.internal.telephony.gsm.SimTlv,int)>','<com.android.internal.widget.LockPatternView$Cell: int getRow()>','<com.android.internal.os.storage.ExternalStorageFormatter: void <clinit>()>','<android.net.Uri$Part: android.net.Uri$Part fromDecoded(java.lang.String)>','<android.location.Address: java.lang.String access$1102(android.location.Address,java.lang.String)>','<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>','<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>','<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceTxThrottle(java.lang.String)>','<android.content.res.AssetManager: void makeStringBlocks(boolean)>','<com.android.internal.telephony.PhoneProxy: void setEchoSuppressionEnabled(boolean)>','<com.android.internal.telephony.OperatorInfo: void <clinit>()>','<android.server.BluetoothService: android.bluetooth.BluetoothInputDevice access$902(android.server.BluetoothService,android.bluetooth.BluetoothInputDevice)>','<com.android.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()>','<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>','<android.view.Window: void clearFlags(int)>','<android.net.wifi.WifiStateTracker: void privateDnsRouteSet(boolean)>','<android.speech.tts.TextToSpeech$Connection: void disconnect()>','<com.android.server.am.ActivityManagerService: boolean isImmersive(android.os.IBinder)>','<android.app.backup.BackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>','<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>','<android.os.storage.IMountShutdownObserver$Stub: android.os.storage.IMountShutdownObserver asInterface(android.os.IBinder)>','<android.view.inputmethod.ExtractedText: void <init>()>','<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataStallAlarm(int)>','<android.hardware.input.InputManager: void addKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.location.Address: void clearLatitude()>','<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>','<android.opengl.GLLogWrapper$PointerInfo: void unbindByteBuffer()>','<android.server.BluetoothBondState: android.bluetooth.BluetoothHeadset access$102(android.server.BluetoothBondState,android.bluetooth.BluetoothHeadset)>','<android.media.AudioService: void access$5400(android.media.AudioService)>','<android.widget.RemoteViews: void setScrollPosition(int,int)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.AppWindowToken findAppWindowToken(android.os.IBinder)>','<android.view.ActionMode: boolean getTitleOptionalHint()>','<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>','<com.android.uiautomator.core.UiDevice: boolean isOrientationNatural()>','<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>','<android.view.animation.Transformation: void clear()>','<com.android.vcard.VCardComposer: void <init>(android.content.Context,int,java.lang.String,boolean)>','<android.view.ViewConfiguration: int getPressedStateDuration()>','<android.webkit.WebViewCore: void resumeWebKitDraw()>','<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>','<com.android.server.wm.WindowState: int getSurfaceLayer()>','<android.net.NetworkTemplate: int hashCode()>','<com.android.server.wm.StrictModeFlash: void positionSurface(int,int)>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>','<android.database.AbstractCursor: boolean isClosed()>','<android.content.res.XmlBlock: void <init>(byte[])>','<com.android.server.am.ActivityManagerService: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>','<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>','<com.android.internal.telephony.ITelephonyRegistry$Stub: void <init>()>','<android.accounts.AccountManager$AmsTask$Response: void <init>(android.accounts.AccountManager$AmsTask,android.accounts.AccountManager$1)>','<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>','<com.android.internal.telephony.PhoneProxy: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>','<com.android.internal.telephony.sip.SipCommandInterface: void getPreferredNetworkType(android.os.Message)>','<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources)>','<android.preference.PreferenceManager: int getSharedPreferencesMode()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.provider.ContactsContract$Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>','<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>','<android.net.NetworkPolicyManager: int getAppPolicy(int)>','<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()>','<android.app.Activity: void dispatchActivityResult(java.lang.String,int,int,android.content.Intent)>','<android.view.FocusFinder: android.view.FocusFinder getInstance()>','<com.android.server.location.GpsLocationProvider: void access$100(com.android.server.location.GpsLocationProvider,boolean)>','<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>','<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)>','<android.view.GLES20RecordingCanvas$1: void <init>()>','<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>','<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>','<android.widget.Toast: int getXOffset()>','<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>','<android.net.NetworkPolicyManager: void dumpPolicy(java.io.PrintWriter,int)>','<android.content.pm.ResolveInfo: void <init>(android.os.Parcel,android.content.pm.ResolveInfo$1)>','<android.os.MemoryFile$MemoryInputStream: void reset()>','<android.webkit.CallbackProxy: boolean canShowAlertDialog()>','<com.android.server.sip.SipService$SipSessionGroupExt: boolean containsSession(java.lang.String)>','<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)>','<com.android.internal.policy.impl.KeyguardViewMediator: java.lang.String access$802(com.android.internal.policy.impl.KeyguardViewMediator,java.lang.String)>','<android.filterfw.core.Filter: int getSleepDelay()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<android.view.AbsSavedState: int describeContents()>','<com.android.server.am.ActivityManagerService: void <clinit>()>','<android.hardware.Camera$Parameters: int getPreviewFrameRate()>','<android.database.ContentObservable: void <init>()>','<android.view.View: boolean draw(android.graphics.Canvas,android.view.ViewGroup,long)>','<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>','<android.filterfw.core.Filter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>','<android.content.res.Resources: int getDimensionPixelOffset(int)>','<android.media.IAudioService$Stub: void <init>()>','<android.widget.Editor$SuggestionsPopupWindow: java.util.HashMap access$1800(android.widget.Editor$SuggestionsPopupWindow)>','<android.content.SyncManager$AccountSyncStats: void <init>(java.lang.String,android.content.SyncManager$1)>','<com.android.server.StatusBarManagerService: void removeNotification(android.os.IBinder)>','<android.media.DecoderCapabilities$AudioDecoder: void <clinit>()>','<com.android.vcard.VCardUtils: java.lang.String constructNameFromElements(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>','<com.android.internal.telephony.sip.SipCommandInterface: void supplyIccPin2(java.lang.String,android.os.Message)>','<android.text.format.Time: int getJulianDay(long,long)>','<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: int leadingDigitsPatternSize()>','<android.net.wifi.WifiNative: boolean setP2pSsidPostfix(java.lang.String)>','<com.android.server.pm.Settings: void <init>(java.io.File)>','<android.widget.ListView$ArrowScrollFocusResult: void <init>(android.widget.ListView$1)>','<com.android.internal.util.StateMachine$SmHandler$StateInfo: java.lang.String toString()>','<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen)>','<android.widget.ScrollView: void scrollTo(int,int)>','<android.app.Fragment: boolean isRemoving()>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>','<android.net.http.RequestQueue: void disablePlatformNotifications()>','<android.app.FragmentManagerImpl: void popBackStack(int,int)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec: java.lang.String toString()>','<android.widget.Editor: android.graphics.drawable.Drawable access$2402(android.widget.Editor,android.graphics.drawable.Drawable)>','<com.android.internal.telephony.DataConnectionTracker: void onEnableNewApn()>','<android.os.Looper: void prepareMainLooper()>','<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.widget.LockPatternUtils access$000(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: android.os.ParcelFileDescriptor access$1602(android.server.BluetoothHealthProfileHandler$HealthChannel,android.os.ParcelFileDescriptor)>','<android.view.View: void onFocusLost()>','<com.android.internal.telephony.PhoneBase: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>','<android.graphics.Matrix$1: boolean postRotate(float,float,float)>','<android.provider.Settings$System: void <init>()>','<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>','<android.webkit.WebView: void onScrollChanged(int,int,int,int)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver$1: void <init>(com.android.server.NetworkManagementService$NetdCallbackReceiver)>','<android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()>','<android.os.FileUtils: boolean getFileStatus(java.lang.String,android.os.FileUtils$FileStatus)>','<android.content.SyncQueue: void <init>(android.content.SyncStorageEngine,android.content.SyncAdaptersCache)>','<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()>','<android.nfc.NfcActivityManager$NfcActivityState: void destroy()>','<com.android.internal.policy.impl.KeyguardViewManager: boolean wakeWhenReadyTq(int)>','<com.android.server.sip.SipService$MyExecutor: void <init>(com.android.server.sip.SipService)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void onCallStateChanged(int,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: boolean isOtaSpNumber(java.lang.String)>','<android.webkit.WebViewCore: android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()>','<android.webkit.WebViewClassic: int viewToContentY(int)>','<com.android.vcard.VCardParserImpl_V21: void handleParamWithoutName(com.android.vcard.VCardProperty,java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>','<android.widget.AbsListView: int getListPaddingTop()>','<android.view.MenuInflater: void <init>(android.content.Context,java.lang.Object)>','<com.android.server.am.ProcessRecord: void toShortString(java.lang.StringBuilder)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setEnabled(boolean)>','<android.telephony.PhoneStateListener$1: void onMessageWaitingIndicatorChanged(boolean)>','<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>','<android.location.Location: void <clinit>()>','<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>','<android.database.BulkCursorToCursorAdaptor: void close()>','<com.android.internal.widget.LockPatternUtils: void <init>(android.content.Context)>','<com.android.server.location.LocationBasedCountryDetector$1: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.graphics.Matrix$1: boolean preConcat(android.graphics.Matrix)>','<com.android.internal.telephony.RIL: void hangupForegroundResumeBackground(android.os.Message)>','<com.android.internal.telephony.sip.SipPhoneBase: android.telephony.ServiceState getServiceState()>','<android.net.rtp.RtpStream: int getMode()>','<com.android.server.LocationManagerService$LpCapabilityComparator: int compare(java.lang.Object,java.lang.Object)>','<android.webkit.WebSettingsClassic: int getUserAgent()>','<android.content.pm.IPackageManager$Stub$Proxy: boolean isPermissionEnforced(java.lang.String)>','<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.app.IWallpaperManagerCallback$Stub$Proxy: void onWallpaperChanged()>','<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewCore: android.webkit.WebViewClassic access$1100(android.webkit.WebViewCore)>','<android.net.InterfaceConfiguration: android.net.LinkAddress access$102(android.net.InterfaceConfiguration,android.net.LinkAddress)>','<com.android.internal.location.DummyLocationProvider: void setSupportsSpeed(boolean)>','<android.nfc.NdefRecord$1: android.nfc.NdefRecord[] newArray(int)>','<com.android.internal.telephony.CallManager: void unregisterForPostDialCharacter(android.os.Handler)>','<android.text.SpannableString: int getSpanFlags(java.lang.Object)>','<android.content.pm.UserInfo$1: android.content.pm.UserInfo[] newArray(int)>','<com.android.internal.widget.multiwaveview.Ease$Cubic$2: void <init>()>','<com.android.internal.policy.impl.SimUnlockScreen: boolean needsInput()>','<com.android.vcard.VCardComposer: void <init>(android.content.Context,int,boolean)>','<com.android.internal.widget.multiwaveview.Ease$Cubic$2: float getInterpolation(float)>','<android.app.Fragment: android.content.res.Resources getResources()>','<android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)>','<com.android.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>','<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.filterpacks.videosrc.MediaSource$4: void onFrameAvailable(android.graphics.SurfaceTexture)>','<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>','<android.opengl.GLLogWrapper: void glTexParameterx(int,int,int)>','<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<com.android.internal.policy.impl.FaceUnlock: void handleCancel()>','<android.graphics.drawable.InsetDrawable$InsetState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setToServiceId(int)>','<android.net.NetworkPolicy: void <clinit>()>','<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<com.android.internal.telephony.PhoneProxy: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.p2p.WifiP2pService: boolean access$5200(android.net.wifi.p2p.WifiP2pService)>','<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>','<com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State valueOf(java.lang.String)>','<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1Number()>','<android.view.IWindow$Stub: void <init>()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean onTrySetupData(java.lang.String)>','<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>','<com.android.internal.app.IBatteryStats$Stub: android.os.IBinder asBinder()>','<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>','<android.media.MediaRouter$RouteGroup: void setIconResource(int)>','<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainPosition(long)>','<com.android.internal.content.PackageMonitor: boolean anyPackagesDisappearing()>','<android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>','<com.android.server.pm.PackageManagerService$InstallParams: void handleReturnCode()>','<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)>','<android.widget.AdapterView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<android.util.NtpTrustedTime: long currentTimeMillis()>','<android.animation.LayoutTransition$1: void <init>(android.animation.LayoutTransition,android.view.ViewGroup)>','<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>','<android.media.IAudioService$Stub$Proxy: void setStreamSolo(int,boolean,android.os.IBinder)>','<android.media.MediaRecorder: void setAudioChannels(int)>','<android.server.BluetoothAdapterStateMachine$Switching: boolean processMessage(android.os.Message)>','<android.accounts.AccountManagerService$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>','<android.location.Country: long getTimestamp()>','<android.database.sqlite.SQLiteConnectionPool$1: void onCancel()>','<android.content.SyncManager$SyncHandlerMessagePayload: void <init>(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>','<com.android.internal.telephony.PhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)>','<android.text.style.ImageSpan: void <init>(android.content.Context,int)>','<android.webkit.WebViewClassic$FocusTransitionDrawable: void setProgress(float)>','<android.hardware.usb.UsbEndpoint: int getType()>','<android.server.BluetoothService: boolean setPasskey(java.lang.String,int)>','<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>','<android.widget.RelativeLayout: void <clinit>()>','<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>','<android.app.ContextImpl$9: java.lang.Object createStaticService()>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectActivityLeaks()>','<android.net.http.RequestHandle: java.lang.String computeBasicAuthResponse(java.lang.String,java.lang.String)>','<android.media.IAudioRoutesObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewClassic: int access$4200(android.webkit.WebViewClassic)>','<com.android.server.PowerManagerService: float access$1900(com.android.server.PowerManagerService)>','<android.webkit.WebSettingsClassic: java.lang.String getStandardFontFamily()>','<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: void <init>(android.database.Cursor)>','<android.webkit.WebView: android.webkit.WebSettings getSettings()>','<android.graphics.Path: void rewind()>','<android.widget.LinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>','<com.android.server.PowerManagerService: void access$800(com.android.server.PowerManagerService)>','<android.net.Proxy: java.lang.String getHost(android.content.Context)>','<com.android.internal.telephony.RIL: void queryFacilityLock(java.lang.String,java.lang.String,int,android.os.Message)>','<android.nfc.INfcTag$Stub$Proxy: void resetTimeouts()>','<android.widget.AdapterView: void setEmptyView(android.view.View)>','<com.android.internal.telephony.BaseCommands: void setOnCatEvent(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.WifiStateMachine$DriverStoppedState: boolean processMessage(android.os.Message)>','<android.view.View: void handleFocusGainInternal(int,android.graphics.Rect)>','<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)>','<android.os.ResultReceiver$MyResultReceiver: void <init>(android.os.ResultReceiver)>','<android.webkit.CallbackProxy: boolean onJsTimeout()>','<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>','<android.view.GLES20Layer: void <init>()>','<com.android.server.wm.WindowManagerService: boolean access$000(com.android.server.wm.WindowManagerService)>','<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>','<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript$Priority)>','<android.location.IGpsStatusListener$Stub$Proxy: void onNmeaReceived(long,java.lang.String)>','<android.view.View$ListenerInfo: android.view.View$OnTouchListener access$300(android.view.View$ListenerInfo)>','<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.net.NetworkStatsRecorder: void importLegacyUidLocked(java.io.File)>','<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.SipProfile getLocalProfile()>','<android.os.TokenWatcher: void dump(java.io.PrintWriter)>','<android.content.Intent: java.lang.String toInsecureString()>','<android.speech.tts.TextToSpeech: java.util.List getEngines()>','<android.server.BluetoothService: int bluezStringToScanMode(boolean,boolean)>','<android.app.Instrumentation$1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>','<com.android.internal.telephony.sip.SipPhoneBase: void getOutgoingCallerIdDisplay(android.os.Message)>','<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)>','<android.app.backup.BackupDataInputStream: int read()>','<android.webkit.WebViewCore: void sendMessage(int,int,java.lang.Object)>','<android.widget.HeaderViewListAdapter: boolean isEmpty()>','<android.app.ActivityThread: android.os.Handler getHandler()>','<com.android.server.input.InputWindowHandle: void finalize()>','<android.database.AbstractCursor: boolean onMove(int,int)>','<android.app.ApplicationThreadProxy: void updateTimeZone()>','<android.widget.Toast: int getYOffset()>','<com.android.server.wm.WindowManagerService: void switchKeyboardLayout(int,int)>','<android.content.pm.PackageInfoLite: void <init>(android.os.Parcel,android.content.pm.PackageInfoLite$1)>','<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<com.android.server.wm.WindowManagerService: void getRealDisplaySize(android.graphics.Point)>','<android.content.res.AssetManager: void finalize()>','<com.android.server.NotificationManagerService$1: void onSetDisabled(int)>','<com.android.server.StatusBarManagerService: void setNotificationCallbacks(com.android.server.StatusBarManagerService$NotificationCallbacks)>','<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()>','<android.text.SpannableStringBuilder: int length()>','<android.os.BatteryStats$HistoryItem: void setTo(android.os.BatteryStats$HistoryItem)>','<com.android.internal.policy.impl.PhoneWindowManager: int getMaxWallpaperLayer()>','<android.content.res.CompatibilityInfo$Translator: void translateEventInScreenToAppWindow(android.view.MotionEvent)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1400(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<com.android.internal.view.menu.BaseMenuPresenter: int getId()>','<android.util.FastImmutableArraySet$FastIterator: void remove()>','<android.media.MediaRouter: void selectRouteInt(int,android.media.MediaRouter$RouteInfo)>','<android.content.pm.PackageParser$PermissionGroup: void <init>(android.content.pm.PackageParser$Package)>','<android.app.ActivityThread: android.os.Bundle performPauseActivity(android.os.IBinder,boolean,boolean)>','<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)>','<android.view.View$7: void setValue(java.lang.Object,float)>','<android.location.ILocationProvider$Stub$Proxy: void setMinTime(long,android.os.WorkSource)>','<android.view.View$DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>','<android.widget.Scroller: void abortAnimation()>','<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>','<android.bluetooth.IBluetoothCallback$Stub$Proxy: android.os.IBinder asBinder()>','<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>','<com.android.internal.telephony.AdnRecord: int describeContents()>','<android.os.storage.IMountService$Stub$Proxy: void registerListener(android.os.storage.IMountServiceListener)>','<android.content.pm.PackageInfo: int describeContents()>','<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler)>','<android.webkit.WebViewClassic$Factory: android.webkit.CookieManager getCookieManager()>','<com.android.server.sip.SipSessionGroup: int access$2400(com.android.server.sip.SipSessionGroup)>','<android.view.View$DragShadowBuilder: void <init>()>','<com.android.ex.variablespeed.MediaPlayerDataSource: void playNative()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: void start(int,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>','<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)>','<com.android.server.ConnectivityService: void reportInetCondition(int,int)>','<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>','<android.text.LoginFilter$UsernameFilterGMail: boolean isAllowed(char)>','<com.android.server.am.BroadcastRecord: java.lang.String toString()>','<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>','<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectAll()>','<com.android.server.wm.ViewServer$ViewServerWorker: void run()>','<com.android.internal.telephony.gsm.GsmConnection$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService$6: void <init>(com.android.server.pm.PackageManagerService)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: java.lang.String access$502(android.server.BluetoothPanProfileHandler$BluetoothPanDevice,java.lang.String)>','<com.android.vcard.VCardUtils: boolean containsOnlyAlphaDigitHyphen(java.lang.String[])>','<com.android.server.connectivity.Tethering$TetherMasterSM: int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.internal.app.IUsageStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.LocationManagerService: android.location.ILocationListener access$000(com.android.server.LocationManagerService)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>','<com.android.internal.telephony.CallManager: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1: android.net.wifi.p2p.nsd.WifiP2pServiceRequest[] newArray(int)>','<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<com.android.internal.http.HttpDateTime$TimeOfDay: void <init>(int,int,int)>','<android.widget.AdapterViewAnimator: int getWindowSize()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void setKeyboardMode(int)>','<com.android.server.net.NetworkStatsService: android.os.Handler access$1300(com.android.server.net.NetworkStatsService)>','<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>','<android.view.Window: boolean hasChildren()>','<android.filterpacks.videosrc.MediaSource: void <clinit>()>','<android.widget.HorizontalScrollView: void setOverScrollMode(int)>','<android.content.ContentProvider$Transport: java.lang.String getType(android.net.Uri)>','<android.view.VelocityTracker: android.view.VelocityTracker obtain()>','<android.os.storage.IMountService$Stub$Proxy: boolean isSecureContainerMounted(java.lang.String)>','<com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)>','<com.android.server.pm.PackageManagerService$12: void run()>','<android.text.Annotation: void <init>(android.os.Parcel)>','<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>','<android.widget.SearchView: void access$900(android.widget.SearchView)>','<com.android.internal.telephony.sip.SipPhone: android.telephony.CellLocation getCellLocation()>','<android.widget.Spinner: void setGravity(int)>','<android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.filterfw.geometry.Quad: boolean IsInUnitRange()>','<com.android.internal.telephony.BaseCommands: void unSetOnRestrictedStateChanged(android.os.Handler)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void requestIsimAuthentication(java.lang.String,android.os.Message)>','<android.widget.TextView: void computeScroll()>','<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>','<com.android.internal.telephony.sip.SipPhoneBase: boolean getIccRecordsLoaded()>','<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>','<android.widget.RelativeLayout$LayoutParams: int access$212(android.widget.RelativeLayout$LayoutParams,int)>','<android.inputmethodservice.IInputMethodWrapper: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>','<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()>','<android.text.method.BaseMovementMethod: void <init>()>','<android.net.wifi.WifiStateMachine$DisconnectingState: void enter()>','<android.media.AudioRoutesInfo: void <init>()>','<android.app.ActivityOptions: int getStartY()>','<android.graphics.TemporaryBuffer: void <init>()>','<android.location.Country: void <init>(java.lang.String,int,long,android.location.Country$1)>','<com.android.internal.policy.impl.PhoneWindowManager: android.view.animation.Animation createForceHideEnterAnimation(boolean)>','<com.android.internal.telephony.PhoneProxy: void explicitCallTransfer()>','<android.content.res.Resources: java.lang.String getResourcePackageName(int)>','<android.content.pm.PackageParser$NewPermissionInfo: void <init>(java.lang.String,int,int)>','<com.android.internal.telephony.IccRefreshResponse: java.lang.String toString()>','<android.view.ViewRootImpl: void handleDispatchSystemUiVisibilityChanged(android.view.ViewRootImpl$SystemUiVisibilityInfo)>','<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>','<com.android.internal.telephony.test.CallInfo$State: int value()>','<com.android.server.connectivity.Tethering: boolean isWifi(java.lang.String)>','<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>','<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting)>','<android.location.IGpsStatusListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.VolumePanel: void onStopSounds()>','<android.webkit.WebViewCore: void access$5300(android.webkit.WebViewCore,int)>','<android.content.ContentProviderOperation: android.net.Uri getUri()>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void read(java.io.InputStream)>','<android.location.LocationManager$ListenerTransport: void access$000(android.location.LocationManager$ListenerTransport,android.os.Message)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>','<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>','<android.net.wifi.p2p.WifiP2pManager$Channel: java.lang.Object access$000(android.net.wifi.p2p.WifiP2pManager$Channel,int)>','<android.media.AudioService: java.util.HashMap access$2800(android.media.AudioService)>','<android.view.IWindow$Stub$Proxy: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>','<com.android.internal.telephony.cat.Item: int describeContents()>','<android.media.MediaPlayer: boolean setParameter(int,java.lang.String)>','<android.location.Criteria: int describeContents()>','<android.app.LoadedApk$ReceiverDispatcher: void <init>(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>','<android.webkit.MimeTypeMap: void <clinit>()>','<android.text.format.DateFormat: void <init>()>','<com.android.internal.os.PkgUsageStats: void <init>(java.lang.String,int,long,java.util.Map)>','<android.database.sqlite.SQLiteConnectionPool: java.lang.String toString()>','<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>','<android.util.LruCache: void evictAll()>','<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)>','<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>','<android.media.IAudioService$Stub$Proxy: void unregisterMediaButtonEventReceiverForCalls()>','<android.inputmethodservice.KeyboardView$3: void onRelease(int)>','<com.android.server.connectivity.Vpn: int access$300(com.android.server.connectivity.Vpn,java.lang.String,java.lang.String)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onTimeChanged()>','<com.android.internal.widget.DigitalClock$AmPm: void setIsMorning(boolean)>','<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>','<android.filterfw.core.SimpleFrameManager: void <init>()>','<android.graphics.drawable.DrawableContainer: int getOpacity()>','<com.android.server.usb.UsbHostManager: void access$000(com.android.server.usb.UsbHostManager)>','<android.view.Window: android.view.Window$Callback getCallback()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>','<android.widget.RelativeLayout$DependencyGraph$Node$1: void onAcquired(android.util.Poolable)>','<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newNetworkInitiatedUssd(java.lang.String,boolean,com.android.internal.telephony.gsm.GSMPhone)>','<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>','<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)>','<android.content.pm.InstrumentationInfo: void <init>()>','<android.widget.ImageView: boolean hasOverlappingRendering()>','<android.app.ApplicationLoaders: void <init>()>','<com.android.internal.content.PackageMonitor: boolean anyPackagesAppearing()>','<android.graphics.Typeface: int getStyle()>','<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<android.graphics.Paint: boolean isAntiAlias()>','<com.android.internal.policy.impl.PhoneWindowManager$7: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>','<android.widget.TextView: void setMaxHeight(int)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean enableDataConnectivity()>','<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult access$300(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataCallState)>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int)>','<android.view.inputmethod.CorrectionInfo$1: void <init>()>','<android.widget.TextView: boolean isCursorVisible()>','<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()>','<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore getWebViewCore()>','<android.media.AudioService: int getLastAudibleMasterVolume()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean startScreenSaver()>','<android.widget.SearchView$8: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>','<com.android.internal.telephony.DataConnectionTracker: int enableApnType(java.lang.String)>','<com.android.internal.telephony.RIL: void setCurrentPreferredNetworkType()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.SearchDialog$1: void onReceive(android.content.Context,android.content.Intent)>','<android.text.BoringLayout: int getLineCount()>','<android.os.Handler: android.os.IMessenger getIMessenger()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg: com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv newServiceStatsLocked()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean access$3100(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.security.KeyStore: boolean contains(java.lang.String)>','<com.android.server.MountService$ObbState: void link()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.os.Bundle: void putShort(java.lang.String,short)>','<android.app.IInstrumentationWatcher$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.renderscript.Sampler$Value: android.renderscript.Sampler$Value[] values()>','<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>','<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>','<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>','<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>','<android.view.View: void setHasTransientState(boolean)>','<android.widget.GridView: int getStretchMode()>','<android.os.Bundle: void <init>(int)>','<android.app.DownloadManager$CursorTranslator: long getLong(int)>','<android.view.ViewGroup: boolean notifyChildOfDrag(android.view.View)>','<android.telephony.SmsCbCmasInfo: int getCertainty()>','<android.app.FragmentManagerImpl: void moveToState(int,boolean)>','<android.app.Activity: int getChangingConfigurations()>','<com.android.internal.widget.ActionBarView: void setCollapsable(boolean)>','<com.android.server.sip.SipSessionGroup: java.util.EventObject access$1700()>','<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,int)>','<android.app.SharedPreferencesImpl: void <init>(java.io.File,int)>','<android.media.MediaPlayer$TrackInfo: void <clinit>()>','<android.widget.Spinner$DropDownAdapter: java.lang.Object getItem(int)>','<com.android.server.wm.WindowManagerService: boolean isHardKeyboardEnabled()>','<com.android.internal.telephony.RIL: void handleCallSetupRequestFromSim(boolean,android.os.Message)>','<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()>','<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>','<com.android.internal.view.IInputContextCallback$Stub$Proxy: void setExtractedText(android.view.inputmethod.ExtractedText,int)>','<com.android.server.MountService$3: void <init>(com.android.server.MountService,java.lang.String)>','<android.webkit.WebViewClassic: float computeReadingLevelScale(float)>','<android.net.NetworkQuotaInfo: long getHardLimitBytes()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,int)>','<android.animation.ValueAnimator: void removeAllUpdateListeners()>','<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: java.util.List intlNumberFormats()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs: java.lang.String toString()>','<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>','<android.webkit.WebViewInputDispatcher: void access$700(android.webkit.WebViewInputDispatcher,boolean)>','<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>','<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)>','<com.android.internal.telephony.cat.ResultException: void <init>(com.android.internal.telephony.cat.ResultCode)>','<com.android.internal.telephony.gsm.GSMPhone: void clearDisconnected()>','<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>','<android.view.GLES20Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>','<com.android.server.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.InputMethodManagerService,android.os.Handler)>','<android.view.View: void buildDrawingCache()>','<com.android.internal.telephony.Phone$State: com.android.internal.telephony.Phone$State[] values()>','<com.android.internal.telephony.IccCard: boolean access$700(com.android.internal.telephony.IccCard)>','<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>','<android.graphics.Color: void <init>()>','<com.android.server.NotificationManagerService$1: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: void access$2900(com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>','<com.android.internal.os.BatteryStatsImpl: void setCallback(com.android.internal.os.BatteryStatsImpl$BatteryCallback)>','<android.content.pm.IPackageStatsObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean triggerHangupBackground()>','<android.service.wallpaper.IWallpaperEngine$Stub: android.service.wallpaper.IWallpaperEngine asInterface(android.os.IBinder)>','<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>','<android.webkit.WebViewClassic: android.webkit.WebViewCore access$1600(android.webkit.WebViewClassic)>','<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<android.os.AsyncTask: void onCancelled()>','<android.app.ContextImpl$36: void <init>()>','<android.app.SearchDialog$1: void <init>(android.app.SearchDialog)>','<android.widget.AbsListView: void setCacheColorHint(int)>','<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>','<android.net.NetworkStatsHistory: void generateRandom(long,long,long,long,long,long,long,java.util.Random)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$5800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>','<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean switchActiveAndHeldOrWaiting()>','<android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>','<android.filterfw.io.PatternScanner: void updateLineCount(int,int)>','<android.os.ParcelUuid: int hashCode()>','<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>','<android.provider.Telephony$Mms$Sent: void <init>()>','<com.android.internal.telephony.cat.ResultException: com.android.internal.telephony.cat.ResultCode result()>','<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>','<com.android.server.am.UsageStatsService: byte[] readFully(java.io.FileInputStream)>','<android.net.http.AndroidHttpClient: void finalize()>','<com.android.internal.policy.impl.PhoneWindowManager: void dismissKeyguardLw()>','<android.view.View: void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>','<android.widget.AbsListView: void onFilterComplete(int)>','<android.net.wifi.WifiStateMachine$DriverFailedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getCompanyName()>','<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas obtain(android.view.GLES20DisplayList)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>','<android.content.SyncManager: void access$100(android.content.SyncManager)>','<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>','<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>','<com.android.server.am.ActivityManagerService$CpuBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.inputmethodservice.Keyboard$Key: int squaredDistanceFrom(int,int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)>','<android.view.ViewGroup: void childHasTransientStateChanged(android.view.View,boolean)>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>','<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>','<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>','<com.android.server.NotificationManagerService$SettingsObserver: void observe()>','<android.widget.Spinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.telephony.CallManager: void unregisterForSignalInfo(android.os.Handler)>','<android.hardware.SensorManager$SensorEventPool: android.hardware.SensorEvent getFromPool()>','<android.os.BatteryStats$HistoryItem: boolean same(android.os.BatteryStats$HistoryItem)>','<com.android.internal.telephony.sip.SipPhoneBase: android.net.LinkProperties getLinkProperties(java.lang.String)>','<com.android.internal.telephony.DataConnectionTracker: boolean isApnTypeActive(java.lang.String)>','<android.net.DhcpStateMachine$1: void onReceive(android.content.Context,android.content.Intent)>','<android.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener)>','<android.webkit.WebViewClassic: void clearFormData()>','<android.view.textservice.SentenceSuggestionsInfo$1: android.view.textservice.SentenceSuggestionsInfo[] newArray(int)>','<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>','<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>','<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType valueOf(java.lang.String)>','<com.android.server.WifiService: boolean access$1802(com.android.server.WifiService,boolean)>','<com.android.server.pm.PackageManagerService: void querySyncProviders(java.util.List,java.util.List)>','<com.android.internal.widget.ActionBarView: void initProgress()>','<android.media.MediaPlayer$TrackInfo: void writeToParcel(android.os.Parcel,int)>','<android.text.TextDirectionHeuristics$FirstStrong: void <clinit>()>','<com.android.server.connectivity.Tethering: boolean access$302(com.android.server.connectivity.Tethering,boolean)>','<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>','<android.view.LayoutInflater$BlinkLayout: void dispatchDraw(android.graphics.Canvas)>','<android.speech.tts.TextToSpeech$10: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>','<android.net.wifi.WifiStateMachine$InitialState: void enter()>','<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void <init>()>','<com.android.internal.os.HandlerCaller: com.android.internal.os.HandlerCaller$SomeArgs obtainArgs()>','<android.graphics.Picture: int ni()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean disconnect(android.bluetooth.BluetoothDevice)>','<android.os.StrictMode: int getThreadPolicyMask()>','<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>','<android.net.wifi.WpsResult: void writeToParcel(android.os.Parcel,int)>','<android.widget.CheckedTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.content.pm.Signature: void <clinit>()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isScreenOnFully()>','<android.provider.MediaStore$Audio$Playlists: void <init>()>','<com.android.server.input.InputManagerService: void cancelVibrate(int,android.os.IBinder)>','<android.content.SyncStorageEngine$PendingOperation: void <init>(android.content.SyncStorageEngine$PendingOperation)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setSystemUiVisibility(int,int)>','<com.android.internal.view.menu.ListMenuItemView: boolean prefersCondensedTitle()>','<android.location.Criteria: void setSpeedRequired(boolean)>','<com.android.server.ConnectivityService: void setNetworkPreference(int)>','<android.net.wifi.IWifiManager$Stub: void <init>()>','<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<android.webkit.ZoomManager: float getInvScale()>','<com.android.server.wm.WindowManagerService: void logWindowList(java.lang.String)>','<android.widget.SearchView: void <init>(android.content.Context)>','<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()>','<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)>','<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>','<com.android.internal.database.SortCursor: float getFloat(int)>','<com.android.server.input.InputManagerService$1: void <init>(com.android.server.input.InputManagerService)>','<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)>','<android.app.ActivityThread: void ensureJitEnabled()>','<android.media.RingtoneManager: boolean getIncludeDrm()>','<android.content.res.CompatibilityInfo: float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics)>','<android.location.GpsSatellite: float getSnr()>','<android.opengl.GLLogWrapper: void glClipPlanex(int,int[],int)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: boolean processMessage(android.os.Message)>','<android.app.ActivityThread$ApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>','<android.webkit.OverScrollGlow: void setOverScrollDeltas(int,int)>','<android.accessibilityservice.AccessibilityService$1: void onInterrupt()>','<android.location.ILocationListener$Stub: android.location.ILocationListener asInterface(android.os.IBinder)>','<com.android.internal.os.ProcessStats$1: int compare(java.lang.Object,java.lang.Object)>','<android.view.View: void dispatchWindowFocusChanged(boolean)>','<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>','<android.os.Parcel: byte[] createByteArray()>','<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>','<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>','<com.android.server.NsdService$ClientInfo: android.net.nsd.NsdServiceInfo access$2302(com.android.server.NsdService$ClientInfo,android.net.nsd.NsdServiceInfo)>','<android.net.wifi.WifiStateMachine: void stopFilteringMulticastV6Packets()>','<android.renderscript.RenderScript: void nAllocationRead(int,byte[])>','<com.android.internal.os.BatteryStatsImpl: void finishIteratingOldHistoryLocked()>','<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>','<android.bluetooth.BluetoothHeadset: boolean setAudioState(android.bluetooth.BluetoothDevice,int)>','<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>','<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: boolean process(java.util.EventObject)>','<android.app.SearchableInfo: int getHintId()>','<android.webkit.GeolocationPermissions: void clearAll()>','<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>','<com.android.server.input.InputManagerService: boolean hasKeys(int,int,int[],boolean[])>','<android.content.SyncOperation: java.lang.String dump(boolean)>','<android.content.res.StringBlock$StyleIDs: int access$102(android.content.res.StringBlock$StyleIDs,int)>','<android.media.AudioService$AudioHandler: void <init>(android.media.AudioService,android.media.AudioService$1)>','<android.webkit.WebViewClassic$FocusTransitionDrawable: void <init>(android.webkit.WebViewClassic)>','<com.android.server.PowerManagerService$BatteryReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.content.SyncManager$1: void onReceive(android.content.Context,android.content.Intent)>','<android.view.ViewRootImpl$2: android.graphics.Canvas lockCanvas(android.graphics.Rect)>','<com.android.internal.os.HandlerCaller: boolean hasMessages(int)>','<com.android.server.wm.WindowManagerService: boolean isHardKeyboardAvailable()>','<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>','<android.content.SyncQueue: boolean add(android.content.SyncOperation)>','<android.content.res.AssetFileDescriptor$1: android.content.res.AssetFileDescriptor createFromParcel(android.os.Parcel)>','<com.android.internal.os.SamplingProfilerIntegration: void <init>()>','<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>','<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>','<com.android.internal.telephony.cdma.CDMAPhone: void setCallWaiting(boolean,android.os.Message)>','<android.content.IClipboard$Stub$Proxy: boolean hasClipboardText()>','<android.content.ContextWrapper: java.lang.String getPackageName()>','<com.android.internal.telephony.gsm.GSMPhone: android.telephony.CellLocation getCellLocation()>','<android.net.rtp.RtpStream: void release()>','<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<android.content.ContentValues: void putStringArrayList(java.lang.String,java.util.ArrayList)>','<android.content.Entity: java.lang.String toString()>','<android.view.View$TransformationInfo: android.graphics.Camera access$1500(android.view.View$TransformationInfo)>','<com.android.server.AlarmManagerService: java.util.ArrayList access$800(com.android.server.AlarmManagerService)>','<com.android.internal.telephony.cat.ResultCode: com.android.internal.telephony.cat.ResultCode fromInt(int)>','<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)>','<android.text.Layout: int getLineForVertical(int)>','<android.view.ViewGroup: int getDescendantFocusability()>','<com.android.server.WifiService: android.os.Messenger getWifiStateMachineMessenger()>','<android.widget.Editor: boolean startSelectionActionMode()>','<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<android.app.Application: void dispatchActivityStarted(android.app.Activity)>','<com.android.server.am.TransferPipe: void goDump(android.os.IBinder,java.io.FileDescriptor,java.lang.String[])>','<android.text.Layout$SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: boolean getReportXtOverDev()>','<com.android.server.WifiService: java.lang.String getConfigFile()>','<com.android.internal.widget.AbsActionBarView: int getContentHeight()>','<android.text.Selection: void extendSelection(android.text.Spannable,int)>','<android.net.http.RequestQueue$ActivePool: void <init>(android.net.http.RequestQueue,int)>','<android.content.res.CompatibilityInfo$Translator: void translateRectInScreenToAppWindow(android.graphics.Rect)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothProfile$ServiceListener access$4402(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()>','<com.android.internal.view.menu.MenuPopupHelper: boolean isShowing()>','<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)>','<android.telephony.gsm.GsmCellLocation: int getLac()>','<com.android.server.wm.InputMonitor: void pauseDispatchingLw(com.android.server.wm.WindowToken)>','<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>','<android.net.DhcpStateMachine: void access$1300(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.os.SystemVibrator: void cancel()>','<android.webkit.WebViewClassic: void init(java.util.Map,boolean)>','<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()>','<android.os.WorkSource$1: android.os.WorkSource createFromParcel(android.os.Parcel)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat[] values()>','<android.content.ClipboardManager: boolean hasPrimaryClip()>','<android.widget.SuggestionsAdapter: int getQueryRefinement()>','<android.net.LocalSocket: void shutdownOutput()>','<com.android.server.AppWidgetServiceImpl: void removeProviderLocked(int,com.android.server.AppWidgetServiceImpl$Provider)>','<com.android.internal.view.menu.MenuBuilder: void clearHeader()>','<com.android.internal.app.ActionBarImpl: void doShow(boolean)>','<com.android.internal.widget.PointerLocationView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>','<android.app.IThumbnailRetriever$Stub$Proxy: android.graphics.Bitmap getThumbnail(int)>','<com.android.server.NetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String,java.lang.String)>','<android.accessibilityservice.UiTestAutomationBridge: boolean access$302(android.accessibilityservice.UiTestAutomationBridge,boolean)>','<android.webkit.ZoomControlExternal: void update()>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype[])>','<android.bluetooth.BluetoothDeviceProfileState: void access$5400(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.server.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>','<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater$Parent,boolean)>','<com.android.internal.widget.multiwaveview.GlowPadView: void setEnableTarget(int,boolean)>','<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)>','<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()>','<android.telephony.ServiceState: boolean isEmergencyOnly()>','<android.app.ContextImpl: void init(android.app.LoadedApk,android.os.IBinder,android.app.ActivityThread,android.content.res.Resources,java.lang.String)>','<android.widget.Switch: void onMeasure(int,int)>','<com.android.server.MountService$1: void <init>(com.android.server.MountService)>','<android.webkit.HTML5VideoView: int getCurrentState()>','<com.android.internal.telephony.AdnRecordCache: void handleMessage(android.os.Message)>','<android.preference.PreferenceFragment: void onStop()>','<android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>','<android.app.BackStackRecord: android.app.FragmentTransaction addToBackStack(java.lang.String)>','<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>','<com.android.server.StatusBarManagerService$5: void <init>(com.android.server.StatusBarManagerService,boolean)>','<android.util.SparseLongArray: long get(int,long)>','<com.android.internal.telephony.cdma.CDMAPhone: void enableLocationUpdates()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>','<android.opengl.GLLogWrapper: void glColor4ub(byte,byte,byte,byte)>','<com.android.server.net.NetworkStatsRecorder: void removeUidLocked(int)>','<android.content.Intent: long getLongExtra(java.lang.String,long)>','<com.android.internal.telephony.cdma.CDMAPhone: void switchHoldingAndActive()>','<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()>','<android.app.ResultInfo: void <clinit>()>','<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>','<com.android.server.input.PersistentDataStore: boolean removeKeyboardLayout(java.lang.String,java.lang.String)>','<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>','<android.util.Xml: void <init>()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clear()>','<android.filterfw.core.Frame: int getCapacity()>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>','<android.telephony.SmsCbLocation: int describeContents()>','<com.android.internal.telephony.PhoneProxy: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>','<com.android.internal.widget.ActionBarView: void setIcon(int)>','<android.telephony.SmsMessage: int getStatusOnSim()>','<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>','<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>','<com.android.server.WifiService: java.util.HashMap access$2100(com.android.server.WifiService)>','<com.android.internal.telephony.DataConnectionAc: boolean isInactiveSync()>','<android.app.Instrumentation$ActivityMonitor: android.app.Instrumentation$ActivityResult getResult()>','<com.android.internal.telephony.PhoneBase: void unregisterForSuppServiceFailed(android.os.Handler)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isDevicePluggedIn()>','<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>','<com.android.internal.telephony.IccRecords: void registerForRecordsEvents(android.os.Handler,int,java.lang.Object)>','<android.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(android.animation.Animator)>','<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>','<android.net.NetworkInfo: boolean isFailover()>','<android.content.res.CompatibilityInfo$Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)>','<android.content.pm.ContainerEncryptionParams: int hashCode()>','<com.android.server.am.BatteryStatsService: void noteStopVideo(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: void exit()>','<android.filterfw.io.PatternScanner: boolean peek(java.util.regex.Pattern)>','<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>','<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>','<android.os.Bundle: boolean containsKey(java.lang.String)>','<com.android.vcard.VCardConfig: int getVCardTypeFromString(java.lang.String)>','<com.android.internal.telephony.cdma.SmsMessage: boolean isReplace()>','<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>','<android.webkit.ViewManager$3: void run()>','<android.database.sqlite.SQLiteClosable: void <init>()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnect(android.bluetooth.BluetoothDevice)>','<android.widget.Editor$SelectionActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>','<android.bluetooth.BluetoothDeviceProfileState: void access$7000(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)>','<android.widget.AbsListView$2: void <init>(android.widget.AbsListView)>','<android.preference.PreferenceManager: long getNextId()>','<android.database.sqlite.SQLiteSession: void <clinit>()>','<android.accounts.GrantCredentialsPermissionActivity: void finish()>','<android.filterfw.io.PatternScanner: boolean atEnd()>','<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)>','<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>','<android.preference.PreferenceFragment$2: void <init>(android.preference.PreferenceFragment)>','<com.android.server.ConnectivityService: int tether(java.lang.String)>','<android.media.MediaPlayer: android.media.MediaPlayer$OnTimedTextListener access$900(android.media.MediaPlayer)>','<android.provider.ContactsContract$CommonDataKinds$SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.webkit.WebViewClassic: void setWebViewClient(android.webkit.WebViewClient)>','<android.net.wifi.WifiManager$Channel: android.net.wifi.WifiManager$ChannelListener access$000(android.net.wifi.WifiManager$Channel)>','<android.bluetooth.BluetoothSocket: int read(byte[],int,int)>','<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>','<android.bluetooth.BluetoothProfileState$1: void <init>(android.bluetooth.BluetoothProfileState)>','<android.graphics.PointF: int describeContents()>','<android.os.RegistrantList: void add(android.os.Registrant)>','<com.android.internal.telephony.RIL$1: void onReceive(android.content.Context,android.content.Intent)>','<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>','<android.net.wifi.WifiConfigStore: void initialize()>','<com.android.internal.telephony.DataConnectionTracker: void onActionIntentReconnectAlarm(android.content.Intent)>','<android.net.MobileDataStateTracker: boolean isTeardownRequested()>','<android.graphics.drawable.InsetDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.webkit.WebViewCore: void sendMessage(int)>','<android.view.GLES20Canvas: void translate(float,float)>','<android.os.Debug: boolean cacheRegisterMap(java.lang.String)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void show()>','<android.content.ClipData$1: android.content.ClipData[] newArray(int)>','<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>','<android.webkit.CallbackProxy: android.webkit.WebChromeClient getWebChromeClient()>','<android.app.Dialog: void invalidateOptionsMenu()>','<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putLong(int,long)>','<android.view.Window: void <init>(android.content.Context)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getMobile()>','<android.accounts.AccountAuthenticatorResponse: int describeContents()>','<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>','<com.android.internal.telephony.BaseCommands: void registerForDataNetworkStateChanged(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void setBandMode(int,android.os.Message)>','<com.android.internal.policy.impl.KeyguardViewBase: com.android.internal.policy.impl.KeyguardViewCallback getCallback()>','<android.database.sqlite.SQLiteCustomFunction: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CustomFunction)>','<com.android.internal.telephony.cat.TextMessage: int describeContents()>','<android.ddm.DdmHandleThread: void connected()>','<android.app.ProgressDialog: android.widget.TextView access$200(android.app.ProgressDialog)>','<android.filterfw.core.KeyValueMap: java.lang.String toString()>','<android.webkit.BrowserFrame$2$2: void <init>(android.webkit.BrowserFrame$2)>','<com.android.internal.telephony.IccCardStatus: com.android.internal.telephony.IccCardApplication getApplication(int)>','<android.widget.AdapterView$AdapterDataSetObserver: void clearSavedState()>','<com.android.server.PowerManagerService: void access$3000(com.android.server.PowerManagerService,long,long,int)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doRename(int,java.lang.String,java.lang.String)>','<android.widget.HeaderViewListAdapter: int getViewTypeCount()>','<android.graphics.Rect: boolean isEmpty()>','<com.android.internal.view.InputConnectionWrapper: boolean performContextMenuAction(int)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>','<com.android.internal.telephony.cdma.CDMAPhone: void init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>','<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothSocket accept(int)>','<android.filterfw.core.SyncRunner: int determinePostRunState()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()>','<android.widget.SearchView: boolean access$1800(android.widget.SearchView,int,int,java.lang.String)>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager$Channel,android.net.wifi.WifiManager$ActionListener)>','<com.android.internal.policy.impl.LockScreen: android.content.Context access$1200(com.android.internal.policy.impl.LockScreen)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>','<android.view.View: void performCollectViewAttributes(android.view.View$AttachInfo,int)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()>','<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.database.BulkCursorDescriptor: void <init>()>','<android.server.BluetoothHealthProfileHandler: java.lang.String access$300(android.server.BluetoothHealthProfileHandler,int)>','<android.animation.LayoutTransition: void <init>()>','<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()>','<android.net.sip.SipProfile: java.lang.String getUriString()>','<android.widget.RemoteViews$SetOnClickPendingIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.net.wifi.WifiApConfigStore$ActiveState$1: void run()>','<com.android.server.wm.WindowManagerService$LayoutFields: boolean access$1500(com.android.server.wm.WindowManagerService$LayoutFields)>','<com.android.server.am.BatteryStatsService: void noteWifiOn()>','<com.android.internal.widget.SlidingTab$Slider: void measure()>','<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>','<android.content.pm.PermissionInfo$1: void <init>()>','<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>','<com.android.internal.telephony.CallManager: void unregisterForPreciseCallStateChanged(android.os.Handler)>','<android.os.Debug: int getGlobalFreedCount()>','<android.content.res.TypedArray: android.content.res.Resources getResources()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void <init>(com.android.internal.telephony.PhoneBase)>','<android.widget.ZoomButtonsController$Container: void <init>(android.widget.ZoomButtonsController,android.content.Context)>','<com.android.internal.os.BatteryStatsImpl: void readHistory(android.os.Parcel,boolean)>','<com.android.server.sip.SipService$SipSessionGroupExt: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<android.hardware.Camera$Parameters: void setAutoWhiteBalanceLock(boolean)>','<android.renderscript.RenderScript: void <clinit>()>','<android.app.ActivityManagerProxy: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>','<android.os.Handler: android.os.Looper getLooper()>','<android.webkit.WebViewClassic: int computeMaxScrollX()>','<android.telephony.CellInfo: long getTimingAdvance()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>','<android.graphics.Bitmap: boolean isMutable()>','<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>','<android.app.IProcessObserver$Stub$Proxy: void onImportanceChanged(int,int,int)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)>','<android.widget.ScrollView: void addView(android.view.View)>','<android.app.Activity: boolean isFinishing()>','<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>','<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri getPackageUri()>','<android.view.HardwareRenderer$Gl20Renderer: android.view.HardwareCanvas createCanvas()>','<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>','<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchTime(java.lang.String,int)>','<android.view.Gravity: void <init>()>','<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>','<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>','<android.view.ViewGroup: void dispatchSetSelected(boolean)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void writeExcessivePowerToParcelLocked(android.os.Parcel)>','<com.android.server.IntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>','<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>','<android.telephony.cdma.CdmaCellLocation: int getSystemId()>','<android.filterfw.core.Filter: boolean isOpen()>','<android.app.Activity$ManagedCursor: boolean access$300(android.app.Activity$ManagedCursor)>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getLine()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>','<android.view.View: boolean hasHoveredChild()>','<com.android.server.wm.AppWindowAnimator: void clearThumbnail()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>','<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>','<android.net.sip.SimpleSessionDescription$Media: void setBandwidth(java.lang.String,int)>','<android.app.backup.RestoreObserver: void restoreStarting(int)>','<com.android.vcard.VCardUtils$TextUtilsPort: boolean isPrintableAscii(char)>','<com.android.internal.telephony.gsm.SpnOverride: void <init>()>','<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>','<android.server.BluetoothService: int getAdapterConnectionState()>','<android.content.pm.IPackageManager$Stub$Proxy: void querySyncProviders(java.util.List,java.util.List)>','<android.webkit.WebSettingsClassic: void setForceUserScalable(boolean)>','<android.database.sqlite.SQLiteConnection$OperationLog: void failOperation(int,java.lang.Exception)>','<com.android.internal.widget.AbsActionBarView: void <clinit>()>','<com.android.server.PowerManagerService: float access$1902(com.android.server.PowerManagerService,float)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String)>','<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessage access$500(com.android.internal.telephony.cat.RilMessageDecoder)>','<android.graphics.drawable.Drawable: void clearColorFilter()>','<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>','<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>','<android.widget.AbsListView: void onAttachedToWindow()>','<com.android.server.wm.Session: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub: void <init>()>','<android.view.View$10: java.lang.Float get(android.view.View)>','<android.app.Service: void onDestroy()>','<com.android.internal.telephony.RIL: void sendCdmaSms(byte[],android.os.Message)>','<android.app.IActivityController$Stub$Proxy: boolean activityStarting(android.content.Intent,java.lang.String)>','<android.preference.Preference: boolean shouldPersist()>','<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(java.lang.String[])>','<android.view.IOnKeyguardExitResult$Stub: android.os.IBinder asBinder()>','<android.app.Fragment: android.app.LoaderManager getLoaderManager()>','<android.filterfw.core.StopWatchMap: void start(java.lang.String)>','<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>','<android.app.ActivityManager$TaskThumbnails: void readFromParcel(android.os.Parcel)>','<com.android.server.wm.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)>','<com.android.internal.policy.impl.PatternUnlockScreen: boolean needsInput()>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>','<android.os.DropBoxManager$Entry: java.lang.String getText(int)>','<android.app.ActivityManager$MemoryInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>','<com.android.server.wm.WindowManagerService: boolean access$700(com.android.server.wm.WindowManagerService)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String getRawInput()>','<android.database.sqlite.SQLiteConnection: void finalize()>','<com.android.server.location.LocationProviderProxy: boolean isEnabled()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumber(java.lang.String)>','<com.android.internal.telephony.Call: boolean isRinging()>','<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>','<android.media.MediaRouter$RouteInfo$1$1: void <init>(android.media.MediaRouter$RouteInfo$1,int,int)>','<android.media.AudioService: int access$2900(android.media.AudioService,int,int)>','<android.content.SyncAdapterType$1: android.content.SyncAdapterType createFromParcel(android.os.Parcel)>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void onText(java.lang.CharSequence)>','<android.net.Uri$PathPart: android.net.Uri$PathPart from(java.lang.String,java.lang.String)>','<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>','<android.text.Layout$Directions: void <init>(int[])>','<android.os.storage.IMountService$Stub$Proxy: int mountVolume(java.lang.String)>','<android.content.pm.PermissionInfo: void <init>()>','<android.text.HtmlToSpannedConverter: void <init>(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler,org.ccil.cowan.tagsoup.Parser)>','<android.server.search.SearchManagerService$MyPackageMonitor: void onSomePackagesChanged()>','<com.android.uiautomator.core.QueryController: java.lang.Object access$000(com.android.uiautomator.core.QueryController)>','<android.hardware.input.IInputManager$Stub$Proxy: void vibrate(int,long[],int,android.os.IBinder)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>','<android.app.Fragment: boolean isResumed()>','<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>','<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>','<android.view.SurfaceView$MyWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>','<android.os.INetworkManagementService$Stub$Proxy: boolean getIpForwardingEnabled()>','<android.net.NetworkStats: int internalSize()>','<com.android.server.wm.WindowManagerService: boolean inKeyguardRestrictedInputMode()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$State getOverallState()>','<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>','<com.android.internal.telephony.BaseCommands: void registerForVoiceRadioTechChanged(android.os.Handler,int,java.lang.Object)>','<android.server.BluetoothService: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>','<android.webkit.WebViewClassic$WebViewInputConnection: boolean setSelection(int,int)>','<com.android.server.sip.SipSessionListenerProxy: void onRegistering(android.net.sip.ISipSession)>','<android.net.NetworkTemplate$1: android.net.NetworkTemplate createFromParcel(android.os.Parcel)>','<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>','<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>','<com.android.internal.widget.ActionBarOverlayLayout: void pullChildren()>','<android.graphics.RectF: boolean equals(java.lang.Object)>','<android.widget.Editor: void sendOnTextChanged(int,int)>','<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)>','<android.net.sip.SipProfile: boolean access$902(android.net.sip.SipProfile,boolean)>','<android.os.SystemVibrator: boolean hasVibrator()>','<android.net.wifi.WifiStateMachine: void enableAllNetworks()>','<com.android.internal.telephony.IccCard: void supplyPuk2(java.lang.String,java.lang.String,android.os.Message)>','<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)>','<android.util.StateSet: void <init>()>','<com.android.server.sip.SipSessionGroup$KeepAliveProcessCallbackProxy$1: void run()>','<android.net.MobileDataStateTracker$MobileDataStateReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>','<android.graphics.drawable.LayerDrawable: void <init>()>','<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onRingingBack(android.net.sip.ISipSession)>','<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>','<android.net.wifi.WifiStateMachine$DriverUnloadingState: boolean processMessage(android.os.Message)>','<android.app.Instrumentation$Idler: void waitForIdle()>','<android.accounts.AccountManagerService$3: void onResult(android.os.Bundle)>','<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)>','<android.webkit.FindActionModeCallback: void setWebView(android.webkit.WebViewClassic)>','<android.widget.MediaController$5: void <init>(android.widget.MediaController)>','<android.webkit.SearchBoxImpl: void removeSearchBoxListener(android.webkit.SearchBox$SearchBoxListener)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: int access$900(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector fromParent(com.android.uiautomator.core.UiSelector)>','<com.android.internal.os.ProcessStats: int getLastUserTime()>','<com.android.internal.telephony.IccFileHandler$LoadLinearFixedContext: void <init>(int,android.os.Message)>','<android.graphics.Matrix$1: boolean postScale(float,float,float,float)>','<android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: int getCdmaEriIconMode()>','<android.app.ActivityThread$H: void handleMessage(android.os.Message)>','<android.app.Fragment: android.app.Fragment getTargetFragment()>','<com.android.vcard.VCardProperty: void setParameter(java.lang.String,java.lang.String)>','<android.net.NetworkUtils: java.net.InetAddress intToInetAddress(int)>','<android.webkit.DeviceMotionService$1: void <clinit>()>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.http.AndroidHttpClientConnection: boolean isStale()>','<android.filterfw.core.FilterGraph: void setupFilters()>','<android.server.BluetoothA2dpService$1: void <init>(android.server.BluetoothA2dpService)>','<android.net.sip.SipProfile$1: android.net.sip.SipProfile[] newArray(int)>','<com.android.server.PowerManagerService: void releaseWakeLock(android.os.IBinder,int)>','<android.content.res.TypedArray: void <init>(android.content.res.Resources,int[],int[],int)>','<com.android.server.am.ActivityManagerService: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)>','<com.android.server.WifiService: void <init>(android.content.Context)>','<android.server.BluetoothAdapterStateMachine: boolean access$1500(android.server.BluetoothAdapterStateMachine)>','<android.location.Address: void setAddressLine(int,java.lang.String)>','<android.widget.SearchView$6: void <init>(android.widget.SearchView)>','<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>','<android.widget.AbsListView: boolean onGenericMotionEvent(android.view.MotionEvent)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: void stopUi()>','<com.android.server.wm.InputMonitor: void setEventDispatchingLw(boolean)>','<com.android.internal.telephony.ApnContext: void setState(com.android.internal.telephony.DataConnectionTracker$State)>','<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>','<android.opengl.GLLogWrapper: void glFogfv(int,float[],int)>','<android.view.animation.GridLayoutAnimationController$AnimationParameters: void <init>()>','<com.android.server.wm.WindowManagerService: android.os.IBinder prepareDragSurface(android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface)>','<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>','<android.webkit.WebViewClassic: void tileProfilingStart()>','<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp access$2902(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp)>','<android.view.FocusFinder: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>','<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>','<android.widget.CheckedTextView: void setPadding(int,int,int,int)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)>','<com.android.server.LocationManagerService$Receiver: java.lang.String toString()>','<com.android.internal.util.StateMachine: void addState(com.android.internal.util.State)>','<com.android.vcard.VCardParserImpl_V21: com.android.vcard.VCardProperty constructPropertyData(java.lang.String)>','<com.android.internal.widget.SlidingTab: void setHoldAfterTrigger(boolean,boolean)>','<android.net.sip.SipSession$Listener: void onRegistrationDone(android.net.sip.SipSession,int)>','<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>','<android.view.Window: android.os.IBinder access$300(android.view.Window)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onPollPdp()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.animation.PropertyValuesHolder: void <init>(android.util.Property,android.animation.PropertyValuesHolder$1)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>','<com.android.internal.telephony.gsm.SIMRecords$1: void <clinit>()>','<android.inputmethodservice.KeyboardView$3: void swipeUp()>','<android.content.Intent$ShortcutIconResource: java.lang.String toString()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: int getLengthOfNationalDestinationCode(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.server.WallpaperManagerService$WallpaperData: android.os.RemoteCallbackList access$300(com.android.server.WallpaperManagerService$WallpaperData)>','<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(float,float)>','<android.view.textservice.SpellCheckerSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>','<android.content.SyncStats: int describeContents()>','<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)>','<android.widget.TextView: void drawableStateChanged()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(java.lang.String,java.util.Map)>','<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>','<com.android.server.wm.InputMonitor: boolean waitForInputDevicesReady(long)>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: void update(android.os.Message,java.lang.String,com.android.internal.util.State,com.android.internal.util.State)>','<com.android.internal.telephony.IccRecords: void <init>(com.android.internal.telephony.IccCard,android.content.Context,com.android.internal.telephony.CommandsInterface)>','<android.os.StrictMode: void <clinit>()>','<com.android.internal.widget.DrawableHolder: void onAnimationCancel(android.animation.Animator)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>','<android.app.ContextImpl$13: void <init>()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getDefaultCharset()>','<android.webkit.WebViewClassic: void setDownloadListener(android.webkit.DownloadListener)>','<com.android.internal.telephony.CallManager: boolean hasDisconnectedFgCall()>','<android.app.ActivityManager: int staticGetLargeMemoryClass()>','<android.net.wifi.WifiWatchdogStateMachine: void access$100(java.lang.String)>','<android.webkit.WebIconDatabaseClassic: void retainIconForPageUrl(java.lang.String)>','<android.hardware.Sensor: int getHandle()>','<android.webkit.CallbackProxy: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)>','<com.android.internal.policy.impl.SimPukUnlockScreen: com.android.internal.policy.impl.KeyguardUpdateMonitor access$200(com.android.internal.policy.impl.SimPukUnlockScreen)>','<android.text.BoringLayout: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>','<android.text.Layout: float getLineMax(int)>','<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>','<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>','<android.app.Dialog: android.view.View findViewById(int)>','<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>','<android.webkit.WebViewClassic$4: void onClick(android.content.DialogInterface,int)>','<com.android.server.sip.SipSessionListenerProxy$9: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,int,java.lang.String)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: void stop()>','<android.bluetooth.IBluetooth$Stub$Proxy: int getAdapterConnectionState()>','<android.net.NetworkInfo$State: android.net.NetworkInfo$State[] values()>','<com.android.server.am.AppBindRecord: void <init>(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,com.android.server.am.ProcessRecord)>','<android.bluetooth.BluetoothClass: boolean hasService(int)>','<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>','<android.nfc.INfcAdapter$Stub$Proxy: boolean enableNdefPush()>','<com.android.internal.policy.impl.LockPatternKeyguardView: com.android.internal.policy.impl.BiometricSensorUnlock access$1300(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.view.View$BaseSavedState: void <init>(android.os.Parcel)>','<android.server.BluetoothService: boolean allowIncomingProfileConnect(android.bluetooth.BluetoothDevice,boolean)>','<android.net.NetworkStatsHistory$1: android.net.NetworkStatsHistory createFromParcel(android.os.Parcel)>','<com.android.internal.os.BinderInternal$GcWatcher: void finalize()>','<android.net.wifi.WifiStateMachine: void disconnectCommand()>','<android.animation.AnimatorSet$Dependency: void <init>(android.animation.AnimatorSet$Node,int)>','<android.webkit.WebViewClassic: android.content.Context getContext()>','<android.app.Activity: void setRequestedOrientation(int)>','<android.content.res.AssetFileDescriptor: void close()>','<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>','<com.android.internal.widget.SlidingTab$1: void onAnimationStart(android.view.animation.Animation)>','<com.android.internal.telephony.PhoneProxy: java.lang.String getActiveApnHost(java.lang.String)>','<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>','<android.database.sqlite.SQLiteConnectionPool: void finalize()>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.inputmethodservice.InputMethodService: void initialize()>','<android.server.BluetoothService: boolean setDeviceOutOfBandData(java.lang.String,byte[],byte[])>','<android.service.wallpaper.IWallpaperConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>','<android.content.SyncStorageEngine: void stopSyncEvent(long,long,java.lang.String,long,long)>','<com.android.server.NetworkManagementSocketTagger: void setKernelCounterSet(int,int)>','<android.os.StrictMode: boolean access$400()>','<android.renderscript.RenderScript: void nAllocationData1D(int,int,int,int,float[],int)>','<com.android.server.location.GpsLocationProvider$GpsLocationProviderThread: void <init>(com.android.server.location.GpsLocationProvider)>','<android.app.Instrumentation: void endPerformanceSnapshot()>','<android.view.ViewGroup: int indexOfChild(android.view.View)>','<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: java.lang.String toString()>','<android.view.View: android.view.ViewParent getParentForAccessibility()>','<android.webkit.AccessibilityInjector: void onPageFinished(java.lang.String)>','<com.android.internal.view.InputConnectionWrapper: boolean performEditorAction(int)>','<com.android.internal.telephony.gsm.GsmCallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.Connection$PostDialState: void <clinit>()>','<android.view.DragEvent: void recycle()>','<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>','<android.content.IntentSender$SendIntentException: void <init>(java.lang.Exception)>','<com.android.internal.telephony.cat.Duration: int describeContents()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float getAlpha()>','<android.text.TextLine: void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int)>','<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()>','<android.net.wifi.WifiConfigStore: java.lang.String dump()>','<android.net.SSLCertificateSocketFactory$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>','<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)>','<android.accounts.IAccountManager$Stub$Proxy: boolean addAccount(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.view.IWindowManager$Stub$Proxy: void setForcedDisplaySize(int,int)>','<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>','<android.view.WindowManagerImpl: void endTrimMemory()>','<android.graphics.PointF: void <clinit>()>','<android.os.storage.StorageManager$UmsConnectionChangedStorageEvent: void <init>(android.os.storage.StorageManager,boolean)>','<com.android.server.pm.UserManager: void <init>(java.io.File,java.io.File)>','<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)>','<android.renderscript.ProgramRaster$Builder: android.renderscript.ProgramRaster$Builder setCullMode(android.renderscript.ProgramRaster$CullMode)>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>','<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>','<com.android.internal.view.menu.ActionMenuView: void setPresenter(com.android.internal.view.menu.ActionMenuPresenter)>','<android.view.textservice.TextInfo: void <clinit>()>','<android.view.View$6: void <init>(java.lang.String)>','<android.location.Country: int describeContents()>','<android.net.DhcpStateMachine: android.os.PowerManager$WakeLock access$000(android.net.DhcpStateMachine)>','<com.android.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)>','<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)>','<com.android.internal.app.ActionBarImpl$2: void onAnimationEnd(android.animation.Animator)>','<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>','<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)>','<android.widget.GridView: void onMeasure(int,int)>','<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>','<android.widget.AdapterViewAnimator$2: void <init>(android.widget.AdapterViewAnimator)>','<android.view.View: boolean isInTouchMode()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>','<android.filterfw.core.Filter: void unsetStatus(int)>','<com.android.server.am.ActivityRecord$Token: void <init>(com.android.server.am.ActivityRecord)>','<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>','<android.net.wifi.WifiManager: boolean addToBlacklist(java.lang.String)>','<android.widget.PopupWindow: void update()>','<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()>','<com.android.server.NetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>','<com.android.internal.widget.WaveView: boolean access$1102(com.android.internal.widget.WaveView,boolean)>','<android.view.GLES20RecordingCanvas: void start()>','<android.widget.Switch: int[] onCreateDrawableState(int)>','<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>','<android.telephony.SignalStrength$1: void <init>()>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyServiceState(com.android.internal.telephony.Phone)>','<com.android.server.sip.SipSessionListenerProxy: android.net.sip.ISipSessionListener access$000(com.android.server.sip.SipSessionListenerProxy)>','<android.webkit.WebViewCore$3: void onReceiveValue(java.lang.Object)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CallTracker getCallTracker()>','<android.server.BluetoothA2dpService: java.util.List getConnectedDevices()>','<com.android.server.LocationManagerService: boolean geocoderIsPresent()>','<com.android.internal.telephony.cdma.CDMAPhone: void getAvailableNetworks(android.os.Message)>','<android.server.BluetoothHealthProfileHandler: java.util.HashMap access$500(android.server.BluetoothHealthProfileHandler)>','<com.android.server.NsdService: void <clinit>()>','<android.inputmethodservice.ExtractEditText: void startInternalChanges()>','<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle(long)>','<android.widget.AbsSpinner: void <init>(android.content.Context)>','<android.graphics.drawable.ClipDrawable: boolean onStateChange(int[])>','<android.server.BluetoothEventLoop: void <clinit>()>','<android.webkit.WebViewClassic: void pasteFromClipboard()>','<android.view.ViewGroup: android.view.View findViewToTakeAccessibilityFocusFromHover(android.view.View,android.view.View)>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout: void onRemoteViewsLoaded(android.widget.RemoteViews)>','<android.content.SyncOperation: void <init>(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,long,boolean)>','<com.android.server.am.ActivityManagerService: boolean dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: void onDestroy(android.content.Intent)>','<android.widget.CursorAdapter$MyDataSetObserver: void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1)>','<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.sip.SipCallBase: boolean isMultiparty()>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>','<android.filterfw.core.Filter: java.util.Collection getInputPorts()>','<android.net.wifi.NetworkUpdateResult: void setIpChanged(boolean)>','<com.android.server.am.ContentProviderRecord: java.lang.String toShortString()>','<android.app.ApplicationPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>','<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: void access$3200(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec: void <init>()>','<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()>','<android.renderscript.RenderScript: int nAllocationCreateFromAssetStream(int,int,int)>','<android.graphics.drawable.ClipDrawable: void setAlpha(int)>','<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>','<com.android.server.NetworkManagementService: void access$800(com.android.server.NetworkManagementService,java.lang.String,java.lang.String)>','<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>','<android.graphics.drawable.InsetDrawable: boolean isStateful()>','<com.android.server.PowerManagerService: void userActivity(long,boolean,int)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$2: void run()>','<com.android.server.MountService$ObbState: void binderDied()>','<android.widget.ListView$ArrowScrollFocusResult: void populate(int,int)>','<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>','<android.content.IntentFilter: void addAction(java.lang.String)>','<android.view.View: void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)>','<android.app.StatusBarManager: void expand()>','<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)>','<com.android.server.LocationManagerService: java.util.List getAllProviders()>','<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAttribute(java.lang.String)>','<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews)>','<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>','<com.android.internal.os.storage.ExternalStorageFormatter: void onDestroy()>','<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>','<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>','<android.view.animation.Animation: void initialize(int,int,int,int)>','<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>','<android.widget.ListView: void resetList()>','<android.provider.Telephony$Sms$Draft: void <clinit>()>','<android.app.ActivityManager$ProcessErrorStateInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.webkit.WebViewCore: void access$4300(android.webkit.WebViewCore,int,int)>','<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>','<android.widget.Editor$CorrectionHighlighter: void <init>(android.widget.Editor)>','<android.app.Service: void stopForeground(boolean)>','<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void onServiceDisconnected(android.content.ComponentName)>','<android.app.ActivityManager$TaskThumbnails: android.graphics.Bitmap getSubThumbnail(int)>','<android.view.View: void setCameraDistance(float)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRoamingOff()>','<com.android.vcard.VCardComposer: void <init>(android.content.Context,int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState access$1800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.net.wifi.WifiStateMachine: boolean access$5602(android.net.wifi.WifiStateMachine,boolean)>','<android.webkit.WebViewClassic: int computeHorizontalScrollOffset()>','<com.android.vcard.VCardConfig: boolean usesDefactProperty(int)>','<android.app.LoaderManagerImpl: void doReportNextStart()>','<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>','<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiConfiguration$EnterpriseField: void <init>(android.net.wifi.WifiConfiguration,java.lang.String,android.net.wifi.WifiConfiguration$1)>','<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyDropBox()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$BondedDevice access$4600(android.bluetooth.BluetoothDeviceProfileState)>','<android.app.ActivityManagerProxy: void updatePersistentConfiguration(android.content.res.Configuration)>','<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>','<android.media.AudioManager: int getDevicesForStream(int)>','<android.view.InputEvent$1: android.view.InputEvent[] newArray(int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>','<android.app.Activity: void performDestroy()>','<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>','<android.view.ViewConfiguration: int getTouchSlop()>','<android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter: java.lang.Object getItem(int)>','<android.widget.CompoundButton$SavedState: void <init>(android.os.Parcelable)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void hide()>','<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>','<android.view.textservice.SpellCheckerSubtype: void <clinit>()>','<android.content.res.CompatibilityInfo$Translator: void <init>(android.content.res.CompatibilityInfo)>','<android.webkit.WebSettings: void <init>()>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$700(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendNameProperties(java.util.List)>','<com.android.server.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)>','<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>','<android.net.IThrottleManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.text.method.BaseMovementMethod: boolean scrollPageUp(android.widget.TextView,android.text.Spannable)>','<com.android.server.WifiService$Multicaster: void binderDied()>','<android.opengl.GLLogWrapper: void glDrawTexivOES(int[],int)>','<android.widget.Spinner: int getDropDownWidth()>','<android.net.wifi.WifiManager$Channel: android.net.wifi.WifiManager$ChannelListener access$002(android.net.wifi.WifiManager$Channel,android.net.wifi.WifiManager$ChannelListener)>','<com.android.server.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long)>','<com.android.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)>','<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<android.media.MediaRouter: void selectRoute(int,android.media.MediaRouter$RouteInfo)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void pauseAndDispatch()>','<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>','<android.view.View: int getLeft()>','<android.bluetooth.BluetoothUuid: boolean containsAllUuids(android.os.ParcelUuid[],android.os.ParcelUuid[])>','<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context)>','<android.app.NotificationManager: void cancelAll()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isDeviceProvisioned()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.MenuInflater getMenuInflater()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onEnableApn(int,int)>','<com.android.server.NsdService: boolean access$2400(com.android.server.NsdService,int,android.net.nsd.NsdServiceInfo)>','<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>','<android.os.ParcelFileDescriptor$1: void <init>()>','<android.webkit.WebView$WebViewTransport: void <init>(android.webkit.WebView)>','<com.android.server.AppWidgetServiceImpl$2: void <init>(com.android.server.AppWidgetServiceImpl)>','<com.android.server.location.PassiveProvider: void enable()>','<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.location.LocationBasedCountryDetector$1: void onProviderDisabled(java.lang.String)>','<com.android.server.LocationManagerService$UpdateRecord: java.lang.String toString()>','<android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>','<com.android.internal.net.LegacyVpnInfo$1: com.android.internal.net.LegacyVpnInfo createFromParcel(android.os.Parcel)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNoInternationalDialling()>','<android.view.ViewRootImpl: void createContextMenu(android.view.ContextMenu)>','<android.view.SurfaceView$4: void unlockCanvasAndPost(android.graphics.Canvas)>','<android.widget.RemoteViews$SetPendingIntentTemplate$1: void <init>(android.widget.RemoteViews$SetPendingIntentTemplate,android.widget.RemoteViews$OnClickHandler)>','<com.android.server.ConnectivityService: void access$1000(com.android.server.ConnectivityService,android.net.NetworkInfo)>','<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config nativeToConfig(int)>','<android.view.animation.AnimationSet: void setRepeatMode(int)>','<android.webkit.WebSyncManager: void sync()>','<android.widget.TextView$1: void <init>(android.widget.TextView,java.lang.CharSequence)>','<android.app.Instrumentation: void execStartActivities(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle)>','<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>','<android.widget.AbsListView: void onGlobalLayout()>','<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>','<android.os.ServiceManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.net.IConnectivityManager$Stub$Proxy: boolean getMobileDataEnabled()>','<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void log(java.lang.String)>','<android.app.Fragment: void onAttach(android.app.Activity)>','<android.animation.Animator: android.animation.Animator clone()>','<android.bluetooth.BluetoothDeviceProfileState: boolean access$1402(android.bluetooth.BluetoothDeviceProfileState,boolean)>','<com.android.internal.os.ProcessStats: void buildWorkingProcs()>','<com.android.internal.telephony.gsm.GsmSMSDispatcher$SmsCbConcatInfo: void <init>(com.android.internal.telephony.gsm.SmsCbHeader,android.telephony.SmsCbLocation)>','<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>','<android.webkit.WebSettings$PluginState: android.webkit.WebSettings$PluginState[] values()>','<android.widget.ZoomButtonsController$5: void <init>(android.widget.ZoomButtonsController)>','<android.text.HtmlToSpannedConverter$Underline: void <init>(android.text.HtmlToSpannedConverter$1)>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>','<com.android.internal.app.IUsageStats$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.WebViewClassic: int contentToViewDimension(int)>','<android.content.pm.IPackageDeleteObserver$Stub: android.content.pm.IPackageDeleteObserver asInterface(android.os.IBinder)>','<android.webkit.WebSettingsClassic: void setLinkPrefetchEnabled(boolean)>','<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long)>','<android.text.Layout$Alignment: android.text.Layout$Alignment[] values()>','<com.android.internal.telephony.cat.CommandDetails: void <init>(android.os.Parcel)>','<com.android.server.pm.PackageManagerService: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void reset()>','<com.android.internal.telephony.ServiceStateTracker: boolean shouldFixTimeZoneNow(com.android.internal.telephony.PhoneBase,java.lang.String,java.lang.String,boolean)>','<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>','<android.os.storage.StorageManager$StorageEvent: android.os.Message getMessage()>','<android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity parse(java.lang.String)>','<android.animation.ValueAnimator: int getCurrentAnimationsCount()>','<com.android.uiautomator.core.UiDevice: void freezeRotation()>','<android.text.style.SpellCheckSpan: void <init>()>','<android.widget.FastScroller: android.widget.SectionIndexer getSectionIndexer()>','<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>','<com.android.internal.view.BaseSurfaceHolder: void ungetCallbacks()>','<com.android.server.MountService: int changeEncryptionPassword(java.lang.String)>','<com.android.internal.statusbar.StatusBarNotification: void readFromParcel(android.os.Parcel)>','<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>','<com.android.internal.view.IInputMethodSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.HTML5VideoViewProxy: void seek(int)>','<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>','<com.android.server.location.GpsLocationProvider: int getStatus(android.os.Bundle)>','<android.text.BoringLayout: int getTopPadding()>','<android.os.Process: int getUidForPid(int)>','<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)>','<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>','<com.android.internal.view.IInputMethodClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setColorMaskEnabled(boolean,boolean,boolean,boolean)>','<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void hold()>','<android.view.VolumePanel: void onPlaySound(int,int)>','<android.net.http.Request: void handleSslErrorResponse(boolean)>','<android.webkit.WebChromeClient: void <init>()>','<android.widget.TextView: boolean isSingleLine()>','<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)>','<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>','<com.android.vcard.VCardComposer: void <init>(android.content.Context)>','<android.opengl.GLLogWrapper: void glNormalPointer(int,int,java.nio.Buffer)>','<android.net.Uri$Part: android.net.Uri$Part nonNull(android.net.Uri$Part)>','<android.opengl.GLLogWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$1: void handleMessage(android.os.Message)>','<android.webkit.ZoomManager: int access$1402(android.webkit.ZoomManager,int)>','<android.content.pm.Signature: void <init>(java.lang.String)>','<android.telephony.SmsCbEtwsInfo: boolean isEmergencyUserAlert()>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.TextView: void setShowSoftInputOnFocus(boolean)>','<android.net.wifi.p2p.WifiP2pGroup: void <init>(android.net.wifi.p2p.WifiP2pGroup)>','<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()>','<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getRegionCodeForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.graphics.Color: void colorToHSV(int,float[])>','<android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)>','<android.text.SpannableString: void <init>(java.lang.CharSequence)>','<android.filterfw.core.Filter: void initWithValueMap(android.filterfw.core.KeyValueMap)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$1800(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>','<android.filterpacks.imageproc.RedEyeFilter: void setupPorts()>','<android.app.Instrumentation: android.content.Context getTargetContext()>','<android.opengl.Matrix: void translateM(float[],int,float,float,float)>','<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_TEST(android.renderscript.RenderScript)>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>','<android.app.Notification: android.app.Notification$Action[] access$202(android.app.Notification,android.app.Notification$Action[])>','<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>','<android.net.wifi.WifiManager: int access$308(android.net.wifi.WifiManager)>','<android.content.pm.ContainerEncryptionParams: void <init>(java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey)>','<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>','<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String decodeGSMPackedString(byte[])>','<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>','<android.os.storage.IMountService$Stub$Proxy: void unregisterListener(android.os.storage.IMountServiceListener)>','<android.media.IAudioService$Stub$Proxy: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>','<android.webkit.WebViewClassic: android.webkit.WebViewClassic$FocusTransitionDrawable access$7502(android.webkit.WebViewClassic,android.webkit.WebViewClassic$FocusTransitionDrawable)>','<com.android.server.AlarmManagerService: int access$1400(com.android.server.AlarmManagerService)>','<android.text.HtmlToSpannedConverter$Header: void <init>(int)>','<com.android.internal.telephony.sip.SipPhone: void getOutgoingCallerIdDisplay(android.os.Message)>','<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceDown(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: boolean getIccRecordsLoaded()>','<android.graphics.Bitmap: int ni()>','<android.graphics.drawable.ClipDrawable: boolean isStateful()>','<android.app.IThumbnailReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)>','<android.os.storage.IMountShutdownObserver$Stub: void <init>()>','<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>','<com.android.vcard.VCardBuilder: void appendEmailLine(int,java.lang.String,java.lang.String,boolean)>','<android.view.View: int getVerticalFadingEdgeLength()>','<android.security.KeyStore: boolean verify(java.lang.String,byte[],byte[])>','<com.android.internal.telephony.RIL: void queryTTYMode(android.os.Message)>','<android.app.Activity: boolean isChild()>','<android.renderscript.Element: android.renderscript.Element U32_3(android.renderscript.RenderScript)>','<android.app.ActivityThread$ApplicationThread: void updateTimeZone()>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void setLoadingViewTemplates(android.widget.RemoteViews,android.widget.RemoteViews)>','<com.android.server.ConnectivityService: boolean access$2600(com.android.server.ConnectivityService,java.lang.String,java.lang.String,java.util.Collection,java.lang.String)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String)>','<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>','<com.android.server.wm.Session: boolean performHapticFeedback(android.view.IWindow,int,boolean)>','<android.app.ContextImpl$ApplicationContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>','<android.server.BluetoothA2dpService$IntentBroadcastHandler: void <init>(android.server.BluetoothA2dpService,android.server.BluetoothA2dpService$1)>','<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>','<android.webkit.WebViewClassic$8: android.webkit.WebViewCore$DrawData doInBackground(java.io.InputStream[])>','<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>','<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.HardwareRenderer$GlRenderer: boolean validate()>','<android.webkit.CookieManager: boolean acceptCookie()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean isEnabled()>','<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener)>','<com.android.server.connectivity.Tethering: android.net.INetworkStatsService access$2300(com.android.server.connectivity.Tethering)>','<android.bluetooth.BluetoothPbap: void <init>(android.content.Context,android.bluetooth.BluetoothPbap$ServiceListener)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()>','<android.widget.ScrollView: void draw(android.graphics.Canvas)>','<android.text.SpanSet: void <init>(java.lang.Class)>','<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>','<android.server.BluetoothAdapterStateMachine: void access$5100(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.widget.RemoteViewsAdapter: void access$300(android.widget.RemoteViewsAdapter)>','<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>','<android.graphics.Matrix$1: void setSkew(float,float)>','<com.android.internal.telephony.cdma.CdmaMmiCode: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void pause()>','<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>','<com.android.internal.policy.impl.PhoneWindowManager: int windowTypeToLayerLw(int)>','<android.webkit.WebViewClassic: int getProgress()>','<com.android.internal.widget.LockPatternUtils: void reportSuccessfulPasswordAttempt()>','<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>','<android.net.wifi.WifiNative: boolean startWpsPinKeypad(java.lang.String,java.lang.String)>','<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>','<android.view.GestureDetector$SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>','<android.net.DummyDataStateTracker: void setUserDataEnable(boolean)>','<android.text.method.TextKeyListener$SettingsObserver: void onChange(boolean)>','<android.text.SpannedString: int getSpanStart(java.lang.Object)>','<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportFailedBiometricUnlockAttempt()>','<com.android.internal.view.menu.ActionMenuPresenter: com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup access$102(com.android.internal.view.menu.ActionMenuPresenter,com.android.internal.view.menu.ActionMenuPresenter$OverflowPopup)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$3: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.WpsInfo,android.widget.EditText)>','<android.view.GLES20Canvas: int getDisplayListSize(int)>','<android.app.backup.BackupDataInputStream: int read(byte[])>','<android.app.ActivityManagerNative: void <init>()>','<android.webkit.WebViewInputDispatcher: void access$600(android.webkit.WebViewInputDispatcher)>','<android.webkit.WebViewCore: void access$5900(android.webkit.WebViewCore,int,java.lang.String)>','<com.android.server.PowerManagerService: boolean access$6302(com.android.server.PowerManagerService,boolean)>','<android.widget.RemoteViewsAdapter$1: void run()>','<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String getMin()>','<com.android.internal.telephony.gsm.GSMPhone: void explicitCallTransfer()>','<com.android.internal.telephony.gsm.GSMPhone: boolean canDial()>','<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<com.android.server.NsdService$NativeCallbackReceiver: void onDaemonConnected()>','<com.android.internal.telephony.cat.CatCmdMessage: void writeToParcel(android.os.Parcel,int)>','<android.net.LocalSocketImpl$SocketOutputStream: void write(int)>','<android.view.accessibility.AccessibilityRecord: boolean isEnabled()>','<com.android.server.pm.PackageManagerService$InstallArgs: void <init>(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.ManifestDigest)>','<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>','<com.android.internal.telephony.cdma.CdmaLteUiccFileHandler: void <init>(com.android.internal.telephony.IccCard,java.lang.String,com.android.internal.telephony.CommandsInterface)>','<android.media.RemoteControlClient: android.media.RemoteControlClient$MetadataEditor editMetadata(boolean)>','<android.filterfw.core.FilterFunction: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.Filter)>','<android.animation.Keyframe: java.lang.Object clone()>','<android.view.MenuInflater$MenuState: void addItem()>','<android.preference.Preference: void requireKey()>','<android.widget.Editor$InsertionPointCursorController: void showWithActionPopup()>','<com.android.server.PowerManagerService: void setKeyboardVisibility(boolean)>','<android.view.Choreographer$CallbackQueue: android.view.Choreographer$CallbackRecord extractDueCallbacksLocked(long)>','<android.net.EthernetDataTracker: void access$400(android.net.EthernetDataTracker,java.lang.String)>','<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>','<android.graphics.drawable.Drawable: boolean onStateChange(int[])>','<android.widget.OverScroller: void setFriction(float)>','<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isAlphaNumber(java.lang.String)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setDataSource(android.content.Context,android.net.Uri)>','<android.content.IContentService$Stub$Proxy: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>','<android.text.format.Time: void <init>(java.lang.String)>','<android.webkit.ZoomManager: int getDocumentAnchorX()>','<com.android.internal.widget.PointerLocationView$PointerState: float access$900(com.android.internal.widget.PointerLocationView$PointerState)>','<android.bluetooth.IBluetooth$Stub$Proxy: void setBluetoothTethering(boolean)>','<android.os.INetworkManagementService$Stub$Proxy: void setDnsServersForInterface(java.lang.String,java.lang.String[])>','<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>','<com.android.uiautomator.core.InteractionController: void unfreezeRotation()>','<android.bluetooth.BluetoothSocket: int bindListen()>','<com.android.internal.telephony.gsm.SmsMessage: int getStatus()>','<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>','<android.graphics.SurfaceTexture$EventHandler: void handleMessage(android.os.Message)>','<android.view.ViewGroup: void unFocus()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock()>','<android.widget.RelativeLayout: void <init>(android.content.Context)>','<com.android.server.wm.WindowAnimator: void setCurrentFocus(com.android.server.wm.WindowState)>','<android.filterfw.io.GraphReader: void <init>()>','<android.widget.AutoCompleteTextView: boolean isDropDownAlwaysVisible()>','<android.webkit.GeolocationPermissionsClassic: void allow(java.lang.String)>','<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>','<android.preference.GenericInflater: void <clinit>()>','<android.util.MathUtils: float min(float,float)>','<android.widget.Editor$SelectionStartHandleView: void updatePosition(float,float)>','<android.hardware.input.InputManager: void registerInputDeviceListener(android.hardware.input.InputManager$InputDeviceListener,android.os.Handler)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void access$5000(com.android.server.PowerManagerService$ScreenBrightnessAnimator,int,boolean,int)>','<android.webkit.WebView: void flingScroll(int,int)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: int getLaunches(int)>','<com.android.internal.widget.PointerLocationView$PointerState: float access$600(com.android.internal.widget.PointerLocationView$PointerState)>','<com.android.internal.app.AlertController: void setView(android.view.View,int,int,int,int)>','<android.webkit.ZoomManager: void updateDefaultZoomDensity(float)>','<android.filterfw.geometry.Point: float length()>','<android.app.ContextImpl$24: java.lang.Object createService(android.app.ContextImpl)>','<android.view.KeyEvent: java.lang.String keyCodeToString(int)>','<android.hardware.Sensor: float getMaximumRange()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(java.lang.String,java.lang.String)>','<android.accounts.AccountManager$BaseFutureTask: void access$800(android.accounts.AccountManager$BaseFutureTask,java.lang.Throwable)>','<com.android.internal.telephony.test.ModelInterpreter: void pauseResponses()>','<android.view.GLES20Canvas: boolean isOpaque()>','<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>','<android.widget.MediaController: void onFinishInflate()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCount()>','<android.os.HandlerThread: void onLooperPrepared()>','<android.graphics.drawable.Drawable: int getMinimumHeight()>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void enter()>','<android.view.inputmethod.InputMethodManager: void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper)>','<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>','<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>','<android.accounts.AccountManagerService$7: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.os.RemoteCallback$1: void <init>()>','<com.android.server.am.UriPermissionOwner: void removeReadPermission(com.android.server.am.UriPermission)>','<com.android.internal.telephony.sip.SipPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>','<android.widget.ZoomControls: void hide()>','<android.view.View$2: void <init>(android.view.View,int)>','<android.graphics.Shader: void finalize()>','<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>','<com.android.server.pm.PackageManagerService: boolean access$3500(com.android.server.pm.PackageManagerService,java.lang.String,int)>','<android.hardware.Camera$Parameters: void setExposureCompensation(int)>','<android.webkit.WebViewClassic$InvokeListBox$1: void <init>(android.webkit.WebViewClassic$InvokeListBox,android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter,android.widget.ListView)>','<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>','<android.net.IThrottleManager$Stub$Proxy: long getByteCount(java.lang.String,int,int,int)>','<com.android.vcard.VCardProperty: void setRawValue(java.lang.String)>','<android.util.MathUtils: float map(float,float,float,float,float)>','<android.content.pm.IPackageStatsObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.policy.impl.PhoneWindowManager: void setHdmiPlugged(boolean)>','<android.view.VolumePanel: int access$202(android.view.VolumePanel,int)>','<android.webkit.WebSettingsClassic: boolean getHardwareAccelSkiaEnabled()>','<com.android.internal.view.IInputContext$Stub: android.os.IBinder asBinder()>','<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>','<android.security.IKeyChainService$Stub$Proxy: boolean hasGrant(int,java.lang.String)>','<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: boolean isTitleOptional()>','<android.content.pm.ContainerEncryptionParams: java.lang.String toString()>','<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>','<android.inputmethodservice.KeyboardView: boolean handleBack()>','<android.os.RemoteCallbackList$Callback: void <init>(android.os.RemoteCallbackList,android.os.IInterface,java.lang.Object)>','<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String,int)>','<com.android.internal.widget.DrawableHolder: int getWidth()>','<android.server.BluetoothInputProfileHandler: java.util.List getConnectedInputDevices()>','<android.widget.ImageButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean access$102(com.android.internal.telephony.gsm.SimSmsInterfaceManager,boolean)>','<com.android.internal.telephony.cdma.SmsMessage: java.util.List getSmsCbProgramData()>','<android.net.sip.SipAudioCall$1: void onRegistering(android.net.sip.SipSession)>','<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()>','<com.android.server.am.ActivityManagerService: boolean switchUser(int)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doPostDeleteLI(boolean)>','<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>','<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: void <init>(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataConnection$1)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>','<android.app.ActivityManager: boolean isLargeRAM()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void cleanUpResourcesLI()>','<com.android.internal.telephony.cdma.sms.BearerData: void <init>()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener access$1002(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)>','<android.text.SpanSet: int getNextTransition(int,int)>','<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.text.Layout$TabStops: void <init>(int,java.lang.Object[])>','<android.view.WindowManagerImpl$CompatModeWrapper: void removeViewImmediate(android.view.View)>','<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>','<android.view.View: void postOnAnimation(java.lang.Runnable)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getResourcePath()>','<android.media.AudioService: int getRemoteStreamVolume()>','<android.server.BluetoothAdapterStateMachine: void access$2800(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<android.view.GLES20RecordingCanvas: void drawRect(float,float,float,float,android.graphics.Paint)>','<android.os.Bundle: byte[] getByteArray(java.lang.String)>','<android.view.InputChannel: java.lang.String toString()>','<android.graphics.Color: int parseColor(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: android.net.INetworkStatsService access$1800(com.android.server.net.NetworkPolicyManagerService)>','<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>','<android.webkit.WebIconDatabase: void open(java.lang.String)>','<android.view.ViewRootImpl: void <init>(android.content.Context)>','<com.android.server.WifiService: android.net.wifi.WifiConfiguration getWifiApConfiguration()>','<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>','<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>','<android.webkit.WebViewDatabase: void <init>()>','<android.hardware.input.KeyboardLayout$1: void <init>()>','<android.view.ViewRootImpl$InputMethodCallback: void sessionCreated(com.android.internal.view.IInputMethodSession)>','<android.view.ViewGroup: void dispatchAttachedToWindow(android.view.View$AttachInfo,int)>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)>','<com.android.internal.telephony.gsm.GsmDataConnection: void log(java.lang.String)>','<android.preference.PreferenceGroupAdapter: int getViewTypeCount()>','<android.net.wifi.WifiStateMachine: boolean access$6500(android.net.wifi.WifiStateMachine)>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()>','<android.media.IRemoteVolumeObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.policy.impl.GlobalActions: void access$1800(com.android.internal.policy.impl.GlobalActions)>','<android.net.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger access$9100(android.net.wifi.WifiStateMachine)>','<com.android.internal.telephony.IccCardStatus: int getImsSubscriptionAppIndex()>','<android.view.GLES20RecordingCanvas: void <clinit>()>','<android.content.SyncManager$ActiveSyncContext: void close()>','<android.filterfw.core.GLEnvironment: void <init>()>','<android.filterfw.geometry.Quad: android.filterfw.geometry.Rectangle boundingBox()>','<android.content.ContentResolver$ParcelFileDescriptorInner: void close()>','<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock access$1400(com.android.server.ConnectivityService)>','<com.android.server.wm.WindowManagerService: void rebootSafeMode()>','<android.location.Location: void dump(android.util.Printer,java.lang.String)>','<android.net.wifi.p2p.WifiP2pConfig$Persist: android.net.wifi.p2p.WifiP2pConfig$Persist[] values()>','<com.android.internal.policy.impl.KeyguardViewMediator$4: void <init>(com.android.internal.policy.impl.KeyguardViewMediator)>','<android.os.IVibratorService$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.WallpaperManagerService: void clearWallpaper()>','<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>','<android.animation.LayoutTransition: void endChangingAnimations()>','<com.android.internal.policy.PolicyManager: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>','<android.webkit.CookieSyncManager: void resetSync()>','<android.net.EthernetDataTracker: android.os.Handler access$700(android.net.EthernetDataTracker)>','<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks()>','<android.widget.MediaController: void show()>','<android.widget.Switch: void onLayout(boolean,int,int,int,int)>','<android.bluetooth.BluetoothHealthCallback: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.app.ActivityThread: void access$2600(android.app.ActivityThread,android.app.ActivityThread$DumpComponentInfo)>','<com.android.internal.database.SortCursor$1: void <init>(com.android.internal.database.SortCursor)>','<android.graphics.SurfaceTexture: void <init>(int)>','<android.net.http.SslError: java.lang.String getUrl()>','<android.view.Window: android.view.Window getContainer()>','<android.net.Uri$Builder: android.net.Uri$Builder fragment(android.net.Uri$Part)>','<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>','<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>','<android.widget.AbsListView: android.view.VelocityTracker access$900(android.widget.AbsListView)>','<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>','<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>','<android.webkit.WebView: void goForward()>','<android.util.LongSparseArray: android.util.LongSparseArray clone()>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: boolean doesFallbackUnlockScreenExist()>','<android.nfc.INfcAdapterExtras$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>','<android.server.BluetoothBondState: void clearPinAttempts(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Call getForegroundCall()>','<android.view.MotionEvent$PointerProperties: boolean access$000(android.view.MotionEvent$PointerProperties,android.view.MotionEvent$PointerProperties)>','<android.webkit.WebViewCore: void <init>(android.content.Context,android.webkit.WebViewClassic,android.webkit.CallbackProxy,java.util.Map)>','<com.android.server.NsdService$NativeEvent: void <init>(com.android.server.NsdService,int,java.lang.String)>','<com.android.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>','<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>','<com.android.server.sip.SipSessionGroup$SipSessionCallReceiverImpl: void <init>(com.android.server.sip.SipSessionGroup,android.net.sip.ISipSessionListener)>','<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>','<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>','<android.widget.ExpandableListConnector: void <init>(android.widget.ExpandableListAdapter)>','<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.WebSettingsClassic: void setSerifFontFamily(java.lang.String)>','<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(int,android.os.IBinder,java.lang.String,android.os.WorkSource)>','<android.view.ViewGroup$ViewLocationHolder: android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>','<android.webkit.CallbackProxy$5: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<android.view.FocusFinder: android.view.View findNextInputFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int)>','<android.hardware.input.IInputManager$Stub$Proxy: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.MotionEvent: int getPointerCount()>','<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>','<android.media.AudioService: void setBluetoothA2dpOn(boolean)>','<android.filterpacks.base.FrameSource: void process(android.filterfw.core.FilterContext)>','<android.os.storage.StorageVolume$1: android.os.storage.StorageVolume[] newArray(int)>','<android.server.BluetoothService$1: void handleMessage(android.os.Message)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>','<android.widget.AbsListView$PositionScroller$1: void run()>','<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)>','<android.graphics.RectF: void roundOut(android.graphics.Rect)>','<android.hardware.Camera$Parameters: void remove(java.lang.String)>','<android.content.ContentValues: void putAll(android.content.ContentValues)>','<android.content.res.XmlBlock$Parser: java.lang.Object getProperty(java.lang.String)>','<android.preference.Preference: boolean getPersistedBoolean(boolean)>','<com.android.internal.util.FileRotator$FileInfo: void <init>(java.lang.String)>','<com.android.server.wm.WindowStateAnimator: boolean isWindowAnimating()>','<android.net.NetworkIdentity: java.lang.String toString()>','<com.android.internal.policy.impl.LockScreen: void onAttachedToWindow()>','<android.net.rtp.AudioGroup: void <clinit>()>','<com.android.server.AppWidgetService: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName)>','<com.android.internal.telephony.ApnContext: java.lang.String getReason()>','<android.app.Fragment: void onStop()>','<android.content.res.AssetManager: void close()>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void toggleSoftInput(int,int)>','<android.location.Geocoder: void <init>(android.content.Context)>','<com.android.internal.widget.SlidingTab$2: void onAnimationEnd(android.view.animation.Animation)>','<android.media.AudioService: void setRemoteStreamVolume(int)>','<android.net.NetworkStatsHistory: long getEnd()>','<android.graphics.Path: void close()>','<com.android.internal.telephony.CallForwardInfo: java.lang.String toString()>','<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>','<com.android.internal.app.AlertController: void setMessage(java.lang.CharSequence)>','<com.android.server.location.PassiveProvider: void addListener(int)>','<com.android.internal.database.SortCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>','<android.content.pm.PackageParser$ServiceIntentInfo: java.lang.String toString()>','<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>','<android.nfc.INfcTag$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.AudioService: boolean isBluetoothScoOn()>','<android.app.AlertDialog: android.widget.ListView getListView()>','<android.server.BluetoothInputProfileHandler: void setInitialInputDevicePriority(android.bluetooth.BluetoothDevice,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void notifySignalStrength()>','<android.widget.TextView: boolean isInBatchEditMode()>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceStatusChanged(java.lang.String,boolean)>','<android.webkit.WebViewCore: java.lang.String access$5800(android.webkit.WebViewCore,int,int,int,int,int)>','<com.android.server.MountService: com.android.server.NativeDaemonConnector access$1400(com.android.server.MountService)>','<com.android.internal.policy.impl.KeyguardViewMediator: boolean isShowing()>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>','<android.view.GLES20RecordingCanvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>','<com.android.internal.telephony.IccCard: void supplyPin(java.lang.String,android.os.Message)>','<android.view.AccessibilityInteractionController$1: void onReleased(android.util.Poolable)>','<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.widget.Spinner: void setAdapter(android.widget.Adapter)>','<android.nfc.NdefRecord: boolean equals(java.lang.Object)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: void writeExternal(java.io.ObjectOutput)>','<com.android.vcard.VCardComposer: java.lang.String createOneEntry(java.lang.reflect.Method)>','<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getVoiceMailAlphaTag()>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)>','<android.webkit.WebSettingsClassic: boolean getUseFixedViewport()>','<com.android.server.NetworkManagementService: java.util.concurrent.CountDownLatch access$100(com.android.server.NetworkManagementService)>','<com.android.vcard.VCardUtils: java.lang.String convertStringCharset(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.location.GpsLocationProvider$GpsLocationProviderThread: void run()>','<android.os.Message: java.lang.String toString()>','<com.android.internal.util.TypedProperties: void parse(java.io.Reader,java.util.Map)>','<android.net.LocalSocket: boolean isClosed()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()>','<com.android.server.am.ActivityManagerService: void reportResumedActivityLocked(com.android.server.am.ActivityRecord)>','<android.widget.AdapterViewAnimator$CheckForTap: void <init>(android.widget.AdapterViewAnimator)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean isProtectedBroadcast(java.lang.String)>','<com.android.server.usb.UsbDeviceManager: java.lang.String access$1000(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>','<android.database.BulkCursorProxy: void deactivate()>','<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.widget.ActionBarView: android.app.ActionBar$OnNavigationListener access$000(com.android.internal.widget.ActionBarView)>','<com.android.internal.location.DummyLocationProvider: void setSupportsAltitude(boolean)>','<android.webkit.ZoomManager: float access$900(android.webkit.ZoomManager)>','<com.android.server.net.NetworkStatsService$1: void close()>','<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>','<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>','<android.filterfw.core.FrameFormat: int calcSize(int[])>','<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>','<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec: java.lang.String toString()>','<android.text.method.DigitsKeyListener: int getInputType()>','<com.android.internal.widget.SlidingTab$1: void onAnimationRepeat(android.view.animation.Animation)>','<android.net.Uri$1: android.net.Uri createFromParcel(android.os.Parcel)>','<android.net.NetworkStats: android.net.NetworkStats groupedByUid()>','<android.webkit.WebView: boolean pageDown(boolean)>','<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>','<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>','<com.android.internal.telephony.AdnRecord: void <init>(java.lang.String,java.lang.String)>','<android.security.IKeyChainService$Stub$Proxy: boolean reset()>','<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder$OnErrorListener)>','<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>','<android.widget.Spinner$DialogPopup: int getHorizontalOffset()>','<android.widget.AbsListView$RecycleBin: void reclaimScrapViews(java.util.List)>','<com.android.internal.telephony.sip.SipPhone: boolean getCallForwardingIndicator()>','<android.ddm.DdmHandleHello: void disconnected()>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>','<com.android.server.location.GpsLocationProvider: void access$500(com.android.server.location.GpsLocationProvider,int,int)>','<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)>','<android.bluetooth.BluetoothHealthAppConfiguration$1: android.bluetooth.BluetoothHealthAppConfiguration createFromParcel(android.os.Parcel)>','<android.webkit.HTML5VideoViewProxy: void handleMessage(android.os.Message)>','<com.android.internal.os.SamplingProfilerIntegration$1: void <init>()>','<com.android.server.AlarmManagerService: java.lang.Object access$500(com.android.server.AlarmManagerService)>','<android.content.SyncAdaptersCache: void <clinit>()>','<android.net.LocalSocketImpl$SocketOutputStream: void close()>','<android.location.Address: double getLatitude()>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1AlphaTag()>','<android.widget.Editor: boolean access$2300(android.widget.Editor,int,int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$600(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<android.webkit.WebViewClassic$PrivateHandler: android.os.Looper getUiLooper()>','<android.net.NetworkInfo: java.lang.String getTypeName()>','<com.android.internal.widget.LockPatternUtils: void reportFailedPasswordAttempt()>','<com.android.server.input.InputFilter: void <init>(android.os.Looper)>','<com.android.server.usb.UsbDeviceManager: boolean access$500(com.android.server.usb.UsbDeviceManager)>','<android.net.wifi.WifiStateMachine$DriverStoppingState: boolean processMessage(android.os.Message)>','<android.media.MediaRouter$UserRouteInfo: void setVolume(int)>','<android.webkit.WebViewCore$WebCoreThread: void run()>','<com.android.internal.util.State: boolean processMessage(android.os.Message)>','<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord access$202(android.net.nsd.NsdServiceInfo,android.net.nsd.DnsSdTxtRecord)>','<android.widget.AbsListView: int access$2200(android.widget.AbsListView)>','<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>','<com.android.internal.telephony.RIL: void exitEmergencyCallbackMode(android.os.Message)>','<com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler: void <init>(com.android.internal.util.AsyncChannel$SyncMessenger,android.os.Looper,com.android.internal.util.AsyncChannel$1)>','<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>','<android.content.res.CompatibilityInfo$2: void <init>()>','<android.provider.SyncStateContract$Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>','<android.view.View$SendViewScrolledAccessibilityEvent: void run()>','<com.android.server.location.GeocoderProxy$Connection: void <init>(com.android.server.location.GeocoderProxy,com.android.server.location.GeocoderProxy$1)>','<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>','<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileWildcard()>','<android.view.ViewConfiguration: int getDoubleTapSlop()>','<android.net.sip.SipSession$1: void onRingingBack(android.net.sip.ISipSession)>','<android.webkit.CallbackProxy: void setWebChromeClient(android.webkit.WebChromeClient)>','<android.renderscript.Element: boolean isComplex()>','<android.app.Dialog: void setCancelMessage(android.os.Message)>','<com.android.internal.content.PackageMonitor: java.lang.String getPackageName(android.content.Intent)>','<android.inputmethodservice.KeyboardView: int access$1100(android.inputmethodservice.KeyboardView)>','<android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper: void <init>(android.content.Context,android.os.Looper,android.accessibilityservice.AccessibilityService$Callbacks)>','<com.android.internal.telephony.gsm.GsmCallTracker: void explicitCallTransfer()>','<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>','<android.server.BluetoothService: boolean connectSink(java.lang.String)>','<android.content.ContentProvider: android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)>','<android.widget.PopupWindow: void <init>(android.view.View)>','<android.content.res.ObbInfo$1: void <init>()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordHistoryLength(android.content.ComponentName,int)>','<com.android.server.am.ActivityManagerService: boolean dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>','<android.os.PatternMatcher: void <init>(java.lang.String,int)>','<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)>','<com.android.server.am.ActivityManagerService$8: void binderDied()>','<com.android.internal.telephony.sip.SipCommandInterface: void <init>(android.content.Context)>','<android.view.animation.Animation: long getStartOffset()>','<android.accounts.AuthenticatorDescription: int describeContents()>','<android.media.AudioService: int access$4400()>','<com.android.internal.telephony.gsm.SIMRecords: void handleMessage(android.os.Message)>','<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>','<android.animation.LayoutTransition: long access$600(android.animation.LayoutTransition)>','<com.android.internal.telephony.IntRangeManager: boolean isEmpty()>','<android.os.UEventObserver: void access$000()>','<android.server.BluetoothHealthProfileHandler: void <clinit>()>','<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter$CursorToStringConverter)>','<android.accounts.AccountAuthenticatorCache$MySerializer: void writeAsXml(android.accounts.AuthenticatorDescription,org.xmlpull.v1.XmlSerializer)>','<android.opengl.GLLogWrapper: void glOrthof(float,float,float,float,float,float)>','<android.inputmethodservice.KeyboardView$3: void swipeLeft()>','<android.net.wifi.WifiStateTracker: android.net.NetworkInfo$State access$402(android.net.wifi.WifiStateTracker,android.net.NetworkInfo$State)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>','<com.android.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List)>','<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>','<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>','<android.os.Build: java.lang.String access$000(java.lang.String)>','<com.android.i18n.phonenumbers.PhoneNumberMatcher: void remove()>','<android.app.backup.IRestoreSession$Stub: android.os.IBinder asBinder()>','<android.telephony.SignalStrength: int getLevel()>','<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>','<com.android.server.AppWidgetServiceImpl: void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)>','<android.view.IWindowSession$Stub$Proxy: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>','<com.android.vcard.VCardParser: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getCompleteVoiceMailNumber()>','<android.net.wifi.WifiStateMachine: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$3100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,boolean)>','<android.content.ClipData: int getItemCount()>','<com.android.server.net.NetworkStatsRecorder: void importLegacyNetworkLocked(java.io.File)>','<android.webkit.WebIconDatabaseClassic: void createHandler()>','<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiStateMachineMessenger()>','<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities access$300(android.net.wifi.WifiStateTracker)>','<android.content.ComponentName: java.lang.String flattenToString()>','<android.view.accessibility.AccessibilityManager: void interrupt()>','<android.view.IWindow$Stub: android.view.IWindow asInterface(android.os.IBinder)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void setMute(boolean)>','<com.android.internal.telephony.PhoneBase: void dispose()>','<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>','<android.graphics.drawable.ColorDrawable: void setAlpha(int)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void updateCurrentReportedCount(int)>','<android.widget.TextView: int viewportToContentVerticalOffset()>','<com.android.ex.variablespeed.VariableSpeedNative: void initializeEngine(com.android.ex.variablespeed.EngineParameters)>','<android.webkit.WebViewClassic: void access$900(int)>','<com.android.internal.widget.AbsActionBarView$1: void <init>(com.android.internal.widget.AbsActionBarView)>','<android.media.MediaRouter: void selectRouteStatic(int,android.media.MediaRouter$RouteInfo)>','<android.net.wifi.WifiManager: boolean clearBlacklist()>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>','<android.webkit.SearchBoxImpl: void setDimensions(int,int,int,int)>','<android.preference.PreferenceInflater: android.preference.GenericInflater$Parent onMergeRoots(android.preference.GenericInflater$Parent,boolean,android.preference.GenericInflater$Parent)>','<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: boolean equals(java.lang.Object)>','<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>','<android.app.FragmentState: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CDMAPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>','<android.app.Dialog: android.os.Bundle onSaveInstanceState()>','<android.server.BluetoothAdapterStateMachine: void access$4900(android.server.BluetoothAdapterStateMachine,int)>','<android.net.Uri$Builder: android.net.Uri$Builder query(android.net.Uri$Part)>','<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>','<android.text.style.SuperscriptSpan: int describeContents()>','<android.database.sqlite.SQLiteDatabase: void setVersion(int)>','<android.os.MemoryFile$MemoryOutputStream: void write(byte[],int,int)>','<android.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>','<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>','<com.android.internal.telephony.PhoneProxy: void clearDisconnected()>','<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>','<com.android.vcard.VCardParserImpl_V21$CustomBufferedReader: long getTotalmillisecond()>','<android.view.ViewRootImpl: void onHardwarePreDraw(android.view.HardwareCanvas)>','<android.net.Uri$AbstractPart$Representation: void <init>()>','<android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>','<com.android.internal.telephony.gsm.GSMPhone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>','<android.widget.RemoteViews$ActionException: void <init>(java.lang.Exception)>','<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setCustomView(android.view.View)>','<android.view.View: int getNextFocusForwardId()>','<com.android.internal.telephony.IccCardStatus: int getNumApplications()>','<android.webkit.WebViewCore$JSKeyData: void <init>()>','<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>','<com.android.server.connectivity.Tethering: android.net.IConnectivityManager access$3000(com.android.server.connectivity.Tethering)>','<android.telephony.PhoneNumberUtils: void <init>()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>','<android.renderscript.ProgramStore: boolean isDitherEnabled()>','<android.preference.Preference: boolean getShouldDisableView()>','<android.widget.RelativeLayout$DependencyGraph$Node: void release()>','<android.view.MotionEvent: java.lang.String actionToString(int)>','<com.android.internal.policy.impl.PasswordUnlockScreen: android.widget.EditText access$400(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.view.GLES20Canvas: void <init>(int,boolean)>','<android.webkit.HTML5VideoFullScreen: int access$100(android.webkit.HTML5VideoFullScreen)>','<com.android.internal.app.ActionBarImpl: void setDisplayShowCustomEnabled(boolean)>','<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>','<com.android.server.wm.WindowManagerService: void dumpLastANRLocked(java.io.PrintWriter)>','<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>','<android.webkit.WebViewCore: void access$2000(android.webkit.WebViewCore,int,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void detach()>','<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()>','<android.webkit.WebViewCore: void access$2300(android.webkit.WebViewCore,int)>','<android.speech.tts.TtsEngines$EngineInfoComparator: int compare(java.lang.Object,java.lang.Object)>','<android.os.AsyncTask$Status: android.os.AsyncTask$Status[] values()>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.animation.ValueAnimator: long getStartDelay()>','<android.location.Address: java.lang.String access$502(android.location.Address,java.lang.String)>','<android.widget.CompoundButton: void setChecked(boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState access$7400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.content.Intent: android.content.Intent setData(android.net.Uri)>','<android.view.View: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>','<android.widget.ListView: boolean removeFooterView(android.view.View)>','<android.webkit.WebView: boolean access$301(android.webkit.WebView,android.view.MotionEvent)>','<android.net.DhcpStateMachine: com.android.internal.util.State access$900(android.net.DhcpStateMachine)>','<android.view.animation.Animation: void setDuration(long)>','<android.filterpacks.videosrc.MediaSource: void prepare(android.filterfw.core.FilterContext)>','<com.android.internal.telephony.CallManager: void unregisterForServiceStateChanged(android.os.Handler)>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>','<com.android.internal.view.InputConnectionWrapper: boolean beginBatchEdit()>','<com.android.server.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName)>','<android.webkit.WebViewClassic$InvokeListBox$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>','<com.android.internal.widget.AbsActionBarView: void animateToVisibility(int)>','<android.widget.Editor$ActionPopupWindow: void <init>(android.widget.Editor,android.widget.Editor$1)>','<android.view.MenuInflater: java.lang.Object access$400(android.view.MenuInflater)>','<android.os.RemoteException: void <init>(java.lang.String)>','<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>','<android.webkit.WebViewClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>','<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>','<android.view.WindowManager$LayoutParams$1: android.view.WindowManager$LayoutParams[] newArray(int)>','<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>','<android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl: void close()>','<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>','<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>','<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>','<android.webkit.WebSettingsClassic: void setDomStorageEnabled(boolean)>','<com.android.internal.widget.WaveView: float access$100(com.android.internal.widget.WaveView)>','<android.net.Proxy$AndroidProxySelectorRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector,android.content.Context)>','<android.content.pm.Signature$1: android.content.pm.Signature createFromParcel(android.os.Parcel)>','<android.content.res.StringBlock$StyleIDs: int access$500(android.content.res.StringBlock$StyleIDs)>','<android.location.Address: boolean access$1502(android.location.Address,boolean)>','<android.webkit.WebViewClassic: android.webkit.WebChromeClient getWebChromeClient()>','<com.android.server.net.NetworkPolicyManagerService: android.util.SparseIntArray access$300(com.android.server.net.NetworkPolicyManagerService)>','<android.content.IntentFilter$AuthorityEntry: boolean access$200(android.content.IntentFilter$AuthorityEntry)>','<android.app.LocalActivityManager: void removeAllActivities()>','<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.SurfaceView$4: void setKeepScreenOn(boolean)>','<android.webkit.WebViewClassic: int computeHorizontalScrollRange()>','<android.app.WallpaperManager$FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.view.VolumePanel: void onVolumeChanged(int,int)>','<android.app.IServiceConnection$Stub$Proxy: void connected(android.content.ComponentName,android.os.IBinder)>','<android.filterfw.core.SerializedFrame: void setInts(int[])>','<android.graphics.drawable.AnimatedRotateDrawable: void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1)>','<com.android.internal.os.BatteryStatsImpl$1: void run()>','<android.database.AbstractCursor: boolean moveToPosition(int)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>','<android.net.wifi.WifiStateMachine$SoftApStoppingState: boolean processMessage(android.os.Message)>','<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point)>','<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>','<com.android.internal.telephony.test.InvalidStateEx: void <init>()>','<android.app.SharedPreferencesImpl$EditorImpl: void access$600(android.app.SharedPreferencesImpl$EditorImpl,android.app.SharedPreferencesImpl$MemoryCommitResult)>','<android.widget.AutoCompleteTextView$PassThroughClickListener: void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1)>','<com.android.internal.widget.multiwaveview.GlowPadView: float access$100(com.android.internal.widget.multiwaveview.GlowPadView)>','<com.android.internal.telephony.PhoneProxy: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>','<com.android.server.PowerManagerService$ScreenBrightnessAnimator: void animateTo(int,int,int)>','<android.view.animation.Animation: boolean isInitialized()>','<android.util.SparseIntArray: int get(int)>','<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>','<com.android.server.WifiService: int access$3100(com.android.server.WifiService)>','<com.android.internal.telephony.test.LineReader: void <init>(java.io.InputStream)>','<android.animation.ValueAnimator: long access$000(android.animation.ValueAnimator)>','<com.android.server.wm.WindowState: boolean isAlive()>','<com.android.internal.telephony.cat.TextMessage: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.IccCardStatus: void setCardState(int)>','<android.server.BluetoothHealthProfileHandler: void onHealthDevicePropertyChanged(java.lang.String,java.lang.String)>','<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>','<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>','<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard$Key)>','<android.widget.MediaController: android.os.Handler access$900(android.widget.MediaController)>','<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>','<com.android.internal.telephony.gsm.GsmConnection: void hangup()>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendRelation(java.util.List)>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getPackagesForUid(int)>','<android.telephony.SmsCbMessage$1: android.telephony.SmsCbMessage[] newArray(int)>','<android.webkit.WebViewCore: void signalRepaintDone()>','<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void setEnabled(int,boolean)>','<com.android.internal.telephony.cdma.CDMALTEPhone: void queryCdmaRoamingPreference(android.os.Message)>','<com.android.internal.policy.impl.AccountUnlockScreen$2$1: void run()>','<android.webkit.SearchBoxImpl: void isSupported(android.webkit.SearchBox$IsSupportedCallback)>','<android.media.Metadata: void <clinit>()>','<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainGroupPosition(int)>','<android.net.wifi.WifiStateMachine: void access$11200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>','<com.android.internal.view.menu.ActionMenuItemView: boolean needsDividerAfter()>','<com.android.server.am.ActivityStack: int startActivityMayWait(android.app.IApplicationThread,int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.app.IActivityManager$WaitResult,android.content.res.Configuration,android.os.Bundle,int)>','<com.android.server.StatusBarManagerService$7: void onReceive(android.content.Context,android.content.Intent)>','<android.content.pm.PackageInfoLite$1: void <init>()>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource()>','<android.media.AudioService: void access$3100(android.media.AudioService,java.lang.String)>','<android.view.GLES20DisplayList: void setScaleX(float)>','<android.view.KeyEvent: int getSource()>','<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>','<android.view.inputmethod.ExtractedTextRequest: void <init>()>','<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>','<android.net.wifi.WifiStateMachine: java.lang.String access$4500(android.net.wifi.WifiStateMachine)>','<com.android.internal.widget.LockPatternView: void onDraw(android.graphics.Canvas)>','<android.widget.GridView: boolean fullScroll(int)>','<com.android.server.NetworkManagementService: void detachPppd(java.lang.String)>','<android.database.BulkCursorDescriptor$1: android.database.BulkCursorDescriptor[] newArray(int)>','<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>','<android.view.IWindow$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.widget.RemoteViews getAppWidgetViews(int)>','<com.android.i18n.phonenumbers.AsYouTypeFormatter: void clear()>','<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>','<com.android.server.am.ActivityManagerService: boolean removeTask(int,int)>','<android.net.wifi.WifiNative: boolean p2pCancelConnect()>','<android.content.IContentService$Stub$Proxy: android.content.SyncAdapterType[] getSyncAdapterTypes()>','<android.content.pm.PackageParser$PermissionGroup: void setPackageName(java.lang.String)>','<android.text.style.URLSpan: int getSpanTypeId()>','<android.server.BluetoothAdapterStateMachine: void access$4100(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)>','<android.view.IWindowManager$Stub$Proxy: int watchRotation(android.view.IRotationWatcher)>','<android.net.wifi.WifiApConfigStore: android.net.wifi.WifiConfiguration access$000(android.net.wifi.WifiApConfigStore)>','<android.security.Credentials: void <init>()>','<android.widget.AbsSpinner$SavedState: void <init>(android.os.Parcelable)>','<android.view.IApplicationToken$Stub: android.os.IBinder asBinder()>','<android.view.WindowOrientationListener$SensorEventListenerImpl: void <init>(android.view.WindowOrientationListener)>','<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.app.AlertController$RecycleListView: void <init>(android.content.Context)>','<android.os.storage.IMountService$Stub$Proxy: int mountSecureContainer(java.lang.String,java.lang.String,int)>','<android.view.ViewGroup: void clearChildFocus(android.view.View)>','<com.android.server.wm.Watermark: void <init>(android.util.DisplayMetrics,android.view.SurfaceSession,java.lang.String[])>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onError(int,java.lang.String)>','<android.accessibilityservice.AccessibilityServiceInfo: void updateDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>','<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.server.location.LocationProviderProxy: boolean requestSingleShotFix()>','<android.server.BluetoothPanProfileHandler: boolean access$002(android.server.BluetoothPanProfileHandler,boolean)>','<android.net.sip.SipAudioCall$1: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>','<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.os.LoggingPrintStream: void write(byte[])>','<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>','<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>','<android.os.storage.StorageManager: int access$300(android.os.storage.StorageManager)>','<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>','<android.app.Instrumentation: android.app.Instrumentation$ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation$ActivityResult,boolean)>','<com.android.server.input.InputManagerService$6: void <init>(com.android.server.input.InputManagerService,android.os.Handler)>','<com.android.internal.widget.LockPatternView: void onMeasure(int,int)>','<android.net.wifi.WifiMonitor: int access$200()>','<android.database.sqlite.SQLiteDatabase: void endTransaction()>','<com.android.server.AppWidgetService: java.util.List getInstalledProviders()>','<android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt[] values()>','<android.net.wifi.WifiStateMachine$ObtainingIpState: boolean processMessage(android.os.Message)>','<com.android.internal.telephony.gsm.UsimDataDownloadHandler: int startDataDownload(com.android.internal.telephony.gsm.SmsMessage)>','<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)>','<android.webkit.WebViewClassic: boolean canZoomIn()>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimDomain()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: int getCountryCode()>','<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>','<android.webkit.WebViewCore: void access$700()>','<android.view.View: void setAlpha(float)>','<com.android.internal.policy.impl.FaceUnlock: void handleServiceDisconnected()>','<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>','<android.view.View$ListenerInfo: android.view.View$OnHoverListener access$502(android.view.View$ListenerInfo,android.view.View$OnHoverListener)>','<android.widget.ZoomControls: boolean hasFocus()>','<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)>','<android.view.ViewGroup: void onResolvedLayoutDirectionReset()>','<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int,android.content.Context)>','<android.content.res.XmlBlock: int access$008(android.content.res.XmlBlock)>','<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>','<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>','<android.text.LoginFilter: void onStart()>','<android.view.ViewRootImpl$InputMethodCallback: void <init>(android.view.ViewRootImpl)>','<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>','<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void showSafeModeOverlay()>','<android.security.KeyStore: boolean put(java.lang.String,byte[])>','<android.os.Debug: void resetThreadExternalAllocSize()>','<com.android.server.wm.Session: void finishDrawing(android.view.IWindow)>','<android.os.DropBoxManager$Entry: void <init>(java.lang.String,long,java.io.File,int)>','<android.graphics.Color: float saturation(int)>','<android.webkit.CacheManager$CacheResult: java.io.OutputStream getOutputStream()>','<android.location.Address: java.lang.String access$202(android.location.Address,java.lang.String)>','<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getRemainingPostDialString()>','<android.widget.TextView: void setEditableFactory(android.text.Editable$Factory)>','<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>','<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()>','<com.android.server.AppWidgetService$ServiceConnectionProxy: void disconnect()>','<android.telephony.TelephonyManager: android.telephony.TelephonyManager from(android.content.Context)>','<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>','<android.database.sqlite.SQLiteConnection$OperationLog: void logOperation(int,java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)>','<android.net.sip.SipSession$Listener: void onRegistrationTimeout(android.net.sip.SipSession)>','<android.widget.TextView: android.text.Editable getEditableText()>','<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<android.net.INetworkPolicyListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.inputmethodservice.Keyboard: boolean isShifted()>','<android.net.WebAddress: void <init>(java.lang.String)>','<android.bluetooth.BluetoothProfileState: android.bluetooth.BluetoothProfileState$PendingCommandState access$500(android.bluetooth.BluetoothProfileState)>','<com.android.internal.telephony.IccCard: com.android.internal.telephony.IccRecords getIccRecords()>','<com.android.internal.os.SamplingProfilerIntegration: void start()>','<com.android.server.sip.SipService$ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.view.View: void setActivated(boolean)>','<android.text.style.StyleSpan: void <init>(int)>','<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>','<android.server.BluetoothService: void onHealthDevicePropertyChanged(java.lang.String,java.lang.String)>','<android.view.KeyEvent: boolean isTainted()>','<android.widget.Switch: int getSwitchPadding()>','<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>','<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>','<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<com.android.server.PowerManagerService: android.os.Handler access$4402(com.android.server.PowerManagerService,android.os.Handler)>','<android.widget.SuggestionsAdapter: void notifyDataSetChanged()>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.ToneSettings getToneSettings()>','<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()>','<com.android.server.location.GpsLocationProvider: void access$1400(com.android.server.location.GpsLocationProvider,android.location.Location)>','<android.webkit.WebSettingsClassic: android.webkit.WebSettings$RenderPriority access$600(android.webkit.WebSettingsClassic)>','<com.android.internal.util.ProcFileReader: java.lang.String nextString()>','<android.app.QueuedWork: java.util.concurrent.ExecutorService singleThreadExecutor()>','<com.android.internal.telephony.sip.SipCommandInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>','<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser$Package,int,boolean,int,int)>','<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>','<android.webkit.WebSettingsClassic: void setUseWideViewPort(boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>','<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>','<android.net.wifi.WifiStateMachine$ConnectModeState: void <init>(android.net.wifi.WifiStateMachine)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(int)>','<android.accessibilityservice.AccessibilityService$1: boolean onGesture(int)>','<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>','<android.content.ContentService: void cancelSync(android.accounts.Account,java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean access$102(com.android.server.wm.WindowManagerService,boolean)>','<android.media.AudioService: int getLastAudibleStreamVolume(int)>','<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isValidNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<android.filterpacks.videoproc.BackDropperFilter: void relearn()>','<android.os.RemoteCallbackList$Callback: void binderDied()>','<android.net.wifi.WifiApConfigStore: void access$400(android.net.wifi.WifiApConfigStore,android.net.wifi.WifiConfiguration)>','<android.view.HardwareLayer: void <init>(int,int,boolean)>','<android.database.StaleDataException: void <init>()>','<android.net.nsd.NsdServiceInfo: int describeContents()>','<android.service.dreams.IDreamManager$Stub$Proxy: void awaken()>','<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>','<com.android.server.connectivity.Tethering: void interfaceStatusChanged(java.lang.String,boolean)>','<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>','<android.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>','<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>','<com.android.internal.telephony.SmsStorageMonitor: void <init>(com.android.internal.telephony.PhoneBase)>','<android.animation.Keyframe$FloatKeyframe: void <init>(float)>','<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>','<android.animation.ObjectAnimator: void start()>','<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>','<com.android.server.am.TaskRecord: long getInactiveDuration()>','<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>','<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>','<android.view.View: void resetResolvedLayoutDirection()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean getMute()>','<com.android.server.ConnectivityService$RadioAttributes: void <init>(java.lang.String)>','<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.location.LocationManager$GpsStatusListenerTransport$Nmea: void <init>(android.location.LocationManager$GpsStatusListenerTransport,long,java.lang.String)>','<android.widget.AdapterView: void setFocusable(boolean)>','<com.android.server.location.GpsLocationProvider: int getAccuracy()>','<android.hardware.Camera: android.hardware.Camera$PreviewCallback access$302(android.hardware.Camera,android.hardware.Camera$PreviewCallback)>','<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<com.android.vcard.VCardUtils: boolean containsOnlyNonCrLfPrintableAscii(java.lang.String[])>','<android.app.Instrumentation: void onCreate(android.os.Bundle)>','<android.app.ActivityThread$ApplicationThread: void <init>(android.app.ActivityThread,android.app.ActivityThread$1)>','<android.media.MediaPlayer$TrackInfo: int describeContents()>','<android.app.ApplicationErrorReport$AnrInfo: void <init>()>','<com.android.internal.telephony.gsm.GsmCall: void detach(com.android.internal.telephony.gsm.GsmConnection)>','<com.android.internal.telephony.cat.CatResponseMessage: com.android.internal.telephony.cat.CommandDetails getCmdDetails()>','<com.android.internal.telephony.ISms$Stub$Proxy: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.webkit.WebViewClassic: void onPinchToZoomAnimationStart()>','<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>','<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>','<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$10100(android.bluetooth.BluetoothDeviceProfileState)>','<android.os.PerformanceCollector: void <init>(android.os.PerformanceCollector$PerformanceResultsWriter)>','<com.android.server.MountService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.webkit.HTML5VideoView: java.util.Map generateHeaders(java.lang.String,android.webkit.HTML5VideoViewProxy)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isReplyPathPresent()>','<com.android.internal.telephony.PhoneProxy: void requestIsimAuthentication(java.lang.String,android.os.Message)>','<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()>','<com.android.internal.telephony.cat.Input$1: void <init>()>','<android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser$Instrumentation,int)>','<android.accounts.AccountManagerService$6: java.lang.String toDebugString(long)>','<com.android.server.AppWidgetService: boolean hasBindAppWidgetPermission(java.lang.String)>','<android.view.GLES20RecordingCanvas: boolean isPooled()>','<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>','<android.net.NetworkTemplate: int describeContents()>','<android.net.http.SslCertificate$DName: java.lang.String getOName()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<android.net.wifi.WifiWatchdogStateMachine: int access$300(android.net.wifi.WifiWatchdogStateMachine)>','<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)>','<android.content.SyncResult: void clear()>','<android.net.http.Request: void error(int,int)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>','<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>','<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>','<android.net.WebAddress: void setAuthInfo(java.lang.String)>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$600(android.net.wifi.WifiWatchdogStateMachine)>','<android.content.SyncStorageEngine: int getPendingOperationCount()>','<android.widget.AbsListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.am.TaskAccessInfo$SubTask: void <init>()>','<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>','<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>','<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>','<android.content.res.AssetFileDescriptor: int describeContents()>','<android.app.SearchDialog$4: void <init>(android.app.SearchDialog)>','<android.content.pm.PathPermission: java.lang.String getReadPermission()>','<com.android.server.WifiService$LockList: void access$3300(com.android.server.WifiService$LockList,com.android.server.WifiService$WifiLock)>','<android.app.SearchDialog: void onStop()>','<com.android.server.NotificationManagerService: boolean access$1500(com.android.server.NotificationManagerService)>','<android.widget.AbsListView: int access$2500(android.widget.AbsListView)>','<com.android.uiautomator.core.UiDevice: boolean click(int,int)>','<android.view.LayoutInflater: android.view.LayoutInflater from(android.content.Context)>','<android.view.Window: void setDimAmount(float)>','<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)>','<android.net.wifi.WifiStateTracker: void setUserDataEnable(boolean)>','<com.android.server.wm.BlackFrame$BlackSurface: void clearMatrix()>','<android.webkit.BrowserFrame$2: void <init>(android.webkit.BrowserFrame,android.net.http.SslError,int,int)>','<android.app.LoaderManagerImpl: void <clinit>()>','<android.server.BluetoothService: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.graphics.drawable.LevelListDrawable$LevelListState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.telephony.BaseCommands: void testingEmergencyCall()>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleased(int)>','<android.webkit.HTML5VideoView: boolean fullScreenExited()>','<com.android.internal.widget.DigitalClock$FormatChangeObserver: void onChange(boolean)>','<android.widget.ExpandableListView$SavedState: void <init>(android.os.Parcel,android.widget.ExpandableListView$1)>','<android.widget.Editor$InsertionPointCursorController: void onDetached()>','<android.hardware.usb.UsbEndpoint: void <init>(int,int,int,int)>','<com.android.server.input.InputFilter: void filterInputEvent(android.view.InputEvent,int)>','<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)>','<android.net.TrafficStats: int getThreadStatsTag()>','<android.app.WallpaperManager: void <clinit>()>','<com.android.server.NsdService: void access$2500(com.android.server.NsdService,int,java.lang.String,java.lang.String[])>','<android.webkit.WebViewClassic: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>','<com.android.server.InputMethodManagerService$SettingsObserver: void onChange(boolean)>','<android.content.pm.IPackageDataObserver$Stub: void <init>()>','<android.os.Debug$MemoryInfo: int getOtherSharedDirty(int)>','<android.net.wifi.WifiWatchdogStateMachine: void access$3300(android.net.wifi.WifiWatchdogStateMachine,com.android.internal.util.IState)>','<android.app.ContextImpl$25: java.lang.Object createService(android.app.ContextImpl)>','<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats$Entry)>','<android.net.sip.SipProfile: java.lang.Object access$200(android.net.sip.SipProfile)>','<android.app.ApplicationThreadProxy: void scheduleLowMemory()>','<android.server.BluetoothAdapterStateMachine: void access$3500(android.server.BluetoothAdapterStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.sip.SipCommandInterface: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>','<android.graphics.Paint: void setARGB(int,int,int,int)>','<com.android.vcard.VCardComposer: boolean init(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.net.Uri)>','<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<com.android.server.pm.GrantedPermissions: void <init>(int)>','<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>','<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>','<android.widget.Editor: void invalidateTextDisplayList()>','<android.hardware.Camera$Parameters: void setRotation(int)>','<android.net.wifi.WifiConfigStore: int access$200(android.net.wifi.WifiConfiguration)>','<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>','<android.os.storage.IMountService$Stub$Proxy: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>','<android.net.WebAddress: void <clinit>()>','<com.android.server.MountService: java.lang.String getVolumeState(java.lang.String)>','<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)>','<com.android.server.InputMethodManagerService: boolean switchToNextInputMethod(android.os.IBinder,boolean)>','<android.text.MeasuredText: android.text.MeasuredText obtain()>','<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>','<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$State getState(java.lang.String)>','<android.widget.EdgeEffect: void setPosition(int,int)>','<android.net.wifi.WifiStateMachine: long access$5800(android.net.wifi.WifiStateMachine)>','<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)>','<android.widget.FastScroller: void beginDrag()>','<android.net.INetworkPolicyManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.View$8: java.lang.Float get(android.view.View)>','<android.service.wallpaper.IWallpaperEngine$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.accessibility.AccessibilityRecord: boolean isChecked()>','<android.view.inputmethod.ComposingText: void <init>()>','<com.android.internal.telephony.cdma.SmsMessage: void <init>()>','<android.widget.Editor: void onScreenStateChanged(int)>','<com.android.internal.os.LoggingPrintStream: void println(boolean)>','<com.android.internal.view.menu.MenuItemImpl: com.android.internal.view.menu.MenuBuilder access$000(com.android.internal.view.menu.MenuItemImpl)>','<android.webkit.WebViewCore$3: void onReceiveValue(java.lang.String[])>','<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>','<android.app.WallpaperManager: android.graphics.Bitmap generateBitmap(android.graphics.Bitmap,int,int)>','<android.widget.ZoomButton: long access$100(android.widget.ZoomButton)>','<android.view.PointerIcon: void <clinit>()>','<android.opengl.GLLogWrapper: int glGetError()>','<android.widget.TextView: void setText(char[],int,int)>','<android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>','<android.webkit.DeviceMotionService$1: void run()>','<android.app.KeyguardManager$KeyguardLock: void disableKeyguard()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ActivityIntentInfo)>','<android.app.ActivityThread: void access$1100(android.app.ActivityThread,android.app.ActivityThread$ResultData)>','<com.android.server.sip.SipService: boolean isRegistered(java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteStartGps(int)>','<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)>','<android.net.NetworkPolicyManager: boolean getRestrictBackground()>','<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>','<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>','<com.android.server.am.ActivityManagerService: void finishBooting()>','<android.webkit.WebViewClassic: android.graphics.Rect access$3200(android.webkit.WebViewClassic)>','<android.filterfw.core.Frame: int decRefCount()>','<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>','<android.widget.SearchView$3: void run()>','<android.widget.AdapterView: void addView(android.view.View,int)>','<android.util.TypedValue: java.lang.CharSequence coerceToString()>','<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>','<android.location.GeocoderParams$1: android.location.GeocoderParams[] newArray(int)>','<android.util.SparseIntArray: void delete(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>','<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>','<android.animation.ValueAnimator: void setIntValues(int[])>','<android.accounts.AccountManagerService: void access$1200(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.CharSequence,android.content.Intent)>','<android.telephony.PhoneNumberUtils: boolean is12Key(char)>','<android.webkit.WebSettingsClassic: void setAutoFillProfile(android.webkit.WebSettingsClassic$AutoFillProfile)>','<com.android.internal.telephony.IccCard: boolean hasIccCard()>','<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: void startRunningLocked(com.android.internal.os.BatteryStatsImpl)>','<android.content.res.Resources: float getFraction(int,int,int)>','<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>','<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String)>','<android.widget.CursorAdapter: android.widget.Filter getFilter()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void onSignalStrengthResult(android.os.AsyncResult)>','<android.location.ILocationListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.input.InputFilter: android.view.InputEventConsistencyVerifier access$200(com.android.server.input.InputFilter)>','<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>','<android.media.AudioManager: void setMasterMute(boolean,int)>','<android.net.wifi.WifiStateMachine$DefaultState: void <init>(android.net.wifi.WifiStateMachine)>','<android.media.MediaRouter$UserRouteInfo: void setPlaybackStream(int)>','<android.content.pm.Signature: void <init>(byte[])>','<android.provider.ContactsContract$DataUsageFeedback: void <init>()>','<com.android.server.StatusBarManagerService: void collapse()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void setHelpMessage(int,int)>','<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)>','<android.content.IOnPrimaryClipChangedListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.location.ILocationManager$Stub$Proxy: void removeTestProvider(java.lang.String)>','<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>','<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>','<android.view.textservice.TextInfo: void <init>(java.lang.String)>','<android.content.Intent: android.content.Intent setFlags(int)>','<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)>','<android.widget.ListPopupWindow$DropDownListView: void <init>(android.content.Context,boolean)>','<android.webkit.WebViewCore: void access$1800(android.webkit.WebViewCore,int,float,int,android.graphics.Rect)>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.IccCard getIccCard()>','<android.hardware.Camera: void startFaceDetection()>','<com.android.vcard.VCardProperty: void addValues(java.lang.String[])>','<android.database.CursorWrapper: boolean moveToPrevious()>','<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>','<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>','<android.app.Activity: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>','<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>','<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()>','<android.app.Notification$Action$1: android.app.Notification$Action[] newArray(int)>','<android.bluetooth.BluetoothTetheringDataTracker$2: void <init>(android.bluetooth.BluetoothTetheringDataTracker)>','<android.webkit.WebSettingsClassic: void setAppCachePath(java.lang.String)>','<com.android.internal.telephony.IccIoResult: boolean success()>','<android.webkit.WebSettings: java.lang.String getPluginsPath()>','<android.speech.tts.TextToSpeech$6: java.lang.Boolean run(android.speech.tts.ITextToSpeechService)>','<com.android.internal.app.ActionBarImpl: void setCustomView(android.view.View)>','<android.widget.SpellChecker: void closeSession()>','<android.view.GLES20Canvas: void concat(android.graphics.Matrix)>','<android.webkit.WebViewCore: int access$4002(android.webkit.WebViewCore,int)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>','<android.graphics.Paint$Join: android.graphics.Paint$Join[] values()>','<com.android.server.pm.PackageManagerService: int checkUidSignatures(int,int)>','<android.app.IActivityController$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.DataConnectionAc: boolean rspIsInactive(android.os.Message)>','<android.content.pm.IPackageDataObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.gsm.SmsCbHeader: boolean isEmergencyMessage()>','<com.android.internal.os.BatteryStatsImpl$Counter: void stepAtomic()>','<android.media.RemoteControlClient$1: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<android.widget.RemoteViews$ViewPaddingAction: void <init>(android.widget.RemoteViews,int,int,int,int,int)>','<com.android.uiautomator.core.UiDevice: boolean pressMenu()>','<android.hardware.input.IInputManager$Stub$Proxy: boolean hasKeys(int,int,int[],boolean[])>','<com.android.internal.content.PackageMonitor: boolean isPackageUpdating(java.lang.String)>','<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>','<com.android.server.usb.UsbSettingsManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>','<com.android.internal.os.LoggingPrintStream: void print(java.lang.Object)>','<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)>','<android.accounts.AccountManager$7: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle)>','<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()>','<android.net.wifi.SupplicantStateTracker: void access$800(android.net.wifi.SupplicantStateTracker,int)>','<android.net.wifi.WifiStateMachine$TetheringState: void enter()>','<android.content.ContentQueryMap: void setKeepUpdated(boolean)>','<android.widget.PopupWindow$PopupViewContainer: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>','<android.net.wifi.WifiInfo: void <init>()>','<com.android.internal.widget.multiwaveview.PointCloud$WaveManager: float access$400(com.android.internal.widget.multiwaveview.PointCloud$WaveManager)>','<android.content.res.Resources: android.content.res.Configuration getConfiguration()>','<android.database.sqlite.SQLiteSession$Transaction: void <init>(android.database.sqlite.SQLiteSession$1)>','<com.android.server.wm.WindowStateAnimator: java.lang.String drawStateToString(int)>','<com.android.internal.telephony.PhoneBase: boolean isInEmergencyCall()>','<android.webkit.WebViewClassic: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>','<android.content.res.AssetFileDescriptor$1: void <init>()>','<android.media.IRemoteControlClient$Stub$Proxy: void onInformationRequested(int,int,int,int)>','<android.filterfw.core.SerializedFrame$DirectByteInputStream: int available()>','<android.net.ProxyProperties: void writeToParcel(android.os.Parcel,int)>','<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)>','<android.webkit.BrowserFrame$1: void cancel()>','<android.app.Instrumentation$ActivityMonitor: android.content.IntentFilter getFilter()>','<android.app.ActivityThread$ResultData: void <init>()>','<android.app.Instrumentation$ActivityMonitor: int getHits()>','<android.webkit.ZoomControlEmbedded$ZoomListener: void <init>(android.webkit.ZoomControlEmbedded,android.webkit.ZoomControlEmbedded$1)>','<android.app.ActivityThread$GcIdler: boolean queueIdle()>','<android.media.AudioManager: void setMasterMute(boolean)>','<com.android.server.NetworkManagementService: void addSecondaryRoute(java.lang.String,android.net.RouteInfo)>','<android.net.wifi.WifiConfigStore: void loadConfiguredNetworks()>','<android.content.pm.IPackageDeleteObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.pm.PermissionInfo: void <clinit>()>','<com.android.internal.telephony.CallTracker: void pollCallsWhenSafe()>','<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void <init>(int,int)>','<android.app.ActivityThread: void access$1600(android.app.ActivityThread,android.app.ActivityThread$CreateServiceData)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$2$1: java.lang.String getUserName()>','<android.app.backup.IFullBackupRestoreObserver$Stub$Proxy: void onEndBackup()>','<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl: void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm)>','<android.filterpacks.videoproc.BackDropperFilter: void <clinit>()>','<android.widget.Spinner$DialogPopup: void dismiss()>','<android.graphics.Bitmap: int describeContents()>','<android.view.View: void setAnimation(android.view.animation.Animation)>','<android.webkit.WebView: void disablePlatformNotifications()>','<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()>','<android.hardware.SerialPort: int read(java.nio.ByteBuffer)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>','<android.app.FragmentManagerImpl: int getBackStackEntryCount()>','<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>','<android.view.IWindowSession$Stub$Proxy: void reportDropResult(android.view.IWindow,boolean)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$UserAuthorizingJoinState access$8400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.telephony.cdma.EriManager: java.lang.String getCdmaEriText(int,int)>','<com.android.internal.policy.impl.KeyguardViewManager: android.widget.FrameLayout access$100(com.android.internal.policy.impl.KeyguardViewManager)>','<android.net.wifi.WifiInfo: int describeContents()>','<android.widget.Editor$CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>','<android.inputmethodservice.ExtractEditText: void replaceText_internal(int,int,java.lang.CharSequence)>','<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int)>','<com.android.internal.widget.SlidingTab: void setLeftHintText(int)>','<android.view.ViewRootImpl: void scheduleConsumeBatchedInput()>','<android.webkit.WebViewCore$TouchEventData: void <init>()>','<android.content.ContentValues: java.util.Set valueSet()>','<android.content.IntentSender$1: android.content.IntentSender createFromParcel(android.os.Parcel)>','<com.android.internal.util.StateMachine: void start()>','<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>','<com.android.server.MountService$2: void run()>','<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>','<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>','<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>','<android.os.Handler$MessengerImpl: void <init>(android.os.Handler,android.os.Handler$1)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: android.os.IBinder asBinder()>','<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)>','<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>','<android.widget.PopupWindow: android.view.View getContentView()>','<com.android.server.sip.SipSessionListenerProxy$2: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<android.app.SearchDialog$3: boolean onClose()>','<android.accounts.AccountManagerService$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>','<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>','<android.content.pm.ActivityInfo: void <clinit>()>','<com.android.uiautomator.core.UiDevice: boolean pressDelete()>','<com.android.server.sip.SipSessionListenerProxy: void onRinging(android.net.sip.ISipSession,android.net.sip.SipProfile,java.lang.String)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void <init>(com.android.server.connectivity.Tethering,java.lang.String,android.os.Looper,boolean)>','<com.android.internal.statusbar.StatusBarIcon: void writeToParcel(android.os.Parcel,int)>','<android.view.PointerIcon: float getHotSpotX()>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getDeviceId()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)>','<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>','<android.widget.GridView: void setVerticalSpacing(int)>','<android.widget.RemoteViews$MemoryUsageCounter: void addBitmapMemory(android.graphics.Bitmap)>','<com.android.internal.telephony.sip.SipCommandInterface: void setPhoneType(int)>','<com.android.internal.policy.impl.PhoneWindowManager: void <init>()>','<com.android.server.WifiService: void startWifi()>','<android.net.http.Request: void addHeader(java.lang.String,java.lang.String)>','<com.android.internal.telephony.cat.CatCmdMessage$CallSettings: void <init>(com.android.internal.telephony.cat.CatCmdMessage)>','<com.android.server.NotificationManagerService$SettingsObserver: void <init>(com.android.server.NotificationManagerService,android.os.Handler)>','<com.android.internal.telephony.cat.Input: void writeToParcel(android.os.Parcel,int)>','<android.text.style.BulletSpan: void <init>(android.os.Parcel)>','<android.widget.TextView: int getLineAtCoordinate(float)>','<android.nfc.NdefMessage$1: android.nfc.NdefMessage[] newArray(int)>','<com.android.internal.telephony.PhoneProxy: void setPreferredNetworkType(int,android.os.Message)>','<com.android.internal.logging.AndroidHandler: int getAndroidLevel(java.util.logging.Level)>','<com.android.vcard.VCardParserImpl_V21: boolean readBeginVCard(boolean)>','<android.view.inputmethod.InputMethodManager$1: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.preference.Preference: void onPrepareForRemoval()>','<android.view.ViewRootImpl$TakenSurfaceHolder: void setType(int)>','<com.android.internal.telephony.DataConnectionTracker: void notifyDataConnection(java.lang.String)>','<android.content.SyncStatusInfo: void <init>(android.os.Parcel)>','<com.android.internal.policy.impl.KeyguardViewMediator: void onSystemReady()>','<android.filterpacks.videosrc.MediaSource$4: void <init>(android.filterpacks.videosrc.MediaSource)>','<android.net.LinkProperties: android.net.LinkProperties$CompareResult compareRoutes(android.net.LinkProperties)>','<android.filterfw.core.FrameFormat: java.lang.String targetToString(int)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean suspendSink(android.bluetooth.BluetoothDevice)>','<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>','<com.android.internal.telephony.cdma.CdmaCallTracker: void registerForVoiceCallStarted(android.os.Handler,int,java.lang.Object)>','<android.net.wifi.WifiStateTracker: boolean isAvailable()>','<com.android.internal.telephony.PhoneProxy: void registerForNumberInfo(android.os.Handler,int,java.lang.Object)>','<android.content.Loader: java.lang.String dataToString(java.lang.Object)>','<android.os.IPowerManager$Stub: android.os.IBinder asBinder()>','<android.view.View: void setOnGenericMotionListener(android.view.View$OnGenericMotionListener)>','<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>','<com.android.server.wm.WindowManagerService: boolean detectSafeMode()>','<android.database.sqlite.SQLiteDirectCursorDriver: void cursorClosed()>','<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions$OnAnimationStartedListener)>','<android.widget.ZoomButton$1: void <init>(android.widget.ZoomButton)>','<android.webkit.WebSettingsClassic: int getCacheMode()>','<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail(int)>','<com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>','<android.webkit.ZoomControlExternal: android.os.Handler access$200(android.webkit.ZoomControlExternal)>','<com.android.internal.policy.impl.SimPukUnlockScreen$CheckSimPuk: void run()>','<android.inputmethodservice.Keyboard: void setKeyWidth(int)>','<android.widget.AutoCompleteTextView$MyWatcher: void afterTextChanged(android.text.Editable)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean access$502(com.android.internal.policy.impl.KeyguardUpdateMonitor,boolean)>','<com.android.internal.policy.impl.KeyguardViewMediator: void setHidden(boolean)>','<android.renderscript.RenderScript$RSMessageHandler: void run()>','<android.webkit.WebStorageClassic: void deleteAllData()>','<android.media.MediaRouter: android.media.MediaRouter$UserRouteInfo createUserRoute(android.media.MediaRouter$RouteCategory)>','<android.bluetooth.BluetoothPbap$1: void onServiceDisconnected(android.content.ComponentName)>','<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>','<com.android.server.net.NetworkStatsCollection$Key: boolean equals(java.lang.Object)>','<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid getUidStatsLocked(int)>','<android.server.BluetoothInputProfileHandler: boolean connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>','<android.net.wifi.WifiStateMachine$VerifyingLinkState: void <init>(android.net.wifi.WifiStateMachine)>','<android.view.ScaleGestureDetector: long getEventTime()>','<android.app.FragmentState: void <init>(android.app.Fragment)>','<android.database.ContentObservable: void registerObserver(java.lang.Object)>','<com.android.server.location.LocationProviderProxy: android.os.Handler access$100(com.android.server.location.LocationProviderProxy)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)>','<android.accounts.GrantCredentialsPermissionActivity$1$1: void run()>','<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter()>','<android.webkit.WebView$WebViewTransport: void setWebView(android.webkit.WebView)>','<android.filterpacks.videosrc.MediaSource$2: void onPrepared(android.media.MediaPlayer)>','<android.app.ApplicationPackageManager: java.util.List getUsers()>','<com.android.uiautomator.core.InteractionController: void <clinit>()>','<com.android.internal.view.menu.ActionMenuView: boolean isOverflowReserved()>','<android.widget.AbsListView$CheckForLongPress: void run()>','<com.android.internal.telephony.RIL$RILSender: void run()>','<android.widget.MediaController: void access$000(android.widget.MediaController)>','<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>','<android.widget.RemoteViews$BitmapCache: void <init>(android.os.Parcel)>','<android.text.format.DateUtils: void <init>()>','<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>','<android.view.ViewRootImpl$W: void resized(int,int,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>','<android.inputmethodservice.Keyboard: int getKeyWidth()>','<android.os.IMessenger$Stub$Proxy: android.os.IBinder asBinder()>','<android.content.pm.IPackageDataObserver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>','<android.webkit.WebViewClassic: void onAttachedToWindow()>','<android.webkit.ZoomControlExternal: long access$300()>','<android.webkit.AccessibilityInjectorFallback: boolean performAccessibilityAction(int,android.os.Bundle)>','<android.net.wifi.WifiStateMachine$5: void <init>(android.net.wifi.WifiStateMachine,android.net.wifi.WifiConfiguration)>','<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>','<android.filterfw.core.FilterGraph: void tearDown(android.filterfw.core.FilterContext)>','<com.android.server.wm.AppWindowAnimator$DummyAnimation: boolean getTransformation(long,android.view.animation.Transformation)>','<android.view.IWindowSession$Stub$Proxy: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>','<android.bluetooth.BluetoothAdapter: int getScanMode()>','<android.net.DhcpInfo: java.lang.String toString()>','<android.media.AudioService: boolean isStreamAffectedByRingerMode(int)>','<android.webkit.HTML5VideoFullScreen: void decideDisplayMode()>','<android.text.method.WordIterator: int getBeginning(int)>','<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>','<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.emoji.EmojiFactory: int access$000(android.emoji.EmojiFactory)>','<android.bluetooth.BluetoothDeviceProfileState: void access$10200(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>','<android.os.storage.IMountService$Stub$Proxy: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>','<android.view.ViewRootImpl: void dispatchKey(android.view.KeyEvent)>','<android.view.ViewRootImpl$ConsumeBatchedInputRunnable: void run()>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: void onResult(android.os.Bundle)>','<android.preference.PreferenceFragment$1: void <init>(android.preference.PreferenceFragment)>','<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>','<android.hardware.usb.UsbEndpoint: int describeContents()>','<android.widget.Editor$InsertionPointCursorController: void show()>','<android.telephony.PhoneStateListener$2: void handleMessage(android.os.Message)>','<android.net.wifi.WifiStateMachine: com.android.internal.util.State access$16500(android.net.wifi.WifiStateMachine)>','<android.net.NetworkInfo: void setSubtype(int,java.lang.String)>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: long getItemId(int)>','<android.graphics.Paint: android.graphics.Typeface getTypeface()>','<android.widget.CursorAdapter: int getCount()>','<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void onClick(android.content.DialogInterface,int)>','<android.widget.AbsListView: void addFocusables(java.util.ArrayList,int,int)>','<android.filterpacks.videosink.MediaEncoderFilter: void tearDown(android.filterfw.core.FilterContext)>','<android.graphics.Color: void <clinit>()>','<android.server.BluetoothHealthProfileHandler: java.util.List getHealthDevicesMatchingConnectionStates(int[])>','<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>','<com.android.internal.telephony.IccVmNotSupportedException: void <init>()>','<android.widget.SpellChecker: java.lang.String access$300()>','<com.android.internal.os.SamplingProfilerIntegration: void <clinit>()>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.Phone$DataState getDataConnectionState()>','<android.view.View: void setPressed(boolean)>','<android.server.BluetoothService: java.lang.String getAddressFromObjectPath(java.lang.String)>','<android.webkit.WebSettings: void setUseDoubleTree(boolean)>','<android.content.pm.IPackageManager$Stub$Proxy: void setInstallerPackageName(java.lang.String,java.lang.String)>','<com.android.server.wm.WindowManagerService: void getInitialDisplaySize(android.graphics.Point)>','<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()>','<android.net.DhcpInfo$1: void <init>()>','<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>','<android.webkit.AutoCompletePopup: void <init>(android.webkit.WebViewClassic,android.webkit.WebViewClassic$WebViewInputConnection)>','<com.android.internal.telephony.RIL: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>','<android.webkit.WebViewClassic: android.graphics.Bitmap getFavicon()>','<com.android.internal.telephony.sip.SipPhone: void access$200(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.Connection)>','<android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)>','<android.os.WorkSource: int get(int)>','<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager: java.util.ArrayList access$000(com.android.internal.policy.impl.KeyguardStatusViewManager$TransientTextManager)>','<android.net.wifi.SupplicantStateTracker$HandshakeState: void <init>(android.net.wifi.SupplicantStateTracker)>','<android.server.BluetoothService: boolean isTetheringOn()>','<com.android.internal.telephony.sip.SipPhoneBase: void setOutgoingCallerIdDisplay(int,android.os.Message)>','<android.view.HardwareRenderer$GlRenderer: long getFrameCount()>','<android.app.ApplicationErrorReport$BatteryInfo: void <init>(android.os.Parcel)>','<com.android.internal.telephony.SMSDispatcher: void dispatchPortAddressedPdus(byte[][],int)>','<android.text.Layout: int getOffsetToRightOf(int)>','<com.android.internal.telephony.gsm.SIMRecords: void dispose()>','<android.accounts.AccountManagerService$TestFeaturesSession: java.lang.String toDebugString(long)>','<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$DrawData access$2002(android.webkit.WebViewClassic,android.webkit.WebViewCore$DrawData)>','<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void <init>(android.view.SurfaceSession,int,int,int,int,int,int)>','<com.android.internal.telephony.SMSDispatcher: void sendRawPdu(byte[],byte[],android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>','<android.net.NetworkInfo: boolean access$302(android.net.NetworkInfo,boolean)>','<android.net.wifi.WifiStateMachine: android.content.BroadcastReceiver access$8800(android.net.wifi.WifiStateMachine)>','<com.android.uiautomator.core.UiSelector: int getInt(int)>','<android.filterfw.core.FieldPort: void clear()>','<android.graphics.Path: void finalize()>','<android.webkit.HTML5VideoViewProxy: void onFrameAvailable(android.graphics.SurfaceTexture)>','<com.android.internal.policy.IFaceLockCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.Watchdog: void <clinit>()>','<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>','<com.android.internal.telephony.gsm.GsmCallTracker: void dispose()>','<android.speech.tts.TextToSpeech$2: java.lang.Integer run(android.speech.tts.ITextToSpeechService)>','<com.android.server.PowerManagerService: java.lang.String access$5600(int)>','<android.graphics.SurfaceTexture: void <init>(int,boolean)>','<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>','<com.android.vcard.VCardComposer: void <init>(android.content.Context,int)>','<com.android.internal.view.InputBindResult: void <clinit>()>','<android.net.sip.SimpleSessionDescription$Media: void removeFormat(java.lang.String)>','<com.android.internal.util.MemInfoReader: long getCachedSize()>','<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>','<com.android.internal.widget.multiwaveview.GlowPadView$AnimationBundle: void cancel()>','<android.media.MediaRouter: java.lang.String typesToString(int)>','<android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4: boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil)>','<com.android.internal.widget.LockPatternView: void onRestoreInstanceState(android.os.Parcelable)>','<android.util.MathUtils: float min(int,int,int)>','<android.net.NetworkInfo$State: void <clinit>()>','<android.widget.ScrollView: void smoothScrollBy(int,int)>','<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()>','<android.view.GLES20RecordingCanvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>','<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>','<android.widget.AbsListView$ListItemAccessibilityDelegate: void <init>(android.widget.AbsListView)>','<android.net.wifi.WifiStateMachine: int access$14300(android.net.wifi.WifiStateMachine)>','<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getLanguage()>','<android.security.KeyChainException: void <init>(java.lang.String,java.lang.Throwable)>','<android.net.http.HttpConnection: void restartConnection(boolean)>','<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.Context)>','<android.filterfw.core.FrameFormat: int hashCode()>','<android.util.MathUtils: float random(float)>','<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()>','<com.android.server.input.InputManagerService: void switchKeyboardLayout(int,int)>','<android.location.Location: void setProvider(java.lang.String)>','<android.graphics.Typeface: void <clinit>()>','<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)>','<android.content.ISyncStatusObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()>','<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>','<android.net.NetworkStats: java.lang.String setToString(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2800(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.net.http.SslCertificate$DName: java.lang.String getCName()>','<android.telephony.SmsCbMessage: void <init>(int,int,int,android.telephony.SmsCbLocation,int,java.lang.String,java.lang.String,int,android.telephony.SmsCbEtwsInfo,android.telephony.SmsCbCmasInfo)>','<android.util.FinitePool: android.util.Poolable acquire()>','<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>','<com.android.internal.telephony.MccTable$MccEntry: void <init>(int,java.lang.String,int,java.lang.String)>','<android.graphics.Region: int describeContents()>','<com.android.internal.widget.TransportControlView$SavedState$1: void <init>()>','<android.webkit.WebViewClassic: android.app.AlertDialog access$7900(android.webkit.WebViewClassic)>','<android.inputmethodservice.InputMethodService: void hideWindow()>','<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void <init>(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.cat.RilMessageDecoder$1)>','<com.android.internal.telephony.sip.SipPhoneBase: boolean disableDataConnectivity()>','<android.net.DhcpStateMachine: void access$700(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.media.effect.EffectFactory: void <clinit>()>','<android.app.ContextImpl$17: void <init>()>','<com.android.internal.widget.DrawableHolder: void onAnimationRepeat(android.animation.Animator)>','<com.android.vcard.VCardComposer: void setPhoneNumberTranslationCallback(com.android.vcard.VCardPhoneNumberTranslationCallback)>','<android.security.KeyChain$KeyChainConnection: void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService,android.security.KeyChain$1)>','<android.widget.Editor: void endBatchEdit()>','<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>','<android.graphics.drawable.AnimatedRotateDrawable: boolean getPadding(android.graphics.Rect)>','<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>','<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothPbap$ServiceListener access$100(android.bluetooth.BluetoothPbap)>','<android.os.DeadObjectException: void <init>()>','<com.android.internal.statusbar.IStatusBar$Stub: android.os.IBinder asBinder()>','<android.net.http.AndroidHttpClientConnection: boolean isOpen()>','<android.view.GLES20TextureLayer: void end(android.graphics.Canvas)>','<com.android.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>','<com.android.internal.telephony.gsm.VoiceMailConstants: void <init>()>','<android.view.HardwareRenderer: boolean preserveBackBuffer()>','<com.android.i18n.phonenumbers.ShortNumberUtil: void <init>()>','<com.android.internal.telephony.BaseCommands: void unSetOnIccSmsFull(android.os.Handler)>','<android.content.res.StringBlock$StyleIDs: int access$000(android.content.res.StringBlock$StyleIDs)>','<android.webkit.AutoCompletePopup: void setAutoFillQueryId(int)>','<com.android.uiautomator.core.UiDevice: boolean isNaturalRotation()>','<android.accounts.AccountManager$Future2Task: void done()>','<android.view.Choreographer: void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long)>','<android.webkit.WebStorageClassic: void access$200()>','<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDepthFunc(android.renderscript.ProgramStore$DepthFunc)>','<android.animation.LayoutTransition$4: void onAnimationCancel(android.animation.Animator)>','<com.android.server.am.ActivityManagerService$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>','<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>','<android.appwidget.AppWidgetHostView$1: boolean onLoadClass(java.lang.Class)>','<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>','<android.app.ActivityThread: void access$2800(android.app.ActivityThread,android.os.Bundle)>','<android.content.BroadcastReceiver$PendingResult: int getResultCode()>','<com.android.server.am.ActivityManagerService: void stopAppSwitches()>','<android.app.SharedPreferencesImpl$EditorImpl: boolean commit()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean allowIncomingConnect(android.bluetooth.BluetoothDevice,boolean)>','<android.server.BluetoothService: android.bluetooth.BluetoothHeadset access$802(android.server.BluetoothService,android.bluetooth.BluetoothHeadset)>','<com.android.internal.telephony.IIccPhoneBook$Stub: android.os.IBinder asBinder()>','<android.content.pm.ManifestDigest: void <init>(byte[])>','<com.android.internal.telephony.ServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>','<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>','<android.net.wifi.WifiWatchdogStateMachine: int access$4302(android.net.wifi.WifiWatchdogStateMachine,int)>','<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$300(com.android.server.pm.PackageManagerService)>','<android.view.ViewRootImpl$AccessibilityInteractionConnectionManager: void ensureNoConnection()>','<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>','<android.app.ContextImpl$6: void <init>()>','<android.server.BluetoothInputProfileHandler: boolean disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>','<android.filterfw.core.FrameFormat: int getBaseType()>','<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar$Tab,int,boolean)>','<android.animation.PropertyValuesHolder: java.lang.String toString()>','<android.view.ViewRootImpl: void childDrawableStateChanged(android.view.View)>','<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>','<com.android.server.sip.SipSessionListenerProxy$8: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,int,java.lang.String)>','<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>','<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int)>','<android.view.View: void recomputePadding()>','<android.view.ViewRootImpl: void enqueueInputEvent(android.view.InputEvent)>','<com.android.internal.policy.impl.LockPatternKeyguardView$2: void requestHide(android.view.View)>','<android.graphics.Region: void <init>()>','<com.android.internal.widget.multiwaveview.Ease$Cubic$1: void <init>()>','<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()>','<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>','<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>','<android.content.SyncManager$SyncHandler$SyncNotificationInfo: void <init>(android.content.SyncManager$SyncHandler)>','<android.widget.RemoteViewsAdapter$RemoteViewsMetaData: void <init>(android.widget.RemoteViewsAdapter)>','<android.graphics.ColorMatrix: void <init>()>','<com.android.internal.telephony.IccRecords: void registerForNewSms(android.os.Handler,int,java.lang.Object)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: long getMaximumTimeToLock(android.content.ComponentName)>','<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: void conference()>','<android.os.Parcel: void writeSerializable(java.io.Serializable)>','<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()>','<android.net.wifi.p2p.WifiP2pService: int access$5900()>','<android.content.Intent: boolean migrateExtraStreamToClipData()>','<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>','<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.nfc.NfcAdapter: boolean disable()>','<android.net.http.Request: java.lang.String getUri()>','<android.webkit.ZoomManager$ScaleDetectorListener: void onScaleEnd(android.view.ScaleGestureDetector)>','<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>','<android.app.LocalActivityManager: java.lang.String getCurrentId()>','<com.android.server.am.BaseErrorDialog: boolean access$002(com.android.server.am.BaseErrorDialog,boolean)>','<android.app.Fragment: java.lang.CharSequence getText(int)>','<android.net.TrafficStats: long getTotalRxPackets()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()>','<android.content.BroadcastReceiver: void setPendingResult(android.content.BroadcastReceiver$PendingResult)>','<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>','<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>','<com.android.internal.widget.SlidingTab: void setLeftTabResources(int,int,int,int)>','<com.android.server.wm.WindowManagerService: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>','<android.webkit.WebSettingsClassic: boolean getBuiltInZoomControls()>','<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>','<com.android.internal.telephony.DataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>','<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,long,long,boolean,boolean)>','<android.webkit.WebViewClassic: void adjustDefaultZoomDensity(int)>','<android.media.MediaFile: boolean isMimeTypeMedia(java.lang.String)>','<com.android.server.usb.UsbDeviceManager: boolean access$502(com.android.server.usb.UsbDeviceManager,boolean)>','<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onPhoneStateChanged(int)>','<com.android.vcard.VCardProperty: void setByteValue(byte[])>','<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>','<android.media.AudioService$VolumeStreamState: int getIndex(int,boolean)>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager$1: void handleMessage(android.os.Message)>','<com.android.internal.telephony.IccCard: void supplyNetworkDepersonalization(java.lang.String,android.os.Message)>','<android.inputmethodservice.InputMethodService: void doFinishInput()>','<android.net.RouteInfo$1: android.net.RouteInfo[] newArray(int)>','<android.os.StrictMode: void access$1300(android.os.StrictMode$ViolationInfo)>','<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>','<android.nfc.INfcAdapter$Stub$Proxy: boolean enable()>','<android.util.SparseLongArray: void delete(int)>','<android.net.sip.SipSessionAdapter: void onCallChangeFailed(android.net.sip.ISipSession,int,java.lang.String)>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)>','<com.android.server.MountService: void unmountVolume(java.lang.String,boolean,boolean)>','<android.media.MediaRouter: int getCategoryCount()>','<android.content.pm.IPackageManager$Stub$Proxy: int getComponentEnabledSetting(android.content.ComponentName,int)>','<com.android.internal.telephony.DataConnection$FailCause: com.android.internal.telephony.DataConnection$FailCause fromInt(int)>','<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>','<android.widget.SearchView: boolean isQueryRefinementEnabled()>','<android.filterfw.core.SerializedFrame: java.lang.String toString()>','<com.android.server.DeviceStorageMonitorService$CachePackageDataObserver: void <init>(com.android.server.DeviceStorageMonitorService)>','<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void play(java.lang.String,int,android.webkit.HTML5VideoViewProxy,android.webkit.WebChromeClient,int)>','<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties getLinkProperties()>','<com.android.internal.telephony.cat.ImageDescriptor: void <init>()>','<android.graphics.drawable.RotateDrawable$RotateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.os.INetworkManagementService$Stub$Proxy: void unregisterObserver(android.net.INetworkManagementEventObserver)>','<android.webkit.ZoomManager: void <clinit>()>','<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>','<com.android.server.sip.SipSessionListenerProxy$3: void run()>','<com.android.server.connectivity.Vpn: com.android.server.ConnectivityService$VpnCallback access$500(com.android.server.connectivity.Vpn)>','<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>','<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()>','<android.app.ContextImpl$StaticServiceFetcher: void <init>()>','<android.view.ViewRootImpl: void addFirstDrawHandler(java.lang.Runnable)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCameraDisabled(android.content.ComponentName,boolean)>','<android.widget.Spinner: void setDropDownWidth(int)>','<com.android.internal.telephony.cdma.EriInfo: void <init>(int,int,int,java.lang.String,int,int)>','<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>','<android.os.Parcel: int dataSize()>','<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>','<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>','<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>','<android.filterpacks.videosrc.MediaSource: void setupPorts()>','<android.widget.AbsListView$FlingRunnable$1: void run()>','<android.webkit.GeolocationPermissionsClassic: void access$300(java.lang.String)>','<android.app.LoaderManagerImpl: void doStart()>','<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>','<com.android.internal.telephony.sip.SipPhone: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>','<com.android.server.AttributeCache: void <clinit>()>','<android.net.wifi.WifiStateMachine: android.app.PendingIntent access$9300(android.net.wifi.WifiStateMachine)>','<android.webkit.WebStorageClassic$1: void <init>(android.webkit.WebStorageClassic)>','<com.android.server.am.ActivityManagerService: void goingToSleep()>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: void updateState(com.android.internal.policy.impl.GlobalActions$ToggleAction$State)>','<android.content.IntentFilter: int countDataAuthorities()>','<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>','<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>','<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>','<com.android.internal.telephony.cat.CommandDetails: java.lang.String toString()>','<com.android.server.PowerManagerService: float access$6400(com.android.server.PowerManagerService)>','<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>','<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>','<android.text.style.ScaleXSpan: int getSpanTypeId()>','<android.widget.SearchView$5: void <init>(android.widget.SearchView)>','<android.telephony.ServiceState: boolean getRoaming()>','<com.android.internal.widget.ActionBarView$3: void <init>(com.android.internal.widget.ActionBarView)>','<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean allowFilterResult(android.content.pm.PackageParser$ActivityIntentInfo,java.util.List)>','<android.webkit.WebViewClassic$PastePopupWindow: void <init>(android.webkit.WebViewClassic)>','<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>','<android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment[] values()>','<android.view.inputmethod.CorrectionInfo$1: android.view.inputmethod.CorrectionInfo createFromParcel(android.os.Parcel)>','<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>','<android.widget.ExpandableListView: boolean isGroupExpanded(int)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void finishInput()>','<android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory sharedFactory()>','<com.android.internal.telephony.PhoneProxy: void sendUssdResponse(java.lang.String)>','<android.opengl.GLLogWrapper: void glGetFixedv(int,java.nio.IntBuffer)>','<android.graphics.Bitmap: int getWidth()>','<android.webkit.WebSettingsClassic: boolean getNavDump()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>','<android.hardware.input.InputManager: void tryPointerSpeed(int)>','<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)>','<android.net.ProxyProperties: int getPort()>','<com.android.vcard.VCardParserImpl_V30: java.lang.String getNonEmptyLine()>','<com.android.server.LocationManagerService$Receiver: void access$700(com.android.server.LocationManagerService$Receiver)>','<android.view.LayoutInflater$BlinkLayout: boolean access$102(android.view.LayoutInflater$BlinkLayout,boolean)>','<android.os.Messenger$1: void <init>()>','<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()>','<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int)>','<android.net.DhcpStateMachine: void access$1100(android.net.DhcpStateMachine,com.android.internal.util.IState)>','<android.content.ContextWrapper: void startActivities(android.content.Intent[])>','<com.android.server.am.ActivityStack: int startActivities(android.app.IApplicationThread,int,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>','<com.android.server.TelephonyRegistry: void notifyDataActivity(int)>','<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)>','<android.app.AlertDialog: void onCreate(android.os.Bundle)>','<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>','<android.webkit.ZoomManager: int getDocumentAnchorY()>','<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getMsisdn()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>','<android.accounts.IAccountManagerResponse$Stub: android.os.IBinder asBinder()>','<com.android.server.AppWidgetServiceImpl: void deleteAllHosts()>','<android.view.animation.Animation$Description: android.view.animation.Animation$Description parseValue(android.util.TypedValue)>','<android.view.Choreographer$CallbackRecord: void run(long)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$1202(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>','<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>','<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>','<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>','<android.widget.Switch: java.lang.CharSequence getTextOff()>','<android.net.wifi.WifiStateMachine: void startScan(boolean)>','<android.webkit.CallbackProxy: android.webkit.WebBackForwardList getBackForwardList()>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)>','<android.os.Parcel: java.lang.String[] readStringArray()>','<com.android.server.wm.WindowManagerService: void setInTouchMode(boolean)>','<android.view.ViewGroup: void onAnimationStart()>','<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)>','<android.text.style.LeadingMarginSpan$Standard: void <init>(android.os.Parcel)>','<android.app.Service: void onTrimMemory(int)>','<android.database.DataSetObservable: void notifyChanged()>','<android.webkit.CallbackProxy$JsResultReceiver: void setReady()>','<com.android.internal.policy.impl.PatternUnlockScreen$2: void onClick(android.view.View)>','<android.provider.Telephony$Mms$Draft: void <init>()>','<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>','<android.media.AudioService$AudioFocusDeathHandler: android.os.IBinder getBinder()>','<android.widget.AbsoluteLayout: void <init>(android.content.Context)>','<android.view.DragEvent: float getX()>','<com.android.server.WallpaperManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>','<com.android.internal.telephony.SmsAddress: boolean isNetworkSpecific()>','<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>','<android.widget.PopupWindow: int access$300(android.widget.PopupWindow)>','<com.android.server.LocationManagerService$Receiver: int hashCode()>','<com.android.internal.telephony.gsm.SIMRecords: void onReady()>','<android.text.Layout$Alignment: android.text.Layout$Alignment valueOf(java.lang.String)>','<android.media.MediaRouter$RouteGroup: void setIconDrawable(android.graphics.drawable.Drawable)>','<com.android.server.WifiService: boolean enableNetwork(int,boolean)>','<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>','<android.bluetooth.BluetoothHeadset: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>','<android.renderscript.RenderScript: void nScriptSetVarD(int,int,double)>','<android.hardware.Camera$Parameters: java.lang.String getAntibanding()>','<com.android.server.location.GeocoderProxy$Connection: void onServiceDisconnected(android.content.ComponentName)>','<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>','<com.android.internal.telephony.IccCardApplication$PersoSubState: void <clinit>()>','<android.graphics.drawable.StateListDrawable$StateListState: int access$000(android.graphics.drawable.StateListDrawable$StateListState,int[])>','<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: boolean areAllItemsEnabled()>','<com.android.internal.policy.impl.FaceUnlock: boolean stop()>','<android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>','<android.text.method.PasswordTransformationMethod$Visible: android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible)>','<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>','<android.animation.ValueAnimator: void animateValue(float)>','<android.graphics.drawable.GradientDrawable: void setAlpha(int)>','<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()>','<android.text.style.SuperscriptSpan: void <init>()>','<android.security.KeyStore$State: android.security.KeyStore$State[] values()>','<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)>','<com.android.internal.telephony.sip.SipCommandInterface: void getSignalStrength(android.os.Message)>','<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)>','<android.view.textservice.SpellCheckerSubtype$1: android.view.textservice.SpellCheckerSubtype createFromParcel(android.os.Parcel)>','<android.app.ApplicationPackageManager$ResourceName: void <init>(android.content.pm.ResolveInfo,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<android.content.SyncInfo: void <clinit>()>','<com.android.internal.telephony.RIL: void requestIsimAuthentication(java.lang.String,android.os.Message)>','<com.android.internal.app.ActionBarImpl: void hideForSystem()>','<android.net.wifi.WifiStateTracker: void setPolicyDataEnable(boolean)>','<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>','<android.accounts.AccountManager$4: void doWork()>','<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController)>','<android.database.ContentObserver$NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri)>','<android.view.View: android.graphics.Matrix getInverseMatrix()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.sip.SipAudioCall access$700(com.android.internal.telephony.sip.SipPhone$SipConnection)>','<com.android.internal.telephony.gsm.GSMPhone: void sendBurstDtmf(java.lang.String)>','<com.android.server.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>','<android.webkit.PluginFullScreenHolder: void hide()>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: void setY(float)>','<android.content.SyncManager: void access$3100(android.content.SyncManager,android.content.SyncOperation,long)>','<android.util.LruCache: void resize(int)>','<android.media.AudioService$AudioFocusDeathHandler: void binderDied()>','<android.app.ActivityManager$TaskThumbnails: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>','<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo createIncomingCall(java.lang.String)>','<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>','<com.android.internal.widget.SlidingTab: void setVisibility(int)>','<com.android.internal.os.BatteryStatsImpl$Uid: boolean reset()>','<android.widget.AbsListView$PositionScroller$2: void <init>(android.widget.AbsListView$PositionScroller,int,int)>','<android.webkit.GeolocationPermissionsClassic: void getAllowed(java.lang.String,android.webkit.ValueCallback)>','<com.android.server.wm.WindowManagerService: float getWindowCompatibilityScale(android.os.IBinder)>','<android.inputmethodservice.Keyboard: void <clinit>()>','<android.view.View: void setContentDescription(java.lang.CharSequence)>','<com.android.server.MountService: com.android.internal.app.IMediaContainerService access$1900(com.android.server.MountService)>','<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionStartsWith(java.lang.String)>','<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>','<android.net.wifi.WifiStateMachine: void access$8700(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.nfc.NdefRecord: android.nfc.NdefRecord createMime(java.lang.String,byte[])>','<android.view.KeyEvent: void setTainted(boolean)>','<android.webkit.HTML5VideoView: void enterFullScreenVideoState(int,android.webkit.HTML5VideoViewProxy,android.webkit.WebViewClassic)>','<android.widget.AdapterView$SelectionNotifier: void run()>','<android.widget.AutoCompleteTextView: boolean isDropDownDismissedOnCompletion()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()>','<com.android.server.WallpaperManagerService$WallpaperConnection: void <init>(com.android.server.WallpaperManagerService,android.app.WallpaperInfo,com.android.server.WallpaperManagerService$WallpaperData)>','<com.android.internal.telephony.BaseCommands: void registerForCdmaPrlChanged(android.os.Handler,int,java.lang.Object)>','<android.util.SparseArray: void delete(int)>','<android.view.ViewPropertyAnimator$PropertyBundle: void <init>(int,java.util.ArrayList)>','<android.view.View$2: boolean apply(android.view.View)>','<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>','<com.android.server.wm.WindowManagerService: void addInputMethodWindowToListLocked(com.android.server.wm.WindowState)>','<android.content.IContentService$Stub: android.os.IBinder asBinder()>','<android.graphics.ColorFilter: void <init>()>','<android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet)>','<android.net.wifi.SupplicantStateTracker: void access$500(android.net.wifi.SupplicantStateTracker,com.android.internal.util.IState)>','<com.android.internal.telephony.RetryManager: boolean isRetryForever()>','<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)>','<android.media.AudioService: int setModeInt(int,android.os.IBinder,int)>','<android.util.FastImmutableArraySet: int size()>','<com.android.internal.telephony.gsm.GsmMmiCode: boolean isInterrogate()>','<android.app.ActivityManager: java.util.List getRunningServices(int)>','<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)>','<android.animation.LayoutTransition$6: void onAnimationEnd(android.animation.Animator)>','<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>','<com.android.server.am.ActivityManagerService: boolean isUserAMonkey()>','<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>','<com.android.internal.telephony.CallManager: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.sip.SipCommandInterface: void getIccCardStatus(android.os.Message)>','<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>','<android.net.LinkCapabilities$1: void <init>()>','<android.bluetooth.BluetoothDeviceProfileState: void access$5200(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<com.android.server.wm.WindowAnimator: void stopDimming()>','<com.android.internal.telephony.BaseCommands: void setOnRestrictedStateChanged(android.os.Handler,int,java.lang.Object)>','<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)>','<com.android.server.connectivity.Tethering: void interfaceRemoved(java.lang.String)>','<android.net.TrafficStats: void <init>()>','<com.android.internal.telephony.cdma.CdmaConnection$1: void <clinit>()>','<com.android.internal.widget.DrawableHolder: float getAlpha()>','<com.android.server.connectivity.Tethering: void <clinit>()>','<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>','<com.android.server.sip.SipSessionListenerProxy$10: void run()>','<android.os.Parcel: void writeArray(java.lang.Object[])>','<android.net.sip.SipSession: void register(int)>','<android.view.ViewTreeObserver$InternalInsetsInfo: void <init>()>','<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<android.telephony.ServiceState: void setCssIndicator(int)>','<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>','<android.widget.TextView: android.text.style.URLSpan[] getUrls()>','<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()>','<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>','<android.net.http.RequestQueue$ActivePool: org.apache.http.HttpHost getProxyHost()>','<com.android.vcard.VCardParserImpl_V21: java.lang.String maybeUnescapeCharacter(char)>','<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>','<android.accounts.IAccountManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>','<android.view.HardwareLayer: void update(int,int,boolean)>','<android.hardware.input.InputManager$InputDeviceVibrator: void vibrate(long[],int)>','<android.provider.BrowserContract$Accounts: void <clinit>()>','<android.telephony.SignalStrength: int getGsmBitErrorRate()>','<com.android.internal.telephony.SMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>','<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.telephony.TelephonyManager: java.lang.String getLine1Number()>','<com.android.internal.location.GpsNetInitiatedHandler: void <clinit>()>','<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>','<android.animation.ValueAnimator: void access$400(android.animation.ValueAnimator,android.animation.ValueAnimator$AnimationHandler)>','<com.android.server.input.PersistentDataStore$InputDeviceState: void saveToXml(org.xmlpull.v1.XmlSerializer)>','<android.os.Bundle$1: void <init>()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void <init>(android.inputmethodservice.ExtractEditLayout,android.view.ActionMode$Callback)>','<com.android.server.PowerManagerService: boolean access$3102(com.android.server.PowerManagerService,boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyUnknownConnection()>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,int[])>','<android.app.ActivityThread$Profiler: void setProfiler(java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.server.InputMethodManagerService: int[] access$1200(com.android.server.InputMethodManagerService)>','<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumWidth()>','<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>','<android.webkit.WebView: boolean access$501(android.webkit.WebView)>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEnded(com.android.internal.telephony.Connection$DisconnectCause)>','<android.widget.ListView: void setSelectionAfterHeaderView()>','<android.widget.RemoteViews$SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: java.lang.String toString()>','<android.accounts.AccountManagerService$TestFeaturesSession: void run()>','<android.media.IRemoteControlClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.widget.ExpandableListView: long getSelectedPosition()>','<android.webkit.WebView: int getContentWidth()>','<android.graphics.Color: int rgb(int,int,int)>','<android.net.nsd.DnsSdTxtRecord: int size()>','<com.android.server.location.LocationProviderProxy: void updateNetworkState(int,android.net.NetworkInfo)>','<com.android.server.StatusBarManagerService: void onNotificationClear(java.lang.String,java.lang.String,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.media.MediaPlayer: android.media.MediaPlayer$OnVideoSizeChangedListener access$600(android.media.MediaPlayer)>','<com.android.server.pm.PackageManagerService$11: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.internal.telephony.gsm.GsmCallTracker: boolean canDial()>','<android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>','<android.location.ILocationManager$Stub$Proxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.internal.widget.ScrollingTabContainerView$1: void <init>(com.android.internal.widget.ScrollingTabContainerView,android.view.View)>','<com.android.internal.widget.ILockSettings$Stub: com.android.internal.widget.ILockSettings asInterface(android.os.IBinder)>','<com.android.internal.telephony.CallManager: boolean sendUssdResponse(com.android.internal.telephony.Phone,java.lang.String)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.inputmethod.InputMethodSubtype: int getNameResId()>','<android.view.IRotationWatcher$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.View: android.view.View findUserSetNextFocus(android.view.View,int)>','<android.app.WallpaperManager$Globals$1: void <init>(android.app.WallpaperManager$Globals,android.os.Looper)>','<android.view.View$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<com.android.server.pm.PackageSettingBase: java.lang.String getInstallerPackageName()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isFilterStopped(android.content.pm.PackageParser$ServiceIntentInfo,int)>','<android.view.GLES20RecordingCanvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>','<android.app.ContextImpl$32: void <init>()>','<android.content.IIntentSender$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.graphics.Matrix: void setScale(float,float,float,float)>','<android.app.ContextImpl$ApplicationContentResolver: void <init>(android.content.Context,android.app.ActivityThread)>','<android.view.Surface$CompatibleCanvas: void getMatrix(android.graphics.Matrix)>','<android.view.ViewRootImpl: android.view.View focusSearch(android.view.View,int)>','<com.android.internal.os.BatteryStatsImpl: void <init>(java.lang.String)>','<com.android.internal.telephony.PhoneBase: void unregisterForIncomingRing(android.os.Handler)>','<android.webkit.FindActionModeCallback: void findAll()>','<android.view.ViewConfiguration: int getScaledScrollBarSize()>','<android.media.AudioRoutesInfo$1: android.media.AudioRoutesInfo[] newArray(int)>','<com.android.internal.telephony.sip.SipPhone: void getCallForwardingOption(int,android.os.Message)>','<com.android.internal.telephony.cat.CallSetupParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.TextMessage,com.android.internal.telephony.cat.TextMessage)>','<com.android.server.location.GpsLocationProvider: void reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int,java.lang.String)>','<com.android.vcard.VCardBuilder: void appendAndroidSpecificProperty(java.lang.String,android.content.ContentValues)>','<android.webkit.WebViewClassic: void access$6200(android.webkit.WebViewClassic)>','<android.bluetooth.BluetoothClass: void <clinit>()>','<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void setFromServiceId(int)>','<com.android.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>','<android.accessibilityservice.AccessibilityServiceInfo$1: void <init>()>','<android.graphics.Path$FillType: android.graphics.Path$FillType[] values()>','<android.bluetooth.BluetoothUuid: void <init>()>','<android.view.ViewRootImpl: void handleScreenStateChange(boolean)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordExpirationTimeout(android.content.ComponentName,long)>','<com.android.internal.view.menu.MenuPopupHelper: boolean flagActionItems()>','<android.accounts.AccountManagerService$UserAccounts: android.accounts.AccountManagerService$DatabaseHelper access$300(android.accounts.AccountManagerService$UserAccounts)>','<android.view.View$7: void setValue(android.view.View,float)>','<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager$13: void onReceive(android.content.Context,android.content.Intent)>','<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>','<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)>','<com.android.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>','<com.android.internal.telephony.DataCallState: com.android.internal.telephony.DataCallState$SetupResult setLinkProperties(android.net.LinkProperties,boolean)>','<android.content.ContentService$1: void <init>(android.content.ContentService,android.util.SparseIntArray)>','<android.widget.SearchView: void access$1700(android.widget.SearchView,int,java.lang.String,java.lang.String)>','<android.view.GLES20Canvas: void <init>(boolean,boolean)>','<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>','<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>','<android.filterfw.core.Program: void <init>()>','<android.app.IThumbnailRetriever$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.accessibility.AccessibilityNodeInfo$1: void <init>()>','<com.android.server.pm.UserManager: void installPackageForAllUsers(java.lang.String,int)>','<android.nfc.tech.BasicTagTechnology: void connect()>','<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>','<android.net.wifi.WifiStateMachine: int access$4300(android.net.wifi.WifiStateMachine)>','<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>','<com.android.server.net.NetworkPolicyManagerService: void access$500(com.android.server.net.NetworkPolicyManagerService)>','<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>','<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>','<android.os.StrictMode$ThreadPolicy: void <init>(int,android.os.StrictMode$1)>','<android.util.Base64$Encoder: int maxOutputSize(int)>','<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>','<android.widget.Spinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<com.android.server.pm.PackageManagerService: java.util.List access$2500(com.android.server.pm.PackageManagerService,android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>','<android.opengl.GLLogWrapper: void glPointParameterx(int,int)>','<com.android.server.NetworkManagementService: void setInterfaceThrottle(java.lang.String,int,int)>','<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<com.android.internal.telephony.CallManager: java.util.List getFgCallConnections()>','<com.android.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.text.method.BaseKeyListener: void <init>()>','<android.webkit.CallbackProxy$9: void <init>(android.webkit.CallbackProxy,android.webkit.JsResult)>','<android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl$1)>','<com.android.internal.policy.impl.PatternUnlockScreen: int access$702(com.android.internal.policy.impl.PatternUnlockScreen,int)>','<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionY()>','<android.widget.ScrollView: void onDetachedFromWindow()>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: com.android.internal.policy.impl.GlobalActions$Action getItem(int)>','<com.android.server.AlarmManagerService: int access$100(com.android.server.AlarmManagerService,int)>','<android.widget.BaseAdapter: int getViewTypeCount()>','<android.webkit.WebSettingsClassic: android.content.Context access$400(android.webkit.WebSettingsClassic)>','<android.app.ActivityOptions: int getStartWidth()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.os.StrictMode$ViolationInfo: void <init>(android.os.Parcel,boolean)>','<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnAlphaTag()>','<android.content.IContentService$Stub$Proxy: boolean getMasterSyncAutomatically()>','<com.android.server.ConnectivityService: int convertFeatureToNetworkType(int,java.lang.String)>','<android.content.IntentFilter: int getPriority()>','<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()>','<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>','<com.android.server.LightsService: void <init>(android.content.Context)>','<android.view.SurfaceView: void onDetachedFromWindow()>','<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>','<com.android.server.wm.WindowManagerService: void setAnimationScales(float[])>','<android.net.wifi.WifiStateMachine$L2ConnectedState: void exit()>','<android.security.KeyChain$1: void <init>(java.util.concurrent.BlockingQueue)>','<com.android.server.pm.PackageManagerService$InstallParams$1: void onReceive(android.content.Context,android.content.Intent)>','<android.media.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>','<android.view.GLES20Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>','<android.webkit.HTML5VideoViewProxy: void access$300(android.webkit.HTML5VideoViewProxy,android.graphics.Bitmap)>','<android.app.ProgressDialog: void setMax(int)>','<android.view.MenuInflater: java.lang.Class[] access$200()>','<android.os.Bundle: int describeContents()>','<android.graphics.Paint: void finalize()>','<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>','<android.graphics.drawable.ScaleDrawable$ScaleState: boolean canConstantState()>','<android.view.ViewGroup$LayoutParams: java.lang.String sizeToString(int)>','<android.app.BackStackState: int describeContents()>','<android.view.ViewRootImpl$InvalidateOnAnimationRunnable: void removeView(android.view.View)>','<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>','<android.webkit.WebViewCore: void access$6100(android.webkit.WebViewCore,int,int,int,int,int)>','<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem$ProgressListener,java.io.File)>','<android.location.Location: void <init>(java.lang.String)>','<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.webkit.URLUtil: boolean verifyURLEncoding(java.lang.String)>','<android.graphics.Paint$Align: android.graphics.Paint$Align[] values()>','<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>','<android.app.Application: void dispatchActivityCreated(android.app.Activity,android.os.Bundle)>','<android.graphics.TemporaryBuffer: char[] obtain(int)>','<android.telephony.ServiceState: void <init>(android.os.Parcel)>','<android.net.sip.ISipSessionListener$Stub$Proxy: void onCallTransferring(android.net.sip.ISipSession,java.lang.String)>','<android.app.IWallpaperManager$Stub$Proxy: int getWidthHint()>','<android.os.StrictMode: void onSqliteObjectLeaked(java.lang.String,java.lang.Throwable)>','<com.android.server.location.PassiveProvider: void enableLocationTracking(boolean)>','<android.webkit.WebViewCore: void removeMessages()>','<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>','<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.widget.TextView: android.content.Context access$800(android.widget.TextView)>','<android.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>','<com.android.internal.widget.TransportControlView$IRemoteControlDisplayWeak: void <init>(android.os.Handler)>','<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo getIfNeeded()>','<com.android.server.sip.SipService$AutoRegistrationProcess: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>','<android.widget.AutoCompleteTextView: boolean isInputMethodNotNeeded()>','<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)>','<android.view.HardwareRenderer$Gl20Renderer: void onPostDraw()>','<android.server.BluetoothBondState: java.lang.String getPendingOutgoingBonding()>','<com.android.internal.telephony.gsm.GSMPhone: void getNeighboringCids(android.os.Message)>','<com.android.internal.policy.impl.FaceUnlock$2: void pokeWakelock(int)>','<com.android.internal.statusbar.StatusBarNotification: java.lang.String toString()>','<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>','<android.widget.TextView: float getLeftFadingEdgeStrength()>','<android.view.View: int computeHorizontalScrollOffset()>','<android.view.View: void setVerticalScrollBarEnabled(boolean)>','<android.app.Activity: void startManagingCursor(android.database.Cursor)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException)>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendNotes(java.util.List)>','<android.app.backup.IBackupManager$Stub$Proxy: void agentDisconnected(java.lang.String)>','<com.android.internal.http.HttpDateTime: long parse(java.lang.String)>','<android.server.BluetoothAdapterStateMachine: android.os.Message access$6100(android.server.BluetoothAdapterStateMachine)>','<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>','<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)>','<android.content.ContentService: void unregisterContentObserver(android.database.IContentObserver)>','<com.android.server.input.InputManagerService: void addKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>','<com.android.internal.view.menu.MenuPopupHelper: void setCallback(com.android.internal.view.menu.MenuPresenter$Callback)>','<android.preference.PreferenceGroup: void onAttachedToActivity()>','<com.android.server.wm.WindowManagerService: int getMaximumSizeDimension()>','<android.view.View: boolean isFocusableInTouchMode()>','<android.app.ActivityManagerProxy: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)>','<android.database.CursorWrapper: double getDouble(int)>','<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>','<com.android.vcard.VCardBuilder: com.android.vcard.VCardBuilder appendNickNames(java.util.List)>','<android.app.DownloadManager$Request: android.app.DownloadManager$Request setAllowedNetworkTypes(int)>','<com.android.internal.util.StateMachine$SmHandler: void access$1100(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.State)>','<android.view.ViewRootImpl$TrackballAxis: int generate(float)>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point normalize()>','<com.android.internal.os.LoggingPrintStream: java.io.PrintStream append(java.lang.CharSequence)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$DrawData access$3702(android.webkit.WebViewClassic,android.webkit.WebViewCore$DrawData)>','<android.content.SyncStorageEngine: android.content.SyncStorageEngine$DayStats[] getDayStatistics()>','<android.widget.Toast: float getHorizontalMargin()>','<com.android.server.wm.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)>','<android.webkit.WebViewCore: void access$4700(android.webkit.WebViewCore,int,java.lang.String)>','<android.webkit.WebChromeClient: void onHideCustomView()>','<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>','<android.view.IWindowManager$Stub$Proxy: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>','<android.net.LinkCapabilities: boolean isEmpty()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>','<android.webkit.WebView$PrivateAccess: boolean super_performLongClick()>','<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)>','<com.android.internal.app.ActionBarImpl: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>','<android.net.wifi.WifiStateMachine: int access$11708(android.net.wifi.WifiStateMachine)>','<android.widget.AutoCompleteTextView: void showDropDownAfterLayout()>','<android.os.Bundle: void putChar(java.lang.String,char)>','<android.animation.LayoutTransition: long access$800(android.animation.LayoutTransition)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>','<com.android.internal.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)>','<android.bluetooth.BluetoothAdapter: android.util.Pair readOutOfBandData()>','<com.android.internal.policy.IFaceLockInterface$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.util.SynchronizedPool: void <init>(android.util.Pool,java.lang.Object)>','<com.android.internal.telephony.UUSInfo: byte[] getUserData()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getMdnNumber()>','<com.android.server.sip.SipHelper: javax.sip.ClientTransaction sendInvite(android.net.sip.SipProfile,android.net.sip.SipProfile,java.lang.String,java.lang.String,gov.nist.javax.sip.header.extensions.ReferredByHeader,java.lang.String)>','<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>','<android.view.View: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>','<android.app.SharedPreferencesImpl$1: void run()>','<android.graphics.drawable.DrawableContainer$1: void <init>(android.graphics.drawable.DrawableContainer)>','<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.net.wifi.SupplicantStateTracker: int access$000(android.net.wifi.SupplicantStateTracker)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>','<android.view.VolumePanel$StreamResources: android.view.VolumePanel$StreamResources[] values()>','<com.android.server.wm.ViewServer$ViewServerWorker: void focusChanged()>','<android.server.BluetoothHealthProfileHandler: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>','<android.text.method.LinkMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>','<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>','<android.content.res.Resources: android.content.res.TypedArray access$000(android.content.res.Resources,int)>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>','<android.webkit.BrowserFrame: void stopLoading()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String normalizeDigitsOnly(java.lang.String)>','<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater$Parent)>','<android.net.NetworkStatsHistory: void <init>(android.os.Parcel)>','<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>','<android.database.sqlite.SQLiteSession: boolean hasConnection()>','<com.android.server.LocationManagerService: java.lang.String findBestPackage(java.lang.String,java.lang.String)>','<android.widget.TextView$ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>','<android.nfc.TransceiveResult$1: android.nfc.TransceiveResult[] newArray(int)>','<android.net.wifi.IWifiManager$Stub$Proxy: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>','<android.view.InputEventConsistencyVerifier$KeyState: void recycle()>','<com.android.internal.app.ActionBarImpl: android.view.View getCustomView()>','<android.media.IAudioService$Stub$Proxy: void setRingerMode(int)>','<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>','<android.nfc.Tag: android.nfc.Tag createMockTag(byte[],int[],android.os.Bundle[])>','<android.server.BluetoothAdapterStateMachine: void access$6800(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.view.GLES20Canvas: void drawPoints(float[],android.graphics.Paint)>','<android.net.http.Headers: java.lang.String getContentDisposition()>','<android.widget.Spinner: void setPopupBackgroundResource(int)>','<com.android.internal.telephony.cat.Duration$TimeUnit: com.android.internal.telephony.cat.Duration$TimeUnit valueOf(java.lang.String)>','<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>','<android.location.ILocationProvider$Stub$Proxy: void enableLocationTracking(boolean)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isIdle()>','<com.android.vcard.VCardConfig: boolean isVersion40(int)>','<android.opengl.GLLogWrapper: void glLoadMatrixx(java.nio.IntBuffer)>','<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>','<android.provider.MediaStore$Audio: void <init>()>','<com.android.internal.telephony.gsm.GsmServiceStateTracker$3: void <init>(com.android.internal.telephony.gsm.GsmServiceStateTracker,android.os.Handler)>','<android.content.pm.PackageStats: void <clinit>()>','<android.widget.AbsListView: void setFilterText(java.lang.String)>','<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>','<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.app.Dialog: void <init>(android.content.Context,int,boolean)>','<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>','<com.android.server.am.ActivityStack$2: void <init>(com.android.server.am.ActivityStack,com.android.server.am.TaskAccessInfo)>','<com.android.internal.telephony.sip.SipCommandInterface: void resetRadio(android.os.Message)>','<com.android.internal.telephony.test.ModelInterpreter: void progressConnectingCallState()>','<com.android.server.wm.Session: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.internal.content.PackageHelper: java.lang.String getSdDir(java.lang.String)>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>','<android.webkit.WebView$PrivateAccess: boolean super_performAccessibilityAction(int,android.os.Bundle)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: boolean hasExampleNumber()>','<android.os.storage.StorageVolume: int getDescriptionId()>','<android.filterfw.geometry.Point: android.filterfw.geometry.Point scaledTo(float)>','<com.android.internal.telephony.IccCardApplication: com.android.internal.telephony.IccCardStatus$PinState PinStateFromRILInt(int)>','<android.app.ActivityGroup: void onResume()>','<android.app.backup.IRestoreSession$Stub$Proxy: int restoreAll(long,android.app.backup.IRestoreObserver)>','<com.android.server.net.NetworkStatsCollection: long getEndMillis()>','<android.view.KeyEvent: boolean isCapsLockOn()>','<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)>','<android.widget.AdapterViewAnimator: int getBaseline()>','<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>','<com.android.internal.statusbar.StatusBarIcon: com.android.internal.statusbar.StatusBarIcon clone()>','<com.android.internal.policy.impl.LockScreen: void onResume()>','<android.app.Activity: android.view.View findViewById(int)>','<android.accounts.IAccountManager$Stub$Proxy: void clearPassword(android.accounts.Account)>','<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)>','<android.app.backup.IRestoreObserver$Stub$Proxy: void restoreStarting(int)>','<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>','<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.webkit.WebViewClassic: android.webkit.WebViewCore$AutoFillData access$2302(android.webkit.WebViewClassic,android.webkit.WebViewCore$AutoFillData)>','<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>','<com.android.server.NetworkManagementService: void wifiFirmwareReload(java.lang.String,java.lang.String)>','<android.app.ActivityManagerProxy: int startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle)>','<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>','<android.renderscript.RenderScript: void nContextBindRootScript(int)>','<android.net.wifi.WifiInfo: int getIpAddress()>','<android.bluetooth.IBluetoothHeadset$Stub$Proxy: int getAudioState(android.bluetooth.BluetoothDevice)>','<android.widget.AutoCompleteTextView$MyWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.os.storage.StorageManager$ObbListenerDelegate: void <init>(android.os.storage.StorageManager,android.os.storage.OnObbStateChangeListener)>','<com.android.internal.telephony.cat.LaunchBrowserMode: com.android.internal.telephony.cat.LaunchBrowserMode valueOf(java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState: boolean processMessage(android.os.Message)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>','<android.bluetooth.BluetoothDevice: boolean cancelPairingUserInput()>','<android.net.InterfaceConfiguration: void <clinit>()>','<com.android.server.WifiService$NotificationEnabledSettingObserver: void register()>','<com.android.internal.policy.impl.LockScreen: boolean needsInput()>','<android.view.WindowManagerImpl: void trimLocalMemory()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneDataConnectionState(int,boolean)>','<android.widget.Filter: android.os.Handler access$200(android.widget.Filter)>','<android.speech.tts.ITextToSpeechCallback$Stub$Proxy: void onError(java.lang.String)>','<android.app.FragmentState: void <clinit>()>','<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>','<android.webkit.WebHistoryItem: void setCustomData(java.lang.Object)>','<com.android.server.location.LocationBasedCountryDetector: void unregisterListener(android.location.LocationListener)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteFullWifiLockReleasedLocked()>','<android.net.NetworkInfo$State: android.net.NetworkInfo$State valueOf(java.lang.String)>','<com.android.internal.telephony.cat.CommandDetails$1: void <init>()>','<android.preference.Preference: void onBindView(android.view.View)>','<com.android.internal.telephony.IccCard: void registerForReady(android.os.Handler,int,java.lang.Object)>','<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>','<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>','<com.android.internal.widget.ActionBarOverlayLayout: void <init>(android.content.Context)>','<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<com.android.internal.telephony.CallManager: boolean canConference(com.android.internal.telephony.Call)>','<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>','<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>','<android.widget.ScrollBarDrawable: void draw(android.graphics.Canvas)>','<android.widget.PopupWindow: void <init>()>','<android.nfc.TransceiveResult: void writeToParcel(android.os.Parcel,int)>','<android.provider.MediaStore$Audio$Albums: void <clinit>()>','<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)>','<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>','<android.net.sip.SipSession$1: void onError(android.net.sip.ISipSession,int,java.lang.String)>','<android.os.MessageQueue: void removeSyncBarrier(int)>','<android.net.LinkAddress: void <clinit>()>','<android.content.Loader: void forceLoad()>','<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>','<android.content.pm.ManifestDigest$1: android.content.pm.ManifestDigest createFromParcel(android.os.Parcel)>','<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>','<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>','<com.android.internal.view.IInputMethod$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>','<android.widget.AbsListView: android.view.View obtainView(int,boolean[])>','<android.webkit.CertTool: java.lang.String getCertType(java.lang.String)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>','<android.database.BulkCursorToCursorAdaptor: int getCount()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$7600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: android.os.IBinder asBinder()>','<android.widget.ListView: void fillGap(boolean)>','<android.content.BroadcastReceiver$PendingResult: void abortBroadcast()>','<android.net.wifi.IWifiManager$Stub: android.os.IBinder asBinder()>','<com.android.internal.widget.ScrollingTabContainerView: void onAttachedToWindow()>','<com.android.internal.os.BatteryStatsImpl$Uid$Wakelock: void <init>(com.android.internal.os.BatteryStatsImpl$Uid)>','<android.app.Instrumentation$SyncRunnable: void waitForComplete()>','<com.android.internal.telephony.RestrictedState: boolean isCsRestricted()>','<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>','<com.android.server.PowerManagerService$TimeoutTask: void run()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>','<android.webkit.QuadF: void offset(float,float)>','<android.app.Instrumentation: android.os.Bundle getAllocCounts()>','<android.view.animation.Animation: void setZAdjustment(int)>','<android.view.View: boolean isHorizontalFadingEdgeEnabled()>','<android.database.CursorWindow: void finalize()>','<android.webkit.WebSettings: boolean getDatabaseEnabled()>','<android.widget.AutoCompleteTextView$PassThroughClickListener: void onClick(android.view.View)>','<com.android.internal.app.AlertController: android.content.DialogInterface access$600(com.android.internal.app.AlertController)>','<com.android.server.pm.PackageSettingBase: java.util.HashSet getEnabledComponents(int)>','<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] access$200(com.android.internal.telephony.ims.IsimUiccRecords)>','<android.net.Uri$PathPart: java.lang.String getEncoded()>','<com.android.server.pm.PackageManagerService: boolean access$1300(java.lang.String)>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Menu getMenu()>','<android.view.GLES20Canvas: void skew(float,float)>','<com.android.internal.telephony.sip.SipPhone$SipConnection: java.lang.String getCnapName()>','<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>','<android.webkit.CacheManager$CacheResult: void <init>()>','<android.net.wifi.IWifiManager$Stub$Proxy: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>','<android.view.GLES20DisplayList: void setPivotY(float)>','<android.app.backup.IBackupManager$Stub$Proxy: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>','<android.view.ScaleGestureDetector: float getFocusX()>','<com.android.internal.policy.impl.PhoneWindowManager: void adjustConfigurationLw(android.content.res.Configuration,int,int)>','<android.app.admin.DeviceAdminInfo$PolicyInfo: void <init>(int,java.lang.String,int,int)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>','<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>','<com.android.internal.telephony.MmiCode$State: com.android.internal.telephony.MmiCode$State[] values()>','<android.widget.MediaController$6: void onClick(android.view.View)>','<android.os.AsyncTask$SerialExecutor: void <init>(android.os.AsyncTask$1)>','<android.opengl.GLLogWrapper: void glFrustumx(int,int,int,int,int,int)>','<android.app.IUiModeManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CdmaCall: void onHangupLocal()>','<android.filterfw.core.ShaderProgram: void setDrawMode(int)>','<com.android.vcard.VCardProperty: void <init>()>','<android.database.BulkCursorToCursorAdaptor: boolean onMove(int,int)>','<android.app.FragmentTransaction: void <init>()>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getPhoneName()>','<com.android.internal.telephony.sip.SipPhoneBase: void disableLocationUpdates()>','<android.media.AudioService$3: void <init>(android.media.AudioService)>','<android.view.KeyEvent: char getMatch(char[],int)>','<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>','<android.webkit.WebViewDatabaseClassic: void <init>(android.content.Context)>','<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>','<android.opengl.GLLogWrapper: void glTexGeni(int,int,int)>','<android.location.ILocationProvider$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteWifiMulticastDisabledLocked()>','<android.net.Uri$Part$EmptyPart: boolean isEmpty()>','<android.view.View: android.view.HardwareRenderer getHardwareRenderer()>','<android.view.View$TransformationInfo: int access$1402(android.view.View$TransformationInfo,int)>','<com.android.server.am.BackupRecord: java.lang.String toString()>','<android.os.Handler: android.os.Message obtainMessage(int,int,int)>','<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()>','<com.android.internal.view.InputBindResult$1: com.android.internal.view.InputBindResult[] newArray(int)>','<android.widget.TextView: boolean isPaddingOffsetRequired()>','<android.widget.Switch: int getThumbTextPadding()>','<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>','<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>','<com.android.server.wm.DragState: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,android.view.Surface,int,android.os.IBinder)>','<android.app.IWallpaperManager$Stub$Proxy: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaConnection: boolean isIncoming()>','<android.filterfw.core.FrameFormat: int readTargetString(java.lang.String)>','<android.database.sqlite.SQLiteConnection$Operation: void <init>(android.database.sqlite.SQLiteConnection$1)>','<com.android.ex.variablespeed.VariableSpeed: void setDataSource(java.lang.String)>','<android.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <clinit>()>','<android.accounts.Account: int hashCode()>','<android.view.FocusFinder: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>','<android.webkit.CallbackProxy: void addMessageToConsole(java.lang.String,int,java.lang.String,int)>','<com.android.internal.telephony.cdma.CDMALTEPhone$NetworkSelectMessage: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone$1)>','<android.app.FragmentManagerImpl: boolean popBackStackImmediate()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<android.renderscript.RenderScript: void nAllocationRead(int,short[])>','<com.android.server.pm.PackageManagerService$10: void <init>(com.android.server.pm.PackageManagerService,boolean,boolean)>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()>','<android.media.AudioManager: void preDispatchKeyEvent(android.view.KeyEvent,int)>','<android.os.Bundle: void putDouble(java.lang.String,double)>','<android.net.sip.ISipSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.pm.IPackageManager$Stub$Proxy: boolean hasSystemFeature(java.lang.String)>','<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()>','<com.android.internal.widget.WaveView: float access$300(com.android.internal.widget.WaveView)>','<android.os.storage.StorageManager$ObbListenerDelegate: android.os.storage.OnObbStateChangeListener getListener()>','<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>','<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>','<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>','<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>','<android.widget.GridView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>','<android.widget.OverScroller: void forceFinished(boolean)>','<android.app.IWallpaperManager$Stub: android.os.IBinder asBinder()>','<android.content.res.XmlBlock: void close()>','<android.ddm.DdmHandleProfiling: void connected()>','<android.net.Uri$StringUri: java.lang.String parseAuthority(java.lang.String,int)>','<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>','<android.nfc.Tag: java.lang.String[] getTechList()>','<android.view.animation.AnticipateInterpolator: void <init>(float)>','<android.webkit.WebView: float access$1400(android.webkit.WebView)>','<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setAuthUserName(java.lang.String)>','<com.android.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()>','<android.preference.PreferenceGroupAdapter$PreferenceLayout: int access$402(android.preference.PreferenceGroupAdapter$PreferenceLayout,int)>','<android.preference.PreferenceGroupAdapter: int getCount()>','<com.android.internal.telephony.cdma.CdmaCall: void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)>','<com.android.internal.telephony.SMSDispatcher$SmsTracker: boolean isMultipart()>','<android.location.GpsStatus$SatelliteIterator: void remove()>','<android.app.Service: java.lang.String getClassName()>','<com.android.server.am.BroadcastFilter: void dump(java.io.PrintWriter,java.lang.String)>','<android.graphics.SurfaceTexture: long getTimestamp()>','<android.server.BluetoothAdapterStateMachine$HotOff: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<android.net.Proxy$AndroidProxySelectorRoutePlanner: org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>','<android.widget.GridView: void fillGap(boolean)>','<android.net.sip.SipProfile: void setCallingUid(int)>','<android.content.Intent: void <clinit>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean)>','<android.widget.PopupWindow: void setLayoutInScreenEnabled(boolean)>','<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>()>','<android.bluetooth.BluetoothSocket$SocketState: void <clinit>()>','<android.view.View: boolean requestFocus()>','<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,java.lang.String)>','<android.server.BluetoothBondState$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.vcard.VCardParser_V30: void addInterpreter(com.android.vcard.VCardInterpreter)>','<android.graphics.drawable.ScaleDrawable: boolean isStateful()>','<com.android.internal.widget.LockPatternUtils: boolean isEmergencyCallCapable()>','<android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>','<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getUserDataSeptetPadding()>','<com.android.vcard.VCardBuilder: void appendPhotoLine(java.lang.String,java.lang.String)>','<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getProxy()>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: void writeToParcel(android.os.Parcel,long)>','<android.net.InterfaceConfiguration: java.util.HashSet access$200(android.net.InterfaceConfiguration)>','<android.app.IThumbnailRetriever$Stub: android.app.IThumbnailRetriever asInterface(android.os.IBinder)>','<android.content.pm.ServiceInfo$1: void <init>()>','<com.android.internal.telephony.sip.SipPhoneBase: void notifyCallForwardingIndicator()>','<android.net.sip.SipAudioCall: int getState()>','<android.app.ProgressDialog: void incrementProgressBy(int)>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>','<android.accounts.AccountManagerService$Session: void onError(int,java.lang.String)>','<com.android.server.sip.SipHelper: javax.sip.ServerTransaction getServerTransaction(javax.sip.RequestEvent)>','<android.view.IWindow$Stub: android.os.IBinder asBinder()>','<android.view.MotionEvent: float getHistoricalToolMajor(int)>','<android.server.BluetoothService: void handleInputDevicePropertyChange(java.lang.String,boolean)>','<android.accounts.IAccountAuthenticator$Stub$Proxy: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.net.wifi.WifiStateMachine$DriverStoppedState: void enter()>','<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>','<android.location.IGeocodeProvider$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()>','<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$900(com.android.internal.widget.TransportControlView$Metadata)>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>','<android.net.wifi.WifiStateMachine$SupplicantStartingState: boolean processMessage(android.os.Message)>','<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>','<com.android.internal.telephony.sip.SipPhone: boolean enableDataConnectivity()>','<android.app.ActivityThread$ApplicationThread: void scheduleLowMemory()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$4500(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: boolean processMessage(android.os.Message)>','<android.net.wifi.WifiNative: boolean p2pReject(java.lang.String)>','<android.content.pm.Signature$1: void <init>()>','<com.android.internal.telephony.IccRecords: void dispose()>','<com.android.internal.telephony.DataConnectionTracker: boolean getDataOnRoamingEnabled()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>','<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<android.widget.TextView: int getMaxHeight()>','<com.android.server.NsdService: boolean access$100(com.android.server.NsdService)>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: int getTargetPosition(int)>','<android.webkit.WebView: void findAllAsync(java.lang.String)>','<android.view.InputDevice$MotionRange: int getAxis()>','<android.os.Debug: void resetGlobalExternalAllocSize()>','<android.webkit.ZoomManager: void dismissZoomPicker()>','<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Instrumentation$ActivityMonitor: boolean match(android.content.Context,android.app.Activity,android.content.Intent)>','<com.android.internal.telephony.IccCardApplication$PersoSubState: com.android.internal.telephony.IccCardApplication$PersoSubState valueOf(java.lang.String)>','<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation$ActivityMonitor)>','<android.view.ViewGroup$HoverTarget: void <clinit>()>','<android.os.CancellationSignal$Transport: void cancel()>','<android.location.Criteria: void setVerticalAccuracy(int)>','<android.view.View: void addFocusables(java.util.ArrayList,int,int)>','<com.android.internal.telephony.IntRangeManager: boolean enableRange(int,int,java.lang.String)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void registerStatusBar(com.android.internal.statusbar.IStatusBar,com.android.internal.statusbar.StatusBarIconList,java.util.List,java.util.List,int[],java.util.List)>','<android.text.DynamicLayout: int getEllipsisStart(int)>','<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)>','<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int hashCode()>','<android.content.BroadcastReceiver$PendingResult: void setResultExtras(android.os.Bundle)>','<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>','<android.text.Layout$Alignment: void <clinit>()>','<com.android.vcard.VCardParserImpl_V30: void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String)>','<android.animation.Keyframe: void <init>()>','<com.android.internal.view.ActionBarPolicy: boolean showsOverflowMenuButton()>','<android.nfc.NfcAdapter: android.content.Context getContext()>','<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>','<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)>','<com.android.internal.os.RuntimeInit: void redirectLogStreams()>','<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>','<android.os.Debug: void resetGlobalFreedCount()>','<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)>','<android.content.res.Resources: float getDimension(int)>','<android.telephony.NeighboringCellInfo: int describeContents()>','<android.content.res.CompatibilityInfo$2: android.content.res.CompatibilityInfo createFromParcel(android.os.Parcel)>','<com.android.uiautomator.core.UiDevice: void dumpWindowHierarchy(java.lang.String)>','<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()>','<android.accessibilityservice.IAccessibilityServiceClient$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.server.BluetoothHealthProfileHandler$HealthChannel: java.lang.String access$1500(android.server.BluetoothHealthProfileHandler$HealthChannel)>','<com.android.internal.telephony.DataConnection$DcInactiveState: void setEnterNotificationParams(com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause,int)>','<android.view.ViewTreeObserver: boolean isAlive()>','<com.android.internal.telephony.PhoneBase: void unregisterForCallWaiting(android.os.Handler)>','<android.widget.FastScroller$ScrollFade: void <init>(android.widget.FastScroller)>','<com.android.server.sip.SipSessionListenerProxy$7: void run()>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>','<com.android.internal.widget.LockPatternUtils: void setBiometricWeakLivelinessEnabled(boolean)>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>','<android.content.pm.PathPermission$1: void <init>()>','<android.text.style.CharacterStyle: void <init>()>','<com.android.internal.widget.ActionBarView: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter$Callback)>','<android.preference.PreferenceInflater: void <init>(android.preference.GenericInflater,android.preference.PreferenceManager,android.content.Context)>','<android.location.Location: float access$1002(android.location.Location,float)>','<android.net.ProxyProperties$1: void <init>()>','<android.server.BluetoothService: java.lang.String access$502(java.lang.String)>','<com.android.internal.widget.AbsActionBarView: boolean isOverflowReserved()>','<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)>','<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>','<android.util.Base64$Encoder: void <clinit>()>','<android.view.ViewRootImpl: boolean access$300(android.view.ViewRootImpl,boolean)>','<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>','<android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>','<android.media.IAudioService$Stub$Proxy: boolean isMasterMute()>','<com.android.server.NetworkManagementService: void setGlobalAlert(long)>','<com.android.server.WifiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.telephony.SmsRawData: void writeToParcel(android.os.Parcel,int)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCode()>','<android.net.wifi.WifiStateMachine: boolean recordProcessedMessage(android.os.Message)>','<android.view.Choreographer$FrameDisplayEventReceiver: void onVsync(long,int)>','<android.widget.Filter: android.os.Handler access$400(android.widget.Filter)>','<android.view.View$13: java.lang.Object get(java.lang.Object)>','<android.opengl.GLLogWrapper: void glLightx(int,int,int)>','<com.android.server.ProcessMap: java.util.HashMap getMap()>','<android.database.sqlite.SQLiteConnection$OperationLog: void dump(android.util.Printer)>','<android.widget.Filter: void setDelayer(android.widget.Filter$Delayer)>','<com.android.ex.variablespeed.VariableSpeedNative: boolean playFromContext(android.content.Context,android.net.Uri)>','<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate,java.lang.String)>','<android.webkit.WebViewCore: android.webkit.WebSettingsClassic access$1600(android.webkit.WebViewCore)>','<com.android.internal.policy.impl.SimUnlockScreen: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.internal.widget.PointerLocationView$PointerState: float access$1000(com.android.internal.widget.PointerLocationView$PointerState)>','<android.location.GpsStatus$SatelliteIterator: android.location.GpsSatellite next()>','<android.widget.SpellChecker$1: void run()>','<android.animation.LayoutTransition$2: void onAnimationEnd(android.animation.Animator)>','<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>','<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailNumber()>','<android.inputmethodservice.InputMethodService: void showWindow(boolean)>','<com.android.internal.policy.impl.PhoneWindowManager$18: void run()>','<android.content.SyncManager$ActiveSyncContext: void onFinished(android.content.SyncResult)>','<android.webkit.URLUtil: boolean isResourceUrl(java.lang.String)>','<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfacePairs()>','<android.webkit.WebViewCore: void access$3800(android.webkit.WebViewCore,int,int,int,int)>','<android.widget.PopupWindow: boolean isSplitTouchEnabled()>','<com.android.server.sip.SipSessionGroup: boolean access$800(java.lang.String,java.util.EventObject)>','<android.webkit.WebViewClassic$InvokeListBox$Container: java.lang.String toString()>','<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapApplicationId(int)>','<android.net.http.HttpsConnection: void <init>(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>','<android.widget.TextView: void onScreenStateChanged(int)>','<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec: void <init>(int,int)>','<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.SyncManager$SyncHandler: void <init>(android.content.SyncManager,android.os.Looper)>','<android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>','<com.android.server.sip.SipSessionGroup: android.net.sip.SipProfile access$1400(com.android.server.sip.SipSessionGroup)>','<android.server.BluetoothService: boolean cancelDiscovery()>','<com.android.internal.view.BaseIWindow: void dispatchScreenState(boolean)>','<android.view.InputEventConsistencyVerifier$KeyState: android.view.InputEventConsistencyVerifier$KeyState obtain(int,int,int)>','<android.preference.PreferenceGroupAdapter: int getItemViewType(int)>','<android.view.textservice.SpellCheckerInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>','<com.android.server.net.NetworkPolicyManagerService: void access$1100(com.android.server.net.NetworkPolicyManagerService)>','<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>','<android.location.Location: android.os.Bundle getExtras()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void removeService(android.content.pm.PackageParser$Service)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$202(com.android.internal.telephony.cdma.CdmaLteUiccRecords,java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void setVoiceMessageWaiting(int,int)>','<android.view.IWindowManager$Stub: android.os.IBinder asBinder()>','<android.net.IConnectivityManager$Stub$Proxy: boolean isActiveNetworkMetered()>','<android.view.animation.AnimationSet: long getDuration()>','<com.android.server.usb.UsbSettingsManager: void checkPermission(android.hardware.usb.UsbDevice)>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>','<android.net.wifi.WifiNative: boolean p2pServiceDel(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>','<android.server.BluetoothHealthProfileHandler: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>','<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>','<com.android.internal.widget.TransportControlView: android.app.PendingIntent access$802(com.android.internal.widget.TransportControlView,android.app.PendingIntent)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)>','<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float,boolean)>','<android.app.ContextImpl$2: void <init>()>','<android.content.res.XmlBlock$Parser: java.lang.String getNamespacePrefix(int)>','<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>','<android.net.wifi.WifiStateMachine$SupplicantStartedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.app.ActionBar$LayoutParams: void <init>(int,int)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void seekTo(int)>','<android.accounts.AccountManagerService$5: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,java.lang.String[],android.os.Bundle,java.lang.String)>','<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int,int)>','<com.android.server.am.ActivityManagerService: void logAppTooSlow(com.android.server.am.ProcessRecord,long,java.lang.String)>','<android.webkit.WebViewClassic$SelectionHandleAlpha: int getAlpha()>','<android.widget.RelativeLayout$LayoutParams: int[] access$700(android.widget.RelativeLayout$LayoutParams)>','<com.android.internal.policy.impl.LockPatternKeyguardView: java.lang.Runnable access$1100(com.android.internal.policy.impl.LockPatternKeyguardView)>','<android.database.AbstractCursor: void <init>()>','<android.net.LinkProperties$CompareResult: void <init>()>','<com.android.internal.telephony.test.CallInfo: boolean isRinging()>','<android.webkit.FindActionModeCallback: void onClick(android.view.View)>','<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>','<android.os.INetworkManagementService$Stub$Proxy: void setIpForwardingEnabled(boolean)>','<com.android.server.sip.SipSessionGroup: java.lang.String access$2200(com.android.server.sip.SipSessionGroup)>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>','<android.content.ActivityNotFoundException: void <init>()>','<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>','<com.android.internal.telephony.DataConnectionTracker: boolean isApnTypeEnabled(java.lang.String)>','<android.webkit.WebBackForwardList: void <init>(android.webkit.CallbackProxy)>','<android.webkit.WebView: android.webkit.PluginList getPluginList()>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void onPackageUpdateStarted(java.lang.String,int)>','<com.android.internal.telephony.gsm.GsmConnection: long getCreateTime()>','<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)>','<android.text.Layout: float nextTab(java.lang.CharSequence,int,int,float,java.lang.Object[])>','<android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>','<android.accessibilityservice.UiTestAutomationBridge: void onInterrupt()>','<android.bluetooth.BluetoothDeviceProfileState: android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree access$2400(android.bluetooth.BluetoothDeviceProfileState)>','<com.android.internal.telephony.sip.SipCommandInterface: void setNetworkSelectionModeAutomatic(android.os.Message)>','<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>','<android.server.BluetoothService: android.util.Pair getIncomingState(java.lang.String)>','<android.media.IRemoteControlDisplay$Stub: void <init>()>','<android.widget.SearchView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<com.android.server.MountService$5: void <init>(com.android.server.MountService)>','<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>','<android.app.SearchDialog$SearchBar: void <init>(android.content.Context)>','<com.android.internal.telephony.BaseCommands: void setOnCatSessionEnd(android.os.Handler,int,java.lang.Object)>','<com.android.internal.os.AtomicFile: java.io.FileInputStream openRead()>','<android.text.SpannableStringBuilder: void clear()>','<com.android.server.am.ActivityStack: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,boolean)>','<com.android.internal.telephony.ims.IsimUiccRecords: int fetchIsimRecords(com.android.internal.telephony.IccFileHandler,android.os.Handler)>','<android.os.NullVibrator: void <clinit>()>','<android.animation.ValueAnimator: void initAnimation()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: boolean isLeadingZeroPossible(int)>','<android.webkit.PluginFullScreenHolder$1: void <init>(android.webkit.PluginFullScreenHolder)>','<com.android.internal.telephony.PhoneProxy: android.telephony.SignalStrength getSignalStrength()>','<android.database.sqlite.SQLiteDatabase$1: android.database.sqlite.SQLiteSession initialValue()>','<com.android.server.am.CompatModeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>','<com.android.server.AlarmManagerService$ResultReceiver: void <init>(com.android.server.AlarmManagerService)>','<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>','<android.media.IRemoteControlDisplay$Stub: android.os.IBinder asBinder()>','<android.view.View: void dispatchFinishTemporaryDetach()>','<com.android.server.NotificationManagerService$1: void onNotificationClick(java.lang.String,java.lang.String,int)>','<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()>','<com.android.internal.telephony.cat.LaunchBrowserParams: boolean setIcon(android.graphics.Bitmap)>','<android.app.backup.BackupDataInput: void finalize()>','<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>','<com.android.internal.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void expand()>','<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider access$500(com.android.internal.widget.SlidingTab)>','<com.android.internal.telephony.PhoneProxy: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>','<android.widget.AbsListView: void <clinit>()>','<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>','<android.widget.FrameLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.ContentService$ObserverNode: void addObserverLocked(android.net.Uri,android.database.IContentObserver,boolean,java.lang.Object,int,int)>','<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>','<com.android.server.wm.WindowManagerService: void showStrictModeViolation(boolean)>','<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>','<android.text.method.MultiTapKeyListener$Timeout: void <init>(android.text.method.MultiTapKeyListener,android.text.Editable)>','<android.view.View: void onFinishTemporaryDetach()>','<com.android.server.net.NetworkStatsService: void setUidForeground(int,boolean)>','<android.widget.TextView: boolean moveCursorToVisibleOffset()>','<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.widget.TextView: boolean access$600(android.widget.TextView)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec: void <init>(int)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void release()>','<android.bluetooth.BluetoothDeviceProfileState: void access$4900(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.view.HardwareRenderer$Gl20Renderer: void access$300(javax.microedition.khronos.egl.EGLContext)>','<com.android.internal.location.DummyLocationProvider: int getAccuracy()>','<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)>','<com.android.vcard.VCardBuilder$PostalStruct: void <init>(boolean,boolean,java.lang.String)>','<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: void enter()>','<android.webkit.WebViewCore: android.webkit.WebViewClassic getWebViewClassic()>','<android.net.LinkProperties: boolean isIdenticalAddresses(android.net.LinkProperties)>','<android.view.View: void invalidateParentIfNeeded()>','<android.media.RemoteControlClient$MetadataEditor: android.media.RemoteControlClient$MetadataEditor putBitmap(int,android.graphics.Bitmap)>','<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>','<android.net.http.Headers: void setAcceptRanges(java.lang.String)>','<android.telephony.PhoneNumberUtils: boolean isUriNumber(java.lang.String)>','<com.android.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>','<android.text.style.LeadingMarginSpan$Standard: int getSpanTypeId()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPw(android.content.pm.PackageParser$Package,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,int,boolean,boolean)>','<android.accessibilityservice.UiTestAutomationBridge: boolean access$300(android.accessibilityservice.UiTestAutomationBridge)>','<android.location.Location: float access$602(android.location.Location,float)>','<android.media.AudioService$AudioHandler$1: void onCompletion(android.media.MediaPlayer)>','<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>','<android.speech.tts.TextToSpeech$11: void <init>(android.speech.tts.TextToSpeech,java.lang.String,java.lang.String,java.util.HashMap)>','<android.content.res.ObbInfo: void <init>(android.os.Parcel,android.content.res.ObbInfo$1)>','<android.renderscript.RenderScript: int nFontCreateFromAssetStream(java.lang.String,float,int,int)>','<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean)>','<com.android.internal.telephony.cat.CommandDetails: int describeContents()>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.IntKeyframeSet)>','<android.view.VolumePanel$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>','<android.opengl.GLLogWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>','<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>','<android.widget.AbsListView: void setItemChecked(int,boolean)>','<android.accounts.IAccountManager$Stub: void <init>()>','<android.webkit.OverScrollGlow: boolean isAnimating()>','<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: void <init>()>','<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,int[],int)>','<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>','<android.media.AudioService: android.bluetooth.BluetoothDevice access$2600(android.media.AudioService)>','<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>','<android.view.View: void dispatchDisplayHint(int)>','<com.android.server.usb.UsbDeviceManager: boolean access$600(java.lang.String,java.lang.String)>','<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()>','<android.widget.RemoteViews: void setDisplayedChild(int,int)>','<android.net.wifi.WifiManager$Channel: void <init>(android.os.Looper,android.net.wifi.WifiManager$ChannelListener)>','<android.provider.ContactsContract$RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>','<android.app.Dialog: void onBackPressed()>','<android.text.method.ArrowKeyMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>','<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)>','<android.webkit.ViewStateSerializer: android.webkit.WebViewCore$DrawData deserializeViewState(java.io.InputStream)>','<android.accounts.AccountsException: void <init>(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$9: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.os.PowerManager$WakeLock: java.lang.String toString()>','<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)>','<com.android.internal.view.menu.ActionMenuItem: boolean isChecked()>','<android.view.View: void onStartTemporaryDetach()>','<android.view.InputChannel: void finalize()>','<com.android.server.wm.WindowState: boolean hasDrawnLw()>','<android.provider.Browser$SearchColumns: void <init>()>','<android.widget.ScrollBarDrawable: int getSize(boolean)>','<android.view.View: int getNextFocusRightId()>','<android.view.ViewRootImpl$W: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.view.IWindowManager$Stub$Proxy: void setEventDispatching(boolean)>','<android.widget.ExpandableListView$ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void setCarrierText(java.lang.CharSequence)>','<com.android.internal.policy.impl.PasswordUnlockScreen: boolean access$200(com.android.internal.policy.impl.PasswordUnlockScreen)>','<android.widget.AdapterViewAnimator$1$1: void <init>(android.widget.AdapterViewAnimator$1)>','<android.content.res.AssetFileDescriptor: java.lang.String toString()>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>','<com.android.server.ConnectivityService: boolean setRadio(int,boolean)>','<android.net.LocalSocket: void close()>','<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String)>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>','<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1)>','<com.android.server.PowerManagerService: int access$2602(com.android.server.PowerManagerService,int)>','<android.view.InputDevice$1: android.view.InputDevice[] newArray(int)>','<android.widget.Editor$PositionListener: int getPositionX()>','<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>','<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()>','<android.location.ILocationProvider$Stub$Proxy: int getAccuracy()>','<com.android.server.net.NetworkPolicyManagerService$1: void onForegroundActivitiesChanged(int,int,boolean)>','<com.android.server.MountService$ObbActionHandler: void handleMessage(android.os.Message)>','<android.app.IWallpaperManager$Stub$Proxy: int getHeightHint()>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.database.CursorWrapper: int getColumnCount()>','<com.android.internal.telephony.SMSDispatcher$1: void <init>(com.android.internal.telephony.SMSDispatcher)>','<android.widget.FastScroller: void <clinit>()>','<com.android.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)>','<com.android.server.connectivity.Vpn: void interfaceLinkStateChanged(java.lang.String,boolean)>','<android.view.View: void setSoundEffectsEnabled(boolean)>','<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>','<com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>','<com.android.server.WifiService: boolean isDualBandSupported()>','<android.view.Window: void addFlags(int)>','<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: android.os.Handler access$3300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.os.Bundle: byte getByte(java.lang.String)>','<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)>','<android.view.GLES20Canvas: boolean clipRect(android.graphics.Rect)>','<android.widget.ExpandableListPosition: long getPackedPosition()>','<com.android.internal.os.BatteryStatsImpl$2: com.android.internal.os.BatteryStatsImpl[] newArray(int)>','<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>','<android.filterfw.core.SerializedFrame$DirectByteInputStream: int read(byte[],int,int)>','<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>','<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>','<com.android.internal.widget.ActionBarContextView: void killMode()>','<android.os.PatternMatcher: java.lang.String getPath()>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onReleased(android.view.View,int)>','<com.android.internal.telephony.IccRecords: void handleMessage(android.os.Message)>','<com.android.internal.widget.multiwaveview.Tweener$1: void <init>()>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: void <init>()>','<com.android.server.am.BatteryStatsService: void noteStartVideo(int)>','<android.os.PatternMatcher: boolean match(java.lang.String)>','<com.android.server.sip.SipService: com.android.server.sip.SipService$MyExecutor access$800(com.android.server.sip.SipService)>','<com.android.internal.util.StateMachine: void quitting()>','<com.android.server.ConnectivityService$MyHandler: void handleMessage(android.os.Message)>','<android.widget.Editor: void createInputMethodStateIfNeeded()>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>','<android.app.backup.IFullBackupRestoreObserver$Stub: android.os.IBinder asBinder()>','<android.webkit.FindActionModeCallback$NoAction: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>','<com.android.internal.telephony.sip.SipCommandInterface: void iccIO(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,android.os.Message)>','<android.graphics.Interpolator: void reset(int,int)>','<android.widget.RemoteViews$SetOnClickFillInIntent: void writeToParcel(android.os.Parcel,int)>','<android.view.PointerIcon: android.view.PointerIcon loadCustomIcon(android.content.res.Resources,int)>','<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String selectBackupTransport(java.lang.String)>','<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>','<android.graphics.drawable.ShapeDrawable: void <init>()>','<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()>','<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onChanged(android.net.sip.SipAudioCall)>','<com.android.server.pm.PackageManagerService$InstallArgs: boolean isFwdLocked()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$8600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsRecorder access$200(com.android.server.net.NetworkStatsService)>','<android.graphics.ColorMatrix: float[] getArray()>','<com.android.server.net.NetworkPolicyManagerService: void access$1600(com.android.server.net.NetworkPolicyManagerService,int)>','<android.app.SearchManager: void stopSearch()>','<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>','<android.media.MediaPlayer: android.media.MediaPlayer$OnBufferingUpdateListener access$400(android.media.MediaPlayer)>','<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>','<android.webkit.WebSettings: void setCacheMode(int)>','<android.opengl.GLLogWrapper: void glDrawTexxvOES(int[],int)>','<android.server.BluetoothService: int getBluetoothState()>','<android.server.BluetoothService: java.lang.String scanModeToBluezString(int)>','<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>','<com.android.server.InputMethodManagerService$ScreenOnOffReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse$1: void <init>()>','<com.android.vcard.VCardUtils: boolean containsOnlyNonCrLfPrintableAscii(java.util.Collection)>','<android.view.accessibility.AccessibilityRecord: java.lang.String toString()>','<android.widget.Editor: void adjustInputType(boolean,boolean,boolean,boolean)>','<android.view.LayoutInflater$FactoryMerger: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>','<android.text.style.SuggestionSpan: void <clinit>()>','<android.net.http.AndroidHttpClient: void close()>','<android.media.RemoteControlClient: int access$300(android.media.RemoteControlClient)>','<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>','<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()>','<android.view.animation.Animation$3: void <init>(android.view.animation.Animation)>','<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$6100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage createFromPdu(byte[])>','<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>','<com.android.server.pm.PackageManagerService: void cleanupInstallFailedPackage(com.android.server.pm.PackageSetting)>','<android.view.View: int getWindowAttachCount()>','<com.android.server.usb.UsbDeviceManager$1: void onUEvent(android.os.UEventObserver$UEvent)>','<com.android.server.TelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>','<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>','<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.os.IPermissionController$Stub$Proxy: boolean checkPermission(java.lang.String,int,int)>','<android.widget.Editor$EasyEditSpanController: void <init>(android.widget.Editor)>','<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>','<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.internal.policy.impl.GlobalActions$ToggleAction: boolean onLongPress()>','<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int,com.android.server.am.ActivityRecord)>','<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setPasskey(java.lang.String,int)>','<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)>','<android.server.BluetoothPanProfileHandler$BluetoothPanDevice: int access$302(android.server.BluetoothPanProfileHandler$BluetoothPanDevice,int)>','<com.android.server.NotificationManagerService: boolean access$1102(com.android.server.NotificationManagerService,boolean)>','<android.view.GLES20DisplayList: void setLeftTopRightBottom(int,int,int,int)>','<android.speech.tts.TextToSpeech: android.os.Bundle access$700(android.speech.tts.TextToSpeech)>','<android.animation.PropertyValuesHolder: void <init>(java.lang.String,android.animation.PropertyValuesHolder$1)>','<android.view.MotionEvent: float getX(int)>','<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.provider.BrowserContract: void <clinit>()>','<android.filterfw.core.InputPort: void close()>','<com.android.server.PowerManagerService: void access$1700(com.android.server.PowerManagerService,int)>','<com.android.internal.util.StateMachine: void sendMessageDelayed(int,long)>','<android.location.Country: int getSource()>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void run()>','<com.android.internal.telephony.PhoneBase: void requestIsimAuthentication(java.lang.String,android.os.Message)>','<com.android.internal.telephony.cat.CatService: void finalize()>','<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void <init>(com.android.internal.telephony.CommandsInterface)>','<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.telephony.AdnRecordCache: void updateAdnBySearch(int,com.android.internal.telephony.AdnRecord,com.android.internal.telephony.AdnRecord,java.lang.String,android.os.Message)>','<com.android.server.NsdService$NsdStateMachine$1: void onChange(boolean)>','<android.text.style.DynamicDrawableSpan: void <init>()>','<android.graphics.Bitmap$CompressFormat: void <clinit>()>','<android.view.GLES20Canvas: boolean clipPath(android.graphics.Path)>','<android.net.wifi.WifiStateMachine: void access$16200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.GsmAlphabet: int[] getEnabledLockingShiftTables()>','<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>','<android.app.WallpaperInfo$1: android.app.WallpaperInfo[] newArray(int)>','<android.app.ActivityThread: java.lang.String getProcessName()>','<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>','<android.view.View: boolean canResolveTextAlignment()>','<com.android.server.BatteryService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>','<android.content.ClipData$Item: android.content.Intent getIntent()>','<android.util.IntProperty: void set(java.lang.Object,java.lang.Object)>','<android.telephony.ServiceState: int hashCode()>','<android.net.sip.SipProfile: boolean getAutoRegistration()>','<android.os.Debug$InstructionCount: void <clinit>()>','<android.media.MediaRouter$Static$1$1: void run()>','<android.telephony.ServiceState: void setCdmaEriIconMode(int)>','<com.android.internal.telephony.PhoneSubInfoProxy: java.lang.String getLine1AlphaTag()>','<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>','<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.content.SyncManager: void <clinit>()>','<android.view.View: void postInvalidate()>','<android.view.textservice.SpellCheckerSubtype: int getNameResId()>','<android.app.ActivityThread$2: void <init>(android.app.ActivityThread)>','<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>','<android.widget.MediaController: android.view.View access$200(android.widget.MediaController)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getDevPersistBytes(long)>','<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>','<com.android.internal.telephony.cdma.CdmaConnection: void onHangupLocal()>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>','<android.view.ViewGroup$3: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>','<android.nfc.NfcActivityManager: void registerApplication(android.app.Application)>','<android.widget.TextView$ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<com.android.server.am.ActivityRecord: void startLaunchTickingLocked()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void stopNetStatPoll()>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>','<com.android.server.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>','<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)>','<android.graphics.ColorMatrix: void setRotate(int,float)>','<android.security.KeyStore: boolean delete(java.lang.String)>','<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>','<android.accessibilityservice.UiTestAutomationBridge: int access$402(android.accessibilityservice.UiTestAutomationBridge,int)>','<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>','<android.content.Loader: void stopLoading()>','<android.webkit.WebStorageClassic: void setQuotaForOrigin(java.lang.String,long)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>','<android.view.View$CheckForLongPress: void <init>(android.view.View)>','<android.server.BluetoothService: void setLinkTimeout(java.lang.String,int)>','<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>','<android.graphics.drawable.AnimationDrawable: void stop()>','<android.net.http.HttpsConnection$1: void <init>()>','<android.server.BluetoothAdapterStateMachine: void access$7300(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(com.android.server.NativeDaemonConnector$Command)>','<android.widget.LinearLayout$LayoutParams: void <init>(int,int,float)>','<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>','<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>','<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>','<android.net.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>','<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>','<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>','<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>','<android.text.method.ArrowKeyMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>','<android.net.wifi.p2p.WifiP2pGroup: void setIsGroupOwner(boolean)>','<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Input geInput()>','<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.os.Looper)>','<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.os.StrictMode$8: void <init>()>','<android.widget.Editor$EasyEditSpanController: void hide()>','<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>','<com.android.internal.telephony.DataConnectionTracker$TxRxSum: void <init>(com.android.internal.telephony.DataConnectionTracker,long,long)>','<android.graphics.Matrix: void mapPoints(float[])>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy: void onServiceDisconnected()>','<android.app.ActivityManagerProxy: void <init>(android.os.IBinder)>','<android.text.style.AlignmentSpan$Standard: android.text.Layout$Alignment getAlignment()>','<com.android.internal.telephony.PhoneBase: void setSystemProperty(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService: java.util.List queryPermissionsByGroup(java.lang.String,int)>','<com.android.server.am.BroadcastQueue$1: void handleMessage(android.os.Message)>','<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>','<android.os.StrictMode: void enableDefaults()>','<com.android.internal.os.BinderInternal: void <init>()>','<android.content.IntentSender: int describeContents()>','<android.content.SyncInfo$1: void <init>()>','<android.widget.PopupWindow: android.view.View access$100(android.widget.PopupWindow)>','<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.nfc.Tag: int getConnectedTechnology()>','<android.os.AsyncTask$AsyncTaskResult: void <init>(android.os.AsyncTask,java.lang.Object[])>','<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>','<com.android.internal.view.menu.ActionMenuItemView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>','<android.view.View: android.view.View focusSearch(int)>','<android.widget.ListPopupWindow$PopupDataSetObserver: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1)>','<android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)>','<android.accounts.AccountManager: java.util.HashMap access$1300(android.accounts.AccountManager)>','<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String)>','<android.location.Address: void setExtras(android.os.Bundle)>','<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<com.android.internal.util.StateMachine: java.lang.String getName()>','<android.widget.TextView: int getTotalPaddingStart()>','<android.hardware.usb.UsbAccessory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.net.wifi.WifiStateTracker: void defaultRouteSet(boolean)>','<android.accounts.AccountManager$BaseFutureTask: void startTask()>','<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)>','<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>','<android.text.Html$HtmlParser: void <clinit>()>','<com.android.server.PowerManagerService: void init(android.content.Context,com.android.server.LightsService,android.app.IActivityManager,com.android.server.BatteryService)>','<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)>','<android.view.View$2: boolean apply(java.lang.Object)>','<android.location.Criteria: boolean isSpeedRequired()>','<com.android.server.am.PendingIntentRecord$Key: void <init>(int,java.lang.String,com.android.server.am.ActivityRecord,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>','<android.speech.tts.TextToSpeech$4: void <init>(android.speech.tts.TextToSpeech,long,int,java.util.HashMap)>','<com.android.internal.util.StateMachine$SmHandler: void access$1200(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.IState)>','<android.filterfw.core.StreamPort: boolean hasFrame()>','<android.widget.SuggestionsAdapter: void <init>(android.content.Context,android.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)>','<android.widget.AbsSpinner: void requestLayout()>','<com.android.internal.util.State: void enter()>','<com.android.server.LocationManagerService: java.util.HashMap access$1500(com.android.server.LocationManagerService)>','<android.webkit.ZoomManager: float getScale()>','<com.android.internal.telephony.IntRangeManager: boolean disableRange(int,int,java.lang.String)>','<com.android.server.DevicePolicyManagerService: void lockNow()>','<android.appwidget.AppWidgetHostView: int getAppWidgetId()>','<android.app.ActivityManager$ProcessErrorStateInfo: void <clinit>()>','<android.media.MediaRecorder: android.media.MediaRecorder$OnErrorListener access$100(android.media.MediaRecorder)>','<com.android.internal.util.BitwiseOutputStream: void writeByteArray(int,byte[])>','<android.widget.CheckBox: void <init>(android.content.Context)>','<android.content.pm.IPackageManager$Stub$Proxy: void setApplicationEnabledSetting(java.lang.String,int,int,int)>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>','<android.os.Environment: java.io.File getDataDirectory()>','<android.os.Parcel: void finalize()>','<com.android.internal.telephony.cat.Menu$1: com.android.internal.telephony.cat.Menu[] newArray(int)>','<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>','<android.net.LinkCapabilities: void log(java.lang.String)>','<android.content.pm.IPackageManager$Stub$Proxy: int getUidForSharedUser(java.lang.String)>','<android.graphics.drawable.Drawable: void setDither(boolean)>','<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>','<android.provider.Settings$Secure: java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)>','<android.telephony.TelephonyManager: int getSimState()>','<android.hardware.ISerialManager$Stub$Proxy: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>','<android.accessibilityservice.AccessibilityService: void onServiceConnected()>','<android.app.backup.BackupAgent: void fullBackupFileTree(java.lang.String,java.lang.String,java.lang.String,java.util.HashSet,android.app.backup.FullBackupDataOutput)>','<com.android.server.PowerManagerService$LockList: com.android.server.PowerManagerService$WakeLock removeLock(android.os.IBinder)>','<android.telephony.GsmCellIdentity: int getPsc()>','<android.app.ApplicationPackageManager: int checkSignatures(int,int)>','<android.net.NetworkStats: java.lang.String tagToString(int)>','<android.text.style.TabStopSpan$Standard: int getTabStop()>','<android.webkit.WebCoreThreadWatchdog: void run()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteNetworkInterfaceType(java.lang.String,int)>','<android.os.MemoryFile: boolean allowPurging(boolean)>','<android.view.HardwareRenderer: void startTrimMemory(int)>','<android.view.VelocityTracker$1: void onReleased(android.util.Poolable)>','<android.os.storage.IMountShutdownObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.telephony.SmsManager: boolean disableCellBroadcastRange(int,int)>','<android.webkit.WebView: int computeVerticalScrollRange()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: boolean isDisconnected()>','<com.android.internal.view.menu.MenuPopupHelper: boolean onKey(android.view.View,int,android.view.KeyEvent)>','<android.os.Trace: boolean isTagEnabled(long)>','<com.android.server.sip.SipSessionListenerProxy: android.net.sip.ISipSessionListener getListener()>','<com.android.server.pm.Settings$1: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>','<android.app.ContextImpl: void clearWallpaper()>','<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()>','<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>','<android.widget.AdapterView: android.os.Parcelable access$100(android.widget.AdapterView)>','<android.widget.AdapterView: void removeViewAt(int)>','<android.app.ContextImpl$ApplicationContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>','<com.android.internal.app.AlertController$AlertParams$3: void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController)>','<android.renderscript.RenderScript: void nAssignName(int,byte[])>','<com.android.internal.widget.TransportControlView$1: void handleMessage(android.os.Message)>','<android.provider.ContactsContract$Preferences: void <init>()>','<android.widget.RemoteViews$ViewGroupAction: void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews$BitmapCache)>','<android.nfc.INfcAdapter$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.location.GpsLocationProvider: void access$300(com.android.server.location.GpsLocationProvider,android.content.Intent)>','<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int)>','<android.view.View: int getTop()>','<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>','<android.os.NetworkOnMainThreadException: void <init>()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getPeerProfile()>','<com.android.server.am.ActivityManagerService$14: void <init>()>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void onServiceDisconnected(android.content.ComponentName)>','<android.content.res.XmlBlock: int access$400(int,int)>','<com.android.internal.telephony.DataConnection: boolean isRetryNeeded()>','<android.os.Debug$MemoryInfo$1: android.os.Debug$MemoryInfo createFromParcel(android.os.Parcel)>','<android.app.SharedPreferencesImpl: void access$000(android.app.SharedPreferencesImpl)>','<android.app.IThumbnailReceiver$Stub$Proxy: void <init>(android.os.IBinder)>','<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()>','<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>','<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>','<com.android.server.wm.Watermark: void drawIfNeeded()>','<android.view.textservice.SpellCheckerSubtype: boolean equals(java.lang.Object)>','<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()>','<com.android.internal.telephony.RIL: void hangupWaitingOrBackground(android.os.Message)>','<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)>','<android.view.KeyEvent: long getEventTime()>','<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.ApplicationErrorReport$RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>','<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager$RegistrationListener)>','<android.content.IntentSender$SendIntentException: void <init>(java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.internal.os.BatteryStatsImpl: boolean getNextHistoryLocked(android.os.BatteryStats$HistoryItem)>','<com.android.server.StatusBarManagerService: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<android.animation.LayoutTransition: void cancel()>','<android.view.accessibility.IAccessibilityManager$Stub: android.os.IBinder asBinder()>','<android.text.method.ReplacementTransformationMethod$ReplacementCharSequence: int length()>','<com.android.server.am.ActivityManagerService$9$1: void run()>','<android.hardware.input.IInputDevicesChangedListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.View: void setScrollX(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$1600(com.android.internal.policy.impl.LockPatternKeyguardView,int)>','<android.view.MotionEvent: int getHistorySize()>','<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>','<com.android.internal.policy.PolicyManager: android.view.WindowManagerPolicy makeNewWindowManager()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void <clinit>()>','<android.webkit.SelectActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>','<android.media.Metadata: long getLong(int)>','<com.android.internal.policy.impl.PhoneWindowManager: boolean allowKeyRepeat()>','<android.graphics.drawable.InsetDrawable: void setAlpha(int)>','<android.app.ActivityThread$ProviderRefCount: void <init>(android.app.IActivityManager$ContentProviderHolder,android.app.ActivityThread$ProviderClientRecord,int,int)>','<android.webkit.SelectActionModeCallback: void <init>()>','<android.widget.OverScroller$SplineOverScroller: boolean access$000(android.widget.OverScroller$SplineOverScroller)>','<android.widget.TextView: void setMaxEms(int)>','<android.os.INetworkManagementService$Stub$Proxy: void registerObserver(android.net.INetworkManagementEventObserver)>','<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>','<android.database.ContentObserver$Transport: void <init>(android.database.ContentObserver)>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: java.lang.CharSequence subSequence(int,int)>','<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String getMdn()>','<com.android.internal.telephony.cat.Tone: com.android.internal.telephony.cat.Tone fromInt(int)>','<com.android.server.PowerManagerService: android.os.Handler access$4400(com.android.server.PowerManagerService)>','<android.app.Notification$Builder: java.lang.CharSequence access$702(android.app.Notification$Builder,java.lang.CharSequence)>','<android.filterpacks.videoproc.BackDropperFilter: void prepare(android.filterfw.core.FilterContext)>','<android.app.ProgressDialog: void setProgressStyle(int)>','<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)>','<com.android.server.usb.UsbDeviceManager: void <clinit>()>','<com.android.internal.policy.impl.GlobalActions: android.view.WindowManagerPolicy$WindowManagerFuncs access$500(com.android.internal.policy.impl.GlobalActions)>','<android.app.backup.BackupAgent: android.os.IBinder onBind()>','<android.widget.GridView: int getHorizontalSpacing()>','<android.net.NetworkStatsHistory$DataStreamUtils: void <init>()>','<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.TextView: int getCompoundPaddingRight()>','<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>','<android.widget.Editor$EasyEditPopupWindow: int clipVertically(int)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getLine1Number()>','<android.view.textservice.SpellCheckerSubtype: boolean containsExtraValueKey(java.lang.String)>','<android.graphics.drawable.ColorDrawable: void <init>(int)>','<android.content.IntentFilter$AuthorityEntry: java.lang.String access$000(android.content.IntentFilter$AuthorityEntry)>','<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void <clinit>()>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>','<com.android.server.MountService$ObbActionHandler: void <init>(com.android.server.MountService,android.os.Looper)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void removeIcon(java.lang.String)>','<android.telephony.NeighboringCellInfo: void <init>()>','<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>','<com.android.server.WallpaperManagerService: void finalize()>','<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()>','<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>','<com.android.server.WifiService: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>','<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>','<com.android.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable: void <clinit>()>','<com.android.internal.widget.ActionBarView: int getDropdownSelectedPosition()>','<android.os.Parcel: void readStringArray(java.lang.String[])>','<android.webkit.ZoomManager: boolean isZoomScaleFixed()>','<android.app.ActivityThread$ApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>','<android.telephony.SignalStrength: android.telephony.SignalStrength newFromBundle(android.os.Bundle)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$3400(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.os.Messenger,android.net.wifi.p2p.nsd.WifiP2pServiceInfo)>','<android.view.PointerIcon: boolean equals(java.lang.Object)>','<android.os.SystemProperties: java.lang.String get(java.lang.String)>','<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>','<android.app.Notification$Action: void <init>(android.os.Parcel,android.app.Notification$1)>','<android.content.res.CompatibilityInfo: boolean supportsScreen()>','<android.text.LoginFilter: void <init>()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>','<android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm[] values()>','<com.android.internal.telephony.RetryManager: int getRetryCount()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)>','<android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState valueOf(java.lang.String)>','<android.view.VolumePanel$StreamResources: void <clinit>()>','<com.android.server.input.InputFilter: com.android.server.input.InputFilter$Host access$002(com.android.server.input.InputFilter,com.android.server.input.InputFilter$Host)>','<android.util.Base64: java.lang.String encodeToString(byte[],int)>','<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void start()>','<com.android.internal.telephony.DataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>','<android.view.accessibility.AccessibilityRecord: boolean isPassword()>','<com.android.server.am.ProcessList: void <clinit>()>','<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)>','<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>','<android.net.sip.SipAudioCall: void access$900(android.net.sip.SipAudioCall,boolean)>','<android.view.AccessibilityInteractionController$SomeArgs: android.view.AccessibilityInteractionController$SomeArgs getNextPoolable()>','<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)>','<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.SearchableInfo: java.lang.String getSuggestSelection()>','<android.widget.ArrayAdapter: android.widget.Filter getFilter()>','<android.os.StrictMode: android.util.Singleton access$600()>','<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>','<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>','<android.net.wifi.WifiStateMachine$WpsRunningState: void exit()>','<com.android.server.pm.PackageManagerService$4: int compare(android.content.pm.ProviderInfo,android.content.pm.ProviderInfo)>','<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>','<android.widget.AbsListView: boolean isItemChecked(int)>','<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>','<android.webkit.SearchBoxImpl: void dispatchCompleteCallback(java.lang.String,int,boolean)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimMdnLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<android.hardware.input.InputManager$InputDeviceListenerDelegate: void handleMessage(android.os.Message)>','<com.android.internal.telephony.cdma.CdmaDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>','<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>','<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>','<android.webkit.WebViewClassic: void setUseMockDeviceOrientation()>','<com.android.server.LocationManagerService$LpAccuracyComparator: boolean equals(com.android.server.location.LocationProviderInterface,com.android.server.location.LocationProviderInterface)>','<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>','<com.android.internal.telephony.RestrictedState: boolean isCsEmergencyRestricted()>','<android.content.ContextWrapper: void clearWallpaper()>','<android.webkit.WebViewClassic: void freeMemory()>','<android.media.MediaRecorder: int getAudioSourceMax()>','<android.filterfw.core.FilterPort: java.lang.String toString()>','<android.os.UEventObserver$UEvent: java.lang.String get(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean removeSubTask(int,int)>','<android.widget.ListPopupWindow$ResizePopupRunnable: void run()>','<com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>','<android.os.AsyncTask: void access$500(android.os.AsyncTask,java.lang.Object)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$SessionTimer$1: void run()>','<android.preference.GenericInflater: java.lang.String getDefaultPackage()>','<android.graphics.drawable.ClipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.ATResponseParser: java.lang.String nextString()>','<android.text.style.SuggestionSpan: java.lang.String getLocale()>','<android.graphics.Point: void <init>(int,int)>','<android.graphics.drawable.GradientDrawable: void <init>()>','<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>','<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>','<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region$Op)>','<com.android.internal.widget.LockPatternUtils: boolean isVisiblePatternEnabled()>','<com.android.server.NetworkManagementService: android.os.Handler access$300(com.android.server.NetworkManagementService)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyOffApnsOfAvailability(java.lang.String)>','<android.bluetooth.IBluetoothStateChangeCallback$Stub: android.os.IBinder asBinder()>','<android.content.pm.PackageParser$ParseComponentArgs: void <init>(android.content.pm.PackageParser$Package,java.lang.String[],int,int,int,int,java.lang.String[],int,int,int)>','<android.webkit.WebViewClassic: boolean onKeyUp(int,android.view.KeyEvent)>','<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>','<android.net.http.CertificateChainValidator: void handleTrustStorageUpdate()>','<com.android.server.am.ActivityManagerService: boolean access$000(com.android.server.am.ActivityManagerService)>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void <init>(android.widget.RemoteViewsAdapter)>','<com.android.internal.app.AlertController: int access$1000(com.android.internal.app.AlertController)>','<android.content.IClipboard$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void restartRadio()>','<android.filterfw.core.InputPort: java.lang.Object getTarget()>','<com.android.internal.policy.impl.PhoneWindowManager$PolicyHandler: void handleMessage(android.os.Message)>','<com.android.server.AppWidgetService: void stopListening(int)>','<android.app.ApplicationPackageManager: void removePackageFromPreferred(java.lang.String)>','<android.webkit.WebSettings: boolean getSavePassword()>','<com.android.internal.policy.impl.KeyguardViewMediator: void access$1900(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>','<android.app.ActivityThread: void main(java.lang.String[])>','<com.android.server.am.ServiceRecord: void postNotification()>','<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>','<android.net.wifi.WifiMonitor: void access$500(android.net.wifi.WifiMonitor,android.net.NetworkInfo$DetailedState,java.lang.String)>','<android.app.backup.BackupAgent: void onDestroy()>','<android.widget.Filter: void filter(java.lang.CharSequence)>','<com.android.internal.telephony.DataConnectionAc: android.net.LinkCapabilities getLinkCapabilitiesSync()>','<android.content.SyncManager$SyncHandler$SyncNotificationInfo: void toString(java.lang.StringBuilder)>','<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<com.android.internal.telephony.sip.SipCallBase: java.lang.String toString()>','<android.view.SurfaceView$4: android.graphics.Canvas lockCanvas()>','<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()>','<com.android.internal.telephony.DataConnection$DcActivatingState: boolean processMessage(android.os.Message)>','<com.android.server.LocationManagerService$ProximityAlert: android.app.PendingIntent getIntent()>','<android.net.ProxyProperties: boolean equals(java.lang.Object)>','<com.android.internal.telephony.sip.SipPhone: void unregisterForRingbackTone(android.os.Handler)>','<com.android.server.WifiService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.text.DynamicLayout: int getLineStart(int)>','<android.app.ApplicationThreadProxy: void getMemoryInfo(android.os.Debug$MemoryInfo)>','<com.android.internal.telephony.BaseCommands: void <init>(android.content.Context)>','<android.graphics.Path$FillType: void <clinit>()>','<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>','<android.net.wifi.WifiStateMachine: void stopFilteringMulticastV4Packets()>','<android.content.pm.PackageInfoLite: void <clinit>()>','<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>','<android.app.Instrumentation: void startPerformanceSnapshot()>','<com.android.internal.telephony.sip.SipCommandInterface: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>','<android.webkit.HTML5VideoView: void pause()>','<android.location.GpsSatellite: boolean usedInFix()>','<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>','<android.webkit.ZoomControlExternal$ExtendedZoomControls: boolean hasFocus()>','<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)>','<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>','<com.android.server.AlarmManagerService$UninstallReceiver: void <init>(com.android.server.AlarmManagerService)>','<android.net.sip.SipProfile: int getCallingUid()>','<android.app.Instrumentation: void finish(int,android.os.Bundle)>','<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>','<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$2000(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>','<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>','<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>','<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>','<android.content.ContentResolver: void <init>(android.content.Context)>','<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>','<android.webkit.WebViewCore$DrawData: void <init>()>','<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>','<com.android.server.InputMethodManagerService$7: void <init>(com.android.server.InputMethodManagerService)>','<com.android.internal.telephony.BaseCommands: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>','<android.view.View: android.view.ViewParent getParent()>','<com.android.server.wm.WindowManagerService: void dumpAnimatingAppTokensLocked()>','<com.android.internal.telephony.cdma.CDMAPhone: void sendEmergencyCallbackModeChange()>','<android.view.GLES20Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>','<android.net.DhcpStateMachine$RunningState: void <init>(android.net.DhcpStateMachine)>','<android.net.NetworkStats: int size()>','<android.view.GLES20RecordingCanvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>','<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>','<android.widget.AbsListView: void setTranscriptMode(int)>','<android.animation.Keyframe$IntKeyframe: int getIntValue()>','<android.graphics.drawable.Drawable: int[] getState()>','<android.view.ViewRootImpl$2: android.graphics.Rect getSurfaceFrame()>','<android.webkit.CallbackProxy$7: void <init>(android.webkit.CallbackProxy,android.webkit.JsPromptResult)>','<com.android.internal.telephony.gsm.SmsCbHeader: boolean isUmtsFormat()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>','<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation$ActivityMonitor,int)>','<android.view.View: void setRotationX(float)>','<com.android.internal.app.ActionBarImpl: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar$OnNavigationListener)>','<android.test.mock.MockContentResolver: void <init>()>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getFirstArgument(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void conference()>','<android.view.View$AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>','<com.android.internal.view.menu.ActionMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView$ItemView)>','<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,int[],int)>','<android.app.Service: int onStartCommand(android.content.Intent,int,int)>','<android.widget.AbsListView: void setOverScrollEffectPadding(int,int)>','<android.net.LinkProperties: java.lang.String getInterfaceName()>','<android.webkit.HTML5VideoViewProxy$PosterDownloader: void <clinit>()>','<android.webkit.WebViewClassic$3: void <init>(android.webkit.WebViewClassic,android.os.Message)>','<com.android.server.NetworkManagementSocketTagger$1: com.android.server.NetworkManagementSocketTagger$SocketTags initialValue()>','<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)>','<com.android.server.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>','<android.app.ActivityManagerNative: void <clinit>()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder newBuilder()>','<android.widget.AdapterViewAnimator: void transformViewForTransition(int,int,android.view.View,boolean)>','<android.app.ActivityThread: void access$1700(android.app.ActivityThread,android.app.ActivityThread$BindServiceData)>','<android.view.IWindowManager$Stub$Proxy: float[] getAnimationScales()>','<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onAnswer()>','<android.view.View: float getCameraDistance()>','<android.net.Uri: java.lang.String access$600()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()>','<android.graphics.Paint: void setTextLocale(java.util.Locale)>','<android.webkit.WebViewClassic$7: void <init>(android.webkit.WebViewClassic,java.io.FileInputStream,android.os.Bundle)>','<android.content.BroadcastReceiver$PendingResult: void setResultCode(int)>','<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>','<com.android.internal.telephony.UUSInfo: int getType()>','<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>','<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>','<android.view.KeyCharacterMap$FallbackAction: void <clinit>()>','<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>','<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)>','<com.android.internal.policy.impl.PatternUnlockScreen: void onAttachedToWindow()>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: void <init>(android.os.Message,java.lang.String,com.android.internal.util.State,com.android.internal.util.State)>','<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>','<com.android.server.NetworkManagementSocketTagger: void <clinit>()>','<android.widget.AbsListView: void resetList()>','<android.os.IRemoteCallback$Stub: void <init>()>','<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>','<android.net.NetworkStatsHistory$DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>','<com.android.server.net.NetworkStatsService$6: void onReceive(android.content.Context,android.content.Intent)>','<android.view.View: void setVerticalScrollbarPosition(int)>','<android.os.BatteryStats$Uid$Sensor: void <init>()>','<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>','<android.view.View: void onLayout(boolean,int,int,int,int)>','<android.location.Address: java.lang.String access$1802(android.location.Address,java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewMediator: java.lang.String access$800(com.android.internal.policy.impl.KeyguardViewMediator)>','<com.android.internal.policy.impl.GlobalActions$MyAdapter: int getCount()>','<android.os.Process: android.os.Process$ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,java.lang.String[])>','<android.app.ActivityThread$ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean)>','<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>','<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateClipTable(int,int)>','<android.location.Address: java.lang.String getFeatureName()>','<com.android.internal.app.ActionBarImpl: void setCustomView(int)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: void onGesture(int)>','<com.android.server.StatusBarManagerService: void preloadRecentApps()>','<android.view.accessibility.IAccessibilityManager$Stub: void <init>()>','<android.webkit.CertTool: java.lang.String getSignedPublicKey(android.content.Context,int,java.lang.String)>','<android.server.BluetoothBondState$2: void <init>(android.server.BluetoothBondState)>','<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>','<com.android.server.wm.WindowStateAnimator: void destroySurfaceLocked()>','<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter,java.lang.String,int,int)>','<android.webkit.WebViewInputDispatcher$TouchStream: android.view.MotionEvent update(android.view.MotionEvent)>','<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>','<android.widget.RemoteViews$TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>','<android.os.Trace$1: void <init>()>','<com.android.internal.telephony.PhoneProxy: java.lang.String getCdmaEriText()>','<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: long skip(long)>','<android.graphics.Paint: boolean isLinearText()>','<com.android.server.location.GpsXtraDownloader: byte[] doDownload(java.lang.String,boolean,java.lang.String,int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>','<android.util.Base64$Encoder: boolean process(byte[],int,int,boolean)>','<android.content.Intent: void setAllowFds(boolean)>','<android.animation.ValueAnimator: void <init>()>','<android.view.AccessibilityIterators$AbstractTextSegmentIterator: int[] getRange(int,int)>','<android.net.NetworkStats$Entry: void <init>(long,long,long,long,long)>','<com.android.internal.widget.DigitalClock$TimeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$5600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.server.WifiService: boolean access$300(com.android.server.WifiService)>','<com.android.server.net.NetworkStatsService: void bindConnectivityManager(android.net.IConnectivityManager)>','<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>','<com.android.internal.telephony.cat.SelectItemResponseData: void format(java.io.ByteArrayOutputStream)>','<com.android.server.NetworkManagementService: java.lang.String[] listTtys()>','<android.content.SyncManager$SyncTimeTracker: void <init>(android.content.SyncManager,android.content.SyncManager$1)>','<android.app.ActivityManager: java.util.List getRunningExternalApplications()>','<android.webkit.WebSettings$ZoomDensity: android.webkit.WebSettings$ZoomDensity valueOf(java.lang.String)>','<com.android.server.NetworkManagementSocketTagger: void resetKernelUidStats(int)>','<com.android.internal.telephony.gsm.SmsCbHeader: int getNumberOfPages()>','<android.view.View: int getNextFocusDownId()>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$4300(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>','<android.view.MotionEvent: java.lang.String toString()>','<android.renderscript.RenderScript: void nScriptBindAllocation(int,int,int)>','<android.content.pm.ServiceInfo$1: android.content.pm.ServiceInfo createFromParcel(android.os.Parcel)>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: boolean containsRemoteViewAt(int)>','<android.database.DataSetObservable: void notifyInvalidated()>','<android.telephony.NeighboringCellInfo: int getPsc()>','<android.bluetooth.BluetoothDeviceProfileState: void access$9700(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>','<android.graphics.drawable.ScaleDrawable$ScaleState: android.graphics.drawable.Drawable newDrawable()>','<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)>','<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>','<android.view.Choreographer$CallbackQueue: void removeCallbacksLocked(java.lang.Object,java.lang.Object)>','<android.view.AccessibilityInteractionController$SomeArgs: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>','<android.net.wifi.WifiStateMachine$DisconnectingState: boolean processMessage(android.os.Message)>','<com.android.server.wm.WindowAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>','<com.android.internal.telephony.IWapPushManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities access$302(android.net.wifi.WifiStateTracker,android.net.LinkCapabilities)>','<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>','<android.webkit.WebSettings: int getTextZoom()>','<com.android.server.am.ProcessRecord: void resetPackageList()>','<com.android.internal.telephony.PhoneProxy: java.lang.String getVoiceMailNumber()>','<android.media.IRemoteControlClient$Stub$Proxy: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay)>','<com.android.internal.util.TypedProperties: long getLong(java.lang.String)>','<android.content.SyncManager: void access$2900(android.content.SyncManager,android.content.SyncOperation)>','<com.android.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)>','<android.webkit.WebChromeClient: void setupAutoFill(android.os.Message)>','<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float)>','<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)>','<android.animation.Animator: void setupStartValues()>','<com.android.internal.telephony.gsm.GsmConnection: int getGSMIndex()>','<com.android.internal.telephony.test.ModelInterpreter: void triggerSsn(int,int)>','<android.media.AudioManager: void playSoundEffect(int)>','<android.webkit.WebStorageClassic: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>','<android.widget.OverScroller$SplineOverScroller: void setFinalPosition(int)>','<android.os.Debug: void resetThreadGcInvocationCount()>','<com.android.vcard.VCardParser_V40: void parseOne(java.io.InputStream)>','<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.os.storage.StorageManager$ObbListenerDelegate$1: void handleMessage(android.os.Message)>','<android.view.ViewGroup$ViewLocationHolder: void <init>()>','<android.content.IContentService$Stub: void <init>()>','<com.android.server.WifiService$LockList: int access$3400(com.android.server.WifiService$LockList,android.os.IBinder)>','<android.os.CancellationSignal$Transport: void <init>(android.os.CancellationSignal$1)>','<android.view.InputDevice$MotionRange: void <init>(int,int,float,float,float,float,android.view.InputDevice$1)>','<com.android.internal.view.BaseSurfaceHolder: void setFormat(int)>','<android.server.search.Searchables$1: void <init>()>','<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.webkit.ByteArrayBuilder: void append(byte[],int,int)>','<android.webkit.WebSettingsClassic: boolean getAllowFileAccess()>','<android.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>','<android.view.View: void <clinit>()>','<android.webkit.WebViewCore: void access$5000(android.webkit.WebViewCore,int,java.lang.String[])>','<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()>','<android.content.res.CompatibilityInfo: int describeContents()>','<com.android.server.PowerManagerService$UnsynchronizedWakeLock: void <init>(com.android.server.PowerManagerService,int,java.lang.String,boolean)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DataConnectionTracker$Activity access$1300(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<com.android.internal.widget.LockPatternView: int getSuggestedMinimumWidth()>','<android.net.wifi.WpsResult: void <clinit>()>','<android.view.HardwareRenderer$Gl20Renderer: void setup(int,int)>','<android.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>','<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)>','<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.hardware.LegacySensorManager$1: void <init>(android.hardware.LegacySensorManager)>','<android.webkit.WebCoreThreadWatchdog: boolean access$000(android.webkit.WebCoreThreadWatchdog)>','<android.location.ILocationManager$Stub: void <init>()>','<com.android.server.am.BatteryStatsService: void noteStopSensor(int,int)>','<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>','<com.android.internal.telephony.PhoneProxy: android.telephony.ServiceState getServiceState()>','<com.android.internal.app.AlertController$1: void <init>(com.android.internal.app.AlertController)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void start()>','<android.media.AudioService: java.lang.Object access$7600()>','<android.text.style.StyleSpan: int describeContents()>','<android.webkit.CookieManagerClassic: void waitForCookieOperationsToComplete()>','<android.filterfw.core.FilterFunction$FrameHolderPort: void <init>(android.filterfw.core.FilterFunction)>','<com.android.internal.telephony.CallManager: void unregisterForMmiComplete(android.os.Handler)>','<android.server.BluetoothAdapterStateMachine$BluetoothOn: void enter()>','<android.hardware.Sensor: java.lang.String getVendor()>','<com.android.internal.telephony.cdma.sms.UserData: void <clinit>()>','<com.android.internal.telephony.RetryManager: void retryForeverUsingLastTimeout()>','<android.provider.ContactsContract$RawContacts: void <clinit>()>','<com.android.internal.telephony.cdma.CDMAPhone: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>','<com.android.internal.widget.ActionBarOverlayLayout: void setActionBar(com.android.internal.app.ActionBarImpl)>','<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>','<com.android.server.location.MockProvider: void addListener(int)>','<android.widget.ScrollView: boolean isFillViewport()>','<android.view.HardwareRenderer$Gl20Renderer: void access$500(android.view.View)>','<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>','<android.webkit.BrowserFrame: void postUrl(java.lang.String,byte[])>','<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForSuppServiceNotification(android.os.Handler)>','<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.widget.RelativeLayout$LayoutParams: int access$102(android.widget.RelativeLayout$LayoutParams,int)>','<android.widget.TextView: java.util.Locale getTextServicesLocale()>','<com.android.server.wm.ViewServer$ViewServerWorker: void <init>(com.android.server.wm.ViewServer,java.net.Socket)>','<android.graphics.drawable.ClipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<com.android.server.sip.SipHelper: void <init>(javax.sip.SipStack,javax.sip.SipProvider)>','<android.bluetooth.BluetoothTetheringDataTracker: void setUserDataEnable(boolean)>','<android.os.INetworkManagementService$Stub$Proxy: boolean isBandwidthControlEnabled()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportSimUnlocked()>','<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.webkit.WebViewCore: void resumePriority()>','<android.os.IPowerManager$Stub$Proxy: void setAutoBrightnessAdjustment(float)>','<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)>','<android.content.IContentService$Stub$Proxy: void removeStatusChangeListener(android.content.ISyncStatusObserver)>','<android.net.LinkProperties: void addDns(java.net.InetAddress)>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void onAnimationStart(android.animation.Animator)>','<android.os.storage.IMountService$Stub$Proxy: int decryptStorage(java.lang.String)>','<android.security.Credentials: void unlock(android.content.Context)>','<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>','<com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy$Connection access$300(com.android.server.location.LocationProviderProxy)>','<android.graphics.drawable.LevelListDrawable$LevelListState: int[] access$100(android.graphics.drawable.LevelListDrawable$LevelListState)>','<com.android.internal.os.PkgUsageStats: void writeToParcel(android.os.Parcel,int)>','<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>','<android.bluetooth.BluetoothDeviceProfileState: void access$6900(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.net.SntpClient: long getRoundTripTime()>','<android.view.HardwareRenderer: void trimMemory(int)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.WifiNative access$1100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.app.ActivityThread: android.app.Activity startActivityNow(android.app.Activity,java.lang.String,android.content.Intent,android.content.pm.ActivityInfo,android.os.IBinder,android.os.Bundle,android.app.Activity$NonConfigurationInstances)>','<android.webkit.WebSettings: boolean getLightTouchEnabled()>','<android.database.BulkCursorDescriptor: void readFromParcel(android.os.Parcel)>','<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>','<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>','<com.android.internal.telephony.sip.SipPhone: void exitEmergencyCallbackMode()>','<android.net.NetworkIdentity: int hashCode()>','<android.os.storage.StorageVolume: boolean isEmulated()>','<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>','<com.android.internal.app.ActionBarImpl$TabImpl: java.lang.Object getTag()>','<android.view.MotionEvent: float getAxisValue(int,int)>','<android.app.backup.IBackupManager$Stub$Proxy: void opComplete(int)>','<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.TextView$ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>','<com.android.server.NsdService: void access$600(com.android.server.NsdService,android.os.Message,int,int)>','<android.webkit.ZoomManager: float getTextWrapScale()>','<com.android.server.ConnectivityService: boolean isNetworkSupported(int)>','<android.os.Parcel: boolean pushAllowFds(boolean)>','<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn()>','<com.android.internal.telephony.SmsUsageMonitor: void dispose()>','<com.android.internal.telephony.DataConnectionAc: void reqGetReconnectIntent()>','<android.content.SyncStats: void <init>(android.os.Parcel)>','<com.android.internal.telephony.BaseCommands: void unSetOnCatProactiveCmd(android.os.Handler)>','<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String getInstallerPackageName(java.lang.String)>','<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakLivelinessEnabled()>','<com.android.server.am.TaskRecord: void touchActiveTime()>','<android.opengl.GLLogWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>','<com.android.server.wm.WindowState: void getTouchableRegion(android.graphics.Region)>','<android.net.IThrottleManager$Stub$Proxy: java.lang.String getHelpUri()>','<android.media.IRemoteControlClient$Stub$Proxy: void setCurrentClientGenerationId(int)>','<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>','<android.os.Bundle: java.lang.String toString()>','<com.android.internal.widget.LockPatternView$DisplayMode: com.android.internal.widget.LockPatternView$DisplayMode[] values()>','<com.android.server.AppWidgetServiceImpl: int enforceCallingUid(java.lang.String)>','<android.database.AbstractWindowedCursor: boolean isFloat(int)>','<android.view.MotionEvent: float getX()>','<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>','<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin$PreferencesClickHandler)>','<com.android.internal.policy.impl.LockScreen: com.android.internal.policy.impl.LockScreen$UnlockWidgetCommonMethods access$100(com.android.internal.policy.impl.LockScreen)>','<android.graphics.Matrix$1: boolean postRotate(float)>','<android.webkit.WebViewClassic: java.lang.String findAddress(java.lang.String)>','<android.filterfw.core.NativeFrame: void <clinit>()>','<android.text.style.DynamicDrawableSpan: void <init>(int)>','<android.webkit.BrowserFrame: void access$300(android.webkit.BrowserFrame,int,int)>','<android.view.HardwareRenderer$GlRenderer: int onPreDraw(android.graphics.Rect)>','<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>','<com.android.server.pm.PackageManagerService$11: void <init>(com.android.server.pm.PackageManagerService,boolean,java.util.Set)>','<android.graphics.Rect: void offsetTo(int,int)>','<com.android.server.WifiService: boolean access$3802(com.android.server.WifiService,boolean)>','<android.net.ThrottleManager: void <init>(android.net.IThrottleManager)>','<com.android.internal.os.BatteryStatsImpl: void updateDischargeScreenLevelsLocked(boolean,boolean)>','<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionKey()>','<com.android.internal.app.ActionBarImpl$TabImpl: android.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.String packageForFilter(android.content.pm.PackageParser$ActivityIntentInfo)>','<android.app.ActivityThread: void applyConfigurationToResources(android.content.res.Configuration)>','<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>','<android.text.DynamicLayout: int getBottomPadding()>','<android.app.ActivityThread: void <init>()>','<com.android.internal.database.SortCursor: boolean onMove(int,int)>','<android.widget.TextView: boolean getLinksClickable()>','<android.app.ApplicationErrorReport$CrashInfo: void <init>(android.os.Parcel)>','<android.text.HtmlToSpannedConverter: void startDocument()>','<android.database.CursorWindow: boolean isFloat(int,int)>','<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartGps(int)>','<android.net.RouteInfo: int hashCode()>','<com.android.internal.widget.ActionBarView$HomeView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,com.android.internal.os.HandlerCaller$Callback)>','<com.android.internal.view.menu.MenuItemImpl: boolean collapseActionView()>','<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)>','<android.os.WorkSource: int size()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence access$1100(com.android.internal.policy.impl.KeyguardUpdateMonitor,android.content.Intent)>','<com.android.internal.telephony.BaseCommands: void unregisterForCdmaPrlChanged(android.os.Handler)>','<android.net.wifi.WifiStateMachine$ScanModeState: void enter()>','<android.graphics.Path: void moveTo(float,float)>','<android.app.ProgressDialog: void onStart()>','<android.location.Address: void setAdminArea(java.lang.String)>','<android.location.ILocationManager$Stub$Proxy: void clearTestProviderEnabled(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void reportStkServiceIsRunning(android.os.Message)>','<com.android.internal.telephony.gsm.GSMPhone: void getOutgoingCallerIdDisplay(android.os.Message)>','<com.android.internal.net.VpnConfig: void <clinit>()>','<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)>','<android.content.res.ObbInfo: void <clinit>()>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>','<android.telephony.SignalStrength: int describeContents()>','<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>','<android.os.StrictMode$AndroidBlockGuardPolicy: void onWriteToDisk()>','<android.view.IWindowManager$Stub: void <init>()>','<android.webkit.ClientCertRequestHandler: void cancel()>','<android.view.GLES20RecordingCanvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>','<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>','<com.android.internal.policy.impl.PhoneWindowManager$4: void <init>(com.android.internal.policy.impl.PhoneWindowManager,int)>','<com.android.server.am.ActivityManagerService: void dumpGraphicsHardwareUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>','<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>','<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>','<android.webkit.WebViewClassic: void access$1000()>','<com.android.internal.util.ArrayUtils: int idealShortArraySize(int)>','<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>','<android.nfc.NdefRecord: java.lang.String toMimeType()>','<android.media.IAudioService$Stub$Proxy: boolean loadSoundEffects()>','<android.filterfw.core.OutputPort: boolean isConnected()>','<com.android.internal.view.IInputContext$Stub$Proxy: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>','<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>','<android.content.res.Resources: void startPreloading()>','<android.net.LocalSocket: java.lang.String toString()>','<android.net.wifi.WifiStateMachine: int access$16300(android.net.wifi.WifiStateMachine)>','<android.widget.TextView: void setCompoundDrawablePadding(int)>','<com.android.internal.util.FileRotator$1: void read(java.io.InputStream)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>','<android.accounts.IAccountManager$Stub: android.accounts.IAccountManager asInterface(android.os.IBinder)>','<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>','<com.android.server.LocationManagerService: void <clinit>()>','<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>','<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.telephony.sip.SipPhone: java.lang.String getLine1AlphaTag()>','<android.inputmethodservice.InputMethodService: void onFinishInput()>','<android.app.IThumbnailRetriever$Stub: void <init>()>','<com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy: long getItemId(int)>','<android.text.format.Time: void set(android.text.format.Time)>','<android.media.AudioService: void access$200(android.os.Handler,int,int,int,int,java.lang.Object,int)>','<android.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>','<android.opengl.GLLogWrapper: void glMultMatrixf(java.nio.FloatBuffer)>','<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>','<android.widget.ExpandableListConnector$PositionMetadata: void recycle()>','<com.android.internal.widget.multiwaveview.TargetDrawable: boolean isActive()>','<com.android.internal.util.ArrayUtils: boolean contains(int[],int)>','<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>','<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>','<android.graphics.drawable.ColorDrawable: void <init>()>','<com.android.internal.view.menu.ActionMenuView: void setOverflowReserved(boolean)>','<android.os.IRemoteCallback$Stub: android.os.IBinder asBinder()>','<android.view.inputmethod.InputMethodInfo$1: android.view.inputmethod.InputMethodInfo[] newArray(int)>','<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>','<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.view.inputmethod.InputMethodManager$1: void <init>(android.view.inputmethod.InputMethodManager)>','<android.view.IWindowSession$Stub$Proxy: void setInTouchMode(boolean)>','<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForEriFileLoaded(android.os.Handler)>','<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailNumber()>','<com.android.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()>','<android.view.GLES20RecordingCanvas: void drawPaint(android.graphics.Paint)>','<android.webkit.WebViewCore: void access$2600(android.webkit.WebViewCore,int,int,int,int,int)>','<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: void <init>(android.bluetooth.BluetoothDeviceProfileState,android.bluetooth.BluetoothDeviceProfileState$1)>','<android.graphics.PointF: void <init>()>','<android.util.LogWriter: void close()>','<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>','<android.database.sqlite.SQLiteDebug$PagerStats: void <init>()>','<android.view.AbsSavedState: void <init>(android.os.Parcel)>','<android.webkit.BrowserFrame: void access$100(android.webkit.BrowserFrame,int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleased(int)>','<android.app.IWallpaperManagerCallback$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageBOO(int,boolean,java.lang.Object,java.lang.Object)>','<com.android.internal.telephony.gsm.SuppServiceNotification: java.lang.String toString()>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>','<com.android.server.DevicePolicyManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.AbsListView: long pointToRowId(int,int)>','<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>','<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>','<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile$Builder setOutboundProxy(java.lang.String)>','<com.android.vcard.VCardParserImpl_V21: java.lang.String getCurrentCharset()>','<android.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>','<android.location.ICountryListener$Stub$Proxy: void <init>(android.os.IBinder)>','<android.content.pm.IPackageManager$Stub$Proxy: int getApplicationEnabledSetting(java.lang.String,int)>','<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>','<android.graphics.Matrix$1: boolean postSkew(float,float,float,float)>','<android.widget.Editor$SelectionModifierCursorController: void resetTouchOffsets()>','<android.text.SpannableStringBuilder: float measureText(int,int,android.graphics.Paint)>','<com.android.vcard.VCardUtils: java.lang.String[] sortNameElements(int,java.lang.String,java.lang.String,java.lang.String)>','<android.app.ActivityManagerProxy: void stopAppSwitches()>','<android.database.BulkCursorDescriptor: int describeContents()>','<android.content.IContentService$Stub$Proxy: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)>','<com.android.internal.statusbar.StatusBarIconList: int size()>','<android.renderscript.RenderScript: void nScriptForEach(int,int,int,int,byte[])>','<android.opengl.GLLogWrapper: void glDrawTexfvOES(float[],int)>','<android.accounts.AccountManagerService: java.lang.String readUserDataInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)>','<android.app.SearchDialog$SearchBar: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)>','<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,int)>','<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>','<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>','<android.webkit.WebSettings: void setTextZoom(int)>','<android.animation.Keyframe: float getFraction()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,int)>','<android.text.Selection: boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean)>','<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)>','<android.webkit.BrowserFrame: int loadType()>','<android.webkit.WebViewClassic: void access$4700(android.webkit.WebViewClassic,boolean)>','<android.widget.CheckedTextView: void setPaddingRelative(int,int,int,int)>','<android.webkit.HTML5VideoView: void deleteSurfaceTexture()>','<android.view.inputmethod.InputMethodManager: void access$000(android.view.inputmethod.InputMethodManager,boolean)>','<android.widget.TextView: void setCursorVisible(boolean)>','<android.webkit.BrowserFrame$1: boolean suppressDialog()>','<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable: void <init>(android.webkit.WebCoreThreadWatchdog,android.content.Context,android.os.Handler)>','<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void writeToParcel(android.os.Parcel,int)>','<com.android.server.am.ContentProviderRecord: android.app.IActivityManager$ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>','<com.android.internal.os.BatteryStatsImpl$SamplingTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>','<android.app.Activity: android.view.View getCurrentFocus()>','<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>','<com.android.server.usb.UsbService: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>','<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[])>','<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>','<android.hardware.input.InputManager: void setPointerSpeed(android.content.Context,int)>','<android.os.StrictMode: boolean vmRegistrationLeaksEnabled()>','<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>','<android.text.Annotation: java.lang.String getValue()>','<android.location.Location: void <init>(android.location.Location)>','<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Connection dial(java.lang.String)>','<android.content.ContentService: void <init>(android.content.Context,boolean)>','<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>','<android.ddm.DdmHandleThread: void disconnected()>','<android.app.ISearchManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.wm.Session: void dragRecipientEntered(android.view.IWindow)>','<android.nfc.NfcActivityManager$NfcApplicationState: void unregister()>','<com.android.internal.telephony.Call: void setGeneric(boolean)>','<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>','<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()>','<android.view.View: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>','<android.filterpacks.base.NullFilter: void process(android.filterfw.core.FilterContext)>','<com.android.internal.widget.ActionBarView: int getNavigationMode()>','<android.location.ILocationManager$Stub: android.os.IBinder asBinder()>','<android.app.Notification$InboxStyle: android.app.Notification build()>','<android.os.storage.IMountService$Stub$Proxy: android.os.Parcelable[] getVolumeList()>','<android.app.BackStackRecord: android.app.FragmentTransaction remove(android.app.Fragment)>','<android.webkit.WebCoreThreadWatchdog: void unregisterWebView(android.webkit.WebViewClassic)>','<com.android.internal.telephony.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>','<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>','<com.android.server.am.ActivityManagerService: void access$800(java.util.ArrayList)>','<android.webkit.WebSyncManager: void run()>','<android.app.IServiceConnection$Stub$Proxy: void <init>(android.os.IBinder)>','<android.view.ViewPropertyAnimator$AnimatorEventListener: void onAnimationCancel(android.animation.Animator)>','<android.view.ViewDebug: long getViewInstanceCount()>','<android.view.ViewGroup$LayoutParams: java.lang.String debug(java.lang.String)>','<com.android.internal.telephony.cdma.EriManager: void <init>(com.android.internal.telephony.PhoneBase,android.content.Context,int)>','<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>','<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>','<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: boolean hasExtension()>','<android.app.IWallpaperManager$Stub$Proxy: android.app.WallpaperInfo getWallpaperInfo()>','<android.server.BluetoothAdapterStateMachine$PowerOff: void enter()>','<android.graphics.Matrix$1: void setScale(float,float)>','<android.webkit.WebViewClassic$1: java.lang.Object doInBackground(java.lang.Object[])>','<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)>','<android.view.KeyEvent: long getEventTimeNano()>','<com.android.internal.telephony.SMSDispatcher: void finalize()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeTextString(int)>','<android.media.RemoteControlClient: void access$1600(android.media.RemoteControlClient,java.lang.Integer,int,int)>','<android.widget.TextView$SavedState: java.lang.String toString()>','<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>','<android.webkit.WebViewClassic: void access$4400(android.webkit.WebViewClassic,int,int,int,int)>','<android.net.wifi.WifiStateMachine: void <clinit>()>','<android.content.Intent$ShortcutIconResource: int describeContents()>','<android.os.IPowerManager$Stub$Proxy: void setBacklightBrightness(int)>','<com.android.internal.os.BatteryStatsImpl$StopwatchTimer: boolean reset(com.android.internal.os.BatteryStatsImpl,boolean)>','<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.text.HtmlToSpannedConverter$Href: void <init>(java.lang.String)>','<android.view.View$TransformationInfo: android.graphics.Matrix access$1602(android.view.View$TransformationInfo,android.graphics.Matrix)>','<android.os.BatteryStats$Timer: void <init>()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeShortInteger(int)>','<android.location.ICountryDetector$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>','<android.widget.Editor: void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int)>','<android.widget.RemoteViewsAdapter$5: void run()>','<android.widget.ProgressBar$RefreshData: android.widget.ProgressBar$RefreshData obtain(int,int,boolean)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getInputDevicePriority(android.bluetooth.BluetoothDevice)>','<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>','<android.graphics.Color: int HSVToColor(float[])>','<android.view.IApplicationToken$Stub$Proxy: void windowsGone()>','<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>','<android.app.ActivityThread: void performStopActivity(android.os.IBinder,boolean)>','<android.view.WindowManagerImpl: void addView(android.view.View)>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: void <init>()>','<android.view.animation.LinearInterpolator: void <init>()>','<com.android.internal.telephony.sip.SipPhone: boolean getDataRoamingEnabled()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportClockVisible(boolean)>','<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()>','<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>','<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>','<com.android.internal.widget.LockPatternView$SavedState$1: void <init>()>','<android.view.MotionEvent$PointerProperties: boolean equals(java.lang.Object)>','<android.view.inputmethod.InputMethodManager: void clearBindingLocked()>','<android.accounts.AccountAuthenticatorActivity: void finish()>','<android.bluetooth.BluetoothTetheringDataTracker: boolean isAvailable()>','<com.android.internal.policy.impl.PhoneWindowManager$14$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$14)>','<com.android.server.wm.WindowState: android.view.IApplicationToken getAppToken()>','<android.view.View: void draw(android.graphics.Canvas)>','<android.content.SyncManager: boolean access$3400(android.content.SyncManager)>','<android.renderscript.RenderScript: void nAllocationCopyToBitmap(int,android.graphics.Bitmap)>','<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.drawable.Drawable newDrawable()>','<com.android.internal.telephony.gsm.GsmCallTracker: void log(java.lang.String)>','<android.view.Choreographer: void doCallbacks(int,long)>','<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>','<android.media.AudioManager: boolean shouldVibrate(int)>','<android.util.FastImmutableArraySet$FastIterator: void <init>(java.lang.Object[])>','<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>','<android.view.Window: android.content.Context getContext()>','<android.util.Base64$Decoder: int maxOutputSize(int)>','<android.animation.LayoutTransition: void setStartDelay(int,long)>','<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList()>','<android.widget.Switch: void setSwitchMinWidth(int)>','<android.widget.RelativeLayout$DependencyGraph$Node: android.widget.RelativeLayout$DependencyGraph$Node getNextPoolable()>','<android.location.Address: double access$1602(android.location.Address,double)>','<com.android.internal.policy.impl.PhoneWindowManager$16: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void startLaunchedLocked()>','<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>','<com.android.server.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int)>','<android.inputmethodservice.ExtractEditLayout: void finishActionMode()>','<android.media.CamcorderProfile: boolean hasProfile(int,int)>','<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>','<android.database.AbstractCursor: boolean requery()>','<android.content.ComponentName: java.lang.String toShortString()>','<android.net.wifi.NetworkUpdateResult: boolean isNewNetwork()>','<com.android.server.NotificationManagerService: void access$1300(com.android.server.NotificationManagerService)>','<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>','<android.util.Log: int e(java.lang.String,java.lang.String)>','<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)>','<android.nfc.NfcAdapter: void dispatch(android.nfc.Tag)>','<com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction: com.android.internal.telephony.DataConnectionAc$LinkPropertyChangeAction fromInt(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void <init>(com.android.internal.policy.impl.LockPatternKeyguardView,android.accounts.AccountManager,com.android.internal.policy.impl.LockPatternKeyguardView$1)>','<android.os.Parcel: void enforceInterface(java.lang.String)>','<com.android.server.location.GpsLocationProvider$3: void <init>(com.android.server.location.GpsLocationProvider)>','<android.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver)>','<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>','<android.text.TextLine: void <clinit>()>','<android.hardware.Camera$Parameters: void setGpsTimestamp(long)>','<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>','<android.graphics.Insets: int hashCode()>','<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()>','<android.net.rtp.AudioStream: boolean isBusy()>','<android.view.ViewDebug$3: void <init>(android.view.View)>','<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)>','<android.media.Ringtone: void play()>','<android.net.wifi.WifiStateMachine: void access$13900(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.view.inputmethod.ExtractedText: int describeContents()>','<android.net.wifi.WifiStateMachine$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)>','<android.os.Looper: void prepare()>','<com.android.server.AppWidgetService$Host: void <init>()>','<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>','<android.content.PeriodicSync$1: void <init>()>','<android.widget.MediaController: void setEnabled(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata build()>','<com.android.uiautomator.core.InteractionController: void setRotationLeft()>','<com.android.internal.policy.impl.AccountUnlockScreen$2: void run(android.accounts.AccountManagerFuture)>','<android.net.http.Headers: void getHeaders(android.net.http.Headers$HeaderCallback)>','<android.app.ActivityManager$MemoryInfo: void <clinit>()>','<android.app.Instrumentation: void onDestroy()>','<android.graphics.RectF: void set(float,float,float,float)>','<com.android.server.wm.WindowManagerService: boolean startViewServer(int)>','<android.net.InterfaceConfiguration: void setInterfaceUp()>','<com.android.server.input.InputManagerService$InputFilterHost: void disconnectLocked()>','<android.os.MessageQueue: android.os.Message next()>','<com.android.server.wm.StrictModeFlash: void <init>(android.view.Display,android.view.SurfaceSession)>','<com.android.server.usb.UsbSettingsManager: void deviceDetached(android.hardware.usb.UsbDevice)>','<com.android.server.AppWidgetServiceImpl: int allocateAppWidgetId(java.lang.String,int)>','<android.content.Intent: java.lang.String toInsecureStringWithClip()>','<android.server.BluetoothService: boolean setScanMode(int,int)>','<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)>','<android.view.GLES20Canvas: boolean clipRegion(android.graphics.Region)>','<android.view.inputmethod.InputMethodSubtype$1: void <init>()>','<com.android.server.pm.PackageManagerService: boolean access$3700(com.android.server.pm.PackageManagerService,java.lang.String,int)>','<com.android.internal.telephony.BaseCommands: void registerForIccRefresh(android.os.Handler,int,java.lang.Object)>','<com.android.server.input.InputFilter: void onUninstalled()>','<android.os.Bundle: void readFromParcel(android.os.Parcel)>','<com.android.server.am.ActivityManagerService: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>','<android.text.BoringLayout: int getEllipsizedWidth()>','<android.content.Intent: java.lang.String getScheme()>','<android.net.wifi.WpsResult$1: android.net.wifi.WpsResult createFromParcel(android.os.Parcel)>','<android.inputmethodservice.ExtractEditText: void viewClicked(android.view.inputmethod.InputMethodManager)>','<com.android.internal.telephony.IccFileHandler$LoadLinearFixedContext: void <init>(int,int,android.os.Message)>','<android.bluetooth.BluetoothDeviceProfileState: void access$8900(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.renderscript.RenderScript: int nProgramRasterCreate(boolean,int)>','<android.appwidget.AppWidgetProviderInfo$1: android.appwidget.AppWidgetProviderInfo[] newArray(int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteScreenOff()>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelPairingUserInput(java.lang.String)>','<com.android.vcard.VCardBuilder: void appendLineWithCharsetAndQPDetection(java.lang.String,java.util.List,java.util.List)>','<android.webkit.HTML5VideoFullScreen$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>','<android.widget.AdapterViewAnimator$ViewAndMetaData: void <init>(android.widget.AdapterViewAnimator,android.view.View,int,int,long)>','<android.widget.GridView: void setGravity(int)>','<android.os.StrictMode$8: android.view.IWindowManager create()>','<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>','<com.android.internal.app.ActionBarImpl: android.view.ViewGroup access$100(com.android.internal.app.ActionBarImpl)>','<android.inputmethodservice.ExtractEditLayout$1: void onClick(android.view.View)>','<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>','<android.widget.AbsListView$CheckForTap: void <init>(android.widget.AbsListView)>','<com.android.internal.telephony.gsm.GsmMmiCode: void <clinit>()>','<android.net.Uri$StringUri: java.lang.String getEncodedPath()>','<android.media.AudioService: java.util.ArrayList access$2100(android.media.AudioService)>','<com.android.internal.os.BatteryStatsImpl$Uid: void noteUserActivityLocked(int)>','<android.webkit.HTML5VideoView: void setVideoURI(java.lang.String,android.webkit.HTML5VideoViewProxy)>','<android.util.AndroidRuntimeException: void <init>(java.lang.String)>','<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>','<com.android.internal.os.BatteryStatsImpl: void setOnBattery(boolean,int,int)>','<com.android.server.AlarmManagerService$AlarmThread: void <init>(com.android.server.AlarmManagerService)>','<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>','<android.location.Criteria: int access$402(android.location.Criteria,int)>','<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>','<android.bluetooth.BluetoothDeviceProfileState: void access$8200(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.media.effect.effects.BackDropperEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>','<android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus: void <clinit>()>','<android.server.BluetoothBondState: void setPendingOutgoingBonding(java.lang.String)>','<android.media.MediaRouter$RouteGroup: android.media.MediaRouter$RouteInfo getRouteAt(int)>','<android.graphics.Matrix: boolean postScale(float,float)>','<com.android.internal.view.IInputMethod$Stub$Proxy: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>','<android.content.SyncManager: android.os.PowerManager$WakeLock access$800(android.content.SyncManager)>','<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>','<android.view.ViewDebug: void stopRecyclerTracing()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$5300(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,android.net.wifi.p2p.WifiP2pDevice,android.net.wifi.p2p.WifiP2pConfig)>','<android.os.PatternMatcher$1: android.os.PatternMatcher[] newArray(int)>','<android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState: void enter()>','<android.os.WorkSource: void clear()>','<com.android.internal.policy.impl.SimUnlockScreen: android.app.ProgressDialog access$100(com.android.internal.policy.impl.SimUnlockScreen)>','<com.android.internal.telephony.PhoneProxy: void setRadioPower(boolean)>','<com.android.internal.telephony.sip.SipCommandInterface: void setCdmaBroadcastConfig(int[],android.os.Message)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>','<android.os.storage.IObbActionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<android.net.sip.SimpleSessionDescription$Media: void setFormat(java.lang.String,java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendEnvelopeWithStatus(java.lang.String,android.os.Message)>','<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: void <init>(android.net.wifi.WifiWatchdogStateMachine)>','<com.android.internal.widget.ActionBarView$SavedState$1: com.android.internal.widget.ActionBarView$SavedState[] newArray(int)>','<android.net.wifi.WifiNative: boolean setManufacturer(java.lang.String)>','<com.android.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>','<android.hardware.input.InputManager: boolean[] deviceHasKeys(int[])>','<android.text.BoringLayout: int getLineDescent(int)>','<android.net.LocalSocketImpl: java.io.FileDescriptor access$000(android.net.LocalSocketImpl)>','<android.webkit.WebViewClassic$InvokeListBox$MyArrayListAdapter: boolean isEnabled(int)>','<android.preference.PreferenceScreen: void onClick()>','<com.android.internal.telephony.RIL: void conference(android.os.Message)>','<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>','<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.bluetooth.IBluetooth$Stub$Proxy: void removeServiceRecord(int)>','<android.webkit.ZoomManager: android.webkit.ZoomManager$FocusMovementQueue access$200(android.webkit.ZoomManager)>','<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>','<android.widget.RemoteViewsAdapter: android.content.Context access$1100(android.widget.RemoteViewsAdapter)>','<android.os.FileUtils: long checksumCrc32(java.io.File)>','<android.filterfw.core.StreamPort: void pushFrame(android.filterfw.core.Frame)>','<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>','<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.util.FileRotator$1: boolean shouldWrite()>','<android.app.FragmentState$1: android.app.FragmentState[] newArray(int)>','<android.widget.AbsListView$3: void <init>(android.widget.AbsListView,android.view.inputmethod.InputConnection,boolean)>','<android.location.Address: boolean access$1302(android.location.Address,boolean)>','<android.inputmethodservice.ExtractEditLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.os.storage.IMountServiceListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)>','<android.renderscript.RenderScript: void nAllocationData2D(int,int,int,int,int,int,int,float[],int)>','<com.android.server.AppWidgetServiceImpl: void deleteHost(int)>','<android.media.AudioRoutesInfo: int describeContents()>','<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>','<com.android.internal.telephony.gsm.SmsCbHeader: java.lang.String toString()>','<com.android.internal.os.PowerProfile: void <clinit>()>','<android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>','<android.app.Activity: android.view.MenuInflater getMenuInflater()>','<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>','<com.android.server.WifiService: android.app.PendingIntent access$1600(com.android.server.WifiService)>','<android.net.sip.SipAudioCall: void setAudioGroup(android.net.rtp.AudioGroup)>','<android.server.BluetoothA2dpService: android.os.PowerManager$WakeLock access$1100(android.server.BluetoothA2dpService)>','<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>','<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)>','<com.android.internal.telephony.ITelephony$Stub$Proxy: void cancelMissedCallsNotification()>','<android.widget.ListPopupWindow$PopupScrollListener: void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1)>','<android.os.Trace: long access$002(long)>','<android.preference.Preference: int getTitleRes()>','<android.bluetooth.BluetoothA2dp: java.lang.String stateToString(int)>','<com.android.internal.telephony.cdma.CDMAPhone: void acceptCall()>','<android.location.ILocationListener$Stub: void <init>()>','<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>','<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>','<android.accounts.AccountManagerService$3: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,boolean,boolean,java.lang.String,java.lang.String)>','<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer mutableCopy()>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendBroadcast(boolean,boolean)>','<android.content.Intent$1: android.content.Intent[] newArray(int)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getCodePath()>','<com.android.internal.widget.ActionBarView: com.android.internal.view.menu.ActionMenuItem access$200(com.android.internal.widget.ActionBarView)>','<com.android.server.sip.SipSessionListenerProxy: void onCalling(android.net.sip.ISipSession)>','<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>','<android.net.EthernetDataTracker: boolean isDefaultRouteSet()>','<android.renderscript.RenderScript: void nScriptSetTimeZone(int,byte[])>','<com.android.internal.content.PackageHelper: java.lang.String createSdDir(int,java.lang.String,java.lang.String,int,boolean)>','<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone$State getState()>','<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>','<android.hardware.usb.UsbDevice: int getDeviceProtocol()>','<com.android.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()>','<android.provider.MediaStore$Audio$Genres: void <clinit>()>','<android.view.inputmethod.ExtractedText$1: android.view.inputmethod.ExtractedText[] newArray(int)>','<android.animation.LayoutTransition: boolean isChangingLayout()>','<android.widget.Editor$HandleView$1: void <init>(android.widget.Editor$HandleView)>','<android.content.res.Configuration$1: android.content.res.Configuration createFromParcel(android.os.Parcel)>','<com.android.internal.telephony.cat.CommandParams: java.lang.String toString()>','<android.app.PendingIntent: int describeContents()>','<android.animation.KeyframeSet: java.lang.String toString()>','<android.graphics.PointF: void negate()>','<android.widget.TextView: int computeVerticalScrollRange()>','<android.widget.Editor: boolean access$900(android.widget.Editor)>','<android.app.ApplicationErrorReport: void <clinit>()>','<com.android.internal.os.IResultReceiver$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>','<com.android.server.sip.SipSessionGroup: java.lang.Throwable access$1600(com.android.server.sip.SipSessionGroup,java.lang.Throwable)>','<android.webkit.ZoomControlExternal$2: void <init>(android.webkit.ZoomControlExternal)>','<android.content.res.StringBlock$StyleIDs: int access$802(android.content.res.StringBlock$StyleIDs,int)>','<android.database.sqlite.SQLiteDatabase: boolean isOpen()>','<com.android.vcard.VCardProperty: byte[] getByteValue()>','<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>','<android.net.NetworkUtils: void <init>()>','<android.graphics.Xfermode: void finalize()>','<android.webkit.WebViewDatabaseClassic: void clearUsernamePassword()>','<android.net.NetworkIdentity: int getSubType()>','<com.android.internal.os.BatteryStatsImpl$Uid$Proc: long getSystemTime(int)>','<android.view.ViewGroup: android.view.View findViewTraversal(int)>','<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>','<android.app.PendingIntent: void send()>','<android.location.Address$1: android.location.Address[] newArray(int)>','<com.android.internal.os.PkgUsageStats: void <clinit>()>','<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>','<com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient asInterface(android.os.IBinder)>','<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.os.IBinder asBinder()>','<android.opengl.GLLogWrapper: void glRotatef(float,float,float,float)>','<android.view.textservice.SuggestionsInfo: void <clinit>()>','<android.net.NetworkInfo: java.lang.String toString()>','<android.view.HardwareRenderer$Gl20Renderer: android.view.HardwareLayer createHardwareLayer(boolean)>','<android.content.Intent$ShortcutIconResource$1: android.content.Intent$ShortcutIconResource[] newArray(int)>','<android.net.NetworkStatsHistory: void recordData(long,long,android.net.NetworkStats$Entry)>','<android.app.ActionBar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.media.TimedText: java.lang.String getText()>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean releaseHeldOrUDUB()>','<android.net.Uri$1: void <init>()>','<android.net.wifi.WifiStateMachine: boolean syncPingSupplicant(com.android.internal.util.AsyncChannel)>','<com.android.internal.telephony.OperatorInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.OperatorInfo$State)>','<android.filterpacks.videosrc.MediaSource$1: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>','<android.net.TrafficStats: long getTxPackets(java.lang.String)>','<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>','<com.android.internal.policy.impl.PhoneWindowManager: void showBootMessage(java.lang.CharSequence,boolean)>','<android.widget.TextView: int getLeftPaddingOffset()>','<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()>','<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>','<com.android.internal.database.SortCursor: boolean requery()>','<android.test.mock.MockContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>','<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.os.Parcel: void writeDouble(double)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: java.util.List getInputMethodList()>','<com.android.vcard.VCardParserImpl_V40: boolean parseItem()>','<android.widget.Editor$PinnedPopupWindow: void measureContent()>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>','<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)>','<android.filterpacks.videosrc.MediaSource: boolean access$602(android.filterpacks.videosrc.MediaSource,boolean)>','<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()>','<android.os.LatencyTimer: void <init>(int,int)>','<android.view.VelocityTracker: void computeCurrentVelocity(int)>','<android.widget.Toast: void setMargin(float,float)>','<android.os.storage.StorageManager$ListenerDelegate$1: void handleMessage(android.os.Message)>','<android.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>','<com.android.internal.widget.multiwaveview.GlowPadView$3: void onAnimationUpdate(android.animation.ValueAnimator)>','<com.android.server.pm.PackageManagerService: boolean isProtectedBroadcast(java.lang.String)>','<android.app.backup.RestoreSession: void endRestoreSession()>','<android.location.ILocationManager$Stub$Proxy: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>','<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>','<android.app.Service: android.app.Application getApplication()>','<com.android.internal.widget.ActionBarView: void setSplitActionBar(boolean)>','<com.android.internal.view.menu.ActionMenuPresenter$SavedState: void <clinit>()>','<android.widget.ProgressBar$RefreshData$1: android.widget.ProgressBar$RefreshData newInstance()>','<android.os.Debug: void resetGlobalExternalFreedSize()>','<com.android.internal.telephony.sip.SipPhone$SipCall: void sendDtmf(char)>','<android.net.DhcpStateMachine: android.content.BroadcastReceiver access$200(android.net.DhcpStateMachine)>','<android.view.ActionProvider: void refreshVisibility()>','<com.android.internal.view.IInputContext$Stub$Proxy: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>','<android.app.ActivityGroup: void onDestroy()>','<com.android.server.LocationManagerService$Receiver: void <init>(com.android.server.LocationManagerService,android.location.ILocationListener)>','<android.net.wifi.WifiStateMachine: int syncAddOrUpdateNetwork(com.android.internal.util.AsyncChannel,android.net.wifi.WifiConfiguration)>','<com.android.internal.telephony.IccCard$2: void handleMessage(android.os.Message)>','<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)>','<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()>','<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>','<com.android.server.am.BatteryStatsService: void noteStartSensor(int,int)>','<com.android.internal.policy.impl.LockPatternKeyguardView$3: void keyguardDone(boolean)>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$ClockReceiver access$300(com.android.server.AlarmManagerService)>','<android.app.Fragment: android.app.FragmentManager getFragmentManager()>','<com.android.server.wm.WindowManagerService: int computeForcedAppOrientationLocked()>','<android.accounts.AccountManager$3: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback,java.lang.String,java.lang.String[])>','<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>','<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>','<android.opengl.GLLogWrapper: void glDrawTexfOES(float,float,float,float,float)>','<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>','<android.view.WindowManager$BadTokenException: void <init>()>','<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.server.am.ActivityManagerService: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>','<android.graphics.Path: void rMoveTo(float,float)>','<android.widget.RelativeLayout$DependencyGraph: android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph)>','<android.net.Uri$StringUri: java.lang.String getEncodedFragment()>','<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>','<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>','<android.app.DownloadManager$Request: void <init>(java.lang.String)>','<com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>','<android.view.View$13: void setValue(java.lang.Object,float)>','<android.server.BluetoothAdapterStateMachine: void access$4800(android.server.BluetoothAdapterStateMachine,android.os.Message)>','<android.webkit.WebViewClassic$PastePopupWindow: void onClick(android.view.View)>','<android.view.ViewRootImpl: android.view.SurfaceHolder access$500(android.view.ViewRootImpl)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String formatByPattern(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.util.List)>','<android.provider.ContactsContract$CommonDataKinds$Phone: int getTypeLabelResource(int)>','<android.media.IRingtonePlayer$Stub$Proxy: void playAsync(android.net.Uri,boolean,int)>','<android.view.IWindowManager$Stub$Proxy: void pauseKeyDispatching(android.os.IBinder)>','<android.content.res.AssetManager$AssetInputStream: void reset()>','<android.content.pm.PermissionGroupInfo: void <clinit>()>','<android.net.LinkProperties: boolean isIdenticalHttpProxy(android.net.LinkProperties)>','<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>','<android.webkit.WebViewCore: void access$1900(android.webkit.WebViewCore,java.lang.String,java.util.Map)>','<com.android.server.WifiService: boolean saveConfiguration()>','<android.os.PowerManager$WakeLock$1: void run()>','<android.content.BroadcastReceiver$PendingResult$1: void <init>(android.content.BroadcastReceiver$PendingResult,android.app.IActivityManager)>','<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.net.wifi.WifiConfiguration$IpAssignment: void <clinit>()>','<android.widget.AbsListView: int reconcileSelectedPosition()>','<com.android.internal.telephony.DataConnectionTracker: java.lang.String getReryConfig(boolean)>','<android.preference.PreferenceGroupAdapter: long getItemId(int)>','<com.android.internal.telephony.sip.SipPhone: void switchHoldingAndActive()>','<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>','<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>','<android.net.IConnectivityManager$Stub$Proxy: void requestNetworkTransitionWakelock(java.lang.String)>','<android.webkit.HTML5VideoInline: void pauseAndDispatch(android.webkit.HTML5VideoViewProxy)>','<android.telephony.TelephonyManager: boolean isNetworkRoaming()>','<com.android.internal.policy.impl.SimPukUnlockScreen$1$1: void <init>(com.android.internal.policy.impl.SimPukUnlockScreen$1,boolean)>','<android.content.pm.ProviderInfo$1: android.content.pm.ProviderInfo createFromParcel(android.os.Parcel)>','<android.webkit.CookieManagerClassic: android.webkit.CookieManagerClassic getInstance()>','<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>','<android.location.GpsSatellite: boolean hasAlmanac()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc()>','<android.filterfw.core.StreamPort: void <init>(android.filterfw.core.Filter,java.lang.String)>','<com.android.i18n.phonenumbers.NumberParseException: java.lang.String toString()>','<android.filterfw.io.PatternScanner: void <init>(java.lang.String)>','<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextClientThread(long,java.lang.String,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<com.android.server.NotificationManagerService: void enqueueNotification(java.lang.String,int,android.app.Notification,int[])>','<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.server.BatteryService: void access$000(com.android.server.BatteryService)>','<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>','<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>','<android.bluetooth.BluetoothSocket$SocketState: android.bluetooth.BluetoothSocket$SocketState[] values()>','<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>','<com.android.internal.telephony.cdma.SmsMessage: void parseSms()>','<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine$OnlineState access$2900(android.net.wifi.WifiWatchdogStateMachine)>','<android.net.http.Headers: java.lang.String getProxyAuthenticate()>','<com.android.internal.telephony.CallManager: void unregisterForUnknownConnection(android.os.Handler)>','<android.view.WindowOrientationListener: void enable()>','<android.telephony.TelephonyManager: int getCallState()>','<com.android.internal.widget.LockPatternUtils: void deleteGallery()>','<android.widget.FrameLayout: void onMeasure(int,int)>','<android.app.RemoteServiceException: void <init>(java.lang.String)>','<android.content.res.ColorStateList$1: void <init>()>','<com.android.server.AppWidgetService$ServiceConnectionProxy: void onServiceDisconnected(android.content.ComponentName)>','<android.database.CursorWindow: boolean putLong(long,int,int)>','<android.location.Address: void setFeatureName(java.lang.String)>','<com.android.internal.telephony.cat.TextColor: com.android.internal.telephony.cat.TextColor fromInt(int)>','<android.content.SyncQueue: void remove(android.content.SyncOperation)>','<com.android.internal.policy.impl.KeyguardViewManager$2: void run()>','<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>','<android.hardware.input.IInputManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.os.Handler: void <init>(android.os.Looper)>','<android.content.pm.PackageInfo: void <init>()>','<android.net.wifi.p2p.WifiP2pConfig: void <init>()>','<com.android.internal.policy.impl.PasswordUnlockScreen$4: void <init>(com.android.internal.policy.impl.PasswordUnlockScreen,android.view.inputmethod.InputMethodManager)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String getLocalIp()>','<android.widget.AbsListView: void draw(android.graphics.Canvas)>','<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>','<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)>','<android.view.ViewDebug: void dispatchCommand(android.view.View,java.lang.String,java.lang.String,java.io.OutputStream)>','<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)>','<android.hardware.usb.UsbInterface: java.lang.String toString()>','<com.android.server.WallpaperManagerService$MyPackageMonitor: void <init>(com.android.server.WallpaperManagerService)>','<android.filterfw.core.InputPort: void open()>','<com.android.internal.util.AsyncChannel: void disconnect()>','<com.android.internal.net.LegacyVpnInfo$1: void <init>()>','<com.android.internal.telephony.DataConnectionTracker: java.lang.String apnIdToType(int)>','<android.telephony.CellLocation: void <init>()>','<com.android.server.ConnectivityService: int access$600(com.android.server.ConnectivityService)>','<android.service.wallpaper.IWallpaperEngine$Stub: void <init>()>','<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>','<android.net.sip.ISipSessionListener$Stub: android.os.IBinder asBinder()>','<android.widget.TextView: void setIncludeFontPadding(boolean)>','<com.android.internal.telephony.cat.ResultException: void <init>(com.android.internal.telephony.cat.ResultCode,java.lang.String)>','<com.android.server.AppWidgetService: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>','<android.util.TypedValue: java.lang.String toString()>','<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>','<android.content.Intent: short getShortExtra(java.lang.String,short)>','<android.widget.CursorAdapter: java.lang.Object getItem(int)>','<com.android.i18n.phonenumbers.ShortNumberUtil: boolean connectsToEmergencyNumber(java.lang.String,java.lang.String)>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Phone$DataState getDataConnectionState(java.lang.String)>','<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.webkit.WebViewClassic: void clearView()>','<com.android.internal.telephony.cat.CommandParams: boolean setIcon(android.graphics.Bitmap)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean disable(boolean)>','<com.android.server.LocationManagerService$LocationWorkerHandler: void <init>(com.android.server.LocationManagerService,com.android.server.LocationManagerService$1)>','<com.android.vcard.VCardParserImpl_V30: java.lang.String maybeUnescapeText(java.lang.String)>','<com.android.internal.telephony.sip.SipConnectionBase: long getCreateTime()>','<com.android.server.ConnectivityService: boolean access$3002(com.android.server.ConnectivityService,boolean)>','<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)>','<android.widget.FrameLayout: void jumpDrawablesToCurrentState()>','<android.text.LoginFilter$UsernameFilterGMail: void <init>(boolean)>','<android.app.ContextImpl: void <init>(android.app.ContextImpl)>','<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean resumeSink(android.bluetooth.BluetoothDevice)>','<android.webkit.WebViewClassic: android.webkit.HTML5VideoViewProxy access$4900(android.webkit.WebViewClassic)>','<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)>','<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>','<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>','<android.webkit.WebViewClassic$WebViewInputConnection: void setTextAndKeepSelection(java.lang.CharSequence)>','<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>','<android.net.http.Headers: void setContentLength(long)>','<android.accounts.Account: java.lang.String toString()>','<android.widget.AbsListView: void hideSelector()>','<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>','<com.android.internal.policy.impl.KeyguardViewManager: void <init>(android.content.Context,android.view.ViewManager,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardViewProperties,com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.view.GLES20Canvas: int getDisplayList(int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.String packageForFilter(android.content.IntentFilter)>','<android.animation.ValueAnimator: boolean animationFrame(long)>','<android.view.textservice.TextInfo: java.lang.String getText()>','<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>','<com.android.server.input.InputManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.internal.widget.multiwaveview.GlowPadView: int getDirectionDescriptionsResourceId()>','<com.android.internal.telephony.WspTypeDecoder: boolean decodeValueLength(int)>','<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)>','<android.text.SpannableStringInternal: void <clinit>()>','<android.app.ActivityThread$Idler: boolean queueIdle()>','<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void <init>(com.android.server.usb.UsbDeviceManager)>','<android.view.accessibility.AccessibilityEvent: void setEventType(int)>','<com.android.internal.util.FileRotator: void dumpAll(java.io.OutputStream)>','<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>','<com.android.internal.app.ActionBarImpl$1: void <init>(com.android.internal.app.ActionBarImpl)>','<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelock(int,int,java.lang.String,int)>','<com.android.internal.telephony.IccCard: void unregisterForAbsent(android.os.Handler)>','<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>','<android.net.wifi.WifiStateMachine: void handlePostDhcpSetup()>','<com.android.server.PowerManagerService$6: void <init>(com.android.server.PowerManagerService)>','<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,java.lang.String[])>','<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain(android.view.accessibility.AccessibilityRecord)>','<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>','<android.content.pm.VerifierInfo: int describeContents()>','<android.webkit.BrowserFrame$ConfigCallback: void onConfigurationChanged(android.content.res.Configuration)>','<android.util.Xml$Encoding: android.util.Xml$Encoding valueOf(java.lang.String)>','<android.net.TrafficStats: long getMobileTxPackets()>','<android.util.LocalLog: void log(java.lang.String)>','<com.android.internal.telephony.Call: boolean isGeneric()>','<android.app.Instrumentation$1ContextMenuRunnable: void run()>','<android.text.LoginFilter$PasswordFilterGMail: void <init>(boolean)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,double)>','<android.database.sqlite.SQLiteCursor: boolean requery()>','<android.content.pm.ContainerEncryptionParams: int describeContents()>','<android.filterfw.core.VertexFrame: boolean hasNativeAllocation()>','<android.text.TextUtils$Reverser: void <init>(java.lang.CharSequence,int,int)>','<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>','<android.net.LinkCapabilities: java.util.Collection values()>','<android.widget.AdapterViewAnimator: void cancelHandleClick()>','<com.android.internal.policy.impl.GlobalActions: android.app.AlertDialog access$1600(com.android.internal.policy.impl.GlobalActions)>','<android.os.IPowerManager$Stub: void <init>()>','<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.os.HandlerCaller: void removeMessages(int,java.lang.Object)>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void handleHardKeyboardStatusChange(boolean,boolean)>','<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>','<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>','<android.webkit.WebSettingsClassic: void setShrinksStandaloneImagesToFit(boolean)>','<android.content.Intent: java.util.Set getCategories()>','<android.widget.AbsListView$MultiChoiceModeWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>','<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap getAllIndexes(boolean)>','<com.android.uiautomator.core.UiDevice$1: void <init>(com.android.uiautomator.core.UiDevice)>','<android.graphics.Path: boolean isRect(android.graphics.RectF)>','<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>','<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>','<android.net.http.Connection: void <clinit>()>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void <init>(android.os.IBinder)>','<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>','<android.location.Location$1: android.location.Location[] newArray(int)>','<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>','<android.os.RemoteCallback$DeliverResult: void <init>(android.os.RemoteCallback,android.os.Bundle)>','<android.server.BluetoothService: java.lang.String getName()>','<android.text.method.ArrowKeyMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>','<android.webkit.WebSettingsClassic: boolean getSaveFormData()>','<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(android.os.Message)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidTagPersistBytes(long)>','<android.view.VelocityTracker$Estimator: float estimateY(float)>','<com.android.internal.view.BaseIWindow: void closeSystemDialogs(java.lang.String)>','<android.preference.Preference: void setTitle(java.lang.CharSequence)>','<android.util.MathUtils: float acos(float)>','<com.android.server.wm.WindowManagerService: int findDesiredInputMethodWindowIndexLocked(boolean)>','<com.android.internal.view.BaseSurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>','<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>','<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>','<com.android.internal.widget.ActionBarView: void access$1300(com.android.internal.widget.ActionBarView)>','<android.content.CursorEntityIterator: void remove()>','<com.android.internal.widget.LockPatternUtils: java.lang.String getNextAlarm()>','<android.net.sip.ISipSession$Stub$Proxy: void answerCall(java.lang.String,int)>','<com.android.internal.telephony.cat.BIPClientParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.TextMessage,boolean)>','<com.android.internal.telephony.CallManager: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>','<com.android.server.NotificationManagerService: void setNotificationsEnabledForPackage(java.lang.String,boolean)>','<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)>','<com.android.server.StatusBarManagerService: void cancelPreloadRecentApps()>','<android.content.SyncManager$4: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.SearchView$9: void <init>(android.widget.SearchView)>','<com.android.server.WallpaperManagerService$WallpaperConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.widget.Editor: boolean access$2800(android.widget.Editor,float,float)>','<android.webkit.WebViewCore: void contentDraw()>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)>','<android.widget.FastScroller: void draw(android.graphics.Canvas)>','<com.android.internal.telephony.cdma.CdmaConnection: void proceedAfterWildChar(java.lang.String)>','<android.webkit.WebView: java.lang.String getTitle()>','<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>','<com.android.internal.statusbar.StatusBarNotification$1: com.android.internal.statusbar.StatusBarNotification createFromParcel(android.os.Parcel)>','<android.accounts.AccountManager$Future2Task$1: void <init>(android.accounts.AccountManager$Future2Task)>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>','<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point center()>','<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)>','<android.view.View$ScrollabilityCache: void <clinit>()>','<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>','<android.content.pm.ApplicationInfo: void <init>(android.os.Parcel,android.content.pm.ApplicationInfo$1)>','<com.android.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.android.internal.view.menu.MenuItemImpl)>','<android.net.http.RequestQueue$SyncFeeder: void <init>()>','<android.view.inputmethod.InputMethodInfo: int describeContents()>','<android.hardware.SerialPort: void close()>','<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()>','<android.bluetooth.BluetoothSocket$SdpHelper: void cancel()>','<android.security.KeyChain: android.security.KeyChain$KeyChainConnection bind(android.content.Context)>','<android.net.LinkCapabilities: java.lang.String get(int)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>','<android.accounts.IAccountAuthenticatorResponse$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.ServiceStateTracker: void registerForRoamingOn(android.os.Handler,int,java.lang.Object)>','<android.view.GLES20Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas$EdgeType)>','<com.android.internal.telephony.gsm.GsmDataConnection: boolean isDnsOk(java.lang.String[])>','<android.database.sqlite.SQLiteSession: void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo)>','<android.widget.AbsListView$MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView$MultiChoiceModeListener)>','<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector,boolean)>','<android.view.View$13: java.lang.Float get(android.view.View)>','<android.widget.Toast: android.view.View getView()>','<android.os.RemoteCallback: boolean equals(java.lang.Object)>','<com.android.internal.view.menu.ActionMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>','<com.android.server.AppWidgetService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.hardware.input.KeyboardLayout: java.lang.String getLabel()>','<android.telephony.SmsCbCmasInfo$1: void <init>()>','<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.widget.CompoundButton: void toggle()>','<com.android.internal.telephony.test.ModelInterpreter: void triggerHangupBackground()>','<android.view.textservice.TextInfo$1: android.view.textservice.TextInfo createFromParcel(android.os.Parcel)>','<android.text.PackedIntVector: int getValue(int,int)>','<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>','<android.view.SurfaceView$MyWindow: void dispatchAppVisibility(boolean)>','<com.android.server.am.ActivityManagerService: int getProcessLimit()>','<android.graphics.drawable.AnimationDrawable$AnimationState: int[] access$002(android.graphics.drawable.AnimationDrawable$AnimationState,int[])>','<com.android.server.ConnectivityService: void access$1200(com.android.server.ConnectivityService,int,boolean)>','<com.android.server.pm.PackageManagerService$7: void run()>','<com.android.internal.telephony.sip.SipPhone$SipConnection: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$SipCall,android.net.sip.SipProfile)>','<com.android.internal.telephony.IccCard: java.lang.String getServiceProviderName()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean hasNavigationBar()>','<android.view.VelocityTracker: void <init>(java.lang.String,android.view.VelocityTracker$1)>','<android.telephony.SmsCbEtwsInfo$1: android.telephony.SmsCbEtwsInfo[] newArray(int)>','<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>','<com.android.server.PowerManagerService$2: void onChange(boolean)>','<com.android.internal.os.BatteryStatsImpl$Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl$Timer,long)>','<com.android.internal.telephony.WapPushOverSms: int dispatchWapPdu(byte[])>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void interfaceLinkStateChanged(java.lang.String,boolean)>','<com.android.server.am.ActivityStack: int indexOfTokenLocked(android.os.IBinder)>','<android.net.LocalSocket: void setReceiveBufferSize(int)>','<android.widget.SearchView$6: void onClick(android.view.View)>','<com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int)>','<android.widget.AdapterViewAnimator$SavedState$1: void <init>()>','<com.android.server.LocationManagerService$LpCapabilityComparator: void <init>(com.android.server.LocationManagerService,com.android.server.LocationManagerService$1)>','<com.android.server.pm.Settings: void dumpReadMessagesLPr(java.io.PrintWriter,com.android.server.pm.PackageManagerService$DumpState)>','<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>','<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>','<android.view.View: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)>','<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>','<android.webkit.DeviceOrientationService: android.webkit.DeviceMotionAndOrientationManager access$100(android.webkit.DeviceOrientationService)>','<android.telephony.PhoneStateListener$1: void <init>(android.telephony.PhoneStateListener)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable$1: void <init>(android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable)>','<android.view.View: int getWindowVisibility()>','<android.app.AlertDialog: void <init>(android.content.Context,int)>','<com.android.server.sip.SipSessionListenerProxy$11: void <init>(com.android.server.sip.SipSessionListenerProxy,android.net.sip.ISipSession,int)>','<com.android.internal.policy.impl.ShortcutManager: void onChange(boolean)>','<com.android.server.Watchdog$RebootReceiver: void <init>(com.android.server.Watchdog)>','<android.graphics.Matrix: void setRotate(float,float,float)>','<android.net.LinkProperties: java.util.Collection getAddresses()>','<android.animation.LayoutTransition$4: void onAnimationStart(android.animation.Animator)>','<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>','<android.telephony.gsm.GsmCellLocation: int getPsc()>','<android.inputmethodservice.Keyboard$Key: int[] getCurrentDrawableState()>','<com.android.internal.policy.impl.LockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.widget.LockPatternUtils,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback)>','<android.view.View: void dispatchGetDisplayList()>','<android.widget.OverScroller$SplineOverScroller: int access$500(android.widget.OverScroller$SplineOverScroller)>','<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>','<android.os.Bundle: char getChar(java.lang.String)>','<android.server.BluetoothService: android.server.BluetoothAdapterProperties getAdapterProperties()>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>','<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>','<com.android.internal.telephony.sip.SipCommandInterface: void sendTerminalResponse(java.lang.String,android.os.Message)>','<com.android.vcard.VCardParserImpl_V21: void handleAnyParam(com.android.vcard.VCardProperty,java.lang.String,java.lang.String)>','<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>','<android.location.ILocationManager$Stub$Proxy: void removeProximityAlert(android.app.PendingIntent)>','<com.android.internal.telephony.sip.SipPhone: void startDtmf(char)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: boolean switchToLastInputMethod(android.os.IBinder)>','<com.android.server.net.NetworkStatsService$5: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.vcard.VCardConfig: boolean usesAndroidSpecificProperty(int)>','<com.android.internal.policy.impl.LockPatternKeyguardView: boolean access$602(com.android.internal.policy.impl.LockPatternKeyguardView,boolean)>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationRepeat(android.animation.Animator)>','<android.widget.AbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.widget.TextView: void setEms(int)>','<com.android.internal.telephony.gsm.SimTlv: int getTag()>','<android.widget.AbsListView$RecycleBin: void clear()>','<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.uiautomator.core.UiDevice: boolean swipe(int,int,int,int,int)>','<android.webkit.WebView: boolean access$801(android.webkit.WebView,android.view.MotionEvent)>','<android.net.DummyDataStateTracker: boolean isAvailable()>','<android.media.IRingtonePlayer$Stub$Proxy: void stop(android.os.IBinder)>','<com.android.internal.telephony.PhoneBase: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>','<com.android.server.PowerManagerService: void setAutoBrightnessAdjustment(float)>','<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createLockScreen()>','<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>','<android.util.Slog: int i(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)>','<android.database.sqlite.SQLiteConnection: java.lang.String toString()>','<android.database.sqlite.SQLiteConnection$OperationLog: boolean endOperationDeferLog(int)>','<android.widget.ListView: void setCacheColorHint(int)>','<android.view.Choreographer$1: void <init>()>','<com.android.internal.telephony.RIL: void reportSmsMemoryStatus(boolean,android.os.Message)>','<com.android.internal.view.menu.MenuItemImpl: int getOrdering()>','<com.android.internal.widget.PointerLocationView: void onInputDeviceAdded(int)>','<android.webkit.WebViewInputDispatcher: void access$400(android.webkit.WebViewInputDispatcher)>','<android.content.res.AssetManager: void releaseTheme(int)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$5100(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>','<android.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()>','<android.view.View: boolean access$2002(android.view.View,boolean)>','<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>','<android.app.ActivityThread: android.content.res.Configuration applyCompatConfiguration()>','<com.android.server.wm.WindowManagerService: boolean updateWallpaperOffsetLocked(com.android.server.wm.WindowState,int,int,boolean)>','<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: void onClick(android.view.View)>','<com.android.internal.policy.impl.PhoneWindowManager$8: void run()>','<android.app.Instrumentation: void startProfiling()>','<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float)>','<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>','<android.webkit.WebViewClassic$WebViewInputConnection: void initEditorInfo(android.webkit.WebViewCore$TextFieldInitData)>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.filterfw.core.Frame: android.graphics.Bitmap convertBitmapToRGBA(android.graphics.Bitmap)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>','<com.android.internal.view.menu.MenuBuilder: void onItemVisibleChanged(com.android.internal.view.menu.MenuItemImpl)>','<android.location.ILocationManager$Stub: android.location.ILocationManager asInterface(android.os.IBinder)>','<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>','<android.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>','<android.os.IRemoteCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.widget.ProgressBar: void setSecondaryProgress(int)>','<com.android.server.InputMethodManagerService$InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: java.lang.CharSequence getTelephonyPlmn()>','<android.app.ContextImpl: java.io.File getFilesDir()>','<android.net.wifi.WifiWatchdogStateMachine$2: void <init>(android.net.wifi.WifiWatchdogStateMachine,android.os.Handler)>','<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: boolean dispatchTouchEvent(android.view.MotionEvent)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean checkFreeStorage(com.android.internal.app.IMediaContainerService)>','<com.android.internal.widget.DigitalClock$AmPm: void setShowAmPm(boolean)>','<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>','<android.text.Layout$Ellipsizer: java.lang.String toString()>','<android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>','<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getEsn()>','<android.bluetooth.BluetoothSocket$SdpHelper: void <init>(android.bluetooth.BluetoothDevice,android.os.ParcelUuid)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean setTrust(java.lang.String,boolean)>','<android.app.FragmentState: android.app.Fragment instantiate(android.app.Activity)>','<com.android.internal.telephony.CallManager: java.util.List getBgCallConnections()>','<android.webkit.WebViewClassic: boolean requestFocus(int,android.graphics.Rect)>','<android.app.Instrumentation: boolean isProfiling()>','<android.webkit.WebViewClassic: void invalidate()>','<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pGroup$1: android.net.wifi.p2p.WifiP2pGroup[] newArray(int)>','<android.net.http.HttpsConnection: void restartConnection(boolean)>','<com.android.internal.telephony.gsm.SmsMessage: boolean isMWISetMessage()>','<android.filterfw.core.MutableFrameFormat: void <init>(int,int)>','<android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale: boolean defaultIsRtl()>','<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)>','<android.net.DhcpInfo: void <init>(android.net.DhcpInfo)>','<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>','<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>','<android.widget.ListPopupWindow: void setWidth(int)>','<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>','<android.security.KeyStore: byte[] sign(java.lang.String,byte[])>','<android.os.BatteryStats$Counter: void <init>()>','<com.android.internal.view.InputConnectionWrapper: boolean clearMetaKeyStates(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void getLastDataCallFailCause(android.os.Message)>','<android.net.sip.SipSession$Listener: void onCallBusy(android.net.sip.SipSession)>','<com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>','<android.os.PatternMatcher: java.lang.String toString()>','<android.widget.AdapterView: void addView(android.view.View)>','<com.android.internal.policy.impl.PhoneWindowManager$6: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String getDestinationString(java.lang.String)>','<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CallTracker getCallTracker()>','<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>','<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)>','<android.widget.RemoteViewsAdapter: boolean isEmpty()>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)>','<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>','<com.android.vcard.exception.VCardVersionException: void <init>(java.lang.String)>','<com.android.internal.widget.multiwaveview.GlowPadView$4: void <init>(com.android.internal.widget.multiwaveview.GlowPadView)>','<com.android.internal.app.ActionBarImpl: void showForSystem()>','<com.android.internal.telephony.cat.LaunchBrowserMode: void <clinit>()>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$Switching access$3300(android.server.BluetoothAdapterStateMachine)>','<android.view.IWindowSession$Stub$Proxy: android.os.IBinder asBinder()>','<android.app.ActivityManager$RecentTaskInfo: void <init>()>','<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>','<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>','<android.renderscript.Element: int getVectorSize()>','<android.net.wifi.p2p.IWifiP2pManager$Stub: void <init>()>','<android.widget.AbsListView: void keyPressed()>','<android.graphics.PointF$1: void <init>()>','<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>','<com.android.internal.telephony.IccCard$State: boolean iccCardExist()>','<android.app.Activity: void performUserLeaving()>','<android.widget.AbsSpinner: int getChildHeight(android.view.View)>','<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>','<android.widget.Editor$InsertionHandleView: void updatePosition(float,float)>','<android.app.ActivityManagerProxy: boolean isUserAMonkey()>','<com.android.vcard.VCardParserImpl_V30: void handleAgent(com.android.vcard.VCardProperty)>','<com.android.internal.statusbar.StatusBarNotification: void <init>(android.os.Parcel)>','<android.webkit.WebViewClassic: boolean onKeyDown(int,android.view.KeyEvent)>','<android.content.pm.IPackageManager$Stub$Proxy: void verifyPendingInstall(int,int)>','<com.android.internal.telephony.cat.CatResponseMessage: void <init>(com.android.internal.telephony.cat.CatCmdMessage)>','<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>','<android.view.HardwareRenderer$Gl20Renderer$1: void run()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,android.net.Uri,java.lang.String,boolean,boolean)>','<android.webkit.WebViewCore$EventHub: boolean access$1202(android.webkit.WebViewCore$EventHub,boolean)>','<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.BaseErrorDialog: void onStart()>','<android.net.sip.SipProfile: int access$400(android.net.sip.SipProfile)>','<com.android.server.net.NetworkStatsCollection: void removeUid(int)>','<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)>','<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>','<com.android.server.am.ActivityManagerService: void serviceTimeout(com.android.server.am.ProcessRecord)>','<android.view.GLES20RecordingCanvas$1: void onReleased(android.view.GLES20RecordingCanvas)>','<android.webkit.WebViewClassic$WebViewInputConnection: void replaceSelection(java.lang.CharSequence)>','<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>','<com.android.uiautomator.core.UiAutomatorBridge: com.android.uiautomator.core.InteractionController getInteractionController()>','<com.android.server.location.PassiveProvider: boolean supportsAltitude()>','<android.bluetooth.BluetoothPan: boolean isTetheringOn()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$1002(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>','<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.animation.IntKeyframeSet: void <init>(android.animation.Keyframe$IntKeyframe[])>','<android.view.MotionEvent: void finalize()>','<com.android.uiautomator.core.QueryController$1: void <init>(com.android.uiautomator.core.QueryController)>','<android.widget.SearchView$SearchAutoComplete: void performCompletion()>','<com.android.internal.telephony.sip.SipPhoneBase: void queryCdmaRoamingPreference(android.os.Message)>','<com.android.server.connectivity.Tethering: void access$900(com.android.server.connectivity.Tethering)>','<android.net.NetworkState$1: android.net.NetworkState[] newArray(int)>','<com.android.internal.telephony.gsm.GSMPhone: void setOutgoingCallerIdDisplay(int,android.os.Message)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)>','<com.android.internal.telephony.PhoneProxy: void setTTYMode(int,android.os.Message)>','<android.net.wifi.ScanResult: java.lang.String toString()>','<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)>','<android.os.Trace: void traceBegin(long,java.lang.String)>','<android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment valueOf(java.lang.String)>','<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance(com.android.internal.telephony.PhoneBase)>','<android.widget.CursorAdapter: long getItemId(int)>','<com.android.internal.view.WindowManagerPolicyThread: android.os.Looper getLooper()>','<android.net.IThrottleManager$Stub$Proxy: int getCliffLevel(java.lang.String,int)>','<android.opengl.GLLogWrapper: void glGetClipPlanef(int,float[],int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void finalize()>','<android.server.BluetoothAdapterStateMachine$PerProcessState: void <init>(android.server.BluetoothAdapterStateMachine,android.server.BluetoothAdapterStateMachine$1)>','<android.content.pm.PackageParser$Instrumentation: void <init>(android.content.pm.PackageParser$ParsePackageItemArgs,android.content.pm.InstrumentationInfo)>','<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>','<android.view.PointerIcon: void <init>(int,android.view.PointerIcon$1)>','<android.bluetooth.BluetoothDeviceProfileState: void access$9900(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.app.SearchableInfo: boolean autoUrlDetect()>','<com.android.internal.telephony.IccCardStatus$CardState: com.android.internal.telephony.IccCardStatus$CardState valueOf(java.lang.String)>','<com.android.server.DevicePolicyManagerService: boolean getStorageEncryption(android.content.ComponentName)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>','<com.android.server.am.ActivityManagerService: boolean finishActivityAffinity(android.os.IBinder)>','<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)>','<android.content.IContentService$Stub: android.content.IContentService asInterface(android.os.IBinder)>','<android.util.Slog: int w(java.lang.String,java.lang.String)>','<android.filterfw.core.NativeBuffer: int count()>','<com.android.internal.telephony.sip.SipPhone$SipCall: boolean getMute()>','<android.server.BluetoothService$RemoteService: int hashCode()>','<android.net.IConnectivityManager$Stub$Proxy: boolean isNetworkSupported(int)>','<android.app.KeyguardManager: boolean isKeyguardSecure()>','<android.widget.LinearLayout: void setWeightSum(float)>','<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean isNationalPrefixOptionalWhenFormatting()>','<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>','<android.graphics.drawable.ClipDrawable$ClipState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>','<android.webkit.PluginManager: java.lang.String getPluginSharedDataDirectory()>','<android.webkit.WebViewClassic$PastePopupWindow: void hide()>','<android.net.InterfaceConfiguration$1: void <init>()>','<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>','<com.android.server.WifiService$AsyncServiceHandler: void handleMessage(android.os.Message)>','<android.location.ILocationListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData$Item)>','<com.android.server.AppWidgetServiceImpl$AppWidgetId: void <init>()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean getAnyDataEnabled()>','<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>','<android.renderscript.ProgramStore$Builder: void <init>(android.renderscript.RenderScript)>','<android.widget.TextView: void setSpannableFactory(android.text.Spannable$Factory)>','<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>','<com.android.internal.telephony.cdma.CdmaCallTracker: boolean canConference()>','<android.animation.ObjectAnimator: void setProperty(android.util.Property)>','<android.webkit.WebView: java.lang.String getUrl()>','<android.app.ActivityThread: android.app.Application currentApplication()>','<android.bluetooth.BluetoothServerSocket: void close()>','<android.os.ConditionVariable: boolean block(long)>','<android.widget.AdapterViewAnimator: android.view.ViewGroup$LayoutParams createOrReuseLayoutParams(android.view.View)>','<android.view.WindowManager$LayoutParams: void <init>(int,int)>','<android.net.http.LoggingEventHandler: void certificate(android.net.http.SslCertificate)>','<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.webkit.CallbackProxy: void switchOutDrawHistory()>','<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)>','<com.android.server.MountService: boolean access$1002(com.android.server.MountService,boolean)>','<android.text.format.Time: boolean parse(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>','<android.content.ContentProviderResult: void <init>(android.net.Uri)>','<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>','<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>','<com.android.server.input.InputFilter$H: void <init>(com.android.server.input.InputFilter,android.os.Looper)>','<android.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)>','<android.net.Uri: android.net.Uri parse(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimEprlLoaded: void <init>(com.android.internal.telephony.cdma.CdmaLteUiccRecords,com.android.internal.telephony.cdma.CdmaLteUiccRecords$1)>','<android.net.sip.SipAudioCall: android.net.sip.SipSession access$602(android.net.sip.SipAudioCall,android.net.sip.SipSession)>','<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>','<com.android.internal.policy.impl.GlobalActions$9: void handleMessage(android.os.Message)>','<com.android.uiautomator.core.UiDevice: void waitForIdle()>','<com.android.i18n.phonenumbers.RegexCache$LRUCache: void <init>(int)>','<android.widget.Editor$SelectionEndHandleView: int getCurrentCursorOffset()>','<android.filterpacks.videosrc.MediaSource: void close(android.filterfw.core.FilterContext)>','<com.android.internal.telephony.sip.SipPhone: void getAvailableNetworks(android.os.Message)>','<android.view.AccessibilityInteractionController: void access$500(android.view.AccessibilityInteractionController,android.os.Message)>','<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>','<android.graphics.Matrix: void setTranslate(float,float)>','<android.animation.Keyframe: void setFraction(float)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String access$1000(com.android.internal.telephony.cdma.CdmaLteUiccRecords)>','<android.filterfw.core.FrameFormat: int[] getDimensions()>','<com.android.internal.util.State: void exit()>','<android.inputmethodservice.ExtractEditText: void setIME(android.inputmethodservice.InputMethodService)>','<android.inputmethodservice.InputMethodService: void onWindowHidden()>','<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.server.am.ActivityManagerService: void updateCpuStats()>','<com.android.internal.util.HexDump: java.lang.String toHexString(byte[],int,int)>','<com.android.server.location.GeocoderProxy: void reconnect(java.lang.String)>','<com.android.server.am.PendingIntentRecord$Key: java.lang.String typeName()>','<android.content.ContentValues$1: android.content.ContentValues[] newArray(int)>','<android.webkit.WebView: void setOverScrollMode(int)>','<com.android.internal.widget.multiwaveview.PointCloud$GlowManager: float getX()>','<android.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession: void <init>(android.accounts.AccountManagerService,android.accounts.AccountManagerService$UserAccounts,android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>','<android.accounts.AuthenticatorDescription: void <init>(android.os.Parcel,android.accounts.AuthenticatorDescription$1)>','<com.android.internal.telephony.BaseCommands: void registerForLineControlInfo(android.os.Handler,int,java.lang.Object)>','<android.location.Criteria: void <init>()>','<android.view.Choreographer: long getFrameTimeNanos()>','<android.database.AbstractWindowedCursor: void onDeactivateOrClose()>','<com.android.internal.util.BitwiseInputStream$AccessException: void <init>(java.lang.String)>','<android.app.AlertDialog: void setIconAttribute(int)>','<com.android.server.pm.PackageManagerService$InstallParams: void handleStartCopy()>','<com.android.server.IntentResolver$IteratorWrapper: void <init>(com.android.server.IntentResolver,java.util.Iterator)>','<com.android.internal.telephony.gsm.GsmConnection: void access$000(com.android.internal.telephony.gsm.GsmConnection)>','<android.widget.Editor$ActionPopupWindow: void initContentView()>','<com.android.vcard.VCardParserImpl_V30: boolean readBeginVCard(boolean)>','<android.view.View$ScrollabilityCache: void run()>','<android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>','<android.net.wifi.WifiStateMachine: void access$13200(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.view.View: boolean performAccessibilityActionInternal(int,android.os.Bundle)>','<android.net.wifi.p2p.WifiP2pDeviceList$1: android.net.wifi.p2p.WifiP2pDeviceList[] newArray(int)>','<android.content.pm.FeatureInfo$1: android.content.pm.FeatureInfo[] newArray(int)>','<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: int getPasswordMinimumNonLetter(android.content.ComponentName)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: boolean hasFormat()>','<android.os.Environment: boolean isExternalStorageRemovable()>','<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>','<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>','<com.android.internal.widget.TransportControlView: void onRestoreInstanceState(android.os.Parcelable)>','<android.widget.TextView$Marquee: boolean isRunning()>','<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>','<android.accounts.AccountManager$8: void doWork()>','<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String access$002(com.android.internal.telephony.ims.IsimUiccRecords,java.lang.String)>','<android.view.VolumePanel: void onFreeResources()>','<android.bluetooth.BluetoothDeviceProfileState: void access$9200(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.app.AlertDialog: void setIcon(int)>','<android.hardware.SystemSensorManager$ListenerDelegate$1: void handleMessage(android.os.Message)>','<android.widget.Toast$TN$2: void <init>(android.widget.Toast$TN)>','<android.view.animation.DecelerateInterpolator: void <init>(float)>','<android.app.ContextImpl$37: java.lang.Object getService(android.app.ContextImpl)>','<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>','<android.telephony.SignalStrength: void <init>()>','<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer$FrameCallback)>','<android.provider.Settings$Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void enter()>','<com.android.server.wm.WindowState: void prelayout()>','<com.android.server.wm.AppWindowAnimator: void updateLayers()>','<android.media.AudioManager: boolean isValidRingerMode(int)>','<android.text.style.SuggestionRangeSpan: void writeToParcel(android.os.Parcel,int)>','<android.provider.Telephony$Sms: android.net.Uri addMessageToUri(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,boolean)>','<android.net.wifi.WifiStateMachine$DriverStoppingState: void enter()>','<android.webkit.FindActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>','<android.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>','<android.webkit.HTML5VideoView: void setPlayerBuffering(boolean)>','<android.util.SparseArray: java.lang.Object get(int)>','<android.server.BluetoothService: void initAfterA2dpRegistration()>','<android.net.wifi.WifiStateMachine: void access$17200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)>','<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void enter()>','<android.hardware.Camera: void cancelAutoFocus()>','<android.app.Instrumentation$ActivityMonitor: android.app.Activity getLastActivity()>','<android.graphics.Canvas: void <init>()>','<com.android.internal.app.ActionBarImpl: void addTab(android.app.ActionBar$Tab)>','<android.os.DropBoxManager$Entry: int getFlags()>','<android.os.PowerManager: int getSupportedWakeLockFlags()>','<android.opengl.GLLogWrapper: void glBindBuffer(int,int)>','<android.net.LocalSocketAddress: java.lang.String getName()>','<android.graphics.Path$FillType: android.graphics.Path$FillType valueOf(java.lang.String)>','<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void onCancel(android.content.DialogInterface)>','<android.opengl.GLLogWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>','<com.android.internal.telephony.PhoneProxy: void setCdmaRoamingPreference(int,android.os.Message)>','<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)>','<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>','<com.android.internal.telephony.RestrictedState: boolean equals(java.lang.Object)>','<android.view.VolumePanel$3: void <init>(android.view.VolumePanel)>','<android.view.ViewStub: int getInflatedId()>','<com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.cdma.CDMAPhone: boolean handlePinMmi(java.lang.String)>','<android.view.GLES20Layer: void <init>(int,int,boolean)>','<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>','<android.content.res.CompatibilityInfo$Translator: void translateRegionInWindowToScreen(android.graphics.Region)>','<android.widget.RemoteViews$TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.server.BluetoothEventLoop: java.util.HashMap getAuthorizationAgentRequestData()>','<com.android.internal.policy.impl.PhoneWindowManager: void finishLayoutLw()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords$EfCsimEprlLoaded: java.lang.String getEfName()>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getPrlVersion()>','<android.widget.ArrayAdapter: void remove(java.lang.Object)>','<android.widget.Switch: int getSwitchMinWidth()>','<android.webkit.WebSettingsClassic: void <clinit>()>','<android.view.View: int getMinimumWidth()>','<android.location.INetInitiatedListener$Stub$Proxy: android.os.IBinder asBinder()>','<android.location.GeocoderParams: void <clinit>()>','<com.android.internal.util.FastXmlSerializer: void <clinit>()>','<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>','<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasDefaults(java.lang.String)>','<android.webkit.GeolocationPermissionsClassic: void createHandler()>','<android.webkit.WebSyncManager: void <clinit>()>','<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>','<android.inputmethodservice.KeyboardView$3: void swipeRight()>','<android.app.ActivityThread$ApplicationThread: void scheduleTrimMemory(int)>','<android.text.HtmlToSpannedConverter: void ignorableWhitespace(char[],int,int)>','<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>','<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<com.android.server.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName)>','<android.renderscript.RenderScript: void nAllocationSyncAll(int,int)>','<android.filterfw.core.Filter: void parametersUpdated(java.util.Set)>','<android.os.Debug: int getGlobalExternalAllocSize()>','<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: void onClose()>','<android.location.IGpsStatusListener$Stub: void <init>()>','<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>','<android.webkit.BrowserFrame: java.lang.String getUserAgentString()>','<android.webkit.AutoCompletePopup: void setAdapter(android.widget.ListAdapter)>','<android.animation.ValueAnimator: int getRepeatCount()>','<com.android.server.wm.WindowStateAnimator: boolean commitFinishDrawingLocked(long)>','<com.android.internal.widget.multiwaveview.TargetDrawable: void setX(float)>','<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.view.textservice.SuggestionsInfo[],int[],int[])>','<com.android.internal.view.menu.ActionMenuView: void onLayout(boolean,int,int,int,int)>','<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>','<com.android.internal.policy.impl.PhoneWindowManager: void dispatchMediaKeyWithWakeLockToAudioService(android.view.KeyEvent)>','<android.location.Location: long access$002(android.location.Location,long)>','<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.net.EthernetDataTracker: boolean isPrivateDnsRouteSet()>','<android.view.VolumePanel: void onMuteChanged(int,int)>','<com.android.internal.telephony.RIL: void getNeighboringCids(android.os.Message)>','<android.webkit.WebViewClassic$OnTrimMemoryListener: void onConfigurationChanged(android.content.res.Configuration)>','<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>','<com.android.internal.telephony.PhoneProxy: void dispose()>','<android.app.Activity: void <init>()>','<android.text.method.ReplacementTransformationMethod: void <init>()>','<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()>','<com.android.internal.os.BatteryStatsImpl: void noteScreenOnLocked()>','<android.view.VolumePanel$StreamResources: android.view.VolumePanel$StreamResources valueOf(java.lang.String)>','<android.os.MemoryFile$MemoryInputStream: int available()>','<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setPasswordQuality(android.content.ComponentName,int)>','<android.view.KeyEvent: int getAction()>','<android.webkit.WebSettingsClassic: boolean getAllowContentAccess()>','<android.net.NetworkStats: long getTotalBytes()>','<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>','<android.webkit.WebSettingsClassic: void setAllowFileAccessFromFileURLs(boolean)>','<android.app.ContextImpl: void init(android.app.LoadedApk,android.os.IBinder,android.app.ActivityThread)>','<com.android.internal.telephony.AdnRecordLoader: void handleMessage(android.os.Message)>','<android.inputmethodservice.KeyboardView: boolean access$300(android.inputmethodservice.KeyboardView)>','<android.renderscript.BaseObj: void destroy()>','<android.net.NetworkPolicyManager: int[] getAppsWithPolicy(int)>','<android.telephony.SignalStrength: int getEvdoAsuLevel()>','<android.view.WindowManagerImpl: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>','<com.android.internal.telephony.gsm.SimTlv: boolean nextObject()>','<android.hardware.usb.UsbRequest: void dequeue()>','<android.widget.Editor: void access$2500(android.widget.Editor)>','<android.media.AudioManager$FocusEventHandlerDelegate$1: void handleMessage(android.os.Message)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,int)>','<android.server.BluetoothAdapterStateMachine$WarmUp: boolean processMessage(android.os.Message)>','<android.os.storage.IMountService$Stub$Proxy: java.lang.String getMountedObbPath(java.lang.String)>','<android.content.ContentProvider: boolean access$100(android.content.ContentProvider)>','<android.opengl.GLLogWrapper: boolean glIsBuffer(int)>','<android.content.SyncQueue: void remove(android.accounts.Account,int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState access$1600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener)>','<android.view.accessibility.AccessibilityManager$1: void <init>(android.view.accessibility.AccessibilityManager)>','<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)>','<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>','<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>','<android.text.Selection: void setSelection(android.text.Spannable,int,int)>','<android.util.Xml$Encoding: void <clinit>()>','<android.graphics.PathEffect: void <init>()>','<com.android.server.pm.Installer: int rmdex(java.lang.String)>','<com.android.internal.telephony.test.SimulatedGsmCallState: boolean onChld(char,char)>','<com.android.internal.telephony.gsm.SIMFileHandler: void logd(java.lang.String)>','<com.android.internal.telephony.IccCardApplication$PersoSubState: com.android.internal.telephony.IccCardApplication$PersoSubState[] values()>','<android.content.pm.PackageParser$Instrumentation: java.lang.String toString()>','<android.graphics.Matrix: void setRotate(float)>','<android.webkit.HTML5VideoView$TimeupdateTask: void run()>','<android.widget.TextView: void setMinEms(int)>','<android.net.http.RequestQueue: android.content.Context access$000(android.net.http.RequestQueue)>','<android.widget.ListPopupWindow$2: void <init>(android.widget.ListPopupWindow)>','<android.webkit.WebSettingsClassic: void setHardwareAccelSkiaEnabled(boolean)>','<com.android.internal.telephony.gsm.SIMRecords: void log(java.lang.String)>','<android.widget.AutoCompleteTextView$PopupDataSetObserver: void onChanged()>','<android.inputmethodservice.AbstractInputMethodService: void <init>()>','<android.widget.AbsListView: void access$2000(android.widget.AbsListView)>','<com.android.server.am.BatteryStatsService: void noteScreenOn()>','<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>','<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)>','<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>','<android.graphics.RectF: java.lang.String toShortString()>','<android.net.wifi.WifiWatchdogStateMachine: int access$2504(android.net.wifi.WifiWatchdogStateMachine)>','<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()>','<android.os.Debug: void resetThreadAllocCount()>','<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>','<android.content.ISyncContext$Stub: android.os.IBinder asBinder()>','<com.android.server.am.ActivityManagerService$3: void run()>','<com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: int getId()>','<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>','<android.media.AudioService: int getRemoteStreamMaxVolume()>','<android.app.backup.BackupDataInput: void <init>(java.io.FileDescriptor)>','<android.server.BluetoothService: boolean isBluetoothDock(java.lang.String)>','<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>','<com.android.server.am.ContentProviderConnection: void toShortString(java.lang.StringBuilder)>','<android.telephony.gsm.GsmCellLocation: int getCid()>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: long getWhat()>','<com.android.internal.policy.impl.SimUnlockScreen$CheckSimPin: void run()>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.os.BatteryStatsImpl$Uid: com.android.internal.os.BatteryStatsImpl$StopwatchTimer getSensorTimerLocked(int,boolean)>','<android.widget.RemoteViewsAdapter: void access$1300(android.widget.RemoteViewsAdapter,int,boolean,boolean)>','<android.content.SyncAdapterType: boolean supportsUploading()>','<android.hardware.usb.UsbInterface: int getId()>','<android.accounts.GrantCredentialsPermissionActivity: void <init>()>','<android.webkit.WebBackForwardListClient: void onIndexChanged(android.webkit.WebHistoryItem,int)>','<android.widget.EdgeEffect: void onPull(float)>','<android.server.BluetoothService: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>','<com.android.vcard.VCardUtils$TextUtilsPort: boolean isPrintableAsciiOnly(java.lang.CharSequence)>','<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()>','<android.widget.ExpandableListConnector$GroupMetadata$1: void <init>()>','<android.accounts.AccountManagerService$6: void run()>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void putRecoveryAction(int)>','<android.preference.Preference: void setSelectable(boolean)>','<android.view.Choreographer: void doScheduleCallback(int)>','<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>','<android.view.GLES20RenderLayer: void setTransform(android.graphics.Matrix)>','<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request,android.net.http.Connection)>','<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>','<android.bluetooth.BluetoothAdapter$RfcommChannelPicker: void <init>(java.util.UUID)>','<android.location.Address: java.lang.String access$702(android.location.Address,java.lang.String)>','<android.app.ActivityManagerProxy: void enterSafeMode()>','<android.content.pm.ResolveInfo: java.lang.String toString()>','<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)>','<android.net.INetworkStatsService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.MobileDataStateTracker: android.net.LinkProperties access$602(android.net.MobileDataStateTracker,android.net.LinkProperties)>','<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>','<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>','<android.media.IRemoteControlDisplay$Stub: android.media.IRemoteControlDisplay asInterface(android.os.IBinder)>','<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$2: void <init>(android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection,android.widget.RemoteViewsAdapter)>','<com.android.server.am.TransferPipe: void go(java.io.FileDescriptor)>','<com.android.server.am.ActivityStack: void updateTransitLocked(int,android.os.Bundle)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>','<com.android.server.am.ActivityRecord$Token: void windowsDrawn()>','<android.view.View$AttachInfo$InvalidateInfo: void <init>()>','<com.android.internal.telephony.IccRecords: boolean getVoiceMessageWaiting()>','<android.location.GpsSatellite: float getAzimuth()>','<android.net.LocalSocket: java.io.OutputStream getOutputStream()>','<android.view.MenuInflater: java.lang.Object[] access$600(android.view.MenuInflater)>','<com.android.internal.telephony.sip.SipCommandInterface: void cancelPendingUssd(android.os.Message)>','<com.android.server.am.ActivityManagerService$MemBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.os.StatFs: void finalize()>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>','<com.android.internal.telephony.sip.SipPhoneBase: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>','<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()>','<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<com.android.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)>','<android.app.ActivityThread$ApplicationThread: void getMemoryInfo(android.os.Debug$MemoryInfo)>','<android.app.ContextImpl: java.lang.String[] databaseList()>','<android.graphics.Picture: void finalize()>','<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>','<android.graphics.drawable.GradientDrawable$GradientState: float access$302(android.graphics.drawable.GradientDrawable$GradientState,float)>','<com.android.internal.util.StateMachine$ProcessedMessageInfo: long getTime()>','<com.android.server.wm.ViewServer: void run()>','<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>','<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int,java.lang.Object)>','<android.widget.RelativeLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>','<android.net.sip.ISipSession$Stub$Proxy: boolean isInCall()>','<android.app.ActivityThread: void doGcIfNeeded()>','<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.view.View: boolean getKeepScreenOn()>','<android.os.RemoteCallback: void <clinit>()>','<android.net.NetworkStatsHistory: java.lang.String toString()>','<com.android.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.animation.Animator)>','<android.view.ViewRootImpl$AccessibilityInteractionConnection: void findAccessibilityNodeInfoByViewId(long,int,int,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>','<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>','<android.util.FastImmutableArraySet$FastIterator: java.lang.Object next()>','<com.android.internal.telephony.cdma.CDMAPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>','<android.view.HardwareRenderer: void access$200(int[])>','<android.graphics.Rect: int width()>','<android.graphics.TableMaskFilter: void <init>(byte[])>','<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>','<android.opengl.GLLogWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>','<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid: boolean processMessage(android.os.Message)>','<android.media.AudioManager: void setVibrateSetting(int,int)>','<android.preference.PreferenceScreen$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.app.ActivityManagerNative: void noteWakeupAlarm(android.app.PendingIntent)>','<android.view.ViewGroup: void removeViews(int,int)>','<com.android.server.am.AppBindRecord: void dump(java.io.PrintWriter,java.lang.String)>','<android.graphics.Canvas: void drawColor(int)>','<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>','<com.android.internal.telephony.WapPushOverSms$WapPushConnection: com.android.internal.telephony.IWapPushManager getWapPushManager()>','<com.android.internal.app.ActionBarImpl: void setDefaultDisplayHomeAsUpEnabled(boolean)>','<com.android.internal.telephony.sip.SipPhoneBase: void getDataCallList(android.os.Message)>','<android.hardware.SystemSensorManager$ListenerDelegate: java.util.List getSensors()>','<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>','<android.view.WindowManager$LayoutParams: void backup()>','<android.hardware.Sensor: int getType()>','<android.server.BluetoothAdapterStateMachine: android.server.BluetoothAdapterStateMachine$BluetoothOn access$4300(android.server.BluetoothAdapterStateMachine)>','<android.telephony.SmsCbLocation: int getLac()>','<android.widget.AbsListView: int access$2700(android.widget.AbsListView)>','<android.app.ActivityManager$TaskThumbnails: int describeContents()>','<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>','<android.graphics.Region: void <init>(int)>','<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>','<android.view.View$4: java.lang.Object get(java.lang.Object)>','<android.view.textservice.SpellCheckerInfo$1: void <init>()>','<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>','<com.android.server.DevicePolicyManagerService: void <init>(android.content.Context)>','<android.webkit.WebViewClassic$7: void run()>','<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)>','<android.view.ViewGroup$TouchTarget: void recycle()>','<com.android.internal.policy.impl.SimUnlockScreen$1: void <init>(com.android.internal.policy.impl.SimUnlockScreen,java.lang.String)>','<android.content.pm.IPackageDeleteObserver$Stub: android.os.IBinder asBinder()>','<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.util.Singleton: java.lang.Object get()>','<android.webkit.WebViewClassic: void sendBatchableInputMessage(int,int,int,java.lang.Object)>','<com.android.server.InputMethodManagerService: boolean switchToLastInputMethod(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int)>','<android.webkit.WebViewClassic: void notifyFindDialogDismissed()>','<android.server.BluetoothService: boolean disable()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: boolean hasNoInternationalDialling()>','<com.android.internal.util.StateMachine$SmHandler: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl$Timer: long getTotalTimeLocked(long,int)>','<com.android.internal.app.IUsageStats$Stub$Proxy: void notePauseComponent(android.content.ComponentName)>','<com.android.internal.telephony.cdma.CDMAPhone: void activateCellBroadcastSms(int,android.os.Message)>','<android.os.FileUtils: boolean isFilenameSafe(java.io.File)>','<com.android.internal.os.BatteryStatsImpl: void <clinit>()>','<android.provider.ContactsContract$ProviderStatus: void <clinit>()>','<com.android.internal.policy.impl.PhoneWindowManager$10: void run()>','<com.android.internal.telephony.PhoneProxy: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>','<com.android.server.usb.UsbDeviceManager: boolean access$1600(com.android.server.usb.UsbDeviceManager)>','<com.android.internal.telephony.ServiceStateTracker: void <init>()>','<com.android.internal.os.RuntimeInit: boolean access$000()>','<android.os.StrictMode: boolean conditionallyEnableDebugLogging()>','<android.view.DragEvent$1: android.view.DragEvent createFromParcel(android.os.Parcel)>','<android.os.Bundle: int[] getIntArray(java.lang.String)>','<android.webkit.WebView$PrivateAccess: boolean super_onHoverEvent(android.view.MotionEvent)>','<com.android.server.net.NetworkStatsService$9: void <init>(com.android.server.net.NetworkStatsService)>','<android.view.KeyEvent: int normalizeMetaState(int)>','<com.android.internal.telephony.CallManager: void acceptCall(com.android.internal.telephony.Call)>','<android.inputmethodservice.InputMethodService: void onExtractedReplaceText(int,int,java.lang.CharSequence)>','<android.app.INotificationManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()>','<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>','<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>','<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>','<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>','<android.widget.OverScroller: void abortAnimation()>','<android.webkit.HTML5VideoViewProxy: void dispatchOnEnded()>','<android.security.SystemKeyStore: java.lang.String generateNewKeyHexString(int,java.lang.String,java.lang.String)>','<android.webkit.HTML5VideoViewProxy$VideoPlayer: void onPrepared()>','<com.android.server.wm.BlackFrame: void hide()>','<android.os.StrictMode$ThreadPolicy: java.lang.String toString()>','<android.content.pm.ComponentInfo: void <init>()>','<android.app.ActivityThread: void performRestartActivity(android.os.IBinder)>','<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>','<android.view.WindowManagerImpl$CompatModeWrapper: boolean isHardwareAccelerated()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>','<com.android.internal.telephony.sip.SipPhone: boolean needsOtaServiceProvisioning()>','<android.view.ViewTreeObserver$InternalInsetsInfo: void reset()>','<com.android.internal.telephony.PhoneProxy: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>','<android.webkit.ZoomControlEmbedded: android.webkit.WebViewClassic access$100(android.webkit.ZoomControlEmbedded)>','<android.webkit.WebViewClassic: void access$4300(android.webkit.WebViewClassic,int,int,android.webkit.WebViewCore$TextSelectionData)>','<android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>','<android.view.GLES20Canvas: int getHeight()>','<com.android.internal.content.PackageMonitor: boolean isPackageModified(java.lang.String)>','<com.android.internal.telephony.IPhoneStateListener$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.internal.telephony.BaseCommands: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>','<com.android.server.sip.SipSessionGroup: void closeToNotReceiveCalls()>','<com.android.internal.telephony.PhoneBase: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>','<android.speech.tts.UtteranceProgressListener$1: void onError(java.lang.String)>','<android.view.ViewGroup: boolean access$302(android.view.ViewGroup,boolean)>','<android.media.AudioService$FocusStackEntry: void <init>(int,int,android.media.IAudioFocusDispatcher,android.os.IBinder,java.lang.String,android.media.AudioService$AudioFocusDeathHandler,java.lang.String,int)>','<android.net.sip.SimpleSessionDescription$Media: void <init>(java.lang.String,int,int,java.lang.String,android.net.sip.SimpleSessionDescription$1)>','<com.android.server.AppWidgetService: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder)>','<android.provider.ContactsContract$DisplayPhoto: void <clinit>()>','<android.view.Surface: void finalize()>','<android.widget.CompoundButton: boolean performClick()>','<android.view.GLES20DisplayList: void setScaleY(float)>','<android.location.ICountryDetector$Stub$Proxy: void addCountryListener(android.location.ICountryListener)>','<android.database.CursorWrapper: int getInt(int)>','<com.android.vcard.VCardBuilder: void <init>(int,java.lang.String)>','<android.server.BluetoothService$Reaper: void <init>(android.server.BluetoothService,int,int,int)>','<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>','<android.bluetooth.BluetoothProfileState$StableState: void <init>(android.bluetooth.BluetoothProfileState,android.bluetooth.BluetoothProfileState$1)>','<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>','<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>','<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>','<android.widget.TextView: void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int)>','<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryXt()>','<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>','<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>','<android.nfc.tech.BasicTagTechnology: void checkConnected()>','<com.android.server.IntentResolver$IteratorWrapper: void remove()>','<com.android.server.pm.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean fetchRemoteUuids(java.lang.String,android.os.ParcelUuid,android.bluetooth.IBluetoothCallback)>','<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()>','<android.webkit.WebSettingsClassic$AutoFillProfile: java.lang.String getState()>','<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)>','<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>','<android.app.ActivityManager: boolean isRunningInTestHarness()>','<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)>','<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>','<android.telephony.GsmCellIdentity: int getMnc()>','<android.view.GLES20Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>','<android.webkit.WebCoreThreadWatchdog$PageNotRespondingRunnable: void run()>','<android.media.AudioService$VolumeStreamState: void applyDeviceVolume(int)>','<android.net.NetworkStatsHistory: long randomLong(java.util.Random,long,long)>','<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>','<com.android.internal.telephony.cdma.CDMAPhone: void setMute(boolean)>','<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>','<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>','<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>','<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>','<android.net.wifi.WifiNative: boolean disableNetwork(int)>','<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)>','<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>','<com.android.internal.view.menu.MenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>','<android.view.animation.AnimationSet: void setFillAfter(boolean)>','<android.net.wifi.p2p.WifiP2pService: java.lang.String access$5700(android.net.wifi.p2p.WifiP2pService)>','<android.database.IContentObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.ActivityStack: int startActivityUncheckedLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,boolean,android.os.Bundle)>','<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>','<com.android.vcard.VCardParserImpl_V30: java.lang.String getLine()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onRadioOffOrNotAvailable()>','<android.telephony.SmsCbMessage: boolean isCmasMessage()>','<android.webkit.WebView: void enablePlatformNotifications()>','<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>','<com.android.internal.telephony.UUSInfo: void <init>()>','<android.graphics.drawable.BitmapDrawable$BitmapState: int getChangingConfigurations()>','<com.android.server.pm.Settings$1: java.lang.String packageForFilter(com.android.server.pm.PreferredActivity)>','<com.android.internal.app.ActionBarImpl: void setLogo(android.graphics.drawable.Drawable)>','<android.graphics.Bitmap: int getScaledHeight(int)>','<android.net.wifi.WifiStateMachine: void access$14900(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.AbsListView: void reportScrollStateChange(int)>','<android.widget.SearchView: void onDetachedFromWindow()>','<android.widget.ImageView: void setBaseline(int)>','<com.android.server.AppWidgetServiceImpl: void updateAppWidgetIds(int[],android.widget.RemoteViews)>','<android.content.pm.ApplicationInfo: java.lang.String toString()>','<android.app.ResultInfo$1: android.app.ResultInfo[] newArray(int)>','<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>','<com.android.server.am.ActivityManagerService: void updateServiceForegroundLocked(com.android.server.am.ProcessRecord,boolean)>','<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>','<android.widget.AbsoluteLayout$LayoutParams: java.lang.String debug(java.lang.String)>','<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()>','<android.opengl.GLLogWrapper: void glLightModelxv(int,java.nio.IntBuffer)>','<android.content.Intent$FilterComparison: android.content.Intent getIntent()>','<com.android.internal.telephony.IccException: void <init>(java.lang.String)>','<android.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)>','<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()>','<android.os.AsyncTask$WorkerRunnable: void <init>(android.os.AsyncTask$1)>','<com.android.internal.policy.impl.GlobalActions$7: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.RelativeLayout$DependencyGraph$Node$1: void onReleased(android.widget.RelativeLayout$DependencyGraph$Node)>','<android.view.GLES20Layer$Finalizer: void destroy()>','<android.net.wifi.WifiNative: boolean p2pInvite(android.net.wifi.p2p.WifiP2pGroup,java.lang.String)>','<com.android.internal.telephony.RIL: void getVoiceRadioTechnology(android.os.Message)>','<com.android.server.DevicePolicyManagerService: void reportFailedPasswordAttempt()>','<android.net.wifi.p2p.WifiP2pManager$Channel: android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener access$902(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)>','<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>','<com.android.server.wm.InputMonitor: void notifyConfigurationChanged()>','<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>','<com.android.internal.view.IInputMethodClient$Stub$Proxy: void setUsingInputMethod(boolean)>','<android.app.Fragment: void onDestroyOptionsMenu()>','<com.android.server.am.ActivityManagerService$8: void <init>(com.android.server.am.ActivityManagerService)>','<android.webkit.WebSettingsClassic: void setDisplayZoomControls(boolean)>','<android.bluetooth.BluetoothProfileState$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.PowerManagerService$7: void run()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isDeviceCharged()>','<android.location.Address: void setSubAdminArea(java.lang.String)>','<com.android.server.StatusBarManagerService$DisableRecord: void binderDied()>','<com.android.server.Watchdog$HeartbeatHandler: void <init>(com.android.server.Watchdog)>','<android.net.http.IdleCache: boolean cacheConnection(org.apache.http.HttpHost,android.net.http.Connection)>','<android.app.LocalActivityManager: void dispatchResume()>','<android.database.CursorWindow: boolean putBlob(byte[],int,int)>','<android.app.SearchableInfo: void <init>(android.os.Parcel)>','<android.webkit.CacheManager$CacheResult: java.lang.String getEncoding()>','<android.net.wifi.NetworkUpdateResult: int getNetworkId()>','<android.text.style.MetricAffectingSpan$Passthrough: void updateMeasureState(android.text.TextPaint)>','<com.android.server.EventLogTags: void writePowerScreenState(int,int,long,int)>','<android.net.wifi.WifiStateMachine: java.lang.String syncGetWifiStateByName()>','<android.view.MotionEvent: float getXPrecision()>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>','<android.accounts.AccountManagerService: void onServiceChanged(android.accounts.AuthenticatorDescription,boolean)>','<com.android.internal.telephony.RIL: void getCurrentCalls(android.os.Message)>','<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)>','<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getGlobalSearchActivity()>','<android.content.PeriodicSync: int describeContents()>','<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord access$602(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$NotificationRecord)>','<android.view.View: void resetAccessibilityStateChanged()>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: boolean hasPossibleNumberPattern()>','<com.android.internal.telephony.ServiceStateTracker: void registerForPsRestrictedEnabled(android.os.Handler,int,java.lang.Object)>','<com.android.internal.telephony.PhoneProxy: void updateServiceLocation()>','<android.os.PowerManager$WakeLock: void finalize()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>','<android.media.MediaRouter$RouteCategory: void <init>(java.lang.CharSequence,int,boolean)>','<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>','<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>','<com.android.server.am.ActivityManagerService: boolean dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<android.app.ActivityManager$RecentTaskInfo: void <init>(android.os.Parcel,android.app.ActivityManager$1)>','<android.content.IClipboard$Stub$Proxy: android.content.ClipData getPrimaryClip(java.lang.String)>','<android.widget.RemoteViews: void setNotRoot()>','<android.webkit.ViewManager: android.webkit.ViewManager$ChildView createView()>','<com.android.server.LocationManagerService$ProximityListener: void onProviderDisabled(java.lang.String)>','<android.nfc.tech.NfcB: byte[] getProtocolInfo()>','<com.android.server.wm.WindowStateAnimator: boolean isAnimating()>','<com.android.server.NetworkManagementService: void disableIpv6(java.lang.String)>','<com.android.internal.telephony.cdma.CdmaCall: java.lang.String toString()>','<android.webkit.WebSettings: boolean getBlockNetworkImage()>','<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()>','<com.android.internal.telephony.BaseCommands: int getLteOnCdmaModeStatic()>','<android.content.res.ObbInfo$1: android.content.res.ObbInfo createFromParcel(android.os.Parcel)>','<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback)>','<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>','<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>','<android.media.AudioManager: void setStreamVolume(int,int,int)>','<android.net.IConnectivityManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>','<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>','<com.android.internal.view.BaseIWindow: void setSession(android.view.IWindowSession)>','<android.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)>','<android.view.HardwareLayer: int getWidth()>','<android.webkit.WebViewClassic: void requestFocusNodeHref(android.os.Message)>','<com.android.internal.location.GpsNetInitiatedHandler$GpsNiResponse: void <init>()>','<android.server.BluetoothHealthProfileHandler$1: void handleMessage(android.os.Message)>','<android.os.NullVibrator: void vibrate(long)>','<android.net.DhcpStateMachine$WaitBeforeRenewalState: boolean processMessage(android.os.Message)>','<android.widget.ImageView: void setMaxHeight(int)>','<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)>','<android.content.pm.IPackageStatsObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.app.Activity: void showDialog(int)>','<android.view.accessibility.IAccessibilityManager$Stub: android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder)>','<android.webkit.AccessibilityInjectorFallback$AccessibilityWebContentKeyBinding: int getKeyCode()>','<com.android.internal.widget.ActionBarView: void setNavigationMode(int)>','<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>','<com.android.internal.widget.DigitalClock$TimeChangedReceiver$1: void run()>','<android.view.ViewGroup: void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>','<android.accounts.AccountManager: android.accounts.IAccountManager access$000(android.accounts.AccountManager)>','<android.database.AbstractCursor: int getType(int)>','<android.media.MediaRouter$RouteInfo: java.lang.CharSequence getName(android.content.res.Resources)>','<com.android.internal.view.IInputMethodClient$Stub: void <init>()>','<com.android.internal.os.BatteryStatsImpl: void initTimes()>','<android.widget.GridView: void smoothScrollByOffset(int)>','<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>','<android.widget.TextView$ChangeWatcher: void afterTextChanged(android.text.Editable)>','<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>','<android.location.Location: boolean access$302(android.location.Location,boolean)>','<com.android.internal.widget.ActionBarView: void setCallback(android.app.ActionBar$OnNavigationListener)>','<android.hardware.LegacySensorManager: void onRotationChanged(int)>','<android.webkit.WebViewClassic$InvokeListBox$4: void onCancel(android.content.DialogInterface)>','<com.android.vcard.VCardParserImpl_V21: int getVersion()>','<android.media.AudioService: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>','<android.net.wifi.WifiConfigStore: android.net.wifi.WpsResult startWpsWithPinFromAccessPoint(android.net.wifi.WpsInfo)>','<android.nfc.TransceiveResult: byte[] getResponseOrThrow()>','<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>','<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats$Entry)>','<com.android.server.PreferredComponent: void <init>(com.android.server.PreferredComponent$Callbacks,int,android.content.ComponentName[],android.content.ComponentName)>','<com.android.internal.telephony.RIL: void queryCallWaiting(int,android.os.Message)>','<android.view.FocusFinder: void <clinit>()>','<android.graphics.drawable.AnimatedRotateDrawable: void stop()>','<android.media.effect.effects.BitmapOverlayEffect: void apply(int,int,int,int)>','<android.webkit.WebViewClassic: void clearCache(boolean)>','<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: void detach()>','<com.android.server.sip.SipSessionGroup$SipSessionImpl$KeepAliveProcess: void <init>(com.android.server.sip.SipSessionGroup$SipSessionImpl)>','<com.android.internal.os.BatteryStatsImpl: void notePhoneStateLocked(int,int)>','<android.database.IContentObserver$Stub$Proxy: android.os.IBinder asBinder()>','<android.database.sqlite.SQLiteConnectionPool: void close()>','<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>','<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>','<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver)>','<android.widget.GridView: int getRequestedColumnWidth()>','<android.content.ComponentName$1: void <init>()>','<android.hardware.input.KeyboardLayout: void <init>(android.os.Parcel,android.hardware.input.KeyboardLayout$1)>','<android.view.animation.DecelerateInterpolator: void <init>()>','<android.os.UserId: int getAppId(int)>','<android.inputmethodservice.InputMethodService: void access$000(android.inputmethodservice.InputMethodService)>','<android.app.ISearchManager$Stub$Proxy: android.content.ComponentName getWebSearchActivity()>','<android.widget.FastScroller: boolean isPointInside(float,float)>','<android.app.FragmentManagerImpl: void performPendingDeferredStart(android.app.Fragment)>','<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>','<android.app.ActivityThread$2: void onConfigurationChanged(android.content.res.Configuration)>','<android.net.wifi.WifiStateMachine$L2ConnectedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,int)>','<com.android.server.wm.WindowManagerService: void performBootTimeout()>','<com.android.server.net.NetworkStatsService: int access$1500(com.android.server.net.NetworkStatsService)>','<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>','<com.android.internal.policy.impl.PatternUnlockScreen: int access$708(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.internal.view.IInputContext$Stub$Proxy: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>','<com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState[] values()>','<android.app.LoadedApk$WarningContextClassLoader: void <clinit>()>','<com.android.server.wm.WindowManagerService: void access$500(com.android.server.wm.WindowManagerService)>','<android.widget.OverScroller$SplineOverScroller: void <clinit>()>','<com.android.internal.policy.impl.KeyguardViewBase$1: int getOpacity()>','<android.widget.SpellChecker: void onSelectionChanged()>','<android.view.View: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>','<android.net.wifi.WifiManager: boolean initializeMulticastFiltering()>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: void access$2600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.app.LoadedApk$ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.wm.FakeWindowImpl: void dismiss()>','<com.android.internal.util.StateMachine: boolean recordProcessedMessage(android.os.Message)>','<com.android.internal.telephony.cat.DisplayTextParams: void <init>(com.android.internal.telephony.cat.CommandDetails,com.android.internal.telephony.cat.TextMessage)>','<com.android.server.NetworkManagementService: void tetherInterface(java.lang.String)>','<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>','<android.view.GLES20Canvas: void interrupt()>','<android.app.SharedPreferencesImpl$EditorImpl: void apply()>','<android.hardware.Camera$Parameters: int getPreviewFormat()>','<com.android.server.AppWidgetServiceImpl$2: void onServiceDisconnected(android.content.ComponentName)>','<android.net.wifi.WifiStateMachine: boolean access$8300(android.net.wifi.WifiStateMachine)>','<android.net.NetworkInfo: java.lang.String getSubtypeName()>','<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void reset(boolean)>','<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void loge(java.lang.String)>','<android.telephony.SmsMessage: boolean isReplyPathPresent()>','<com.android.server.wm.WindowManagerService: boolean checkCallingPermission(java.lang.String,java.lang.String)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void parse(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void <init>(com.android.server.input.InputManagerService,int,android.hardware.input.IInputDevicesChangedListener)>','<android.view.KeyEvent$1: android.view.KeyEvent[] newArray(int)>','<com.android.internal.telephony.cdma.CdmaConnection: void onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>','<com.android.internal.policy.impl.PasswordUnlockScreen$3: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.net.wifi.WifiNative: boolean setBand(int)>','<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>','<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone,java.lang.String,com.android.internal.telephony.UUSInfo)>','<android.view.View: int getResolvedLayoutDirection(android.graphics.drawable.Drawable)>','<com.android.internal.widget.DigitalClock: void updateTime(java.util.Calendar)>','<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>','<com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv: long getStartTime(long,int)>','<android.webkit.BrowserFrame: void didFirstLayout()>','<com.android.server.sip.SipService$SipSessionGroupExt: boolean isRegistered()>','<android.view.View: void setLeft(int)>','<com.android.uiautomator.core.UiAutomatorBridge: void <clinit>()>','<android.view.GLES20TextureLayer: android.view.HardwareCanvas start(android.graphics.Canvas)>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onDevicePolicyManagerStateChanged()>','<android.bluetooth.BluetoothDeviceProfileState: void access$10400(android.bluetooth.BluetoothDeviceProfileState,com.android.internal.util.IState)>','<android.app.SharedPreferencesImpl: java.lang.Object access$700(android.app.SharedPreferencesImpl)>','<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>','<com.android.internal.os.BatteryStatsImpl$Uid: android.os.BatteryStats$Uid$Pid getPidStatsLocked(int)>','<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>','<com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec: java.lang.String toString()>','<android.graphics.Rect: float exactCenterX()>','<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>','<android.webkit.CallbackProxy$6: void onCancel(android.content.DialogInterface)>','<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>','<android.animation.ValueAnimator: void cancel()>','<android.bluetooth.BluetoothProfileState: void access$900(android.bluetooth.BluetoothProfileState,com.android.internal.util.IState)>','<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.view.ViewDebug$4: java.lang.Object[] pre()>','<com.android.server.location.GpsLocationProvider: boolean requestSingleShotFix()>','<android.inputmethodservice.Keyboard: int access$100(android.inputmethodservice.Keyboard)>','<android.text.method.PasswordTransformationMethod$PasswordCharSequence: void <init>(java.lang.CharSequence)>','<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)>','<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.widget.DrawableHolder: float getX()>','<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>','<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>','<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>','<android.os.storage.OnObbStateChangeListener: void <init>()>','<android.nfc.tech.NfcB: int getMaxTransceiveLength()>','<android.opengl.GLLogWrapper: void glLightModelx(int,int)>','<android.widget.AutoCompleteTextView: void access$600(android.widget.AutoCompleteTextView)>','<com.android.server.am.ActivityManagerService$10: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.StringBuilder,android.os.DropBoxManager,java.lang.String)>','<android.webkit.WebViewCore$EventHub: void access$7300(android.webkit.WebViewCore$EventHub,android.os.Message,long)>','<android.widget.ExpandableListConnector$GroupMetadata: void writeToParcel(android.os.Parcel,int)>','<android.widget.ImageView: int getBaseline()>','<android.app.Activity: void onBackPressed()>','<android.view.View: int getPaddingRight()>','<android.media.MediaRouter$UserRouteInfo: void requestUpdateVolume(int)>','<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>','<android.widget.RemoteViews$SetPendingIntentTemplate: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews$OnClickHandler)>','<android.net.ProxyProperties: void <clinit>()>','<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>','<android.widget.TextView: void setMinHeight(int)>','<android.provider.Telephony$Sms: void <clinit>()>','<android.widget.HeaderViewListAdapter: int getFootersCount()>','<android.app.Dialog$ListenersHandler: void handleMessage(android.os.Message)>','<com.android.internal.telephony.PhoneBase: void setPreferredNetworkType(int,android.os.Message)>','<com.android.server.location.PassiveProvider: boolean requiresCell()>','<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)>','<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>','<android.net.EthernetDataTracker: java.lang.String access$000()>','<android.net.wifi.WifiConfigStore: boolean disableNetwork(int)>','<android.view.SurfaceView$4: void setFixedSize(int,int)>','<android.hardware.Camera: android.hardware.Camera$AutoFocusMoveCallback access$1300(android.hardware.Camera)>','<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.os.storage.StorageManager$ListenerDelegate: void sendShareAvailabilityChanged(boolean)>','<com.android.internal.telephony.BaseCommands: void unregisterForRadioStateChanged(android.os.Handler)>','<android.preference.PreferenceScreen$SavedState$1: android.preference.PreferenceScreen$SavedState createFromParcel(android.os.Parcel)>','<android.widget.AbsListView: boolean access$1700(android.widget.AbsListView)>','<com.android.ex.variablespeed.SingleThreadedMediaPlayerProxy: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>','<com.android.internal.telephony.IccCardStatus$PinState: boolean isPermBlocked()>','<com.android.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>','<com.android.server.location.LocationProviderProxy: boolean requiresNetwork()>','<android.hardware.ISerialManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.FastScroller: void setScrollbarPosition(int)>','<com.android.internal.telephony.DataConnection: void access$1600(com.android.internal.telephony.DataConnection,com.android.internal.util.IState)>','<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>','<android.net.http.SslError: android.net.http.SslError SslErrorFromChromiumErrorCode(int,android.net.http.SslCertificate,java.lang.String)>','<com.android.internal.policy.impl.PhoneWindowManager$17$1: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.view.GLES20Canvas$CanvasFinalizer: void finalize()>','<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>','<android.net.DummyDataStateTracker: void setPolicyDataEnable(boolean)>','<com.android.server.WifiService: java.util.List access$3600(com.android.server.WifiService)>','<android.webkit.HTML5VideoFullScreen$4: void onBufferingUpdate(android.media.MediaPlayer,int)>','<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)>','<android.app.FragmentManagerImpl: void reportBackStackChanged()>','<android.telephony.GsmCellIdentity: void <init>(int,int,int,int,int,java.lang.String)>','<android.net.wifi.p2p.WifiP2pService$ClientInfo: java.util.List access$9500(android.net.wifi.p2p.WifiP2pService$ClientInfo)>','<android.webkit.WebViewClassic: void switchOutDrawHistory()>','<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>','<android.server.search.SearchManagerService$BootCompletedReceiver$1: void <init>(android.server.search.SearchManagerService$BootCompletedReceiver)>','<com.android.internal.os.LoggingPrintStream: void print(java.lang.String)>','<android.content.ClipData$Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>','<android.inputmethodservice.KeyboardView$1: void handleMessage(android.os.Message)>','<android.content.ContentProviderClient: void <init>(android.content.ContentResolver,android.content.IContentProvider,boolean)>','<com.android.internal.policy.impl.LockScreen: boolean access$002(com.android.internal.policy.impl.LockScreen,boolean)>','<android.media.IRemoteControlClient$Stub: android.media.IRemoteControlClient asInterface(android.os.IBinder)>','<android.provider.Telephony$Sms$Outbox: void <init>()>','<com.android.server.am.UsageStatsService$TimeStats: void writeToParcel(android.os.Parcel)>','<com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>','<com.android.internal.telephony.cat.ToneSettings: void writeToParcel(android.os.Parcel,int)>','<com.android.server.pm.PackageManagerService$DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>','<android.content.res.Resources: int selectSystemTheme(int,int,int,int,int)>','<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>','<android.view.IWindowManager$Stub$Proxy: int getPreferredOptionsPanelGravity()>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>','<android.hardware.SensorManager: void <clinit>()>','<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>','<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>','<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>','<android.webkit.HTML5VideoFullScreen: boolean onTouch(android.view.View,android.view.MotionEvent)>','<com.android.internal.telephony.cdma.CdmaCallTracker: void handlePollCalls(android.os.AsyncResult)>','<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>','<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$914(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,long)>','<android.webkit.WebViewClassic$DestroyNativeRunnable: void run()>','<android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache: void reset()>','<android.graphics.Rect: boolean intersect(int,int,int,int)>','<android.app.Activity: void invalidateOptionsMenu()>','<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>','<com.android.server.sip.SipSessionListenerProxy: void access$100(com.android.server.sip.SipSessionListenerProxy,java.lang.Throwable,java.lang.String)>','<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parse(java.lang.String,java.lang.String)>','<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.internal.policy.impl.PatternUnlockScreen: com.android.internal.policy.impl.KeyguardStatusViewManager access$500(com.android.internal.policy.impl.PatternUnlockScreen)>','<com.android.server.wm.FakeWindowImpl: void layout(int,int)>','<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>','<android.app.FragmentManagerImpl$3: void run()>','<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region$Op)>','<com.android.server.wm.WindowManagerService: int access$202(com.android.server.wm.WindowManagerService,int)>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3500(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.net.wifi.WifiStateMachine: void access$5200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int)>','<android.bluetooth.IBluetoothPbap$Stub: void <init>()>','<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>','<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>','<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<com.android.server.NetworkManagementService: void removeRoute(java.lang.String,android.net.RouteInfo)>','<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>','<com.android.internal.telephony.CallManager: void conference(com.android.internal.telephony.Call)>','<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>','<android.os.TokenWatcher: void dump()>','<android.bluetooth.BluetoothDeviceProfileState: void access$7200(android.bluetooth.BluetoothDeviceProfileState,android.os.Message)>','<android.widget.PopupWindow: boolean isFocusable()>','<com.android.internal.widget.IRemoteViewsAdapterConnection$Stub: com.android.internal.widget.IRemoteViewsAdapterConnection asInterface(android.os.IBinder)>','<com.android.server.DevicePolicyManagerService$MyPackageMonitor: void <init>(com.android.server.DevicePolicyManagerService)>','<android.content.SyncManager$11: int compare(java.lang.Object,java.lang.Object)>','<android.widget.RemoteViews$ReflectionAction: void writeToParcel(android.os.Parcel,int)>','<android.server.BluetoothService: java.util.Map access$300(android.server.BluetoothService)>','<android.preference.GenericInflater$FactoryMerger: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>','<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>','<android.view.ViewGroup: void access$000(android.view.ViewGroup)>','<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.webkit.WebViewClassic: void access$6900(android.webkit.WebViewClassic)>','<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>','<android.net.wifi.WifiStateMachine$TetherStateChange: void <init>(android.net.wifi.WifiStateMachine,java.util.ArrayList,java.util.ArrayList)>','<android.view.IWindow$Stub$Proxy: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>','<android.app.ApplicationThreadProxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean hasIccCard()>','<android.view.SurfaceView$2: void onScrollChanged()>','<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>','<com.android.server.sip.SipSessionGroup: void processRequest(javax.sip.RequestEvent)>','<android.app.ApplicationPackageManager: void configurationChanged()>','<android.app.ActivityThread$Profiler: void stopProfiling()>','<android.telephony.CellInfo$1: void <init>()>','<android.widget.FastScroller: boolean isVisible()>','<com.android.internal.telephony.cat.ComprehensionTlvTag: com.android.internal.telephony.cat.ComprehensionTlvTag[] values()>','<com.android.server.am.ActivityManagerService: void setLockScreenShown(boolean)>','<android.view.GLES20RecordingCanvas$1: android.view.GLES20RecordingCanvas newInstance()>','<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>','<android.location.Country: void <init>(android.location.Country)>','<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void onSignalStrengthResult(android.os.AsyncResult)>','<android.media.AudioManager: int getLastAudibleStreamVolume(int)>','<com.android.server.location.GpsLocationProvider: boolean isEnabled()>','<android.widget.SpellChecker: int access$600(android.widget.SpellChecker)>','<android.os.Debug: void resetGlobalExternalFreedCount()>','<android.graphics.Rasterizer: void <init>()>','<com.android.server.am.BaseErrorDialog$1: void <init>(com.android.server.am.BaseErrorDialog)>','<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>','<com.android.server.am.BaseErrorDialog: void access$100(com.android.server.am.BaseErrorDialog,boolean)>','<android.view.animation.CycleInterpolator: float getInterpolation(float)>','<com.android.uiautomator.core.QueryController: java.lang.String access$202(com.android.uiautomator.core.QueryController,java.lang.String)>','<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>','<android.graphics.Canvas: void <init>(int)>','<com.android.internal.telephony.DataConnectionAc: java.util.Collection rspApnList(android.os.Message)>','<android.graphics.drawable.ScaleDrawable$ScaleState: void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources)>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat valueOf(java.lang.String)>','<com.android.internal.telephony.PhoneProxy: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>','<com.android.internal.telephony.gsm.GsmSMSDispatcher: void acknowledgeLastIncomingSms(boolean,int,android.os.Message)>','<android.nfc.NfcActivityManager$NfcActivityState: void <init>(android.nfc.NfcActivityManager,android.app.Activity)>','<com.android.server.net.NetworkStatsService$8: void onDataConnectionStateChanged(int,int)>','<android.widget.Editor$InputContentType: void <init>()>','<com.android.internal.app.ActionBarImpl: void removeOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>','<android.widget.ImageButton: void <init>(android.content.Context)>','<android.location.ILocationProvider$Stub$Proxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<com.android.internal.os.BatteryStatsImpl: void noteScanWifiLockReleasedFromSourceLocked(android.os.WorkSource)>','<android.content.ContentValues: int hashCode()>','<android.hardware.Camera: android.hardware.Camera$PictureCallback access$700(android.hardware.Camera)>','<android.server.BluetoothAdapterStateMachine: void access$2300(android.server.BluetoothAdapterStateMachine,boolean,android.bluetooth.IBluetoothStateChangeCallback)>','<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.telephony.sip.SipPhoneBase: void setDataRoamingEnabled(boolean)>','<android.view.accessibility.AccessibilityEvent: void recycle()>','<com.android.server.PreferredComponent: java.lang.String getParseError()>','<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)>','<android.net.http.Headers: void <clinit>()>','<android.net.LocalSocket: int getSendBufferSize()>','<android.content.pm.IPackageManager$Stub$Proxy: void setPackageStoppedState(java.lang.String,boolean,int)>','<android.media.MediaRouter$RouteGroup: void addRoute(android.media.MediaRouter$RouteInfo)>','<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>','<com.android.server.wm.WindowManagerService: boolean hasSystemNavBar()>','<android.os.BatteryStats: void <clinit>()>','<com.android.internal.telephony.BaseCommands: void registerForNumberInfo(android.os.Handler,int,java.lang.Object)>','<android.preference.Preference: void setLayoutResource(int)>','<com.android.internal.telephony.DataConnectionAc: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult updateLinkPropertiesDataCallStateSync(com.android.internal.telephony.DataCallState)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onSomePackagesChanged()>','<android.location.ILocationProvider$Stub$Proxy: long getStatusUpdateTime()>','<com.android.internal.widget.PointerLocationView$FasterStringBuilder: com.android.internal.widget.PointerLocationView$FasterStringBuilder append(int)>','<android.app.ActivityThread: void access$2100(android.app.ActivityThread,android.os.IBinder)>','<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>','<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>','<com.android.internal.telephony.sip.SipCommandInterface: void explicitCallTransfer(android.os.Message)>','<android.view.View: void setPaddingRelative(int,int,int,int)>','<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>','<android.media.effect.SingleFilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>','<com.android.server.ConnectivityService: boolean access$2702(com.android.server.ConnectivityService,boolean)>','<android.view.MotionEvent: boolean addBatch(android.view.MotionEvent)>','<android.webkit.WebView: void invokeZoomPicker()>','<android.widget.TextView$CharWrapper: java.lang.String toString()>','<android.webkit.WebIconDatabaseClassic: void access$300()>','<android.os.StrictMode: long access$1502(long)>','<android.text.util.Linkify$2: boolean acceptMatch(java.lang.CharSequence,int,int)>','<android.text.StaticLayout: int getEllipsisStart(int)>','<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<com.android.internal.widget.DigitalClock: android.os.Handler access$100(com.android.internal.widget.DigitalClock)>','<android.media.AudioService: boolean isSpeakerphoneOn()>','<android.media.AudioService: boolean access$5600(android.media.AudioService)>','<com.android.internal.telephony.RIL: void setCdmaSubscriptionSource(int,android.os.Message)>','<android.opengl.GLLogWrapper: void glMultMatrixx(java.nio.IntBuffer)>','<android.filterfw.io.TextGraphReader$ImportPackageCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean removeFakeWindowLocked(android.view.WindowManagerPolicy$FakeWindow)>','<android.widget.TextView: void onScrollChanged(int,int,int,int)>','<com.android.internal.telephony.PhoneProxy: void notifyDataActivity()>','<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<android.text.Layout: int getOffsetToLeftOf(int)>','<com.android.internal.policy.impl.KeyguardViewMediator$1: void onDeviceProvisioned()>','<android.view.ViewDebug$3: void run(java.lang.Object[])>','<android.content.BroadcastReceiver: void clearAbortBroadcast()>','<android.net.NetworkConfig: boolean isDefault()>','<android.webkit.ByteArrayBuilder: void <init>()>','<com.android.internal.telephony.sip.SipCommandInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>','<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>','<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>','<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder: void <init>()>','<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)>','<android.os.FileUtils: boolean sync(java.io.FileOutputStream)>','<android.graphics.drawable.LayerDrawable$LayerState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>','<android.view.ViewRootImpl: boolean ensureTouchMode(boolean)>','<android.os.storage.IMountShutdownObserver$Stub: android.os.IBinder asBinder()>','<android.filterfw.core.FrameFormat: boolean isReplaceableBy(android.filterfw.core.FrameFormat)>','<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>','<com.android.uiautomator.core.UiDevice$2: boolean apply(android.view.accessibility.AccessibilityEvent)>','<android.view.inputmethod.InputMethodManager$1: void setUsingInputMethod(boolean)>','<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,int)>','<android.widget.CheckedTextView: void <clinit>()>','<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>','<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>','<android.widget.ListView: int getFooterViewsCount()>','<android.content.IntentFilter: void setPriority(int)>','<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int,int)>','<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>','<android.media.AudioManager: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>','<android.filterfw.core.SimpleFrame: java.lang.String toString()>','<android.view.Surface: java.lang.String toString()>','<android.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)>','<android.animation.AnimatorSet: void setStartDelay(long)>','<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>','<android.provider.Downloads$Impl: void <clinit>()>','<com.android.server.LocationManagerService: com.android.server.LocationManagerService$LocationWorkerHandler access$200(com.android.server.LocationManagerService)>','<android.opengl.GLLogWrapper: void glStencilMask(int)>','<com.android.internal.widget.LockPatternUtils: void clearLock(boolean)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode: com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode valueOf(java.lang.String)>','<android.os.BatteryStats$HistoryItem: void writeDelta(android.os.Parcel,android.os.BatteryStats$HistoryItem)>','<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List)>','<android.provider.ContactsContract$CommonDataKinds$Event: int getTypeResource(java.lang.Integer)>','<android.net.http.RequestHandle: int getRedirectCount()>','<android.webkit.Plugin: void setName(java.lang.String)>','<android.app.ActivityThread: void handleDumpHeap(boolean,android.app.ActivityThread$DumpHeapData)>','<com.android.internal.widget.multiwaveview.GlowPadView: void setDirectionDescriptionsResourceId(int)>','<com.android.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>','<com.android.server.PowerManagerService: int access$300(com.android.server.PowerManagerService)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: void enter()>','<android.widget.HorizontalScrollView: void addView(android.view.View)>','<android.view.ViewGroup: void dispatchSetPressed(boolean)>','<com.android.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder$ItemInvoker)>','<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>','<android.os.IHardwareService$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>','<android.net.http.AndroidHttpClient: org.apache.http.HttpRequestInterceptor access$000()>','<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewClassic: void dismissZoomControl()>','<android.widget.ExpandableListView: int getPackedPositionChild(long)>','<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>','<android.content.res.XmlBlock$Parser: int next()>','<android.os.storage.IObbActionListener$Stub: void <init>()>','<android.view.inputmethod.InputMethodManager: void dispatchTrackballEvent(android.content.Context,int,android.view.MotionEvent,com.android.internal.view.IInputMethodCallback)>','<com.android.internal.app.ActionBarImpl$TabImpl: int getPosition()>','<com.android.uiautomator.core.QueryController: void clearLastTraversedText()>','<android.media.MediaRouter$SimpleCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo)>','<android.os.IPowerManager$Stub$Proxy: android.os.IBinder asBinder()>','<android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData: void set(android.widget.RemoteViews,long,boolean)>','<android.net.NetworkQuotaInfo$1: android.net.NetworkQuotaInfo[] newArray(int)>','<android.app.WallpaperManager$Globals: void <init>(android.os.Looper)>','<android.database.sqlite.SQLiteCursor: int getCount()>','<com.android.internal.statusbar.StatusBarNotification: boolean isOngoing()>','<android.database.CursorWrapper: short getShort(int)>','<android.widget.RemoteViews: void setIsWidgetCollectionChild(boolean)>','<com.android.internal.telephony.cat.SelectItemResponseData: void <init>(int)>','<android.bluetooth.IBluetoothPbap$Stub: android.bluetooth.IBluetoothPbap asInterface(android.os.IBinder)>','<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>','<android.net.LinkProperties: int describeContents()>','<android.view.ViewTreeObserver: void dispatchOnGlobalFocusChange(android.view.View,android.view.View)>','<android.util.DisplayMetrics: void <clinit>()>','<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>','<android.view.HardwareRenderer$Gl20Renderer: boolean safelyRun(java.lang.Runnable)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)>','<com.android.vcard.VCardParserImpl_V21: void handleLanguage(com.android.vcard.VCardProperty,java.lang.String)>','<android.net.DhcpStateMachine$RunningState: void enter()>','<android.content.res.Configuration: void <init>(android.os.Parcel,android.content.res.Configuration$1)>','<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>','<android.net.Uri$PathSegmentsBuilder: void <init>()>','<android.net.wifi.p2p.WifiP2pDevice: void <clinit>()>','<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>','<android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>','<android.renderscript.RenderScript: int nMeshGetIndexCount(int)>','<android.content.SyncManager: boolean access$002(android.content.SyncManager,boolean)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void dispose()>','<android.widget.AbsSeekBar: void onProgressRefresh(float,boolean)>','<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)>','<android.server.BluetoothService: boolean setBondState(java.lang.String,int)>','<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void onChange(boolean)>','<android.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>','<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>','<android.os.IPowerManager$Stub$Proxy: void preventScreenOn(boolean)>','<com.android.internal.telephony.AdnRecord: java.lang.String toString()>','<android.renderscript.RenderScript: int nMeshGetVertexBufferCount(int)>','<android.net.wifi.WifiStateMachine: java.lang.String access$200(android.net.wifi.WifiStateMachine)>','<android.view.WindowManagerImpl: android.view.View removeViewLocked(int)>','<android.widget.PopupWindow: android.view.View$OnTouchListener access$800(android.widget.PopupWindow)>','<android.net.Uri$Builder: android.net.Uri$Builder authority(android.net.Uri$Part)>','<com.android.internal.telephony.PhoneProxy: int getCdmaEriIconIndex()>','<android.webkit.GeolocationPermissionsClassic$1: void handleMessage(android.os.Message)>','<com.android.internal.os.BatteryStatsImpl: void noteStartWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,int)>','<android.bluetooth.IBluetooth$Stub$Proxy: int getProfileConnectionState(int)>','<android.accessibilityservice.IAccessibilityServiceConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.opengl.GLLogWrapper: void glMultiTexCoord4f(int,float,float,float,float)>','<android.hardware.Camera$Parameters: void set(java.lang.String,int)>','<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>','<android.util.Base64: byte[] decode(byte[],int)>','<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>','<android.opengl.GLLogWrapper$PointerInfo: void <init>(android.opengl.GLLogWrapper)>','<android.net.EthernetDataTracker: java.lang.Object Clone()>','<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>','<android.database.CursorWindow: void <init>(android.os.Parcel,android.database.CursorWindow$1)>','<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForCdmaOtaStatusChange(android.os.Handler)>','<android.view.View$12: void <init>(java.lang.String)>','<android.database.DatabaseUtils$InsertHelper: void bind(int,byte[])>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$2: void <init>(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String)>','<android.os.PerformanceCollector: void startTiming(java.lang.String)>','<com.android.internal.view.InputConnectionWrapper$InputContextCallback: void <clinit>()>','<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)>','<android.net.MobileDataStateTracker: boolean setRadio(boolean)>','<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)>','<com.android.i18n.phonenumbers.Phonemetadata$NumberFormat: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat mergeFrom(com.android.i18n.phonenumbers.Phonemetadata$NumberFormat)>','<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>','<com.android.internal.widget.multiwaveview.TargetDrawable$DrawableWithAlpha: void setColorFilter(android.graphics.ColorFilter)>','<com.android.server.am.ActivityRecord: void windowsGone()>','<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()>','<android.net.wifi.p2p.WifiP2pService: android.net.DhcpStateMachine access$7302(android.net.wifi.p2p.WifiP2pService,android.net.DhcpStateMachine)>','<android.webkit.ZoomControlEmbedded: boolean isVisible()>','<com.android.internal.view.menu.ActionMenuItemView: void setCheckable(boolean)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void setImeWindowStatus(android.os.IBinder,int,int)>','<android.content.ClipboardManager: void setText(java.lang.CharSequence)>','<com.android.server.AppWidgetServiceImpl: com.android.internal.os.AtomicFile savedStateFile()>','<com.android.internal.widget.PointerLocationView$PointerState: void addTrace(float,float)>','<android.view.GestureDetector: android.view.GestureDetector$OnDoubleTapListener access$300(android.view.GestureDetector)>','<android.view.ViewRootImpl: void requestLayout()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: long access$000(com.android.internal.telephony.cdma.CdmaDataConnectionTracker)>','<android.content.pm.IPackageManager$Stub$Proxy: boolean isSafeMode()>','<android.view.ViewConfiguration: long getZoomControlsTimeout()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor: boolean isDeviceProvisioned()>','<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean isDataConnectivityPossible()>','<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager$OnPrimaryClipChangedListener)>','<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>','<android.widget.ResourceCursorAdapter: void setViewResource(int)>','<android.content.SyncResult$1: void <init>()>','<android.app.ApplicationPackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>','<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void disconnect()>','<com.android.server.wm.WindowManagerService$LayoutFields: float access$1300(com.android.server.wm.WindowManagerService$LayoutFields)>','<com.android.internal.telephony.BaseCommands: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>','<com.android.server.InputMethodManagerService$InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>','<com.android.internal.telephony.PhoneSubInfo: java.lang.String getIsimDomain()>','<android.os.FileObserver$ObserverThread: void stopWatching(int)>','<android.telephony.NeighboringCellInfo: int getCid()>','<android.net.wifi.WifiConfigStore: boolean forgetNetwork(int)>','<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>','<com.android.common.io.MoreCloseables: void closeQuietly(android.database.Cursor)>','<com.android.server.net.NetworkStatsService: android.os.PowerManager$WakeLock access$900(com.android.server.net.NetworkStatsService)>','<com.android.internal.os.ProcessStats$1: void <init>()>','<android.text.Layout: float getLineLeft(int)>','<android.widget.RemoteViews$SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>','<android.os.Bundle: short getShort(java.lang.String)>','<com.android.internal.telephony.BaseCommands: void unSetOnNITZTime(android.os.Handler)>','<android.preference.Preference: void <init>(android.content.Context)>','<com.android.internal.widget.SlidingTab$Slider: void show(boolean)>','<com.android.server.AttributeCache$Entry: void <init>(android.content.Context,android.content.res.TypedArray)>','<com.android.server.sip.SipSessionGroup$SipSessionImpl: java.lang.String toString()>','<android.server.BluetoothPanProfileHandler: java.util.List getPanDevicesMatchingConnectionStates(int[])>','<com.android.internal.telephony.BaseCommands: void registerForRilConnected(android.os.Handler,int,java.lang.Object)>','<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>','<android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3400(android.widget.AbsListView$RecycleBin)>','<android.view.accessibility.AccessibilityNodeInfoCache: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>','<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>','<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>','<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>','<com.android.internal.location.DummyLocationProvider: void setPowerRequirement(int)>','<android.media.IRemoteControlClient$Stub: void <init>()>','<android.accounts.AccountManager$2: java.lang.Boolean bundleToResult(android.os.Bundle)>','<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)>','<android.os.Bundle: java.lang.ClassLoader getClassLoader()>','<com.android.internal.widget.AbsActionBarView: int positionChildInverse(android.view.View,int,int,int)>','<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()>','<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>','<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>','<android.webkit.SearchBoxImpl: void setSuggestions(java.lang.String)>','<android.net.LinkCapabilities: boolean containsValue(java.lang.String)>','<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)>','<com.android.internal.policy.impl.KeyguardViewManager: void show()>','<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelock(int,int,java.lang.String,int)>','<android.webkit.WebViewInputDispatcher$TouchStream: void <init>(android.webkit.WebViewInputDispatcher$1)>','<android.text.SpannableStringBuilder: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,int,android.graphics.Paint)>','<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>','<android.widget.BaseAdapter: void notifyDataSetInvalidated()>','<com.android.server.usb.UsbSettingsManager$AccessoryFilter: void <init>(android.hardware.usb.UsbAccessory)>','<android.widget.LinearLayout: void setVerticalGravity(int)>','<android.os.WorkSource: void set(int)>','<android.view.accessibility.AccessibilityRecord: void setToIndex(int)>','<android.app.Dialog: android.view.View getCurrentFocus()>','<com.android.internal.telephony.PhoneFactory: void <clinit>()>','<android.net.wifi.p2p.WifiP2pService: void <clinit>()>','<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>','<android.media.MediaPlayer: void <init>()>','<android.text.StaticLayout: int getBottomPadding()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(com.android.server.NativeDaemonConnector$Command)>','<com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>','<android.app.BackStackRecord: void run()>','<com.android.internal.telephony.cdma.CdmaConnection: void finalize()>','<android.view.Gravity: boolean isVertical(int)>','<android.net.wifi.SupplicantStateTracker$DefaultState: boolean processMessage(android.os.Message)>','<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>','<android.graphics.RectF: float width()>','<com.android.internal.telephony.sip.SipPhoneBase: void setCellBroadcastSmsConfig(int[],android.os.Message)>','<com.android.server.WifiService: void setFrequencyBand(int,boolean)>','<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)>','<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.widget.ZoomButtonsController: boolean access$800(android.widget.ZoomButtonsController,android.view.KeyEvent)>','<android.net.http.RequestQueue: void <init>(android.content.Context)>','<android.widget.Spinner$DropDownAdapter: int getViewTypeCount()>','<android.widget.RemoteViews$BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>','<android.app.ContextImpl: java.lang.String getPackageName()>','<android.graphics.drawable.ClipDrawable$ClipState: void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources)>','<android.os.Debug: int getGlobalExternalFreedSize()>','<android.net.DhcpStateMachine$WaitBeforeStartState: void enter()>','<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>','<android.app.FragmentManagerState: void <init>(android.os.Parcel)>','<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>','<com.android.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>','<android.view.InputDevice: void <init>(android.os.Parcel,android.view.InputDevice$1)>','<android.view.View$CheckForTap: void run()>','<android.nfc.Tag$1: android.nfc.Tag[] newArray(int)>','<android.filterfw.core.NativeAllocatorTag: void <init>()>','<android.os.Bundle: void putLong(java.lang.String,long)>','<com.android.internal.telephony.ServiceStateTracker: void unregisterForNetworkAttached(android.os.Handler)>','<android.os.storage.IMountService$Stub$Proxy: int encryptStorage(java.lang.String)>','<android.ddm.DdmRegister: void registerHandlers()>','<android.webkit.WebViewClassic: android.graphics.drawable.Drawable access$800(android.webkit.WebViewClassic)>','<android.view.InputDevice$MotionRange: float access$500(android.view.InputDevice$MotionRange)>','<com.android.internal.telephony.IccSmsInterfaceManager: void <init>(com.android.internal.telephony.PhoneBase)>','<com.android.internal.widget.TransportControlView$Metadata: java.lang.String access$1000(com.android.internal.widget.TransportControlView$Metadata)>','<com.android.internal.policy.impl.LockScreen: void onConfigurationChanged(android.content.res.Configuration)>','<android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$000(android.net.wifi.WifiMonitor)>','<android.widget.TextView: boolean access$500(int)>','<com.android.internal.view.IInputMethodSession$Stub$Proxy: void <init>(android.os.IBinder)>','<android.app.LoaderManager: void enableDebugLogging(boolean)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder newBuilder()>','<android.net.sip.SipSession$Listener: void onRinging(android.net.sip.SipSession,android.net.sip.SipProfile,java.lang.String)>','<android.database.AbstractCursor$SelfContentObserver: void <init>(android.database.AbstractCursor)>','<com.android.server.MountService$VolumeState: void <init>(com.android.server.MountService)>','<android.nfc.NfcActivityManager: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>','<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)>','<com.android.internal.logging.AndroidHandler: void <init>()>','<android.os.storage.IObbActionListener$Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>','<android.bluetooth.BluetoothTetheringDataTracker: void startReverseTether(java.lang.String,android.bluetooth.BluetoothDevice)>','<android.view.IRotationWatcher$Stub$Proxy: void onRotationChanged(int)>','<android.media.AudioManager: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>','<com.android.server.BatteryService: int access$102(com.android.server.BatteryService,int)>','<android.net.wifi.WifiNative: boolean p2pGroupRemove(java.lang.String)>','<com.android.internal.telephony.cdma.CDMAPhone: void getCellBroadcastSmsConfig(android.os.Message)>','<com.android.internal.view.IInputContext$Stub: void <init>()>','<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>','<android.app.SharedPreferencesImpl$EditorImpl: android.content.SharedPreferences$Editor remove(java.lang.String)>','<com.android.internal.widget.ActionBarView: void initIndeterminateProgress()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void onClick(android.view.View)>','<com.android.server.wm.WindowManagerService: void dumpTokensLocked(java.io.PrintWriter,boolean)>','<android.provider.ContactsContract$StatusUpdates: void <clinit>()>','<android.app.Instrumentation$InstrumentationThread: void run()>','<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>','<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)>','<android.net.wifi.WifiStateMachine$TetheredState: boolean processMessage(android.os.Message)>','<android.view.IWindowManager$Stub$Proxy: void setAppGroupId(android.os.IBinder,int)>','<android.webkit.OverScrollGlow: void releaseAll()>','<android.os.Debug: void enableEmulatorTraceOutput()>','<com.android.internal.policy.impl.AccountUnlockScreen: com.android.internal.policy.impl.KeyguardScreenCallback access$200(com.android.internal.policy.impl.AccountUnlockScreen)>','<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()>','<android.filterfw.core.SimpleFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<com.android.internal.view.IInputMethodCallback$Stub$Proxy: void sessionCreated(com.android.internal.view.IInputMethodSession)>','<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>','<android.net.http.Connection: void processRequests(android.net.http.Request)>','<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>','<android.webkit.WebViewClassic: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>','<com.android.internal.telephony.cdma.CdmaCallTracker: boolean canTransfer()>','<android.os.StrictMode$5: boolean queueIdle()>','<com.android.internal.os.BatteryStatsImpl$Uid: long getVideoTurnedOnTime(long,int)>','<android.os.ICancellationSignal$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.webkit.WebViewClassic$InvokeListBox$Container: void <init>(android.webkit.WebViewClassic$InvokeListBox,android.webkit.WebViewClassic$1)>','<android.app.ITransientNotification$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.internal.telephony.RIL: void setSuppServiceNotifications(boolean,android.os.Message)>','<android.text.DynamicLayout$ChangeWatcher: void <init>(android.text.DynamicLayout)>','<android.app.Notification$Style: void internalSetBigContentTitle(java.lang.CharSequence)>','<com.android.server.pm.PackageManagerService: int access$3300(com.android.server.pm.PackageManagerService,java.lang.String,boolean,boolean,int)>','<android.view.Window: java.lang.String access$100(android.view.Window)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>','<android.util.AndroidException: void <init>()>','<android.content.ISyncAdapter$Stub$Proxy: android.os.IBinder asBinder()>','<android.bluetooth.BluetoothInputStream: void close()>','<android.os.IPowerManager$Stub: android.os.IPowerManager asInterface(android.os.IBinder)>','<com.android.internal.telephony.DataConnection$DcDefaultState: void exit()>','<android.net.wifi.WifiApConfigStore: void <clinit>()>','<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>','<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[],int,int)>','<com.android.internal.telephony.SMSDispatcher: void dispatchPdus(byte[][])>','<com.android.internal.telephony.BaseCommands: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>','<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>','<android.content.res.TypedArray: java.lang.CharSequence getText(int)>','<android.widget.EditText: void extendSelection(int)>','<com.android.server.InputMethodManagerService: java.util.HashMap access$1700(com.android.server.InputMethodManagerService)>','<android.view.View: boolean isPressed()>','<android.widget.ExpandableListConnector$GroupMetadata: void <clinit>()>','<android.widget.CompoundButton: void <init>(android.content.Context)>','<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()>','<android.widget.ZoomControls: void setZoomSpeed(long)>','<android.graphics.RectF: boolean contains(float,float,float,float)>','<com.android.internal.util.BitwiseInputStream: int read(int)>','<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>','<com.android.internal.telephony.sip.SipPhone: boolean isDataConnectivityPossible()>','<android.view.MotionEvent$PointerCoords: float getAxisValue(int)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: void normalize(java.lang.StringBuilder)>','<com.android.server.location.GpsLocationProvider: boolean meetsCriteria(android.location.Criteria)>','<android.view.VelocityTracker$1: void onAcquired(android.view.VelocityTracker)>','<android.location.Location: float distanceTo(android.location.Location)>','<com.android.internal.telephony.sip.SipPhone$SipCall: void unhold()>','<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsSummaryDev()>','<com.android.internal.telephony.cat.TextAlignment: com.android.internal.telephony.cat.TextAlignment fromInt(int)>','<com.android.internal.policy.impl.PhoneWindowManager: int focusChangedLw(android.view.WindowManagerPolicy$WindowState,android.view.WindowManagerPolicy$WindowState)>','<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>','<com.android.internal.util.FileRotator: void <init>(java.io.File,java.lang.String,long,long)>','<android.server.search.SearchManagerService$MyPackageMonitor: void <init>(android.server.search.SearchManagerService)>','<android.database.CursorWrapper: void deactivate()>','<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>','<android.content.BroadcastReceiver: void setOrderedHint(boolean)>','<android.media.AudioSystem: void <init>()>','<com.android.server.MountService$DefaultContainerConnection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.internal.telephony.PhoneProxy: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>','<android.filterfw.core.SerializedFrame: void <init>(android.filterfw.core.FrameFormat,android.filterfw.core.FrameManager)>','<com.android.server.sip.SipSessionListenerProxy: void onCallEstablished(android.net.sip.ISipSession,java.lang.String)>','<com.android.internal.telephony.DataConnectionAc: void reqRemomveApnContext(com.android.internal.telephony.ApnContext)>','<com.android.internal.widget.TransportControlView: boolean providesClock()>','<com.android.vcard.exception.VCardInvalidLineException: void <init>()>','<android.os.RemoteCallbackList: void kill()>','<android.hardware.input.IInputManager$Stub: void <init>()>','<android.webkit.WebSettingsClassic: void setWorkersEnabled(boolean)>','<android.view.IWindowManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.media.MediaRouter$RouteInfo: void requestUpdateVolume(int)>','<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>','<android.opengl.GLLogWrapper: void glDeleteBuffers(int,int[],int)>','<com.android.internal.widget.ActionBarView: void setContextView(com.android.internal.widget.ActionBarContextView)>','<com.android.internal.view.BaseIWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>','<android.app.Dialog: boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface$OnCancelListener,android.content.DialogInterface$OnDismissListener)>','<com.android.internal.telephony.sip.SipPhone: android.content.Context access$400(com.android.internal.telephony.sip.SipPhone)>','<android.util.XmlPullAttributes: java.lang.String getClassAttribute()>','<android.net.EthernetDataTracker$1: void run()>','<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void <init>(android.os.IBinder)>','<android.net.wifi.WifiNative: boolean startFilteringMulticastV6Packets()>','<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<com.android.internal.telephony.IccCardStatus$CardState: void <clinit>()>','<android.webkit.ZoomManager: float getMaxZoomScale()>','<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>','<com.android.internal.telephony.gsm.SmsCbHeader: int getDataCodingScheme()>','<android.text.TextLine: float metrics(android.graphics.Paint$FontMetricsInt)>','<android.database.AbstractCursor: int getPosition()>','<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$1500(com.android.internal.policy.impl.LockPatternKeyguardView,int,int)>','<com.android.internal.telephony.sip.SipCommandInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>','<android.view.View: int getAccessibilityWindowId()>','<android.net.wifi.WifiConfiguration: void <clinit>()>','<android.widget.ProgressBar: void setVisibility(int)>','<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>','<android.preference.PreferenceManager: android.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()>','<com.android.server.WifiService$LockList: void <init>(com.android.server.WifiService,com.android.server.WifiService$1)>','<android.net.wifi.WifiConfigStore: boolean isUsingStaticIp(int)>','<com.android.internal.telephony.CallManager: boolean startDtmf(char)>','<android.app.ActivityThread: java.lang.String getProfileFilePath()>','<android.nfc.INdefPushCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.am.ActivityManagerService$ServiceMap: void removeServiceByIntent(android.content.Intent$FilterComparison,int)>','<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>','<android.opengl.GLLogWrapper: void glBlendEquationSeparate(int,int)>','<android.opengl.GLES20: void <clinit>()>','<com.android.vcard.exception.VCardNotSupportedException: void <init>()>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void <init>(com.android.internal.telephony.IccCard,android.content.Context,com.android.internal.telephony.CommandsInterface)>','<com.android.server.am.ActivityManagerService: void setImmersive(android.os.IBinder,boolean)>','<android.view.animation.AlphaAnimation: void <init>(float,float)>','<com.android.server.am.ActivityStack: void cleanUpActivityServicesLocked(com.android.server.am.ActivityRecord)>','<android.os.StrictMode$VmPolicy: void <init>(int,java.util.HashMap,android.os.StrictMode$1)>','<com.android.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>','<com.android.internal.policy.impl.GlobalActions$SilentModeToggleAction: boolean showDuringKeyguard()>','<android.content.res.XmlBlock$Parser: void setInput(java.io.InputStream,java.lang.String)>','<android.net.wifi.WifiStateMachine: void access$6200(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>','<android.widget.TextView: int getImeOptions()>','<android.widget.TextView: void setMaxLines(int)>','<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>','<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>','<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>','<android.net.Uri$StringUri: void <init>(java.lang.String,android.net.Uri$1)>','<com.android.server.ConnectivityService: void access$900(com.android.server.ConnectivityService,android.net.NetworkInfo)>','<com.android.internal.policy.impl.PhoneWindowManager: void getContentInsetHintLw(android.view.WindowManager$LayoutParams,android.graphics.Rect)>','<android.bluetooth.BluetoothDeviceProfileState: android.os.Message access$6400(android.bluetooth.BluetoothDeviceProfileState)>','<android.graphics.drawable.TransitionDrawable: android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources)>','<android.view.GLES20Canvas: void drawRGB(int,int,int)>','<android.net.INetworkStatsService$Stub$Proxy: void setUidForeground(int,boolean)>','<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>','<android.widget.TextView: void setInputExtras(int)>','<android.net.wifi.WifiStateMachine: void access$2900(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.widget.TextView: boolean canCut()>','<android.net.wifi.WifiStateMachine$ConnectedState: void <init>(android.net.wifi.WifiStateMachine)>','<android.app.ContextImpl: boolean deleteDatabase(java.lang.String)>','<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>','<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>','<android.app.ContextImpl$19: java.lang.Object createService(android.app.ContextImpl)>','<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)>','<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>','<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>','<com.android.internal.policy.impl.KeyguardUpdateMonitor$1: void <init>(com.android.internal.policy.impl.KeyguardUpdateMonitor)>','<android.location.GpsStatus: int getMaxSatellites()>','<android.media.AudioSystem: void setErrorCallback(android.media.AudioSystem$ErrorCallback)>','<android.media.MediaRouter: void <init>(android.content.Context)>','<android.ddm.DdmHandleExit: void connected()>','<android.os.StrictMode$InstanceCountViolation: void <clinit>()>','<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)>','<android.app.ActivityThread: void access$1500(android.app.ActivityThread,android.app.ActivityThread$ReceiverData)>','<android.media.RingtoneManager: void setType(int)>','<android.server.BluetoothA2dpService: android.server.BluetoothService access$500(android.server.BluetoothA2dpService)>','<android.content.res.XmlBlock$Parser: void close()>','<com.android.internal.widget.ILockSettings$Stub: void <init>()>','<com.android.internal.policy.impl.SimUnlockScreen: void onResume()>','<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>','<android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser$Provider,int,boolean,int,int)>','<android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet: void clear()>','<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: boolean dispatchOnCreate()>','<com.android.server.InputMethodManagerService$3: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.am.CompatModeDialog: void updateControls()>','<android.inputmethodservice.InputMethodService$InputMethodImpl: void attachToken(android.os.IBinder)>','<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>','<android.renderscript.BaseObj: void setName(java.lang.String)>','<android.net.INetworkManagementEventObserver$Stub$Proxy: void limitReached(java.lang.String,java.lang.String)>','<com.android.server.WallpaperManagerService: boolean bindWallpaperComponentLocked(android.content.ComponentName,boolean,boolean,com.android.server.WallpaperManagerService$WallpaperData)>','<android.provider.Telephony$Mms$Outbox: void <init>()>','<android.view.ViewRootImpl: void dispatchUnhandledKey(android.view.KeyEvent)>','<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>','<com.android.server.wm.ViewServer: boolean start()>','<android.content.IContentService$Stub$Proxy: void setMasterSyncAutomatically(boolean)>','<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>','<com.android.internal.telephony.DataConnectionTracker: void onSetPolicyDataEnabled(boolean)>','<android.accounts.AccountAndUser: void <init>(android.accounts.Account,int)>','<android.preference.PreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void dump(java.io.FileDescriptor,java.io.PrintWriter)>','<com.android.server.NotificationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.graphics.Camera: void <init>()>','<android.webkit.WebViewClassic: void cutSelection()>','<android.content.pm.IPackageMoveObserver$Stub$Proxy: void packageMoved(java.lang.String,int)>','<android.webkit.DeviceMotionService: android.os.Handler access$400(android.webkit.DeviceMotionService)>','<com.android.server.DevicePolicyManagerService: boolean getCameraDisabled(android.content.ComponentName)>','<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>','<android.webkit.CookieManagerClassic: boolean allowFileSchemeCookiesImpl()>','<android.content.pm.PermissionInfo$1: android.content.pm.PermissionInfo createFromParcel(android.os.Parcel)>','<android.net.Uri$Builder: android.net.Uri build()>','<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>','<android.os.Parcel: void writeByteArray(byte[],int,int)>','<android.view.ContextThemeWrapper: int getThemeResId()>','<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>','<android.webkit.DeviceMotionService$2: void <init>(android.webkit.DeviceMotionService)>','<com.android.internal.telephony.DataConnectionTracker: void onSetUserDataEnabled(boolean)>','<com.android.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>','<android.hardware.input.IInputManager$Stub$Proxy: int[] getInputDeviceIds()>','<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int)>','<com.android.internal.telephony.cdma.CdmaLteUiccRecords: java.lang.String getPrlVersion()>','<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>','<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>','<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>','<android.media.AudioManager: boolean isBluetoothScoOn()>','<com.android.internal.widget.multiwaveview.GlowPadView: void setTargetResources(int)>','<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>','<android.opengl.GLLogWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>','<android.widget.Editor$SelectionActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>','<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)>','<android.webkit.WebViewCore$TextSelectionData: void <init>(int,int,int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: boolean processMessage(android.os.Message)>','<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void toggleRecentApps()>','<android.app.Activity: void setParent(android.app.Activity)>','<com.android.server.am.CompatModeDialog$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<android.view.Choreographer$FrameHandler: void <init>(android.view.Choreographer,android.os.Looper)>','<android.webkit.WebStorageClassic: void createUIHandler()>','<android.util.LongSparseArray: void <clinit>()>','<android.net.LinkProperties$1: android.net.LinkProperties[] newArray(int)>','<android.content.res.AssetManager: int createTheme()>','<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>','<com.android.internal.telephony.sip.SipPhone: boolean canConference()>','<android.speech.tts.TtsEngines: java.util.List getEngines()>','<android.app.SharedPreferencesImpl: void <clinit>()>','<android.graphics.MaskFilter: void <init>()>','<android.text.style.EasyEditSpan: void writeToParcel(android.os.Parcel,int)>','<com.android.internal.policy.impl.PasswordUnlockScreen$1: void onClick(android.view.View)>','<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>','<android.app.Dialog: void setOwnerActivity(android.app.Activity)>','<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>','<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>','<com.android.internal.view.IInputContext$Stub$Proxy: void beginBatchEdit()>','<android.app.backup.IBackupManager$Stub$Proxy: void <init>(android.os.IBinder)>','<android.webkit.WebViewClassic: int getScrollX()>','<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>','<android.net.sip.SipAudioCall: boolean isMuted()>','<android.accounts.AccountManagerService$UserAccounts: java.util.HashMap access$800(android.accounts.AccountManagerService$UserAccounts)>','<com.android.server.net.NetworkStatsService$2: void onReceive(android.content.Context,android.content.Intent)>','<android.widget.RemoteViews: android.widget.RemoteViews$BitmapCache access$200(android.widget.RemoteViews)>','<com.android.server.am.ServiceRecord: int getLastStartId()>','<com.android.internal.telephony.gsm.UsimPhoneBookManager: void reset()>','<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>','<com.android.internal.policy.impl.PhoneWindowManager$12: void <init>(com.android.internal.policy.impl.PhoneWindowManager)>','<android.telephony.TelephonyManager: int getLteOnCdmaMode()>','<android.view.ViewGroup: void dispatchStartTemporaryDetach()>','<android.net.wifi.WifiWatchdogStateMachine: boolean access$2600(android.net.wifi.WifiWatchdogStateMachine,int)>','<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>','<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>','<android.database.CursorToBulkCursorAdaptor: void close()>','<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>','<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void hideMySoftInput(android.os.IBinder,int)>','<com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc: com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String)>','<com.android.internal.os.storage.ExternalStorageFormatter: void onCreate()>','<android.net.ConnectivityManager: int untether(java.lang.String)>','<android.net.sip.SipSession$Listener: void <init>()>','<android.view.animation.Animation: boolean hasStarted()>','<com.android.server.pm.PackageSettingBase: void copyFrom(com.android.server.pm.PackageSettingBase)>','<android.bluetooth.IBluetoothHealthCallback$Stub$Proxy: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>','<android.net.wifi.WifiStateMachine: void access$15900(android.net.wifi.WifiStateMachine,com.android.internal.util.IState)>','<android.net.NetworkInfo: boolean isRoaming()>','<android.database.DatabaseUtils$InsertHelper: void bind(int,float)>','<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>','<com.android.internal.widget.PasswordEntryKeyboardHelper: void sendDownUpKeyEvents(int)>','<android.filterfw.core.FrameFormat: java.lang.String toString()>','<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>','<android.accounts.IAccountManagerResponse$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.internal.os.AtomicFile: java.io.FileOutputStream openAppend()>','<com.android.internal.policy.impl.PhoneWindowManager: boolean isScreenOnEarly()>','<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>','<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<android.content.ContentValues: java.lang.Object get(java.lang.String)>','<com.android.server.location.GpsXtraDownloader: byte[] downloadXtraData()>','<com.android.internal.location.DummyLocationProvider: void setRequiresNetwork(boolean)>','<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>','<android.location.ILocationProvider$Stub$Proxy: boolean requiresCell()>','<com.android.internal.telephony.cat.ComprehensionTlvTag: int value()>','<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()>','<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>','<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState access$4600(android.net.wifi.p2p.WifiP2pService$P2pStateMachine)>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.Object)>','<com.android.server.am.ActivityManagerService: void serviceDoneExecuting(android.os.IBinder,int,int,int)>','<com.android.internal.content.PackageHelper: boolean fixSdPermissions(java.lang.String,int,java.lang.String)>','<android.widget.GridView: void setColumnWidth(int)>','<android.os.IPowerManager$Stub$Proxy: void releaseWakeLock(android.os.IBinder,int)>','<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>','<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String toString()>','<android.ddm.DdmHandleAppName: void connected()>','<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>','<android.app.IActivityManager$ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>','<android.text.PackedIntVector: void deleteAt(int,int)>','<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>','<android.hardware.SensorManager$SensorEventPool: void <init>(int)>','<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo accessibilityFocusSearch(int,int)>','<com.android.internal.policy.impl.PhoneWindowManager: void sendCloseSystemWindows(java.lang.String)>','<android.content.pm.PackageItemInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<android.widget.RelativeLayout: void setHorizontalGravity(int)>','<android.telephony.TelephonyManager: java.lang.String getSimOperator()>','<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>','<android.webkit.SearchBoxImpl: void handleSuggestions(java.lang.String,java.util.List)>','<android.graphics.drawable.ScaleDrawable$ScaleState: int getChangingConfigurations()>','<android.content.res.CompatibilityInfo: void <init>(android.content.pm.ApplicationInfo,int,int,boolean)>','<android.net.NetworkStats$Entry: void <init>()>','<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.accounts.AccountAuthenticatorResponse$1: android.accounts.AccountAuthenticatorResponse[] newArray(int)>','<android.content.pm.RegisteredServicesCache: void finalize()>','<com.android.internal.telephony.test.ModelInterpreter: void sendUnsolicited(java.lang.String)>','<android.os.AsyncTask: void onCancelled(java.lang.Object)>','<android.widget.AbsSpinner$SavedState$1: android.widget.AbsSpinner$SavedState[] newArray(int)>','<android.webkit.SearchBoxImpl: void oncancel(android.webkit.SearchBox$SearchBoxListener)>','<android.view.View: void invalidate(int,int,int,int)>','<android.net.wifi.WifiStateMachine: android.net.wifi.p2p.WifiP2pManager access$1802(android.net.wifi.WifiStateMachine,android.net.wifi.p2p.WifiP2pManager)>','<com.android.server.am.ActivityManagerService: void finishSubActivity(android.os.IBinder,java.lang.String,int)>','<android.net.Uri: int compareTo(android.net.Uri)>','<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>','<android.os.ServiceManager: void initServiceCache(java.util.Map)>','<android.webkit.AutoCompletePopup: int access$000(android.webkit.AutoCompletePopup)>','<com.android.uiautomator.core.InteractionController: void setRotationRight()>','<com.android.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>','<android.view.ViewRootImpl$InvalidateOnAnimationRunnable: void addViewRect(android.view.View$AttachInfo$InvalidateInfo)>','<com.android.server.PowerManagerService$1: void onLooperPrepared()>','<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()>','<com.android.internal.telephony.sip.SipPhoneBase: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>','<com.android.internal.database.SortCursor: int getType(int)>','<android.opengl.GLLogWrapper: void glBindRenderbufferOES(int,int)>','<android.net.wifi.WifiStateMachine: void access$15200(android.net.wifi.WifiStateMachine,android.os.Message)>','<android.view.accessibility.IAccessibilityInteractionConnection$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.view.KeyCharacterMap: int getDeadChar(int,int)>','<android.filterfw.core.SyncRunner: void assertReadyToStep()>','<com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat: void <clinit>()>','<com.android.server.PowerManagerService: int access$5700(com.android.server.PowerManagerService,int)>','<android.net.IConnectivityManager$Stub$Proxy: int tether(java.lang.String)>','<android.net.wifi.WifiApConfigStore$InactiveState: void <init>(android.net.wifi.WifiApConfigStore)>','<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataActivity(com.android.internal.telephony.Phone)>','<com.android.server.NativeDaemonEvent: int getCode()>','<com.android.server.AppWidgetServiceImpl: void onUserRemoved()>','<android.media.RemoteControlClient: boolean access$100(int,int[])>','<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)>','<android.widget.AbsSeekBar: void <init>(android.content.Context)>','<android.content.SyncAdapterType$1: void <init>()>','<android.view.HardwareRenderer: void endTrimMemory()>','<android.filterfw.core.SerializedFrame: void releaseNativeAllocation()>','<android.net.wifi.IWifiManager$Stub$Proxy: void startScan(boolean)>','<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: com.android.i18n.phonenumbers.Phonemetadata$NumberFormat access$700(com.android.i18n.phonenumbers.PhoneNumberUtil,java.util.List,java.lang.String)>','<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph access$200(android.filterfw.io.TextGraphReader)>','<android.telephony.CellInfo: int describeContents()>','<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>','<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>','<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>','<android.graphics.Rect: java.lang.String toShortString()>','<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>','<com.android.internal.util.MemInfoReader: long getFreeSize()>','<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)>','<android.text.TextPaint: void setUnderlineText(int,float)>','<com.android.internal.policy.IFaceLockInterface$Stub$Proxy: void registerCallback(com.android.internal.policy.IFaceLockCallback)>','<android.view.View: void ensureInputFocusOnFirstFocusable()>','<com.android.internal.policy.impl.SimPukUnlockScreen: void <init>(android.content.Context,android.content.res.Configuration,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardScreenCallback,com.android.internal.widget.LockPatternUtils)>','<android.app.backup.IRestoreObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<android.view.KeyCharacterMap: void finalize()>','<com.android.internal.view.IInputConnectionWrapper: void commitCorrection(android.view.inputmethod.CorrectionInfo)>','<com.android.internal.telephony.gsm.GSMPhone: void notifyCallForwardingIndicator()>','<android.hardware.Camera$Face: void <init>()>','<com.android.server.connectivity.Tethering$TetherInterfaceSM: void access$2600(com.android.server.connectivity.Tethering$TetherInterfaceSM,com.android.internal.util.IState)>','<android.view.View: void postInvalidateOnAnimation()>','<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)>','<android.webkit.HTML5VideoFullScreen$VideoSurfaceView: void onMeasure(int,int)>','<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>','<android.os.BatteryStats$HistoryItem: void writeToParcel(android.os.Parcel,int)>','<android.content.res.AssetManager: int[] addAssetPaths(java.lang.String[])>','<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>','<android.renderscript.RenderScript: void nAllocationData1D(int,int,int,int,int[],int)>','<com.android.server.net.NetworkPolicyManagerService$5: void onReceive(android.content.Context,android.content.Intent)>','<android.text.style.AlignmentSpan$Standard: int describeContents()>','<android.bluetooth.BluetoothPan: void <init>(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener)>','<android.os.Debug: int getThreadGcInvocationCount()>','<com.android.server.wm.WindowStateAnimator$SurfaceTrace: void setSize(int,int)>','<android.widget.TextView: void setAccessibilityCursorPosition(int)>','<com.android.server.ConnectivityService: boolean getMobileDataEnabled()>','<com.android.server.net.NetworkStatsCollection: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.internal.policy.impl.LockScreen: boolean access$800(com.android.internal.policy.impl.LockScreen)>','<android.app.ActivityThread$ActivityClientRecord: boolean isPreHoneycomb()>','<android.view.animation.Transformation: java.lang.String toShortString()>','<android.net.NetworkInfo: android.net.NetworkInfo$State access$002(android.net.NetworkInfo,android.net.NetworkInfo$State)>','<android.accounts.AuthenticatorException: void <init>(java.lang.String)>','<android.app.ApplicationPackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>','<android.widget.TextView: int getFadeTop(boolean)>','<android.widget.Editor$SuggestionsPopupWindow: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>','<com.android.internal.view.IInputMethodManager$Stub$Proxy: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>','<android.preference.PreferenceManager: void setFragment(android.preference.PreferenceFragment)>','<android.widget.AbsListView: void access$3600(android.widget.AbsListView,android.view.View,boolean)>','<android.server.BluetoothA2dpService: boolean access$600(android.server.BluetoothA2dpService,java.lang.String)>','<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void <init>(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker)>','<com.android.internal.policy.impl.LockPatternKeyguardView: void access$1800(com.android.internal.policy.impl.LockPatternKeyguardView)>','<com.android.server.location.GpsLocationProvider: int access$1900(com.android.server.location.GpsLocationProvider)>','<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>','<android.content.res.XmlBlock$Parser: void require(int,java.lang.String,java.lang.String)>','<com.android.server.DevicePolicyManagerService: void wipeData(int)>','<com.android.internal.telephony.sip.SipCommandInterface: void setCallWaiting(boolean,int,android.os.Message)>','<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String getNddPrefixForRegion(java.lang.String,boolean)>','<android.webkit.ViewManager: void hideAll()>','<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)>','<android.inputmethodservice.InputMethodService$1: void onComputeInternalInsets(android.view.ViewTreeObserver$InternalInsetsInfo)>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>','<android.opengl.GLLogWrapper: void glClipPlanex(int,java.nio.IntBuffer)>','<com.android.internal.view.menu.MenuPopupHelper: boolean access$100(com.android.internal.view.menu.MenuPopupHelper)>','<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)>','<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>','<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>','<android.accounts.AccountManagerService$Session: void binderDied()>','<android.webkit.AccessibilityInjectorFallback: boolean onKeyEvent(android.view.KeyEvent)>','<com.android.internal.telephony.sip.SipCommandInterface: void setBandMode(int,android.os.Message)>','<com.android.internal.telephony.ATParseEx: void <init>(java.lang.String)>','<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>','<android.view.View: android.content.res.Resources getResources()>','<com.android.internal.policy.impl.KeyguardStatusViewManager: int access$602(com.android.internal.policy.impl.KeyguardStatusViewManager,int)>','<com.android.server.usb.UsbSettingsManager: void accessoryDetached(android.hardware.usb.UsbAccessory)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<android.widget.HorizontalScrollView: void <init>(android.content.Context)>','<android.filterfw.core.SimpleFrame: void releaseNativeAllocation()>','<android.hardware.SystemSensorManager$ListenerDelegate: android.hardware.SensorEventListener access$100(android.hardware.SystemSensorManager$ListenerDelegate)>','<com.android.internal.view.menu.ListMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>','<android.util.MathUtils: float max(int,int,int)>','<com.android.internal.policy.impl.PhoneWindowManager: void systemBooted()>','<android.opengl.GLLogWrapper: void glFogf(int,float)>','<com.android.internal.telephony.sip.SipPhoneBase: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>','<android.preference.PreferenceManager: void <init>(android.app.Activity,int)>','<com.android.internal.policy.impl.KeyguardStatusViewManager$StatusMode: void <clinit>()>','<android.webkit.ViewManager$ChildView: void <init>(android.webkit.ViewManager)>','<com.android.internal.policy.impl.FaceUnlock: void handleShowFaceUnlockView()>','<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: int access$2602(com.android.internal.telephony.cdma.CdmaDataConnectionTracker,int)>','<android.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)>','<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)>','<android.content.SyncStats: java.lang.String toString()>','<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>','<android.media.AudioService: java.lang.Object access$6600(android.media.AudioService)>','<android.net.NetworkQuotaInfo: void <init>(long,long,long)>','<android.graphics.Color: int argb(int,int,int,int)>','<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void <init>(com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.SMSDispatcher)>','<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>','<android.net.EthernetDataTracker: boolean access$102(boolean)>','<android.widget.SearchView$11: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>','<com.android.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>','<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>','<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: void onRecordLoaded(android.os.AsyncResult)>','<android.view.ScaleGestureDetector: long getTimeDelta()>','<android.content.SyncManager: void access$700(android.content.SyncManager,android.content.Intent)>','<android.content.pm.PackageParser$ActivityIntentInfo: void <init>(android.content.pm.PackageParser$Activity)>','<android.server.BluetoothDeviceProperties: java.util.Map addProperties(java.lang.String,java.lang.String[])>','<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>','<android.widget.GridView: void setAdapter(android.widget.Adapter)>','<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)>','<com.android.internal.telephony.test.LineReader: java.lang.String getNextLineCtrlZ()>','<android.app.FragmentManagerState$1: android.app.FragmentManagerState createFromParcel(android.os.Parcel)>','<android.app.ContextImpl: void <init>()>','<com.android.server.location.PassiveProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<android.widget.TextView: int getMaxLines()>','<com.android.server.input.InputManagerService$KeyboardLayoutDescriptor: com.android.server.input.InputManagerService$KeyboardLayoutDescriptor parse(java.lang.String)>','<android.opengl.GLLogWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>','<android.widget.TextView: void setHintTextColor(int)>','<android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex: void <init>(int,int)>','<android.app.Application: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>','<com.android.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>','<android.app.ActivityThread$CreateBackupAgentData: void <init>()>'}

@data
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,sink,'<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>'
false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.usb.UsbService: void <init>(android.content.Context)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.filterpacks.base.FrameSource: void performProcess(android.filterfw.core.FilterContext)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.GsmSMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finishFromChild(android.app.Activity)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.GSMPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.accessibilityservice.UiTestAutomationBridge: void disconnect()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.widget.TransportControlView$1: void <init>(com.android.internal.widget.TransportControlView)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.sip.SipPhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.util.Log: int println(int,java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<android.media.AudioService$ScoClient: void clearCount(boolean)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.sip.SipService$AutoRegistrationProcess: void onResponse(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>'
false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Connection dial(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,sink,'<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean endCall()>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.SMSDispatcher: void dispatch(android.content.Intent,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.MountService: int mountVolume(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.sip.SipPhone: void queryTTYMode(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.uiautomator.core.UiDevice: boolean isInWatcherContext()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.PhoneBase: void getPreferredNetworkType(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.graphics.Paint: float measureText(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,source,'<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.PhoneBase: void setCdmaSubscription(int,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.ServiceStateTracker: void enableSingleLocationUpdate()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.effects.CropEffect: void apply(int,int,int,int)>'
false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,source,'<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.sip.SipPhoneBase: void restoreSavedNetworkSelection(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,source,'<android.bluetooth.IBluetoothPbap$Stub$Proxy: android.bluetooth.BluetoothDevice getClient()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GSMPhone: void queryCdmaRoamingPreference(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,neithernor,'<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata: com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.effects.BlackWhiteEffect: void apply(int,int,int,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataConnectionDetached()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.backup.BackupAgentHelper: void unregisterReceiver(android.content.BroadcastReceiver)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.net.wifi.WifiManager: boolean reconnect()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,neithernor,'<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,source,'<android.bluetooth.BluetoothDevice: java.lang.String getName()>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finish()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finishFromChild(android.app.Activity)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.InputMethodManagerService$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.vcard.VCardParserImpl_V21: boolean parseItem()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMAPhone: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<android.media.AudioService$ScoClient: void incCount()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.vcard.VCardProperty: java.util.List getValueList()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getDeviceSvn()>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.view.IWindowManager$Stub$Proxy: void stopAppFreezingScreen(android.os.IBinder,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.AppWidgetService: void systemReady(boolean)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onRadioOffOrNotAvailable()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void chooseUpstreamType(boolean)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.PluginFullScreenHolder$CustomFrameLayout: boolean onKeyDown(int,android.view.KeyEvent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.wm.WindowManagerService$1: void acquired()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.view.IWindowManager$Stub$Proxy: void executeAppTransition()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,neithernor,'<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void exit()>'
false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.DevicePolicyManagerService: void wipeDataLocked(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.OperatorInfo: java.lang.String toString()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,source,'<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,true,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.content.ContentService: android.content.IContentService main(android.content.Context,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>'
false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.WallpaperManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,neithernor,'<android.server.BluetoothService: boolean removeBondInternal(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.PhoneBase: void queryCdmaRoamingPreference(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.WifiService: void clearBlacklist()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.PhoneSubInfo: java.lang.String getSubscriberId()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.policy.impl.PhoneWindowManager: void handleVolumeKey(int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.RIL: void getAvailableNetworks(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,source,'<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.nfc.tech.IsoDep: void close()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.ex.variablespeed.VariableSpeed: void prepare()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.cdma.CDMAPhone: void rejectCall()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.nfc.NdefRecord: int getByteLength()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcast(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,source,'<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ExpandableListActivity: void onContentChanged()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.cdma.CdmaCallTracker: void rejectCall()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void enter()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,neithernor,'<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.ITelephony$Stub$Proxy: boolean supplyPin(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,neithernor,'<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void chooseUpstreamType(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,sink,'<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.database.sqlite.SQLiteStatement: long executeInsert()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.MediaPlayer: void stop()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<android.nfc.INfcAdapter$Stub$Proxy: boolean disableNdefPush()>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.widget.TextView: boolean onPreDraw()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.hardware.Camera: android.hardware.Camera open()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,neithernor,'<com.android.server.sip.SipService: void setRegistrationListener(java.lang.String,android.net.sip.ISipSessionListener)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.PhoneBase: void getSmscAddress(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.PhoneBase: void queryTTYMode(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.PhoneBase: void exitEmergencyCallbackMode()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,sink,'<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromCenterVerticalAxis(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.telephony.SmsManager: boolean disableCellBroadcast(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.content.SyncManager: void <init>(android.content.Context,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.ShutdownActivity$1: void run()>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.view.HardwareCanvas: int callDrawGLFunction(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.net.NetworkUtils: java.net.InetAddress hexToInet6Address(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneOn()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.filterpacks.imageproc.RedEyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>'
false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.filterpacks.videosrc.MediaSource: void pauseVideo(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,neithernor,'<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: void exit()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.os.MessageQueue: boolean enqueueMessage(android.os.Message,long)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.WifiService: android.os.Messenger getWifiServiceMessenger()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.sip.SipPhone: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd(android.animation.Animator)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.accounts.IAccountManager$Stub$Proxy: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.widget.Editor: void finishBatchEdit(android.widget.Editor$InputMethodState)>'
false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebViewClassic$5: void onClick(android.content.DialogInterface,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.content.IContentService$Stub$Proxy: void setIsSyncable(android.accounts.Account,java.lang.String,int)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.os.IPowerManager$Stub$Proxy: void setAttentionLight(boolean,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finishActivity(int)>'
false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.test.ModelInterpreter: void <init>(java.net.InetSocketAddress)>'
false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.server.search.SearchManagerService$MyPackageMonitor: void onReceive(android.content.Context,android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,neithernor,'<android.bluetooth.BluetoothDeviceProfileState: void cancelCommand(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.ITelephony$Stub$Proxy: void answerRingingCall()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.vcard.VCardComposer: boolean init()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.cdma.CdmaConnection: long getCreateTime()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,neithernor,'<android.bluetooth.IBluetooth$Stub$Proxy: boolean startDiscovery()>'
false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.GSMPhone: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMALTEPhone: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Notification$Style: void setBuilder(android.app.Notification$Builder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,neithernor,'<com.android.server.ConnectivityService$FeatureUser: void binderDied()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,neithernor,'<android.net.sip.SipManager: void close(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.sip.SipPhoneBase: void setCdmaSubscription(int,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.cat.ToneSettings$1: com.android.internal.telephony.cat.ToneSettings[] newArray(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.GsmSMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GsmConnection: void cancelPostDial()>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.net.sip.SipSession$Listener: void onCallTransferring(android.net.sip.SipSession,java.lang.String)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finishActivity(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.sip.SipPhoneBase: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: java.lang.String getVoiceMailNumber()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,source,'<android.bluetooth.IBluetoothHeadset$Stub$Proxy: java.util.List getConnectedDevices()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.InputMethodManagerService$InputMethodSettings: void putSelectedSubtype(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.os.PowerManager: void reboot(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,sink,'<android.net.IConnectivityManager$Stub$Proxy: void setMobileDataEnabled(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.server.AlarmManagerService: void setTimeZone(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.view.IWindowManager$Stub$Proxy: void setNewConfiguration(android.content.res.Configuration)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.widget.AbsListView: boolean isTextFilterEnabled()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.PhoneBase: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMAPhone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.effects.StraightenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,sink,'<android.content.ContentService: void dump(java.io.FileDescriptor,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.accounts.IAccountManager$Stub$Proxy: void setPassword(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.sip.SipSessionGroup$SipSessionImpl$1: void run()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.PhoneBase: void setBandMode(int,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.RIL: void getSmscAddress(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.animation.ValueAnimator: void setDurationScale(float)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,source,'<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput: void onClick(android.view.View)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.os.storage.StorageManager: void disableUsbMassStorage()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.util.Log: int v(java.lang.String,java.lang.String)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.content.PackageMonitor: void onPackageChanged(java.lang.String,int,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,neithernor,'<com.android.server.ConnectivityService$FeatureUser: void <init>(com.android.server.ConnectivityService,int,java.lang.String,android.os.IBinder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.effects.AutoFixEffect: void apply(int,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.gsm.GSMPhone: void getSmscAddress(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)>'
false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.NsdService$NsdStateMachine$DisabledState: void enter()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.RIL: void setSmscAddress(java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finish()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.ProcessMap: java.lang.Object get(java.lang.String,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMALTEPhone: void setBandMode(int,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.cdma.CDMALTEPhone: void getSmscAddress(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.uiautomator.core.UiAutomatorBridge: void disconnect()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,sink,'<android.media.AudioService: void setMode(int,android.os.IBinder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,neithernor,'<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.am.ActivityManagerService: void wakingUp()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,neithernor,'<android.content.SyncManager$ActiveSyncContext: void <init>(android.content.SyncManager,android.content.SyncOperation,long,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.nfc.tech.NfcB: void close()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.NotificationManagerService: void <init>(android.content.Context,com.android.server.StatusBarManagerService,com.android.server.LightsService)>'
false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.net.wifi.WifiStateMachine$InitialState: void enter()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,sink,'<com.android.server.ConnectivityService: void setNetworkPreference(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.app.Activity: void setRequestedOrientation(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,neithernor,'<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.WallpaperManagerService: void clearWallpaper()>'
false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.cdma.CDMALTEPhone: void queryCdmaRoamingPreference(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CDMAPhone: void sendDtmf(char)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.test.mock.MockContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>'
false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.IccSmsInterfaceManager: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.ims.IsimUiccRecords: int fetchIsimRecords(com.android.internal.telephony.IccFileHandler,android.os.Handler)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,sink,'<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.server.WifiService: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.sip.SipPhone: void exitEmergencyCallbackMode()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.gsm.GSMPhone: void getOutgoingCallerIdDisplay(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.PhoneBase: void restoreSavedNetworkSelection(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.view.IWindowManager$Stub$Proxy: void reenableKeyguard(android.os.IBinder)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.internal.telephony.sip.SipPhone: void getSmscAddress(android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.vcard.VCardProperty: byte[] getByteValue()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.vcard.VCardParserImpl_V40: boolean parseItem()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,source,'<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,sink,'<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,source,'<android.bluetooth.BluetoothPan: boolean isTetheringOn()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.telephony.sip.SipPhoneBase: void queryCdmaRoamingPreference(android.os.Message)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.IWallpaperManager$Stub$Proxy: void setWallpaperComponent(android.content.ComponentName)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.internal.util.State: void exit()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.internal.telephony.AdnRecordCache: void updateAdnByIndex(int,com.android.internal.telephony.AdnRecord,int,java.lang.String,android.os.Message)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,sink,'<android.os.storage.IMountService$Stub$Proxy: void shutdown(android.os.storage.IMountShutdownObserver)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.effects.BitmapOverlayEffect: void apply(int,int,int,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.InputMethodManagerService$MyPackageMonitor: void onSomePackagesChanged()>'
false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,source,'<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,sink,'<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>'
false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,sink,'<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>'

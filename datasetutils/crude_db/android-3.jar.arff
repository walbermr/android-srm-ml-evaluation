@relation trainingmethods

@attribute '<Method is part of a PROTECTED class>' {true,false}
@attribute '<Method is part of class that ends with Factory>' {true,false}
@attribute '<Permission name is GLOBAL_SEARCH>' {true,false}
@attribute '<Parameter to sink method connect>' {true,false}
@attribute '<Permission name is READ_CALL_LOG>' {true,false}
@attribute '<Base name of class package name: webkit>' {true,false}
@attribute '<Permission name is READ_CALENDAR>' {true,false}
@attribute '<Parameter to sink method broadcast>' {true,false}
@attribute '<Permission name is READ_SMS>' {true,false}
@attribute '<Permission name is DEVICE_POWER>' {true,false}
@attribute '<Parameter to sink method setup>' {true,false}
@attribute '<Parameter type contains android.content.intent>' {true,false}
@attribute '<Permission name is WRITE_EXTERNAL_STORAGE>' {true,false}
@attribute '<Method name starts with dump>' {true,false}
@attribute '<Method name starts with onClick>' {true,false}
@attribute '<Method returns constant>' {true,false}
@attribute '<Parameter to sink method save>' {true,false}
@attribute '<Permission name is BLUETOOTH_ADMIN>' {true,false}
@attribute '<Parameter to sink method remove>' {true,false}
@attribute '<Parameter to sink method delete>' {true,false}
@attribute '<Method modifier is FINAL>' {true,false}
@attribute '<Value from source method writeToParcel to return>' {true,false}
@attribute '<Parameter type contains com.android.inputmethod.keyboard.key>' {true,false}
@attribute '<Permission name is GET_TASKS>' {true,false}
@attribute '<Permission name is RESTART_PACKAGES>' {true,false}
@attribute '<Permission name is SET_DEBUG_APP>' {true,false}
@attribute '<Return type is boolean>' {true,false}
@attribute '<Method name starts with get>' {true,false}
@attribute '<Method is part of class that ends with View>' {true,false}
@attribute '<Permission name is MODIFY_PHONE_STATE>' {true,false}
@attribute '<Parameter to sink method insert>' {true,false}
@attribute '<Method name starts with put>' {true,false}
@attribute '<Permission name is RECORD_AUDIO>' {true,false}
@attribute '<Method name starts with delete>' {true,false}
@attribute '<Permission name is ADD_VOICEMAIL>' {true,false}
@attribute '<Method is part of class android.app.ContentProvider>' {true,false}
@attribute '<Method is part of class that contains the name com.google.common.io>' {true,false}
@attribute '<Parameter to sink method create>' {true,false}
@attribute '<Method name starts with unregister>' {true,false}
@attribute '<Parameter type contains android.filterfw.core.filtercontext>' {true,false}
@attribute '<Method name starts with perform>' {true,false}
@attribute '<Permission name is CALL_PHONE>' {true,false}
@attribute '<Method is part of class android.content.Context>' {true,false}
@attribute '<Parameter to sink method update>' {true,false}
@attribute '<Method is part of class android.app.Activity>' {true,false}
@attribute '<Method name starts with enable>' {true,false}
@attribute '<Permission name is GET_ACCOUNTS>' {true,false}
@attribute '<Permission name is SYSTEM_ALERT_WINDOW>' {true,false}
@attribute '<Method modifier is PUBLIC>' {true,false}
@attribute '<Method is part of class that ends with Context>' {true,false}
@attribute '<Parameter to sink method notify>' {true,false}
@attribute '<Method name starts with do>' {true,false}
@attribute '<Method name starts with clear>' {true,false}
@attribute '<Method name starts with set>' {true,false}
@attribute '<Method is part of class android.app.Service>' {true,false}
@attribute '<Permission name is READ_CONTACTS>' {true,false}
@attribute '<Permission name is REBOOT>' {true,false}
@attribute '<Value from source method query to return>' {true,false}
@attribute '<Permission name is UPDATE_DEVICE_STATS>' {true,false}
@attribute '<Method is part of a STATIC class>' {true,false}
@attribute '<Method name starts with open>' {true,false}
@attribute '<Return type is void>' {true,false}
@attribute '<Permission name is USE_CREDENTIALS>' {true,false}
@attribute '<Return type is android.net.Uri>' {true,false}
@attribute '<Parameter type contains android.content.contentresolver>' {true,false}
@attribute '<Permission name is WRITE_USER_DICTIONARY>' {true,false}
@attribute '<Method modifier is STATIC>' {true,false}
@attribute '<Permission name is WRITE_SOCIAL_STREAM>' {true,false}
@attribute '<Method is part of a PUBLIC class>' {true,false}
@attribute '<Method name starts with disable>' {true,false}
@attribute '<Parameter type contains java.io.filedescriptor>' {true,false}
@attribute '<Method name starts with update>' {true,false}
@attribute '<Method name starts with close>' {true,false}
@attribute '<Parameter to sink method println>' {true,false}
@attribute '<Parameter to sink method com.android.internal.telephony.CommandsInterface>' {true,false}
@attribute '<Permission name is SET_WALLPAPER_COMPONENT>' {true,false}
@attribute '<Method name starts with apply>' {true,false}
@attribute '<Method name starts with remove>' {true,false}
@attribute '<Method name starts with add>' {true,false}
@attribute '<Value from method parameter to native method>' {true,false}
@attribute '<Permission name is RECEIVE_SMS>' {true,false}
@attribute '<Permission name is WRITE_SETTINGS>' {true,false}
@attribute '<Value from source method create to return>' {true,false}
@attribute '<Method has parameters>' {true,false}
@attribute '<Parameter to sink method onCreate>' {true,false}
@attribute '<Parameter type contains java.io.>' {true,false}
@attribute '<Method name starts with bind>' {true,false}
@attribute '<Return type is android.database.Cursor>' {true,false}
@attribute '<Permission name is AUTHENTICATE_ACCOUNTS>' {true,false}
@attribute '<Method name starts with send>' {true,false}
@attribute '<Base name of class package name: music>' {true,false}
@attribute '<Permission name is ACCESS_NETWORK_STATE>' {true,false}
@attribute '<Method name starts with is>' {true,false}
@attribute '<Permission name is CHANGE_WIFI_STATE>' {true,false}
@attribute '<Parameter is interface>' {true,false}
@attribute '<Permission name is CALL_PRIVILEGED>' {true,false}
@attribute '<Method name ends with Messenger>' {true,false}
@attribute '<Return type is java.util.Map>' {true,false}
@attribute '<Method is part of class android.content.ContentResolver>' {true,false}
@attribute '<Permission name is WRITE_SMS>' {true,false}
@attribute '<Permission name is READ_SOCIAL_STREAM>' {true,false}
@attribute '<Base name of class package name: accounts>' {true,false}
@attribute '<Permission name is KILL_BACKGROUND_PROCESSES>' {true,false}
@attribute '<Method name starts with <init>>' {true,false}
@attribute '<Method is part of class that ends with Service>' {true,false}
@attribute '<Parameter to sink method set>' {true,false}
@attribute '<Parameter to sink method write>' {true,false}
@attribute '<Parameter type contains com.google.common.io>' {true,false}
@attribute '<Permission name is VIBRATE>' {true,false}
@attribute '<Parameter to sink method adjust>' {true,false}
@attribute '<Value from source method obtainMessage to return>' {true,false}
@attribute '<Method is thread runner>' {true,false}
@attribute '<Base name of class package name: io>' {true,false}
@attribute '<Permission name is WRITE_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Method is part of an anonymous class>' {true,false}
@attribute '<Parameter type contains android.content.context>' {true,false}
@attribute '<Method is part of a ABSTRACT class>' {true,false}
@attribute '<Parameter to sink method dump>' {true,false}
@attribute '<Permission name is SEND_SMS>' {true,false}
@attribute '<Permission name is WAKE_LOCK>' {true,false}
@attribute '<Permission name is READ_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Method name starts with handle>' {true,false}
@attribute '<Method name starts with supply>' {true,false}
@attribute '<Method is part of class that ends with Loader>' {true,false}
@attribute '<Permission name is CAMERA>' {true,false}
@attribute '<Parameter to sink method sync>' {true,false}
@attribute '<Parameter to sink method enqueue>' {true,false}
@attribute '<Value from source method is to return>' {true,false}
@attribute '<Value from source method get to return>' {true,false}
@attribute '<Parameter type contains android.database.cursor>' {true,false}
@attribute '<Value from method get to sink method>' {true,false}
@attribute '<Parameter to sink method bind>' {true,false}
@attribute '<Method name starts with request>' {true,false}
@attribute '<Method is part of a PRIVATE class>' {true,false}
@attribute '<Parameter to sink method restore>' {true,false}
@attribute '<Parameter to sink method start>' {true,false}
@attribute '<Permission name is ACCESS_FINE_LOCATION>' {true,false}
@attribute '<Parameter to sink method disable>' {true,false}
@attribute '<Parameter to sink method enable>' {true,false}
@attribute '<Parameter to sink method dispatch>' {true,false}
@attribute '<Method name starts with query>' {true,false}
@attribute '<Permission name is MODIFY_AUDIO_SETTINGS>' {true,false}
@attribute '<Method is part of a FINAL class>' {true,false}
@attribute '<Permission name is READ_EXTERNAL_STORAGE>' {true,false}
@attribute '<Method name starts with note>' {true,false}
@attribute '<Parameter to sink method replace>' {true,false}
@attribute '<Method is part of class that ends with Manager>' {true,false}
@attribute '<Method is part of class android.app.BroadcastReceiver>' {true,false}
@attribute '<Permission name is DISABLE_KEYGUARD>' {true,false}
@attribute '<Method name starts with process>' {true,false}
@attribute '<Return type is int>' {true,false}
@attribute '<Permission name is STOP_APP_SWITCHES>' {true,false}
@attribute '<Permission name is CHANGE_CONFIGURATION>' {true,false}
@attribute '<Permission name is ACCESS_COARSE_LOCATION>' {true,false}
@attribute '<Parameter type contains event>' {true,false}
@attribute '<Permission name is BROADCAST_STICKY>' {true,false}
@attribute '<Parameter to sink method perform>' {true,false}
@attribute 'Method starting with \'insert\' invoked' {true,false}
@attribute '<Parameter to abstract sink>' {true,false}
@attribute '<Permission name is ACCESS_WIFI_STATE>' {true,false}
@attribute '<Method name starts with load>' {true,false}
@attribute '<Return type is byte[]>' {true,false}
@attribute '<Permission name is SET_WALLPAPER>' {true,false}
@attribute '<Method is lone getter or setter>' {true,false}
@attribute '<Permission name is NFC>' {true,false}
@attribute '<Permission name is READ_SYNC_STATS>' {true,false}
@attribute '<Permission name is READ_SYNC_SETTINGS>' {true,false}
@attribute '<Method starts with on and has void/bool return type>' {true,false}
@attribute '<Method name starts with register>' {true,false}
@attribute '<Permission name is BACKUP>' {true,false}
@attribute '<Permission name is READ_USER_DICTIONARY>' {true,false}
@attribute '<Permission name is SET_TIME_ZONE>' {true,false}
@attribute '<Method is part of class that contains the name java.io.>' {true,false}
@attribute '<Parameter to sink method show>' {true,false}
@attribute '<Parameter type contains android.net.uri>' {true,false}
@attribute '<Base name of class package name: telephony>' {true,false}
@attribute '<Method name starts with release>' {true,false}
@attribute '<Method name starts with toggle>' {true,false}
@attribute '<Method is part of class that ends with Handler>' {true,false}
@attribute '<Return type is android.os.Parcelable>' {true,false}
@attribute '<Permission name is MOUNT_UNMOUNT_FILESYSTEMS>' {true,false}
@attribute '<Parameter to sink method dial>' {true,false}
@attribute '<Permission name is CLEAR_APP_USER_DATA>' {true,false}
@attribute '<Method modifier is PROTECTED>' {true,false}
@attribute '<Permission name is READ_PHONE_STATE>' {true,false}
@attribute '<Method name starts with finish>' {true,false}
@attribute '<Permission name is MANAGE_ACCOUNTS>' {true,false}
@attribute '<Return type is java.util.List>' {true,false}
@attribute '<Method name starts with insert>' {true,false}
@attribute '<Permission name is MANAGE_APP_TOKENS>' {true,false}
@attribute '<Parameter to sink method put>' {true,false}
@attribute '<Method name starts with run>' {true,false}
@attribute '<Method name starts with notify>' {true,false}
@attribute '<Method name starts with restore>' {true,false}
@attribute '<Permission name is DUMP>' {true,false}
@attribute '<Permission name is WRITE_SYNC_SETTINGS>' {true,false}
@attribute '<Method name starts with dispatch>' {true,false}
@attribute '<Parameter type contains java.lang.string>' {true,false}
@attribute '<Parameter to sink method clear>' {true,false}
@attribute '<Permission name is WRITE_CONTACTS>' {true,false}
@attribute '<Parameter type contains writer>' {true,false}
@attribute '<Permission name is INTERNET>' {true,false}
@attribute '<Parameter type contains observer>' {true,false}
@attribute '<Permission name is RECEIVE_BOOT_COMPLETED>' {true,false}
@attribute '<Permission name is ACCESS_LOCATION_EXTRA_COMMANDS>' {true,false}
@attribute '<Parameter to sink method transact>' {true,false}
@attribute '<Return type is com.android.internal.telephony.Connection>' {true,false}
@attribute '<Permission name is USE_SIP>' {true,false}
@attribute '<Parameter to sink method send>' {true,false}
@attribute '<Method name starts with start>' {true,false}
@attribute '<Permission name is CHANGE_NETWORK_STATE>' {true,false}
@attribute '<Permission name is BLUETOOTH>' {true,false}
@attribute '<Permission name is WRITE_CALENDAR>' {true,false}
@attribute class {source,sink,neithernor}
@attribute id {'<android.app.Dialog: void onStart()>','<android.graphics.RectF: void readFromParcel(android.os.Parcel)>','<android.webkit.WebView: boolean canGoForward()>','<android.net.wifi.WifiInfo: void <init>()>','<java.net.Socket: void <init>(java.net.InetAddress,int,boolean)>','<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()>','<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>','<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>','<java.nio.LongBuffer: long[] array()>','<android.widget.TextView: void setPaintFlags(int)>','<android.content.res.Resources: android.content.res.Configuration getConfiguration()>','<android.os.Parcel: android.os.IBinder[] createBinderArray()>','<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>','<android.net.Uri: java.lang.String encode(java.lang.String)>','<android.graphics.Canvas: android.graphics.Matrix getMatrix()>','<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>','<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>','<java.util.Date: java.lang.String toLocaleString()>','<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>','<java.nio.Buffer: java.nio.Buffer flip()>','<java.net.URLConnection: java.security.Permission getPermission()>','<java.net.ServerSocket: void bind(java.net.SocketAddress)>','<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>','<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>','<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>','<android.app.Activity: void setProgressBarIndeterminate(boolean)>','<android.view.View: void refreshDrawableState()>','<java.lang.ClassCastException: void <init>()>','<java.util.Locale: boolean equals(java.lang.Object)>','<java.net.URI: int hashCode()>','<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>','<android.view.View: int getDrawingCacheQuality()>','<java.io.Writer: void write(char[])>','<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>','<java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>','<java.lang.Character: boolean isValidCodePoint(int)>','<android.content.pm.PermissionInfo: void <clinit>()>','<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>','<android.widget.TextView: android.graphics.Typeface getTypeface()>','<android.graphics.Bitmap: void <init>()>','<android.widget.TextView: java.lang.CharSequence getError()>','<android.view.ViewGroup: int getChildCount()>','<android.view.Surface: int describeContents()>','<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>','<android.graphics.Bitmap: int describeContents()>','<android.webkit.WebView: boolean zoomIn()>','<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>','<android.view.View: void setAnimation(android.view.animation.Animation)>','<android.net.wifi.WifiManager: int getWifiState()>','<android.text.TextPaint: void <init>()>','<android.webkit.WebView: void disablePlatformNotifications()>','<java.lang.Boolean: java.lang.String toString(boolean)>','<java.lang.Double: java.lang.String toString(double)>','<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>','<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<java.lang.Void: void <clinit>()>','<java.lang.Short: int hashCode()>','<android.view.Surface: void <init>()>','<java.lang.Error: void <init>(java.lang.String)>','<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>','<android.net.wifi.WifiInfo: int describeContents()>','<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)>','<android.content.ContentValues: void put(java.lang.String,java.lang.String)>','<android.content.IntentFilter: int countDataTypes()>','<android.content.IntentFilter$MalformedMimeTypeException: void <init>(java.lang.String)>','<android.graphics.Rect: boolean contains(android.graphics.Rect)>','<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>','<android.content.ContentValues: java.util.Set valueSet()>','<java.lang.Character: boolean isDefined(int)>','<android.net.Uri$Builder: void <init>()>','<android.view.View: void measure(int,int)>','<android.view.View: android.os.IBinder getWindowToken()>','<android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode[] values()>','<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>','<java.io.PrintWriter: boolean checkError()>','<android.net.wifi.SupplicantState: void <clinit>()>','<android.view.View: void setId(int)>','<android.view.Window: void setWindowAnimations(int)>','<java.net.DatagramSocket: void <init>(int,java.net.InetAddress)>','<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>','<android.location.Location: java.lang.String convert(double,int)>','<android.os.Bundle: long[] getLongArray(java.lang.String)>','<android.os.Parcel: void <clinit>()>','<java.net.URLConnection: boolean getDoOutput()>','<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>','<java.net.Socket: int getSendBufferSize()>','<android.app.ActivityManager: java.util.List getRunningAppProcesses()>','<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()>','<android.content.pm.ActivityInfo: void <clinit>()>','<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>','<android.widget.ListView: void setFooterDividersEnabled(boolean)>','<android.content.res.Configuration: boolean equals(java.lang.Object)>','<android.app.Activity: void onPanelClosed(int,android.view.Menu)>','<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>','<java.util.Locale: java.lang.String getVariant()>','<java.lang.reflect.Field: java.lang.String toGenericString()>','<android.widget.ListView: boolean performItemClick(android.view.View,int,long)>','<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>','<android.graphics.Path: boolean isEmpty()>','<java.lang.Double: double doubleValue()>','<android.text.style.ImageSpan: java.lang.String getSource()>','<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>','<android.view.Window: boolean requestFeature(int)>','<java.lang.Short: void <init>(short)>','<android.view.View: void setTag(java.lang.Object)>','<android.view.inputmethod.ExtractedTextRequest: void <clinit>()>','<android.app.ActivityManager$ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>','<android.view.View: boolean isVerticalFadingEdgeEnabled()>','<android.graphics.Matrix: void mapVectors(float[])>','<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>','<android.view.ViewGroup: boolean canAnimate()>','<android.view.View: android.view.View findFocus()>','<java.net.URL: java.lang.String getHost()>','<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>','<android.app.Dialog: boolean isShowing()>','<android.app.Activity: void takeKeyEvents(boolean)>','<android.content.ContentResolver: void cancelSync(android.net.Uri)>','<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>','<java.lang.reflect.AccessibleObject: void <init>()>','<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>','<java.lang.String: java.lang.String valueOf(long)>','<java.util.UUID: int hashCode()>','<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>','<java.lang.Class: void <init>()>','<android.graphics.Rect: boolean contains(int,int)>','<java.lang.String: java.lang.String valueOf(double)>','<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>','<android.graphics.Rect: void <init>(int,int,int,int)>','<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>','<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>','<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>','<java.lang.Boolean: int compareTo(java.lang.Boolean)>','<android.graphics.Matrix: void set(android.graphics.Matrix)>','<java.lang.Long: boolean equals(java.lang.Object)>','<android.os.Message: android.os.Bundle peekData()>','<java.lang.String: void <clinit>()>','<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>','<java.lang.ThreadGroup: void interrupt()>','<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>','<android.database.DataSetObserver: void onInvalidated()>','<java.io.InputStream: void <init>()>','<android.graphics.Region$Op: android.graphics.Region$Op valueOf(java.lang.String)>','<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>','<android.content.Intent: boolean hasExtra(java.lang.String)>','<android.database.ContentObserver: void <init>(android.os.Handler)>','<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>','<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>','<java.lang.String: int lastIndexOf(int,int)>','<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>','<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>','<java.lang.Character: int getNumericValue(int)>','<android.view.View: void setSaveEnabled(boolean)>','<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>','<android.webkit.WebView$WebViewTransport: void setWebView(android.webkit.WebView)>','<android.os.Handler: void removeMessages(int,java.lang.Object)>','<android.os.Handler: void dump(android.util.Printer,java.lang.String)>','<java.lang.reflect.Method: java.lang.Object getDefaultValue()>','<java.io.File: boolean exists()>','<android.webkit.JsResult: void cancel()>','<java.net.URLStreamHandler: int getDefaultPort()>','<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>','<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>','<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>','<android.view.View: void requestLayout()>','<java.lang.Character: boolean isLetterOrDigit(int)>','<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>','<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>','<android.content.res.Resources: int getDimensionPixelSize(int)>','<org.apache.http.util.ByteArrayBuffer: int byteAt(int)>','<android.view.MotionEvent: float getHistoricalSize(int)>','<java.net.URLStreamHandler: void <init>()>','<android.view.View: android.content.Context getContext()>','<android.net.DhcpInfo: java.lang.String toString()>','<android.content.Intent: android.os.Bundle getExtras()>','<android.view.WindowManager$LayoutParams: void <init>()>','<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>','<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue$IdleHandler)>','<android.app.Activity: android.view.WindowManager getWindowManager()>','<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.provider.Browser: void clearHistory(android.content.ContentResolver)>','<android.database.sqlite.SQLiteDatabase: void beginTransaction()>','<java.lang.StringBuffer: void ensureCapacity(int)>','<android.view.View: boolean isHapticFeedbackEnabled()>','<android.text.Editable$Factory: android.text.Editable$Factory getInstance()>','<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>','<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>','<java.lang.ThreadGroup: boolean allowThreadSuspension(boolean)>','<android.content.pm.PermissionGroupInfo: void <init>()>','<android.net.wifi.WifiManager: java.util.List getScanResults()>','<java.io.PrintStream: void print(int)>','<android.os.Message: android.os.Bundle getData()>','<android.database.sqlite.SQLiteProgram: void bindNull(int)>','<java.net.URLConnection: int getConnectTimeout()>','<java.lang.Thread: java.lang.String toString()>','<android.location.LocationManager: java.util.List getAllProviders()>','<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>','<android.location.Location: int describeContents()>','<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>','<android.content.res.Resources: java.lang.String getResourceName(int)>','<android.location.Location: void setTime(long)>','<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>','<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)>','<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>','<android.graphics.Paint: android.graphics.Typeface getTypeface()>','<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region$Op)>','<android.widget.TextView: void cancelLongPress()>','<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>','<java.nio.IntBuffer: int[] array()>','<java.lang.NoSuchFieldError: void <init>(java.lang.String)>','<android.content.pm.ApplicationInfo: void <init>()>','<android.telephony.TelephonyManager: int getPhoneType()>','<android.app.ExpandableListActivity: void setSelectedGroup(int)>','<java.net.DatagramSocket: void disconnect()>','<java.util.AbstractCollection: boolean add(java.lang.Object)>','<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)>','<android.view.View: void setPressed(boolean)>','<android.app.ActivityManager$RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>','<java.lang.Double: java.lang.String toHexString(double)>','<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>','<java.nio.LongBuffer: void <init>()>','<android.webkit.WebSettings: void setUseDoubleTree(boolean)>','<android.widget.TextView: int getLineHeight()>','<android.widget.ListView: boolean canAnimate()>','<android.webkit.CallbackProxy: void setWebViewClient(android.webkit.WebViewClient)>','<android.os.Parcel: void writeBooleanArray(boolean[])>','<java.io.InputStream: int available()>','<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()>','<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>','<java.lang.String: java.lang.String valueOf(int)>','<android.widget.TextView$BufferType: void <clinit>()>','<android.graphics.Paint$Join: void <clinit>()>','<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>','<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>','<android.widget.AbsListView: void setFastScrollEnabled(boolean)>','<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>','<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>','<org.apache.http.message.BasicLineParser: void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>','<java.net.ServerSocket: java.net.Socket accept()>','<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>','<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>','<android.os.Handler: void removeMessages(int)>','<android.database.sqlite.SQLiteStatement: long executeInsert()>','<android.media.MediaPlayer: void stop()>','<android.graphics.Paint: boolean isSubpixelText()>','<android.text.Layout: int getOffsetToRightOf(int)>','<java.util.UUID: java.util.UUID randomUUID()>','<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>','<java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>','<android.view.KeyEvent: int getDeadChar(int,int)>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.graphics.Rect: int height()>','<android.graphics.RectF: void offsetTo(float,float)>','<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>','<java.net.Socket: void setReuseAddress(boolean)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[],int,int)>','<android.graphics.Rect: boolean intersects(int,int,int,int)>','<android.graphics.Path: void finalize()>','<java.net.Socket: void shutdownInput()>','<android.view.View: void playSoundEffect(int)>','<java.nio.IntBuffer: int hashCode()>','<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>','<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>','<android.view.ViewGroup: void clearFocus()>','<java.nio.Buffer: java.nio.Buffer reset()>','<java.security.cert.Certificate: boolean equals(java.lang.Object)>','<android.view.WindowManager$LayoutParams: boolean mayUseInputMethod(int)>','<java.lang.IllegalAccessException: void <init>()>','<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>','<android.app.Activity: void openContextMenu(android.view.View)>','<java.nio.LongBuffer: java.nio.LongBuffer wrap(long[],int,int)>','<android.graphics.RectF: void union(float,float,float,float)>','<java.lang.Double: long longValue()>','<android.widget.TextView: void setLinkTextColor(int)>','<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView$RecyclerListener)>','<java.net.URL: java.lang.Object getContent()>','<java.util.AbstractList: java.util.List subList(int,int)>','<android.view.Window: void makeActive()>','<java.util.Locale: java.lang.String getLanguage()>','<java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>','<android.content.res.Resources: android.content.res.AssetManager getAssets()>','<java.lang.IllegalStateException: void <init>(java.lang.String)>','<java.lang.Package: java.lang.String toString()>','<android.content.pm.PackageInfo: void <clinit>()>','<android.util.SparseArray: void remove(int)>','<java.lang.String: java.lang.String substring(int)>','<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>','<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>','<java.io.PrintStream: java.io.PrintStream printf(java.util.Locale,java.lang.String,java.lang.Object[])>','<android.content.Intent: java.lang.String toString()>','<android.location.Location: void setProvider(java.lang.String)>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>','<android.graphics.Typeface: void <clinit>()>','<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>','<android.net.http.SslCertificate$DName: java.lang.String getCName()>','<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>','<android.graphics.drawable.Drawable: boolean setState(int[])>','<android.webkit.WebSettings: void setSavePassword(boolean)>','<android.graphics.Region: int describeContents()>','<android.widget.AbsListView: boolean isTextFilterEnabled()>','<java.lang.reflect.AccessibleObject: boolean isAnnotationPresent(java.lang.Class)>','<java.lang.VirtualMachineError: void <init>()>','<android.view.KeyEvent: int getRepeatCount()>','<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>','<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>','<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)>','<java.lang.Character: boolean isDigit(char)>','<java.io.InputStream: long skip(long)>','<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>','<android.view.View: boolean postDelayed(java.lang.Runnable,long)>','<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>','<java.lang.AbstractMethodError: void <init>()>','<android.widget.ListView: int getMaxScrollAmount()>','<java.nio.FloatBuffer: boolean hasArray()>','<android.content.ContentValues: void clear()>','<java.util.UUID: int variant()>','<android.graphics.Rect: void setEmpty()>','<android.widget.TextView: void setGravity(int)>','<java.net.DatagramSocket: int getLocalPort()>','<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>','<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>','<android.widget.AbsListView: void reclaimViews(java.util.List)>','<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>','<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<java.lang.Character: boolean isUpperCase(int)>','<android.widget.ListView: boolean isItemChecked(int)>','<android.location.Location: float getBearing()>','<java.lang.UnknownError: void <init>()>','<android.widget.Scroller: void extendDuration(int)>','<android.widget.AdapterView: void removeView(android.view.View)>','<android.webkit.CallbackProxy: void onUnhandledKeyEvent(android.view.KeyEvent)>','<java.nio.DoubleBuffer: double[] array()>','<java.util.Date: void <init>()>','<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>','<java.lang.String: boolean contains(java.lang.CharSequence)>','<android.webkit.WebView: void pauseTimers()>','<android.view.ViewGroup: void measureChild(android.view.View,int,int)>','<android.view.View: android.view.animation.Animation getAnimation()>','<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>','<android.text.Layout: float getSpacingMultiplier()>','<java.lang.Long: int intValue()>','<java.lang.InterruptedException: void <init>()>','<android.view.AbsSavedState: void <clinit>()>','<java.net.URLConnection: boolean getDefaultUseCaches()>','<android.location.Location: void removeAccuracy()>','<java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)>','<java.security.ProtectionDomain: boolean implies(java.security.Permission)>','<java.lang.InternalError: void <init>()>','<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>','<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.widget.TextView: int getRightPaddingOffset()>','<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>','<java.nio.channels.spi.AbstractSelector: void close()>','<android.telephony.TelephonyManager: int getDataState()>','<java.lang.Character: void <clinit>()>','<android.view.KeyEvent: void <init>(int,int)>','<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>','<java.lang.ArrayStoreException: void <init>(java.lang.String)>','<java.io.File: boolean isAbsolute()>','<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>','<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>','<android.view.View: void setBackgroundColor(int)>','<java.net.SocketImpl: void setPerformancePreferences(int,int,int)>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>','<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int)>','<java.io.FilterOutputStream: void flush()>','<android.app.ActivityManager$MemoryInfo: int describeContents()>','<android.app.Activity: void onContextMenuClosed(android.view.Menu)>','<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>','<android.os.Binder: boolean isBinderAlive()>','<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>','<java.nio.channels.Selector: void <init>()>','<java.security.KeyException: void <init>(java.lang.String,java.lang.Throwable)>','<android.graphics.Region: void <init>()>','<android.app.Activity: void openOptionsMenu()>','<org.apache.http.message.BasicLineParser: void <init>()>','<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>','<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<java.lang.Byte: byte byteValue()>','<android.webkit.PluginList: void clear()>','<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>','<android.os.Looper: android.os.Looper getMainLooper()>','<java.nio.CharBuffer: int arrayOffset()>','<android.widget.TextView: int getTotalPaddingRight()>','<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>','<java.lang.Short: double doubleValue()>','<android.os.Parcel: void writeSerializable(java.io.Serializable)>','<java.util.Random: void nextBytes(byte[])>','<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>','<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>','<java.nio.channels.AsynchronousCloseException: void <init>()>','<android.app.LocalActivityManager: java.lang.String getCurrentId()>','<java.lang.Thread: void setDaemon(boolean)>','<java.lang.Float: byte byteValue()>','<java.lang.StringBuffer: java.lang.StringBuffer append(int)>','<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>','<android.app.PendingIntent$CanceledException: void <init>(java.lang.Exception)>','<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>','<android.widget.AbsListView: void requestLayout()>','<android.database.sqlite.SQLiteQuery: void bindDouble(int,double)>','<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>','<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>','<java.lang.Class: java.lang.Class forName(java.lang.String)>','<android.webkit.WebView: void reload()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])>','<java.nio.ByteBuffer: int arrayOffset()>','<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>','<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>','<android.view.View: void setDuplicateParentStateEnabled(boolean)>','<android.os.Handler: void removeCallbacks(java.lang.Runnable)>','<android.graphics.Matrix: boolean isIdentity()>','<android.graphics.Canvas: void finalize()>','<android.graphics.RectF: void set(android.graphics.Rect)>','<android.view.View: void setSelected(boolean)>','<android.util.SparseArray: int size()>','<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()>','<java.util.AbstractList: java.util.ListIterator listIterator(int)>','<android.location.Location: void distanceBetween(double,double,double,double,float[])>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer wrap(double[])>','<android.net.http.SslCertificate$DName: java.lang.String getDName()>','<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()>','<java.net.SocketImpl: java.net.InetAddress getInetAddress()>','<android.widget.TextView: int getInputType()>','<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>','<android.webkit.WebSettings: void setPluginsEnabled(boolean)>','<android.content.ContentProvider: android.content.Context getContext()>','<android.graphics.Canvas: void setViewport(int,int)>','<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>','<android.os.Bundle: boolean isEmpty()>','<java.lang.String: boolean equals(java.lang.Object)>','<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>','<java.lang.Long: long reverse(long)>','<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>','<android.view.View: void getLocationInWindow(int[])>','<android.widget.TextView: void setFilters(android.text.InputFilter[])>','<java.lang.Float: void <init>(float)>','<android.text.style.MetricAffectingSpan: void <init>()>','<java.lang.ThreadGroup: int getMaxPriority()>','<android.webkit.WebView: void onDetachedFromWindow()>','<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>','<android.view.MotionEvent: void recycle()>','<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>','<android.os.Parcel: void writeMap(java.util.Map)>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.content.Intent: void writeToParcel(android.os.Parcel,int)>','<android.widget.ListView: android.os.Parcelable onSaveInstanceState()>','<java.lang.StringBuffer: void setCharAt(int,char)>','<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.net.Uri: java.lang.String decode(java.lang.String)>','<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<org.apache.http.util.CharArrayBuffer: boolean isFull()>','<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>','<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>','<android.widget.ExpandableListView: void <init>(android.content.Context)>','<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>','<android.text.Layout: java.lang.CharSequence getText()>','<java.lang.Long: java.lang.String toString(long,int)>','<android.graphics.Canvas: void drawARGB(int,int,int,int)>','<org.apache.http.message.ParserCursor: void updatePos(int)>','<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>','<java.net.URLConnection: void setContentHandlerFactory(java.net.ContentHandlerFactory)>','<java.math.BigInteger: int getLowestSetBit()>','<android.content.IntentFilter: int countDataAuthorities()>','<java.nio.LongBuffer: int hashCode()>','<java.io.PrintWriter: void println(java.lang.String)>','<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>','<java.net.URI: boolean isAbsolute()>','<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>','<android.net.wifi.WifiManager: void <init>()>','<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>','<java.net.Socket: int getSoLinger()>','<android.view.animation.LayoutAnimationController: float getDelay()>','<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>','<android.webkit.WebView: void onAttachedToWindow()>','<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>','<java.security.cert.Certificate: java.lang.String getType()>','<java.lang.ThreadGroup: void checkAccess()>','<android.widget.AbsListView: int getTranscriptMode()>','<android.view.View: void onFinishInflate()>','<android.telephony.ServiceState: boolean getRoaming()>','<java.net.DatagramSocket: boolean getReuseAddress()>','<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>','<android.view.View: int getRight()>','<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>','<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>','<java.net.URLConnection: void setConnectTimeout(int)>','<java.nio.LongBuffer: int compareTo(java.nio.LongBuffer)>','<android.content.ContextWrapper: boolean stopService(android.content.Intent)>','<android.view.ViewGroup: void setPadding(int,int,int,int)>','<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>','<android.widget.ExpandableListView: boolean isGroupExpanded(int)>','<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>','<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>','<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)>','<android.graphics.Bitmap: int getWidth()>','<android.content.pm.ConfigurationInfo: java.lang.String toString()>','<android.view.ViewTreeObserver: void <init>()>','<java.security.cert.CertificateException: void <init>()>','<android.app.Dialog: void onContentChanged()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>','<java.io.Reader: void <init>(java.lang.Object)>','<android.webkit.Plugin: void setPath(java.lang.String)>','<android.util.SparseArray: int keyAt(int)>','<android.graphics.Matrix: void setValues(float[])>','<java.net.URLConnection: java.util.Map getRequestProperties()>','<java.nio.ByteBuffer: java.nio.ByteOrder order()>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>','<java.nio.LongBuffer: java.nio.LongBuffer allocate(int)>','<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>','<java.nio.DoubleBuffer: void <init>()>','<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>','<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>','<java.nio.channels.spi.AbstractInterruptibleChannel: void close()>','<android.widget.TextView: void onAttachedToWindow()>','<java.lang.Boolean: java.lang.String toString()>','<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>','<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>','<android.graphics.Matrix: void getValues(float[])>','<android.view.animation.LayoutAnimationController: void setDelay(float)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>','<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>','<android.widget.TextView: void setError(java.lang.CharSequence)>','<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.content.pm.ProviderInfo: void <clinit>()>','<java.io.IOException: void <init>(java.lang.String)>','<android.content.res.Resources: java.lang.String getQuantityString(int,int)>','<android.app.Activity: android.content.SharedPreferences getPreferences(int)>','<android.view.MotionEvent: void setAction(int)>','<android.widget.ListView: android.util.SparseBooleanArray getCheckedItemPositions()>','<android.content.ComponentName: java.lang.String flattenToShortString()>','<android.graphics.Picture: void <init>()>','<java.lang.StringBuffer: java.lang.StringBuffer reverse()>','<android.content.res.Configuration: void <init>(android.content.res.Configuration)>','<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>','<android.webkit.WebView: android.graphics.Bitmap getFavicon()>','<android.app.Activity: void stopManagingCursor(android.database.Cursor)>','<android.text.TextPaint: void set(android.text.TextPaint)>','<java.net.DatagramSocket: void setReceiveBufferSize(int)>','<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>','<android.app.ActivityManager$RunningServiceInfo: void <clinit>()>','<android.widget.Scroller: int getStartX()>','<android.webkit.CallbackProxy: android.webkit.WebBackForwardList getBackForwardList()>','<java.nio.Buffer: java.nio.Buffer clear()>','<android.view.View$BaseSavedState: void <clinit>()>','<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>','<java.net.URI: void <init>(java.lang.String)>','<android.net.wifi.WifiConfiguration$GroupCipher: void <init>()>','<android.view.ViewGroup: void onAnimationStart()>','<java.util.Locale: void <clinit>()>','<java.lang.Thread: void destroy()>','<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>','<java.math.BigInteger: void <init>(java.lang.String,int)>','<android.widget.TextView: void setTextSize(int,float)>','<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>','<java.util.AbstractList: int hashCode()>','<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>','<android.widget.TextView: void setFreezesText(boolean)>','<java.lang.Throwable: void <init>()>','<java.net.InetAddress: java.net.InetAddress getLocalHost()>','<org.apache.http.ParseException: void <init>(java.lang.String)>','<java.net.Proxy: java.net.Proxy$Type type()>','<java.lang.Short: void <init>(java.lang.String)>','<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>','<android.os.Looper: void <init>()>','<android.view.KeyEvent: void <clinit>()>','<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>','<android.widget.AbsoluteLayout: void <init>(android.content.Context)>','<java.lang.NegativeArraySizeException: void <init>(java.lang.String)>','<java.util.HashMap: java.lang.Object remove(java.lang.Object)>','<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>','<java.net.NetworkInterface: boolean equals(java.lang.Object)>','<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.content.ContextWrapper: java.io.File getCacheDir()>','<java.lang.reflect.Method: java.lang.String getName()>','<java.util.BitSet: java.util.BitSet get(int,int)>','<android.widget.ListView: void setItemsCanFocus(boolean)>','<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>','<android.webkit.WebSettings: int getMinimumFontSize()>','<android.text.Layout$Alignment: android.text.Layout$Alignment valueOf(java.lang.String)>','<android.view.inputmethod.CompletionInfo: int getPosition()>','<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>','<android.content.res.Resources: java.lang.String getString(int)>','<java.security.PermissionCollection: boolean isReadOnly()>','<android.view.MotionEvent: int getEdgeFlags()>','<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.database.sqlite.SQLiteProgram: void onAllReferencesReleasedFromContainer()>','<android.widget.TextView: void setMarqueeRepeatLimit(int)>','<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>','<android.widget.ExpandableListView: long getSelectedId()>','<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>','<android.widget.TextView: void onDraw(android.graphics.Canvas)>','<android.view.WindowManager$LayoutParams: int describeContents()>','<android.text.Layout: int getLineVisibleEnd(int)>','<java.lang.ThreadGroup: void suspend()>','<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>','<java.io.FileDescriptor: void <init>()>','<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>','<android.database.ContentObserver: void onChange(boolean)>','<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)>','<java.util.UUID: long node()>','<android.view.animation.LayoutAnimationController$AnimationParameters: void <init>()>','<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>','<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>','<android.graphics.Rect: int centerX()>','<android.webkit.Plugin: java.lang.String toString()>','<java.io.PrintWriter: void println()>','<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>','<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>','<org.apache.http.ProtocolVersion: boolean isComparable(org.apache.http.ProtocolVersion)>','<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>','<javax.security.auth.x500.X500Principal: byte[] getEncoded()>','<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read()>','<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>','<java.lang.Long: void <clinit>()>','<java.security.spec.ECPoint: int hashCode()>','<android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode[] values()>','<android.content.ContentValues: void put(java.lang.String,byte[])>','<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>','<java.net.DatagramPacket: void setLength(int)>','<java.lang.Package: boolean isSealed(java.net.URL)>','<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>','<java.nio.channels.FileChannel: java.nio.channels.FileLock lock()>','<android.app.ActivityGroup: void <init>(boolean)>','<android.view.WindowManager$LayoutParams: void <init>(android.os.Parcel)>','<android.view.View: void <init>(android.content.Context)>','<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>','<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void close()>','<java.security.GeneralSecurityException: void <init>(java.lang.String)>','<android.location.Location: void setBearing(float)>','<android.os.Message: android.os.Message obtain(android.os.Handler)>','<java.lang.Character: boolean isJavaIdentifierStart(char)>','<android.app.Activity: void setPersistent(boolean)>','<android.graphics.Path: void set(android.graphics.Path)>','<java.io.PrintWriter: void println(char)>','<java.lang.Class: boolean isArray()>','<android.content.res.TypedArray: void <init>()>','<java.util.Locale: java.lang.String getDisplayName()>','<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>','<java.nio.LongBuffer: java.nio.LongBuffer put(long[],int,int)>','<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>','<java.io.OutputStream: void close()>','<android.location.Location: double getLongitude()>','<android.widget.TextView: boolean onPreDraw()>','<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>','<android.media.MediaPlayer: void reset()>','<java.lang.Double: void <init>(java.lang.String)>','<java.security.cert.CertPath: java.lang.Object writeReplace()>','<android.view.animation.Animation: void setRepeatCount(int)>','<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>','<java.nio.channels.SelectionKey: boolean isAcceptable()>','<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>','<java.lang.NoSuchMethodError: void <init>(java.lang.String)>','<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>','<android.webkit.HttpAuthHandler: void cancel()>','<android.content.BroadcastReceiver: void abortBroadcast()>','<android.webkit.WebBackForwardList: int getSize()>','<android.util.SparseArray: void delete(int)>','<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>','<java.util.ArrayList: void clear()>','<android.util.DisplayMetrics: void setToDefaults()>','<android.widget.ExpandableListView: int getPackedPositionGroup(long)>','<android.os.Parcel: void readBinderArray(android.os.IBinder[])>','<java.lang.Integer: java.lang.String toString()>','<android.webkit.CallbackProxy: int getProgress()>','<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)>','<android.graphics.ColorFilter: void <init>()>','<android.widget.AdapterView: int getSelectedItemPosition()>','<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>','<android.graphics.drawable.Drawable: int getLevel()>','<java.net.ServerSocket: void setSoTimeout(int)>','<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>','<org.apache.http.util.CharArrayBuffer: boolean isEmpty()>','<java.lang.StringBuffer: void <init>(java.lang.String)>','<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>','<android.app.ActivityManager: java.util.List getRunningServices(int)>','<java.net.InetAddress: void <init>()>','<android.webkit.WebSettings: void setSupportZoom(boolean)>','<android.net.wifi.WifiConfiguration: java.lang.String toString()>','<android.widget.AbsListView$LayoutParams: void <init>(int,int)>','<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>','<java.util.ArrayList: int size()>','<android.hardware.Camera: void finalize()>','<android.widget.ListView: void setSelection(int)>','<android.content.Intent: float getFloatExtra(java.lang.String,float)>','<android.os.PowerManager$WakeLock: void release()>','<android.net.wifi.WifiManager$WifiLock: void acquire()>','<org.apache.http.util.ByteArrayBuffer: void append(int)>','<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>','<android.view.ViewGroup: int[] onCreateDrawableState(int)>','<android.view.inputmethod.EditorInfo: int describeContents()>','<android.util.SparseArray: void clear()>','<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>','<java.util.Locale: java.lang.String getDisplayCountry()>','<android.view.View$MeasureSpec: int getMode(int)>','<java.nio.channels.FileChannel$MapMode: java.lang.String toString()>','<android.os.Parcel: void writeArray(java.lang.Object[])>','<android.content.ContentValues: void putNull(java.lang.String)>','<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>','<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>','<android.widget.TextView: android.text.style.URLSpan[] getUrls()>','<android.os.Parcel: void writeIntArray(int[])>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>','<android.hardware.Camera: android.hardware.Camera open()>','<android.view.KeyEvent: int getMaxKeyCode()>','<java.nio.channels.FileLock: boolean overlaps(long,long)>','<java.util.Date: void setHours(int)>','<android.widget.AdapterView: int getLastVisiblePosition()>','<java.lang.Character: java.lang.Character valueOf(char)>','<android.app.LocalActivityManager: void dispatchStop()>','<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>','<android.content.res.ColorStateList: java.lang.String toString()>','<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>','<java.lang.Character: boolean isSpaceChar(int)>','<java.lang.Double: int compareTo(java.lang.Object)>','<android.telephony.TelephonyManager: java.lang.String getLine1Number()>','<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>','<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>','<android.content.Intent: byte getByteExtra(java.lang.String,byte)>','<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>','<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)>','<java.lang.AbstractStringBuilder: void setLength(int)>','<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>','<java.nio.channels.SelectionKey: java.lang.Object attachment()>','<java.nio.channels.DatagramChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.widget.TextView: void setTextSize(float)>','<android.text.Layout: int getParagraphRight(int)>','<java.io.FileInputStream: long skip(long)>','<java.nio.ByteBuffer: boolean hasArray()>','<java.util.Date: void setTime(long)>','<java.net.URLStreamHandler: int hashCode(java.net.URL)>','<java.nio.channels.SocketChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.widget.ListView: void setSelectionAfterHeaderView()>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>','<android.widget.ExpandableListView: long getSelectedPosition()>','<java.lang.Long: long rotateLeft(long,int)>','<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>','<android.view.View$MeasureSpec: java.lang.String toString(int)>','<android.telephony.ServiceState: void setStateOutOfService()>','<android.net.Uri: void <clinit>()>','<android.content.pm.ConfigurationInfo: void <clinit>()>','<java.io.File: long length()>','<android.telephony.ServiceState: java.lang.String toString()>','<android.view.inputmethod.EditorInfo: void <init>()>','<java.net.ServerSocket: void setReuseAddress(boolean)>','<java.lang.String: void <init>(char[],int,int)>','<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>','<android.view.MotionEvent: int describeContents()>','<android.graphics.Bitmap$Config: void <clinit>()>','<android.provider.Settings$Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>','<android.app.Activity: void setResult(int,android.content.Intent)>','<android.net.Uri: int compareTo(java.lang.Object)>','<android.util.AndroidException: void <init>(java.lang.Exception)>','<java.util.Locale: java.lang.String toString()>','<android.util.SparseBooleanArray: void <init>()>','<android.os.Bundle: float getFloat(java.lang.String)>','<android.net.wifi.WifiConfiguration$AuthAlgorithm: void <clinit>()>','<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)>','<java.lang.Byte: java.lang.String toString(byte)>','<java.util.UUID: int clockSequence()>','<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>','<java.math.BigInteger: int compareTo(java.math.BigInteger)>','<android.view.animation.Animation: float resolveSize(int,float,int,int)>','<android.content.ContextWrapper: void <init>(android.content.Context)>','<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>','<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>','<java.lang.Long: java.lang.String toString()>','<java.lang.UnknownError: void <init>(java.lang.String)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(java.nio.DoubleBuffer)>','<android.webkit.WebView: void debugDump()>','<android.view.MotionEvent: float getY()>','<android.text.style.URLSpan: int describeContents()>','<java.lang.Integer: byte byteValue()>','<java.net.URISyntaxException: java.lang.String getInput()>','<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)>','<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>','<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>','<android.graphics.Matrix: void setScale(float,float,float,float)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>','<android.widget.Scroller: int getDuration()>','<java.lang.ThreadGroup: void setDaemon(boolean)>','<java.io.PrintWriter: void println(java.lang.Object)>','<android.content.pm.ApplicationInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object removeAttribute(java.lang.String)>','<android.widget.TextView: android.text.method.KeyListener getKeyListener()>','<java.lang.ThreadGroup: java.lang.String toString()>','<java.io.File: boolean createNewFile()>','<java.lang.Float: java.lang.String toHexString(float)>','<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>','<android.view.View: int getMeasuredHeight()>','<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>','<java.util.AbstractList: void <init>()>','<android.graphics.Path$FillType: android.graphics.Path$FillType[] values()>','<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>','<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.CharArrayBuffer)>','<android.graphics.RectF: void setEmpty()>','<java.io.PrintStream: void flush()>','<java.io.OutputStream: void write(byte[],int,int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>','<java.lang.reflect.Field: void setLong(java.lang.Object,long)>','<android.location.Location: void setAccuracy(float)>','<android.widget.TextView: boolean isInputMethodTarget()>','<java.util.AbstractCollection: boolean remove(java.lang.Object)>','<java.util.Random: double nextGaussian()>','<android.util.AndroidException: void <init>(java.lang.String)>','<android.content.res.TypedArray: int getResourceId(int,int)>','<java.util.Random: long nextLong()>','<android.widget.TextView: java.lang.CharSequence getText()>','<java.nio.MappedByteBuffer: void <init>()>','<java.io.FileOutputStream: void <init>(java.lang.String)>','<android.hardware.Camera$Parameters: int getPictureFormat()>','<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>','<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>','<java.lang.InstantiationError: void <init>()>','<java.security.SignatureException: void <init>()>','<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>','<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>','<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>','<android.view.View: void computeScroll()>','<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>','<android.graphics.Bitmap: boolean isRecycled()>','<android.widget.AdapterView: android.view.View getEmptyView()>','<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>','<java.net.DatagramPacket: void <init>(byte[],int,int)>','<java.nio.channels.Pipe$SinkChannel: int validOps()>','<android.webkit.CallbackProxy: void onProgressChanged(int)>','<android.util.SparseBooleanArray: void append(int,boolean)>','<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.webkit.WebView: boolean pageUp(boolean)>','<java.net.NetworkInterface: java.lang.String getDisplayName()>','<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>','<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>','<android.os.Bundle: void putByte(java.lang.String,byte)>','<java.net.Socket: void setPerformancePreferences(int,int,int)>','<java.util.Date: long parse(java.lang.String)>','<java.lang.Class: java.lang.String getSimpleName()>','<android.app.Dialog: int getVolumeControlStream()>','<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<android.content.pm.PackageManager: void installPackage(android.net.Uri)>','<java.net.Socket: void setTrafficClass(int)>','<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>','<android.database.sqlite.SQLiteStatement: void execute()>','<java.io.PrintStream: void close()>','<android.view.inputmethod.CompletionInfo: java.lang.String toString()>','<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>','<android.view.View: boolean isVerticalScrollBarEnabled()>','<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>','<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>','<java.io.FilterOutputStream: void write(byte[],int,int)>','<android.hardware.Camera$Parameters: void setPictureFormat(int)>','<android.view.MotionEvent: long getHistoricalEventTime(int)>','<android.content.IntentFilter: int getPriority()>','<android.widget.TextView: void setHorizontallyScrolling(boolean)>','<android.net.wifi.WifiManager: boolean reconnect()>','<android.app.ActivityManager$RunningTaskInfo: void <init>()>','<java.io.FileOutputStream: void <init>(java.io.File,boolean)>','<java.util.BitSet: void <init>(int)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedOpaquePart(java.lang.String)>','<android.view.animation.Animation: void setFillAfter(boolean)>','<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>','<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>','<java.util.Date: boolean after(java.util.Date)>','<java.util.AbstractMap: int hashCode()>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>','<java.lang.Character: int charCount(int)>','<android.view.View: void postInvalidate(int,int,int,int)>','<android.hardware.Camera$Parameters: void setPictureSize(int,int)>','<android.widget.TextView: void setAutoLinkMask(int)>','<android.graphics.Region: void setEmpty()>','<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>','<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>','<java.io.PrintWriter: void <init>(java.io.File,java.lang.String)>','<java.net.URLConnection: int getContentLength()>','<android.app.PendingIntent: void send(int)>','<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>','<java.io.PrintWriter: void print(float)>','<android.webkit.PluginList: void <init>()>','<java.nio.ByteOrder: java.lang.String toString()>','<java.lang.StackOverflowError: void <init>()>','<android.os.Bundle: int describeContents()>','<android.widget.AbsListView: int getSolidColor()>','<android.widget.TextView: void setMaxWidth(int)>','<android.graphics.Paint: android.graphics.Xfermode getXfermode()>','<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>','<android.graphics.Paint: void finalize()>','<java.math.BigInteger: java.math.BigInteger setBit(int)>','<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>','<android.os.Message: void setData(android.os.Bundle)>','<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>','<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>','<android.view.animation.LayoutAnimationController: void start()>','<android.location.Location: void <init>(java.lang.String)>','<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>','<android.graphics.Paint$Align: android.graphics.Paint$Align[] values()>','<android.content.ContentValues: boolean equals(java.lang.Object)>','<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy[] values()>','<java.net.MalformedURLException: void <init>(java.lang.String)>','<android.os.PowerManager$WakeLock: void acquire(long)>','<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>','<java.net.URLConnection: boolean getAllowUserInteraction()>','<android.content.IntentFilter: java.util.Iterator actionsIterator()>','<android.app.ExpandableListActivity: long getSelectedPosition()>','<android.telephony.ServiceState: void <init>(android.os.Parcel)>','<android.view.View: void setVisibility(int)>','<android.app.Activity: long getInstanceCount()>','<android.content.ContextWrapper: void setTheme(int)>','<android.hardware.Camera: void release()>','<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>','<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>','<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>','<android.database.sqlite.SQLiteDatabase: void <init>()>','<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>','<java.net.InetAddress: boolean isReachable(java.net.NetworkInterface,int,int)>','<java.util.ArrayList: java.lang.Object remove(int)>','<java.lang.Float: boolean equals(java.lang.Object)>','<android.widget.TextView: void onEndBatchEdit()>','<java.io.Writer: void write(int)>','<java.lang.Short: short shortValue()>','<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>','<java.lang.Character: boolean isSurrogatePair(char,char)>','<android.view.View: int computeHorizontalScrollOffset()>','<java.io.ObjectStreamException: void <init>(java.lang.String)>','<android.view.View: void setVerticalScrollBarEnabled(boolean)>','<android.widget.TextView: float getLeftFadingEdgeStrength()>','<android.content.res.Configuration: java.lang.String toString()>','<android.app.Activity: void startManagingCursor(android.database.Cursor)>','<java.lang.reflect.Field: float getFloat(java.lang.Object)>','<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>','<java.lang.Byte: boolean equals(java.lang.Object)>','<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object[])>','<java.lang.Character: int offsetByCodePoints(java.lang.CharSequence,int,int)>','<java.lang.Character: char toLowerCase(char)>','<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>','<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)>','<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>','<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>','<android.app.Activity: void finishActivity(int)>','<android.content.Intent: boolean filterEquals(android.content.Intent)>','<java.net.DatagramSocket: void connect(java.net.SocketAddress)>','<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.ClassFormatError: void <init>()>','<java.lang.Integer: short shortValue()>','<java.io.PrintStream: void print(java.lang.String)>','<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>','<java.lang.reflect.Method: void <init>()>','<java.lang.StringBuffer: java.lang.StringBuffer append(double)>','<java.io.PrintStream: void <init>(java.io.OutputStream)>','<android.view.View: boolean isFocusableInTouchMode()>','<java.lang.VerifyError: void <init>()>','<android.graphics.Bitmap: int getRowBytes()>','<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<android.view.Window: int getLocalFeatures()>','<java.net.URLConnection: java.lang.Object getContent()>','<java.util.Date: int getTimezoneOffset()>','<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas$EdgeType)>','<java.net.URI: java.lang.String getRawAuthority()>','<java.math.BigInteger: void <clinit>()>','<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>','<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>','<android.text.Layout: int getHeight()>','<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>','<java.lang.reflect.Field: short getShort(java.lang.Object)>','<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas$EdgeType)>','<java.lang.Long: java.lang.String toBinaryString(long)>','<android.content.res.TypedArray: int getLayoutDimension(int,int)>','<java.nio.channels.FileChannel$MapMode: void <clinit>()>','<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>','<java.lang.CloneNotSupportedException: void <init>()>','<android.content.ComponentName: void <clinit>()>','<android.view.View: boolean isSaveEnabled()>','<android.os.Bundle: void putChar(java.lang.String,char)>','<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>','<android.app.Dialog: void setVolumeControlStream(int)>','<java.math.BigInteger: java.math.BigInteger clearBit(int)>','<java.lang.Character: boolean isUnicodeIdentifierStart(int)>','<android.os.PowerManager$WakeLock: void <init>(android.os.PowerManager)>','<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>','<android.widget.TextView: void append(java.lang.CharSequence)>','<android.widget.ListView: void setDividerHeight(int)>','<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy valueOf(java.lang.String)>','<android.graphics.Paint$FontMetricsInt: java.lang.String toString()>','<java.lang.reflect.Method: boolean isVarArgs()>','<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>','<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>','<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)>','<java.io.PrintWriter: void <init>(java.io.File)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>','<java.lang.reflect.Field: boolean equals(java.lang.Object)>','<java.lang.RuntimeException: void <init>(java.lang.Throwable)>','<java.net.URLConnection: void setIfModifiedSince(long)>','<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>','<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>','<android.os.Looper: java.lang.Thread getThread()>','<android.text.style.URLSpan: void onClick(android.view.View)>','<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>','<android.app.Dialog: void registerForContextMenu(android.view.View)>','<java.nio.ShortBuffer: boolean hasArray()>','<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>','<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>','<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>','<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>','<java.lang.StringBuffer: int codePointCount(int,int)>','<android.graphics.Paint$Align: android.graphics.Paint$Align valueOf(java.lang.String)>','<android.webkit.WebSettings: void setNavDump(boolean)>','<android.telephony.ServiceState: int getState()>','<android.content.res.ColorStateList: int getDefaultColor()>','<java.security.cert.CertificateEncodingException: void <init>(java.lang.String,java.lang.Throwable)>','<android.widget.TextView: float getRightFadingEdgeStrength()>','<android.widget.AdapterView: long getItemIdAtPosition(int)>','<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>','<android.app.Activity: void onUserInteraction()>','<android.app.Dialog: void setFeatureDrawableResource(int,int)>','<java.net.SocketException: void <init>(java.lang.String)>','<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)>','<android.os.Bundle: short getShort(java.lang.String,short)>','<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>','<java.math.BigInteger: void <init>(int,byte[])>','<android.database.SQLException: void <init>(java.lang.String)>','<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>','<java.security.NoSuchAlgorithmException: void <init>()>','<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>','<java.lang.Thread$State: java.lang.Thread$State[] values()>','<android.widget.TextView: int getBottomPaddingOffset()>','<android.graphics.Rect: boolean intersect(android.graphics.Rect)>','<android.widget.AdapterView: void <init>(android.content.Context)>','<android.net.wifi.WifiConfiguration$KeyMgmt: void <init>()>','<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>','<android.webkit.WebView: void clearCache(boolean)>','<java.io.PrintStream: void print(long)>','<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>','<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>','<android.text.Layout$Directions: void <init>()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>','<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>','<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>','<android.os.Bundle: boolean getBoolean(java.lang.String)>','<java.io.PrintStream: void write(byte[],int,int)>','<java.net.DatagramSocket: void close()>','<java.net.URLConnection: java.net.FileNameMap getFileNameMap()>','<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>','<java.util.Locale: java.util.Locale[] getAvailableLocales()>','<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()>','<android.graphics.Canvas: void drawVertices(android.graphics.Canvas$VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>','<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])>','<android.widget.AbsListView: void setFilterText(java.lang.String)>','<java.net.DatagramPacket: void <init>(byte[],int)>','<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>','<android.widget.ListView: void onRestoreInstanceState(android.os.Parcelable)>','<android.widget.TextView$BufferType: android.widget.TextView$BufferType valueOf(java.lang.String)>','<android.widget.TextView: void setRawInputType(int)>','<java.lang.Class: java.net.URL getResource(java.lang.String)>','<java.lang.Double: boolean isNaN(double)>','<android.view.ViewGroup: int getChildDrawingOrder(int,int)>','<android.webkit.WebView: void goBack()>','<java.nio.IntBuffer: void <init>()>','<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>','<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>','<android.app.ActivityGroup: void onResume()>','<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence,int,int)>','<java.security.cert.CertificateEncodingException: void <init>()>','<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>','<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>','<android.app.Dialog: void setContentView(int)>','<java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()>','<android.content.IntentFilter: boolean matchAction(java.lang.String)>','<android.view.View: boolean isSoundEffectsEnabled()>','<android.graphics.Shader$TileMode: void <clinit>()>','<java.lang.Enum: int compareTo(java.lang.Object)>','<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>','<java.lang.String: java.lang.String valueOf(char[])>','<android.app.Activity: android.view.View findViewById(int)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(int)>','<android.view.View: void setDrawingCacheQuality(int)>','<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.content.Intent: void <init>(android.content.Intent)>','<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)>','<java.security.CodeSigner: int hashCode()>','<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>','<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>','<java.net.ServerSocket: void setPerformancePreferences(int,int,int)>','<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>','<java.net.URI: boolean isOpaque()>','<java.net.URI: java.lang.String getRawPath()>','<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>','<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path$Direction)>','<android.net.wifi.WifiInfo: int getIpAddress()>','<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>','<android.view.KeyEvent: java.lang.String toString()>','<java.lang.ClassNotFoundException: java.lang.Throwable getCause()>','<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>','<android.view.View: void setMeasuredDimension(int,int)>','<java.lang.Thread: void join(long,int)>','<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)>','<java.util.AbstractCollection: boolean retainAll(java.util.Collection)>','<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.view.ContextThemeWrapper: void <init>()>','<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>','<android.view.inputmethod.ExtractedText: void <clinit>()>','<android.graphics.Path: void toggleInverseFillType()>','<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>','<java.lang.ref.Reference: boolean isEnqueued()>','<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>','<android.widget.AbsListView: void setTextFilterEnabled(boolean)>','<java.lang.ClassLoader: void resolveClass(java.lang.Class)>','<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>','<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()>','<android.widget.TextView: android.content.res.ColorStateList getTextColors()>','<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>','<android.view.Display: void <init>()>','<java.nio.ByteBuffer: int hashCode()>','<android.webkit.WebView: android.graphics.Picture capturePicture()>','<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>','<java.net.Socket: boolean isInputShutdown()>','<java.util.MissingResourceException: java.lang.String getKey()>','<android.os.ParcelFileDescriptor: int describeContents()>','<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>','<java.io.FileOutputStream: void write(int)>','<java.net.URLStreamHandler: boolean equals(java.net.URL,java.net.URL)>','<java.net.DatagramSocketImpl: int getLocalPort()>','<android.app.ActivityManager$MemoryInfo: void <init>()>','<java.net.URISyntaxException: int getIndex()>','<java.io.PrintWriter: void println(boolean)>','<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>','<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()>','<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>','<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void mark(int)>','<java.lang.Float: boolean isNaN()>','<android.database.DataSetObserver: void onChanged()>','<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>','<java.util.Date: int getYear()>','<android.view.MotionEvent: int getMetaState()>','<java.nio.FloatBuffer: boolean equals(java.lang.Object)>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>','<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>','<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>','<android.content.IntentFilter: int describeContents()>','<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>','<android.app.LocalActivityManager: void dispatchPause(boolean)>','<android.widget.TextView: void setMinWidth(int)>','<android.widget.ExpandableListView: boolean collapseGroup(int)>','<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>','<android.view.View: void setFocusable(boolean)>','<java.nio.channels.SocketChannel: int validOps()>','<java.net.Socket: void <init>(java.net.Proxy)>','<android.content.res.Resources: void finishPreloading()>','<java.lang.Short: short parseShort(java.lang.String,int)>','<android.view.View: int computeVerticalScrollRange()>','<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>','<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>','<java.lang.reflect.Method: int hashCode()>','<org.apache.http.message.ParserCursor: void <init>(int,int)>','<android.graphics.Matrix: boolean postSkew(float,float)>','<android.content.res.Resources$NotFoundException: void <init>()>','<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>','<java.net.ServerSocket: void implAccept(java.net.Socket)>','<java.lang.Character: int compareTo(java.lang.Object)>','<android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit valueOf(java.lang.String)>','<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<java.lang.reflect.Constructor: boolean equals(java.lang.Object)>','<android.widget.AbsListView: int getListPaddingRight()>','<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>','<java.util.BitSet: boolean equals(java.lang.Object)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>','<java.util.AbstractCollection: void clear()>','<java.lang.Double: int hashCode()>','<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>','<android.content.pm.ResolveInfo: void <init>()>','<android.view.View: void forceLayout()>','<android.webkit.WebView: void goBackOrForward(int)>','<java.lang.AbstractMethodError: void <init>(java.lang.String)>','<java.io.PrintWriter: void setError()>','<android.view.animation.Animation: void setZAdjustment(int)>','<android.view.View: boolean isHorizontalFadingEdgeEnabled()>','<java.lang.ThreadGroup: int activeCount()>','<java.net.URLConnection: void setDefaultRequestProperty(java.lang.String,java.lang.String)>','<android.view.View: int getSolidColor()>','<java.lang.Short: java.lang.Short valueOf(short)>','<android.os.Bundle: float getFloat(java.lang.String,float)>','<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>','<java.lang.StringBuffer: int indexOf(java.lang.String,int)>','<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>','<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>','<java.security.cert.CertificateParsingException: void <init>(java.lang.String)>','<android.content.ContentProvider: void setReadPermission(java.lang.String)>','<java.net.URL: void <init>(java.lang.String)>','<android.view.animation.Transformation: void setAlpha(float)>','<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>','<android.util.SparseArray: java.lang.Object valueAt(int)>','<android.widget.AdapterView: int getPositionForView(android.view.View)>','<java.lang.Short: long longValue()>','<android.webkit.WebView: void setScrollBarStyle(int)>','<java.lang.Character$Subset: boolean equals(java.lang.Object)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>','<android.content.ContextWrapper: android.content.Context getApplicationContext()>','<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)>','<android.telephony.PhoneStateListener: void <init>()>','<java.lang.Boolean: boolean equals(java.lang.Object)>','<java.lang.Integer: int compareTo(java.lang.Integer)>','<android.net.wifi.WifiConfiguration$Protocol: void <init>()>','<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>','<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>','<java.nio.ShortBuffer: java.nio.ShortBuffer put(java.nio.ShortBuffer)>','<android.os.Parcel: void readBinderList(java.util.List)>','<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>','<android.view.animation.Animation: void scaleCurrentDuration(float)>','<java.lang.reflect.Method: int getModifiers()>','<android.graphics.Point: void offset(int,int)>','<android.os.Parcel: int[] createIntArray()>','<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>','<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>','<java.lang.String: java.lang.String valueOf(char[],int,int)>','<java.util.Locale: java.lang.Object clone()>','<java.lang.StringBuffer: void getChars(int,int,char[],int)>','<java.lang.Character: byte getDirectionality(char)>','<android.view.KeyEvent: int getScanCode()>','<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>','<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>','<android.view.View: boolean isLongClickable()>','<java.net.Socket: void <init>()>','<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>','<java.lang.Character: boolean isTitleCase(int)>','<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>','<java.util.Locale: java.lang.String getISO3Country()>','<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[])>','<android.media.MediaPlayer: void start()>','<android.view.animation.Animation: int getRepeatMode()>','<android.view.KeyEvent: char getMatch(char[],int)>','<android.net.wifi.WifiInfo: int getLinkSpeed()>','<android.app.Activity: void startActivity(android.content.Intent)>','<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>','<java.nio.channels.DatagramChannel: int validOps()>','<android.os.Handler: android.os.Message obtainMessage(int,int,int)>','<java.lang.Character: int offsetByCodePoints(char[],int,int,int,int)>','<java.lang.String: java.lang.String valueOf(java.lang.Object)>','<java.net.URLConnection: long getIfModifiedSince()>','<android.os.Parcel: void readCharArray(char[])>','<java.util.AbstractCollection: java.lang.Object[] toArray()>','<java.lang.Thread: java.lang.Thread currentThread()>','<java.lang.String: void <init>(byte[],int,int)>','<android.widget.TextView: boolean isPaddingOffsetRequired()>','<android.view.ViewGroup: void removeViewAt(int)>','<android.widget.TextView: boolean didTouchFocusSelect()>','<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>','<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>','<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>','<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)>','<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>','<android.text.Layout: void draw(android.graphics.Canvas)>','<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>','<android.view.View: void setWillNotCacheDrawing(boolean)>','<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>','<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>','<android.webkit.Plugin: java.lang.String getDescription()>','<android.webkit.CallbackProxy: void onLoadResource(java.lang.String)>','<java.lang.Package: java.lang.String getImplementationVendor()>','<android.widget.AbsoluteLayout: void onMeasure(int,int)>','<java.lang.reflect.Field: long getLong(java.lang.Object)>','<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>','<android.app.ActivityManager$RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>','<java.nio.DoubleBuffer: int hashCode()>','<android.os.Bundle: void putDouble(java.lang.String,double)>','<java.util.UUID: java.util.UUID fromString(java.lang.String)>','<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>','<android.app.ActivityGroup: void onCreate(android.os.Bundle)>','<java.lang.Thread: void sleep(long)>','<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>','<android.view.AbsSavedState: void <init>(android.os.Parcelable)>','<java.lang.Short: int compareTo(java.lang.Object)>','<android.view.View: int getBaseline()>','<java.lang.AbstractStringBuilder: int capacity()>','<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>','<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.provider.Settings$System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>','<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>','<android.widget.TextView: boolean onCheckIsTextEditor()>','<android.app.ActivityManager$RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>','<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>','<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>','<android.widget.TextView: void onDetachedFromWindow()>','<android.content.res.AssetFileDescriptor: long getDeclaredLength()>','<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>','<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>','<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>','<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>','<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>','<android.graphics.Matrix: boolean preTranslate(float,float)>','<java.net.URI: java.lang.String getUserInfo()>','<java.nio.IntBuffer: java.nio.IntBuffer wrap(int[],int,int)>','<android.os.PatternMatcher: void <init>(android.os.Parcel)>','<android.view.View: java.util.ArrayList getFocusables(int)>','<android.os.Parcel: android.os.Parcel obtain(int)>','<java.io.PrintWriter: void println(float)>','<java.net.Socket: int getTrafficClass()>','<android.content.pm.PermissionGroupInfo: int describeContents()>','<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()>','<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>','<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>','<android.content.pm.Signature: int describeContents()>','<android.content.Intent: void <clinit>()>','<android.os.Bundle: java.util.Set keySet()>','<java.nio.ShortBuffer: int arrayOffset()>','<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[])>','<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>()>','<android.widget.TextView: int getTotalPaddingBottom()>','<android.graphics.Paint$Style: void <clinit>()>','<android.view.View: boolean requestFocus()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[])>','<android.text.NoCopySpan$Concrete: void <init>()>','<android.widget.AbsListView: void setStackFromBottom(boolean)>','<java.util.AbstractList: void removeRange(int,int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>','<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>','<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>','<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>','<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>','<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>','<android.graphics.Region: boolean getBounds(android.graphics.Rect)>','<android.content.ContextWrapper: void startActivity(android.content.Intent)>','<android.widget.AbsListView: int computeVerticalScrollRange()>','<java.lang.StringBuffer: void <init>(int)>','<android.os.Messenger: int hashCode()>','<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>','<android.view.View: int getHorizontalScrollbarHeight()>','<android.webkit.WebSettings: boolean getAllowFileAccess()>','<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>','<java.util.HashMap: void <init>(int)>','<android.widget.TextView: void onFinishTemporaryDetach()>','<android.util.Log: void <init>()>','<android.graphics.ColorFilter: void finalize()>','<java.lang.String: void <init>(byte[],int)>','<android.os.Bundle: void putIntArray(java.lang.String,int[])>','<android.os.Bundle: void <init>(android.os.Bundle)>','<java.lang.Enum: int hashCode()>','<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>','<java.io.File: java.lang.String[] list()>','<java.lang.StringBuffer: java.lang.StringBuffer append(long)>','<android.telephony.ServiceState: void <init>()>','<android.telephony.ServiceState: void setRoaming(boolean)>','<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>','<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<java.net.Socket: boolean isBound()>','<java.nio.DoubleBuffer: int compareTo(java.lang.Object)>','<android.database.sqlite.SQLiteQuery: void close()>','<java.net.DatagramPacket: void setData(byte[])>','<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)>','<java.net.URLConnection: void setDefaultUseCaches(boolean)>','<android.view.KeyEvent: int getDeviceId()>','<java.math.BigInteger: float floatValue()>','<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<android.webkit.WebSettings: void setUseWideViewPort(boolean)>','<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>','<java.lang.String: java.lang.String toLowerCase()>','<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>','<java.io.Reader: void <init>()>','<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>','<android.content.pm.PermissionInfo: java.lang.String toString()>','<java.nio.channels.spi.AbstractSelectionKey: void <init>()>','<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<java.lang.Character: boolean isHighSurrogate(char)>','<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>','<java.io.PrintStream: void print(double)>','<android.content.pm.ServiceInfo: int describeContents()>','<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.location.Location: java.lang.String getProvider()>','<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>','<java.math.BigInteger: int intValue()>','<android.app.Dialog: boolean onSearchRequested()>','<java.lang.StackTraceElement: int getLineNumber()>','<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>','<android.graphics.drawable.Drawable: boolean isVisible()>','<android.view.View$MeasureSpec: void <init>()>','<java.nio.channels.Pipe$SinkChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.widget.TextView: void setLinksClickable(boolean)>','<java.security.InvalidKeyException: void <init>()>','<android.view.View: int getId()>','<android.database.sqlite.SQLiteDatabase: long getPageSize()>','<java.util.BitSet: void flip(int,int)>','<android.text.Layout$Alignment: void <clinit>()>','<android.content.res.Resources: int[] getIntArray(int)>','<android.webkit.WebView: void setBackgroundColor(int)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>','<android.view.ViewGroup: void detachViewFromParent(android.view.View)>','<java.nio.ByteBuffer: int compareTo(java.lang.Object)>','<android.widget.TextView: void setPadding(int,int,int,int)>','<java.io.FilterOutputStream: void close()>','<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>','<java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)>','<java.net.URI: java.lang.String getHost()>','<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>','<java.io.PrintWriter: void print(char[])>','<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>','<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>','<java.util.BitSet: boolean get(int)>','<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)>','<android.app.PendingIntent: void cancel()>','<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()>','<android.content.res.Resources: float getDimension(int)>','<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>','<android.view.View: void setNextFocusRightId(int)>','<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<java.lang.StringBuffer: char charAt(int)>','<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<java.math.BigInteger: boolean equals(java.lang.Object)>','<android.view.ViewTreeObserver: boolean isAlive()>','<android.app.Dialog: void setContentView(android.view.View)>','<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[])>','<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>','<java.lang.reflect.Field: byte getByte(java.lang.Object)>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>','<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>','<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>','<java.util.BitSet: int cardinality()>','<android.text.style.CharacterStyle: void <init>()>','<java.io.FileOutputStream: void close()>','<java.lang.Long: java.lang.Long decode(java.lang.String)>','<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>','<java.io.File: void <init>(java.lang.String,java.lang.String)>','<android.location.Location: boolean hasBearing()>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<java.util.Date: boolean equals(java.lang.Object)>','<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()>','<android.content.pm.ApplicationInfo$DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>','<java.util.ArrayList: void removeRange(int,int)>','<java.lang.Double: double parseDouble(java.lang.String)>','<android.app.Activity: void removeDialog(int)>','<android.view.KeyEvent: java.lang.String getCharacters()>','<android.location.Location: double getLatitude()>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>','<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])>','<android.widget.TextView: java.lang.String getPrivateImeOptions()>','<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>','<java.util.Date: long UTC(int,int,int,int,int,int)>','<java.security.cert.CertPath: boolean equals(java.lang.Object)>','<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>','<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>','<android.app.ActivityGroup: void finish()>','<java.lang.Character$Subset: int hashCode()>','<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>','<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>','<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()>','<android.view.View: float getLeftFadingEdgeStrength()>','<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>','<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>','<android.graphics.Matrix: void <init>()>','<android.util.SparseArray: void <init>(int)>','<android.widget.ListView: void <init>(android.content.Context)>','<android.content.res.Resources: android.content.res.Resources getSystem()>','<android.location.Location: java.lang.String toString()>','<java.net.InetAddress: boolean isAnyLocalAddress()>','<java.net.Socket: int getPort()>','<android.widget.TextView: void setHeight(int)>','<android.net.wifi.WifiConfiguration$Protocol: void <clinit>()>','<java.lang.Character: boolean isJavaIdentifierStart(int)>','<java.net.URL: java.net.URLConnection openConnection()>','<java.lang.Thread: java.lang.Thread$State getState()>','<android.app.Activity: java.lang.CharSequence onCreateDescription()>','<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()>','<android.content.Intent: int describeContents()>','<java.util.ArrayList: void <init>()>','<java.util.Locale: java.util.Locale getDefault()>','<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>','<java.security.GeneralSecurityException: void <init>()>','<android.app.ActivityGroup: void finishFromChild(android.app.Activity)>','<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>','<android.content.pm.Signature: char[] toChars()>','<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.view.View: boolean isInEditMode()>','<org.apache.http.util.CharArrayBuffer: void append(char)>','<android.webkit.WebView: int getContentHeight()>','<java.security.GeneralSecurityException: void <init>(java.lang.Throwable)>','<java.lang.Short: short parseShort(java.lang.String)>','<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>','<android.location.Location: android.os.Bundle getExtras()>','<java.lang.Character: int toLowerCase(int)>','<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>','<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>','<android.app.Dialog: boolean requestWindowFeature(int)>','<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[],int,int)>','<android.net.DhcpInfo: void <init>()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>','<java.net.InetAddress: boolean isMulticastAddress()>','<java.util.Date: int getMinutes()>','<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>','<android.view.View: int getPaddingLeft()>','<java.security.CodeSource: boolean equals(java.lang.Object)>','<android.location.Criteria: void setAccuracy(int)>','<android.webkit.WebView: java.lang.String getOriginalUrl()>','<android.app.Activity: void finishFromChild(android.app.Activity)>','<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>','<java.io.PrintStream: void println()>','<android.app.Dialog: android.view.View onCreatePanelView(int)>','<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>','<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>','<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>','<java.net.Proxy: java.lang.String toString()>','<android.content.res.AssetManager$AssetInputStream: boolean markSupported()>','<java.net.InetAddress: byte[] getAddress()>','<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>','<java.lang.SecurityException: void <init>()>','<android.content.pm.Signature: byte[] toByteArray()>','<android.net.wifi.WifiConfiguration$Status: void <clinit>()>','<java.net.DatagramSocketImpl: void disconnect()>','<android.content.pm.PermissionGroupInfo: java.lang.String toString()>','<java.lang.Double: byte byteValue()>','<java.lang.AbstractStringBuilder: void setCharAt(int,char)>','<android.view.View: android.graphics.Bitmap getDrawingCache()>','<android.webkit.CallbackProxy: void onCloseWindow(android.webkit.WebView)>','<android.content.Intent: java.lang.String getDataString()>','<android.app.Activity: void onCreate(android.os.Bundle)>','<java.math.BigInteger: void <init>(java.lang.String)>','<android.view.ViewGroup: boolean hasFocus()>','<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.InetAddress,int)>','<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>','<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>','<java.lang.NoSuchMethodException: void <init>(java.lang.String)>','<android.webkit.WebView: android.webkit.PluginList getPluginList()>','<java.net.Socket: void setTcpNoDelay(boolean)>','<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.view.MotionEvent: float getYPrecision()>','<java.lang.Enum: void <init>(java.lang.String,int)>','<android.location.Criteria: int getAccuracy()>','<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>','<java.net.DatagramSocket: void <init>(java.net.SocketAddress)>','<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>','<java.lang.Short: java.lang.Short valueOf(java.lang.String)>','<android.util.Log: int d(java.lang.String,java.lang.String)>','<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>','<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>','<java.lang.InternalError: void <init>(java.lang.String)>','<android.content.res.Resources: java.lang.String getResourceEntryName(int)>','<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>','<java.lang.InterruptedException: void <init>(java.lang.String)>','<android.media.MediaPlayer: void release()>','<android.graphics.Matrix: void <init>(android.graphics.Matrix)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>','<java.util.AbstractCollection: java.lang.String toString()>','<android.location.Location: void setLatitude(double)>','<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>','<android.view.Window: void setSoftInputMode(int)>','<java.nio.Buffer: java.nio.Buffer limit(int)>','<java.net.InetAddress: java.lang.String toString()>','<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>','<java.util.ArrayList: boolean add(java.lang.Object)>','<android.os.Bundle: long getLong(java.lang.String)>','<java.lang.String: int indexOf(java.lang.String)>','<android.graphics.Typeface: boolean isItalic()>','<java.io.Reader: long skip(long)>','<java.util.Date: void <init>(java.lang.String)>','<java.lang.ThreadGroup: void destroy()>','<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>','<java.net.Socket: void setKeepAlive(boolean)>','<java.lang.Character: boolean isSupplementaryCodePoint(int)>','<java.nio.IntBuffer: java.nio.IntBuffer put(int[])>','<java.util.Date: void setMinutes(int)>','<android.content.Intent: android.content.Intent getIntent(java.lang.String)>','<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>','<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>','<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>','<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)>','<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>','<android.view.View: void onFinishTemporaryDetach()>','<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>','<android.widget.TextView: boolean moveCursorToVisibleOffset()>','<android.os.Messenger: void <init>(android.os.Handler)>','<java.lang.InstantiationException: void <init>()>','<android.location.GpsStatus: void <init>()>','<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>','<android.widget.AdapterView: int getFirstVisiblePosition()>','<java.lang.NoSuchFieldError: void <init>()>','<java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>','<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion createProtocolVersion(int,int)>','<android.view.View: int getDrawingCacheBackgroundColor()>','<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>','<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>','<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>','<android.graphics.Typeface: boolean isBold()>','<android.os.Messenger: void send(android.os.Message)>','<java.net.URLConnection: java.net.URL getURL()>','<android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>','<android.provider.Browser: void <init>()>','<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>','<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>','<android.content.BroadcastReceiver: int getResultCode()>','<android.webkit.Plugin: java.lang.String getFileName()>','<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>','<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>','<java.util.Locale: java.lang.String getDisplayVariant()>','<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>','<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>','<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>','<android.widget.AdapterView: int getCount()>','<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>','<android.widget.ListView: void onFinishInflate()>','<java.lang.OutOfMemoryError: void <init>(java.lang.String)>','<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>','<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>','<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>','<android.os.Parcel: void writeStringArray(java.lang.String[])>','<android.os.Message: java.lang.Runnable getCallback()>','<java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>','<java.lang.Integer: int rotateRight(int,int)>','<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>','<android.app.Activity: void setRequestedOrientation(int)>','<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>','<java.nio.LongBuffer: java.nio.LongBuffer wrap(long[])>','<java.io.File: boolean isDirectory()>','<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>','<android.os.PowerManager$WakeLock: java.lang.String toString()>','<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>','<java.nio.channels.FileLock: void <init>(java.nio.channels.FileChannel,long,long,boolean)>','<android.net.Uri$Builder: android.net.Uri$Builder opaquePart(java.lang.String)>','<java.net.DatagramPacket: int getOffset()>','<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>','<android.view.View: void onStartTemporaryDetach()>','<android.content.IntentFilter: java.util.Iterator typesIterator()>','<android.provider.Browser$SearchColumns: void <init>()>','<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>','<android.view.ViewGroup: void detachViewFromParent(int)>','<java.lang.Long: java.lang.Long getLong(java.lang.String,long)>','<java.nio.channels.spi.AbstractSelector: void end()>','<android.graphics.Path$Direction: void <clinit>()>','<android.view.View: int getNextFocusRightId()>','<android.graphics.Point: void negate()>','<android.os.Handler: void dispatchMessage(android.os.Message)>','<android.widget.ExpandableListView$ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>','<android.content.IntentFilter: void <init>(android.content.IntentFilter)>','<android.view.View: void scrollBy(int,int)>','<android.widget.TextView: int getCompoundPaddingTop()>','<android.location.Criteria: void setAltitudeRequired(boolean)>','<android.view.View: void invalidate()>','<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>','<android.content.res.AssetFileDescriptor: java.lang.String toString()>','<java.lang.Thread: int countStackFrames()>','<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>','<java.lang.Integer: java.lang.Integer valueOf(int)>','<android.os.PowerManager$WakeLock: boolean isHeld()>','<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>','<java.util.UUID: int version()>','<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiManager$WifiLock: java.lang.String toString()>','<java.net.URLStreamHandler: void parseURL(java.net.URL,java.lang.String,int,int)>','<android.graphics.RectF: void <clinit>()>','<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>','<android.view.View: void destroyDrawingCache()>','<java.lang.Integer: void <clinit>()>','<java.net.ServerSocket: void <init>(int)>','<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>','<android.os.Parcel: java.io.Serializable readSerializable()>','<android.view.ContextThemeWrapper: void setTheme(int)>','<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.app.ActivityManager$RunningAppProcessInfo: void <clinit>()>','<android.view.View: void setSoundEffectsEnabled(boolean)>','<java.lang.IncompatibleClassChangeError: void <init>()>','<android.view.Window: void addFlags(int)>','<java.security.cert.CertPath: void <init>(java.lang.String)>','<android.util.DisplayMetrics: void <init>()>','<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>','<android.net.wifi.WifiManager$WifiLock: void <init>(android.net.wifi.WifiManager)>','<java.lang.String: java.lang.String valueOf(char)>','<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>','<android.os.Bundle: byte getByte(java.lang.String)>','<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>','<android.text.Layout: float getSpacingAdd()>','<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>','<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>','<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>','<android.database.sqlite.SQLiteProgram: void clearBindings()>','<android.util.SparseBooleanArray: boolean valueAt(int)>','<android.os.PatternMatcher: java.lang.String getPath()>','<android.widget.ListView: android.widget.ListAdapter getAdapter()>','<android.view.animation.Transformation: void <init>()>','<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>','<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>','<android.os.PatternMatcher: boolean match(java.lang.String)>','<android.database.sqlite.SQLiteProgram: void close()>','<android.widget.TextView: void setHint(java.lang.CharSequence)>','<android.os.Parcel: byte readByte()>','<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>','<android.view.KeyEvent: boolean isPrintingKey()>','<android.graphics.Region$Op: android.graphics.Region$Op[] values()>','<android.os.Looper: java.lang.String toString()>','<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>','<java.lang.ClassNotFoundException: java.lang.Throwable getException()>','<java.nio.Buffer: int capacity()>','<android.content.res.AssetFileDescriptor: long getStartOffset()>','<android.view.KeyEvent: void <init>(android.view.KeyEvent)>','<android.view.InflateException: void <init>(java.lang.Throwable)>','<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>','<java.lang.ClassNotFoundException: void <init>(java.lang.String)>','<android.graphics.DrawFilter: void finalize()>','<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>','<android.database.CharArrayBuffer: void <init>(char[])>','<android.graphics.RectF: boolean intersects(float,float,float,float)>','<java.lang.Short: int compareTo(java.lang.Short)>','<java.net.DatagramPacket: int getLength()>','<java.net.URI: java.net.URI resolve(java.lang.String)>','<android.webkit.WebSettings: void setCacheMode(int)>','<java.lang.Thread: void start()>','<android.view.KeyEvent: boolean isSystem()>','<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>','<java.util.Random: boolean nextBoolean()>','<java.net.Socket: java.lang.String toString()>','<android.graphics.Paint: android.graphics.Shader getShader()>','<java.lang.Class: java.lang.ClassLoader getClassLoader()>','<java.net.DatagramSocket: boolean isBound()>','<java.net.DatagramPacket: int getPort()>','<android.content.pm.ConfigurationInfo: void <init>()>','<android.content.Intent$ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>','<android.graphics.Matrix: boolean postScale(float,float,float,float)>','<android.view.InflateException: void <init>()>','<android.webkit.Plugin: void dispatchClickEvent(android.content.Context)>','<java.net.DatagramSocketImpl: void <init>()>','<java.net.URL: java.lang.String getQuery()>','<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[],int,int)>','<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>','<android.hardware.Camera$Parameters: void unflatten(java.lang.String)>','<android.view.View: int getWindowAttachCount()>','<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>','<android.widget.TextView: void setLineSpacing(float,float)>','<android.util.Log: int v(java.lang.String,java.lang.String)>','<java.nio.DoubleBuffer: java.lang.String toString()>','<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>','<android.content.res.ColorStateList: int getColorForState(int[],int)>','<android.app.Activity: android.content.ComponentName getComponentName()>','<android.graphics.Rect: int centerY()>','<android.content.IntentFilter$MalformedMimeTypeException: void <init>()>','<android.text.style.URLSpan: java.lang.String getURL()>','<java.nio.CharBuffer: int compareTo(java.nio.CharBuffer)>','<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>','<java.lang.StringBuffer: void <init>(java.lang.CharSequence)>','<java.lang.Short: java.lang.String toString(short)>','<android.content.BroadcastReceiver: java.lang.String getResultData()>','<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>','<android.view.View: void startAnimation(android.view.animation.Animation)>','<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>','<java.lang.Character: boolean isUnicodeIdentifierStart(char)>','<java.lang.String: void <init>(int[],int,int)>','<android.os.ParcelFileDescriptor: void finalize()>','<java.lang.Character: int toCodePoint(char,char)>','<android.view.animation.Animation: boolean willChangeTransformationMatrix()>','<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)>','<java.util.UUID: int compareTo(java.util.UUID)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[],int,int)>','<android.os.Handler: android.os.Message obtainMessage()>','<java.util.BitSet: void clear(int,int)>','<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>','<android.app.Activity: void setProgressBarVisibility(boolean)>','<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>','<java.util.BitSet: int size()>','<android.database.sqlite.SQLiteDatabase: int getVersion()>','<android.graphics.Matrix: void setSkew(float,float,float,float)>','<java.lang.Long: int bitCount(long)>','<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>','<java.math.BigInteger: int hashCode()>','<java.util.BitSet: void set(int,boolean)>','<java.lang.String: java.lang.String toString()>','<java.lang.Integer: int intValue()>','<java.net.Socket: void setOOBInline(boolean)>','<android.view.WindowManager$LayoutParams: void writeToParcel(android.os.Parcel,int)>','<java.nio.ByteBuffer: void <init>()>','<android.webkit.JsResult: void <init>()>','<java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(char)>','<java.io.PrintWriter: void print(boolean)>','<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>','<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path$Direction)>','<android.graphics.Picture: void draw(android.graphics.Canvas)>','<java.net.ContentHandler: void <init>()>','<android.webkit.WebSettings: int getDefaultFontSize()>','<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>','<android.view.View: int getTopPaddingOffset()>','<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>','<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>','<android.text.style.DynamicDrawableSpan: void <init>()>','<android.graphics.Bitmap$CompressFormat: void <clinit>()>','<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>','<android.net.wifi.WifiConfiguration: int describeContents()>','<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()>','<java.security.cert.CertPath: int hashCode()>','<android.view.Window: void setDefaultWindowFormat(int)>','<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>','<java.util.Locale: void setDefault(java.util.Locale)>','<java.lang.IllegalArgumentException: void <init>(java.lang.String)>','<android.webkit.WebSettings: boolean getUseWideViewPort()>','<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path$Direction)>','<java.nio.channels.FileLock: java.nio.channels.FileChannel channel()>','<android.os.Handler: boolean sendEmptyMessage(int)>','<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>','<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>','<android.net.Uri$Builder: java.lang.String toString()>','<android.webkit.JsPromptResult: void <init>()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>','<android.telephony.ServiceState: int hashCode()>','<java.io.File: boolean canWrite()>','<android.widget.TextView$SavedState: void <init>()>','<android.view.View: void setBackgroundResource(int)>','<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>','<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>','<android.graphics.RectF: boolean intersect(android.graphics.RectF)>','<android.webkit.WebView: void onDraw(android.graphics.Canvas)>','<android.net.wifi.WifiConfiguration$PairwiseCipher: void <clinit>()>','<android.view.animation.Animation: boolean willChangeBounds()>','<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>','<android.view.View: void onAnimationStart()>','<android.view.View: void postInvalidate()>','<android.content.Intent: android.content.Intent setType(java.lang.String)>','<android.webkit.CallbackProxy: void onScaleChanged(float,float)>','<java.lang.Character: int toUpperCase(int)>','<java.math.BigInteger: java.math.BigInteger valueOf(long)>','<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<android.view.View: boolean requestFocus(int,android.graphics.Rect)>','<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)>','<android.widget.TextView: void onSelectionChanged(int,int)>','<java.lang.AssertionError: void <init>(long)>','<java.lang.InstantiationError: void <init>(java.lang.String)>','<java.net.DatagramSocket: void <init>(java.net.DatagramSocketImpl)>','<java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>','<java.lang.Thread: void interrupt()>','<java.nio.Buffer: void <init>()>','<android.graphics.Paint: boolean isFilterBitmap()>','<android.content.IntentFilter: int countCategories()>','<java.lang.Double: float floatValue()>','<android.content.Intent: java.lang.String getAction()>','<java.lang.Thread: void stop(java.lang.Throwable)>','<android.graphics.Rect: void <init>()>','<android.net.wifi.WifiConfiguration: void <init>()>','<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>','<android.app.Activity: void setVisible(boolean)>','<java.net.URI: java.lang.String getFragment()>','<java.net.Socket: void <init>(java.lang.String,int,boolean)>','<java.util.AbstractCollection: boolean isEmpty()>','<java.io.PrintWriter: void <init>(java.io.OutputStream)>','<java.io.PrintStream: void <init>(java.lang.String)>','<android.app.Activity: int getWallpaperDesiredMinimumHeight()>','<org.apache.http.util.CharArrayBuffer: int capacity()>','<java.lang.String: boolean startsWith(java.lang.String)>','<java.nio.LongBuffer: int compareTo(java.lang.Object)>','<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>','<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>','<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>','<android.view.ViewGroup: int getPersistentDrawingCache()>','<android.location.Location: void setExtras(android.os.Bundle)>','<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<java.lang.Character: int getType(char)>','<java.io.PrintWriter: void print(long)>','<java.lang.Package: java.lang.String getSpecificationTitle()>','<android.view.KeyEvent: int getUnicodeChar(int)>','<java.lang.Long: long reverseBytes(long)>','<android.os.Bundle: char[] getCharArray(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>','<java.lang.Error: void <init>()>','<android.webkit.WebSettings: void setUserAgent(int)>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>','<java.io.IOException: void <init>()>','<java.lang.Number: void <init>()>','<android.graphics.Matrix: void mapPoints(float[])>','<android.app.ActivityManager$RunningAppProcessInfo: void <init>()>','<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>','<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>','<android.view.View: void dispatchSetSelected(boolean)>','<java.lang.reflect.InvocationTargetException: void <init>()>','<android.webkit.CallbackProxy: void <init>(android.content.Context,android.webkit.WebView)>','<java.nio.IntBuffer: int arrayOffset()>','<android.widget.TextView: void onEditorAction(int)>','<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>','<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>','<android.content.IntentFilter: void addDataScheme(java.lang.String)>','<android.content.IntentFilter: void <init>()>','<android.view.View: android.view.View focusSearch(int)>','<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>','<android.view.animation.Animation: void setStartOffset(long)>','<android.os.Bundle: float[] getFloatArray(java.lang.String)>','<android.content.IntentFilter: int countActions()>','<android.webkit.WebSettings: boolean getSaveFormData()>','<java.security.cert.CertificateEncodingException: void <init>(java.lang.Throwable)>','<java.util.HashMap: void clear()>','<java.nio.LongBuffer: java.nio.LongBuffer get(long[])>','<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.webkit.WebSettings$TextSize: android.webkit.WebSettings$TextSize valueOf(java.lang.String)>','<java.io.PrintWriter: java.io.PrintWriter printf(java.util.Locale,java.lang.String,java.lang.Object[])>','<java.lang.String: int offsetByCodePoints(int,int)>','<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>','<java.util.BitSet: void xor(java.util.BitSet)>','<android.webkit.WebSettings: void setAllowFileAccess(boolean)>','<android.view.View: boolean onCheckIsTextEditor()>','<java.lang.Object: void wait(long)>','<android.view.ViewGroup: android.view.View findFocus()>','<android.widget.AbsListView: boolean isFastScrollEnabled()>','<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>','<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>','<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>','<android.location.Criteria: boolean isSpeedRequired()>','<java.lang.Character$UnicodeBlock: void <init>()>','<java.lang.Short: java.lang.String toString()>','<android.widget.TextView: int getCompoundPaddingLeft()>','<java.io.File: java.lang.String toString()>','<android.graphics.RectF: float centerX()>','<android.content.pm.ActivityInfo: java.lang.String toString()>','<java.lang.Thread: void setName(java.lang.String)>','<android.provider.Browser$BookmarkColumns: void <init>()>','<java.math.BigInteger: void <init>(int,java.util.Random)>','<android.webkit.CallbackProxy: void onTooManyRedirects(android.os.Message,android.os.Message)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>','<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>','<java.nio.ShortBuffer: int compareTo(java.lang.Object)>','<java.lang.IllegalAccessException: void <init>(java.lang.String)>','<java.util.Date: void <init>(int,int,int,int,int,int)>','<android.app.ActivityManager$ProcessErrorStateInfo: void <clinit>()>','<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>','<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>','<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>','<android.app.ActivityManager$MemoryInfo: void writeToParcel(android.os.Parcel,int)>','<java.lang.Byte: long longValue()>','<java.lang.Throwable: java.lang.String getMessage()>','<java.lang.Character: boolean isISOControl(int)>','<android.graphics.drawable.Drawable$ConstantState: void <init>()>','<android.content.res.AssetFileDescriptor: long getLength()>','<android.os.Parcel: void finalize()>','<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>','<android.graphics.drawable.Drawable: void setDither(boolean)>','<java.util.Date: int getDate()>','<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>','<android.view.animation.LayoutAnimationController: void setOrder(int)>','<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>','<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>','<java.net.DatagramSocket: boolean getBroadcast()>','<java.lang.IllegalMonitorStateException: void <init>()>','<android.os.Handler: void <init>()>','<android.net.Uri: int hashCode()>','<android.graphics.drawable.Drawable: int getIntrinsicWidth()>','<android.webkit.WebSettings: java.lang.String getUserAgentString()>','<android.view.KeyEvent: char getMatch(char[])>','<java.lang.Character$Subset: void <init>(java.lang.String)>','<java.lang.ExceptionInInitializerError: void <init>()>','<java.io.File: java.io.File[] listRoots()>','<android.telephony.TelephonyManager: int getSimState()>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>','<android.graphics.Paint$Cap: android.graphics.Paint$Cap[] values()>','<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>','<android.graphics.Movie: void <init>()>','<android.util.SparseBooleanArray: void <init>(int)>','<android.widget.ListView: int getDividerHeight()>','<java.lang.String: byte[] getBytes()>','<android.content.res.AssetManager$AssetInputStream: int read()>','<java.util.BitSet: void set(int,int)>','<java.net.URLConnection: java.util.Map getHeaderFields()>','<android.graphics.RectF: void <init>(float,float,float,float)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>','<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>','<java.lang.Integer: int numberOfTrailingZeros(int)>','<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>','<android.content.ComponentName: java.lang.String getClassName()>','<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>','<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>','<java.net.DatagramPacket: void setPort(int)>','<android.net.Uri$Builder: android.net.Uri$Builder fragment(java.lang.String)>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>','<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>','<android.app.Activity: void onPostCreate(android.os.Bundle)>','<android.webkit.WebView: int computeVerticalScrollRange()>','<android.util.SparseBooleanArray: boolean get(int,boolean)>','<java.lang.ClassLoader: java.lang.Package[] getPackages()>','<java.net.DatagramPacket: byte[] getData()>','<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()>','<android.view.ViewGroup: boolean hasFocusable()>','<java.util.Random: int nextInt(int)>','<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>','<java.lang.Integer: int numberOfLeadingZeros(int)>','<java.lang.String: java.lang.CharSequence subSequence(int,int)>','<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>','<java.lang.StringBuilder: void <init>(java.lang.String)>','<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>','<java.io.PrintWriter: void println(double)>','<android.widget.AdapterView: void removeViewAt(int)>','<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>','<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()>','<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<android.graphics.Path: void <init>(android.graphics.Path)>','<android.graphics.Typeface: void finalize()>','<android.app.ExpandableListActivity: void onGroupCollapse(int)>','<android.telephony.TelephonyManager: java.lang.String getDeviceId()>','<java.lang.Thread: void <init>()>','<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>','<java.lang.Integer: int signum(int)>','<android.view.View: int getTop()>','<org.apache.http.ProtocolVersion: int getMajor()>','<android.content.pm.InstrumentationInfo: java.lang.String toString()>','<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>','<android.app.Activity: void onWindowFocusChanged(boolean)>','<android.app.Dialog: void unregisterForContextMenu(android.view.View)>','<android.view.View: void setNextFocusLeftId(int)>','<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>','<android.graphics.Matrix: void mapPoints(float[],float[])>','<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>','<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>','<java.lang.Byte: int compareTo(java.lang.Byte)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>','<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>','<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>','<java.net.InetAddress: boolean isMCNodeLocal()>','<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>','<android.view.KeyEvent: long getEventTime()>','<android.app.ActivityManager$RunningTaskInfo: void <clinit>()>','<android.database.sqlite.SQLiteProgram: void <init>()>','<android.view.View: boolean removeCallbacks(java.lang.Runnable)>','<android.view.View: void invalidate(android.graphics.Rect)>','<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)>','<android.media.MediaPlayer: void finalize()>','<android.os.Bundle: void putByteArray(java.lang.String,byte[])>','<android.app.Dialog: void closeOptionsMenu()>','<android.widget.TextView: int computeHorizontalScrollRange()>','<android.view.MotionEvent: int getHistorySize()>','<android.graphics.Paint$Cap: android.graphics.Paint$Cap valueOf(java.lang.String)>','<android.os.RemoteException: void <init>()>','<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>','<java.lang.Character: int codePointAt(char[],int)>','<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>','<java.io.File: boolean mkdir()>','<java.io.File: java.net.URL toURL()>','<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>','<android.widget.TextView: void endBatchEdit()>','<java.nio.channels.FileChannel$MapMode: void <init>()>','<java.lang.AbstractStringBuilder: java.lang.String toString()>','<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>','<android.os.Parcel: android.os.Parcel obtain()>','<android.content.Intent: java.lang.Object clone()>','<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>','<java.net.Socket: int getSoTimeout()>','<android.view.ViewGroup: void measureChildren(int,int)>','<android.graphics.Region: android.graphics.Path getBoundaryPath()>','<java.net.DatagramSocket: void connect(java.net.InetAddress,int)>','<android.text.InputFilter$AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<android.text.Layout: int getOffsetForHorizontal(int,float)>','<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.AssertionError: void <init>()>','<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>','<android.graphics.RectF: void union(android.graphics.RectF)>','<android.widget.TextView: void setMaxEms(int)>','<android.net.wifi.WifiInfo: int getNetworkId()>','<java.io.File: void <init>(java.io.File,java.lang.String)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>','<android.content.Intent: int fillIn(android.content.Intent,int)>','<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)>','<android.database.sqlite.SQLiteClosable: void releaseReference()>','<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>','<java.nio.Buffer: int remaining()>','<android.net.Uri: boolean equals(java.lang.Object)>','<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region$Op)>','<android.widget.TextView: void onMeasure(int,int)>','<java.lang.ThreadGroup: void list()>','<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>','<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[])>','<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>','<android.widget.TextView: int getCompoundPaddingRight()>','<java.lang.String: void <init>(byte[],int,int,java.lang.String)>','<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>','<android.app.Dialog: void setTitle(int)>','<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>','<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>','<java.io.PrintStream: void println(long)>','<java.io.PrintStream: void <init>(java.io.File,java.lang.String)>','<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>','<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>','<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>','<android.graphics.drawable.Drawable: boolean onLevelChange(int)>','<java.security.CodeSigner: java.lang.String toString()>','<java.util.ArrayList: boolean contains(java.lang.Object)>','<android.widget.Scroller: void startScroll(int,int,int,int)>','<android.widget.TextView: int getCompoundPaddingBottom()>','<org.apache.http.util.CharArrayBuffer: int indexOf(int)>','<android.app.Activity: void setTitleColor(int)>','<java.lang.StringBuilder: java.lang.StringBuilder append(float)>','<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>','<java.lang.Character: int getNumericValue(char)>','<java.nio.CharBuffer: void <init>()>','<java.lang.Float: long longValue()>','<android.graphics.RectF: boolean contains(android.graphics.RectF)>','<android.os.Parcel: void readStringArray(java.lang.String[])>','<android.os.Bundle: void <init>(java.lang.ClassLoader)>','<android.os.Bundle: int getInt(java.lang.String)>','<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>','<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>','<java.lang.StringBuilder: java.lang.StringBuilder append(int)>','<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>','<java.io.FileInputStream: int read(byte[],int,int)>','<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>','<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>','<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>','<android.view.View: boolean requestFocus(int)>','<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()>','<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>','<android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm[] values()>','<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>','<android.graphics.Region: void <init>(int,int,int,int)>','<android.os.Messenger: int describeContents()>','<java.io.InputStream: void reset()>','<java.lang.Object: void wait()>','<android.content.IntentFilter: boolean hasAction(java.lang.String)>','<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>','<java.security.cert.CertificateException: void <init>(java.lang.String)>','<android.view.View: int getHeight()>','<android.view.animation.Animation: boolean getFillBefore()>','<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>','<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)>','<java.lang.StringBuilder: java.lang.StringBuilder append(double)>','<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>','<java.math.BigInteger: int bitCount()>','<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<android.content.res.Configuration: int diff(android.content.res.Configuration)>','<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>','<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>','<android.view.View: int getMeasuredWidth()>','<java.nio.FloatBuffer: int hashCode()>','<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>','<java.io.PrintStream: void print(char[])>','<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>','<android.view.View: void setEnabled(boolean)>','<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>','<android.os.Handler: boolean post(java.lang.Runnable)>','<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>','<java.net.URI: java.net.URI parseServerAuthority()>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>','<java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock forName(java.lang.String)>','<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>','<android.content.ContextWrapper: android.content.res.Resources getResources()>','<android.view.MotionEvent: void <init>()>','<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>','<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer allocate(int)>','<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>','<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>','<java.util.AbstractList: java.util.Iterator iterator()>','<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)>','<android.content.res.TypedArray: void recycle()>','<java.security.KeyException: void <init>(java.lang.String)>','<android.webkit.WebView: void destroy()>','<android.graphics.Point: void set(int,int)>','<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>','<android.graphics.Canvas: void scale(float,float,float,float)>','<android.location.Location: void removeAltitude()>','<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>','<java.lang.NoSuchFieldException: void <init>(java.lang.String)>','<java.nio.FloatBuffer: int arrayOffset()>','<java.io.File: java.lang.String getAbsolutePath()>','<java.nio.LongBuffer: java.nio.LongBuffer put(long[])>','<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>','<android.content.ComponentName: java.lang.String toString()>','<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>','<java.lang.Number: short shortValue()>','<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()>','<android.widget.TextView: void setSelected(boolean)>','<android.content.ContextWrapper: void clearWallpaper()>','<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>','<java.util.AbstractMap: void putAll(java.util.Map)>','<android.graphics.Region: boolean set(int,int,int,int)>','<android.os.Handler: boolean hasMessages(int)>','<java.net.InetAddress: java.lang.String getCanonicalHostName()>','<android.util.SparseBooleanArray: void delete(int)>','<android.os.Parcel: void writeFloatArray(float[])>','<java.security.cert.CertificateEncodingException: void <init>(java.lang.String)>','<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.widget.TextView: float getTextSize()>','<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>','<java.util.Date: void setDate(int)>','<android.view.WindowManager$LayoutParams: void <clinit>()>','<android.graphics.Canvas: android.graphics.Rect getClipBounds()>','<android.graphics.Point: void <init>(int,int)>','<java.util.HashMap: java.util.Set entrySet()>','<android.view.MotionEvent: float getSize()>','<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>','<android.app.ActivityManager$RecentTaskInfo: int describeContents()>','<android.widget.ExpandableListView: boolean expandGroup(int)>','<java.nio.channels.ServerSocketChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region$Op)>','<java.nio.channels.spi.AbstractSelectableChannel: java.lang.Object blockingLock()>','<android.widget.ExpandableListView: long getExpandableListPosition(int)>','<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>','<java.nio.IntBuffer: boolean equals(java.lang.Object)>','<java.nio.IntBuffer: java.nio.IntBuffer wrap(int[])>','<java.lang.ThreadGroup: boolean isDestroyed()>','<android.widget.TextView: void setTextAppearance(android.content.Context,int)>','<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>','<java.lang.String: void <init>(byte[],java.lang.String)>','<java.io.Writer: void <init>(java.lang.Object)>','<android.view.View: void setHorizontalScrollBarEnabled(boolean)>','<java.net.Socket: java.nio.channels.SocketChannel getChannel()>','<org.apache.http.message.ParserCursor: boolean atEnd()>','<java.net.URI: java.lang.String getRawSchemeSpecificPart()>','<java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>','<android.app.PendingIntent: void <clinit>()>','<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.widget.AbsListView: boolean isStackFromBottom()>','<android.provider.Settings$System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>','<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>','<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>','<android.view.animation.Animation: long getDuration()>','<android.view.View: void getDrawingRect(android.graphics.Rect)>','<java.lang.VerifyError: void <init>(java.lang.String)>','<android.view.View: float getTopFadingEdgeStrength()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)>','<java.net.ServerSocket: java.lang.String toString()>','<android.content.res.Resources: int getColor(int)>','<android.webkit.WebSettings: boolean getSavePassword()>','<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>','<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>','<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>','<android.text.style.URLSpan: void <init>(android.os.Parcel)>','<java.io.File: java.io.File getParentFile()>','<android.view.inputmethod.CompletionInfo: void <clinit>()>','<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>','<android.webkit.WebView: void stopLoading()>','<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>','<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>','<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>','<android.webkit.CallbackProxy: void setDownloadListener(android.webkit.DownloadListener)>','<java.net.URI: java.lang.String getScheme()>','<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>','<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()>','<android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm valueOf(java.lang.String)>','<android.content.res.Configuration: void <clinit>()>','<android.webkit.Plugin: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<java.nio.channels.spi.AbstractSelector: void begin()>','<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)>','<java.lang.StringBuilder: java.lang.StringBuilder reverse()>','<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>','<android.view.KeyEvent: long getDownTime()>','<android.os.Bundle: long getLong(java.lang.String,long)>','<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)>','<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>','<android.view.Window: void setLayout(int,int)>','<android.graphics.Path$FillType: void <clinit>()>','<java.math.BigInteger: int compareTo(java.lang.Object)>','<android.widget.ListView: int getChoiceMode()>','<java.math.BigInteger: java.math.BigInteger probablePrime(int,java.util.Random)>','<java.lang.reflect.Field: void <init>()>','<android.os.PowerManager: void <init>()>','<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>','<android.view.KeyEvent: int describeContents()>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int,int,int)>','<android.webkit.CallbackProxy: void onPageFinished(java.lang.String)>','<android.graphics.drawable.Drawable: void <init>()>','<java.net.UnknownHostException: void <init>()>','<java.lang.reflect.Constructor: int getModifiers()>','<android.content.res.Resources: int getInteger(int)>','<java.lang.Class: boolean isEnum()>','<java.net.Socket: void setReceiveBufferSize(int)>','<android.graphics.Matrix: boolean postRotate(float,float,float)>','<android.view.View: int[] onCreateDrawableState(int)>','<java.util.Date: int compareTo(java.lang.Object)>','<android.util.SparseBooleanArray: int indexOfValue(boolean)>','<java.util.BitSet: int hashCode()>','<android.content.IntentFilter$AuthorityEntry: void <init>(java.lang.String,java.lang.String)>','<android.view.ViewGroup: void setClipChildren(boolean)>','<android.view.ViewGroup: void setDescendantFocusability(int)>','<android.util.Log: int i(java.lang.String,java.lang.String)>','<java.net.URL: java.io.InputStream openStream()>','<java.lang.Thread: void suspend()>','<java.net.MalformedURLException: void <init>()>','<android.webkit.WebView: int getProgress()>','<android.content.ContentResolver: void <init>(android.content.Context)>','<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>','<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>','<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>','<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>','<java.util.BitSet: int nextClearBit(int)>','<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>','<android.view.View: android.view.ViewParent getParent()>','<java.nio.channels.spi.AbstractSelector: java.util.Set cancelledKeys()>','<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>','<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>','<android.content.res.AssetManager$AssetInputStream: int available()>','<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>','<java.lang.IndexOutOfBoundsException: void <init>()>','<android.content.Intent: java.lang.String getType()>','<android.widget.AdapterView: boolean canAnimate()>','<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>','<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>','<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>','<android.widget.AbsListView: void setTranscriptMode(int)>','<android.graphics.RectF: float height()>','<android.graphics.drawable.Drawable: int[] getState()>','<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>','<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>','<android.widget.TextView: void setImeOptions(int)>','<android.view.View: void scrollTo(int,int)>','<android.graphics.Paint$Style: android.graphics.Paint$Style valueOf(java.lang.String)>','<android.content.pm.ComponentInfo: int getIconResource()>','<android.webkit.WebSettings: boolean getBuiltInZoomControls()>','<android.content.ContentProvider: void setWritePermission(java.lang.String)>','<android.widget.TextView: void onWindowFocusChanged(boolean)>','<java.lang.Double: boolean isInfinite()>','<android.content.res.AssetManager$AssetInputStream: void finalize()>','<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config[] values()>','<android.graphics.Paint$Cap: void <clinit>()>','<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent$Callback)>','<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>','<android.graphics.Bitmap: void setPixel(int,int,int)>','<android.test.mock.MockContentResolver: void <init>()>','<android.graphics.drawable.Drawable: int getIntrinsicHeight()>','<android.webkit.WebView: int computeHorizontalScrollRange()>','<java.nio.channels.Selector: java.nio.channels.Selector open()>','<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>','<android.graphics.Matrix: void setSkew(float,float)>','<java.net.DatagramSocket: void send(java.net.DatagramPacket)>','<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)>','<android.view.ViewGroup: void addView(android.view.View,int,int)>','<android.os.Parcel: void writeLongArray(long[])>','<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>','<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>','<java.util.ArrayList: java.lang.Object[] toArray()>','<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>','<java.util.Locale: void <init>(java.lang.String,java.lang.String)>','<android.content.res.AssetManager$AssetInputStream: int getAssetInt()>','<android.os.Message: void writeToParcel(android.os.Parcel,int)>','<java.io.FileOutputStream: void write(byte[])>','<java.lang.reflect.AccessibleObject: boolean isAccessible()>','<android.text.Layout: int getLineForOffset(int)>','<java.nio.ShortBuffer: int hashCode()>','<java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>','<android.widget.AbsListView: int getCacheColorHint()>','<android.view.View: boolean requestFocusFromTouch()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>','<android.database.sqlite.SQLiteQuery: void bindLong(int,long)>','<java.math.BigInteger: java.math.BigInteger nextProbablePrime()>','<java.util.HashMap: boolean containsKey(java.lang.Object)>','<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer wrap(double[],int,int)>','<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>','<android.webkit.WebView: void onMeasure(int,int)>','<java.net.SocketException: void <init>()>','<android.graphics.Path: void reset()>','<android.content.res.ColorStateList: void <clinit>()>','<java.net.URL: java.lang.String getPath()>','<java.lang.Integer: int lowestOneBit(int)>','<android.view.View: boolean performLongClick()>','<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>','<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)>','<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>','<java.security.cert.CertPath$CertPathRep: void <init>(java.lang.String,byte[])>','<java.security.cert.CertPath: java.lang.String getType()>','<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>','<java.lang.reflect.Constructor: int hashCode()>','<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>','<android.util.SparseBooleanArray: boolean get(int)>','<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>','<java.lang.ThreadGroup: void setMaxPriority(int)>','<android.widget.TextView: void debug(int)>','<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>','<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>','<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>','<android.os.PowerManager$WakeLock: void acquire()>','<android.view.View: void onLayout(boolean,int,int,int,int)>','<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>','<android.app.Dialog: void cancel()>','<java.util.HashMap: boolean containsValue(java.lang.Object)>','<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>','<java.lang.Integer: void <init>(int)>','<android.widget.TextView: void setTextColor(int)>','<java.io.File: java.lang.String getName()>','<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>','<java.lang.Float: short shortValue()>','<java.security.CodeSource: int hashCode()>','<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>','<java.lang.VirtualMachineError: void <init>(java.lang.String)>','<android.view.ViewGroup: void clearDisappearingChildren()>','<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)>','<android.app.Activity: android.app.Application getApplication()>','<java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)>','<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>','<java.lang.Integer: int reverse(int)>','<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>','<android.util.SparseBooleanArray: void put(int,boolean)>','<android.os.Message: void <clinit>()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: long skip(long)>','<java.net.DatagramSocketImpl: void connect(java.net.InetAddress,int)>','<android.graphics.Paint: boolean isLinearText()>','<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>','<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>','<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>','<android.webkit.WebSettings$TextSize: void <clinit>()>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>','<android.view.View: void onDetachedFromWindow()>','<java.security.SignatureException: void <init>(java.lang.String)>','<java.nio.Buffer: int limit()>','<java.net.URI: java.lang.String getRawUserInfo()>','<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.util.SparseArray: void setValueAt(int,java.lang.Object)>','<android.graphics.Path: void offset(float,float)>','<android.content.pm.IPackageInstallObserver$Stub: android.content.pm.IPackageInstallObserver asInterface(android.os.IBinder)>','<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>','<android.text.Editable$Factory: android.text.Editable newEditable(java.lang.CharSequence)>','<java.nio.channels.spi.AbstractSelector: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.view.MenuInflater: void inflate(int,android.view.Menu)>','<android.content.IntentFilter: java.lang.String getCategory(int)>','<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>','<android.content.Intent$ShortcutIconResource: void <clinit>()>','<android.graphics.Rect: void <init>(android.graphics.Rect)>','<java.io.PrintWriter: void <init>(java.lang.String)>','<android.view.Window: boolean hasSoftInputMode()>','<android.view.animation.Transformation: void setTransformationType(int)>','<android.widget.AbsListView: float getBottomFadingEdgeStrength()>','<java.io.FileInputStream: void <init>(java.lang.String)>','<java.nio.channels.ServerSocketChannel: int validOps()>','<java.security.Timestamp: void <init>(java.util.Date,java.security.cert.CertPath)>','<android.view.View: int getNextFocusDownId()>','<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>','<android.widget.Scroller: void <init>(android.content.Context)>','<android.content.BroadcastReceiver: boolean getDebugUnregister()>','<android.view.animation.LayoutAnimationController: boolean willOverlap()>','<java.nio.IntBuffer: java.nio.IntBuffer get(int[])>','<java.lang.Package: java.lang.Package getPackage(java.lang.String)>','<android.os.Bundle: double[] getDoubleArray(java.lang.String)>','<android.view.MotionEvent: java.lang.String toString()>','<android.graphics.Paint$Style: android.graphics.Paint$Style[] values()>','<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>','<java.lang.String: void <init>()>','<java.lang.Long: java.lang.Long getLong(java.lang.String)>','<java.lang.Short: short reverseBytes(short)>','<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>','<android.widget.TextView: int getSelectionStart()>','<android.view.View: int[] getDrawableState()>','<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>','<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>','<java.io.PrintStream: void print(java.lang.Object)>','<java.io.File: void <init>(java.net.URI)>','<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>','<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>','<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>','<android.view.View: boolean isDuplicateParentStateEnabled()>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>','<android.telephony.ServiceState: void <clinit>()>','<javax.security.cert.CertificateException: void <init>()>','<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>','<android.net.wifi.WifiConfiguration$Status: void <init>()>','<java.io.PrintStream: void println(boolean)>','<java.net.ServerSocket: void setReceiveBufferSize(int)>','<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>','<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>','<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>','<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>','<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>','<android.graphics.Canvas: void <init>(javax.microedition.khronos.opengles.GL)>','<java.util.ArrayList: boolean addAll(java.util.Collection)>','<android.widget.TextView: int getCompoundDrawablePadding()>','<java.lang.Character: int digit(char,int)>','<java.io.UnsupportedEncodingException: void <init>()>','<android.graphics.Rect: void set(android.graphics.Rect)>','<java.lang.Thread: void resume()>','<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>','<android.widget.TextView: void setHighlightColor(int)>','<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>','<java.security.cert.CertificateParsingException: void <init>(java.lang.Throwable)>','<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>','<java.lang.IllegalAccessError: void <init>(java.lang.String)>','<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])>','<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>','<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>','<android.graphics.Region: boolean set(android.graphics.Region)>','<android.graphics.Matrix$ScaleToFit: void <clinit>()>','<java.security.cert.Certificate$CertificateRep: java.lang.Object readResolve()>','<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>','<java.util.Date: int compareTo(java.util.Date)>','<android.view.View: int getSuggestedMinimumWidth()>','<android.location.GpsStatus: int getTimeToFirstFix()>','<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>','<android.view.View: int getPaddingTop()>','<android.app.PendingIntent$CanceledException: void <init>(java.lang.String)>','<android.view.View: int resolveSize(int,int)>','<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>','<java.net.ServerSocket: void <init>()>','<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>','<java.security.CodeSource: boolean implies(java.security.CodeSource)>','<java.lang.UnsatisfiedLinkError: void <init>()>','<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>','<android.view.WindowManager$BadTokenException: void <init>(java.lang.String)>','<java.security.cert.CertificateParsingException: void <init>()>','<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>','<java.util.Date: void setMonth(int)>','<java.lang.reflect.Method: boolean isBridge()>','<java.security.Timestamp: java.lang.String toString()>','<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>','<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>','<android.graphics.Paint: void set(android.graphics.Paint)>','<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>','<android.view.MotionEvent: float getHistoricalPressure(int)>','<java.io.FileInputStream: void finalize()>','<java.lang.Character: int codePointBefore(char[],int)>','<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()>','<android.widget.ListView$FixedViewInfo: void <init>(android.widget.ListView)>','<android.webkit.WebSettings: void setMinimumFontSize(int)>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>','<android.view.View: void <clinit>()>','<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>','<java.lang.AssertionError: void <init>(boolean)>','<java.net.ServerSocket: void setSocketFactory(java.net.SocketImplFactory)>','<android.content.Context: java.lang.CharSequence getText(int)>','<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])>','<java.lang.String: int lastIndexOf(int)>','<android.graphics.Region: void <init>(android.graphics.Region)>','<java.lang.Character: boolean isDefined(char)>','<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<java.math.BigInteger: boolean isProbablePrime(int)>','<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.view.ViewGroup: void removeAllViews()>','<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>','<android.view.animation.Animation: android.view.animation.Animation clone()>','<android.graphics.Rect: void union(int,int,int,int)>','<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>','<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>','<java.lang.reflect.Field: java.lang.String toString()>','<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>','<java.lang.Thread$State: void <clinit>()>','<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>','<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>','<android.app.Activity: void onDestroy()>','<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>','<java.net.ServerSocket: void close()>','<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>','<android.os.Parcel: void readFloatArray(float[])>','<java.net.DatagramSocket: int getSoTimeout()>','<java.util.AbstractCollection: boolean contains(java.lang.Object)>','<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>','<java.nio.channels.spi.AbstractSelectableChannel: void implCloseChannel()>','<android.graphics.Paint: void <init>(android.graphics.Paint)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>','<java.lang.Boolean: boolean booleanValue()>','<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>','<android.view.View: int computeVerticalScrollExtent()>','<java.nio.channels.DatagramChannel: java.nio.channels.DatagramChannel open()>','<java.lang.Boolean: void <init>(boolean)>','<java.net.Socket: void bind(java.net.SocketAddress)>','<java.lang.Thread: long getId()>','<android.graphics.Rect: void union(int,int)>','<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<android.view.ViewGroup: void removeView(android.view.View)>','<android.view.View$MeasureSpec: int getSize(int)>','<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>','<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>','<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()>','<java.lang.Character: boolean isSpaceChar(char)>','<java.lang.ThreadGroup: java.lang.String getName()>','<android.webkit.WebSettings$LayoutAlgorithm: void <clinit>()>','<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>','<android.content.ContextWrapper: android.content.Context getBaseContext()>','<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>','<android.hardware.Camera$Size: void <init>(android.hardware.Camera,int,int)>','<java.util.Date: int hashCode()>','<android.widget.AbsListView: int[] onCreateDrawableState(int)>','<android.graphics.Matrix: java.lang.String toString()>','<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>','<java.net.DatagramSocket: boolean isConnected()>','<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>','<android.app.Activity: void setTitle(java.lang.CharSequence)>','<java.security.KeyException: void <init>(java.lang.Throwable)>','<android.os.Parcel: void writeTypedList(java.util.List)>','<android.widget.TextView: void setScroller(android.widget.Scroller)>','<java.lang.Byte: java.lang.Byte decode(java.lang.String)>','<android.graphics.Region: void finalize()>','<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>','<android.view.View: int getVisibility()>','<java.util.AbstractMap: boolean equals(java.lang.Object)>','<java.util.UUID: long getLeastSignificantBits()>','<java.lang.Character: int toChars(int,char[],int)>','<java.net.NetworkInterface: java.lang.String toString()>','<java.lang.Package: java.lang.String getSpecificationVendor()>','<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>','<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()>','<android.webkit.WebSettings: boolean getLightTouchEnabled()>','<android.net.wifi.WifiManager: boolean removeNetwork(int)>','<android.graphics.Paint: boolean isFakeBoldText()>','<java.net.URI: java.lang.String getAuthority()>','<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>','<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>','<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>','<android.net.http.SslCertificate: java.lang.String toString()>','<android.webkit.CallbackProxy: android.webkit.WebView createWindow(boolean,boolean)>','<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>','<java.util.HashMap: boolean isEmpty()>','<android.os.Looper: void quit()>','<android.os.Bundle: void clear()>','<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>','<java.util.Date: java.lang.Object clone()>','<java.util.UUID: java.lang.String toString()>','<java.math.BigInteger: java.math.BigInteger negate()>','<java.net.Proxy$Type: java.net.Proxy$Type valueOf(java.lang.String)>','<java.lang.Byte: java.lang.String toString()>','<java.lang.Thread: void stop()>','<java.lang.StackOverflowError: void <init>(java.lang.String)>','<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<java.math.BigInteger: void <init>(byte[])>','<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[],int,int)>','<android.app.ActivityManager$ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>','<android.os.Message: android.os.Message obtain()>','<java.security.Permission: java.lang.String toString()>','<android.os.Bundle: java.lang.String toString()>','<android.graphics.RectF: void round(android.graphics.Rect)>','<java.io.FileInputStream: int available()>','<java.nio.FloatBuffer: int compareTo(java.lang.Object)>','<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>','<android.view.MotionEvent: float getX()>','<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>','<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin$PreferencesClickHandler)>','<android.view.View: void setMinimumHeight(int)>','<java.lang.Package: boolean isCompatibleWith(java.lang.String)>','<android.graphics.RectF: void inset(float,float)>','<android.webkit.WebView: void resumeTimers()>','<android.content.pm.ResolveInfo: int describeContents()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>','<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>','<android.text.Layout: float getSecondaryHorizontal(int)>','<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>','<android.graphics.Paint: void reset()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: boolean markSupported()>','<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>','<android.net.wifi.WifiConfiguration$AuthAlgorithm: void <init>()>','<android.view.KeyEvent: int getUnicodeChar()>','<android.text.style.DynamicDrawableSpan: void <init>(int)>','<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>','<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>','<android.os.Binder: void finalize()>','<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>','<android.widget.AbsListView: void onDetachedFromWindow()>','<android.os.Messenger: boolean equals(java.lang.Object)>','<android.graphics.Rect: void offsetTo(int,int)>','<android.graphics.Point: int hashCode()>','<android.app.Dialog: void hide()>','<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>','<android.graphics.Path$Direction: android.graphics.Path$Direction valueOf(java.lang.String)>','<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>','<android.app.Dialog: android.view.Window getWindow()>','<android.app.Dialog: android.app.Activity getOwnerActivity()>','<android.view.Display: int getPixelFormat()>','<java.lang.Class: java.lang.reflect.Field[] getFields()>','<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>','<android.widget.TextView: boolean getLinksClickable()>','<android.app.Activity: void setSecondaryProgress(int)>','<android.webkit.CallbackProxy: void onReceivedIcon(android.graphics.Bitmap)>','<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>','<android.graphics.drawable.Drawable: void invalidateSelf()>','<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>','<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>','<android.app.Application: void onLowMemory()>','<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>','<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>','<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>','<java.security.spec.EllipticCurve: int hashCode()>','<java.util.BitSet: java.lang.Object clone()>','<android.graphics.Path: void moveTo(float,float)>','<android.graphics.Rasterizer: void finalize()>','<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>','<java.net.Socket: void setSoLinger(boolean,int)>','<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>','<java.net.Proxy$Type: java.net.Proxy$Type[] values()>','<org.apache.http.util.CharArrayBuffer: int length()>','<android.util.TypedValue: java.lang.String coerceToString(int,int)>','<android.telephony.TelephonyManager: int getDataActivity()>','<java.io.PrintWriter: void println(int)>','<android.app.PendingIntent: int hashCode()>','<java.lang.Character: int getType(int)>','<android.content.res.TypedArray: float getFloat(int,float)>','<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>','<java.lang.StringBuilder: void <init>(int)>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>','<android.app.ActivityManager$RecentTaskInfo: void readFromParcel(android.os.Parcel)>','<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>','<android.view.Window: int getForcedWindowFlags()>','<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>','<android.view.View: void finalize()>','<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>','<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>','<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>','<javax.security.auth.x500.X500Principal: java.lang.String toString()>','<android.os.Parcel: void readLongArray(long[])>','<android.widget.AbsListView: float getTopFadingEdgeStrength()>','<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String,int)>','<android.app.ActivityManager: java.util.List getProcessesInErrorState()>','<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>','<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>','<android.widget.AbsListView: boolean isScrollingCacheEnabled()>','<java.lang.Thread: void join(long)>','<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)>','<java.lang.Long: java.lang.Long valueOf(java.lang.String)>','<android.os.Bundle: void <init>()>','<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>','<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>','<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>','<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>','<android.database.sqlite.SQLiteProgram: void compile(java.lang.String,boolean)>','<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>','<java.lang.Character: boolean equals(java.lang.Object)>','<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>','<android.graphics.Matrix: float mapRadius(float)>','<java.lang.Character: boolean isJavaLetter(char)>','<android.view.KeyCharacterMap$KeyData: void <init>()>','<android.content.ContentValues: void <init>()>','<android.widget.TextView: int getTotalPaddingLeft()>','<java.lang.Thread: boolean isDaemon()>','<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>','<android.graphics.Path$Direction: android.graphics.Path$Direction[] values()>','<android.widget.AbsListView: int computeVerticalScrollExtent()>','<android.widget.TextView: void setCompoundDrawablePadding(int)>','<android.app.Dialog: void dismiss()>','<java.lang.Void: void <init>()>','<java.lang.reflect.Method: boolean equals(java.lang.Object)>','<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>','<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>','<java.lang.Integer: java.lang.String toString(int)>','<android.widget.ListView: void setAdapter(android.widget.Adapter)>','<java.net.URI: int compareTo(java.lang.Object)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>','<android.widget.TextView: void setTypeface(android.graphics.Typeface)>','<java.lang.Thread: boolean isAlive()>','<java.nio.channels.FileLock: java.lang.String toString()>','<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>','<org.apache.http.util.CharArrayBuffer: void clear()>','<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>','<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>','<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>','<java.lang.Thread: void checkAccess()>','<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>','<android.os.Bundle: boolean hasFileDescriptors()>','<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<android.content.Intent: java.lang.String toURI()>','<java.net.DatagramSocket: void bind(java.net.SocketAddress)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>','<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],boolean)>','<android.app.Activity: void startActivityForResult(android.content.Intent,int)>','<android.webkit.HttpAuthHandler: void handleMessage(android.os.Message)>','<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>','<android.os.Parcel: void writeStringList(java.util.List)>','<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>','<java.net.NetworkInterface: void <init>()>','<java.net.DatagramPacket: void setAddress(java.net.InetAddress)>','<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>','<java.lang.Thread: void <init>(java.lang.Runnable)>','<android.view.animation.Animation: boolean hasEnded()>','<java.lang.Byte: short shortValue()>','<android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode valueOf(java.lang.String)>','<android.graphics.Paint: android.graphics.Paint$Style getStyle()>','<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.util.TypedValue: void setTo(android.util.TypedValue)>','<java.lang.String: int length()>','<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>','<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>','<android.content.Intent: int getIntExtra(java.lang.String,int)>','<java.lang.Float: java.lang.String toString()>','<android.view.AbsSavedState: void <init>(android.os.Parcel)>','<java.net.Socket: boolean isConnected()>','<java.lang.Class: java.lang.reflect.Method[] getMethods()>','<java.lang.Enum: int compareTo(java.lang.Enum)>','<android.view.View: int[] mergeDrawableStates(int[],int[])>','<android.util.SparseBooleanArray: int keyAt(int)>','<android.os.Handler: void <init>(android.os.Handler$Callback)>','<java.lang.Character: boolean isJavaLetterOrDigit(char)>','<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>','<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>','<java.nio.CharBuffer: java.nio.CharBuffer append(char)>','<android.view.View: boolean onSetAlpha(int)>','<android.widget.AbsListView: long pointToRowId(int,int)>','<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>','<android.view.LayoutInflater: android.content.Context getContext()>','<java.net.InetAddress: boolean isSiteLocalAddress()>','<java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)>','<java.util.ArrayList: boolean isEmpty()>','<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType)>','<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>','<java.util.Date: int getMonth()>','<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()>','<java.lang.StringBuffer: java.lang.String substring(int)>','<android.text.InputFilter$AllCaps: void <init>()>','<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>','<android.content.ContentValues: java.lang.String toString()>','<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.content.Context: void <init>()>','<java.lang.StringBuffer: void trimToSize()>','<java.lang.Character: int codePointCount(char[],int,int)>','<android.view.Window: boolean isActive()>','<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()>','<android.content.ContentProvider: void onLowMemory()>','<java.lang.Object: java.lang.Object clone()>','<java.lang.Enum: boolean equals(java.lang.Object)>','<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>','<android.text.InputFilter$LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>','<java.lang.Character: int toTitleCase(int)>','<android.hardware.Camera: void <init>()>','<android.widget.Scroller: int getFinalY()>','<android.location.Criteria: void <clinit>()>','<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>','<java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()>','<java.lang.Long: java.lang.String toOctalString(long)>','<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat[] values()>','<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>','<android.webkit.WebSettings: boolean getJavaScriptEnabled()>','<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>','<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>','<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>','<android.location.Location: void set(android.location.Location)>','<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>','<android.content.ContextWrapper: java.lang.String[] databaseList()>','<android.widget.TextView: void setCursorVisible(boolean)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>','<android.app.Activity: android.view.View getCurrentFocus()>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,boolean)>','<java.nio.channels.Pipe: java.nio.channels.Pipe open()>','<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>','<android.view.MotionEvent: float getHistoricalX(int)>','<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>','<java.net.SocketImpl: int getLocalPort()>','<android.view.MotionEvent: void setEdgeFlags(int)>','<android.location.Location: void <init>(android.location.Location)>','<org.apache.http.ProtocolVersion: java.lang.String toString()>','<android.graphics.Bitmap: void recycle()>','<java.lang.Double: boolean equals(java.lang.Object)>','<android.view.Window: android.content.res.TypedArray getWindowStyle()>','<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config valueOf(java.lang.String)>','<java.lang.reflect.Constructor: boolean isSynthetic()>','<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>','<android.content.Intent: char getCharExtra(java.lang.String,char)>','<java.net.URLConnection: void setFileNameMap(java.net.FileNameMap)>','<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>','<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>','<android.telephony.ServiceState: void setStateOff()>','<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>','<java.util.AbstractList: java.util.ListIterator listIterator()>','<java.lang.Integer: int parseInt(java.lang.String,int)>','<android.webkit.WebView$HitTestResult: int getType()>','<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>','<java.net.InetAddress: boolean isMCLinkLocal()>','<java.net.URI: java.lang.String getRawFragment()>','<java.util.Random: int nextInt()>','<java.lang.StackTraceElement: int hashCode()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>','<android.content.res.TypedArray: int getColor(int,int)>','<android.content.pm.ApplicationInfo: int describeContents()>','<java.io.PrintWriter: void write(char[],int,int)>','<android.net.http.SslCertificate$DName: void <init>(android.net.http.SslCertificate,java.lang.String)>','<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>','<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>','<android.content.Intent: android.content.Intent addCategory(java.lang.String)>','<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>','<android.content.res.TypedArray: java.lang.String getString(int)>','<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>','<android.text.Layout: android.text.TextPaint getPaint()>','<android.widget.AbsListView: void onTouchModeChanged(boolean)>','<android.widget.TextView: void beginBatchEdit()>','<java.lang.Short: int intValue()>','<java.security.Permission: java.lang.String getName()>','<android.widget.Scroller: void setFinalY(int)>','<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>','<android.webkit.WebHistoryItem: void <init>()>','<android.os.Bundle: java.lang.String getString(java.lang.String)>','<java.net.DatagramSocket: void setSendBufferSize(int)>','<java.nio.channels.FileLock: boolean isShared()>','<javax.security.cert.CertificateEncodingException: void <init>(java.lang.String)>','<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<java.lang.AbstractStringBuilder: int codePointBefore(int)>','<android.widget.TextView$SavedState: java.lang.String toString()>','<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>','<android.os.Messenger: void <init>(android.os.IBinder)>','<java.util.Locale: java.lang.String[] getISOLanguages()>','<android.os.Parcel: void writeNoException()>','<android.content.Intent$ShortcutIconResource: int describeContents()>','<android.content.IntentFilter: java.lang.String getAction(int)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<java.lang.Class: java.lang.Object[] getEnumConstants()>','<android.app.Activity: void onNewIntent(android.content.Intent)>','<java.lang.String: java.lang.String valueOf(boolean)>','<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>','<android.view.View: boolean isEnabled()>','<java.util.Date: int getSeconds()>','<java.io.FileInputStream: java.io.FileDescriptor getFD()>','<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>','<android.graphics.Region: void <init>(android.graphics.Rect)>','<java.util.ArrayList: void ensureCapacity(int)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>','<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>','<android.view.View: int getBottomPaddingOffset()>','<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>','<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>','<android.net.wifi.WifiConfiguration$GroupCipher: void <clinit>()>','<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)>','<android.webkit.WebView: void clearView()>','<android.widget.ListView: void onMeasure(int,int)>','<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<java.nio.ShortBuffer: short[] array()>','<android.app.Dialog: void takeKeyEvents(boolean)>','<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>','<android.graphics.DrawFilter: void <init>()>','<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>','<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>','<android.content.pm.ResolveInfo: void <clinit>()>','<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>','<java.io.Reader: boolean markSupported()>','<android.graphics.Matrix: boolean postTranslate(float,float)>','<java.io.File: void <clinit>()>','<android.webkit.WebView: int findAll(java.lang.String)>','<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>','<java.io.FileInputStream: int read()>','<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>','<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>','<android.widget.AbsListView: void setSelector(int)>','<android.view.View: void draw(android.graphics.Canvas)>','<android.content.pm.ProviderInfo: void <init>()>','<android.view.Surface$OutOfResourcesException: void <init>()>','<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<java.lang.Integer: int reverseBytes(int)>','<android.view.View: void setClickable(boolean)>','<android.view.View: int getSuggestedMinimumHeight()>','<android.widget.TextView: void clearComposingText()>','<java.security.spec.EllipticCurve: java.math.BigInteger getB()>','<org.apache.http.util.ByteArrayBuffer: void setLength(int)>','<java.lang.StackTraceElement: boolean equals(java.lang.Object)>','<android.view.Window: android.content.Context getContext()>','<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>','<java.util.BitSet: void <init>()>','<android.view.ViewGroup: void setClipToPadding(boolean)>','<java.util.Date: void <init>(long)>','<android.view.Window: android.view.WindowManager getWindowManager()>','<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>','<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>','<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>','<android.content.Intent$ShortcutIconResource: void <init>()>','<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>','<java.nio.DoubleBuffer: int compareTo(java.nio.DoubleBuffer)>','<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>','<android.view.View: boolean hasFocus()>','<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>','<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>','<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>','<java.security.CodeSource: java.net.URL getLocation()>','<java.util.ArrayList: java.lang.Object get(int)>','<java.net.DatagramPacket: void <init>(byte[],int,java.net.SocketAddress)>','<android.content.ComponentName: java.lang.String toShortString()>','<android.view.View: boolean isShown()>','<java.io.File: boolean renameTo(java.io.File)>','<java.util.Random: double nextDouble()>','<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>','<android.util.Log: int e(java.lang.String,java.lang.String)>','<java.lang.Character: java.lang.String toString(char)>','<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>','<java.lang.Byte: java.lang.Byte valueOf(byte)>','<java.lang.Thread: java.util.Map getAllStackTraces()>','<android.content.pm.InstrumentationInfo: int describeContents()>','<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>','<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>','<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>','<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>','<java.lang.NullPointerException: void <init>()>','<android.view.View: void setDrawingCacheBackgroundColor(int)>','<android.widget.Scroller: int getCurrX()>','<java.lang.Integer: int rotateLeft(int,int)>','<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>','<java.lang.Short: void <clinit>()>','<java.nio.FloatBuffer: void <init>()>','<java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence,int,int)>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>','<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>','<android.graphics.drawable.Drawable: boolean setLevel(int)>','<android.view.inputmethod.ExtractedText: int describeContents()>','<android.widget.TextView$BufferType: android.widget.TextView$BufferType[] values()>','<android.os.Looper: void prepare()>','<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>','<java.util.Locale: void <init>(java.lang.String)>','<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>','<java.util.ArrayList: void trimToSize()>','<android.view.ViewGroup: void drawableStateChanged()>','<android.widget.TextView: int getBaseline()>','<java.lang.String: byte[] getBytes(java.lang.String)>','<android.content.IntentFilter: int countDataSchemes()>','<android.webkit.WebView: void setInitialScale(int)>','<java.net.DatagramSocket: void setTrafficClass(int)>','<android.app.ActivityManager$MemoryInfo: void <clinit>()>','<android.graphics.RectF: void set(float,float,float,float)>','<android.app.PendingIntent: java.lang.String getTargetPackage()>','<java.lang.AssertionError: void <init>(java.lang.Object)>','<java.security.cert.CertificateParsingException: void <init>(java.lang.String,java.lang.Throwable)>','<android.webkit.WebView: void clearSslPreferences()>','<java.lang.Character: boolean isJavaIdentifierPart(int)>','<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>','<java.lang.reflect.Field: int getModifiers()>','<java.lang.AbstractStringBuilder: int codePointCount(int,int)>','<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>','<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>','<android.widget.ListView: void clearChoices()>','<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>','<android.view.ViewGroup: void addView(android.view.View)>','<java.lang.Thread: void yield()>','<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>','<java.net.DatagramSocket: void <init>()>','<org.apache.http.message.BasicLineParser: boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>','<android.widget.TextView$SavedState: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.os.Bundle: void readFromParcel(android.os.Parcel)>','<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>','<java.lang.Character: boolean isUnicodeIdentifierPart(int)>','<android.content.Intent: java.lang.String getScheme()>','<android.webkit.WebView: void onWindowFocusChanged(boolean)>','<android.view.InflateException: void <init>(java.lang.String)>','<java.lang.Long: double doubleValue()>','<android.telephony.ServiceState: void setState(int)>','<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>','<android.widget.AbsListView: int pointToPosition(int,int)>','<java.net.URI: java.lang.String getQuery()>','<android.location.Criteria: boolean isBearingRequired()>','<java.util.BitSet: void and(java.util.BitSet)>','<java.net.URLConnection: void setDoOutput(boolean)>','<android.view.Window: void clearFlags(int)>','<org.apache.http.util.CharArrayBuffer: char[] buffer()>','<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>','<android.graphics.RectF: boolean intersect(float,float,float,float)>','<java.nio.CharBuffer: java.lang.String toString()>','<java.nio.FloatBuffer: java.nio.FloatBuffer allocate(int)>','<android.view.View: int getNextFocusUpId()>','<java.security.NoSuchProviderException: void <init>()>','<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.os.Parcel: java.lang.String[] createStringArray()>','<android.app.Dialog: void setCancelable(boolean)>','<android.view.inputmethod.ExtractedText: void <init>()>','<java.io.PrintWriter: void print(java.lang.Object)>','<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>','<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<android.content.pm.ProviderInfo: int describeContents()>','<android.graphics.Canvas$VertexMode: void <clinit>()>','<android.view.View: float getRightFadingEdgeStrength()>','<android.widget.Scroller: boolean computeScrollOffset()>','<android.view.View: int getScrollY()>','<android.content.pm.Signature: java.lang.String toCharsString()>','<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>','<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>','<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>','<java.lang.String: void <init>(byte[])>','<android.view.animation.Transformation: void clear()>','<android.content.Context: java.lang.String getString(int)>','<java.lang.Class: boolean isSynthetic()>','<java.lang.Package: java.lang.String getName()>','<java.net.Socket: boolean getReuseAddress()>','<android.widget.TextView: void <init>(android.content.Context)>','<android.app.Dialog: void openContextMenu(android.view.View)>','<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>','<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>','<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>','<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>','<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>','<java.nio.channels.FileChannel: void <init>()>','<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region$Op)>','<android.net.Uri: boolean isOpaque()>','<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>','<android.graphics.Matrix: boolean postScale(float,float)>','<android.content.pm.Signature: char[] toChars(char[],int[])>','<java.lang.Object: void finalize()>','<java.io.File: java.io.File getAbsoluteFile()>','<android.widget.ExpandableListView: int getPackedPositionType(long)>','<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)>','<java.nio.channels.spi.AbstractSelectableChannel: boolean isBlocking()>','<android.net.wifi.WifiManager: boolean saveConfiguration()>','<java.io.PrintStream: void print(float)>','<java.lang.String: java.lang.String valueOf(float)>','<android.os.Parcel: void readBooleanArray(boolean[])>','<android.view.animation.Animation: boolean isFillEnabled()>','<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>','<java.lang.Double: boolean isNaN()>','<java.net.URLConnection: void setAllowUserInteraction(boolean)>','<android.content.res.TypedArray: int getInt(int,int)>','<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>','<java.io.PrintWriter: void print(java.lang.String)>','<android.widget.TextView: int getPaintFlags()>','<android.app.LocalActivityManager: void dispatchDestroy(boolean)>','<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>','<android.graphics.Region: void <clinit>()>','<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>','<java.lang.Float: java.lang.Float valueOf(java.lang.String)>','<java.nio.Buffer: java.nio.Buffer rewind()>','<java.lang.Package: java.lang.String getSpecificationVersion()>','<android.content.BroadcastReceiver: void setResultData(java.lang.String)>','<java.lang.reflect.Field: char getChar(java.lang.Object)>','<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>','<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>','<android.graphics.Path: void transform(android.graphics.Matrix)>','<java.lang.Enum: java.lang.String toString()>','<java.nio.FloatBuffer: float[] array()>','<android.telephony.ServiceState: boolean getIsManualSelection()>','<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>','<org.apache.http.ProtocolVersion: boolean greaterEquals(org.apache.http.ProtocolVersion)>','<android.widget.TextView: android.text.TextPaint getPaint()>','<java.lang.Integer: java.lang.String toOctalString(int)>','<android.content.res.AssetManager$AssetInputStream: long skip(long)>','<java.net.Proxy: void <clinit>()>','<android.view.KeyEvent: boolean isShiftPressed()>','<android.view.AbsSavedState: int describeContents()>','<java.lang.Long: long longValue()>','<android.content.res.Resources$Theme: void dump(int,java.lang.String,java.lang.String)>','<android.widget.ListView: android.view.View findViewTraversal(int)>','<java.lang.Float: int compareTo(java.lang.Object)>','<android.os.Parcel: java.util.ArrayList createStringArrayList()>','<android.hardware.Camera$Parameters: int getPreviewFrameRate()>','<android.view.View: boolean performClick()>','<java.lang.Thread: java.lang.String getName()>','<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>','<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>','<android.content.res.Resources: int getDimensionPixelOffset(int)>','<java.lang.Character: char toUpperCase(char)>','<android.view.ViewGroup: android.view.View getFocusedChild()>','<android.webkit.CallbackProxy: void handleMessage(android.os.Message)>','<android.app.Activity: android.view.MenuInflater getMenuInflater()>','<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>','<android.os.Bundle: void putFloatArray(java.lang.String,float[])>','<java.lang.Integer: int compareTo(java.lang.Object)>','<java.security.cert.Certificate: int hashCode()>','<java.lang.NumberFormatException: void <init>()>','<java.lang.Boolean: boolean parseBoolean(java.lang.String)>','<java.lang.Byte: int compareTo(java.lang.Object)>','<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>','<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>','<android.os.Looper: void prepareMainLooper()>','<java.lang.OutOfMemoryError: void <init>()>','<android.widget.Scroller: int getFinalX()>','<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>','<android.os.Bundle: void putFloat(java.lang.String,float)>','<java.io.PrintStream: void println(char)>','<java.util.AbstractMap: boolean isEmpty()>','<android.webkit.WebView: void onScrollChanged(int,int,int,int)>','<android.provider.Settings$System: void <init>()>','<java.lang.Character: boolean isSpace(char)>','<java.net.Socket: boolean isOutputShutdown()>','<android.app.Activity: void setDefaultKeyMode(int)>','<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)>','<android.view.View: int getRightPaddingOffset()>','<java.io.PrintWriter: void flush()>','<java.math.BigInteger: java.math.BigInteger not()>','<java.nio.channels.FileLock: long size()>','<android.app.PendingIntent: int describeContents()>','<java.lang.Object: java.lang.String toString()>','<android.os.Bundle: void putInt(java.lang.String,int)>','<java.lang.Character: int compareTo(java.lang.Character)>','<android.graphics.MaskFilter: void finalize()>','<java.nio.ShortBuffer: void <init>()>','<android.widget.TextView: int computeVerticalScrollRange()>','<java.io.PrintWriter: void print(char)>','<android.location.Criteria: boolean isCostAllowed()>','<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>','<android.widget.Scroller: boolean isFinished()>','<android.widget.AbsListView: int getListPaddingTop()>','<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>','<java.net.SocketImpl: java.lang.String toString()>','<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>','<org.apache.http.message.BasicLineParser: void <clinit>()>','<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>','<java.lang.reflect.Constructor: void <init>()>','<android.database.sqlite.SQLiteDatabase: boolean isOpen()>','<android.graphics.Rect: boolean equals(java.lang.Object)>','<java.nio.ByteBuffer: java.lang.String toString()>','<java.util.Locale: java.lang.String[] getISOCountries()>','<android.location.Location: void <clinit>()>','<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.graphics.Xfermode: void finalize()>','<java.net.URL: java.lang.String getUserInfo()>','<android.view.View: int getScrollBarStyle()>','<android.graphics.Matrix: void finalize()>','<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>','<org.apache.http.ProtocolVersion: int getMinor()>','<android.app.PendingIntent: void send()>','<android.view.MotionEvent: float getHistoricalY(int)>','<java.security.PermissionCollection: void <init>()>','<android.os.Messenger: android.os.IBinder getBinder()>','<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.app.ActivityManager$RunningTaskInfo: void readFromParcel(android.os.Parcel)>','<android.view.animation.Transformation: int getTransformationType()>','<java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>','<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>','<android.widget.TextView: void setMinLines(int)>','<java.lang.InstantiationException: void <init>(java.lang.String)>','<android.app.Activity: void dismissDialog(int)>','<java.util.AbstractMap: int size()>','<java.lang.Character: boolean isISOControl(char)>','<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>','<java.lang.Character: boolean isWhitespace(char)>','<java.lang.String: int hashCode()>','<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>','<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>','<android.view.View: void saveHierarchyState(android.util.SparseArray)>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.app.Activity: void onPause()>','<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>','<android.graphics.Matrix: boolean preRotate(float)>','<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>','<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>','<android.widget.TextView: int getLeftPaddingOffset()>','<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>','<android.os.Looper: void setMessageLogging(android.util.Printer)>','<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()>','<java.net.URLConnection: boolean getDefaultAllowUserInteraction()>','<java.net.URI: java.net.URI normalize()>','<java.net.URI: java.net.URI relativize(java.net.URI)>','<android.test.mock.MockContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>','<java.security.cert.Certificate: void <init>(java.lang.String)>','<java.util.AbstractMap: void clear()>','<android.content.IntentFilter: int countDataPaths()>','<android.view.animation.Animation: long getStartTime()>','<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>','<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>','<java.lang.NoSuchMethodException: void <init>()>','<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<java.net.URLConnection: java.lang.String getHeaderField(int)>','<android.view.KeyEvent: boolean isModifierKey(int)>','<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>','<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>','<java.lang.Float: int compare(float,float)>','<java.net.URL: java.lang.String getAuthority()>','<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>','<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>','<android.text.Spannable$Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>','<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])>','<java.lang.Long: long rotateRight(long,int)>','<android.graphics.Point: void <init>(android.graphics.Point)>','<android.os.Message: int describeContents()>','<java.lang.Long: java.lang.String toString(long)>','<android.graphics.Rect: void union(android.graphics.Rect)>','<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>','<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>','<android.view.animation.Animation: void setRepeatMode(int)>','<org.apache.http.ProtocolVersion: boolean equals(java.lang.Object)>','<java.nio.IntBuffer: int compareTo(java.nio.IntBuffer)>','<android.view.View: int getPaddingBottom()>','<java.io.FilterOutputStream: void write(byte[])>','<java.lang.Integer: java.lang.String toString(int,int)>','<java.lang.StringBuffer: void setLength(int)>','<android.content.res.TypedArray: int getInteger(int,int)>','<java.util.HashMap: void <init>()>','<android.app.ActivityGroup: void onDestroy()>','<android.graphics.RectF: java.lang.String toString()>','<java.security.spec.EllipticCurve: byte[] getSeed()>','<android.text.style.ImageSpan: void <init>(android.content.Context,int)>','<java.lang.ThreadGroup: void resume()>','<java.lang.Thread: void sleep(long,int)>','<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>','<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>','<android.telephony.PhoneStateListener: void onDataActivity(int)>','<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>','<android.os.Bundle: void remove(java.lang.String)>','<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>','<java.lang.String: int indexOf(int)>','<java.lang.Character: boolean isIdentifierIgnorable(int)>','<android.content.res.Resources$Theme: void finalize()>','<java.lang.Long: int numberOfLeadingZeros(long)>','<android.content.IntentFilter: java.lang.String getDataType(int)>','<android.webkit.WebView: android.webkit.WebSettings getSettings()>','<android.graphics.Path: void rewind()>','<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>','<java.net.DatagramSocket: int getTrafficClass()>','<android.graphics.Path: void lineTo(float,float)>','<android.view.View: void dispatchSetPressed(boolean)>','<android.view.WindowManager$BadTokenException: void <init>()>','<android.widget.AdapterView: void setEmptyView(android.view.View)>','<java.security.KeyException: void <init>()>','<android.graphics.Path: void rMoveTo(float,float)>','<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>','<java.lang.Enum: java.lang.String name()>','<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>','<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>','<java.lang.StringBuffer: java.lang.StringBuffer append(float)>','<android.os.Bundle: void putBoolean(java.lang.String,boolean)>','<java.net.URL: java.lang.String toString()>','<android.webkit.WebView: void requestImageRef(android.os.Message)>','<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>','<java.lang.Thread: boolean isInterrupted()>','<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>','<java.util.Date: long getTime()>','<android.webkit.WebView: boolean canGoBackOrForward(int)>','<java.nio.ShortBuffer: java.nio.ShortBuffer allocate(int)>','<java.security.cert.CertificateExpiredException: void <init>(java.lang.String)>','<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>','<android.widget.TextView: int getImeActionId()>','<java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)>','<android.content.pm.PermissionGroupInfo: void <clinit>()>','<android.content.res.AssetManager$AssetInputStream: void reset()>','<java.lang.StringBuffer: java.lang.String substring(int,int)>','<android.content.ComponentName: java.lang.String getShortClassName()>','<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>','<java.net.Socket: void <init>(java.lang.String,int)>','<java.lang.Thread: void <init>(java.lang.String)>','<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>','<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>','<java.security.Permission: void <init>(java.lang.String)>','<android.view.View: java.lang.Object getTag()>','<java.net.DatagramSocket: int getSendBufferSize()>','<java.lang.LinkageError: void <init>()>','<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>','<java.io.PrintWriter: void <init>(java.io.Writer)>','<java.lang.String: java.lang.String[] split(java.lang.String,int)>','<java.lang.Character: char toTitleCase(char)>','<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)>','<android.net.wifi.WifiInfo: int getRssi()>','<android.location.Location: float getSpeed()>','<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>','<android.os.Binder: java.lang.String getInterfaceDescriptor()>','<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>','<android.telephony.TelephonyManager: boolean isNetworkRoaming()>','<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>','<android.view.ViewGroup: void detachViewsFromParent(int,int)>','<android.view.WindowManager$LayoutParams: void <init>(int)>','<android.widget.ListView: void setItemChecked(int,boolean)>','<android.content.res.AssetManager: void finalize()>','<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>','<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>','<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>','<android.os.Handler: java.lang.String toString()>','<android.graphics.RectF: float centerY()>','<java.net.InetAddress: boolean isReachable(int)>','<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()>','<android.provider.Settings$Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>','<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>','<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>','<java.net.URL: void <init>(java.net.URL,java.lang.String)>','<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>','<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>','<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>','<android.webkit.WebHistoryItem: int getId()>','<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)>','<java.net.Socket: java.io.InputStream getInputStream()>','<java.lang.Double: int compare(double,double)>','<android.view.View: boolean performHapticFeedback(int)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[])>','<android.widget.Scroller: void abortAnimation()>','<android.telephony.TelephonyManager: int getCallState()>','<java.lang.ClassNotFoundException: void <init>()>','<java.util.AbstractMap: java.util.Set keySet()>','<android.view.KeyEvent: int getFlags()>','<android.os.Bundle: double getDouble(java.lang.String)>','<java.lang.Character: int codePointAt(java.lang.CharSequence,int)>','<android.os.Parcel: long[] createLongArray()>','<android.content.pm.PackageInfo: int describeContents()>','<java.lang.Float: boolean isInfinite(float)>','<android.app.Activity: void onLowMemory()>','<android.content.Context: java.lang.String getString(int,java.lang.Object[])>','<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>','<android.content.pm.PackageInfo: void <init>()>','<android.os.Handler: void <init>(android.os.Looper)>','<android.app.ActivityManager: java.util.List getRunningTasks(int)>','<java.lang.String: int codePointBefore(int)>','<android.os.PatternMatcher: void <clinit>()>','<android.widget.AbsListView: void draw(android.graphics.Canvas)>','<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[])>','<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>','<javax.security.auth.x500.X500Principal: void <init>(java.io.InputStream)>','<java.lang.Integer: java.lang.String toHexString(int)>','<android.widget.AbsListView: void layoutChildren()>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>','<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int available()>','<android.os.Parcel: void writeByte(byte)>','<java.lang.Character: int codePointBefore(char[],int,int)>','<java.io.FileInputStream: void close()>','<android.graphics.Picture: void endRecording()>','<java.util.BitSet: void or(java.util.BitSet)>','<javax.security.auth.x500.X500Principal: java.lang.String getName()>','<android.telephony.CellLocation: void <init>()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>','<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>','<android.widget.TextView: void setIncludeFontPadding(boolean)>','<java.lang.reflect.Method: java.lang.Class getReturnType()>','<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>','<android.util.TypedValue: java.lang.String toString()>','<android.app.Activity: void finalize()>','<android.content.Intent: short getShortExtra(java.lang.String,short)>','<java.util.AbstractList: void add(int,java.lang.Object)>','<android.content.pm.ApplicationInfo: void <clinit>()>','<android.view.Window: boolean hasChildren()>','<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>','<java.net.SocketImpl: int getPort()>','<android.view.ViewGroup: void onAnimationEnd()>','<android.database.sqlite.SQLiteQuery: void <init>()>','<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>','<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>','<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>','<java.io.PrintWriter: void <init>(java.lang.String,java.lang.String)>','<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>','<android.graphics.Paint: boolean isUnderlineText()>','<java.net.Socket: void sendUrgentData(int)>','<android.view.KeyEvent: int getMetaState()>','<java.lang.Double: int intValue()>','<android.os.Message: void <init>()>','<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>','<java.net.InetAddress: boolean isLinkLocalAddress()>','<java.lang.Class: java.lang.String getCanonicalName()>','<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>','<android.app.ActivityManager$RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>','<android.widget.TextView: void computeScroll()>','<android.view.View: float getBottomFadingEdgeStrength()>','<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>','<java.net.URL: int getPort()>','<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>','<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>','<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>','<android.view.KeyEvent: char getNumber()>','<android.content.pm.ActivityInfo: void <init>()>','<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.Long: void <init>(java.lang.String)>','<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[])>','<android.graphics.Rect: java.lang.String toString()>','<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>','<java.lang.AbstractStringBuilder: void <init>()>','<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>','<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>','<java.lang.AbstractStringBuilder: java.lang.CharSequence subSequence(int,int)>','<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>','<android.graphics.Matrix: void setScale(float,float)>','<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>','<android.view.ViewGroup: void addView(android.view.View,int)>','<java.lang.Number: byte byteValue()>','<android.view.View: int getHorizontalFadingEdgeLength()>','<android.content.res.Resources: java.lang.String getResourcePackageName(int)>','<android.view.animation.Transformation: java.lang.String toString()>','<android.app.Activity: void onRestart()>','<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()>','<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>','<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>','<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>','<android.webkit.WebView$WebViewTransport: android.webkit.WebView getWebView()>','<android.webkit.WebSettings$TextSize: android.webkit.WebSettings$TextSize[] values()>','<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>','<java.io.Reader: int read(java.nio.CharBuffer)>','<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>','<android.location.Location: long getTime()>','<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>','<android.view.animation.Animation: void <init>()>','<java.lang.String: boolean endsWith(java.lang.String)>','<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>','<java.lang.Boolean: void <init>(java.lang.String)>','<java.lang.Thread$State: java.lang.Thread$State valueOf(java.lang.String)>','<java.lang.Character: boolean isLowerCase(char)>','<android.content.res.TypedArray: int getIndexCount()>','<android.location.Criteria: int describeContents()>','<java.io.PrintStream: void println(java.lang.String)>','<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>','<android.content.res.Resources: android.graphics.Movie getMovie(int)>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>','<android.view.KeyEvent: int getKeyCode()>','<android.app.Activity: void onContentChanged()>','<java.net.InetAddress: java.lang.String getHostName()>','<android.view.ViewGroup: void removeAllViewsInLayout()>','<android.content.Intent: java.util.Set getCategories()>','<android.graphics.Path: boolean isRect(android.graphics.RectF)>','<android.webkit.WebHistoryItem: java.lang.String getUrl()>','<org.apache.http.util.ByteArrayBuffer: void append(org.apache.http.util.CharArrayBuffer,int,int)>','<android.view.Window: android.view.Window$Callback getCallback()>','<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>','<android.database.ContentObserver: boolean deliverSelfNotifications()>','<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>','<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>','<android.widget.TextView: void setTextScaleX(float)>','<java.nio.channels.SelectionKey: boolean isWritable()>','<java.net.Socket: void shutdownOutput()>','<android.content.pm.InstrumentationInfo: void <init>()>','<java.io.FileDescriptor: void sync()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>','<android.graphics.Typeface: int getStyle()>','<android.graphics.Paint: boolean isAntiAlias()>','<org.apache.http.util.CharArrayBuffer: void <init>(int)>','<android.os.Parcel: void writeDoubleArray(double[])>','<java.util.MissingResourceException: java.lang.String getClassName()>','<java.util.BitSet: int nextSetBit(int)>','<android.widget.TextView: void setMaxHeight(int)>','<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>','<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>','<java.security.spec.ECPoint: boolean equals(java.lang.Object)>','<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>','<android.webkit.WebView: void findNext(boolean)>','<android.net.Uri: android.net.Uri fromFile(java.io.File)>','<android.os.Parcel: void writeBinderList(java.util.List)>','<java.lang.Long: long parseLong(java.lang.String)>','<android.net.wifi.WifiManager: boolean disconnect()>','<android.location.LocationManager: void removeTestProvider(java.lang.String)>','<android.view.MotionEvent: int getDeviceId()>','<java.nio.channels.spi.SelectorProvider: void <init>()>','<java.lang.Double: void <clinit>()>','<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.content.Intent$FilterComparison: int hashCode()>','<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>','<java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>','<android.os.Parcel: void recycle()>','<android.hardware.Camera$Parameters: int getInt(java.lang.String)>','<android.content.res.AssetFileDescriptor: void <clinit>()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>','<java.util.AbstractMap: java.lang.String toString()>','<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>','<android.view.View: void layout(int,int,int,int)>','<android.webkit.WebView: java.lang.String getTitle()>','<android.graphics.Matrix: boolean rectStaysRect()>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>','<android.view.View: void setWillNotDraw(boolean)>','<android.view.ViewGroup: void detachAllViewsFromParent()>','<java.lang.StringBuilder: void <init>()>','<android.os.Bundle: void putShort(java.lang.String,short)>','<android.content.IntentFilter: void <init>(java.lang.String)>','<java.nio.channels.FileLock: long position()>','<org.xmlpull.v1.XmlPullParserException: int getLineNumber()>','<android.widget.TextView: int getGravity()>','<android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType valueOf(java.lang.String)>','<android.location.Location: float bearingTo(android.location.Location)>','<android.graphics.Rect: void sort()>','<android.location.Location: void setLongitude(double)>','<android.graphics.drawable.Drawable: int getChangingConfigurations()>','<android.webkit.CallbackProxy: boolean uiOverrideKeyEvent(android.view.KeyEvent)>','<android.view.ViewGroup: boolean addStatesFromChildren()>','<java.lang.String: int codePointCount(int,int)>','<android.os.Bundle: void <init>(int)>','<android.graphics.Rect: void inset(int,int)>','<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>','<android.content.ComponentName: java.lang.String getPackageName()>','<java.lang.ExceptionInInitializerError: void <init>(java.lang.String)>','<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>','<android.app.Activity: int getChangingConfigurations()>','<android.util.SparseArray: int indexOfValue(java.lang.Object)>','<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>','<android.database.sqlite.SQLiteQuery: void bindNull(int)>','<java.lang.IllegalMonitorStateException: void <init>(java.lang.String)>','<android.graphics.RectF: void sort()>','<java.util.AbstractList: boolean equals(java.lang.Object)>','<java.lang.ClassLoader: void <init>()>','<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>','<android.text.TextPaint: void <init>(int)>','<java.net.NetworkInterface: int hashCode()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>','<android.os.Parcel: void readStringList(java.util.List)>','<android.location.Location: double convert(java.lang.String)>','<android.net.wifi.WifiInfo: java.lang.String getSSID()>','<android.view.View: void setHapticFeedbackEnabled(boolean)>','<java.lang.Character: boolean isMirrored(char)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,double)>','<java.lang.Character: boolean isLetter(char)>','<java.net.Socket: void close()>','<java.io.PrintWriter: void write(char[])>','<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>','<java.lang.String: void getBytes(int,int,byte[],int)>','<java.lang.Class: int getModifiers()>','<android.view.View: void buildDrawingCache()>','<java.net.URLConnection: boolean getDoInput()>','<java.lang.Character: char forDigit(int,int)>','<java.lang.Enum: java.lang.Class getDeclaringClass()>','<android.view.ViewGroup: android.view.View getChildAt(int)>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>','<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>','<android.view.View: int getWindowVisibility()>','<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>','<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>','<android.widget.ListView: void setHeaderDividersEnabled(boolean)>','<android.location.Location: void setSpeed(float)>','<java.lang.AbstractStringBuilder: char charAt(int)>','<android.app.Activity: void onPostResume()>','<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>','<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>','<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>','<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>','<android.graphics.Matrix: void setRotate(float,float,float)>','<android.app.Activity: void onStart()>','<android.app.Dialog: void openOptionsMenu()>','<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>','<java.io.PrintStream: void print(boolean)>','<java.lang.AssertionError: void <init>(char)>','<android.graphics.Path: android.graphics.Path$FillType getFillType()>','<android.webkit.WebView: boolean performLongClick()>','<android.app.Dialog: void show()>','<android.content.res.Configuration: int hashCode()>','<android.app.PendingIntent: void <init>()>','<android.telephony.TelephonyManager: int getNetworkType()>','<android.provider.Settings$System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>','<android.view.View: void setScrollBarStyle(int)>','<org.apache.http.ProtocolVersion: int compareToVersion(org.apache.http.ProtocolVersion)>','<android.os.Bundle: char getChar(java.lang.String)>','<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>','<android.widget.AbsListView: void setCacheColorHint(int)>','<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>','<android.widget.TextView: boolean onTextContextMenuItem(int)>','<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver$OnGlobalFocusChangeListener)>','<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>','<java.lang.reflect.Field: double getDouble(java.lang.Object)>','<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>','<java.lang.StringBuilder: java.lang.String toString()>','<android.content.pm.PackageManager$NameNotFoundException: void <init>()>','<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>','<android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit[] values()>','<java.io.PrintStream: java.io.PrintStream append(char)>','<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>','<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>','<android.widget.TextView: void setEms(int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>','<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>','<java.lang.Exception: void <init>(java.lang.Throwable)>','<android.widget.AbsListView: void onFilterComplete(int)>','<android.text.Editable$Factory: void <init>()>','<android.graphics.Picture: void <init>(android.graphics.Picture)>','<java.lang.String: int lastIndexOf(java.lang.String)>','<java.io.Reader: int read()>','<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>','<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)>','<android.view.View: int getVerticalScrollbarWidth()>','<android.app.ActivityManager: void restartPackage(java.lang.String)>','<android.view.View: void dispatchWindowVisibilityChanged(int)>','<java.lang.Short: float floatValue()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>','<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>','<java.util.BitSet: void set(int)>','<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>','<java.lang.Integer: java.lang.Integer decode(java.lang.String)>','<android.graphics.Rect: boolean contains(int,int,int,int)>','<android.view.MotionEvent: void setLocation(float,float)>','<java.lang.StackTraceElement: java.lang.String getMethodName()>','<android.content.Intent: int filterHashCode()>','<java.util.AbstractList: void clear()>','<java.io.File: java.lang.String getPath()>','<org.apache.http.ProtocolVersion: void <init>(java.lang.String,int,int)>','<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>','<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>','<java.lang.StackTraceElement: java.lang.String getFileName()>','<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>','<android.webkit.WebSettings: boolean getPluginsEnabled()>','<android.webkit.WebSettings$RenderPriority: android.webkit.WebSettings$RenderPriority valueOf(java.lang.String)>','<java.nio.CharBuffer: java.nio.CharBuffer put(char[],int,int)>','<android.widget.TextView: boolean hasSelection()>','<java.io.Writer: void <init>()>','<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>','<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>','<java.security.spec.EllipticCurve: boolean equals(java.lang.Object)>','<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>','<android.view.ViewGroup: void removeViewInLayout(android.view.View)>','<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>','<android.view.KeyEvent: char getDisplayLabel()>','<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>','<java.security.cert.CertificateExpiredException: void <init>()>','<java.io.PrintStream: boolean checkError()>','<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>','<java.lang.Character: int codePointAt(char[],int,int)>','<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>','<android.os.Parcel: char[] createCharArray()>','<android.webkit.WebView: boolean overlayHorizontalScrollbar()>','<java.lang.reflect.Method: java.lang.String toString()>','<android.view.WindowManager$LayoutParams: void <init>(int,int,int)>','<android.content.res.Configuration: int compareTo(java.lang.Object)>','<android.app.Activity: boolean hasWindowFocus()>','<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)>','<android.content.pm.Signature: void <clinit>()>','<android.app.ActivityGroup: void finishActivity(int)>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<java.io.PrintWriter: void println(char[])>','<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>','<java.lang.reflect.Field: java.lang.String getName()>','<android.location.Criteria: void setSpeedRequired(boolean)>','<java.lang.Package: int hashCode()>','<java.lang.RuntimeException: void <init>()>','<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>','<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>','<java.nio.channels.spi.AbstractSelector: java.nio.channels.spi.SelectorProvider provider()>','<android.webkit.Plugin: java.lang.String getPath()>','<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>','<java.nio.ByteOrder: void <init>()>','<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>','<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>','<java.nio.CharBuffer: java.nio.CharBuffer put(char[])>','<android.view.KeyEvent: boolean isSymPressed()>','<java.lang.Float: float floatValue()>','<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>','<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>','<android.os.Parcel: void readException(int,java.lang.String)>','<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>','<android.widget.AbsListView: void dispatchSetPressed(boolean)>','<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>','<java.util.ArrayList: void <init>(int)>','<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>','<android.os.Looper: android.os.MessageQueue myQueue()>','<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>','<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>','<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()>','<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>','<android.app.Activity: int getVolumeControlStream()>','<java.lang.StringBuffer: int codePointAt(int)>','<java.lang.AbstractStringBuilder: int indexOf(java.lang.String,int)>','<java.security.GeneralSecurityException: void <init>(java.lang.String,java.lang.Throwable)>','<org.apache.http.util.ByteArrayBuffer: void clear()>','<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>','<android.view.View: void dispatchWindowFocusChanged(boolean)>','<java.lang.Integer: double doubleValue()>','<android.os.PatternMatcher: java.lang.String toString()>','<android.view.View: void createContextMenu(android.view.ContextMenu)>','<android.widget.AdapterView: void addView(android.view.View)>','<java.util.HashMap: void <init>(int,float)>','<java.net.URLConnection: java.lang.String toString()>','<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>','<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>','<java.net.InetAddress: boolean equals(java.lang.Object)>','<android.app.ActivityManager: void <init>()>','<java.util.AbstractMap: java.lang.Object clone()>','<java.security.cert.CertPath$CertPathRep: java.lang.Object readResolve()>','<java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>','<android.app.ActivityManager$RecentTaskInfo: void <init>()>','<android.content.ContentValues: void <init>(int)>','<android.content.IntentFilter: java.lang.String getDataScheme(int)>','<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)>','<android.view.animation.LayoutAnimationController: int getOrder()>','<java.net.Proxy: boolean equals(java.lang.Object)>','<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>','<java.net.NetworkInterface: java.lang.String getName()>','<android.view.View: int getBottom()>','<android.content.Intent: double getDoubleExtra(java.lang.String,double)>','<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>','<java.security.SignatureException: void <init>(java.lang.Throwable)>','<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>','<android.os.Looper: android.os.Looper myLooper()>','<java.math.BigInteger: java.math.BigInteger pow(int)>','<android.content.pm.ServiceInfo: void <clinit>()>','<android.webkit.WebView: void onSizeChanged(int,int,int,int)>','<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)>','<java.lang.Long: int compareTo(java.lang.Object)>','<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>','<android.app.Activity: void runOnUiThread(java.lang.Runnable)>','<java.lang.Character: boolean isMirrored(int)>','<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])>','<android.view.inputmethod.CompletionInfo: long getId()>','<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>','<java.lang.Character: char charValue()>','<android.graphics.Matrix: boolean postSkew(float,float,float,float)>','<android.graphics.Path: void rQuadTo(float,float,float,float)>','<android.content.ContextWrapper: java.lang.String getPackageName()>','<java.lang.reflect.Constructor: java.lang.String toGenericString()>','<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>','<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>','<java.nio.IntBuffer: boolean hasArray()>','<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>','<java.io.FileNotFoundException: void <init>()>','<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>','<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>','<android.view.View: boolean hasFocusable()>','<android.text.Layout: int getLineForVertical(int)>','<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>','<java.nio.CharBuffer: boolean equals(java.lang.Object)>','<android.view.ViewGroup: int getDescendantFocusability()>','<org.apache.http.util.ByteArrayBuffer: boolean isEmpty()>','<java.net.ServerSocket: int getReceiveBufferSize()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>','<android.graphics.Region: android.graphics.Rect getBounds()>','<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>','<android.content.pm.ResolveInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>','<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>','<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>','<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>','<java.lang.String: void <init>(java.lang.String)>','<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>','<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)>','<java.security.NoSuchAlgorithmException: void <init>(java.lang.Throwable)>','<java.nio.CharBuffer: int length()>','<java.lang.ArrayIndexOutOfBoundsException: void <init>()>','<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>','<java.net.Proxy$Type: void <clinit>()>','<java.lang.Integer: void <init>(java.lang.String)>','<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>','<android.widget.AbsoluteLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<android.app.ActivityManager$RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>','<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<java.nio.LongBuffer: boolean hasArray()>','<android.os.ParcelFileDescriptor: void <clinit>()>','<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>','<android.text.Layout: void increaseWidthTo(int)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)>','<android.view.ViewGroup$LayoutParams: void <init>(int,int)>','<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>','<android.content.IntentFilter$AuthorityEntry: int getPort()>','<android.text.Layout: int getLineAscent(int)>','<java.io.PrintStream: void println(double)>','<android.view.ViewGroup: void debug(int)>','<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>','<java.util.BitSet: void clear(int)>','<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>','<java.lang.String: int compareTo(java.lang.String)>','<android.view.View: android.view.TouchDelegate getTouchDelegate()>','<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>','<android.content.pm.ActivityInfo: int describeContents()>','<java.lang.LinkageError: void <init>(java.lang.String)>','<android.widget.TextView: void setSpannableFactory(android.text.Spannable$Factory)>','<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>','<android.webkit.WebViewClient: void <init>()>','<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>','<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>','<android.view.MenuInflater: void <init>(android.content.Context)>','<android.webkit.WebView: java.lang.String getUrl()>','<java.net.URLConnection: void setReadTimeout(int)>','<android.app.Dialog: void <init>(android.content.Context)>','<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>','<java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[])>','<android.view.WindowManager$LayoutParams: void <init>(int,int)>','<android.text.Layout: int getEllipsizedWidth()>','<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>','<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)>','<android.webkit.WebSettings$RenderPriority: android.webkit.WebSettings$RenderPriority[] values()>','<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>','<android.view.animation.Transformation: void set(android.view.animation.Transformation)>','<java.lang.AbstractStringBuilder: int length()>','<android.app.ExpandableListActivity: void onContentChanged()>','<java.lang.Float: void <init>(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: void finalize()>','<java.lang.reflect.Field: int getInt(java.lang.Object)>','<android.view.View: boolean showContextMenu()>','<android.net.Uri: android.net.Uri parse(java.lang.String)>','<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>','<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>','<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>','<android.app.Activity: void setProgress(int)>','<java.lang.Thread: void join()>','<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>','<android.view.animation.Animation: void start()>','<android.view.animation.Animation: void startNow()>','<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>','<android.webkit.WebSettings: void setSaveFormData(boolean)>','<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>','<android.widget.TextView: int computeVerticalScrollExtent()>','<android.graphics.RectF: int describeContents()>','<java.lang.Byte: void <init>(java.lang.String)>','<android.graphics.Matrix: void setTranslate(float,float)>','<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>','<java.nio.DoubleBuffer: boolean hasArray()>','<android.widget.ListView: void layoutChildren()>','<java.lang.StringBuffer: int lastIndexOf(java.lang.String,int)>','<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>','<android.content.Intent: long getLongExtra(java.lang.String,long)>','<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>','<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>','<java.net.URL: int getDefaultPort()>','<android.view.View: boolean isLayoutRequested()>','<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>','<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>','<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>','<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>','<javax.security.cert.CertificateEncodingException: void <init>()>','<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>','<android.os.Binder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>','<java.net.URL: boolean sameFile(java.net.URL)>','<android.content.res.Resources: boolean getBoolean(int)>','<android.location.Criteria: void <init>()>','<android.app.Dialog: void <init>(android.content.Context,int)>','<android.app.ExpandableListActivity: void <init>()>','<java.lang.Byte: double doubleValue()>','<android.graphics.Matrix: void reset()>','<java.lang.Byte: float floatValue()>','<android.widget.TextView: boolean performLongClick()>','<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>','<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>','<android.graphics.Rect: void <clinit>()>','<android.os.Bundle: void putAll(android.os.Bundle)>','<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>','<java.io.PrintWriter: void write(int)>','<android.webkit.WebHistoryItem: java.lang.String getTitle()>','<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>','<java.lang.Exception: void <init>(java.lang.String)>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>','<android.content.pm.ResolveInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<java.io.File: java.lang.String getCanonicalPath()>','<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>','<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>','<android.graphics.Matrix: boolean preSkew(float,float)>','<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>','<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>','<android.os.Bundle: boolean containsKey(java.lang.String)>','<android.graphics.Bitmap: void <clinit>()>','<java.lang.Thread: void dumpStack()>','<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>','<java.lang.NumberFormatException: void <init>(java.lang.String)>','<android.content.Intent: void readFromParcel(android.os.Parcel)>','<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>','<java.net.URLStreamHandler: boolean sameFile(java.net.URL,java.net.URL)>','<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>','<android.database.sqlite.SQLiteClosable: void <init>()>','<android.graphics.drawable.Drawable: boolean isStateful()>','<android.view.Surface: void <clinit>()>','<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>','<java.nio.channels.spi.AbstractSelectableChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<java.nio.ByteBuffer: int compareTo(java.nio.ByteBuffer)>','<android.view.View: void setScrollContainer(boolean)>','<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>','<android.os.Looper: void loop()>','<android.app.ActivityManager$ProcessErrorStateInfo: int describeContents()>','<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>','<android.graphics.Bitmap: int getHeight()>','<android.content.res.Resources: void flushLayoutCache()>','<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>','<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.ByteArrayBuffer,int,int)>','<android.widget.Scroller: int getStartY()>','<android.text.style.URLSpan: void <init>(java.lang.String)>','<java.lang.ThreadGroup: boolean parentOf(java.lang.ThreadGroup)>','<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>','<java.util.AbstractMap: boolean containsValue(java.lang.Object)>','<java.lang.NullPointerException: void <init>(java.lang.String)>','<android.net.wifi.WifiConfiguration$PairwiseCipher: void <init>()>','<android.provider.Settings$Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>','<android.os.Bundle: char getChar(java.lang.String,char)>','<android.graphics.Path: boolean isInverseFillType()>','<android.util.SparseArray: void <init>()>','<android.app.Activity: void setFeatureDrawableResource(int,int)>','<android.net.wifi.WifiManager: boolean reassociate()>','<android.webkit.WebView: void setNetworkAvailable(boolean)>','<android.widget.TextView: int getTotalPaddingTop()>','<java.nio.LongBuffer: java.nio.LongBuffer put(java.nio.LongBuffer)>','<android.provider.Settings$NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>','<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>','<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>','<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>','<java.util.AbstractList: boolean add(java.lang.Object)>','<java.lang.Double: java.lang.String toString()>','<android.util.SparseArray: java.lang.Object get(int)>','<android.app.Dialog: void setDismissMessage(android.os.Message)>','<android.view.Window: void <init>(android.content.Context)>','<android.database.sqlite.SQLiteQuery: java.lang.String toString()>','<android.app.Activity: boolean isTaskRoot()>','<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>','<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>','<android.webkit.WebView: void computeScroll()>','<java.io.FileDescriptor: void <clinit>()>','<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>','<java.net.URLConnection: java.lang.String getContentEncoding()>','<android.graphics.Canvas: void <init>()>','<android.app.ActivityManager$RunningServiceInfo: void <init>()>','<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>','<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>','<java.util.BitSet: int length()>','<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>','<java.lang.annotation.ElementType: java.lang.annotation.ElementType[] values()>','<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>','<java.util.Date: void <init>(int,int,int,int,int)>','<java.net.Socket: int getLocalPort()>','<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)>','<android.os.PatternMatcher: int getType()>','<java.lang.ClassLoader: void setSigners(java.lang.Class,java.lang.Object[])>','<android.view.View: boolean post(java.lang.Runnable)>','<android.webkit.WebView: void clearFormData()>','<java.net.ServerSocket: boolean getReuseAddress()>','<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>','<android.graphics.Path$FillType: android.graphics.Path$FillType valueOf(java.lang.String)>','<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>','<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>','<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>','<android.graphics.Path: void offset(float,float,android.graphics.Path)>','<android.graphics.Rect: boolean isEmpty()>','<android.app.Activity: void registerForContextMenu(android.view.View)>','<android.widget.AbsListView: void clearTextFilter()>','<java.util.ArrayList: void <init>(java.util.Collection)>','<android.provider.Settings$System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>','<java.util.Locale: int hashCode()>','<android.net.Uri: boolean isAbsolute()>','<java.lang.Float: boolean isInfinite()>','<java.lang.Short: java.lang.Short decode(java.lang.String)>','<java.io.InputStream: void mark(int)>','<java.util.HashMap: java.lang.Object get(java.lang.Object)>','<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>','<android.webkit.WebView: boolean zoomOut()>','<android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>','<java.lang.Throwable: java.lang.Throwable getCause()>','<android.text.Layout: int getWidth()>','<java.util.UUID: boolean equals(java.lang.Object)>','<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>','<java.net.Socket: void <init>(java.net.SocketImpl)>','<java.lang.String: void <init>(byte[],int,int,int)>','<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)>','<java.lang.ThreadDeath: void <init>()>','<java.util.UUID: long getMostSignificantBits()>','<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>','<android.view.Window: void setType(int)>','<java.lang.String: java.lang.String replace(char,char)>','<java.lang.Float: void <init>(double)>','<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()>','<android.content.res.TypedArray: android.content.res.Resources getResources()>','<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>','<java.lang.Long: int hashCode()>','<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>','<org.apache.http.message.ParserCursor: java.lang.String toString()>','<android.graphics.Matrix: boolean equals(java.lang.Object)>','<android.location.Criteria: void setCostAllowed(boolean)>','<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>','<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>','<android.app.Application: void onTerminate()>','<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>','<android.content.BroadcastReceiver: void setResultCode(int)>','<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>','<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>','<java.io.File: java.io.File[] listFiles()>','<java.lang.Character: boolean isUnicodeIdentifierPart(char)>','<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>','<android.app.Activity: void setVolumeControlStream(int)>','<android.os.Handler: android.os.Looper getLooper()>','<android.app.Activity: android.content.Intent getIntent()>','<android.app.Activity: boolean onSearchRequested()>','<android.telephony.CellLocation: void requestLocationUpdate()>','<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.view.animation.Animation: void ensureInterpolator()>','<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>','<java.net.URI: boolean equals(java.lang.Object)>','<java.net.Socket: void connect(java.net.SocketAddress,int)>','<android.util.TypedValue: float complexToFraction(int,float,float)>','<android.content.res.TypedArray: int getIndex(int)>','<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>','<android.graphics.Bitmap: boolean isMutable()>','<android.widget.TextView: void setInputType(int)>','<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>','<android.content.res.AssetManager$AssetInputStream: void <init>(android.content.res.AssetManager)>','<android.webkit.WebView: boolean canGoBack()>','<android.view.KeyEvent: void <init>(long,long,int,int,int)>','<android.app.Activity: void <init>()>','<android.app.Activity: boolean isFinishing()>','<android.widget.TextView: int getCurrentTextColor()>','<java.lang.StringBuffer: int offsetByCodePoints(int,int)>','<android.view.ViewGroup: void startLayoutAnimation()>','<android.view.KeyEvent: int getAction()>','<android.view.animation.LayoutAnimationController: boolean isDone()>','<android.webkit.WebView: void clearMatches()>','<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>','<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>','<android.view.ViewGroup: void dispatchSetSelected(boolean)>','<android.view.animation.Animation: void reset()>','<android.os.PowerManager: void goToSleep(long)>','<android.os.Handler: android.os.Message obtainMessage(int)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,int)>','<android.content.res.AssetManager: void <init>()>','<android.app.Activity: java.lang.String getLocalClassName()>','<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>','<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>','<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>','<android.view.Window: void setBackgroundDrawableResource(int)>','<java.net.URLConnection: void <init>(java.net.URL)>','<android.graphics.Path: void rLineTo(float,float)>','<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>','<java.net.URLConnection: int getReadTimeout()>','<android.webkit.WebSettings: int getMinimumLogicalFontSize()>','<android.graphics.Shader: void <init>()>','<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>','<android.webkit.Plugin: void setDescription(java.lang.String)>','<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>','<android.app.ExpandableListActivity: void onGroupExpand(int)>','<android.graphics.Matrix: boolean preRotate(float,float,float)>','<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>','<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>','<android.util.Log: int println(int,java.lang.String,java.lang.String)>','<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)>','<java.lang.Float: double doubleValue()>','<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>','<android.graphics.drawable.Drawable: void clearColorFilter()>','<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>','<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>','<android.widget.AbsListView: void onAttachedToWindow()>','<android.graphics.PathEffect: void <init>()>','<java.util.Date: void setYear(int)>','<java.util.Date: void <init>(int,int,int)>','<java.lang.AbstractStringBuilder: int codePointAt(int)>','<android.content.ContentValues: boolean containsKey(java.lang.String)>','<android.graphics.Path: void addPath(android.graphics.Path,float,float)>','<java.net.URLConnection: void setDoInput(boolean)>','<android.graphics.Matrix: void setRotate(float)>','<android.graphics.Typeface: void <init>()>','<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>','<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>','<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>','<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>','<java.net.DatagramSocket: int getPort()>','<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>','<android.widget.TextView: void setMinEms(int)>','<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>','<android.util.Log: int w(java.lang.String,java.lang.Throwable)>','<android.webkit.WebView: void clearHistory()>','<java.lang.Integer: int hashCode()>','<java.lang.Error: void <init>(java.lang.Throwable)>','<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>','<java.lang.Enum: int ordinal()>','<android.view.View: boolean isClickable()>','<java.util.Random: void <init>(long)>','<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>','<android.content.res.ColorStateList: void <init>(int[][],int[])>','<java.lang.Byte: byte parseByte(java.lang.String)>','<android.widget.TextView$SavedState: void <clinit>()>','<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>','<java.io.FileInputStream: void <init>(java.io.File)>','<android.content.pm.PermissionInfo: void <init>()>','<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>','<java.lang.StringBuilder: java.lang.StringBuilder append(char)>','<android.content.ComponentName: int describeContents()>','<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>','<android.view.View: android.os.IBinder getApplicationWindowToken()>','<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>','<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>','<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>','<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>','<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>','<android.database.sqlite.SQLiteQuery: void bindString(int,java.lang.String)>','<android.view.View: boolean hasWindowFocus()>','<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>','<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>','<android.view.ViewGroup: void bringChildToFront(android.view.View)>','<android.content.pm.IPackageInstallObserver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>','<java.nio.channels.Pipe$SourceChannel: void <init>(java.nio.channels.spi.SelectorProvider)>','<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>','<java.security.cert.CertificateNotYetValidException: void <init>()>','<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>','<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>','<java.lang.Character: int digit(int,int)>','<java.io.PrintStream: void println(int)>','<android.os.Parcel: void <init>()>','<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>','<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region$Op)>','<android.os.Parcel: void writeByteArray(byte[])>','<android.graphics.Paint$FontMetricsInt: void <init>()>','<android.view.View: void getLocationOnScreen(int[])>','<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>','<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()>','<android.content.pm.ResolveInfo: java.lang.String toString()>','<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>','<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>','<android.content.IntentFilter: java.util.Iterator categoriesIterator()>','<android.content.IntentFilter: java.util.Iterator pathsIterator()>','<java.lang.Enum: java.lang.Object clone()>','<android.view.Window: void setCallback(android.view.Window$Callback)>','<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>','<android.os.Parcel: void readByteArray(byte[])>','<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>','<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>','<java.net.SocketImpl: boolean supportsUrgentData()>','<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>','<java.lang.Character: int hashCode()>','<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>','<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>','<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>','<java.lang.reflect.Method: boolean isSynthetic()>','<android.view.View: java.util.ArrayList getTouchables()>','<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.Plugin: void setFileName(java.lang.String)>','<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>','<java.io.File: boolean equals(java.lang.Object)>','<java.lang.AssertionError: void <init>(int)>','<android.view.MotionEvent: void <clinit>()>','<android.graphics.Picture: void finalize()>','<java.net.InetAddress: boolean isMCGlobal()>','<android.graphics.Canvas: void rotate(float,float,float)>','<android.util.TypedValue: float getFloat()>','<android.os.Message: void recycle()>','<android.view.View: void setFadingEdgeLength(int)>','<android.content.pm.IPackageInstallObserver$Stub: android.os.IBinder asBinder()>','<android.widget.AbsListView: void onWindowFocusChanged(boolean)>','<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>','<android.view.View: boolean getKeepScreenOn()>','<android.database.DataSetObserver: void <init>()>','<java.util.HashMap: java.util.Collection values()>','<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>','<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>','<android.os.MessageQueue: void <init>()>','<java.util.AbstractCollection: boolean addAll(java.util.Collection)>','<java.net.ServerSocket: int getSoTimeout()>','<android.graphics.Bitmap: void eraseColor(int)>','<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>','<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],boolean)>','<android.app.Activity: void closeContextMenu()>','<android.graphics.Rect: int width()>','<android.net.wifi.SupplicantState: int describeContents()>','<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>','<java.util.Random: void setSeed(long)>','<java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[],int,int)>','<android.webkit.CallbackProxy: void doUpdateVisitedHistory(java.lang.String,boolean)>','<android.widget.TextView: boolean getFreezesText()>','<java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(int)>','<java.util.AbstractMap: boolean containsKey(java.lang.Object)>','<java.util.Locale: java.lang.String getCountry()>','<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>','<android.view.ViewGroup: void removeViews(int,int)>','<android.view.View: void cancelLongPress()>','<android.graphics.Canvas: void drawColor(int)>','<java.lang.reflect.Field: void setShort(java.lang.Object,short)>','<java.lang.String: int compareToIgnoreCase(java.lang.String)>','<java.lang.ClassLoader: void clearAssertionStatus()>','<java.lang.StackTraceElement: boolean isNativeMethod()>','<java.lang.ref.Reference: boolean enqueue()>','<android.text.InputFilter$LengthFilter: void <init>(int)>','<android.content.Intent$ShortcutIconResource: java.lang.String toString()>','<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.CharArrayBuffer,int,int)>','<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>','<android.widget.TextView: void drawableStateChanged()>','<android.view.View: void onWindowVisibilityChanged(int)>','<java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)>','<java.lang.Package: java.lang.String getImplementationTitle()>','<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>','<android.os.Parcel: boolean[] createBooleanArray()>','<java.nio.channels.ServerSocketChannel: java.nio.channels.ServerSocketChannel open()>','<android.os.Handler: boolean sendMessage(android.os.Message)>','<android.os.Bundle: void putShortArray(java.lang.String,short[])>','<android.content.Intent: void <init>(java.lang.String)>','<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>','<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>','<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>','<android.graphics.RectF: void offset(float,float)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<org.apache.http.util.CharArrayBuffer: void append(java.lang.Object)>','<android.view.MotionEvent: float getPressure()>','<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>','<java.security.NoSuchProviderException: void <init>(java.lang.String)>','<android.widget.TextView: boolean getDefaultEditable()>','<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.ArithmeticException: void <init>()>','<java.lang.Byte: void <init>(byte)>','<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)>','<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()>','<android.text.Layout: float getLineMax(int)>','<java.lang.Long: long highestOneBit(long)>','<org.apache.http.util.ByteArrayBuffer: boolean isFull()>','<android.app.Dialog: android.view.View findViewById(int)>','<android.view.View: void getHitRect(android.graphics.Rect)>','<android.os.Bundle: int[] getIntArray(java.lang.String)>','<java.util.Date: int getDay()>','<android.view.Window: android.view.View findViewById(int)>','<android.content.res.Configuration: void <init>()>','<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>','<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>','<android.graphics.Point: boolean equals(java.lang.Object)>','<java.io.File: boolean mkdirs()>','<org.apache.http.util.CharArrayBuffer: void append(char[],int,int)>','<android.graphics.Path: void quadTo(float,float,float,float)>','<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>','<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()>','<android.content.pm.PackageManager: void <init>()>','<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>','<android.view.ViewGroup: boolean isAnimationCacheEnabled()>','<java.lang.Long: int compareTo(java.lang.Long)>','<android.location.Criteria: void setPowerRequirement(int)>','<android.view.View$BaseSavedState: void <init>(android.os.Parcel)>','<android.view.View: int computeHorizontalScrollExtent()>','<java.net.Socket: java.net.InetAddress getLocalAddress()>','<java.security.SignatureException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>','<android.location.LocationProvider: void <init>()>','<android.content.pm.ComponentInfo: void <init>()>','<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>','<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>','<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>','<android.view.View: void onSizeChanged(int,int,int,int)>','<java.nio.LongBuffer: int arrayOffset()>','<android.content.res.AssetFileDescriptor: void close()>','<android.widget.TextView: void setText(int)>','<java.lang.Long: short shortValue()>','<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>','<android.os.Parcel: void writeCharArray(char[])>','<android.content.res.TypedArray: float getFraction(int,int,int,float)>','<android.app.Activity: int getWallpaperDesiredMinimumWidth()>','<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>','<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>','<android.view.inputmethod.ExtractedTextRequest: int describeContents()>','<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open(java.net.SocketAddress)>','<android.view.View: void onAttachedToWindow()>','<java.lang.Integer: long longValue()>','<java.security.cert.Certificate: java.lang.Object writeReplace()>','<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>','<java.lang.Class: java.lang.Class[] getDeclaredClasses()>','<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>','<android.telephony.TelephonyManager: void <clinit>()>','<android.graphics.Bitmap: boolean hasAlpha()>','<android.view.ViewGroup: void removeViewsInLayout(int,int)>','<java.lang.Object: boolean equals(java.lang.Object)>','<java.lang.ref.Reference: java.lang.Object get()>','<org.apache.http.ProtocolVersion: org.apache.http.ProtocolVersion forVersion(int,int)>','<android.app.Activity: int getRequestedOrientation()>','<android.util.SparseBooleanArray: void clear()>','<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>','<android.widget.TextView: float getTextScaleX()>','<android.app.Activity: void setContentView(int)>','<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()>','<java.io.OutputStream: void flush()>','<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>','<android.app.Dialog: android.content.Context getContext()>','<java.net.URLConnection: void setUseCaches(boolean)>','<java.util.AbstractCollection: void <init>()>','<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>','<android.view.ViewGroup: int indexOfChild(android.view.View)>','<android.app.Activity: void onStop()>','<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>','<android.view.Window: void setContainer(android.view.Window)>','<android.content.Intent: void removeCategory(java.lang.String)>','<android.view.Surface: void finalize()>','<java.lang.annotation.ElementType: java.lang.annotation.ElementType valueOf(java.lang.String)>','<java.lang.NoSuchFieldException: void <init>()>','<java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>','<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>','<java.security.spec.ECParameterSpec: int getCofactor()>','<android.database.sqlite.SQLiteDatabase: void close()>','<android.widget.TextView: int getSelectionEnd()>','<android.graphics.Bitmap: void finalize()>','<android.util.SparseBooleanArray: int size()>','<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>','<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>','<android.content.pm.PackageInfo: java.lang.String toString()>','<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>','<java.io.FileOutputStream: void write(byte[],int,int)>','<java.io.PrintWriter: java.io.PrintWriter append(char)>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void reset()>','<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>','<android.os.Message: void sendToTarget()>','<android.app.ExpandableListActivity: long getSelectedId()>','<android.app.Dialog: void onStop()>','<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)>','<java.net.URI: java.net.URI create(java.lang.String)>','<android.webkit.WebView: void loadUrl(java.lang.String)>','<java.lang.Long: byte byteValue()>','<java.util.AbstractMap: void <init>()>','<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>','<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>','<java.lang.Integer: java.lang.String toBinaryString(int)>','<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>','<android.view.animation.Animation: int getZAdjustment()>','<java.util.ArrayList: boolean addAll(int,java.util.Collection)>','<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener)>','<java.lang.Double: boolean isInfinite(double)>','<android.view.View: void getFocusedRect(android.graphics.Rect)>','<android.widget.TextView: int getExtendedPaddingBottom()>','<java.util.UUID: long timestamp()>','<android.net.wifi.WifiManager: boolean isWifiEnabled()>','<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>','<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>','<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>','<java.io.Reader: boolean ready()>','<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>','<java.lang.Float: void <clinit>()>','<android.view.View: boolean isInTouchMode()>','<java.lang.Double: short shortValue()>','<java.lang.String: boolean contentEquals(java.lang.StringBuffer)>','<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>','<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>','<java.io.PrintStream: void println(char[])>','<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>','<java.security.CodeSource: void <init>(java.net.URL,java.security.CodeSigner[])>','<android.app.Activity: android.view.View onCreatePanelView(int)>','<android.widget.TextView: void setHint(int)>','<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>','<android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType[] values()>','<java.util.HashMap: int size()>','<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>','<java.lang.Package: boolean isAnnotationPresent(java.lang.Class)>','<java.io.File: boolean isHidden()>','<java.net.URL: int hashCode()>','<java.lang.Package: void <init>()>','<android.webkit.WebView: void enablePlatformNotifications()>','<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])>','<java.lang.Byte: int intValue()>','<android.net.wifi.WifiManager: boolean startScan()>','<android.os.Bundle: java.lang.Object clone()>','<android.content.res.AssetManager$AssetInputStream: int read(byte[])>','<java.lang.ThreadGroup: void <init>(java.lang.String)>','<android.content.res.Resources: java.io.InputStream openRawResource(int)>','<android.widget.ListView: int getCheckedItemPosition()>','<java.nio.IntBuffer: int compareTo(java.lang.Object)>','<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>','<android.os.Message: android.os.Message obtain(android.os.Handler,int)>','<android.view.View: int getScrollX()>','<android.content.pm.ApplicationInfo: java.lang.String toString()>','<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>','<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>','<android.content.res.Resources: java.lang.String[] getStringArray(int)>','<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)>','<android.content.res.Resources: java.lang.CharSequence getText(int)>','<android.content.pm.IPackageInstallObserver$Stub: void <init>()>','<android.widget.AbsoluteLayout$LayoutParams: java.lang.String debug(java.lang.String)>','<java.lang.Package: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>','<android.widget.AbsListView: void invalidateViews()>','<android.content.ContentProvider: void <init>()>','<android.content.Intent$FilterComparison: android.content.Intent getIntent()>','<java.lang.reflect.Field: java.lang.Class getType()>','<android.content.IntentFilter: void addDataPath(java.lang.String,int)>','<java.util.Date: int getHours()>','<org.apache.http.util.CharArrayBuffer: void append(byte[],int,int)>','<android.view.View: void onScrollChanged(int,int,int,int)>','<java.lang.String: boolean matches(java.lang.String)>','<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>','<java.lang.Float: float parseFloat(java.lang.String)>','<java.lang.String: java.lang.String[] split(java.lang.String)>','<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>','<java.math.BigInteger: double doubleValue()>','<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>','<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>','<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<java.util.BitSet: boolean isEmpty()>','<android.graphics.Path: void <init>()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>','<android.app.Activity: void setContentView(android.view.View)>','<java.util.HashMap: java.util.Set keySet()>','<android.webkit.PluginList: void removePlugin(android.webkit.Plugin)>','<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>','<android.widget.TextView: int length()>','<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()>','<android.widget.TextView: int getTopPaddingOffset()>','<java.net.Socket: void connect(java.net.SocketAddress)>','<android.content.IntentFilter: java.util.Iterator schemesIterator()>','<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>','<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>','<java.math.BigInteger: java.lang.String toString(int)>','<android.text.Layout: int getLineBaseline(int)>','<java.nio.IntBuffer: java.lang.String toString()>','<android.os.Parcel: android.os.Bundle readBundle()>','<android.view.KeyEvent: boolean isAltPressed()>','<java.lang.Character: boolean isIdentifierIgnorable(char)>','<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>','<android.view.View: void setMinimumWidth(int)>','<java.lang.SecurityException: void <init>(java.lang.Throwable)>','<android.os.PowerManager: void userActivity(long,boolean)>','<android.view.View: boolean isSelected()>','<java.lang.String: void <init>(java.lang.StringBuffer)>','<android.net.wifi.WifiConfiguration$KeyMgmt: void <clinit>()>','<android.content.IntentFilter: void addAction(java.lang.String)>','<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>','<java.io.File: int compareTo(java.lang.Object)>','<android.app.LocalActivityManager: void dispatchResume()>','<android.telephony.ServiceState: boolean equals(java.lang.Object)>','<java.io.PrintStream: void <init>(java.io.File)>','<android.app.Activity: void <clinit>()>','<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>','<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>','<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>','<android.view.MotionEvent: void offsetLocation(float,float)>','<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>','<android.view.MotionEvent: float getXPrecision()>','<java.lang.Float: int intValue()>','<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>','<android.content.ContextWrapper: java.lang.String[] fileList()>','<android.view.animation.Animation: void initialize(int,int,int,int)>','<android.os.Message: long getWhen()>','<java.lang.Float: int hashCode()>','<android.util.TypedValue: float getFraction(float,float)>','<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>','<android.provider.Settings$Secure: void <clinit>()>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>','<java.net.URLConnection: boolean getUseCaches()>','<android.net.http.SslCertificate$DName: java.lang.String getUName()>','<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>','<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)>','<android.widget.TextView: void setWidth(int)>','<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>','<java.net.URL: java.lang.String toExternalForm()>','<java.io.File: java.io.File getCanonicalFile()>','<android.os.Bundle: void <clinit>()>','<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>','<android.app.Application: void onCreate()>','<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>','<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>','<android.view.View: void offsetTopAndBottom(int)>','<android.content.res.TypedArray: java.lang.String toString()>','<android.text.Layout: int getLineEnd(int)>','<java.lang.Character: java.lang.String toString()>','<java.lang.String: java.lang.String toUpperCase()>','<java.net.URL: java.lang.String getRef()>','<android.location.Criteria: boolean isAltitudeRequired()>','<android.net.DhcpInfo: int describeContents()>','<android.os.PowerManager$WakeLock: void finalize()>','<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>','<android.content.ContentValues: int describeContents()>','<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>','<android.app.Activity: boolean requestWindowFeature(int)>','<android.view.View: void setNextFocusUpId(int)>','<android.app.ActivityManager$RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>','<java.util.AbstractList: int indexOf(java.lang.Object)>','<java.net.Socket: boolean getTcpNoDelay()>','<android.content.Intent: void <init>()>','<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>','<java.lang.reflect.Field: int hashCode()>','<android.widget.AbsListView: int getListPaddingBottom()>','<android.content.res.Resources$Theme: void <init>(android.content.res.Resources)>','<android.content.BroadcastReceiver: boolean getAbortBroadcast()>','<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>','<java.lang.Byte: void <clinit>()>','<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>','<android.webkit.WebSettings: void <init>()>','<android.graphics.Region: boolean set(android.graphics.Rect)>','<android.graphics.Path: void addPath(android.graphics.Path)>','<android.app.PendingIntent: boolean equals(java.lang.Object)>','<java.security.spec.EllipticCurve: java.math.BigInteger getA()>','<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>','<java.lang.NoSuchMethodError: void <init>()>','<java.lang.IllegalStateException: void <init>()>','<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>','<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>','<android.webkit.WebSettings: boolean getBlockNetworkImage()>','<java.math.BigInteger: java.math.BigInteger shiftRight(int)>','<android.graphics.Canvas$EdgeType: void <clinit>()>','<android.view.View: void dispatchDraw(android.graphics.Canvas)>','<java.io.Writer: java.io.Writer append(char)>','<java.lang.ArrayStoreException: void <init>()>','<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>','<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>','<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>','<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)>','<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>','<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>','<android.view.View: void setKeepScreenOn(boolean)>','<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>','<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>','<android.view.View: int getLeft()>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>','<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>','<android.net.wifi.WifiInfo: java.lang.String getBSSID()>','<android.widget.TextView: java.lang.CharSequence getHint()>','<android.widget.AbsListView: android.view.View getSelectedView()>','<android.telephony.ServiceState: void setIsManualSelection(boolean)>','<android.graphics.Paint$Join: android.graphics.Paint$Join valueOf(java.lang.String)>','<java.net.DatagramSocket: java.net.InetAddress getInetAddress()>','<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>','<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.util.SparseArray: void put(int,java.lang.Object)>','<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>','<java.nio.ShortBuffer: java.lang.String toString()>','<android.content.res.TypedArray: boolean hasValue(int)>','<android.text.TextPaint: void <init>(android.graphics.Paint)>','<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>','<android.webkit.WebView$WebViewTransport: void <init>(android.webkit.WebView)>','<android.app.Activity: void showDialog(int)>','<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>','<android.location.GpsStatus: java.lang.Iterable getSatellites()>','<android.webkit.WebView: android.view.View getZoomControls()>','<android.text.Spannable$Factory: void <init>()>','<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region$Op)>','<android.app.Dialog: void onCreate(android.os.Bundle)>','<java.net.SocketImpl: void <init>()>','<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>','<java.net.DatagramPacket: java.net.InetAddress getAddress()>','<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>','<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)>','<java.lang.Thread: int activeCount()>','<java.nio.Buffer: java.nio.Buffer position(int)>','<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue$IdleHandler)>','<java.lang.reflect.Constructor: java.lang.String toString()>','<android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>','<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>','<java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)>','<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>','<android.widget.AbsListView: void onGlobalLayout()>','<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>','<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>','<java.lang.Character: boolean isDigit(int)>','<android.text.Layout: android.text.Layout$Alignment getAlignment()>','<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>','<java.io.InputStream: int read(byte[],int,int)>','<android.os.Looper: void dump(android.util.Printer,java.lang.String)>','<java.util.BitSet: boolean intersects(java.util.BitSet)>','<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int)>','<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>','<java.net.URLConnection: java.lang.String getContentType()>','<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>','<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>','<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>','<java.lang.Double: void <init>(double)>','<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>','<java.lang.Float: java.lang.Float valueOf(float)>','<android.text.Layout$Alignment: android.text.Layout$Alignment[] values()>','<org.apache.http.util.ByteArrayBuffer: void <init>(int)>','<java.net.SocketImpl: void shutdownInput()>','<android.os.Message: android.os.Handler getTarget()>','<android.graphics.Rect: void set(int,int,int,int)>','<java.lang.reflect.Constructor: boolean isVarArgs()>','<android.app.Activity: void setFeatureDrawableAlpha(int,int)>','<java.nio.LongBuffer: java.lang.String toString()>','<android.graphics.Xfermode: void <init>()>','<java.io.File: boolean delete()>','<java.io.PrintWriter: void close()>','<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>','<android.graphics.Region: boolean quickContains(android.graphics.Rect)>','<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>','<android.location.Location: boolean hasAccuracy()>','<android.view.View: boolean willNotCacheDrawing()>','<java.io.FileOutputStream: java.io.FileDescriptor getFD()>','<android.widget.TextView: int getAutoLinkMask()>','<java.lang.String: int compareTo(java.lang.Object)>','<java.nio.FloatBuffer: java.nio.FloatBuffer put(java.nio.FloatBuffer)>','<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>','<java.lang.Thread: boolean holdsLock(java.lang.Object)>','<java.nio.channels.Pipe$SourceChannel: int validOps()>','<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>','<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>','<android.os.Parcel: void readIntArray(int[])>','<java.io.PrintWriter: void write(java.lang.String)>','<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>','<android.app.ActivityManager$MemoryInfo: void readFromParcel(android.os.Parcel)>','<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>','<android.widget.TextView: void setLines(int)>','<android.location.Location: void setAltitude(double)>','<android.os.Bundle: short[] getShortArray(java.lang.String)>','<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>','<android.graphics.Region: void translate(int,int)>','<android.os.Parcel: float[] createFloatArray()>','<android.os.Messenger: void <clinit>()>','<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>','<java.util.Random: float nextFloat()>','<android.webkit.WebChromeClient: void <init>()>','<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>','<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()>','<android.graphics.drawable.Drawable: int getMinimumWidth()>','<android.hardware.Camera$Parameters: int getPreviewFormat()>','<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>','<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)>','<java.security.PermissionCollection: void setReadOnly()>','<java.lang.Throwable: void <init>(java.lang.String)>','<android.content.ComponentName: boolean equals(java.lang.Object)>','<android.content.Intent: java.lang.String resolveType(android.content.Context)>','<android.view.animation.Animation: void setFillEnabled(boolean)>','<android.graphics.RectF: void union(float,float)>','<android.net.wifi.WifiInfo: java.lang.String toString()>','<java.util.HashMap: void <init>(java.util.Map)>','<android.os.Binder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>','<android.content.pm.Signature: void <init>(java.lang.String)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>','<java.io.PrintStream: void setError()>','<android.graphics.Paint: void <init>(int)>','<android.webkit.WebSettings: boolean getNavDump()>','<android.widget.TextView: boolean setFrame(int,int,int,int)>','<android.view.View: android.view.View findViewById(int)>','<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>','<android.os.Message: void setTarget(android.os.Handler)>','<android.webkit.PluginList: void addPlugin(android.webkit.Plugin)>','<android.graphics.Shader$TileMode: android.graphics.Shader$TileMode valueOf(java.lang.String)>','<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>','<android.view.View: void onWindowFocusChanged(boolean)>','<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>','<java.nio.channels.spi.AbstractSelectableChannel: boolean isRegistered()>','<android.graphics.RectF: boolean contains(float,float)>','<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>','<android.view.View: int getWidth()>','<android.content.pm.PackageItemInfo$DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>','<android.graphics.Paint: boolean isDither()>','<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>','<android.provider.Settings$NameValueTable: void <init>()>','<android.graphics.Path: void setLastPoint(float,float)>','<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>','<android.widget.ListView: int getHeaderViewsCount()>','<android.graphics.Rect: float exactCenterX()>','<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>','<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>','<android.graphics.Region: boolean union(android.graphics.Rect)>','<java.security.Timestamp: boolean equals(java.lang.Object)>','<java.util.BitSet: void clear()>','<android.view.inputmethod.EditorInfo: void <clinit>()>','<java.lang.Boolean: boolean getBoolean(java.lang.String)>','<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>','<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>','<org.apache.http.message.ParserCursor: int getPos()>','<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>','<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>','<java.net.URI: int getPort()>','<android.content.IntentFilter: boolean hasCategory(java.lang.String)>','<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>','<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>','<android.widget.Scroller: void startScroll(int,int,int,int,int)>','<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>','<java.nio.IntBuffer: java.nio.IntBuffer put(int[],int,int)>','<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>','<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>','<java.lang.reflect.Field: boolean isEnumConstant()>','<android.location.Location: void removeBearing()>','<java.net.DatagramSocket: int getReceiveBufferSize()>','<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>','<android.graphics.Paint: float measureText(java.lang.String)>','<android.content.Intent: boolean hasCategory(java.lang.String)>','<android.view.View: boolean performHapticFeedback(int,int)>','<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>','<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>','<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)>','<android.view.View: int getVerticalFadingEdgeLength()>','<android.content.res.Configuration: int describeContents()>','<android.app.Activity: boolean isChild()>','<android.view.ViewGroup: void <init>(android.content.Context)>','<android.view.View: int getPaddingRight()>','<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>','<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()>','<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>','<android.content.pm.Signature: boolean equals(java.lang.Object)>','<java.lang.AbstractStringBuilder: int offsetByCodePoints(int,int)>','<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>','<android.widget.TextView: void setMinHeight(int)>','<android.view.animation.Animation$Description: void <init>()>','<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>','<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>','<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>','<java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>','<java.lang.Byte: int hashCode()>','<java.math.BigInteger: boolean testBit(int)>','<android.location.Location: void writeToParcel(android.os.Parcel,int)>','<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<java.nio.channels.SelectableChannel: void <init>()>','<android.widget.TextView: int getCurrentHintTextColor()>','<java.lang.Short: byte byteValue()>','<java.io.File: long lastModified()>','<java.lang.ClassLoader: java.lang.ClassLoader getParent()>','<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>','<android.net.wifi.WifiManager$WifiLock: boolean isHeld()>','<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()>','<android.os.Parcel: java.util.ArrayList createBinderArrayList()>','<android.location.Criteria: void setBearingRequired(boolean)>','<java.io.InputStream: int read(byte[])>','<java.net.URI: java.lang.String toString()>','<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>','<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<java.lang.AbstractStringBuilder: int indexOf(java.lang.String)>','<android.location.Location: void reset()>','<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>','<android.graphics.Matrix: java.lang.String toShortString()>','<java.lang.StringBuffer: int codePointBefore(int)>','<android.app.Activity: android.content.ComponentName getCallingActivity()>','<java.net.InetAddress: java.lang.String getHostAddress()>','<java.lang.Class: boolean isMemberClass()>','<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>','<android.widget.ExpandableListView: void setSelectedGroup(int)>','<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()>','<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)>','<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>','<java.lang.Class: java.lang.String toString()>','<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>','<android.view.Surface$OutOfResourcesException: void <init>(java.lang.String)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>','<java.net.Socket: boolean getKeepAlive()>','<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>','<android.content.ContentProvider: java.lang.String getWritePermission()>','<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>','<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>','<java.lang.String: java.lang.String trim()>','<android.graphics.Point: boolean equals(int,int)>','<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>','<android.view.View: void setPadding(int,int,int,int)>','<java.net.URL: boolean equals(java.lang.Object)>','<android.view.Window: void setFlags(int,int)>','<android.os.Bundle: void putString(java.lang.String,java.lang.String)>','<android.graphics.Paint: float getFontSpacing()>','<android.widget.TextView: void setSingleLine()>','<android.net.wifi.WifiManager$WifiLock: void finalize()>','<android.content.ContentProvider: java.lang.String getReadPermission()>','<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>','<java.security.PermissionCollection: java.lang.String toString()>','<android.content.ContentValues: void <clinit>()>','<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>','<java.lang.Class: java.lang.Object cast(java.lang.Object)>','<android.os.Binder: void <init>()>','<java.util.HashMap: void putAll(java.util.Map)>','<java.lang.String: java.lang.String copyValueOf(char[])>','<javax.security.cert.CertificateException: void <init>(java.lang.String)>','<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>','<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>','<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>','<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>','<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>','<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>','<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>','<java.io.File: boolean setReadOnly()>','<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>','<java.io.PrintWriter: void println(long)>','<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>','<android.view.View: void onAnimationEnd()>','<android.provider.Browser: void <clinit>()>','<android.net.wifi.WifiManager: boolean pingSupplicant()>','<android.graphics.Rect: boolean intersect(int,int,int,int)>','<android.location.Location: void removeSpeed()>','<android.content.res.AssetManager$AssetInputStream: void close()>','<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>','<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region$Op)>','<java.util.UUID: void <init>(long,long)>','<java.net.URLConnection: void setDefaultAllowUserInteraction(boolean)>','<android.hardware.Camera$Parameters: java.lang.String flatten()>','<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String,int)>','<java.nio.CharBuffer: char charAt(int)>','<java.lang.Integer: int highestOneBit(int)>','<android.webkit.WebView: void finalize()>','<java.lang.Long: float floatValue()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<java.lang.NegativeArraySizeException: void <init>()>','<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>','<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>','<java.net.Proxy: java.net.SocketAddress address()>','<android.graphics.drawable.Drawable: boolean onStateChange(int[])>','<java.lang.Character: boolean isJavaIdentifierPart(char)>','<android.content.ContextWrapper: android.os.Looper getMainLooper()>','<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>','<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>','<java.lang.ThreadGroup: boolean isDaemon()>','<java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>','<java.nio.MappedByteBuffer: boolean isLoaded()>','<java.lang.annotation.ElementType: void <clinit>()>','<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>','<android.view.View: void setLongClickable(boolean)>','<java.lang.Character: void <init>(char)>','<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>','<java.lang.Integer: int parseInt(java.lang.String)>','<android.location.Location: double getAltitude()>','<android.location.Location: boolean hasSpeed()>','<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>','<java.lang.String: java.lang.String copyValueOf(char[],int,int)>','<java.io.Reader: void reset()>','<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>','<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>','<android.graphics.Paint: boolean isStrikeThruText()>','<android.app.ActivityManager$RecentTaskInfo: void <clinit>()>','<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>','<android.view.WindowManager$LayoutParams: java.lang.String toString()>','<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>','<android.text.Layout: float getPrimaryHorizontal(int)>','<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>','<java.lang.Long: long lowestOneBit(long)>','<android.graphics.Point: void <init>()>','<java.lang.Float: boolean isNaN(float)>','<java.lang.IllegalAccessError: void <init>()>','<android.webkit.JsResult: void confirm()>','<android.view.ViewGroup: void setPersistentDrawingCache(int)>','<android.graphics.RectF: void <init>(android.graphics.Rect)>','<android.webkit.WebView: void flingScroll(int,int)>','<java.net.URI: java.lang.String getRawQuery()>','<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>','<java.net.URLConnection: java.io.OutputStream getOutputStream()>','<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>','<org.apache.http.util.ByteArrayBuffer: void append(char[],int,int)>','<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>','<android.webkit.WebSettings: boolean getUseDoubleTree()>','<android.graphics.drawable.Drawable: int getMinimumHeight()>','<java.nio.channels.spi.AbstractSelectionKey: void cancel()>','<java.lang.ClassCircularityError: void <init>()>','<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>','<java.nio.ShortBuffer: boolean equals(java.lang.Object)>','<android.graphics.Rasterizer: void <init>()>','<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>','<android.graphics.Shader: void finalize()>','<android.graphics.Bitmap: int getPixel(int,int)>','<java.nio.channels.ClosedChannelException: void <init>()>','<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>','<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>','<java.lang.String: java.lang.String substring(int,int)>','<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>','<java.net.DatagramSocket: void setSoTimeout(int)>','<android.app.Activity: int getTaskId()>','<java.util.ArrayList: boolean remove(java.lang.Object)>','<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>','<java.math.BigInteger: int bitLength()>','<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>','<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.SocketAddress)>','<android.net.wifi.WifiManager: boolean disableNetwork(int)>','<android.content.ComponentName: int hashCode()>','<android.graphics.Rect: int describeContents()>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>','<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>','<android.content.ContentValues: int hashCode()>','<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>','<android.graphics.Rect: void offset(int,int)>','<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[])>','<android.app.PendingIntent$CanceledException: void <init>()>','<android.widget.Scroller: void forceFinished(boolean)>','<java.io.File: java.net.URI toURI()>','<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>','<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>','<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>','<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()>','<android.graphics.PathEffect: void finalize()>','<java.io.File: int compareTo(java.io.File)>','<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>','<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>','<java.security.Permission: java.security.PermissionCollection newPermissionCollection()>','<android.app.PendingIntent: java.lang.String toString()>','<android.media.MediaPlayer: void pause()>','<java.util.Random: int next(int)>','<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>','<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>','<java.util.BitSet: void flip(int)>','<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>','<android.graphics.Matrix: boolean preScale(float,float)>','<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>','<java.lang.Class: java.lang.Class[] getClasses()>','<android.view.MotionEvent: int getAction()>','<java.lang.Integer: float floatValue()>','<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>','<android.webkit.WebView: void invokeZoomPicker()>','<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>','<java.math.BigInteger: int signum()>','<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String)>','<android.webkit.WebBackForwardList: int getCurrentIndex()>','<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>','<java.lang.StringBuffer: void <init>()>','<java.lang.AbstractStringBuilder: void ensureCapacity(int)>','<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>','<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>','<android.widget.Scroller: void setFinalX(int)>','<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>','<android.text.Layout: float getLineRight(int)>','<java.lang.Double: int compareTo(java.lang.Double)>','<android.text.style.ClickableSpan: void <init>()>','<android.os.Parcel: void readException()>','<android.widget.TextView: android.text.Layout getLayout()>','<android.os.Handler: boolean hasMessages(int,java.lang.Object)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>','<java.io.ObjectStreamException: void <init>()>','<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>','<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>','<android.view.View: android.graphics.drawable.Drawable getBackground()>','<java.lang.Object: void <init>()>','<android.text.Layout: int getOffsetToLeftOf(int)>','<android.content.pm.ConfigurationInfo: int describeContents()>','<java.net.URI: java.lang.String getPath()>','<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>','<org.apache.http.util.ByteArrayBuffer: int length()>','<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>','<android.content.BroadcastReceiver: void clearAbortBroadcast()>','<android.os.Bundle: byte[] getByteArray(java.lang.String)>','<android.webkit.CallbackProxy: void onRequestFocus()>','<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>','<java.math.BigInteger: long longValue()>','<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>','<android.graphics.Matrix: void setSinCos(float,float)>','<java.io.PrintStream: void <init>(java.lang.String,java.lang.String)>','<java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable,java.lang.String)>','<java.lang.Float: java.lang.String toString(float)>','<android.view.Surface: void setOrientation(int,int)>','<java.nio.DoubleBuffer: int arrayOffset()>','<org.apache.http.protocol.DefaultedHttpContext: void <init>(org.apache.http.protocol.HttpContext,org.apache.http.protocol.HttpContext)>','<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>','<android.view.View: long getDrawingTime()>','<android.app.Activity: java.lang.CharSequence getTitle()>','<java.lang.ThreadGroup: int activeGroupCount()>','<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>','<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>','<java.nio.Buffer: boolean hasRemaining()>','<android.widget.ListView: int getFooterViewsCount()>','<android.content.IntentFilter: void setPriority(int)>','<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>','<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>','<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()>','<android.view.Surface: java.lang.String toString()>','<android.view.View: void drawableStateChanged()>','<org.apache.http.message.ParserCursor: int getUpperBound()>','<android.content.BroadcastReceiver: void <init>()>','<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>','<android.graphics.Region$Op: void <clinit>()>','<android.text.TextUtils$TruncateAt: void <clinit>()>','<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>','<android.location.Location: void dump(android.util.Printer,java.lang.String)>','<java.lang.Thread: int enumerate(java.lang.Thread[])>','<android.view.animation.Animation: long computeDurationHint()>','<android.widget.ExpandableListView: int getFlatListPosition(long)>','<java.net.DatagramSocket: boolean isClosed()>','<java.lang.Class: java.lang.Object[] getSigners()>','<java.util.BitSet: java.lang.String toString()>','<android.content.IntentFilter: void <clinit>()>','<android.webkit.WebView$HitTestResult: void <init>(android.webkit.WebView)>','<android.view.View: void clearFocus()>','<android.graphics.Bitmap: byte[] getNinePatchChunk()>','<java.nio.ByteBuffer: byte[] array()>','<android.webkit.Plugin: void setName(java.lang.String)>','<android.app.Activity: void setTitle(int)>','<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>','<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>','<android.app.Activity: void closeOptionsMenu()>','<android.view.Window: android.view.Window getContainer()>','<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>','<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>','<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>','<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>','<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>','<java.lang.Thread: boolean interrupted()>','<android.view.ViewGroup: void dispatchSetPressed(boolean)>','<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>','<java.nio.LongBuffer: boolean equals(java.lang.Object)>','<android.webkit.WebView: void goForward()>','<org.apache.http.ParseException: void <init>()>','<android.app.Application: void <init>()>','<java.security.CodeSigner: java.security.Timestamp getTimestamp()>','<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>','<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)>','<android.view.MotionEvent: float getRawY()>','<java.lang.Class: java.lang.Package getPackage()>','<java.lang.reflect.Constructor: java.lang.String getName()>','<android.widget.ExpandableListView: int getPackedPositionChild(long)>','<android.app.Activity: void setResult(int)>','<java.security.InvalidKeyException: void <init>(java.lang.Throwable)>','<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>','<android.view.View: int getDefaultSize(int,int)>','<java.nio.ShortBuffer: int compareTo(java.nio.ShortBuffer)>','<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>','<android.app.Dialog: void onWindowFocusChanged(boolean)>','<java.net.Socket: void <init>(java.net.InetAddress,int)>','<android.hardware.Camera$Parameters: void <init>(android.hardware.Camera)>','<android.content.res.ColorStateList: boolean isStateful()>','<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<android.widget.AbsListView: boolean isInFilterMode()>','<java.lang.Character: boolean isLetterOrDigit(char)>','<android.location.LocationManager: java.util.List getProviders(boolean)>','<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>','<java.net.URI: java.net.URI resolve(java.net.URI)>','<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>','<android.provider.Settings$Secure: void <init>()>','<java.lang.Long: void <init>(long)>','<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>','<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>','<java.nio.CharBuffer: boolean hasArray()>','<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>','<android.graphics.RectF: void <init>()>','<android.view.View: boolean isPaddingOffsetRequired()>','<android.webkit.WebView: boolean overlayVerticalScrollbar()>','<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>','<android.graphics.RectF: void roundOut(android.graphics.Rect)>','<java.lang.AssertionError: void <init>(double)>','<android.hardware.Camera$Parameters: void remove(java.lang.String)>','<android.content.ContentValues: void putAll(android.content.ContentValues)>','<java.lang.Character: byte getDirectionality(int)>','<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>','<java.lang.reflect.Field: void setChar(java.lang.Object,char)>','<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>','<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>','<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>','<java.nio.CharBuffer: char[] array()>','<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>','<java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>','<android.content.res.AssetManager: void close()>','<android.app.Activity: java.lang.String getCallingPackage()>','<java.lang.Throwable: java.lang.String toString()>','<android.view.animation.Animation: boolean getFillAfter()>','<android.app.Activity: void unregisterForContextMenu(android.view.View)>','<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>','<android.graphics.Path: void close()>','<java.nio.channels.spi.AbstractSelectionKey: boolean isValid()>','<android.view.View: boolean isHorizontalScrollBarEnabled()>','<android.os.Handler: void handleMessage(android.os.Message)>','<android.widget.AdapterView: void removeAllViews()>','<android.widget.ListView: boolean removeHeaderView(android.view.View)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>','<android.text.Layout: boolean isSpanned()>','<android.view.View: void setFocusableInTouchMode(boolean)>','<android.widget.TextView: void setText(java.lang.CharSequence)>','<android.util.TypedValue: void <init>()>','<java.lang.Thread: void run()>','<java.net.URI: java.net.URL toURL()>','<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>','<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>','<android.content.ContextWrapper: java.lang.String getPackageCodePath()>','<java.net.URL: java.lang.String getFile()>','<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>','<android.hardware.Camera$Parameters: void set(java.lang.String,int)>','<java.security.CodeSigner: void <init>(java.security.cert.CertPath,java.security.Timestamp)>','<java.net.URLConnection: java.io.InputStream getInputStream()>','<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>','<java.net.SocketImpl: void shutdownOutput()>','<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>','<java.lang.Float: int compareTo(java.lang.Float)>','<android.util.SparseBooleanArray: int indexOfKey(int)>','<android.os.Parcel: void writeList(java.util.List)>','<java.lang.ClassCircularityError: void <init>(java.lang.String)>','<android.graphics.Paint$FontMetrics: void <init>()>','<android.webkit.WebView$HitTestResult: java.lang.String getExtra()>','<android.os.Message: java.lang.String toString()>','<java.util.AbstractList: int lastIndexOf(java.lang.Object)>','<java.nio.channels.spi.AbstractSelector: void deregister(java.nio.channels.spi.AbstractSelectionKey)>','<android.os.Bundle: void putLongArray(java.lang.String,long[])>','<java.util.Date: java.lang.String toGMTString()>','<android.graphics.Canvas: void drawRGB(int,int,int)>','<java.net.UnknownHostException: void <init>(java.lang.String)>','<android.graphics.Matrix: boolean postRotate(float)>','<android.content.IntentFilter: boolean hasDataType(java.lang.String)>','<android.graphics.Rect: void readFromParcel(android.os.Parcel)>','<android.view.animation.Animation: void restrictDuration(long)>','<java.net.URISyntaxException: java.lang.String getReason()>','<android.view.animation.Animation: void setFillBefore(boolean)>','<android.webkit.WebSettings: boolean supportMultipleWindows()>','<android.app.ActivityGroup: void onPause()>','<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>','<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>','<android.app.ActivityGroup: void onStop()>','<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>','<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>','<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>','<android.widget.AbsoluteLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>','<android.app.ActivityManager$RunningTaskInfo: int describeContents()>','<java.lang.String: void <init>(char[])>','<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>','<java.io.InputStream: void close()>','<java.nio.ByteBuffer: boolean equals(java.lang.Object)>','<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>','<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>','<android.text.Layout: int getParagraphLeft(int)>','<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>','<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>','<android.webkit.WebView: boolean pageDown(boolean)>','<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>','<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>','<android.util.Log: int w(java.lang.String,java.lang.String)>','<android.graphics.Point: java.lang.String toString()>','<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>','<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>','<java.net.Socket: void setSoTimeout(int)>','<android.webkit.WebSettings: int getDefaultFixedFontSize()>','<java.net.URLConnection: long getDate()>','<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>','<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()>','<java.net.ServerSocket: boolean isBound()>','<java.security.CodeSigner: boolean equals(java.lang.Object)>','<java.lang.IllegalArgumentException: void <init>()>','<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>','<android.content.ContentValues: void remove(java.lang.String)>','<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>','<java.security.Timestamp: int hashCode()>','<java.lang.Long: int signum(long)>','<java.lang.StackTraceElement: java.lang.String toString()>','<android.text.Layout: float getLineLeft(int)>','<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>','<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>','<android.os.Bundle: short getShort(java.lang.String)>','<android.widget.AdapterView: java.lang.Object getSelectedItem()>','<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()>','<android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>','<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)>','<java.net.ServerSocket: int getLocalPort()>','<java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>','<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>','<java.io.FileOutputStream: void <init>(java.io.File)>','<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>','<android.database.sqlite.SQLiteClosable: void acquireReference()>','<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>','<java.nio.channels.Pipe: void <init>()>','<android.content.res.AssetManager$AssetInputStream: void mark(int)>','<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>','<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>','<java.lang.Boolean: void <clinit>()>','<android.widget.AbsListView: void handleDataChanged()>','<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()>','<org.apache.http.ProtocolVersion: int hashCode()>','<java.lang.Long: long parseLong(java.lang.String,int)>','<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>','<java.io.File: void <init>(java.lang.String)>','<android.view.View: boolean isFocused()>','<android.webkit.CallbackProxy: void setWebChromeClient(android.webkit.WebChromeClient)>','<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>','<java.math.BigInteger: java.math.BigInteger min(java.math.BigInteger)>','<android.app.Dialog: void setCancelMessage(android.os.Message)>','<android.view.View: android.os.Handler getHandler()>','<android.view.MotionEvent: long getDownTime()>','<java.security.cert.Certificate$CertificateRep: void <init>(java.lang.String,byte[])>','<java.security.cert.CertPath: java.lang.String toString()>','<java.io.Writer: void write(java.lang.String,int,int)>','<android.os.PatternMatcher: void <init>(java.lang.String,int)>','<android.app.ActivityManager$ProcessErrorStateInfo: void <init>()>','<java.io.SyncFailedException: void <init>(java.lang.String)>','<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>','<android.view.animation.Animation: long getStartOffset()>','<android.app.Dialog: android.view.View getCurrentFocus()>','<java.net.InetAddress: boolean isMCOrgLocal()>','<java.lang.Thread: int getPriority()>','<java.nio.channels.SelectionKey: void <init>()>','<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>','<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>','<java.io.PrintWriter: void write(java.lang.String,int,int)>','<android.view.View: void restoreHierarchyState(android.util.SparseArray)>','<android.content.pm.ServiceInfo: java.lang.String toString()>','<android.media.MediaPlayer: void <init>()>','<java.net.URI: java.lang.String toASCIIString()>','<android.os.ParcelFileDescriptor: java.lang.String toString()>','<android.graphics.Matrix: boolean preSkew(float,float,float,float)>','<java.util.Date: java.lang.String toString()>','<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.spi.SelectorProvider provider()>','<android.graphics.RectF: float width()>','<java.lang.Character: char reverseBytes(char)>','<android.view.MotionEvent: float getRawX()>','<android.webkit.CallbackProxy: void onReceivedTitle(java.lang.String)>','<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>','<android.widget.AbsListView: int getListPaddingLeft()>','<java.lang.Throwable: void printStackTrace()>','<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>','<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>','<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>','<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>','<android.provider.Settings$System: void <clinit>()>','<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>','<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>','<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>','<android.content.ComponentName: java.lang.String flattenToString()>','<android.app.Activity: void finish()>','<android.provider.Browser: void clearSearches(android.content.ContentResolver)>','<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>','<android.view.animation.Animation: void setStartTime(long)>','<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>','<android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState[] values()>','<android.webkit.JsPromptResult: void confirm(java.lang.String)>','<java.io.Reader: int read(char[])>','<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>','<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>','<android.os.Bundle: void putLong(java.lang.String,long)>','<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region$Op)>','<java.lang.String: char charAt(int)>','<android.location.Criteria: int getPowerRequirement()>','<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>','<android.widget.TextView: int getExtendedPaddingTop()>','<java.lang.Thread: void setPriority(int)>','<java.lang.String: char[] toCharArray()>','<java.net.DatagramSocket: void <init>(int)>','<java.math.BigInteger: java.lang.String toString()>','<android.os.Bundle: void putCharArray(java.lang.String,char[])>','<android.database.ContentObserver: void dispatchChange(boolean)>','<java.lang.Long: int numberOfTrailingZeros(long)>','<java.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()>','<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>','<java.security.cert.X509Certificate: void <init>()>','<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>','<java.net.InetAddress: boolean isMCSiteLocal()>','<android.view.View: android.os.Parcelable onSaveInstanceState()>','<android.app.Dialog: android.os.Bundle onSaveInstanceState()>','<java.nio.channels.SelectionKey: boolean isConnectable()>','<java.lang.annotation.RetentionPolicy: void <clinit>()>','<android.widget.TextView: int getLineCount()>','<java.util.ArrayList: java.lang.Object clone()>','<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>','<android.database.sqlite.SQLiteDatabase: void setVersion(int)>','<android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt valueOf(java.lang.String)>','<java.net.Socket: java.net.InetAddress getInetAddress()>','<java.io.File: boolean setLastModified(long)>','<android.webkit.Plugin: java.lang.String getName()>','<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>','<java.io.Reader: void mark(int)>','<android.content.Intent: boolean hasFileDescriptors()>','<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>','<android.app.Activity: void onUserLeaveHint()>','<android.location.Location: float getAccuracy()>','<android.net.NetworkInfo$DetailedState: void <clinit>()>','<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>','<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>','<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>','<java.lang.Exception: void <init>()>','<android.text.Layout: int getLineBottom(int)>','<java.security.Permission: void checkGuard(java.lang.Object)>','<android.app.Activity: void setIntent(android.content.Intent)>','<android.widget.TextView: boolean bringPointIntoView(int)>','<android.widget.TextView: void setSelectAllOnFocus(boolean)>','<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>','<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>','<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>','<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>','<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>','<android.webkit.WebSettings: void setDefaultFontSize(int)>','<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>','<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>','<android.content.Intent: android.content.Intent setData(android.net.Uri)>','<javax.security.auth.x500.X500Principal: int hashCode()>','<java.math.BigInteger: void <init>(int,int,java.util.Random)>','<android.view.View: boolean isFocusable()>','<android.view.View: int getLeftPaddingOffset()>','<android.widget.ListView: boolean removeFooterView(android.view.View)>','<android.util.AndroidException: void <init>()>','<android.widget.TextView: void append(java.lang.CharSequence,int,int)>','<java.io.FileOutputStream: void finalize()>','<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)>','<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>','<android.widget.AbsListView: void <init>(android.content.Context)>','<android.view.animation.Animation: void setDuration(long)>','<android.graphics.Paint: void <init>()>','<android.graphics.Paint$Align: void <clinit>()>','<android.content.ComponentName: void <init>(android.os.Parcel)>','<android.telephony.ServiceState: int describeContents()>','<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>','<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)>','<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>','<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>','<android.os.Bundle: int size()>','<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>','<android.graphics.RectF: boolean isEmpty()>','<android.app.Activity: android.app.Activity getParent()>','<android.content.Intent: void removeExtra(java.lang.String)>','<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>','<java.lang.Character: boolean isUpperCase(char)>','<java.lang.String: int indexOf(int,int)>','<java.nio.FloatBuffer: int compareTo(java.nio.FloatBuffer)>','<android.widget.AbsListView: int computeVerticalScrollOffset()>','<java.lang.StringBuffer: java.lang.StringBuffer append(char)>','<android.content.pm.ResolveInfo: int getIconResource()>','<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>','<java.lang.Character: char[] toChars(int)>','<java.nio.channels.SelectionKey: boolean isReadable()>','<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>','<android.content.res.TypedArray: java.lang.CharSequence getText(int)>','<java.lang.Byte: byte parseByte(java.lang.String,int)>','<java.io.FileInputStream: int read(byte[])>','<android.webkit.PluginList: java.util.List getList()>','<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>','<java.lang.Character$UnicodeBlock: void <clinit>()>','<android.view.View: boolean isPressed()>','<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>','<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>','<android.graphics.RectF: boolean contains(float,float,float,float)>','<java.lang.ThreadGroup: void stop()>','<java.net.DatagramPacket: void setData(byte[],int,int)>','<java.net.Socket: boolean isClosed()>','<java.net.ServerSocket: void <init>(int,int)>','<java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>','<android.app.LocalActivityManager: void removeAllActivities()>','<android.net.wifi.WifiManager$WifiLock: void release()>','<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>','<android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState valueOf(java.lang.String)>','<android.content.res.TypedArray: java.lang.String getPositionDescription()>','<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>','<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>','<android.content.ContextWrapper: java.io.File getFilesDir()>','<java.security.CodeSource: java.lang.String toString()>','<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void write(byte[])>','<android.location.Location: float distanceTo(android.location.Location)>','<android.webkit.WebView: void documentHasImages(android.os.Message)>','<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>','<java.net.URI: int compareTo(java.net.URI)>','<android.location.LocationProvider: java.lang.String getName()>','<android.graphics.Matrix: void mapVectors(float[],float[])>','<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)>','<android.widget.ListView: void setSelectionFromTop(int,int)>','<android.view.View: void setDrawingCacheEnabled(boolean)>','<android.view.animation.Animation: boolean isInitialized()>','<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>','<android.widget.ListView: void addFooterView(android.view.View)>','<org.apache.http.message.BasicLineParser: void <init>(org.apache.http.ProtocolVersion)>','<android.content.res.TypedArray: int length()>','<android.content.pm.Signature: int hashCode()>','<java.lang.Double: java.lang.Double valueOf(double)>','<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>','<android.content.BroadcastReceiver: void setOrderedHint(boolean)>','<android.view.Display: void getMetrics(android.util.DisplayMetrics)>','<java.io.PrintWriter: void print(int)>','<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>','<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>','<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>','<java.lang.reflect.Field: boolean isSynthetic()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>','<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String)>','<java.math.BigInteger: java.math.BigInteger flipBit(int)>','<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>','<android.graphics.Paint: void clearShadowLayer()>','<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<android.os.ParcelFileDescriptor: void close()>','<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>','<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>','<android.text.Layout: float getLineWidth(int)>','<android.view.Window: void setFormat(int)>','<org.apache.http.util.CharArrayBuffer: char charAt(int)>','<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>','<android.widget.TextView: void onCreateContextMenu(android.view.ContextMenu)>','<org.apache.http.util.ByteArrayBuffer: int capacity()>','<java.util.AbstractList: boolean addAll(int,java.util.Collection)>','<java.net.ServerSocket: java.net.InetAddress getInetAddress()>','<java.lang.StringBuffer: java.lang.String toString()>','<java.lang.Integer: boolean equals(java.lang.Object)>','<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>','<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>','<java.security.ProtectionDomain: java.lang.String toString()>','<java.nio.Buffer: int position()>','<java.net.URI: java.lang.String getSchemeSpecificPart()>','<java.net.URL: java.lang.String getProtocol()>','<android.content.res.TypedArray: float getDimension(int,float)>','<org.apache.http.ProtocolVersion: java.lang.Object clone()>','<java.net.Socket: java.io.OutputStream getOutputStream()>','<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>','<android.location.Criteria: void <init>(android.location.Criteria)>','<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>','<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)>','<android.content.ContentValues: int size()>','<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>','<android.view.View: android.view.View findViewWithTag(java.lang.Object)>','<android.content.ContentValues: void <init>(android.content.ContentValues)>','<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>','<android.view.inputmethod.ExtractedTextRequest: void <init>()>','<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>','<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>','<java.net.Socket: void setSendBufferSize(int)>','<java.util.Locale: java.lang.String getDisplayLanguage()>','<android.widget.AbsListView: void drawableStateChanged()>','<android.content.res.Resources$Theme: void applyStyle(int,boolean)>','<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>','<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>','<android.view.animation.Animation: int getRepeatCount()>','<java.io.File: java.lang.String getParent()>','<android.view.View: void clearAnimation()>','<android.view.View: int getNextFocusLeftId()>','<java.net.ServerSocket: boolean isClosed()>','<android.widget.TextView: int getImeOptions()>','<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>','<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>','<android.widget.TextView: void setMaxLines(int)>','<android.content.ContentProvider: boolean isTemporary()>','<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>','<android.view.WindowManager$LayoutParams: java.lang.String debug(java.lang.String)>','<java.net.Socket: boolean getOOBInline()>','<java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>','<android.view.View: boolean checkInputConnectionProxy(android.view.View)>','<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>','<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>','<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>','<java.lang.ref.Reference: void clear()>','<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>','<android.text.style.URLSpan: int getSpanTypeId()>','<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>','<android.content.pm.InstrumentationInfo: void <clinit>()>','<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>','<java.lang.Character: boolean isTitleCase(char)>','<java.lang.String: int indexOf(java.lang.String,int)>','<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>','<android.widget.TextView: void setInputExtras(int)>','<android.view.ViewGroup: void clearChildFocus(android.view.View)>','<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>','<android.os.Binder: boolean pingBinder()>','<android.widget.TextView: android.text.InputFilter[] getFilters()>','<android.graphics.Path: void incReserve(int)>','<java.util.BitSet: void andNot(java.util.BitSet)>','<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>','<android.content.Intent: android.content.Intent addFlags(int)>','<android.util.SparseArray: void append(int,java.lang.Object)>','<java.net.URLConnection: long getLastModified()>','<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>','<android.database.sqlite.SQLiteDatabase: void endTransaction()>','<android.location.GpsStatus: int getMaxSatellites()>','<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>','<android.webkit.WebView: void <init>(android.content.Context)>','<android.graphics.Canvas: void concat(android.graphics.Matrix)>','<android.widget.ListView: void setChoiceMode(int)>','<android.net.wifi.WifiInfo: boolean getHiddenSSID()>','<android.location.LocationManager: void <init>()>','<android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt[] values()>','<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>','<android.widget.AbsListView: void onMeasure(int,int)>','<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>','<android.view.View: android.view.View getRootView()>','<android.app.ActivityGroup: void <init>()>','<android.webkit.HttpAuthHandler: void <init>()>','<java.lang.RuntimeException: void <init>(java.lang.String)>','<java.lang.Package: java.lang.String getImplementationVersion()>','<java.security.cert.CertificateException: void <init>(java.lang.String,java.lang.Throwable)>','<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>','<android.graphics.Matrix: void setSinCos(float,float,float,float)>','<java.net.InetAddress: boolean isLoopbackAddress()>','<android.content.pm.ServiceInfo: void <init>()>','<android.content.IntentFilter: void addCategory(java.lang.String)>','<android.webkit.WebSettings: int getUserAgent()>','<java.nio.FloatBuffer: java.lang.String toString()>','<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>','<android.view.View: void onMeasure(int,int)>','<android.util.SparseArray: int indexOfKey(int)>','<java.util.ArrayList: void add(int,java.lang.Object)>','<android.view.View: int computeHorizontalScrollRange()>','<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>','<android.view.animation.Transformation: float getAlpha()>','<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>','<android.widget.AbsListView: boolean hasTextFilter()>','<android.os.Message: void copyFrom(android.os.Message)>','<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>','<android.database.sqlite.SQLiteProgram: int getUniqueId()>','<android.text.style.ReplacementSpan: void <init>()>','<android.view.View: void addTouchables(java.util.ArrayList)>','<java.lang.ArithmeticException: void <init>(java.lang.String)>','<java.lang.Character: boolean isLetter(int)>','<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>','<android.view.ViewGroup: void scheduleLayoutAnimation()>','<android.widget.TextView: void onStartTemporaryDetach()>','<android.widget.TextView: void setEditableFactory(android.text.Editable$Factory)>','<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>','<java.net.URLStreamHandler: boolean hostsEqual(java.net.URL,java.net.URL)>','<android.view.inputmethod.CompletionInfo: int describeContents()>','<android.net.Uri$Builder: android.net.Uri build()>','<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>','<android.graphics.Shader$TileMode: android.graphics.Shader$TileMode[] values()>','<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>','<android.webkit.WebBackForwardList: void <init>()>','<android.os.Parcel: void writeByteArray(byte[],int,int)>','<java.io.File: boolean canRead()>','<java.io.File: void deleteOnExit()>','<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)>','<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>','<android.widget.TextView: android.text.Editable getEditableText()>','<android.content.pm.PackageItemInfo: void <init>()>','<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>','<java.net.SocketAddress: void <init>()>','<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>','<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>','<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>','<java.lang.ClassCastException: void <init>(java.lang.String)>','<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>','<android.content.pm.ActivityInfo: int getThemeResource()>','<android.graphics.Matrix: boolean preScale(float,float,float,float)>','<java.nio.CharBuffer: int hashCode()>','<android.widget.Scroller: int timePassed()>','<android.content.pm.ProviderInfo: java.lang.String toString()>','<android.webkit.WebSettings: int getCacheMode()>','<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>','<android.app.Activity: android.view.Window getWindow()>','<android.provider.Settings$SettingNotFoundException: void <init>(java.lang.String)>','<android.widget.ListView: void addHeaderView(android.view.View)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>','<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>','<java.lang.Character$Subset: java.lang.String toString()>','<android.os.Parcel: void writeException(java.lang.Exception)>','<android.view.AbsSavedState: android.os.Parcelable getSuperState()>','<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>','<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>','<android.telephony.TelephonyManager: void <init>()>','<android.view.LayoutInflater: void <init>(android.content.Context)>','<android.webkit.JsResult: void wakeUp()>','<java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>','<java.lang.Class: boolean isAnnotation()>','<java.lang.String: void getChars(int,int,char[],int)>','<android.widget.Scroller: int getCurrY()>','<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>','<java.nio.CharBuffer: int read(java.nio.CharBuffer)>','<java.lang.Package: boolean isSealed()>','<android.graphics.MaskFilter: void <init>()>','<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>','<android.os.Parcel: void writeValue(java.lang.Object)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>','<android.view.View: void addFocusables(java.util.ArrayList,int)>','<android.app.Dialog: void setOwnerActivity(android.app.Activity)>','<java.util.Date: void setSeconds(int)>','<android.view.SurfaceHolder$BadSurfaceTypeException: void <init>(java.lang.String)>','<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>','<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>','<android.os.Bundle: int getInt(java.lang.String,int)>','<android.os.Bundle: double getDouble(java.lang.String,double)>','<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>','<java.lang.AbstractStringBuilder: java.lang.String substring(int)>','<java.lang.String: int lastIndexOf(java.lang.String,int)>','<android.app.Activity: android.app.Dialog onCreateDialog(int)>','<java.lang.Short: boolean equals(java.lang.Object)>','<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>','<java.lang.Character: boolean isLowSurrogate(char)>','<java.net.DatagramSocket: void setBroadcast(boolean)>','<android.database.SQLException: void <init>()>','<android.net.Uri: void <init>()>','<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>','<android.widget.AdapterView: long getSelectedItemId()>','<java.lang.ClassFormatError: void <init>(java.lang.String)>','<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>','<android.widget.AdapterView: void setFocusable(boolean)>','<java.io.OutputStream: void write(byte[])>','<java.security.cert.CertificateNotYetValidException: void <init>(java.lang.String)>','<android.app.Activity: int getTitleColor()>','<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>','<android.view.animation.Animation: boolean hasStarted()>','<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>','<android.graphics.Region: boolean quickReject(android.graphics.Rect)>','<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])>','<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>','<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)>','<java.io.PrintWriter: void print(double)>','<android.widget.TextView: void setShadowLayer(float,float,float,int)>','<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>','<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>','<android.os.Parcel: void writeBundle(android.os.Bundle)>','<android.util.TypedValue: float complexToFloat(int)>','<android.content.res.Configuration: void setToDefaults()>','<java.lang.AbstractStringBuilder: void trimToSize()>','<java.lang.StackTraceElement: java.lang.String getClassName()>','<java.util.AbstractCollection: boolean removeAll(java.util.Collection)>','<java.lang.reflect.Method: java.lang.String toGenericString()>','<java.lang.String: boolean contentEquals(java.lang.CharSequence)>','<android.graphics.PorterDuff$Mode: void <clinit>()>','<android.webkit.WebView: float getScale()>','<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>','<android.content.pm.PermissionInfo: int describeContents()>','<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>','<android.view.Window: void setGravity(int)>','<android.content.ContentValues: java.lang.Object get(java.lang.String)>','<java.io.File: boolean isFile()>','<java.io.Writer: void write(java.lang.String)>','<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>','<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>','<java.lang.Throwable: java.lang.String getLocalizedMessage()>','<android.content.Intent: int getFlags()>','<java.util.UUID: int compareTo(java.lang.Object)>','<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>','<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>','<android.os.Parcel: void readDoubleArray(double[])>','<android.net.http.SslCertificate$DName: java.lang.String getOName()>','<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>','<java.lang.Class: java.lang.Object newInstance()>','<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>','<java.util.Locale: java.lang.String getISO3Language()>','<java.lang.Character: boolean isLowerCase(int)>','<android.app.Activity: void onResume()>','<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>','<java.lang.StringBuilder: java.lang.StringBuilder insert(int,float)>','<java.security.spec.ECPoint: void <clinit>()>','<android.view.Display: float getRefreshRate()>','<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>','<android.view.View: void bringToFront()>','<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>','<android.app.ActivityManager$RunningServiceInfo: void readFromParcel(android.os.Parcel)>','<java.io.PrintStream: void write(int)>','<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>','<android.content.pm.PackageItemInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>','<android.telephony.TelephonyManager: java.lang.String getSimOperator()>','<android.content.res.AssetFileDescriptor: int describeContents()>','<java.io.OutputStream: void <init>()>','<android.app.Activity: boolean moveTaskToBack(boolean)>','<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>','<org.apache.http.message.ParserCursor: int getLowerBound()>','<android.content.res.Resources: java.lang.String getResourceTypeName(int)>','<android.content.Intent: android.content.Intent cloneFilter()>','<android.view.LayoutInflater: android.view.LayoutInflater from(android.content.Context)>','<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>','<java.lang.Character: boolean isWhitespace(int)>','<android.view.MotionEvent: long getEventTime()>','<java.nio.Buffer: java.nio.Buffer mark()>','<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>','<android.view.View: void invalidate(int,int,int,int)>','<java.lang.Throwable: void <init>(java.lang.Throwable)>','<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>','<android.os.PatternMatcher: int describeContents()>','<android.net.Uri: int compareTo(android.net.Uri)>','<java.lang.String: int codePointAt(int)>','<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>','<java.util.Random: void <init>()>','<java.io.File: int hashCode()>','<android.os.Bundle: java.lang.Object get(java.lang.String)>','<java.security.InvalidKeyException: void <init>(java.lang.String)>','<java.lang.AssertionError: void <init>(float)>','<android.webkit.WebView: void refreshPlugins(boolean)>','<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>','<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>','<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>','<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>','<android.content.Intent: android.content.Intent setAction(java.lang.String)>','<android.view.Window: int getFeatures()>','<android.widget.TextView: void onBeginBatchEdit()>','<java.nio.CharBuffer: int compareTo(java.lang.Object)>','<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>','<android.os.Parcel: double[] createDoubleArray()>','<java.nio.DoubleBuffer: boolean equals(java.lang.Object)>','<android.graphics.RectF: void <init>(android.graphics.RectF)>','<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>','<android.graphics.Paint: void setARGB(int,int,int,int)>','<java.lang.Boolean: int compareTo(java.lang.Object)>','<java.lang.StringBuilder: java.lang.StringBuilder append(long)>','<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>','<java.util.ArrayList: int lastIndexOf(java.lang.Object)>','<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>','<android.view.View: void postInvalidateDelayed(long)>','<java.lang.Class: boolean isLocalClass()>','<java.net.DatagramSocket: void setReuseAddress(boolean)>','<java.lang.String: void <init>(java.lang.StringBuilder)>','<javax.security.auth.x500.X500Principal: void <init>(byte[])>','<java.io.PrintStream: void println(float)>','<android.content.res.TypedArray: boolean getBoolean(int,boolean)>','<java.util.AbstractList: java.lang.Object remove(int)>','<java.lang.String: java.lang.String concat(java.lang.String)>','<android.graphics.Rect: java.lang.String toShortString()>','<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>','<android.content.Intent: android.content.ComponentName getComponent()>','<java.lang.String: boolean startsWith(java.lang.String,int)>','<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>','<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>','<android.graphics.Picture: void writeToStream(java.io.OutputStream)>','<java.security.Timestamp: java.util.Date getTimestamp()>','<android.os.Message: android.os.Message obtain(android.os.Message)>','<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>','<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>','<java.net.URISyntaxException: java.lang.String getMessage()>','<android.view.Display: int getDisplayId()>','<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>','<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)>','<android.widget.TextView: void setText(char[],int,int)>','<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>','<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>','<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>','<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>','<android.view.View: void setNextFocusDownId(int)>','<java.util.HashMap: java.lang.Object clone()>','<java.math.BigInteger: byte[] toByteArray()>','<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>','<android.view.animation.Transformation: java.lang.String toShortString()>','<java.net.DatagramSocket: void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)>','<android.database.sqlite.SQLiteStatement: void <init>()>','<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>','<android.widget.AdapterView: void addView(android.view.View,int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>','<android.util.TypedValue: java.lang.CharSequence coerceToString()>','<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>','<java.lang.ref.Reference: void <init>()>','<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>','<java.util.AbstractMap: java.util.Collection values()>','<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>','<android.content.res.Configuration: boolean needNewResources(int,int)>','<java.lang.Integer: int bitCount(int)>','<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>','<java.net.Proxy: int hashCode()>','<java.nio.CharBuffer: java.nio.CharBuffer append(java.lang.CharSequence)>','<java.lang.Boolean: int hashCode()>','<java.lang.Long: java.lang.String toHexString(long)>','<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>','<android.database.sqlite.SQLiteProgram: void finalize()>','<java.util.BitSet: void set(int,int,boolean)>','<android.content.res.Resources: float getFraction(int,int,int)>','<android.content.res.ColorStateList: int describeContents()>','<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>','<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>','<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>','<org.apache.http.util.CharArrayBuffer: void setLength(int)>','<java.lang.Package: java.lang.Package[] getPackages()>','<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>','<java.io.FileNotFoundException: void <init>(java.lang.String)>','<android.webkit.PluginList: void pluginClicked(android.content.Context,int)>','<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>','<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>','<java.io.PrintStream: void println(java.lang.Object)>','<android.view.View: boolean willNotDraw()>','<java.nio.channels.spi.AbstractSelector: boolean isOpen()>','<java.io.PrintStream: void print(char)>','<android.content.Intent: android.net.Uri getData()>','<java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>','<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>','<android.content.pm.Signature: void <init>(byte[])>','<android.webkit.WebSettings: boolean supportZoom()>','<java.nio.ByteOrder: void <clinit>()>','<android.view.View: android.content.res.Resources getResources()>','<android.graphics.RectF: void set(android.graphics.RectF)>','<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>','<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>','<android.view.View: void offsetLeftAndRight(int)>','<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>','<android.telephony.gsm.SmsManager: void <init>()>','<android.content.Intent: android.content.Intent setFlags(int)>','<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>','<java.net.URL: java.net.URI toURI()>','<android.view.View: void onDraw(android.graphics.Canvas)>','<android.hardware.Camera$Parameters: void setPreviewFormat(int)>','<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>','<android.location.Location: boolean hasAltitude()>','<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>','<android.net.Uri$Builder: android.net.Uri$Builder encodedFragment(java.lang.String)>','<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>','<java.net.InetAddress: int hashCode()>','<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>','<android.app.Activity: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)>','<java.net.URL: java.lang.Object getContent(java.lang.Class[])>','<android.view.View: boolean isDrawingCacheEnabled()>','<android.app.Dialog: void setTitle(java.lang.CharSequence)>','<java.nio.CharBuffer: java.nio.CharBuffer put(java.lang.String,int,int)>','<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>','<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>','<java.io.InputStream: boolean markSupported()>','<android.webkit.WebSettings: java.lang.String getPluginsPath()>','<android.widget.TextView: void setSingleLine(boolean)>','<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>','<android.app.ActivityManager$RunningServiceInfo: int describeContents()>','<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>','<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>','<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>','<java.lang.reflect.Field: void setInt(java.lang.Object,int)>','<android.view.View: int computeVerticalScrollOffset()>','<java.nio.IntBuffer: java.nio.IntBuffer allocate(int)>','<java.lang.Long: java.lang.Long valueOf(long)>','<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>','<android.graphics.Paint$Join: android.graphics.Paint$Join[] values()>','<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>','<java.net.URLConnection: long getExpiration()>','<android.webkit.WebSettings$RenderPriority: void <clinit>()>','<java.util.ArrayList: int indexOf(java.lang.Object)>','<java.util.Date: boolean before(java.util.Date)>','<java.lang.Double: java.lang.Double valueOf(java.lang.String)>','<java.math.BigInteger: java.math.BigInteger abs()>','<android.content.IntentFilter: void addDataType(java.lang.String)>','<java.net.Socket: int getReceiveBufferSize()>','<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>','<android.graphics.Rect: float exactCenterY()>','<java.io.FilterOutputStream: void write(int)>','<android.database.CharArrayBuffer: void <init>(int)>','<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>','<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>','<java.lang.SecurityException: void <init>(java.lang.String)>','<android.widget.ListView: boolean getItemsCanFocus()>','<android.widget.TextView: void setHintTextColor(int)>','<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>','<java.lang.NoClassDefFoundError: void <init>()>','<org.apache.http.util.CharArrayBuffer: char[] toCharArray()>','<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>','<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>'}

@data
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.database.sqlite.SQLiteStatement: long executeInsert()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.media.MediaPlayer: void stop()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.widget.AbsListView: boolean isTextFilterEnabled()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.widget.TextView: boolean onPreDraw()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.hardware.Camera: android.hardware.Camera open()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.net.wifi.WifiManager: boolean reconnect()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finishActivity(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finish()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,sink,'<java.net.URL: java.net.URLConnection openConnection()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finishFromChild(android.app.Activity)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finishFromChild(android.app.Activity)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.util.Log: int v(java.lang.String,java.lang.String)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>'
false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<java.util.UUID: long getLeastSignificantBits()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<javax.security.cert.CertificateEncodingException: void <init>(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>'
false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ActivityGroup: void finishActivity(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.ExpandableListActivity: void onContentChanged()>'
false,false,false,?,false,false,false,?,false,false,?,false,false,false,false,?,?,false,?,?,false,?,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,?,false,false,false,false,false,?,false,false,false,false,true,false,?,false,false,false,false,false,false,?,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,?,?,false,false,false,false,?,false,false,?,true,?,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,?,?,false,false,?,?,false,false,false,false,false,false,?,false,false,false,false,false,false,false,?,?,?,?,false,?,?,false,false,?,?,false,?,?,?,false,false,true,false,false,?,false,false,false,false,true,true,false,false,false,false,?,?,?,false,false,false,false,false,false,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,false,?,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,true,?,false,false,false,false,false,false,?,false,false,?,false,false,false,false,sink,'<android.util.Log: int println(int,java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>'
false,false,false,?,false,false,false,?,false,false,?,false,false,false,false,?,?,false,?,?,false,?,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,?,false,false,false,false,false,?,false,false,false,false,true,false,?,false,false,false,false,false,false,?,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,?,?,false,false,false,false,?,false,false,?,true,?,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,?,?,false,false,?,?,false,false,false,false,false,false,?,false,false,false,false,false,false,false,?,?,?,?,false,?,?,false,false,?,?,false,?,?,?,false,false,false,false,false,?,false,false,false,false,false,true,false,false,false,false,?,?,?,false,false,false,false,false,false,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,false,?,false,false,false,false,false,false,false,false,?,false,false,false,false,false,false,true,?,false,false,false,false,false,false,?,false,false,?,false,false,false,false,neithernor,'<android.graphics.Paint: float measureText(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>'
false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,sink,'<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,true,true,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.app.Activity: void finish()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.provider.Settings$Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>'
false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<android.webkit.WebView: void <init>(android.content.Context)>'
false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>'

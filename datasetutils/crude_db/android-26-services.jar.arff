@relation trainingmethods

@attribute '<Method is part of a STATIC class>' {true,false}
@attribute '<Permission name is GLOBAL_SEARCH>' {true,false}
@attribute '<Parameter to sink method bind>' {true,false}
@attribute '<Permission name is READ_CALL_LOG>' {true,false}
@attribute '<Parameter to sink method replace>' {true,false}
@attribute '<Method starts with on and has void/bool return type>' {true,false}
@attribute '<Permission name is READ_CALENDAR>' {true,false}
@attribute '<Return type is com.android.internal.telephony.Connection>' {true,false}
@attribute '<Permission name is READ_SMS>' {true,false}
@attribute '<Permission name is DEVICE_POWER>' {true,false}
@attribute '<Parameter type contains android.content.intent>' {true,false}
@attribute '<Permission name is WRITE_EXTERNAL_STORAGE>' {true,false}
@attribute '<Parameter to sink method broadcast>' {true,false}
@attribute '<Method name starts with dump>' {true,false}
@attribute '<Method name starts with onClick>' {true,false}
@attribute '<Permission name is BLUETOOTH_ADMIN>' {true,false}
@attribute '<Return type is android.database.Cursor>' {true,false}
@attribute '<Parameter to sink method connect>' {true,false}
@attribute '<Value from source method is to return>' {true,false}
@attribute '<Parameter type contains com.android.inputmethod.keyboard.key>' {true,false}
@attribute '<Value from method parameter to native method>' {true,false}
@attribute '<Permission name is GET_TASKS>' {true,false}
@attribute '<Parameter to sink method enable>' {true,false}
@attribute '<Permission name is RESTART_PACKAGES>' {true,false}
@attribute '<Permission name is SET_DEBUG_APP>' {true,false}
@attribute '<Method name starts with get>' {true,false}
@attribute '<Method is part of class that ends with Manager>' {true,false}
@attribute '<Base name of class package name: accounts>' {true,false}
@attribute '<Permission name is MODIFY_PHONE_STATE>' {true,false}
@attribute '<Method name starts with put>' {true,false}
@attribute 'Method starting with \'insert\' invoked' {true,false}
@attribute '<Permission name is RECORD_AUDIO>' {true,false}
@attribute '<Method name starts with delete>' {true,false}
@attribute '<Permission name is ADD_VOICEMAIL>' {true,false}
@attribute '<Method is part of class that ends with Loader>' {true,false}
@attribute '<Method is lone getter or setter>' {true,false}
@attribute '<Method name starts with unregister>' {true,false}
@attribute '<Parameter type contains android.filterfw.core.filtercontext>' {true,false}
@attribute '<Method name starts with perform>' {true,false}
@attribute '<Permission name is CALL_PHONE>' {true,false}
@attribute '<Parameter to abstract sink>' {true,false}
@attribute '<Method is part of class that ends with View>' {true,false}
@attribute '<Method name starts with enable>' {true,false}
@attribute '<Parameter to sink method show>' {true,false}
@attribute '<Permission name is GET_ACCOUNTS>' {true,false}
@attribute '<Method is part of class android.app.BroadcastReceiver>' {true,false}
@attribute '<Permission name is SYSTEM_ALERT_WINDOW>' {true,false}
@attribute '<Base name of class package name: telephony>' {true,false}
@attribute '<Parameter to sink method perform>' {true,false}
@attribute '<Parameter to sink method create>' {true,false}
@attribute '<Method name starts with do>' {true,false}
@attribute '<Method name starts with clear>' {true,false}
@attribute '<Value from source method obtainMessage to return>' {true,false}
@attribute '<Method name starts with set>' {true,false}
@attribute '<Method is part of a ABSTRACT class>' {true,false}
@attribute '<Permission name is READ_CONTACTS>' {true,false}
@attribute '<Permission name is REBOOT>' {true,false}
@attribute '<Parameter to sink method dispatch>' {true,false}
@attribute '<Permission name is UPDATE_DEVICE_STATS>' {true,false}
@attribute '<Method name starts with open>' {true,false}
@attribute '<Permission name is USE_CREDENTIALS>' {true,false}
@attribute '<Method is thread runner>' {true,false}
@attribute '<Parameter to sink method save>' {true,false}
@attribute '<Parameter type contains android.content.contentresolver>' {true,false}
@attribute '<Permission name is WRITE_USER_DICTIONARY>' {true,false}
@attribute '<Permission name is WRITE_SOCIAL_STREAM>' {true,false}
@attribute '<Value from source method create to return>' {true,false}
@attribute '<Method name starts with disable>' {true,false}
@attribute '<Parameter type contains java.io.filedescriptor>' {true,false}
@attribute '<Method name starts with update>' {true,false}
@attribute '<Method name starts with close>' {true,false}
@attribute '<Permission name is SET_WALLPAPER_COMPONENT>' {true,false}
@attribute '<Method name starts with apply>' {true,false}
@attribute '<Method is part of class that ends with Factory>' {true,false}
@attribute '<Parameter to sink method disable>' {true,false}
@attribute '<Method name starts with remove>' {true,false}
@attribute '<Method name starts with add>' {true,false}
@attribute '<Method is part of class android.app.ContentProvider>' {true,false}
@attribute '<Permission name is RECEIVE_SMS>' {true,false}
@attribute '<Return type is int>' {true,false}
@attribute '<Parameter to sink method send>' {true,false}
@attribute '<Permission name is WRITE_SETTINGS>' {true,false}
@attribute '<Value from source method query to return>' {true,false}
@attribute '<Parameter type contains java.io.>' {true,false}
@attribute '<Method is part of a PRIVATE class>' {true,false}
@attribute '<Method is part of class android.app.Activity>' {true,false}
@attribute '<Value from source method writeToParcel to return>' {true,false}
@attribute '<Method name starts with bind>' {true,false}
@attribute '<Permission name is AUTHENTICATE_ACCOUNTS>' {true,false}
@attribute '<Method name starts with send>' {true,false}
@attribute '<Method is part of a PROTECTED class>' {true,false}
@attribute '<Parameter to sink method start>' {true,false}
@attribute '<Parameter to sink method println>' {true,false}
@attribute '<Permission name is ACCESS_NETWORK_STATE>' {true,false}
@attribute '<Method name starts with is>' {true,false}
@attribute '<Permission name is CHANGE_WIFI_STATE>' {true,false}
@attribute '<Permission name is CALL_PRIVILEGED>' {true,false}
@attribute '<Method name ends with Messenger>' {true,false}
@attribute '<Permission name is WRITE_SMS>' {true,false}
@attribute '<Permission name is READ_SOCIAL_STREAM>' {true,false}
@attribute '<Parameter to sink method onCreate>' {true,false}
@attribute '<Permission name is KILL_BACKGROUND_PROCESSES>' {true,false}
@attribute '<Method name starts with <init>>' {true,false}
@attribute '<Return type is java.util.List>' {true,false}
@attribute '<Method modifier is STATIC>' {true,false}
@attribute '<Parameter type contains com.google.common.io>' {true,false}
@attribute '<Permission name is VIBRATE>' {true,false}
@attribute '<Parameter to sink method clear>' {true,false}
@attribute '<Permission name is WRITE_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Parameter type contains android.content.context>' {true,false}
@attribute '<Method is part of class that ends with Service>' {true,false}
@attribute '<Method modifier is PROTECTED>' {true,false}
@attribute '<Parameter to sink method restore>' {true,false}
@attribute '<Permission name is SEND_SMS>' {true,false}
@attribute '<Permission name is WAKE_LOCK>' {true,false}
@attribute '<Permission name is READ_HISTORY_BOOKMARKS>' {true,false}
@attribute '<Method name starts with handle>' {true,false}
@attribute '<Return type is java.util.Map>' {true,false}
@attribute '<Method is part of class android.content.Context>' {true,false}
@attribute '<Method name starts with supply>' {true,false}
@attribute '<Method is part of class that ends with Handler>' {true,false}
@attribute '<Parameter to sink method insert>' {true,false}
@attribute '<Permission name is CAMERA>' {true,false}
@attribute '<Parameter to sink method setup>' {true,false}
@attribute '<Return type is boolean>' {true,false}
@attribute '<Parameter to sink method write>' {true,false}
@attribute '<Parameter type contains android.database.cursor>' {true,false}
@attribute '<Parameter to sink method enqueue>' {true,false}
@attribute '<Method name starts with request>' {true,false}
@attribute '<Method modifier is FINAL>' {true,false}
@attribute '<Method has parameters>' {true,false}
@attribute '<Return type is void>' {true,false}
@attribute '<Method is part of an anonymous class>' {true,false}
@attribute '<Permission name is ACCESS_FINE_LOCATION>' {true,false}
@attribute '<Method is part of class that contains the name com.google.common.io>' {true,false}
@attribute '<Method returns constant>' {true,false}
@attribute '<Method name starts with query>' {true,false}
@attribute '<Permission name is MODIFY_AUDIO_SETTINGS>' {true,false}
@attribute '<Permission name is READ_EXTERNAL_STORAGE>' {true,false}
@attribute '<Method name starts with note>' {true,false}
@attribute '<Permission name is DISABLE_KEYGUARD>' {true,false}
@attribute '<Parameter to sink method dump>' {true,false}
@attribute '<Method name starts with process>' {true,false}
@attribute '<Permission name is STOP_APP_SWITCHES>' {true,false}
@attribute '<Permission name is CHANGE_CONFIGURATION>' {true,false}
@attribute '<Value from source method get to return>' {true,false}
@attribute '<Permission name is ACCESS_COARSE_LOCATION>' {true,false}
@attribute '<Base name of class package name: io>' {true,false}
@attribute '<Parameter type contains event>' {true,false}
@attribute '<Permission name is BROADCAST_STICKY>' {true,false}
@attribute '<Parameter to sink method sync>' {true,false}
@attribute '<Permission name is ACCESS_WIFI_STATE>' {true,false}
@attribute '<Method name starts with load>' {true,false}
@attribute '<Method modifier is PUBLIC>' {true,false}
@attribute '<Parameter to sink method remove>' {true,false}
@attribute '<Permission name is SET_WALLPAPER>' {true,false}
@attribute '<Parameter to sink method adjust>' {true,false}
@attribute '<Permission name is NFC>' {true,false}
@attribute '<Permission name is READ_SYNC_STATS>' {true,false}
@attribute '<Permission name is READ_SYNC_SETTINGS>' {true,false}
@attribute '<Parameter to sink method update>' {true,false}
@attribute '<Method name starts with register>' {true,false}
@attribute '<Parameter to sink method put>' {true,false}
@attribute '<Permission name is BACKUP>' {true,false}
@attribute '<Method is part of class that contains the name java.io.>' {true,false}
@attribute '<Permission name is READ_USER_DICTIONARY>' {true,false}
@attribute '<Permission name is SET_TIME_ZONE>' {true,false}
@attribute '<Parameter to sink method com.android.internal.telephony.CommandsInterface>' {true,false}
@attribute '<Parameter is interface>' {true,false}
@attribute '<Parameter type contains android.net.uri>' {true,false}
@attribute '<Method is part of class that ends with Context>' {true,false}
@attribute '<Method is part of a PUBLIC class>' {true,false}
@attribute '<Method is part of a FINAL class>' {true,false}
@attribute '<Method name starts with release>' {true,false}
@attribute '<Method name starts with toggle>' {true,false}
@attribute '<Return type is byte[]>' {true,false}
@attribute '<Permission name is MOUNT_UNMOUNT_FILESYSTEMS>' {true,false}
@attribute '<Base name of class package name: music>' {true,false}
@attribute '<Permission name is CLEAR_APP_USER_DATA>' {true,false}
@attribute '<Permission name is READ_PHONE_STATE>' {true,false}
@attribute '<Value from method get to sink method>' {true,false}
@attribute '<Method name starts with finish>' {true,false}
@attribute '<Permission name is MANAGE_ACCOUNTS>' {true,false}
@attribute '<Method name starts with insert>' {true,false}
@attribute '<Permission name is MANAGE_APP_TOKENS>' {true,false}
@attribute '<Method name starts with run>' {true,false}
@attribute '<Method name starts with notify>' {true,false}
@attribute '<Return type is android.os.Parcelable>' {true,false}
@attribute '<Method name starts with restore>' {true,false}
@attribute '<Permission name is DUMP>' {true,false}
@attribute '<Permission name is WRITE_SYNC_SETTINGS>' {true,false}
@attribute '<Method name starts with dispatch>' {true,false}
@attribute '<Return type is android.net.Uri>' {true,false}
@attribute '<Parameter type contains java.lang.string>' {true,false}
@attribute '<Permission name is WRITE_CONTACTS>' {true,false}
@attribute '<Parameter to sink method delete>' {true,false}
@attribute '<Parameter to sink method notify>' {true,false}
@attribute '<Method is part of class android.app.Service>' {true,false}
@attribute '<Parameter type contains writer>' {true,false}
@attribute '<Permission name is INTERNET>' {true,false}
@attribute '<Parameter type contains observer>' {true,false}
@attribute '<Permission name is RECEIVE_BOOT_COMPLETED>' {true,false}
@attribute '<Permission name is ACCESS_LOCATION_EXTRA_COMMANDS>' {true,false}
@attribute '<Parameter to sink method transact>' {true,false}
@attribute '<Base name of class package name: webkit>' {true,false}
@attribute '<Parameter to sink method dial>' {true,false}
@attribute '<Parameter to sink method set>' {true,false}
@attribute '<Permission name is USE_SIP>' {true,false}
@attribute '<Method is part of class android.content.ContentResolver>' {true,false}
@attribute '<Method name starts with start>' {true,false}
@attribute '<Permission name is CHANGE_NETWORK_STATE>' {true,false}
@attribute '<Permission name is BLUETOOTH>' {true,false}
@attribute '<Permission name is WRITE_CALENDAR>' {true,false}
@attribute class {source,sink,neithernor}
@attribute id {'<com.android.server.pm.UserDataPreparer: void reconcileUsers(java.lang.String,java.util.List)>','<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: void <init>(com.android.server.wm.TaskSnapshotPersister,int,int,android.app.ActivityManager$TaskSnapshot)>','<android.net.util.MultinetworkPolicyTracker: boolean getAvoidBadWifi()>','<com.android.server.am.InstrumentationReporter: void reportStatus(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>','<com.android.server.wm.TaskPositioner: boolean access$600(com.android.server.wm.TaskPositioner)>','<android.os.IInstalld$Stub$Proxy: void removeIdmap(java.lang.String)>','<com.android.server.am.UserController$5: void <init>(com.android.server.am.UserController,int,com.android.server.am.UserState)>','<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>','<com.android.server.am.TaskPersister$ImageWriteQueueItem: void <init>(java.lang.String,android.graphics.Bitmap)>','<com.android.server.wm.WindowState: void markSavedSurfaceExiting()>','<com.android.server.audio.AudioService: int access$2802(com.android.server.audio.AudioService,int)>','<com.android.server.pm.UserManagerService: boolean isUserUnlocked(int)>','<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: boolean isEmpty()>','<com.android.server.am.BatteryStatsService: void removeIsolatedUid(int,int)>','<com.android.server.am.StrictModeViolationDialog$1: void <init>(com.android.server.am.StrictModeViolationDialog)>','<com.android.server.wm.WindowState: int relayoutVisibleWindow(int,int,int)>','<com.android.server.location.LocationRequestStatistics: void startRequesting(java.lang.String,java.lang.String,long)>','<android.os.IInstalld$Stub$Proxy: void rmPackageDir(java.lang.String)>','<com.android.server.power.ShutdownThread: android.content.Context access$200(com.android.server.power.ShutdownThread)>','<com.android.server.am.ActivityStack: void switchUserLocked(int)>','<com.android.server.AlarmManagerService$Batch: java.lang.String toString()>','<com.android.server.pm.PackageManagerService: boolean access$5602(com.android.server.pm.PackageManagerService,boolean)>','<android.hidl.base.V1_0.IBase$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>','<com.android.server.am.ActivityManagerService: void notifyLaunchTaskBehindComplete(android.os.IBinder)>','<android.hardware.tetheroffload.control.V1_0.NetworkProtocol: void <init>()>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: com.android.server.firewall.IntentFirewall$Rule newResult(com.android.server.firewall.IntentFirewall$FirewallIntentFilter,int,int)>','<com.android.server.am.ActivityManagerService: void releasePersistableUriPermission(android.net.Uri,int,int)>','<com.android.server.am.ActivityManagerService$2: void handleMessage(android.os.Message)>','<com.android.server.connectivity.Tethering$3: void updateLinkProperties(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,android.net.LinkProperties)>','<com.android.server.power.PowerManagerService: void access$2600(com.android.server.power.PowerManagerService)>','<com.android.server.net.NetworkPolicyManagerService$13: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.usb.UsbService: android.hardware.usb.UsbPort[] getPorts()>','<com.android.server.net.NetworkStatsRecorder: void resetLocked()>','<com.android.server.am.ProcessStatsService: int getCurrentMemoryState()>','<com.android.server.pm.PackageManagerService: int checkSignatures(java.lang.String,java.lang.String)>','<com.android.server.location.GnssLocationProvider$15: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.WindowState: boolean inPinnedWorkspace()>','<com.android.server.am.ProcessList: java.lang.String makeOomAdjString(int)>','<com.android.server.am.UserController$Injector$1: void onFinished()>','<com.android.server.pm.InstantAppRegistry: boolean pruneUninstalledInstantApps(long,long)>','<com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo: void <init>(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>','<com.android.server.connectivity.NetworkMonitor$ValidationStage: com.android.server.connectivity.NetworkMonitor$ValidationStage valueOf(java.lang.String)>','<com.android.server.ConnectivityService$1: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>','<com.android.server.wm.RootWindowContainer: void setSecureSurfaceState(int,boolean)>','<com.android.server.am.ActiveServices$ServiceRestarter: void setService(com.android.server.am.ServiceRecord)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: int getDefaultTetherOffloadDisabled()>','<com.android.server.pm.PackageManagerService: void updatePermissionFlagsForAllApps(int,int,int)>','<com.android.server.IntentResolver: void sortResults(java.util.List)>','<com.android.server.wm.Task: void getTempInsetBounds(android.graphics.Rect)>','<com.android.server.power.PowerManagerService: void access$5000(com.android.server.power.PowerManagerService,boolean,int)>','<com.android.server.am.UserController$6: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.pm.UserManagerService: boolean access$1602(com.android.server.pm.UserManagerService,boolean)>','<com.android.server.pm.InstantAppRegistry: void addInstantAppLPw(int,int)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: boolean onCheckHoldWakeLock(int)>','<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockUids(android.os.IBinder,int[])>','<com.android.server.pm.PackageManagerService$HandlerParams: com.android.server.pm.PackageManagerService$HandlerParams setTraceMethod(java.lang.String)>','<com.android.server.pm.PackageInstallerSession$2: boolean accept(java.io.File)>','<com.android.server.am.KeyguardController: boolean isKeyguardShowing()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$500(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int systemNotResponding(java.lang.String)>','<com.android.server.wm.DimLayer: void show(int,float,long)>','<com.android.server.pm.PackageManagerServiceUtils: java.util.List getPackagesForDexopt(java.util.Collection,com.android.server.pm.PackageManagerService)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onRectangleOnScreenRequestedLocked(android.graphics.Rect)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$6: void onValues(boolean,java.lang.String)>','<com.android.server.am.ActivityManagerService$UiHandler: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>','<com.android.server.wm.WindowContainer: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void setConsumer(java.util.function.Consumer)>','<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)>','<com.android.server.net.NetworkStatsObservers: void updateStats(android.net.NetworkStats,android.net.NetworkStats,android.util.ArrayMap,android.util.ArrayMap,com.android.internal.net.VpnInfo[],long)>','<com.android.server.pm.PermissionsState: boolean updatePermissionFlagsForAllPermissions(int,int,int)>','<com.android.server.pm.UserManagerService: int onShellCommand(com.android.server.pm.UserManagerService$Shell,java.lang.String)>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityRequestedOrientationChanged(int,int)>','<com.android.server.connectivity.NetworkMonitor$EvaluatingState: void enter()>','<com.android.server.am.ActivityManagerService: void access$400(com.android.server.am.ActivityManagerService)>','<com.android.server.pm.PackageManagerService: void verifyPendingInstall(int,int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: void <clinit>()>','<com.android.server.am.ActivityStarter: void startHomeActivityLocked(android.content.Intent,android.content.pm.ActivityInfo,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmUidIdle(int)>','<com.android.server.wm.ScreenRotationAnimation: void updateSurfacesInTransaction()>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager$DuckedApp: void <init>(int)>','<com.android.server.AppOpsService$ClientState: java.lang.String toString()>','<com.android.server.am.BaseErrorDialog$1: void handleMessage(android.os.Message)>','<com.android.server.wm.WindowManagerService$LocalService: void updateInputMethodWindowStatus(android.os.IBinder,boolean,boolean,android.os.IBinder)>','<com.android.server.location.GnssNavigationMessageProvider$StatusChangedOperation: void execute(android.os.IInterface)>','<com.android.server.pm.PackageManagerService: int[] appendInts(int[],int[])>','<com.android.server.pm.PackageManagerService$PackageParserCallback: java.util.List getStaticOverlayPackagesLocked(java.util.Collection,java.lang.String)>','<com.android.server.wm.WindowManagerService$MousePositionTracker: boolean access$1700(com.android.server.wm.WindowManagerService$MousePositionTracker)>','<com.android.server.pm.UserManagerService: int getFreeProfileBadgeLU(int)>','<com.android.server.pm.PackageManagerService$11: void run()>','<com.android.server.am.TaskPersister: long access$500(com.android.server.am.TaskPersister)>','<com.android.server.NetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.SystemService: android.content.Context getContext()>','<com.android.server.am.TaskPersister: void unloadUserDataFromMemory(int)>','<com.android.server.am.ActivityManagerService$IntentFirewallInterface: int checkComponentPermission(java.lang.String,int,int,int,boolean)>','<com.android.server.am.ActiveServices$ServiceDumper: void dumpLocked()>','<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityManagerService: void tempWhitelistForPendingIntentLocked(int,int,int,long,java.lang.String)>','<com.android.server.EventLogTags: void writeRescueLevel(int,int)>','<com.android.server.wm.WindowManagerService$LocalService: void clearLastInputMethodWindowForTransition()>','<com.android.server.NetworkManagementService: void access$2600(com.android.server.NetworkManagementService,int,boolean)>','<com.android.server.ConnectivityService$SettingsObserver: void <init>(android.content.Context,android.os.Handler)>','<com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromStagedFile(java.io.File)>','<com.android.server.net.NetworkPolicyManagerService: void updateRulesForAppIdleParoleUL()>','<com.android.server.wm.DisplayContent$TaskStackContainers: void removeExistingAppTokensIfPossible()>','<com.android.server.am.ActivityStack: void addRecentActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityStackSupervisor: void lockAllProfileTasks(int)>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void access$6500(com.android.server.pm.PackageManagerService$MoveCallbacks,int,int,long)>','<com.android.server.wm.AppWindowToken: int getOrientation(int)>','<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray access$1700(com.android.server.pm.UserManagerService)>','<com.android.server.usb.UsbPortManager$RawPortInfo: void <init>(java.lang.String,int)>','<com.android.server.am.ActivityRecord: void setVisible(boolean)>','<com.android.server.am.LaunchingTaskPositioner: void <init>()>','<com.android.server.input.InputManagerService$4: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.wm.DisplayContent: com.android.server.wm.WindowToken getWindowToken(android.os.IBinder)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onSupportAvailable()>','<com.android.server.location.GnssLocationProvider: boolean access$2100(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.BoundsAnimationController: void <init>(android.content.Context,com.android.server.wm.AppTransition,android.os.Handler,android.animation.AnimationHandler)>','<com.android.server.audio.AudioService$SettingsObserver: void onChange(boolean)>','<com.android.server.wm.WindowManagerService: void notifyHardKeyboardStatusChange()>','<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>','<com.android.server.wm.WindowState: void scheduleAnimationIfDimming()>','<android.hardware.configstore.V1_0.OptionalInt64: void writeToParcel(android.os.HwParcel)>','<com.android.server.wm.WindowState: boolean showLw(boolean)>','<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>','<com.android.server.AlarmManagerService$Alarm: boolean matches(java.lang.String)>','<com.android.server.am.TaskChangeNotificationController$MainHandler: void <init>(com.android.server.am.TaskChangeNotificationController,android.os.Looper)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.audio.PlaybackActivityMonitor: void mutePlayersForCall(int[])>','<com.android.server.pm.PackageManagerService: void access$6800(com.android.server.pm.PackageManagerService,java.lang.String)>','<com.android.server.wm.InputMonitor: void freezeInputDispatchingLw()>','<com.android.server.am.BatteryStatsService: java.lang.String getSubsystemLowPowerStats()>','<com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardware getLocationHardware()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.statusbar.StatusBarManagerService: android.content.Context access$700(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.EventLogTags: void writeFullBackupTransportFailure()>','<com.android.server.NetworkManagementService: void access$600(com.android.server.NetworkManagementService,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getStacksOnDefaultDisplay()>','<com.android.server.usb.UsbPortManager$ServiceNotification: void <init>(com.android.server.usb.UsbPortManager)>','<com.android.server.power.PowerManagerService$3: void <init>(com.android.server.power.PowerManagerService,int,boolean,java.lang.String)>','<com.android.server.pm.Installer: void onStart()>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: boolean equals(java.lang.Object)>','<com.android.server.am.AppNotRespondingDialog: com.android.server.am.ActivityManagerService access$100(com.android.server.am.AppNotRespondingDialog)>','<com.android.server.wm.Session: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>','<com.android.server.wm.AppWindowContainerController: void setDisablePreviewScreenshots(boolean)>','<com.android.server.input.InputManagerService: void access$1300(com.android.server.input.InputManagerService,int)>','<com.android.server.am.KeyguardController: void dismissKeyguard(android.os.IBinder,com.android.internal.policy.IKeyguardDismissCallback)>','<com.android.server.input.InputManagerService: void monitor()>','<com.android.server.location.GnssLocationProvider$3: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.usb.UsbService$Lifecycle: void onStopUser(int)>','<com.android.server.wm.WindowState$2: void run()>','<com.android.server.am.BatteryStatsService$WakeupReasonThread: void <init>(com.android.server.am.BatteryStatsService)>','<com.android.server.wm.AppTransition: void setIdle()>','<com.android.server.am.BroadcastStats: void dumpCheckinStats(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean injectEvent(android.view.InputEvent)>','<com.android.server.am.ActivityRecord: void showStartingWindow(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.pm.PackageManagerService: void finishPackageInstall(int,boolean)>','<com.android.server.wm.Session: void binderDied()>','<com.android.server.input.InputManagerService$5: void <init>(com.android.server.input.InputManagerService,java.util.HashSet)>','<com.android.server.usb.UsbDeviceManager$5: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssStatusListenerHelper access$000(com.android.server.location.GnssLocationProvider)>','<com.android.server.statusbar.StatusBarManagerService: com.android.internal.statusbar.IStatusBar access$102(com.android.server.statusbar.StatusBarManagerService,com.android.internal.statusbar.IStatusBar)>','<android.net.INetd$Stub$Proxy: boolean bandwidthEnableDataSaver(boolean)>','<com.android.server.statusbar.StatusBarManagerService: void manageDisableListLocked(int,int,android.os.IBinder,java.lang.String,int)>','<com.android.server.Watchdog$RebootRequestReceiver: void <init>(com.android.server.Watchdog)>','<com.android.server.am.CompatModePackages: boolean getFrontActivityAskCompatModeLocked()>','<com.android.server.ConnectivityService$2: void onUidPoliciesChanged(int,int)>','<com.android.server.location.RemoteListenerHelper$LinkedListener: android.os.IInterface getUnderlyingListener()>','<com.android.server.pm.BasePermission: void <init>(java.lang.String,java.lang.String,int)>','<com.android.server.power.PowerManagerService: boolean access$2502(com.android.server.power.PowerManagerService,boolean)>','<android.net.INetd$Stub$Proxy: void interfaceDelAddress(java.lang.String,java.lang.String,int)>','<com.android.server.am.ActiveServices$ServiceMap: void handleMessage(android.os.Message)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void notifyPortStatusChange_1_1(java.util.ArrayList,int)>','<com.android.server.net.NetworkPolicyManagerService$16: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothHeadset access$3202(com.android.server.audio.AudioService,android.bluetooth.BluetoothHeadset)>','<com.android.server.am.ActivityStackSupervisor: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.location.GnssLocationProvider$16: int getSize()>','<com.android.server.net.NetworkPolicyManagerService$2: void onLowPowerModeChanged(android.os.PowerSaveState)>','<com.android.server.am.BatteryStatsService: void <init>(java.io.File,android.os.Handler)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunction()>','<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>','<com.android.server.InputMethodManagerService$StartInputHistory: void <init>(com.android.server.InputMethodManagerService$1)>','<com.android.server.ServiceWatcher: void unlockUser(int)>','<com.android.server.am.ActiveServices$ServiceMap: void rescheduleDelayedStartsLocked()>','<android.hardware.usb.V1_1.PortStatus_1_1: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.am.ActivityManagerService: void resumeAppSwitches()>','<com.android.server.wm.AppTransition: void overrideInPlaceAppTransition(java.lang.String,int)>','<com.android.server.power.Notifier: long access$300(com.android.server.power.Notifier)>','<com.android.server.location.LocationFudger$1: void onChange(boolean)>','<com.android.server.wm.AppWindowToken: void stopFreezingScreen(boolean,boolean)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean doPostDeleteLI(boolean)>','<com.android.server.wm.TaskSnapshotPersister: java.io.File getBitmapFile(int,int)>','<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider$GnssSystemInfoProvider getGnssSystemInfoProvider()>','<com.android.server.am.ActivityManagerService: int getMemoryTrimLevel()>','<com.android.server.pm.KeySetManagerService: void writeKeySetManagerServiceLPr(org.xmlpull.v1.XmlSerializer)>','<com.android.server.connectivity.DataConnectionStats$1: void <init>(com.android.server.connectivity.DataConnectionStats)>','<com.android.server.wm.WindowAnimator: void scheduleAnimation()>','<com.android.server.pm.InstructionSets: java.lang.String[] getAllDexCodeInstructionSets()>','<com.android.server.net.NetworkStatsCollection: void reset()>','<com.android.server.connectivity.tethering.OffloadController$1: void <init>(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.am.ActivityManagerService: void attachApplication(android.app.IApplicationThread)>','<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.TaskSnapshotSurface create(com.android.server.wm.WindowManagerService,com.android.server.wm.AppWindowToken,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.am.ActivityManagerService: boolean requestAssistContextExtras(int,com.android.internal.os.IResultReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>','<com.android.server.pm.UserRestrictionsUtils: void readRestrictions(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>','<com.android.server.pm.PackageManagerService: void schedulePackageCleaning(java.lang.String,int,boolean)>','<com.android.server.firewall.PortFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.os.Handler access$100(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: long getSlowestIntervalMs()>','<com.android.server.am.ActivityManagerService: void restart()>','<com.android.server.EventLogTags: void writeRestoreTransportFailure()>','<com.android.server.LocationManagerService: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: boolean setLocalPrefixes(java.util.ArrayList)>','<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>','<com.android.server.audio.MediaFocusControl: int[] access$600()>','<com.android.server.firewall.SenderPermissionFilter: void <init>(java.lang.String,com.android.server.firewall.SenderPermissionFilter$1)>','<com.android.server.power.ShutdownThread: com.android.server.power.ShutdownThread access$400()>','<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>','<android.net.ip.RouterAdvertisementDaemon: void buildNewRa(android.net.ip.RouterAdvertisementDaemon$RaParams,android.net.ip.RouterAdvertisementDaemon$RaParams)>','<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>','<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.net.INetworkStatsService,android.os.INetworkManagementService)>','<com.android.server.am.ActivityManagerShellCommand: void taskResize(int,android.graphics.Rect,int,boolean)>','<com.android.server.pm.Policy: void <init>(com.android.server.pm.Policy$PolicyBuilder,com.android.server.pm.Policy$1)>','<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainerController getController()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$302(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,int)>','<com.android.server.am.ActivityManagerService: void requestPssAllProcsLocked(long,boolean,boolean)>','<com.android.server.input.InputManagerService$11: void <init>(com.android.server.input.InputManagerService,android.os.Handler)>','<com.android.server.am.ConfigurationContainer: void onOverrideConfigurationChanged(android.content.res.Configuration)>','<com.android.server.power.Notifier$6: void <init>(com.android.server.power.Notifier)>','<com.android.server.AppOpsService$1$1: void <init>(com.android.server.AppOpsService$1)>','<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)>','<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfoPrivileged()>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: boolean animatingToLargerSize()>','<com.android.server.AlarmManagerService$Alarm: boolean matches(android.app.PendingIntent,android.app.IAlarmListener)>','<com.android.server.DeviceIdleController$6: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.connectivity.NetworkMonitor$1ProbeThread: void <init>(com.android.server.connectivity.NetworkMonitor,boolean,android.net.ProxyInfo,java.net.URL,java.net.URL,java.util.concurrent.CountDownLatch)>','<com.android.server.ConnectivityService: boolean addVpnAddress(java.lang.String,int)>','<com.android.server.NsdService$NsdStateMachine$DefaultState: boolean processMessage(android.os.Message)>','<com.android.server.pm.UserManagerService: void setQuietModeEnabled(int,boolean)>','<com.android.server.am.BroadcastQueue: void cancelBroadcastTimeoutLocked()>','<com.android.server.EventLogTags: void writeWpWallpaperCrashed(java.lang.String)>','<com.android.server.pm.PermissionsState: int grantInstallPermission(com.android.server.pm.BasePermission)>','<com.android.server.net.NetworkPolicyManagerService$6: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<com.android.server.am.AppErrors$BadProcessInfo: void <init>(long,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void removeStackInSurfaceTransaction(int)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.net.NetworkIdentitySet: void <init>()>','<com.android.server.input.InputManagerService$LocalService: void setInteractive(boolean)>','<com.android.server.pm.PackageManagerService: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>','<com.android.server.wm.InputMonitor: com.android.server.wm.InputConsumerImpl getInputConsumer(java.lang.String,int)>','<com.android.server.wm.Task: void reparent(com.android.server.wm.TaskStack,int,boolean)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$602(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,boolean)>','<com.android.server.am.ActivityStackSupervisor: void moveStackToDisplayLocked(int,int,boolean)>','<com.android.server.am.ActivityManagerService: void setRenderThread(int)>','<com.android.server.power.PowerManagerService$SettingsObserver: void <init>(com.android.server.power.PowerManagerService,android.os.Handler)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$2: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getAllStackInfosLocked()>','<com.android.server.ConnectivityService: void systemReady()>','<com.android.server.am.UriPermission: void removeReadOwner(com.android.server.am.UriPermissionOwner)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>','<com.android.server.wm.AppWindowContainerController: int getOrientation()>','<com.android.server.statusbar.StatusBarManagerService$1: void topAppWindowChanged(boolean)>','<com.android.server.am.ActivityManagerService$1: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.pm.Policy$PolicyBuilder: com.android.server.pm.Policy$PolicyBuilder addSignature(java.lang.String)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: boolean isMagnifyingLocked()>','<com.android.server.usb.descriptors.UsbDescriptor: byte[] getRawData()>','<com.android.server.pm.UserManagerService$LifeCycle: void <init>(android.content.Context)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: android.util.IntArray access$000(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)>','<com.android.server.am.ActivityRecord: boolean isResolverActivity()>','<com.android.server.pm.Settings: void setBlockUninstallLPw(int,java.lang.String,boolean)>','<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting createNewSetting(java.lang.String,com.android.server.pm.PackageSetting,com.android.server.pm.PackageSetting,java.lang.String,com.android.server.pm.SharedUserSetting,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,int,android.os.UserHandle,boolean,boolean,java.lang.String,java.util.List,com.android.server.pm.UserManagerService,java.lang.String[],int[])>','<com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromNothing()>','<com.android.server.wm.WindowManagerService: boolean hasNavigationBar()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.audio.AudioService$Lifecycle: void onBootPhase(int)>','<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>','<com.android.server.RescueParty$BootThreshold: void setStart(long)>','<com.android.server.wm.TaskSnapshotPersister: boolean access$200(com.android.server.wm.TaskSnapshotPersister)>','<com.android.server.connectivity.Tethering$1: void onServiceDisconnected(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void stop()>','<android.net.util.SharedLog$Category: void <clinit>()>','<android.net.util.MultinetworkPolicyTracker: boolean updateAvoidBadWifi()>','<com.android.server.am.UserController: int[] getUsers()>','<com.android.server.input.PersistentDataStore$InputDeviceState: android.hardware.input.TouchCalibration getTouchCalibration(int)>','<com.android.server.am.UserController: void timeoutUserSwitch(com.android.server.am.UserState,int,int)>','<com.android.server.am.ActivityManagerService$1: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.pm.PackageManagerService: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>','<com.android.server.firewall.IntentFirewall: void access$300(com.android.server.firewall.IntentFirewall,java.io.File)>','<com.android.server.connectivity.Nat464Xlat: void interfaceRemoved(java.lang.String)>','<com.android.server.connectivity.Vpn$SystemServices: void settingsSecurePutStringForUser(java.lang.String,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>','<com.android.server.pm.PackageKeySetData: void removeAllDefinedKeySets()>','<com.android.server.pm.UserManagerService: android.content.Context access$000(com.android.server.pm.UserManagerService)>','<com.android.server.audio.MediaFocusControl: void dump(java.io.PrintWriter)>','<com.android.server.pm.CompilerStats$PackageStats: long getCompileTime(java.lang.String)>','<com.android.server.pm.PackageManagerService$HandlerParams: void <init>(com.android.server.pm.PackageManagerService,android.os.UserHandle)>','<com.android.server.am.ActivityStackSupervisor: void continueUpdateBounds(int)>','<com.android.server.location.GnssLocationProvider: boolean access$1300(int)>','<com.android.server.wm.WindowManagerThreadPriorityBooster: void setAppTransitionRunning(boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: int access$1300(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>','<com.android.server.am.UserController: int getCurrentUserIdLocked()>','<com.android.server.wm.StrictModeFlash: void setVisibility(boolean)>','<com.android.server.ServiceWatcher: boolean start()>','<com.android.server.am.BroadcastStats$1: void <init>()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$TetheredState: void enter()>','<com.android.server.wm.WindowManagerService: void scheduleAnimationLocked()>','<com.android.server.wm.RemoteSurfaceTrace: void <init>(java.io.FileDescriptor,com.android.server.wm.SurfaceControlWithBackground,com.android.server.wm.WindowState)>','<com.android.server.net.NetworkPolicyManagerService: void access$400(com.android.server.net.NetworkPolicyManagerService,int)>','<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor getCurInterface()>','<com.android.server.am.ActivityStack: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>','<com.android.server.input.InputManagerService$TabletModeChangedListenerRecord: void notifyTabletModeChanged(long,boolean)>','<com.android.server.wm.WindowManagerService: void screenTurningOff(android.view.WindowManagerPolicy$ScreenOffListener)>','<com.android.server.InputContentUriTokenHandler: void finalize()>','<com.android.server.IntentResolver: java.util.Set filterSet()>','<com.android.server.NetworkManagementService: void setFirewallUidRule(int,int,int)>','<com.android.server.wm.WindowStateAnimator: java.lang.String toString()>','<com.android.server.am.AppTimeTracker: void dumpWithHeader(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.wm.animation.ClipRectTBAnimation: boolean getTransformation(long,android.view.animation.Transformation)>','<com.android.server.power.Notifier$5: void <init>(com.android.server.power.Notifier,int)>','<com.android.server.location.GnssLocationProvider: void access$5300(com.android.server.location.GnssLocationProvider,android.net.Network)>','<com.android.server.am.ActivityManagerService: void removeStack(int)>','<com.android.server.wm.DisplayContent: void setLastOrientation(int)>','<com.android.server.firewall.PortFilter: void <clinit>()>','<com.android.server.power.PowerManagerService$LocalService: void registerLowPowerModeObserver(android.os.PowerManagerInternal$LowPowerModeListener)>','<android.hidl.base.V1_0.DebugInfo: boolean equals(java.lang.Object)>','<com.android.server.wm.WindowAnimator: boolean isAnimating()>','<com.android.server.am.ActivityManagerService: void noteAlarmFinish(android.content.IIntentSender,int,java.lang.String)>','<com.android.server.EventLogTags: void writeWatchdogSoftReset(java.lang.String,int,int,int,java.lang.String)>','<com.android.server.am.ActivityManagerService$GrantUri: int hashCode()>','<com.android.server.audio.AudioService: boolean access$5300(com.android.server.audio.AudioService)>','<com.android.server.ConnectivityService: java.lang.String getMobileProvisioningUrl()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool hasSyncFramework()>','<com.android.server.DeviceIdleController$BinderService: void <init>(com.android.server.DeviceIdleController,com.android.server.DeviceIdleController$1)>','<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>','<com.android.server.wm.Task: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>','<com.android.server.am.TaskRecord: void moveActivityToFrontLocked(com.android.server.am.ActivityRecord)>','<com.android.server.audio.AudioService: void setVolumeController(android.media.IVolumeController)>','<com.android.server.audio.AudioService$3: void binderDied()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool hasHDRDisplay()>','<com.android.server.pm.PackageManagerService: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>','<com.android.server.pm.PackageManagerService: boolean hasSystemUidErrors()>','<com.android.server.net.NetworkPolicyManagerService$11: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.usb.UsbPortManager: java.lang.Object access$300(com.android.server.usb.UsbPortManager)>','<com.android.server.location.GeofenceProxy: android.os.Handler access$000(com.android.server.location.GeofenceProxy)>','<com.android.server.wm.WindowContainer: void onAppTransitionDone()>','<com.android.server.usb.UsbService: void <init>(android.content.Context)>','<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord,boolean)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void notifyRoleSwitchStatus(java.lang.String,android.hardware.usb.V1_0.PortRole,int)>','<com.android.server.AlarmManagerService: android.app.AlarmManager$AlarmClockInfo getNextAlarmClockImpl(int)>','<com.android.server.am.AppErrors: void handleShowAnrUi(android.os.Message)>','<com.android.server.wm.AppWindowAnimator: void <clinit>()>','<com.android.server.am.ProcessRecord: int modifyRawOomAdj(int)>','<com.android.server.connectivity.NetworkNotificationManager: void setProvNotificationVisible(boolean,int,java.lang.String)>','<com.android.server.usb.descriptors.UsbDescriptor: java.lang.String getUsbDescriptorString(android.hardware.usb.UsbDeviceConnection,byte)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onStoppedLimitReached()>','<com.android.server.pm.PackageManagerService: void access$800(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$PackageInstalledInfo,boolean,boolean,java.lang.String[],boolean,java.lang.String,android.content.pm.IPackageInstallObserver2)>','<com.android.server.LocationManagerService$Receiver: android.location.ILocationListener getListener()>','<com.android.server.wm.DisplayContent$ScreenshotApplicationState: void reset(boolean)>','<com.android.server.net.NetworkPolicyManagerService$3: void onUidStateChanged(int,int,long)>','<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>','<com.android.server.wm.WindowManagerService: boolean isViewServerRunning()>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setGeometryAppliesWithResize()>','<com.android.server.wm.AppTransition: boolean hadClipRevealAnimation()>','<com.android.server.am.ActivityManagerService: void enforceShellRestriction(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void <init>(com.android.server.am.ActivityStackSupervisor,android.os.Looper)>','<com.android.server.am.ActivityRecord: boolean isResizeable()>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void attachStack(com.android.server.am.ActivityStack,int)>','<com.android.server.pm.PersistentPreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>','<com.android.server.pm.PackageKeySetData: void addUpgradeKeySet(java.lang.String)>','<com.android.server.pm.Settings: com.android.server.pm.PreferredIntentResolver editPreferredActivitiesLPw(int)>','<com.android.server.wm.TaskSnapshotController: android.view.WindowManagerPolicy$StartingSurface createStartingSurface(com.android.server.wm.AppWindowToken,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.wm.Task: boolean cropWindowsToStackBounds()>','<android.net.ip.RouterAdvertisementDaemon: void access$1200(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.am.ActivityManagerShellCommand: int runToUri(java.io.PrintWriter,int)>','<com.android.server.am.ActivityStack: void getAllRunningVisibleActivitiesLocked(java.util.ArrayList)>','<android.net.util.SharedLog: void log(java.lang.String)>','<com.android.server.connectivity.NetworkMonitor: android.net.NetworkRequest access$2500(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void requestPssLocked(com.android.server.am.ProcessRecord,int)>','<com.android.server.am.UserController$Injector: void sendPreBootBroadcast(int,boolean,java.lang.Runnable)>','<com.android.server.am.AppNotRespondingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>','<com.android.server.wm.DimLayer: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DimLayer$DimLayerUser,int,java.lang.String)>','<com.android.server.DeviceIdleController: void becomeActiveLocked(java.lang.String,int)>','<com.android.server.DeviceIdleController$1: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void computeChangedWindows()>','<com.android.server.pm.PackageManagerService: void shutdown()>','<com.android.server.input.InputManagerService$13: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.am.BroadcastQueue$BroadcastHandler: void <init>(com.android.server.am.BroadcastQueue,android.os.Looper)>','<com.android.server.wm.WindowManagerService: void setInputMethodWindowLocked(com.android.server.wm.WindowState)>','<com.android.server.am.ActivityStackSupervisor: boolean moveHomeStackTaskToTop(java.lang.String)>','<android.net.INetd$Stub$Proxy: void setResolverConfiguration(int,java.lang.String[],java.lang.String[],int[])>','<com.android.server.am.BatteryStatsService: void noteWifiControllerActivity(android.net.wifi.WifiActivityEnergyInfo)>','<com.android.server.audio.AudioService: void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher)>','<com.android.server.am.ActivityManagerService$20: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,android.os.DropBoxManager,java.lang.String)>','<com.android.server.wm.DockedStackDividerController: boolean isHomeStackResizable()>','<com.android.server.wm.Task: void updateDisplayInfo(com.android.server.wm.DisplayContent)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void sortResults(java.util.List)>','<com.android.server.am.ActivityManagerService$5$1: void run()>','<com.android.server.wm.BoundsAnimationController: android.animation.AnimationHandler access$600(com.android.server.wm.BoundsAnimationController)>','<android.hidl.base.V1_0.IBase$Proxy: void ping()>','<com.android.server.am.HealthStatsBatteryStatsWriter: void writePid(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pid)>','<com.android.server.audio.AudioService: void setBluetoothScoOnInt(boolean)>','<com.android.server.am.ActivityManagerService$21: void <init>(com.android.server.am.ActivityManagerService,int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$ParcelableCrashInfo)>','<com.android.server.am.ActivityRecord: android.graphics.Bitmap screenshotActivityLocked()>','<com.android.server.connectivity.LingerMonitor: boolean isNotificationEnabled(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.NetworkManagementService$NetdTetheringStatsProvider: android.net.NetworkStats getTetherStats()>','<com.android.server.connectivity.Vpn: android.net.INetworkManagementEventObserver access$1500(com.android.server.connectivity.Vpn)>','<com.android.server.pm.PersistentPreferredIntentResolver: com.android.server.pm.PersistentPreferredActivity[] newArray(int)>','<com.android.server.am.UserController: boolean startUser(int,boolean)>','<com.android.server.pm.PermissionsState: void reset()>','<com.android.server.wm.WindowManagerService: void access$1400(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.PackageManagerShellCommand$3: int compare(java.lang.String,java.lang.String)>','<com.android.server.wm.WindowSurfaceController: void setLayer(int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: int hashCode()>','<com.android.server.am.ActivityRecord: void notifyUnknownVisibilityLaunched()>','<com.android.server.am.ProcessStatsService: byte[] getCurrentStats(java.util.List)>','<com.android.server.wm.AppWindowAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: long getId()>','<com.android.server.pm.PackageManagerService: java.util.List getAllPackages()>','<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$MotionListener access$400(com.android.server.DeviceIdleController)>','<com.android.server.audio.FocusRequester: boolean hasSameBinder(android.os.IBinder)>','<com.android.server.location.GnssLocationProvider: android.net.ConnectivityManager$NetworkCallback access$6500(com.android.server.location.GnssLocationProvider)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult access$2900(com.android.server.connectivity.NetworkMonitor,android.net.ProxyInfo,java.net.URL,int)>','<com.android.server.wm.WindowManagerService: void enableSurfaceTrace(android.os.ParcelFileDescriptor)>','<com.android.server.wm.AppWindowToken: void setAllAppWinAnimators()>','<com.android.server.ConnectivityService: boolean removeVpnAddress(java.lang.String,int)>','<com.android.server.net.NetworkStatsService$6: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.TaskStack: boolean hasMovementAnimations()>','<com.android.server.am.UriPermission$Snapshot: void <init>(com.android.server.am.UriPermission,com.android.server.am.UriPermission$1)>','<com.android.server.am.ReceiverList: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,int,android.content.IIntentReceiver)>','<com.android.server.pm.PackageManagerService: android.content.pm.IPackageInstaller getPackageInstaller()>','<com.android.server.pm.PermissionsState$PermissionData: int[] computeGids(int)>','<com.android.server.firewall.FilterList: void <init>()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats$PackageStats getOrCreateCompilerPackageStats(android.content.pm.PackageParser$Package)>','<com.android.server.AppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread: void sendResponse(java.lang.String)>','<com.android.server.NetworkManagementService: void clearInterfaceAddresses(java.lang.String)>','<com.android.server.pm.dex.PackageDexUsage: boolean clearUsedByOtherApps(java.lang.String)>','<com.android.server.wm.AppTransition: android.view.animation.Animation createThumbnailEnterExitAnimationLocked(int,android.graphics.Rect,int,int)>','<android.os.IInstalld$Stub$Proxy: void destroyAppProfiles(java.lang.String)>','<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>','<com.android.server.power.PowerManagerService: void access$1600(com.android.server.power.PowerManagerService,boolean)>','<com.android.server.pm.InstantAppRegistry: void onPackageUninstalledLPw(android.content.pm.PackageParser$Package,int[])>','<com.android.server.wm.KeyguardDisableHandler$KeyguardTokenWatcher: void released()>','<com.android.server.wm.WindowState: void dispatchWallpaperVisibility(boolean)>','<com.android.server.pm.PermissionsState$PermissionData: com.android.server.pm.PermissionsState$PermissionState getPermissionState(int)>','<com.android.server.AppOpsService: void shutdown()>','<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)>','<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.PackageDexUsage$PackageUseInfo getPackageUseInfo(java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteVibratorOff(int)>','<com.android.server.audio.AudioService: void onAudioServerDied()>','<com.android.server.am.ActivityRecord: void setVoiceSessionLocked(android.service.voice.IVoiceInteractionSession)>','<com.android.server.connectivity.tethering.TetheringConfiguration: void <clinit>()>','<com.android.server.audio.AudioService$ScoClient: void <init>(com.android.server.audio.AudioService,android.os.IBinder)>','<com.android.server.am.UnsupportedDisplaySizeDialog: java.lang.String getPackageName()>','<com.android.server.wm.WindowManagerService: boolean okToAnimate()>','<com.android.server.wm.AppWindowAnimator: boolean showAllWindowsLocked()>','<com.android.server.wm.RemoteEventTrace: void logException(java.lang.Exception)>','<com.android.server.connectivity.PacManager: java.lang.Runnable access$900(com.android.server.connectivity.PacManager)>','<com.android.server.wm.WindowState$1: void <init>()>','<com.android.server.wm.TaskStack: com.android.server.wm.StackWindowController getController()>','<com.android.server.pm.PreferredActivity: boolean onReadTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>','<com.android.server.am.ActivityStarter: void postStartActivityProcessing(com.android.server.am.ActivityRecord,int,int,com.android.server.am.ActivityRecord,com.android.server.am.ActivityStack)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>','<com.android.server.pm.UserManagerService: boolean access$2002(com.android.server.pm.UserManagerService,boolean)>','<com.android.server.am.ActivityStackSupervisor: boolean moveTopStackActivityToPinnedStackLocked(int,android.graphics.Rect)>','<com.android.server.connectivity.tethering.OffloadController: android.os.Handler access$300(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.audio.FocusRequester: int getSdkTarget()>','<android.net.util.IpUtils: short tcpChecksum(java.nio.ByteBuffer,int,int,int)>','<com.android.server.audio.AudioService: android.content.ContentResolver access$3100(com.android.server.audio.AudioService)>','<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>','<com.android.server.connectivity.KeepalivePacketData$InvalidPacketException: void <init>(int)>','<com.android.server.am.ActivityManagerService: boolean moveTaskToDockedStack(int,int,boolean,boolean,android.graphics.Rect)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: void setHALInstrumentation()>','<com.android.server.wm.TaskStack: int getDockSide(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>','<com.android.server.connectivity.Vpn$2: void <init>(com.android.server.connectivity.Vpn,android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkMisc)>','<com.android.server.wm.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)>','<com.android.server.pm.UserDataPreparer: void destroyUserDataLI(java.lang.String,int,int)>','<com.android.server.EventLogTags: void writeRescueNote(int,int,long)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$1600(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.input.InputManagerService$2: void <init>(com.android.server.input.InputManagerService)>','<com.android.server.pm.PackageSettingBase: java.lang.String getVolumeUuid()>','<com.android.server.pm.dex.PackageDexUsage: boolean removeDexFile(java.lang.String,java.lang.String,int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<android.os.IInstalld$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.NsdService$NsdStateMachine: void <init>(com.android.server.NsdService,java.lang.String,android.os.Handler)>','<com.android.server.wm.AppTransition: boolean isTimeout()>','<android.hardware.usb.V1_1.IUsbCallback$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityStackSupervisor: void removeStackLocked(int)>','<com.android.server.NativeDaemonEvent: java.io.FileDescriptor[] getFileDescriptors()>','<com.android.server.wm.WindowState: void applyDimLayerIfNeeded()>','<com.android.server.am.ReceiverList: void binderDied()>','<com.android.server.am.DumpHeapProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>','<com.android.server.pm.PackageManagerService$15: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.SystemService: void onUnlockUser(int)>','<com.android.server.audio.AudioService: void access$7300(com.android.server.audio.AudioService,int)>','<com.android.server.location.GnssLocationProvider: int access$4300(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.ProcessStatsService$1: void run()>','<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String,java.lang.String)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.wm.Task: java.lang.String toString()>','<com.android.server.pm.PackageManagerServiceUtils: void sortPackagesByUsageDate(java.util.List,com.android.server.pm.PackageManagerService)>','<com.android.server.pm.PackageVerificationState: boolean isVerificationComplete()>','<com.android.server.audio.AudioService: void access$9700(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,int,android.content.IntentSender)>','<com.android.server.location.FusedProxy$1: void <init>(com.android.server.location.FusedProxy)>','<android.hardware.usb.V1_0.IUsb$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.am.ActivityStack: void clearOtherAppTimeTrackers(com.android.server.am.AppTimeTracker)>','<com.android.server.EventLogTags: void writeDeviceIdleOffStart(java.lang.String)>','<com.android.server.power.PowerManagerService$LocalService: boolean setLightDeviceIdleMode(boolean)>','<com.android.server.connectivity.NetworkMonitor$EvaluationResult: com.android.server.connectivity.NetworkMonitor$EvaluationResult[] values()>','<com.android.server.usb.UsbProfileGroupSettingsManager: void usbDeviceRemoved(android.hardware.usb.UsbDevice)>','<com.android.server.pm.PackageManagerService$PackageParserCallback$1: int compare(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package)>','<com.android.server.usb.UsbDeviceManager: android.os.UEventObserver access$400(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.Task: boolean getMaxVisibleBounds(android.graphics.Rect)>','<com.android.server.location.RemoteListenerHelper$1$1: void run()>','<com.android.server.am.ActivityManagerService: void moveTasksToFullscreenStack(int,boolean)>','<android.hardware.usb.V1_0.PortStatus: int hashCode()>','<com.android.server.firewall.StringFilter$2: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow,android.content.Context,android.os.Looper)>','<com.android.server.connectivity.tethering.TetheringDependencies: void <init>()>','<com.android.server.AppOpsService: java.util.List getPackagesForOps(int[])>','<com.android.server.NsdService$ClientInfo: android.util.SparseIntArray access$1100(com.android.server.NsdService$ClientInfo)>','<com.android.server.pm.dex.DexManager: boolean isUsedByOtherApps(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean,boolean,boolean)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void registerAsService(java.lang.String)>','<com.android.server.power.PowerManagerService: void monitor()>','<com.android.server.wm.AppTransition: boolean canSkipFirstFrame()>','<com.android.server.statusbar.StatusBarManagerService$1: void appTransitionStarting(long,long)>','<com.android.server.firewall.CategoryFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.am.ActivityManagerService: void moveTaskToFront(int,int,android.os.Bundle)>','<com.android.server.pm.PackageManagerService$28: void run()>','<com.android.server.connectivity.LingerMonitor: void noteLingerDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.LocationManagerService: int resolutionLevelToOp(int)>','<com.android.server.power.Notifier$NotifierHandler: void <init>(com.android.server.power.Notifier,android.os.Looper)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidConfig()>','<com.android.server.TelephonyRegistry: android.os.Bundle[] access$000(com.android.server.TelephonyRegistry)>','<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>','<com.android.server.wm.RemoteEventTrace: void closeSurfaceTransaction()>','<com.android.server.wm.StackWindowController: void getBoundsForNewConfiguration(android.graphics.Rect)>','<com.android.server.wm.WindowAnimator: void setAnimating(boolean)>','<com.android.server.wm.DisplayContent$ApplySurfaceChangesTransactionState: void reset()>','<com.android.server.pm.PackageInstallerSession: void access$500(com.android.server.pm.PackageInstallerSession,int,java.lang.String,android.os.Bundle)>','<com.android.server.pm.PackageManagerService$InstallArgs: int doPostCopy(int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>','<com.android.server.audio.AudioService: java.lang.Object access$10400(com.android.server.audio.AudioService)>','<com.android.server.net.NetworkPolicyManagerService$AppIdleStateChangeListener: void onAppIdleStateChanged(java.lang.String,int,boolean)>','<com.android.server.connectivity.Tethering: void access$2100(com.android.server.connectivity.Tethering)>','<com.android.server.location.GnssLocationProvider: void access$2600(com.android.server.location.GnssLocationProvider,long,long,int)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>','<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getNumInterfaces()>','<com.android.server.connectivity.PacManager: int access$1200(com.android.server.connectivity.PacManager)>','<com.android.server.wm.Session: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>','<com.android.server.wm.TaskStack: void removeChild(com.android.server.wm.Task)>','<com.android.server.pm.CompilerStats: void write(java.io.Writer)>','<com.android.server.net.NetworkStatsRecorder: void maybePersistLocked(long)>','<com.android.server.net.NetworkPolicyManagerService: void updateRuleForAppIdleUL(int)>','<com.android.server.input.PersistentDataStore: boolean setKeyboardLayout(java.lang.String,com.android.internal.inputmethod.InputMethodSubtypeHandle,java.lang.String)>','<com.android.server.wm.DockedStackDividerController: boolean isMinimizedDock()>','<com.android.server.wm.WindowManagerService: void startFreezingDisplayLocked(boolean,int,int)>','<com.android.server.input.InputManagerService: android.view.InputChannel monitorInput(java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>','<com.android.server.usb.UsbHostManager$1: void <init>(com.android.server.usb.UsbHostManager)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$1: void onValues(boolean,java.lang.String)>','<com.android.server.am.ActivityStack: void activityPausedLocked(android.os.IBinder,boolean)>','<com.android.server.pm.Settings: int getIntentFilterVerificationStatusLPr(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.content.pm.PackageParser$ActivityIntentInfo[] newArray(int)>','<com.android.server.connectivity.Tethering$2: void <init>(com.android.server.connectivity.Tethering,android.os.Handler,int,android.os.ResultReceiver)>','<com.android.server.IntentResolver: java.util.ArrayList findFilters(android.content.IntentFilter)>','<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>','<com.android.server.NetworkManagementService: void startTethering(java.lang.String[])>','<com.android.server.AnyMotionDetector: java.lang.Object access$000(com.android.server.AnyMotionDetector)>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting enableSystemPackageLPw(java.lang.String)>','<com.android.server.wm.WindowManagerService: void systemReady()>','<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>','<com.android.server.location.GnssLocationProvider$12: boolean resumeHardwareGeofence(int,int)>','<com.android.server.pm.PackageManagerService$23: void <init>(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean)>','<com.android.server.am.StrictModeViolationDialog: com.android.server.am.AppErrorResult access$200(com.android.server.am.StrictModeViolationDialog)>','<com.android.server.InputMethodManagerService: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>','<com.android.server.power.Notifier$NotifierHandler: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: boolean isValidSingletonCall(int,int)>','<com.android.server.location.RemoteListenerHelper$LinkedListener: void binderDied()>','<android.hidl.base.V1_0.IBase$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.am.ActivityManagerShellCommand: int runStopUser(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService$LocalService: void setMagnificationSpec(android.view.MagnificationSpec)>','<com.android.server.TelephonyRegistry$Record: java.lang.String toString()>','<com.android.server.wm.AppWindowToken: int getAnimLayerAdjustment()>','<com.android.server.pm.Settings: void onDefaultRuntimePermissionsGrantedLPr(int)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void setMagnifiedRegionBorderShownLocked(boolean,boolean)>','<com.android.server.pm.PackageManagerShellCommand: int onCommand(java.lang.String)>','<com.android.server.LocationManagerService$6: void onChange(boolean)>','<com.android.server.audio.MediaFocusControl: void <clinit>()>','<com.android.server.usb.descriptors.UsbMSMidiHeader: void <init>(int,byte,byte,byte)>','<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean setCurrentKeyboardLayout(java.lang.String)>','<com.android.server.AnyMotionDetector$2: void run()>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: java.util.ArrayList get(int,java.lang.String)>','<com.android.server.am.ProcessRecord: java.lang.String toString()>','<com.android.server.connectivity.Vpn$2: void unwanted()>','<com.android.server.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>','<com.android.server.wm.PinnedStackWindowController: void setPictureInPictureAspectRatio(float)>','<com.android.server.am.ActivityManagerShellCommand: int runTraceIpcStart(java.io.PrintWriter)>','<com.android.server.PinnerService$PinnerHandler: void handleMessage(android.os.Message)>','<com.android.server.am.TaskRecord: boolean isSameIntentFilter(com.android.server.am.ActivityRecord)>','<com.android.server.input.InputManagerService$Shell: int onCommand(java.lang.String)>','<com.android.server.am.ActiveServices: boolean unbindServiceLocked(android.app.IServiceConnection)>','<com.android.server.pm.PackageManagerService: boolean hasSystemFeature(java.lang.String,int)>','<com.android.server.AlarmManagerService: void deliverAlarmsLocked(java.util.ArrayList,long)>','<com.android.server.wm.WindowContainer: boolean isAnimating()>','<com.android.server.am.ActivityManagerService$UpdateConfigurationResult: void reset()>','<com.android.server.net.NetworkPolicyManagerService: void onTetheringChanged(java.lang.String,boolean)>','<com.android.server.am.ActivityManagerService: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>','<com.android.server.wm.WindowContainer: boolean hasChild(com.android.server.wm.WindowContainer)>','<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getParent()>','<com.android.server.am.ActivityManagerService: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>','<com.android.server.firewall.StringFilter$4: void <init>(java.lang.String)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte getSubclass()>','<com.android.server.am.UriPermissionOwner$ExternalToken: void <init>(com.android.server.am.UriPermissionOwner)>','<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistExceptIdleInternal()>','<com.android.server.am.ActiveServices: boolean bringDownDisabledPackageServicesLocked(java.lang.String,java.util.Set,int,boolean,boolean,boolean)>','<com.android.server.am.PendingIntentRecord: void unregisterCancelListenerLocked(com.android.internal.os.IResultReceiver)>','<com.android.server.AlarmManagerService$ClockReceiver: void scheduleDateChangedEvent()>','<com.android.server.wm.WallpaperController: void adjustWallpaperWindowsForAppTransitionIfNeeded(com.android.server.wm.DisplayContent,android.util.ArraySet)>','<com.android.server.pm.EphemeralResolverConnection: long access$600()>','<com.android.server.pm.Settings: void readStoppedLPw()>','<com.android.server.DeviceIdleController: void resetIdleManagementLocked()>','<android.hardware.configstore.V1_0.OptionalBool: boolean equals(java.lang.Object)>','<com.android.server.ConnectivityService: void registerNetworkFactory(android.os.Messenger,java.lang.String)>','<android.net.INetd$Stub$Proxy: void wakeupAddInterface(java.lang.String,java.lang.String,int,int)>','<com.android.server.SystemServiceManager: void <init>(android.content.Context)>','<com.android.server.IntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>','<com.android.server.am.ActivityRecord: boolean ensureActivityConfigurationLocked(int,boolean)>','<com.android.server.net.NetworkPolicyManagerShellCommand: void <init>(android.content.Context,android.net.INetworkPolicyManager)>','<com.android.server.pm.PackageManagerService: java.util.List getPreviousCodePaths(java.lang.String)>','<com.android.server.am.AppTimeTracker: void stop()>','<com.android.server.pm.UserManagerService: void access$2100(com.android.server.pm.UserManagerService)>','<android.net.INetd$Stub$Proxy: void networkRejectNonSecureVpn(boolean,android.net.UidRange[])>','<com.android.server.wm.TaskStack: boolean getRawFullscreen()>','<com.android.server.am.ActivityManagerService: void showLaunchWarningLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<com.android.server.usb.UsbMidiDevice: void access$300(com.android.server.usb.UsbMidiDevice)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager$DuckedApp: void removeUnduckAll(java.util.HashMap)>','<com.android.server.pm.Settings: java.util.ArrayList getListOfIncompleteInstallPackagesLPr()>','<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>','<com.android.server.am.ActivityStarter: void sendPowerHintForLaunchStartIfNeeded(boolean,com.android.server.am.ActivityRecord)>','<com.android.server.wm.DisplayContent: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>','<com.android.server.usb.descriptors.UsbACMixerUnit: void <init>(int,byte,byte,byte)>','<com.android.server.ConnectivityService: void access$1000(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo,android.net.LinkProperties)>','<android.hidl.base.V1_0.DebugInfo$Architecture: java.lang.String dumpBitfield(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: com.android.internal.util.State access$1500(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.wm.Session: void cancelDragAndDrop(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setSimCallManagerPackagesProvider(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.power.WirelessChargerDetector$1: void onSensorChanged(android.hardware.SensorEvent)>','<com.android.server.AlarmManagerService$BroadcastStats: java.lang.String toString()>','<com.android.server.am.CompatModePackages: boolean getPackageNotifyUnsupportedZoomLocked(java.lang.String)>','<com.android.server.wm.WindowState: java.lang.CharSequence getWindowTag()>','<com.android.server.pm.PreferredComponent: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>','<com.android.server.wm.WindowState: void updateReportedVisibility(com.android.server.wm.WindowState$UpdateReportedVisibilityResults)>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: void <init>()>','<com.android.server.IoThread: com.android.server.IoThread get()>','<com.android.server.am.ActivityManagerService: void initPowerManagement()>','<com.android.server.audio.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>','<com.android.server.wm.WindowManagerService: void setDockedStackResizing(boolean)>','<com.android.server.net.NetworkPolicyManagerService: void access$500(com.android.server.net.NetworkPolicyManagerService,int)>','<com.android.server.pm.PackageSettingBase: void setInstallStatus(int)>','<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>','<com.android.server.am.PreBootBroadcaster: void <init>(com.android.server.am.ActivityManagerService,int,com.android.internal.util.ProgressReporter,boolean)>','<com.android.server.net.LockdownVpnTracker: void <init>(android.content.Context,android.os.INetworkManagementService,com.android.server.ConnectivityService,com.android.server.connectivity.Vpn,com.android.internal.net.VpnProfile)>','<com.android.server.location.GnssLocationProvider$16: boolean stop()>','<com.android.server.connectivity.Vpn: com.android.server.connectivity.Vpn$LegacyVpnRunner access$302(com.android.server.connectivity.Vpn,com.android.server.connectivity.Vpn$LegacyVpnRunner)>','<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>','<com.android.server.TelephonyRegistry: void notifyOtaspChanged(int)>','<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller$SessionInfo generateInfo(boolean)>','<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: void release()>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord activityIdleInternalLocked(android.os.IBinder,boolean,boolean,android.content.res.Configuration)>','<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<com.android.server.power.PowerManagerService$LocalService: void startUidChanges()>','<com.android.server.usb.MtpNotificationManager$Receiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActiveServices: boolean hasBackgroundServicesLocked(int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void writeToParcel(android.os.HwParcel)>','<com.android.server.audio.PlaybackActivityMonitor: void <clinit>()>','<com.android.server.wm.WindowState: boolean isDrawnLw()>','<com.android.server.wm.InputMonitor: boolean access$200(com.android.server.wm.InputMonitor)>','<com.android.server.am.ActivityManagerShellCommand: int runStackResizeAnimated(java.io.PrintWriter)>','<com.android.server.am.ActivityStarter: void startConfirmCredentialIntent(android.content.Intent,android.os.Bundle)>','<com.android.server.am.KeyguardController: void keyguardGoingAway(int)>','<com.android.server.ConnectivityService$1: void <init>(com.android.server.ConnectivityService)>','<com.android.server.connectivity.Vpn$SystemServices: java.lang.String settingsSecureGetStringForUser(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: void addActiveDownstream(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int)>','<com.android.server.connectivity.NetworkDiagnostics: java.util.List getMeasurements()>','<com.android.server.audio.AudioService$VolumeController: void postMasterMuteChanged(int)>','<com.android.server.pm.BackgroundDexOptService: boolean onStopJob(android.app.job.JobParameters)>','<com.android.server.audio.PlaybackActivityMonitor: java.util.List getActivePlaybackConfigurations(boolean)>','<com.android.server.connectivity.NetworkMonitor$MaybeNotifyState$1: void <init>(com.android.server.connectivity.NetworkMonitor$MaybeNotifyState)>','<com.android.server.pm.PackageManagerService$CrossProfileDomainInfo: void <init>(com.android.server.pm.PackageManagerService$1)>','<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.am.TaskRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand$IntentReceiver: void waitForFinish()>','<com.android.server.Watchdog$HandlerChecker: int getCompletionStateLocked()>','<com.android.server.connectivity.Vpn: void addUserToRanges(java.util.Set,int,java.util.List,java.util.List)>','<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)>','<com.android.server.location.GnssLocationProvider: void <clinit>()>','<com.android.server.pm.PackageSettingBase: void setDomainVerificationStatusForUser(int,int,int)>','<com.android.server.wm.WallpaperVisibilityListeners: void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>','<com.android.server.ConnectivityService: boolean access$2400(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo,int)>','<com.android.server.ServiceWatcher: int getBestVersion()>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: void <init>(com.android.server.usb.UsbDebuggingManager,android.os.Looper)>','<com.android.server.pm.SELinuxMMAC: void <clinit>()>','<com.android.server.am.TaskPersister$TaskWriteQueueItem: void <init>(com.android.server.am.TaskRecord)>','<com.android.server.pm.KeySetManagerService: void dumpLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService$DumpState)>','<com.android.server.am.UidRecord: java.lang.String toString()>','<com.android.server.pm.CompilerStats$PackageStats: void setCompileTime(java.lang.String,long)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>','<com.android.server.usb.UsbProfileGroupSettingsManager$1: void onOpenInApp(android.hardware.usb.UsbDevice)>','<com.android.server.TelephonyRegistry: java.util.ArrayList access$100(com.android.server.TelephonyRegistry)>','<com.android.server.AppOpsService: void systemReady()>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack getHomeStack()>','<com.android.server.am.TaskRecord: void removeTaskActivitiesLocked(boolean)>','<com.android.server.net.NetworkStatsRecorder: void forcePersistLocked(long)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void detachStack(com.android.server.am.ActivityStack)>','<com.android.server.EventLogTags: void writeBatteryStatus(int,int,int,int,java.lang.String)>','<com.android.server.EventLogTags: void writeFstrimStart(long)>','<com.android.server.wm.RootWindowContainer: boolean isLayoutNeeded()>','<com.android.server.ConnectivityService: void access$4000(com.android.server.ConnectivityService)>','<com.android.server.statusbar.StatusBarManagerService: com.android.server.statusbar.StatusBarManagerInternal$GlobalActionsListener access$600(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.am.ActivityManagerService$LocalService: void notifyKeyguardFlagsChanged(java.lang.Runnable)>','<com.android.server.firewall.IntentFirewall$Rule: void <init>(com.android.server.firewall.IntentFirewall$1)>','<com.android.server.power.ShutdownThread: boolean access$300()>','<com.android.server.wm.RootWindowContainer: void updateAppOpsState()>','<com.android.server.wm.WindowManagerService: int getNavBarPosition()>','<com.android.server.DeviceIdleController$BinderService: void removePowerSaveWhitelistApp(java.lang.String)>','<com.android.server.audio.AudioService$SoundPoolCallback: void onLoadComplete(android.media.SoundPool,int,int)>','<com.android.server.am.AppBindRecord: java.lang.String toString()>','<com.android.server.wm.AccessibilityController: void setForceShowMagnifiableBoundsLocked(boolean)>','<com.android.server.am.BatteryStatsService: void noteAlarmStart(java.lang.String,int)>','<com.android.server.net.NetworkStatsCollection: boolean isEmpty()>','<com.android.server.pm.Settings: void applyDefaultPreferredAppsLPw(com.android.server.pm.PackageManagerService,int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void setHALInstrumentation()>','<com.android.server.wm.Task: void setDragResizing(boolean,int)>','<com.android.server.usb.descriptors.UsbDescriptorParser: boolean parseDevice(java.lang.String)>','<android.hardware.configstore.V1_0.OptionalInt64: boolean equals(java.lang.Object)>','<com.android.server.wm.TaskSnapshotPersister: java.lang.Object access$100(com.android.server.wm.TaskSnapshotPersister)>','<com.android.server.input.PersistentDataStore: boolean switchKeyboardLayout(java.lang.String,com.android.internal.inputmethod.InputMethodSubtypeHandle)>','<com.android.server.pm.PackageManagerService: java.lang.String getPermissionControllerPackageName()>','<com.android.server.location.FusedProxy$1: void run()>','<com.android.server.power.PowerManagerService$WakeLock: java.lang.String toString()>','<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,int)>','<com.android.server.am.LockTaskNotify: void showToast(int)>','<com.android.server.wm.WallpaperWindowToken: void startAnimation(android.view.animation.Animation)>','<com.android.server.EventLogTags: void writeVolumeChanged(int,int,int,int,java.lang.String)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void stop()>','<com.android.server.pm.Settings: void writePackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>','<com.android.server.wm.WindowState: android.graphics.Point getShownPositionLw()>','<com.android.server.am.ActivityManagerService: com.android.internal.app.IAppOpsService getAppOpsService()>','<com.android.server.DeviceIdleController$MyHandler: void <init>(com.android.server.DeviceIdleController,android.os.Looper)>','<com.android.server.usb.UsbDeviceManager: void setCurrentUser(int,com.android.server.usb.UsbProfileGroupSettingsManager)>','<com.android.server.wm.TaskStack: void getStackDockedModeBoundsLocked(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.power.PowerManagerService$2: void acquireSuspendBlocker()>','<com.android.server.audio.AudioService: void playSoundEffectVolume(int,float)>','<com.android.server.am.PreBootBroadcaster: int access$100(com.android.server.am.PreBootBroadcaster)>','<com.android.server.pm.SettingBase: void <init>(int,int)>','<com.android.server.net.NetworkStatsService: void access$1000(com.android.server.net.NetworkStatsService,int[])>','<com.android.server.DeviceIdleController$Shell: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.am.ActivityManagerShellCommand: boolean access$102(com.android.server.am.ActivityManagerShellCommand,boolean)>','<com.android.server.wm.DisplaySettings$Entry: void <init>(java.lang.String)>','<com.android.server.audio.AudioService: void setRingerModeInternal(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: void updatePackagesIfNeeded()>','<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler takeUidSnapshot(int)>','<com.android.server.NetworkManagementService$NetdResponseCode: void <init>()>','<com.android.server.AnyMotionDetector$Vector3: float angleBetween(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.wm.WindowManagerService: void makeWindowFreezingScreenIfNeededLocked(com.android.server.wm.WindowState)>','<com.android.server.AppOpsService$ClientRestrictionState: boolean isDefault()>','<com.android.server.TelephonyRegistry: void removeOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>','<com.android.server.pm.dex.DexManager$DexSearchResult: void <init>(com.android.server.pm.dex.DexManager,java.lang.String,int)>','<com.android.server.DeviceIdleController$BinderService: int[] getAppIdUserWhitelist()>','<com.android.server.net.NetworkPolicyManagerService: void bindConnectivityManager(android.net.IConnectivityManager)>','<com.android.server.pm.PackageManagerService$15: void apply(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.am.ActivityManagerService$LocalService: void onLocalVoiceInteractionStarted(android.os.IBinder,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>','<com.android.server.location.GnssLocationProvider$9: void unregisterFromService()>','<com.android.server.connectivity.NetworkMonitor$EvaluatingState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>','<com.android.server.am.ActivityStack: void removeTask(com.android.server.am.TaskRecord,java.lang.String,int)>','<com.android.server.wm.AppTransition: boolean isNextAppTransitionThumbnailDown()>','<com.android.server.wm.KeyguardDisableHandler: int access$000(com.android.server.wm.KeyguardDisableHandler)>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void onHardKeyboardStatusChange(boolean)>','<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState getImeTargetBelowWindow(com.android.server.wm.WindowState)>','<com.android.server.power.WirelessChargerDetector: void <init>(android.hardware.SensorManager,com.android.server.power.SuspendBlocker,android.os.Handler)>','<com.android.server.power.Notifier: void onWakeLockReleased(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>','<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)>','<android.hidl.base.V1_0.IBase$Stub: void setHALInstrumentation()>','<com.android.server.am.BatteryStatsService: void noteWifiStopped(android.os.WorkSource)>','<com.android.server.statusbar.StatusBarManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.Object filterToLabel(android.content.pm.PackageParser$ServiceIntentInfo)>','<com.android.server.wm.AppWindowToken: void removeChild(com.android.server.wm.WindowContainer)>','<com.android.server.am.ActivityStack: void closeSystemDialogsLocked()>','<com.android.server.usb.descriptors.UsbDescriptorParser: void parseDescriptors(byte[])>','<android.hardware.usb.V1_0.PortPowerRole: java.lang.String toString(int)>','<com.android.server.power.PowerManagerService: void lowLevelReboot(java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>','<com.android.server.firewall.SenderPackageFilter$1: void <init>(java.lang.String)>','<com.android.server.audio.AudioService: int setBluetoothA2dpDeviceConnectionStateInt(android.bluetooth.BluetoothDevice,int,int,int)>','<com.android.server.location.GnssLocationProvider: boolean access$1200(int)>','<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void onInputEvent(android.view.InputEvent,int)>','<com.android.server.usb.UsbPortManager: void systemReady()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: float access$1200(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>','<com.android.server.audio.AudioService: boolean isBluetoothScoOn()>','<com.android.server.wm.WindowState: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.wm.WindowState: void pokeDrawLockLw(long)>','<com.android.server.am.ActivityManagerService: boolean isAssistDataAllowedOnCurrentActivity()>','<com.android.server.am.ActivityManagerService$10: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: boolean equals(java.lang.Object)>','<com.android.server.Watchdog: void run()>','<com.android.server.am.BatteryStatsService: void noteUserActivity(int,int)>','<com.android.server.net.NetworkIdentitySet: void writeToStream(java.io.DataOutputStream)>','<android.os.IInstalld$Stub$Proxy: void invalidateMounts()>','<com.android.server.usb.UsbDeviceManager$4: void <init>(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.WindowState: boolean isDragResizeChanged()>','<com.android.server.power.PowerManagerService: boolean access$2500(com.android.server.power.PowerManagerService)>','<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountType()>','<com.android.server.audio.AudioService$RmtSbmxFullVolDeathHandler: boolean isHandlerFor(android.os.IBinder)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void enter()>','<com.android.server.am.ActiveServices$2: void run()>','<com.android.server.wm.DisplayContent: void disableSurfaceTrace()>','<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void addToDisplay(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: boolean hasVisibleBehindActivity()>','<com.android.server.connectivity.Vpn$SystemServices: void settingsSecurePutIntForUser(java.lang.String,int,int)>','<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>','<com.android.server.usb.descriptors.UsbACEndpoint: byte getSubtype()>','<com.android.server.pm.PackageManagerService: void notifyPackageUse(java.lang.String,int)>','<com.android.server.pm.PackageKeySetData: void <init>(com.android.server.pm.PackageKeySetData)>','<com.android.server.NetworkManagementService$Injector: void <init>(com.android.server.NetworkManagementService)>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: boolean shouldWrite()>','<com.android.server.wm.WindowManagerService: void setFocusTaskRegionLocked(com.android.server.wm.AppWindowToken)>','<com.android.server.usb.UsbDeviceManager: boolean isFunctionEnabled(java.lang.String)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: com.android.server.connectivity.tethering.IPv6TetheringCoordinator$Downstream findDownstream(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.Watchdog: void rebootSystem(java.lang.String)>','<com.android.server.pm.PackageManagerService$HandlerParams: boolean startCopy()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ServiceIntentInfo)>','<com.android.server.wm.TaskPositioner: android.graphics.Rect access$500(com.android.server.wm.TaskPositioner)>','<com.android.server.wm.DisplayContent: void prepareFreezingTaskBounds()>','<com.android.server.usb.UsbDebuggingManager: void access$500(com.android.server.usb.UsbDebuggingManager,java.lang.String)>','<com.android.server.usb.UsbDebuggingManager: java.lang.String access$400(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.audio.AudioService: int access$2902(com.android.server.audio.AudioService,int)>','<com.android.server.am.ActivityManagerShellCommand: int runKillAll(java.io.PrintWriter)>','<com.android.server.pm.CompilerStats: void <init>()>','<com.android.server.am.TaskChangeNotificationController: void access$300(com.android.server.am.TaskChangeNotificationController,com.android.server.am.TaskChangeNotificationController$TaskStackConsumer,android.os.Message)>','<com.android.server.wm.DisplayContent: int getStaskPosById(int)>','<com.android.server.wm.TaskSnapshotSurface$Window: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.util.MergedConfiguration,android.graphics.Rect,boolean,boolean,int)>','<com.android.server.usb.UsbPortManager: android.os.Handler access$200(com.android.server.usb.UsbPortManager)>','<com.android.server.power.PowerManagerService$LocalService: android.os.PowerSaveState getLowPowerState(int)>','<com.android.server.wm.WindowManagerService$1: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int)>','<com.android.server.input.InputApplicationHandle: void <init>(java.lang.Object)>','<com.android.server.location.GnssMeasurementsProvider$1: void execute(android.location.IGnssMeasurementsListener)>','<com.android.server.am.UserController$Injector: void systemServiceManagerCleanupUser(int)>','<com.android.server.am.ActivityManagerService: int startAssistantActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)>','<com.android.server.audio.PlaybackActivityMonitor: void releasePlayer(int,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getSigningKeySet(java.lang.String)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>','<com.android.server.wm.AppWindowToken: void finishRelaunching()>','<com.android.server.usb.UsbProfileGroupSettingsManager: void access$700(com.android.server.usb.UsbProfileGroupSettingsManager,android.content.Intent,android.hardware.usb.UsbDevice,boolean)>','<com.android.server.pm.PackageManagerService$HandlerParams: android.os.UserHandle getUser()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void invalidate(android.graphics.Rect)>','<com.android.server.net.NetworkPolicyManagerService$14: void limitReached(java.lang.String,java.lang.String)>','<com.android.server.power.ShutdownThread$7: void <init>(com.android.server.power.ShutdownThread)>','<com.android.server.net.NetworkPolicyManagerService$8: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WallpaperWindowToken: java.lang.String toString()>','<com.android.server.am.ActivityStack: int getAdjustedPositionForTask(com.android.server.am.TaskRecord,int,com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowContainer: void onOverrideConfigurationChanged(android.content.res.Configuration)>','<com.android.server.location.RemoteListenerHelper$LinkedListener: void <init>(com.android.server.location.RemoteListenerHelper,android.os.IInterface)>','<com.android.server.connectivity.MockableSystemProperties: void <init>()>','<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction()>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPersistentPreferredActivity(android.content.Intent,int)>','<com.android.server.EventLogTags: void writeImfForceReconnectIme(java.lang.Object[],long,int)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void ping()>','<com.android.server.connectivity.tethering.OffloadController: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.NetworkManagementService: void setMtu(java.lang.String,int)>','<com.android.server.power.ShutdownThread: void shutdown(android.content.Context,java.lang.String,boolean)>','<com.android.server.audio.RotationHelper: void updateOrientation()>','<com.android.server.am.BroadcastQueue: void <clinit>()>','<com.android.server.pm.InstantAppResolver: android.content.pm.AuxiliaryResolveInfo access$000(java.util.List,android.content.Intent,java.lang.String,int,java.lang.String,android.content.pm.InstantAppResolveInfo$InstantAppDigest,java.lang.String)>','<com.android.server.location.GnssLocationProvider$10: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.location.GnssLocationProvider: boolean access$2000(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>','<com.android.server.connectivity.Vpn$3: void <init>(com.android.server.connectivity.Vpn)>','<com.android.server.DeviceIdleController: boolean getPowerSaveWhitelistAppInternal(java.lang.String)>','<com.android.server.audio.PlaybackActivityMonitor: void dump(java.io.PrintWriter)>','<com.android.server.wm.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void unlinkFromOwnDeathLocked()>','<com.android.server.LocationManagerService$UpdateRecord: void disposeLocked(boolean)>','<com.android.server.net.NetworkPolicyManagerService: void systemReady(java.util.concurrent.CountDownLatch)>','<com.android.server.pm.PackageManagerService: int access$3808(com.android.server.pm.PackageManagerService)>','<com.android.server.IntentResolver$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.WindowStateAnimator: boolean hasSurface()>','<com.android.server.connectivity.Vpn: com.android.server.connectivity.Vpn$Connection access$902(com.android.server.connectivity.Vpn,com.android.server.connectivity.Vpn$Connection)>','<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int,int)>','<com.android.server.pm.PackageManagerService: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>','<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>','<com.android.server.pm.PackageInstallerService$Callbacks: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageInstallerService: void access$100(com.android.server.pm.PackageInstallerService)>','<com.android.server.wm.AppTransition: void notifyAppTransitionFinishedLocked(android.os.IBinder)>','<com.android.server.am.AppErrors: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: boolean matches(android.hardware.usb.UsbAccessory)>','<com.android.server.connectivity.Nat464Xlat: void <init>(android.content.Context,android.os.INetworkManagementService,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.WindowStateAnimator: void applyMagnificationSpec(android.view.MagnificationSpec,android.graphics.Matrix)>','<com.android.server.location.GnssMeasurementsProvider$1: void <init>(com.android.server.location.GnssMeasurementsProvider,android.location.GnssMeasurementsEvent)>','<com.android.server.pm.PermissionsState: void copyFrom(com.android.server.pm.PermissionsState)>','<com.android.server.location.PassiveProvider: void <clinit>()>','<com.android.server.am.ActivityManagerService$23: int compare(android.util.Pair,android.util.Pair)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>','<com.android.server.wm.DisplayContent: void startKeyguardExitOnNonAppWindows(boolean,boolean)>','<com.android.server.am.ProcessList: int computeEmptyProcessLimit(int)>','<com.android.server.NetworkManagementService: void clearDefaultNetId()>','<com.android.server.audio.AudioService$VolumeController: void postDismiss()>','<com.android.server.am.ActivityStack: void continueUpdateBounds()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionClipReveal(int,int,int,int)>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,int)>','<android.net.util.IpUtils: short ipChecksum(java.nio.ByteBuffer,int)>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(long,java.lang.String,java.lang.Object[])>','<com.android.server.pm.UserManagerService$LocalService: void addUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener)>','<com.android.server.wm.SurfaceControlWithBackground: void deferTransactionUntil(android.os.IBinder,long)>','<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent getDisplayContent()>','<android.net.util.MultinetworkPolicyTracker: int configMeteredMultipathPreference()>','<com.android.server.am.ProcessRecord: void resetPackageList(com.android.server.am.ProcessStatsService)>','<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMIDIInterface()>','<com.android.server.LocationManagerService$Receiver: void <init>(com.android.server.LocationManagerService,android.location.ILocationListener,android.app.PendingIntent,int,int,java.lang.String,android.os.WorkSource,boolean)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getInterval()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setSyncAdapterPackagesprovider(android.content.pm.PackageManagerInternal$SyncAdapterPackagesProvider)>','<com.android.server.EventLogTags: void writeNetstatsWifiSample(long,long,long,long,long,long,long,long,long,long,long,long,long)>','<com.android.server.connectivity.Tethering: void access$300(com.android.server.connectivity.Tethering,int,boolean,android.os.ResultReceiver)>','<com.android.server.location.GnssLocationProvider$7: boolean isGpsEnabled()>','<com.android.server.am.TaskRecord: boolean isOverAssistantStack()>','<com.android.server.power.PowerManagerService: void access$4600(com.android.server.power.PowerManagerService,int,boolean,java.lang.String,boolean)>','<com.android.server.wm.BoundsAnimationController: boolean access$002(com.android.server.wm.BoundsAnimationController,boolean)>','<com.android.server.am.ActivityManagerService: void enterSafeMode()>','<com.android.server.pm.UserManagerService$LocalService: android.os.Bundle getBaseUserRestrictions(int)>','<com.android.server.pm.InstantAppResolver$1: void <init>(android.content.Intent,android.content.pm.InstantAppResolveInfo$InstantAppDigest,java.lang.String,android.content.pm.InstantAppRequest,android.content.pm.ActivityInfo,android.content.Context)>','<com.android.server.AlarmManagerService$InteractiveStateReceiver: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.pm.Policy: java.util.Set getSignatures()>','<com.android.server.pm.Settings: void writeBlockUninstallPackagesLPr(org.xmlpull.v1.XmlSerializer,int)>','<com.android.server.power.PowerManagerService$4: void <init>(com.android.server.power.PowerManagerService,java.lang.String,java.lang.String)>','<com.android.server.AppOpsService$Shell: int parseUserOpMode(int,java.io.PrintWriter)>','<com.android.server.location.LocationRequestStatistics$PackageProviderKey: boolean equals(java.lang.Object)>','<com.android.server.audio.AudioService$StreamVolumeCommand: java.lang.String toString()>','<com.android.server.AlarmManagerService$UidObserver: void onUidIdle(int,boolean)>','<com.android.server.power.ShutdownThread$CloseDialogReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.dex.DexManager: boolean dexoptSecondaryDex(java.lang.String,int,boolean)>','<com.android.server.am.ServiceRecord: boolean hasAutoCreateConnections()>','<com.android.server.TelephonyRegistry: void <init>(android.content.Context)>','<com.android.server.wm.WindowStateAnimator: void <init>(com.android.server.wm.WindowState)>','<com.android.server.wm.AppTransition$1: float getInterpolation(float)>','<com.android.server.wm.AppWindowToken: boolean shouldUseAppThemeSnapshot()>','<com.android.server.NativeDaemonConnector$NativeDaemonFailureException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<com.android.server.location.GeofenceProxy$1: void <init>(com.android.server.location.GeofenceProxy)>','<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor getDeviceDescriptor()>','<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppInternal(int,java.lang.String,long,int,boolean,java.lang.String)>','<com.android.server.DeviceIdleController$8: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.os.IInstalld$Stub: void <init>()>','<com.android.server.location.RemoteListenerHelper: android.os.Handler access$300(com.android.server.location.RemoteListenerHelper)>','<com.android.server.DeviceIdleController$2: void onAlarm()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionInPlace(java.lang.String,int)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void exit()>','<com.android.server.wm.RemoteSurfaceTrace: void setLayerStack(int)>','<com.android.server.AlarmManagerService$Batch: boolean removeForStopped(int)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void setHALInstrumentation()>','<com.android.server.ConnectivityService: void access$3400(com.android.server.ConnectivityService,com.android.server.ConnectivityService$NetworkRequestInfo)>','<com.android.server.usb.UsbService$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.ConnectivityService: android.net.Network getNetworkForType(int)>','<com.android.server.am.BatteryStatsService: void noteResetVideo()>','<com.android.server.pm.PackageManagerService: int movePrimaryStorage(java.lang.String)>','<com.android.server.wm.UnknownAppVisibilityController: boolean allResolved()>','<com.android.server.location.GnssLocationProvider: int access$100(com.android.server.location.GnssLocationProvider)>','<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport,android.content.Context)>','<com.android.server.power.PowerManagerService$1: void run()>','<com.android.server.input.InputManagerService: void access$1400(com.android.server.input.InputManagerService,int)>','<com.android.server.audio.AudioService: boolean isCameraSoundForced()>','<com.android.server.pm.PackageManagerService: void cleanPackageDataStructuresLILPw(android.content.pm.PackageParser$Package,boolean)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int access$300(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>','<com.android.server.AlarmManagerService$ClockReceiver: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.wm.WindowState: boolean isReadyForDisplay()>','<com.android.server.am.ActivityManagerService: boolean killProcessesBelowForeground(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void access$300(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.input.InputManagerService$14: void <init>(com.android.server.input.InputManagerService,java.lang.String[])>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalInt64 maxFrameBufferAcquiredBuffers()>','<com.android.server.power.PowerManagerService$LocalService: void setScreenBrightnessOverrideFromWindowManager(int)>','<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>','<com.android.server.power.PowerManagerService$Constants: void onChange(boolean,android.net.Uri)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.ComponentName getHomeActivitiesAsUser(java.util.List,int)>','<com.android.server.pm.PackageInstallerService: void updateSessionAppLabel(int,java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.audio.FocusRequester: android.media.AudioFocusInfo toAudioFocusInfo()>','<com.android.server.connectivity.Tethering$TetherMasterSM: boolean turnOffMasterTetherSettings()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void addService(android.content.pm.PackageParser$Service)>','<com.android.server.wm.WindowContainer: boolean isOnTop()>','<com.android.server.location.LocationProviderProxy: java.lang.String getName()>','<com.android.server.am.ActivityManagerService: void releaseSomeActivities(android.app.IApplicationThread)>','<com.android.server.wm.AppWindowToken: boolean isVisible()>','<com.android.server.IntentResolver: void <init>()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void setMagnificationSpecLocked(android.view.MagnificationSpec)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$900(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.wm.DisplayContent: void setRotation(int)>','<com.android.server.am.ActivityManagerService$LocalService: int startActivitiesAsPackage(java.lang.String,int,android.content.Intent[],android.os.Bundle)>','<com.android.server.am.ActivityManagerService: int getLockTaskModeState()>','<com.android.server.am.ActivityManagerService: void reportMemUsage(java.util.ArrayList)>','<com.android.server.LocationManagerService: void access$1400(com.android.server.LocationManagerService,int)>','<com.android.server.am.AppWaitingForDebuggerDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,com.android.server.am.ProcessRecord)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.MagnificationSpec getMagnificationSpecForWindowLocked(com.android.server.wm.WindowState)>','<com.android.server.wm.WindowManagerService: void pauseRotationLocked()>','<com.android.server.wm.DisplayContent: void <init>(android.view.Display,com.android.server.wm.WindowManagerService,com.android.server.wm.WindowLayersController,com.android.server.wm.WallpaperController)>','<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getKeySetByAliasAndPackageNameLPr(java.lang.String,java.lang.String)>','<com.android.server.Watchdog$HandlerChecker: void <init>(com.android.server.Watchdog,android.os.Handler,java.lang.String,long)>','<com.android.server.am.ActivityManagerService: boolean clearBroadcastQueueForUserLocked(int)>','<com.android.server.statusbar.StatusBarManagerService: int gatherDisableActionsLocked(int,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPreferredActivity(android.content.Intent,java.lang.String,int,java.util.List,int,boolean,boolean,boolean,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultBrowserLPr(java.lang.String,int)>','<com.android.server.wm.WindowState: void removeIfPossible()>','<com.android.server.am.ActivityManagerService: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>','<com.android.server.power.Notifier: void access$400(com.android.server.power.Notifier)>','<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int,int)>','<com.android.server.am.ActivityRecord: boolean isInStackLocked()>','<com.android.server.usb.UsbAlsaManager: com.android.server.usb.UsbAudioDevice selectAudioCard(int)>','<com.android.server.pm.Settings: boolean removeIntentFilterVerificationLPw(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>','<com.android.server.wm.DisplayContent: void addChild(com.android.server.wm.DisplayContent$DisplayChildWindowContainer,int)>','<com.android.server.am.ProcessStatsService: void <clinit>()>','<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistExceptIdleAppInternal(java.lang.String)>','<com.android.server.am.RecentTasks$1: int compare(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>','<com.android.server.am.UserController: void sendUserSwitchBroadcastsLocked(int,int)>','<com.android.server.location.PassiveProvider: long getStatusUpdateTime()>','<com.android.server.LocationManagerService: java.lang.String[] getBackgroundThrottlingWhitelist()>','<com.android.server.pm.PersistentPreferredIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.am.ActivityStackSupervisor: boolean isStackDockedInEffect(int)>','<com.android.server.pm.UserManagerService: android.os.Handler access$2200(com.android.server.pm.UserManagerService)>','<com.android.server.FgThread: android.os.Handler getHandler()>','<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>','<com.android.server.wm.WindowToken: void setExiting()>','<com.android.server.DeviceIdleController: void readConfigFileLocked()>','<com.android.server.wm.DisplayContent: int getRotation()>','<com.android.server.wm.AppWindowContainerController: void notifyAppStopped()>','<com.android.server.am.UserController$5$1: void run()>','<com.android.server.net.NetworkPolicyManagerService$1: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>','<com.android.server.am.TaskRecord: boolean isOverHomeStack()>','<com.android.server.pm.dex.PackageDexUsage: void readInternal(java.lang.Object)>','<android.hardware.usb.V1_0.PortRoleType: java.lang.String dumpBitfield(int)>','<com.android.server.LocationManagerService: void access$300(com.android.server.LocationManagerService)>','<com.android.server.usb.UsbPortManager$HALCallback: void <init>(com.android.internal.util.IndentingPrintWriter,com.android.server.usb.UsbPortManager)>','<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(android.net.Network)>','<com.android.server.wm.PointerEventDispatcher: void onInputEvent(android.view.InputEvent,int)>','<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnProfile)>','<com.android.server.wm.WindowState: boolean removeReplacedWindowIfNeeded(com.android.server.wm.WindowState)>','<com.android.server.net.NetworkStatsService$5: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>','<com.android.server.pm.InstantAppRegistry$CookiePersistence: byte[] getPendingPersistCookieLPr(android.content.pm.PackageParser$Package,int)>','<com.android.server.am.ActivityStack: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityManagerService: void setAppIdTempWhitelistStateLocked(int,boolean)>','<com.android.server.pm.PackageKeySetData: void setAliases(android.util.ArrayMap)>','<com.android.server.audio.AudioService: int access$4600(com.android.server.audio.AudioService,int)>','<com.android.server.ConnectivityService: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>','<com.android.server.am.BatteryStatsService: void noteJobStart(java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: void updateRulesForDeviceIdleUL()>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void cancel()>','<com.android.server.wm.AppWindowToken: void updateAllDrawn()>','<com.android.server.pm.PackageManagerShellCommand$2: int compare(android.content.pm.InstrumentationInfo,android.content.pm.InstrumentationInfo)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssNavigationMessageProvider access$4200(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: boolean isVisible()>','<com.android.server.am.ActivityStackSupervisor: boolean isCallerAllowedToLaunchOnDisplay(int,int,int)>','<com.android.server.NativeDaemonEvent: boolean isClassOk()>','<com.android.server.AlarmManagerService$DeliveryTracker: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.server.location.GnssLocationProvider$12: boolean addCircularHardwareGeofence(int,double,double,double,int,int,int,int)>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean)>','<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$1700(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>','<com.android.server.pm.Settings: void dumpPackageLPr(java.io.PrintWriter,java.lang.String,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageSetting,java.text.SimpleDateFormat,java.util.Date,java.util.List,boolean)>','<com.android.server.pm.Installer: void clearAppData(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.net.NetworkPolicyManagerService: void addIdleHandler(android.os.MessageQueue$IdleHandler)>','<com.android.server.am.CompatModeDialog$1: void <init>(com.android.server.am.CompatModeDialog)>','<com.android.server.DeviceIdleController$LocalService: void addPowerSaveTempWhitelistAppDirect(int,long,boolean,java.lang.String)>','<com.android.server.pm.Settings: void transferPermissionsLPw(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: int runForceStop(java.io.PrintWriter)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region access$200(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.pm.PackageDexOptimizer: void <init>(com.android.server.pm.PackageDexOptimizer)>','<com.android.server.am.ActivityManagerService$23: void <init>()>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void <init>(com.android.server.pm.PackageSender)>','<com.android.server.am.ActivityRecord: void setVisibility(boolean)>','<com.android.server.am.PinnedActivityStack: boolean isAnimatingBoundsToFullscreen()>','<com.android.server.audio.FocusRequester: int getGainRequest()>','<com.android.server.location.GnssLocationProvider$BackOff: void <init>(long,long)>','<com.android.server.firewall.PortFilter$1: void <init>(java.lang.String)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>','<com.android.server.pm.UserManagerService$LocalService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.hardware.usb.V1_0.IUsb$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.am.BatteryStatsService: void noteWifiScanStarted(int)>','<android.net.INetd$Stub: android.os.IBinder asBinder()>','<com.android.server.pm.PackageInstallerSession$4: void onUserActionRequired(android.content.Intent)>','<com.android.server.am.EventLogTags: void writeAmNewIntent(int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.NativeDaemonConnector$Command: java.util.ArrayList access$100(com.android.server.NativeDaemonConnector$Command)>','<com.android.server.statusbar.StatusBarManagerService: void collapsePanels()>','<com.android.server.am.ActivityStackSupervisor: void rankTaskLayersIfNeeded()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidPersistBytes(long)>','<com.android.server.am.AppNotRespondingDialog: void onClick(android.view.View)>','<android.hardware.configstore.V1_0.OptionalBool: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)>','<com.android.server.am.EventLogTags: void writeAmDropProcess(int)>','<com.android.server.am.ActivityManagerService: void backupAgentCreated(java.lang.String,android.os.IBinder)>','<com.android.server.wm.WindowSurfaceController: float getWidth()>','<com.android.server.power.PowerManagerService$BinderService: void shutdown(boolean,java.lang.String,boolean)>','<android.hardware.usb.V1_1.PortStatus_1_1: int hashCode()>','<com.android.server.wm.WindowManagerService: void setForcedDisplayDensityForUser(int,int,int)>','<com.android.server.wm.TaskPositioner: boolean isFullscreen()>','<com.android.server.DeviceIdleController$Constants: void <init>(com.android.server.DeviceIdleController,android.os.Handler,android.content.ContentResolver)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void <init>(java.lang.String,android.os.Looper,int,android.net.util.SharedLog,android.os.INetworkManagementService,android.net.INetworkStatsService,com.android.server.connectivity.tethering.IControlsTethering)>','<com.android.server.input.InputManagerService$9: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.am.PendingIntentRecord: void finalize()>','<com.android.server.connectivity.LingerMonitor: android.app.PendingIntent createNotificationIntent()>','<com.android.server.location.GnssLocationProvider: android.content.BroadcastReceiver access$6400(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.ActivityManagerShellCommand: void setBoundsSide(android.graphics.Rect,java.lang.String,int)>','<com.android.server.location.RemoteListenerHelper$2: void run()>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void pause()>','<com.android.server.am.VrController: void setPersistentVrThreadLocked(int,int,com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: boolean isPrivate()>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: boolean isActive()>','<com.android.server.audio.AudioService$Lifecycle: void <init>(android.content.Context)>','<com.android.server.audio.MediaFocusControl$1: void <init>(com.android.server.audio.MediaFocusControl,android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.wm.WindowState: boolean getOrientationChanging()>','<com.android.server.pm.PackageManagerService: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>','<com.android.server.am.KeyguardController: void beginActivityVisibilityUpdate()>','<com.android.server.wm.SnapshotStartingData: void <init>(com.android.server.wm.WindowManagerService,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.pm.PackageManagerService: boolean setInstantAppCookie(java.lang.String,byte[],int)>','<com.android.server.pm.UserManagerService: void access$1800(com.android.server.pm.UserManagerService,android.content.pm.UserInfo,android.graphics.Bitmap)>','<com.android.server.location.GnssStatusListenerHelper$3: void execute(android.location.IGnssStatusListener)>','<com.android.server.input.PersistentDataStore: void saveIfNeeded()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String[],boolean)>','<com.android.server.audio.AudioService: int access$2800(com.android.server.audio.AudioService)>','<com.android.server.usb.UsbDeviceManager: java.lang.String access$600(com.android.server.usb.UsbDeviceManager,java.lang.String)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void releaseMobileNetworkRequest()>','<com.android.server.AlarmManagerService$Constants: void updateAllowWhileIdleMinTimeLocked()>','<com.android.server.am.ActivityManagerService: boolean updateDisplayOverrideConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,int)>','<com.android.server.pm.Installer: void migrateAppData(java.lang.String,java.lang.String,int,int)>','<android.os.IInstalld$Stub$Proxy: void deleteOdex(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void clearPendingBackup()>','<com.android.server.location.GnssStatusListenerHelper$5: void execute(android.os.IInterface)>','<com.android.server.ConnectivityService: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>','<com.android.server.connectivity.tethering.SimChangeListener: void stopListening()>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void <init>(android.net.ConnectivityManager,com.android.internal.util.StateMachine,android.net.util.SharedLog,int)>','<com.android.server.wm.Session: int add(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>','<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistInternal()>','<com.android.server.am.ActivityRecord$1: void <clinit>()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$ActionIterGenerator: void <init>(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.location.GnssStatusListenerHelper$2: void <init>(com.android.server.location.GnssStatusListenerHelper)>','<com.android.server.net.NetworkPolicyManagerService: android.util.ArraySet access$1700(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getInterfaceNumber()>','<com.android.server.EventLogTags: void writeWatchdogProcStats(int,int,int,int,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setVisible(boolean)>','<com.android.server.EventLogTags: void writeWatchdogMeminfo(int,int,int,int,int,int,int,int,int,int,int)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1000(com.android.server.am.TaskChangeNotificationController)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void notifySyspropsChanged()>','<com.android.server.power.Notifier$2: void run()>','<com.android.server.wm.DisplayContent: boolean isStackVisible(int)>','<com.android.server.am.ActivityManagerService: void setSystemServiceManager(com.android.server.SystemServiceManager)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$LocalHotspotState: boolean processMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService$2: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>','<com.android.server.wm.DockedStackDividerController: void notifyAppTransitionStarting(android.util.ArraySet,int)>','<com.android.server.wm.WindowStateAnimator: void deferTransactionUntilParentFrame(long)>','<com.android.server.AppOpsService$Callback: void <init>(com.android.server.AppOpsService,com.android.internal.app.IAppOpsCallback)>','<com.android.server.am.ActivityManagerShellCommand: int runUntrackAssociations(java.io.PrintWriter)>','<com.android.server.pm.PackageInstallerService: java.lang.String allocateExternalStageCidLegacy()>','<com.android.server.net.NetworkStatsService$HandlerCallback: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.TaskSnapshotController: void notifyAppVisibilityChanged(com.android.server.wm.AppWindowToken,boolean)>','<com.android.server.wm.WindowState: boolean shouldKeepVisibleDeadAppWindow()>','<com.android.server.pm.Settings: void writePreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int,boolean)>','<com.android.server.wm.WindowManagerService$4: void onLowPowerModeChanged(android.os.PowerSaveState)>','<com.android.server.wm.TaskStack: boolean isForceScaled()>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void performComputeChangedWindowsNotLocked()>','<com.android.server.usb.UsbAlsaManager$AlsaDevice: java.lang.String toString()>','<com.android.server.PinnerService: void update(android.util.ArraySet)>','<com.android.server.am.RecentTasks: void flush()>','<com.android.server.NsdService$NativeCallbackReceiver: void awaitConnection()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.pm.PackageParser$ProviderIntentInfo)>','<com.android.server.NsdService: boolean access$2000(com.android.server.NsdService,int,android.net.nsd.NsdServiceInfo)>','<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>','<com.android.server.am.AppTimeTracker: void deliverResult(android.content.Context)>','<com.android.server.pm.PersistentPreferredIntentResolver: void <init>()>','<com.android.server.InputContentUriTokenHandler: void release()>','<com.android.server.power.Notifier: void onLongPartialWakeLockStart(java.lang.String,int,android.os.WorkSource,java.lang.String)>','<com.android.server.NetworkManagementService: java.lang.String getFirewallChainName(int)>','<com.android.server.ConnectivityService: java.lang.String getAlwaysOnVpnPackage(int)>','<com.android.server.pm.Policy: java.lang.String toString()>','<com.android.server.wm.WindowStateAnimator: void preserveSurfaceLocked()>','<com.android.server.net.NetworkStatsCollection: void writeToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>','<com.android.server.wm.WindowManagerService: void resumeRotationLocked()>','<com.android.server.RescueParty$AppThreshold: long getStart()>','<com.android.server.wm.WindowManagerService: void deferSurfaceLayout()>','<com.android.server.audio.MediaFocusControl: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>','<com.android.server.am.ProcessRecord: java.lang.String toShortString()>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord restoreFromXml(org.xmlpull.v1.XmlPullParser,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.ActivityStack: com.android.server.am.ConfigurationContainer getChildAt(int)>','<com.android.server.audio.AudioService: void systemReady()>','<com.android.server.wm.DragState: void notifyLocationLw(float,float)>','<com.android.server.pm.PackageVerificationState: com.android.server.pm.PackageManagerService$InstallArgs getInstallArgs()>','<com.android.server.connectivity.NetworkMonitor: int access$2400(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.power.PowerManagerService: boolean access$3700(com.android.server.power.PowerManagerService,int)>','<com.android.server.net.NetworkPolicyManagerService: void access$700(com.android.server.net.NetworkPolicyManagerService,boolean)>','<com.android.server.firewall.NotFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.am.TaskPersister: void flush()>','<com.android.server.audio.PlaybackActivityMonitor: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester)>','<com.android.server.wm.BoundsAnimationController: com.android.server.wm.AppTransition access$500(com.android.server.wm.BoundsAnimationController)>','<com.android.server.wm.KeyguardDisableHandler$KeyguardTokenWatcher: void <init>(com.android.server.wm.KeyguardDisableHandler,android.os.Handler)>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean)>','<com.android.server.audio.RotationHelper$AudioDisplayListener: void <init>()>','<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getAllSessions(int)>','<com.android.server.audio.MediaFocusControl: int getFocusRampTimeMs(int,android.media.AudioAttributes)>','<com.android.server.am.UserController: com.android.server.am.UserState getStartedUserStateLocked(int)>','<com.android.server.firewall.StringFilter$IsNullFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,boolean)>','<com.android.server.am.ActiveServices: void stopInBackgroundLocked(int)>','<com.android.server.wm.DimLayer: void setLayer(int)>','<com.android.server.pm.UserManagerService: boolean hasManagedProfile(int)>','<com.android.server.wm.BlackFrame$BlackSurface: void setMatrix(android.graphics.Matrix)>','<com.android.server.connectivity.Tethering$1: void <init>(com.android.server.connectivity.Tethering,boolean,android.os.ResultReceiver,android.bluetooth.BluetoothAdapter)>','<com.android.server.wm.WindowState: void calculatePolicyCrop(android.graphics.Rect)>','<com.android.server.InputMethodManagerService: void hideInputMethodMenu()>','<com.android.server.pm.UserManagerService$LifeCycle: void onBootPhase(int)>','<com.android.server.firewall.IntentFirewall$Rule: boolean getBlock()>','<com.android.server.am.DumpHeapProvider: void <clinit>()>','<com.android.server.connectivity.NetworkAgentInfo: void linger()>','<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistExceptIdleInternal(java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmFailedToPause(int,int,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,int,boolean,java.lang.String)>','<com.android.server.am.ProcessList: void applyDisplaySize(com.android.server.wm.WindowManagerService)>','<com.android.server.am.ActivityManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>','<com.android.server.location.GeofenceProxy: java.lang.Object access$100(com.android.server.location.GeofenceProxy)>','<com.android.server.pm.PackageManagerService$20: void <init>(com.android.server.pm.PackageManagerService,boolean,boolean)>','<com.android.server.am.ActivityManagerService: boolean dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<com.android.server.pm.PolicyComparator: int compare(com.android.server.pm.Policy,com.android.server.pm.Policy)>','<com.android.server.wm.DimLayer: void show()>','<com.android.server.wm.DragState: void overridePointerIconLw(int)>','<com.android.server.pm.CompilerStats$PackageStats: java.util.Map access$000(com.android.server.pm.CompilerStats$PackageStats)>','<com.android.server.net.NetworkPolicyManagerService: void <clinit>()>','<com.android.server.am.ActivityManagerService: void waitForNetworkStateUpdate(long)>','<com.android.server.DeviceIdleController$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.wm.AppWindowToken: void setWillReplaceChildWindows()>','<com.android.server.wm.WindowManagerService: boolean isSafeModeEnabled()>','<com.android.server.am.ActivityStack: boolean checkReadyForSleepLocked()>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager$DuckedApp: void removeReleased(android.media.AudioPlaybackConfiguration)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void start()>','<com.android.server.audio.AudioService: void access$7100(com.android.server.audio.AudioService,boolean,java.lang.String)>','<com.android.server.usb.MtpNotificationManager$Receiver: void <init>(com.android.server.usb.MtpNotificationManager,com.android.server.usb.MtpNotificationManager$1)>','<com.android.server.pm.PackageManagerService$6: void run()>','<com.android.server.wm.DisplayContent: void updateStackBoundsAfterConfigChange(java.util.List)>','<com.android.server.wm.InputMonitor: void resumeDispatchingLw(com.android.server.wm.WindowToken)>','<com.android.server.am.UserController$1: void <init>(com.android.server.am.UserController,android.content.pm.UserInfo)>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskSnapshotChanged(int,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.input.InputManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.TaskSnapshotPersister: java.io.File getReducedResolutionBitmapFile(int,int)>','<com.android.server.am.ActivityManagerService$7: void run()>','<com.android.server.wm.WindowState: boolean isAnimatingInvisibleWithSavedSurface()>','<com.android.server.input.InputManagerService$Shell: void onHelp()>','<com.android.server.wm.WindowState: boolean hideLw(boolean,boolean)>','<com.android.server.am.ActivityManagerConstants: void dump(java.io.PrintWriter)>','<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionClipReveal(int,int,int,int)>','<com.android.server.net.NetworkPolicyManagerService: void bindNotificationManager(android.app.INotificationManager)>','<com.android.server.DeviceIdleController$BinderService: void addPowerSaveWhitelistApp(java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>','<com.android.server.am.ActivityManagerService: void setFocusedTask(int)>','<com.android.server.pm.PackageManagerServiceCompilerMapping: void checkProperties()>','<com.android.server.am.ActivityManagerService: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>','<com.android.server.connectivity.NetworkMonitor$ValidationStage: void <clinit>()>','<com.android.server.usb.descriptors.UsbACHeader: byte[] getInterfaceNums()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void notifySyspropsChanged()>','<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>','<com.android.server.connectivity.NetworkAgentInfo: boolean unlingerRequest(android.net.NetworkRequest)>','<com.android.server.usb.UsbAlsaManager: void usbDeviceAdded(android.hardware.usb.UsbDevice,boolean,boolean)>','<com.android.server.am.ActivityManagerService: boolean isAllowedWhileBooting(android.content.pm.ApplicationInfo)>','<com.android.server.location.GnssLocationProvider: java.lang.String getName()>','<com.android.server.pm.Installer: void rmPackageDir(java.lang.String)>','<com.android.server.wm.DockedStackDividerController: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.statusbar.StatusBarManagerService$1: void dismissKeyboardShortcutsMenu()>','<com.android.server.wm.WindowManagerService: void rebootSafeMode(boolean)>','<com.android.server.AppOpsService$ClientState: void <init>(com.android.server.AppOpsService,android.os.IBinder)>','<com.android.server.wm.WindowState: void openInputChannel(android.view.InputChannel)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLP(android.util.AtomicFile)>','<com.android.server.wm.AppWindowAnimator: void transferCurrentAnimation(com.android.server.wm.AppWindowAnimator,com.android.server.wm.WindowStateAnimator)>','<com.android.server.pm.UserManagerService: void cleanupPartialUsers()>','<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>','<com.android.server.InputMethodManagerService: boolean access$300(com.android.server.InputMethodManagerService)>','<com.android.server.power.PowerManagerService: void updatePowerRequestFromBatterySaverPolicy(android.hardware.display.DisplayManagerInternal$DisplayPowerRequest)>','<com.android.server.audio.AudioService: void access$6000(com.android.server.audio.AudioService,int,int)>','<com.android.server.AppOpsService$ClientRestrictionState: void binderDied()>','<com.android.server.usb.UsbDeviceManager: boolean access$300(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.CoreSettingsObserver: void <clinit>()>','<com.android.server.wm.AppWindowContainerController$H: void handleMessage(android.os.Message)>','<com.android.server.audio.AudioService$VolumeController: android.os.IBinder asBinder()>','<com.android.server.EventLogTags: void writeBackupSuccess(int,int)>','<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.am.TaskRecord: int findEffectiveRootIndex()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean allowFilterResult(android.content.pm.PackageParser$ProviderIntentInfo,java.util.List)>','<com.android.server.am.ActivityManagerShellCommand: int runSupportsMultiwindow(java.io.PrintWriter)>','<com.android.server.DeviceIdleController$MotionListener: void onTrigger(android.hardware.TriggerEvent)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$400(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.power.PowerManagerService$2: void <init>(com.android.server.power.PowerManagerService)>','<com.android.server.wm.WindowManagerService: boolean access$302(com.android.server.wm.WindowManagerService,boolean)>','<com.android.server.location.GnssLocationProvider$14: void run()>','<com.android.server.wm.WallpaperController: void wallpaperCommandComplete(android.os.IBinder)>','<com.android.server.wm.AppWindowToken: void destroySurfaces()>','<com.android.server.wm.WindowManagerService: int getDockedDividerInsetsLw()>','<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getDumpActivitiesLocked(java.lang.String,boolean,boolean)>','<com.android.server.pm.PackageManagerService: void deletePackageVersioned(android.content.pm.VersionedPackage,android.content.pm.IPackageDeleteObserver2,int,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>','<com.android.server.wm.WindowManagerService: void finishDrawingWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.server.am.TaskPersister$LazyTaskWriterThread: void run()>','<com.android.server.pm.UserManagerService: void addRemovingUserIdLocked(int)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte getNameID()>','<com.android.server.wm.WindowManagerService: boolean containsShowWhenLockedWindow(android.os.IBinder)>','<com.android.server.AlarmManagerService$1: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.wm.WindowStateAnimator: void cancelExitAnimationForNextAnimationLocked()>','<com.android.server.ConnectivityService: void setAvoidUnvalidated(android.net.Network)>','<com.android.server.pm.PackageManagerService: void deleteCompilerPackageStats(java.lang.String)>','<com.android.server.am.ActiveServices$4: void <init>(com.android.server.am.ActiveServices,android.content.Intent,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: void <init>(android.hardware.usb.UsbAccessory)>','<com.android.server.TelephonyRegistry: void systemRunning()>','<com.android.server.net.NetworkStatsRecorder: android.net.NetworkStats$Entry getTotalSinceBootLocked(android.net.NetworkTemplate)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: int hashCode()>','<com.android.server.wm.DisplayContent: void setInputMethodAnimLayerAdjustment(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void init(android.view.Display)>','<com.android.server.audio.AudioService: int access$5800()>','<com.android.server.pm.PackageManagerService: void waitForAppDataPrepared()>','<com.android.server.am.ActivityManagerService$25: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.ProcessStatsService: boolean dumpFilteredProcessesCsvLocked(java.io.PrintWriter,java.lang.String,boolean,int[],boolean,int[],boolean,int[],long,java.lang.String)>','<com.android.server.wm.InputMonitor: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>','<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void access$6400(com.android.server.pm.PackageManagerService$MoveCallbacks,int,android.os.Bundle)>','<com.android.server.wm.AccessibilityController: void onWindowLayersChangedLocked()>','<com.android.server.am.ActivityManagerService: void setVrThread(int)>','<com.android.server.pm.PackageManagerService: void setApplicationCategoryHint(java.lang.String,int,java.lang.String)>','<com.android.server.NsdService$ClientInfo: void access$500(com.android.server.NsdService$ClientInfo)>','<com.android.server.wm.WindowContainer: com.android.server.wm.WindowState getWindow(java.util.function.Predicate)>','<com.android.server.audio.AudioService: void disconnectAllBluetoothProfiles()>','<com.android.server.am.ActivityManagerService$Injector: boolean isNetworkRestrictedForUid(int)>','<com.android.server.am.ActivityManagerService: void killApplicationProcess(java.lang.String,int)>','<com.android.server.pm.PackageInstallerService: void prepareExternalStageCid(java.lang.String,long)>','<com.android.server.wm.WindowContainer: void addChild(com.android.server.wm.WindowContainer,java.util.Comparator)>','<com.android.server.am.VrController: boolean onVrModeChanged(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowContainer: boolean hasContentToDisplay()>','<com.android.server.connectivity.NetworkNotificationManager: java.lang.String tagFor(int)>','<com.android.server.net.NetworkPolicyManagerService$AppIdleStateChangeListener: void <init>(com.android.server.net.NetworkPolicyManagerService,com.android.server.net.NetworkPolicyManagerService$1)>','<com.android.server.audio.AudioService: void access$9000(com.android.server.audio.AudioService,android.content.pm.UserInfo)>','<com.android.server.audio.AudioService: int[] access$10500(com.android.server.audio.AudioService)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>','<com.android.server.pm.IntentFilterVerificationState: java.util.ArrayList getFilters()>','<com.android.server.wm.AppTokenList: void <init>()>','<com.android.server.wm.AccessibilityController: void setMagnificationCallbacksLocked(android.view.WindowManagerInternal$MagnificationCallbacks)>','<com.android.server.pm.Settings: com.android.server.pm.PersistentPreferredIntentResolver editPersistentPreferredActivitiesLPw(int)>','<com.android.server.pm.PackageManagerService: void access$5800(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<com.android.server.TelephonyRegistry$Record: boolean matchOnSubscriptionsChangedListener()>','<com.android.server.usb.UsbAlsaManager: void usbDeviceRemoved(android.hardware.usb.UsbDevice)>','<com.android.server.am.ActivityStackSupervisor: int startActivityFromRecentsInner(int,android.os.Bundle)>','<com.android.server.usb.UsbService: void allowUsbDebugging(boolean,java.lang.String)>','<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void <clinit>()>','<com.android.server.location.GnssMeasurementsProvider$StatusChangedOperation: void execute(android.location.IGnssMeasurementsListener)>','<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void <init>()>','<com.android.server.wm.WindowAnimator: int getPendingLayoutChanges(int)>','<com.android.server.audio.AudioService$AudioServiceInternal: int getRingerModeInternal()>','<com.android.server.wm.WindowManagerService$7: void binderDied()>','<com.android.server.am.ActivityStack: boolean navigateUpToLocked(com.android.server.am.ActivityRecord,android.content.Intent,int,android.content.Intent)>','<com.android.server.usb.UsbSettingsManager: void <init>(android.content.Context)>','<com.android.server.usb.descriptors.UsbACInterface: byte getSubtype()>','<com.android.server.pm.UserManagerService: boolean isQuietModeEnabled(int)>','<com.android.server.firewall.StringFilter$ContainsFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void onDisplayAdded(int)>','<com.android.server.AlarmManagerService$UidObserver: void onUidActive(int)>','<com.android.server.wm.RootWindowContainer: int[] setDisplayOverrideConfigurationIfNeeded(android.content.res.Configuration,int)>','<com.android.server.statusbar.StatusBarManagerService: void onPanelHidden()>','<com.android.server.am.ActivityStackSupervisor: void access$100(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.am.ActivityStack: boolean updateLRUListLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityStackSupervisor: boolean isLastLockedTask(com.android.server.am.TaskRecord)>','<com.android.server.audio.AudioService$ScoClient: int totalCount()>','<com.android.server.am.BatteryStatsService$WakeupReasonThread: void run()>','<com.android.server.location.GnssLocationProvider$1: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>','<com.android.server.am.ActivityManagerService$Lifecycle: void onStart()>','<com.android.server.NsdService$ClientInfo: void <init>(com.android.server.NsdService,com.android.internal.util.AsyncChannel,android.os.Messenger,com.android.server.NsdService$1)>','<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>','<com.android.server.firewall.SenderPermissionFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.connectivity.NetworkMonitor: boolean access$1002(com.android.server.connectivity.NetworkMonitor,boolean)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: void stopOffloadControl()>','<com.android.server.connectivity.Nat464Xlat: void interfaceLinkStateChanged(java.lang.String,boolean)>','<com.android.server.IntentResolver: void <clinit>()>','<com.android.server.wm.AppTransition: void notifyProlongedAnimationsEnded()>','<com.android.server.wm.AppTransition: void setReady()>','<com.android.server.pm.PackageManagerService: java.io.File access$4200(com.android.server.pm.PackageManagerService,java.io.File,java.lang.String)>','<android.hardware.usb.V1_0.PortDataRole: java.lang.String toString(int)>','<com.android.server.audio.AudioService$4: void onDynamicPolicyMixStateUpdate(java.lang.String,int)>','<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: java.lang.String getSocketAddressString()>','<com.android.server.am.ActivityStackSupervisor: boolean printThisActivity(java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String,boolean,java.lang.String)>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack getDockedStackIgnoringVisibility()>','<com.android.server.audio.AudioService$AudioSystemThread: void run()>','<com.android.server.am.ActivityManagerService$28: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceMap access$200(com.android.server.am.ActiveServices,int)>','<com.android.server.audio.AudioService: boolean access$3300(com.android.server.audio.AudioService)>','<com.android.server.am.ActivityManagerService: boolean supportsLocalVoiceInteraction()>','<com.android.server.am.ActivityRecord: com.android.server.am.ConfigurationContainer getChildAt(int)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.wm.DockedStackDividerController: void setAdjustedForIme(boolean,boolean,boolean,com.android.server.wm.WindowState,int)>','<com.android.server.power.PowerManagerService$BinderService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.audio.AudioService: boolean access$7700(com.android.server.audio.AudioService)>','<com.android.server.wm.animation.CurvedTranslateAnimation: void <init>(android.graphics.Path)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>','<com.android.server.Watchdog$HandlerChecker: void addMonitor(com.android.server.Watchdog$Monitor)>','<com.android.server.connectivity.Vpn: boolean startAlwaysOnVpn()>','<com.android.server.am.EventLogTags: void writeAmProcStart(int,int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.SystemService: void onStopUser(int)>','<com.android.server.pm.KeySetManagerService: void addUpgradeKeySetsToPackageLPw(com.android.server.pm.PackageSetting,android.util.ArraySet)>','<com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>','<com.android.server.DeviceIdleController$BinderService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.wm.SurfaceControlWithBackground: void setLayerStack(int)>','<com.android.server.pm.PackageInstallerService: void onPrivateVolumeMounted(java.lang.String)>','<com.android.server.wm.TaskTapPointerEventListener: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent)>','<com.android.server.am.ActivityManagerService: void addBroadcastStatLocked(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.pm.PackageSettingBase: void setEnabledComponents(android.util.ArraySet,int)>','<com.android.server.wm.WallpaperController: int getAnimLayerAdjustment()>','<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>','<com.android.server.location.GnssStatusListenerHelper$4: void execute(android.os.IInterface)>','<com.android.server.am.ActivityManagerService$PendingAssistExtras: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,android.os.Bundle,android.content.Intent,java.lang.String,com.android.internal.os.IResultReceiver,android.os.Bundle,int)>','<com.android.server.wm.Session: boolean startMovingTask(android.view.IWindow,float,float)>','<com.android.server.pm.InstantAppRegistry: void onPackageInstalledLPw(android.content.pm.PackageParser$Package,int[])>','<com.android.server.audio.AudioService$AudioHandler$2: void <init>(com.android.server.audio.AudioService$AudioHandler)>','<com.android.server.am.ActivityStackSupervisor: void startSpecificActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.location.RemoteListenerHelper: java.util.Map access$100(com.android.server.location.RemoteListenerHelper)>','<com.android.server.wm.DisplayContent: void updateDisplayInfo()>','<com.android.server.pm.InstantAppRegistry: void onUserRemovedLPw(int)>','<com.android.server.wm.UnknownAppVisibilityController: void notifyLaunched(com.android.server.wm.AppWindowToken)>','<com.android.server.usb.UsbPortManager$RawPortInfo: void writeToParcel(android.os.Parcel,int)>','<com.android.server.InputMethodManagerService: boolean access$100(com.android.server.InputMethodManagerService)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$LocalHotspotState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$800(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>','<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>','<com.android.server.usb.UsbDeviceManager: java.lang.String[] access$902(com.android.server.usb.UsbDeviceManager,java.lang.String[])>','<com.android.server.wm.TaskSnapshotPersister$RemoveObsoleteFilesQueueItem: void write()>','<com.android.server.am.ActivityRecord: void setTaskToAffiliateWith(com.android.server.am.TaskRecord)>','<com.android.server.pm.UserManagerService: void makeInitialized(int)>','<com.android.server.connectivity.DataConnectionStats$1: void onDataActivity(int)>','<com.android.server.connectivity.NetworkAgentInfo: int numBackgroundNetworkRequests()>','<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(java.lang.String,long,int,android.content.pm.IPackageDataObserver)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>(com.android.server.usb.UsbDeviceManager,android.os.Looper)>','<com.android.server.pm.PackageManagerException: void <init>(java.lang.String)>','<com.android.server.am.ContentProviderRecord: boolean hasExternalProcessHandles()>','<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String,com.android.server.usb.UsbUserSettingsManager)>','<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>','<com.android.server.wm.Task: java.lang.String toShortString()>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$VolumeStreamState[] access$4700(com.android.server.audio.AudioService)>','<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context,java.lang.String)>','<com.android.server.location.GnssLocationProvider: void access$4900(com.android.server.location.GnssLocationProvider,int,int)>','<com.android.server.wm.ViewServer$ViewServerWorker: void windowsChanged()>','<com.android.server.input.InputManagerService$8: void <init>(com.android.server.input.InputManagerService,android.hardware.input.KeyboardLayout[])>','<com.android.server.audio.AudioService: int getUiSoundsStreamType()>','<com.android.server.location.LocationProviderProxy: com.android.server.ServiceWatcher access$600(com.android.server.location.LocationProviderProxy)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivities(java.util.List)>','<com.android.server.am.TaskRecord: void setFrontOfTask()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$InitialState: void enter()>','<com.android.server.pm.PackageManagerService$19: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.DeviceIdleController: int[] getAppIdWhitelistInternal()>','<com.android.server.wm.WindowManagerService: void setStrictModeVisualIndicatorPreference(java.lang.String)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState access$2000(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.WindowState: void setWillReplaceChildWindows()>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked(int)>','<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String,int,int)>','<com.android.server.connectivity.PacManager$3: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.hidl.base.V1_0.IBase$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.am.ActivityStackSupervisor: void removeSleepTimeouts()>','<com.android.server.usb.UsbHostManager: void setUsbDeviceConnectionHandler(android.content.ComponentName)>','<com.android.server.am.ActivityStackSupervisor: void resizePinnedStackLocked(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,int)>','<com.android.server.am.UserController: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>','<com.android.server.input.PersistentDataStore: java.lang.String getKeyboardLayout(java.lang.String,com.android.internal.inputmethod.InputMethodSubtypeHandle)>','<com.android.server.pm.PackageManagerService: void access$1400(com.android.server.pm.PackageManagerService,int,int,boolean,android.content.pm.PackageParser$Package)>','<android.hidl.base.V1_0.DebugInfo$Architecture: java.lang.String toString(int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setExternalSourcesPolicy(android.content.pm.PackageManagerInternal$ExternalSourcesPolicy)>','<com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler: void binderDied()>','<com.android.server.wm.WindowState: void setShowToOwnerOnlyLocked(boolean)>','<com.android.server.wm.DisplayContent: void beginImeAdjustAnimation()>','<com.android.server.LockGuard: void <clinit>()>','<com.android.server.wm.BoundsAnimationController: void access$400(com.android.server.wm.BoundsAnimationController)>','<com.android.server.location.RemoteListenerHelper: java.lang.String access$400(com.android.server.location.RemoteListenerHelper)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doPostDeleteLI(boolean)>','<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerService: void getProcessStatesAndOomScoresForPIDs(int[],int[],int[])>','<com.android.server.LocationManagerService$9: void <init>(com.android.server.LocationManagerService)>','<com.android.server.pm.UserRestrictionsUtils: void applyUserRestrictions(android.content.Context,int,android.os.Bundle,android.os.Bundle)>','<com.android.server.am.UserController$Injector$1: void <init>(com.android.server.am.UserController$Injector,com.android.server.am.ActivityManagerService,int,com.android.internal.util.ProgressReporter,boolean,java.lang.Runnable)>','<com.android.server.usb.UsbService: void clearDefaults(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>','<com.android.server.wm.AppTransition: boolean isFetchingAppTransitionsSpecs()>','<com.android.server.am.CoreSettingsObserver: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>','<com.android.server.am.ActiveServices: void updateForegroundApps(com.android.server.am.ActiveServices$ServiceMap)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$IntentFilterVerifier access$1500(com.android.server.pm.PackageManagerService)>','<com.android.server.pm.PackageManagerService$24: void run()>','<com.android.server.statusbar.StatusBarManagerService$1: void onCameraLaunchGestureDetected(int)>','<com.android.server.firewall.SenderPackageFilter: void <init>(java.lang.String)>','<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>','<com.android.server.am.ActivityStackSupervisor: void moveHomeStackToFront(java.lang.String)>','<com.android.server.ConnectivityService: void access$4200(com.android.server.ConnectivityService,android.net.Network,int,boolean)>','<android.hidl.base.V1_0.DebugInfo: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityManagerService: void pendingAssistExtrasTimedOut(com.android.server.am.ActivityManagerService$PendingAssistExtras)>','<com.android.server.am.ActivityManagerService: void waitForBroadcastIdle(java.io.PrintWriter)>','<com.android.server.connectivity.PacManager$1: void <init>(com.android.server.connectivity.PacManager)>','<com.android.server.EventLogTags: void writeWmTaskCreated(int,int)>','<com.android.server.wm.TaskSnapshotPersister: void onTaskRemovedFromRecents(int,int)>','<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>','<com.android.server.IntentResolver$IteratorWrapper: android.content.IntentFilter next()>','<com.android.server.pm.PackageInstallerService: int createSession(android.content.pm.PackageInstaller$SessionParams,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)>','<com.android.server.wm.WindowState: void setDragResizing()>','<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>','<com.android.server.wm.DimLayerController: void updateDimLayer(com.android.server.wm.DimLayer$DimLayerUser)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>','<com.android.server.wm.WindowState: boolean isVisible()>','<com.android.server.AttributeCache$Entry: void recycle()>','<android.net.util.SharedLog: void <init>(int,java.lang.String)>','<com.android.server.usb.UsbProfileGroupSettingsManager$1: void <init>(com.android.server.usb.UsbProfileGroupSettingsManager)>','<com.android.server.audio.AudioService: void registerRecordingCallback(android.media.IRecordingConfigDispatcher)>','<com.android.server.pm.UserManagerService: int getManagedProfileBadge(int)>','<com.android.server.audio.MediaFocusControl: void <init>(android.content.Context,com.android.server.audio.PlayerFocusEnforcer)>','<com.android.server.pm.PackageManagerService: void sendSessionCommitBroadcast(android.content.pm.PackageInstaller$SessionInfo,int)>','<com.android.server.usb.UsbUserSettingsManager: void <init>(android.content.Context,android.os.UserHandle)>','<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: int getStatusBarColorViewHeight()>','<com.android.server.wm.WindowToken: void removeAllWindowsIfPossible()>','<android.net.util.PrefixUtils: java.util.Set getNonForwardablePrefixes()>','<com.android.server.pm.PackageManagerService: boolean isSafeMode()>','<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>','<android.os.IInstalld$Stub$Proxy: void clearAppData(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.pm.PackageInstallerService: void updateSessionAppIcon(int,android.graphics.Bitmap)>','<com.android.server.location.GnssLocationProvider: long getStatusUpdateTime()>','<com.android.server.am.ActiveServices: android.util.ArrayMap getServicesLocked(int)>','<com.android.server.NetworkManagementService: boolean access$2000()>','<com.android.server.usb.UsbProfileGroupSettingsManager$MyPackageMonitor: void <init>(com.android.server.usb.UsbProfileGroupSettingsManager,com.android.server.usb.UsbProfileGroupSettingsManager$1)>','<com.android.server.wm.WindowManagerService: void onDisplayRemoved(int)>','<com.android.server.am.ActivityRecord: android.app.ActivityOptions getOptionsForTargetActivityLocked()>','<com.android.server.am.UserSwitchingDialog: void show()>','<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdminOnAnyUser(java.lang.String)>','<com.android.server.connectivity.PacManager$3: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.connectivity.PacManager$2: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.am.ActivityRecord: boolean isHomeActivity()>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean isAttachedLocked()>','<com.android.server.wm.WindowSurfacePlacer: void continueLayout()>','<com.android.server.net.LockdownVpnTracker: void init()>','<com.android.server.usb.descriptors.UsbASFormat: void <init>(int,byte,byte,byte,byte)>','<com.android.server.am.UriPermission$PersistedTimeComparator: void <init>()>','<com.android.server.am.ActivityStack: void awakeFromSleepingLocked()>','<com.android.server.wm.DisplaySettings: void getOverscanLocked(java.lang.String,java.lang.String,android.graphics.Rect)>','<android.net.util.IpUtils: boolean isValidUdpOrTcpPort(int)>','<com.android.server.audio.AudioService: void releasePlayer(int)>','<com.android.server.location.GnssLocationProvider: boolean access$1400(int)>','<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>','<com.android.server.connectivity.PacManager: void access$700(com.android.server.connectivity.PacManager)>','<com.android.server.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>','<com.android.server.AttributeCache: void init(android.content.Context)>','<com.android.server.Watchdog$1: void <init>(com.android.server.Watchdog,java.lang.String,java.lang.String,java.io.File)>','<com.android.server.audio.AudioService$AudioPolicyProxy: void connectMixes()>','<com.android.server.pm.Settings: java.util.List getVolumePackagesLPr(java.lang.String)>','<com.android.server.am.ActivityManagerService$LocalService: void clearSavedANRState()>','<com.android.server.net.LockdownVpnTracker$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String,java.lang.Throwable)>','<com.android.server.wm.DragAndDropPermissionsHandler: void release()>','<com.android.server.wm.WindowManagerService: void logSurface(com.android.server.wm.WindowState,java.lang.String,boolean)>','<com.android.server.am.ActiveServices: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityManagerService: boolean cleanupAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)>','<com.android.server.location.LocationFudger: float access$000(com.android.server.location.LocationFudger)>','<com.android.server.LocationManagerService: void access$2800(com.android.server.LocationManagerService,android.location.Location,boolean)>','<android.net.util.MultinetworkPolicyTracker: java.util.List access$100(android.net.util.MultinetworkPolicyTracker)>','<com.android.server.pm.PermissionsState$PermissionData: boolean updateFlags(int,int,int)>','<com.android.server.net.NetworkStatsService: void access$800(com.android.server.net.NetworkStatsService)>','<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord finishTopRunningActivityLocked(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.am.FactoryErrorDialog$1: void handleMessage(android.os.Message)>','<com.android.server.NetworkManagementService: void removeInterfaceAlert(java.lang.String)>','<com.android.server.wm.Watermark: void <init>(android.view.Display,android.util.DisplayMetrics,android.view.SurfaceSession,java.lang.String[])>','<com.android.server.wm.WindowState: boolean isWindowAnimationSet()>','<com.android.server.am.LaunchingTaskPositioner: void updateDefaultBounds(com.android.server.am.TaskRecord,java.util.ArrayList,android.content.pm.ActivityInfo$WindowLayout)>','<com.android.server.NetworkManagementService: void monitor()>','<com.android.server.wm.AppTransition: void setCurrentUser(int)>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread: void <init>(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.pm.PackageManagerService$DumpState: void setTitlePrinted(boolean)>','<com.android.server.am.ActivityManagerService: void resizePinnedStack(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.am.ActivityRecord: void setSleeping(boolean)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: void <init>(android.os.Handler,android.net.util.SharedLog)>','<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack getDockedStackLocked()>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void access$300(com.android.server.connectivity.tethering.UpstreamNetworkMonitor)>','<com.android.server.location.ActivityRecognitionProxy$1: void run()>','<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>','<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.DexManager$RegisterDexModuleResult registerDexModule(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>','<com.android.server.power.PowerManagerService$BinderService: void goToSleep(long,int,int)>','<com.android.server.wm.WindowSurfaceController: float getX()>','<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)>','<com.android.server.audio.AudioService: void setMasterMute(boolean,int,java.lang.String,int)>','<com.android.server.wm.WindowSurfaceController: void setCropInTransaction(android.graphics.Rect,boolean)>','<com.android.server.am.ActiveInstrumentation: java.lang.String toString()>','<com.android.server.wm.WindowState: java.lang.String getOwningPackage()>','<com.android.server.am.DumpHeapProvider: void <init>()>','<com.android.server.power.BatterySaverPolicy: void start(android.content.ContentResolver)>','<com.android.server.am.UserController$Injector: void clearBroadcastQueueForUserLocked(int)>','<com.android.server.connectivity.PacManager$PacRefreshIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityRecord: boolean isApplicationActivity()>','<com.android.server.DeviceIdleController: android.os.PowerManagerInternal access$600(com.android.server.DeviceIdleController)>','<com.android.server.pm.PackageManagerService$DumpState: boolean getTitlePrinted()>','<com.android.server.am.ActivityManagerShellCommand: int access$002(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.wm.WindowContainerController: void <init>(com.android.server.wm.WindowContainerListener,com.android.server.wm.WindowManagerService)>','<com.android.server.net.NetworkPolicyManagerService$NotificationId: void <init>(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkPolicy,int)>','<com.android.server.pm.CompilerStats: com.android.server.pm.CompilerStats$PackageStats getPackageStats(java.lang.String)>','<com.android.server.pm.CompilerStats$PackageStats: void <init>(java.lang.String)>','<com.android.server.audio.AudioService$VolumeStreamState: void <init>(com.android.server.audio.AudioService,java.lang.String,int,com.android.server.audio.AudioService$1)>','<com.android.server.AlarmManagerService$Constants: void updateAllowWhileIdleWhitelistDurationLocked()>','<com.android.server.audio.AudioService: void sendVolumeUpdate(int,int,int,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setVoiceInteractionPackagesProvider(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.am.ProcessStatsService: void shutdownLocked()>','<com.android.server.am.EventLogTags: void writeConfigurationChanged(int)>','<com.android.server.wm.WindowContainerController: void removeContainer()>','<com.android.server.DeviceIdleController$LocalService: boolean isAppOnWhitelist(int)>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>','<com.android.server.am.ActivityManagerService: void startSystemLockTaskMode(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$700(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,android.net.LinkProperties)>','<com.android.server.am.ActivityStack: void requestResize(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void grantDefaultPermissionsToDefaultSimCallManager(java.lang.String,int)>','<com.android.server.audio.AudioService: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>','<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>','<com.android.server.am.ActivityManagerService: void unstableProviderDied(android.os.IBinder)>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothDevice access$3000(com.android.server.audio.AudioService)>','<com.android.server.am.EventLogTags: void writeAmPss(int,int,java.lang.String,long,long,long)>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.connectivity.Vpn: com.android.server.connectivity.Vpn$Connection access$900(com.android.server.connectivity.Vpn)>','<com.android.server.am.ActivityManagerService: int appServicesRestrictedInBackgroundLocked(int,java.lang.String,int)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(int,com.android.server.connectivity.NetworkAgentInfo,boolean)>','<com.android.server.wm.AppTransition: android.view.animation.Animation loadAnimation(android.view.WindowManager$LayoutParams,int,boolean,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,int)>','<com.android.server.AppOpsService$Shell: int parseUserPackageOp(boolean,java.io.PrintWriter)>','<com.android.server.NativeDaemonConnectorException: int getCode()>','<com.android.server.connectivity.DataConnectionStats: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$1600(com.android.server.connectivity.Tethering$TetherMasterSM,int,com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<android.net.util.Stopwatch: void reset()>','<com.android.server.location.MockProvider: boolean isEnabled()>','<com.android.server.wm.TaskStack: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.connectivity.Nat464Xlat: void <clinit>()>','<com.android.server.pm.PermissionsState$PermissionData: boolean grant(int)>','<com.android.server.location.GnssLocationProvider: boolean access$4700()>','<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>','<com.android.server.NetworkManagementService$2: void <init>(com.android.server.NetworkManagementService,com.android.server.NetworkManagementService$IdleTimerParams)>','<com.android.server.am.ActivityManagerService: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>','<com.android.server.wm.TaskWindowContainerController: void requestResize(android.graphics.Rect,int)>','<android.hidl.base.V1_0.IBase$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.statusbar.StatusBarManagerService: void access$200(com.android.server.statusbar.StatusBarManagerService,boolean)>','<com.android.server.pm.Settings: void writeKernelMappingLPr(com.android.server.pm.PackageSetting)>','<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>','<android.hardware.configstore.V1_0.OptionalUInt64: java.lang.String toString()>','<com.android.server.pm.UserManagerService: boolean trySetQuietModeDisabled(int,android.content.IntentSender)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$700(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.wm.BoundsAnimationController: com.android.server.wm.BoundsAnimationController$BoundsAnimator animateBoundsImpl(com.android.server.wm.BoundsAnimationTarget,android.graphics.Rect,android.graphics.Rect,int,int,boolean,boolean)>','<com.android.server.usb.descriptors.ByteStream: void reverse(int)>','<com.android.server.am.ActivityRecord: void onWindowsGone()>','<com.android.server.am.ActivityManagerService: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>','<com.android.server.pm.Settings: void writeSigningKeySetLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>','<com.android.server.location.GnssStatusListenerHelper: com.android.server.location.RemoteListenerHelper$ListenerOperation getHandlerOperation(int)>','<com.android.server.AlarmManagerService$UidObserver: void onUidStateChanged(int,int,long)>','<com.android.server.location.GeofenceProxy$2: void <init>(com.android.server.location.GeofenceProxy)>','<com.android.server.wm.Task: void getDimBounds(android.graphics.Rect)>','<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void removeActivity(android.content.pm.PackageParser$Activity,java.lang.String)>','<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>','<com.android.server.am.ProcessRecord: void <init>(com.android.internal.os.BatteryStatsImpl,android.content.pm.ApplicationInfo,java.lang.String,int)>','<com.android.server.DeviceIdleController: void exitIdleInternal(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>','<com.android.server.wm.ScreenRotationAnimation: boolean stepAnimationLocked(long)>','<android.hardware.usb.V1_0.IUsb$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.input.InputManagerService$13: void <init>(com.android.server.input.InputManagerService,java.io.PrintWriter)>','<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties getProperties()>','<com.android.server.am.ActivityStack: void updateActivityApplicationInfoLocked(android.content.pm.ApplicationInfo)>','<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: void binderDied()>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte[] getControls()>','<com.android.server.pm.UserManagerService$LocalService: boolean getUserRestriction(int,java.lang.String)>','<com.android.server.am.ActivityStack: void access$000(com.android.server.am.ActivityStack,com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.pm.CompilerStats: com.android.server.pm.CompilerStats$PackageStats createPackageStats(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: int access$502(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.wm.DisplayContent: com.android.server.wm.PinnedStackController getPinnedStackController()>','<com.android.server.wm.DockedStackDividerController: void notifyDockedStackExistsChanged(boolean)>','<com.android.server.EventLogTags: void writeRestorePackage(java.lang.String,int)>','<com.android.server.input.InputManagerService: boolean filterInputEvent(android.view.InputEvent,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,android.os.UserHandle)>','<com.android.server.EventLogTags: void writeBackupStart(java.lang.String)>','<com.android.server.am.FactoryErrorDialog: void onStop()>','<com.android.server.audio.AudioService$AudioServiceInternal: void disableAudioForUid(boolean,int)>','<com.android.server.wm.SurfaceControlWithBackground: void setMatrix(float,float,float,float)>','<com.android.server.am.ActivityRecord: boolean changeWindowTranslucency(boolean)>','<com.android.server.LocationManagerService: android.os.PowerManager access$1800(com.android.server.LocationManagerService)>','<com.android.server.wm.WindowState: void handleWindowMovedIfNeeded()>','<com.android.server.wm.TaskStack: com.android.server.wm.Task findHomeTask()>','<com.android.server.pm.Settings$DatabaseVersion: void <init>()>','<com.android.server.audio.AudioService$SetModeDeathHandler: void <init>(com.android.server.audio.AudioService,android.os.IBinder,int)>','<com.android.server.statusbar.StatusBarManagerService$DisableRecord: void <init>(com.android.server.statusbar.StatusBarManagerService,com.android.server.statusbar.StatusBarManagerService$1)>','<com.android.server.ConnectivityService: void unregisterNetworkFactory(android.os.Messenger)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onFinishPackageChanges()>','<com.android.server.NetworkManagementService: void setInterfaceIpv6NdOffload(java.lang.String,boolean)>','<com.android.server.location.GnssLocationProvider$13: void <init>(com.android.server.location.GnssLocationProvider,android.location.GnssMeasurementsEvent)>','<com.android.server.SystemServiceManager: void stopUser(int)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: void <init>(int,byte,byte)>','<com.android.server.wm.WindowManagerService: int getCameraLensCoverState()>','<com.android.server.RescueParty$BootThreshold: int getCount()>','<com.android.server.pm.PackageManagerService$OnPermissionChangeListeners: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: void keyguardGoingAway(int)>','<com.android.server.am.BatteryStatsService: void notePhoneOn()>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskDescriptionChanged(int,android.app.ActivityManager$TaskDescription)>','<com.android.server.ConnectivityService: void startNattKeepalive(android.net.Network,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String)>','<com.android.server.wm.WindowStateAnimator: void destroySurface()>','<com.android.server.pm.PackageManagerService$DumpState: boolean isDumping(int)>','<android.net.INetd$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.am.ActivityManagerShellCommand: int runStopService(java.io.PrintWriter)>','<com.android.server.InputMethodManagerService$SessionState: java.lang.String toString()>','<com.android.server.wm.WindowManagerService: boolean isValidPictureInPictureAspectRatio(int,float)>','<com.android.server.am.TaskPersister: android.util.SparseBooleanArray loadPersistedTaskIdsForUser(int)>','<com.android.server.am.DumpHeapProvider: boolean onCreate()>','<com.android.server.AlarmManagerService$Alarm: void <init>(int,long,long,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,int,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>','<com.android.server.ServiceWatcher$2: void onPackageAdded(java.lang.String,int)>','<com.android.server.TelephonyRegistry: void notifyCellLocationForSubscriber(int,android.os.Bundle)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: long decrRefCountLPw()>','<com.android.server.am.ActiveInstrumentation: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.power.PowerManagerService: int access$2302(com.android.server.power.PowerManagerService,int)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void unlinkDeathRecipient()>','<com.android.server.pm.PackageInstallerService: void <clinit>()>','<com.android.server.connectivity.Vpn$SystemServices: android.app.PendingIntent pendingIntentGetActivityAsUser(android.content.Intent,int,android.os.UserHandle)>','<com.android.server.NetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.wm.DisplayContent: boolean animateForIme(float,float,float)>','<com.android.server.location.GnssLocationProvider$8: void unregisterFromService()>','<com.android.server.PinnerService: void onSwitchUser(int)>','<com.android.server.pm.PackageManagerService: boolean access$4400(com.android.server.pm.PackageManagerService,java.lang.String)>','<com.android.server.am.ActivityManagerService: void suppressResizeConfigChanges(boolean)>','<com.android.server.EventLogTags: void writeBootProgressSystemRun(long)>','<com.android.server.am.ActivityStackSupervisor: void setRecentTasks(com.android.server.am.RecentTasks)>','<com.android.server.DeviceIdleController: void checkTempAppWhitelistTimeout(int)>','<com.android.server.wm.DockedStackDividerController: void setTouchRegion(android.graphics.Rect)>','<com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>','<com.android.server.usb.descriptors.UsbHIDDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.input.InputManagerService$9: void <init>(com.android.server.input.InputManagerService,android.hardware.input.KeyboardLayout[])>','<com.android.server.wm.WindowState: boolean hasVisibleNotDrawnWallpaper()>','<com.android.server.am.RecentTasks: void onSystemReadyLocked()>','<com.android.server.wm.AppWindowToken: void onParentSet()>','<com.android.server.wm.EmulatorDisplayOverlay: void <init>(android.content.Context,android.view.Display,android.view.SurfaceSession,int)>','<com.android.server.wm.AppWindowContainerController: android.content.res.Configuration setOrientation(int,int,android.content.res.Configuration,boolean)>','<com.android.server.wm.PinnedStackController: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent)>','<android.hardware.configstore.V1_0.OptionalInt64: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.connectivity.tethering.TetheringConfiguration: void <init>(android.content.Context,android.net.util.SharedLog)>','<com.android.server.wm.InputConsumerImpl: void layout(int,int)>','<com.android.server.wm.WindowManagerService: boolean startMovingTask(android.view.IWindow,float,float)>','<com.android.server.wm.TaskStack: boolean isAnimatingBoundsToFullscreen()>','<com.android.server.pm.PackageManagerService: void startCleaningPackages()>','<com.android.server.wm.WindowState: void disposeInputChannel()>','<com.android.server.am.UserController: boolean isLockScreenDisabled(int)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppResolverComponent()>','<com.android.server.EventLogTags: void writeBackupInitialize()>','<com.android.server.pm.PackageManagerService: java.lang.String getServicesSystemSharedLibraryPackageName()>','<com.android.server.am.ActivityManagerService: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>','<com.android.server.wm.DockedStackDividerController: java.lang.String toShortString()>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>','<com.android.server.AnyMotionDetector$3: void <init>(com.android.server.AnyMotionDetector)>','<com.android.server.am.ActivityStackSupervisor: void cleanupActivity(com.android.server.am.ActivityRecord)>','<com.android.server.am.TaskPersister: void access$400(com.android.server.am.TaskPersister)>','<com.android.server.am.TaskRecord: boolean onlyHasTaskOverlayActivities(boolean)>','<com.android.server.usb.UsbProfileGroupSettingsManager: java.lang.String access$000()>','<com.android.server.net.NetworkPolicyManagerService$ProcStateSeqHistory: void addProcStateSeqUL(int,long)>','<com.android.server.pm.PackageManagerService$1: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.firewall.SenderFilter$1: void <init>(java.lang.String)>','<com.android.server.pm.PackageManagerService$IntentVerifierProxy: void receiveVerificationResponse(int)>','<com.android.server.SystemServiceManager: void unlockUser(int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.audio.AudioService$VolumeController: void postDisplaySafeVolumeWarning(int)>','<com.android.server.am.ActivityManagerService: void stopAssociationLocked(int,java.lang.String,int,android.content.ComponentName)>','<com.android.server.pm.PackageManagerService: void access$3100(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,int[])>','<com.android.server.wm.DragState: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,android.view.SurfaceControl,int,android.os.IBinder)>','<com.android.server.usb.descriptors.ByteStream: void <init>(byte[])>','<com.android.server.wm.StackWindowController: void <init>(int,com.android.server.wm.StackWindowListener,int,boolean,android.graphics.Rect,com.android.server.wm.WindowManagerService)>','<com.android.server.am.ActivityManagerService$AppDeathRecipient: void binderDied()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int,int)>','<com.android.server.location.GeofenceManager: void onLocationChanged(android.location.Location)>','<com.android.server.wm.WindowManagerService: void setForcedDisplayScalingMode(int,int)>','<com.android.server.wm.AppWindowToken: void removeReplacedWindowIfNeeded(com.android.server.wm.WindowState)>','<com.android.server.wm.Session: void windowRemovedLocked()>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: boolean equals(java.lang.Object)>','<com.android.server.AlarmManagerService$Alarm: void dump(java.io.PrintWriter,java.lang.String,long,long,java.text.SimpleDateFormat)>','<com.android.server.location.GnssLocationProvider: boolean access$2300(com.android.server.location.GnssLocationProvider)>','<com.android.server.InputMethodManagerService: void finishInput(com.android.internal.view.IInputMethodClient)>','<com.android.server.audio.AudioService: int[] access$4000()>','<com.android.server.net.NetworkStatsService: void systemReady()>','<com.android.server.am.ActivityStackSupervisor: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String)>','<com.android.server.connectivity.NetworkNotificationManager: void clearNotification(int)>','<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>','<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void release()>','<com.android.server.am.ActivityManagerService: void access$1500(com.android.server.am.ActivityManagerService,java.lang.String,int)>','<com.android.server.wm.WallpaperWindowToken: void updateWallpaperOffset(int,int,boolean)>','<com.android.server.am.ActivityManagerService: void forceStopPackage(java.lang.String,int)>','<com.android.server.pm.Installer: void markBootComplete(java.lang.String)>','<com.android.server.power.ShutdownThread: void <clinit>()>','<com.android.server.wm.WindowContainer: void setWaitingForDrawnIfResizingChanged()>','<com.android.server.am.EventLogTags: void writeAmUserStateChanged(int,int)>','<com.android.server.location.LocationRequestStatistics$PackageProviderKey: void <init>(java.lang.String,java.lang.String)>','<android.net.util.IpUtils: void <init>()>','<com.android.server.location.PassiveProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.location.RemoteListenerHelper: boolean addListener(android.os.IInterface)>','<com.android.server.wm.WindowState: void adjustStartingWindowFlags()>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void run()>','<com.android.server.wm.DisplayContent: boolean fillsParent()>','<com.android.server.wm.TaskSnapshotPersister: boolean access$700(com.android.server.wm.TaskSnapshotPersister,int)>','<com.android.server.connectivity.KeepaliveTracker: void notifyMessenger(android.os.Messenger,int,int)>','<com.android.server.location.GnssStatusListenerHelper$3: void <init>(com.android.server.location.GnssStatusListenerHelper,int)>','<com.android.server.usb.UsbHostManager: void <clinit>()>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.pm.DefaultPermissionGrantPolicy: android.util.ArrayMap access$100(com.android.server.pm.DefaultPermissionGrantPolicy)>','<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.DeviceIdleController: boolean registerMaintenanceActivityListener(android.os.IMaintenanceActivityListener)>','<com.android.server.am.ActivityManagerService$16: void binderDied()>','<com.android.server.am.ActivityStackSupervisor: boolean removeTaskByIdLocked(int,boolean,boolean)>','<com.android.server.am.VrController: void onSystemReady()>','<com.android.server.location.GnssLocationProvider: boolean access$4500(long,boolean)>','<com.android.server.pm.Settings: void readUsesStaticLibLPw(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PackageSetting)>','<com.android.server.wm.DisplayContent: int getLastWindowForcedOrientation()>','<com.android.server.pm.PackageVerificationState: boolean setVerifierResponse(int,int)>','<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int)>','<com.android.server.am.ActivityManagerService: void dumpPermissionsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.pm.PackageManagerService$InstallParams: void handleServiceError()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,java.lang.String[])>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: java.lang.String toString()>','<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo getInternalVersion()>','<com.android.server.am.ActivityManagerService$LocalService: void notifyAppTransitionStarting(android.util.SparseIntArray,long)>','<com.android.server.LocationManagerService: android.app.ActivityManager access$2600(com.android.server.LocationManagerService)>','<com.android.server.pm.PackageManagerService: void installStage(java.lang.String,java.io.File,java.lang.String,android.content.pm.IPackageInstallObserver2,android.content.pm.PackageInstaller$SessionParams,java.lang.String,int,android.os.UserHandle,java.security.cert.Certificate[][])>','<com.android.server.ConnectivityService: com.android.internal.net.VpnInfo[] getAllVpnInfo()>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setLayerStack(int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getSerialNum()>','<com.android.server.wm.DisplayContent: void adjustForImeIfNeeded()>','<com.android.server.connectivity.NetworkDiagnostics$Measurement: void <init>(com.android.server.connectivity.NetworkDiagnostics)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void onDefaultRuntimePermissionsGrantedLPr(int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<com.android.server.wm.WindowToken: boolean isEmpty()>','<com.android.server.pm.UserDataPreparer: java.io.File getDataUserCeDirectory(java.lang.String,int)>','<com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getDefaultCompilerFilter()>','<com.android.server.audio.AudioService: java.lang.String makeAlsaAddressString(int,int)>','<com.android.server.InputMethodManagerService: com.android.server.InputMethodManagerService$InputMethodFileManager access$400(com.android.server.InputMethodManagerService)>','<android.hidl.base.V1_0.IBase$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.audio.FocusRequester: android.media.AudioAttributes getAudioAttributes()>','<android.hardware.usb.V1_1.PortMode_1_1: java.lang.String toString(int)>','<com.android.server.statusbar.StatusBarManagerService: void disable2ForUser(int,android.os.IBinder,java.lang.String,int)>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void exit()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void drawIfNeeded()>','<com.android.server.am.AppErrors: void clearBadProcessLocked(android.content.pm.ApplicationInfo)>','<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo access$7100(com.android.server.pm.PackageManagerService,android.content.ComponentName,int,int,int)>','<com.android.server.am.ActivityManagerService: void bootAnimationComplete()>','<com.android.server.DeviceIdleController: void reportMaintenanceActivityIfNeededLocked()>','<com.android.server.InputMethodManagerService$SettingsObserver: java.lang.String toString()>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>','<android.hardware.usb.V1_0.IUsb$Proxy: void ping()>','<com.android.server.am.ActivityStack: java.util.ArrayList getDumpActivitiesLocked(java.lang.String)>','<com.android.server.wm.WindowToken: int getAnimLayerAdjustment()>','<com.android.server.wm.WindowManagerService: void reboot(boolean)>','<com.android.server.pm.KeySetManagerService: void writePublicKeysLPr(org.xmlpull.v1.XmlSerializer)>','<com.android.server.pm.PackageManagerService: boolean isHistoricalPackageUsageAvailable()>','<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent getDisplayContent()>','<com.android.server.pm.Installer: void createOatDir(java.lang.String,java.lang.String)>','<com.android.server.RescueParty: void notePersistentAppCrash(android.content.Context,int)>','<com.android.server.am.EventLogTags: void writeAmOnPausedCalled(int,java.lang.String,java.lang.String)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onStoppedError()>','<com.android.server.wm.PinnedStackController: com.android.internal.policy.PipSnapAlgorithm access$800(com.android.server.wm.PinnedStackController)>','<com.android.server.am.ActivityManagerService: void performAppGcsIfAppropriateLocked()>','<com.android.server.pm.KeySetManagerService: void readPublicKeyLPw(org.xmlpull.v1.XmlPullParser)>','<com.android.server.pm.PackageSettingBase: int getInstallReason(int)>','<com.android.server.connectivity.Vpn$Connection: android.os.IBinder access$100(com.android.server.connectivity.Vpn$Connection)>','<com.android.server.wm.AppWindowToken: boolean isAnimatingInvisibleWithSavedSurface()>','<com.android.server.AlarmManagerService$DeliveryTracker: void alarmComplete(android.os.IBinder)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1100(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.wm.WindowState: boolean clearAnimatingWithSavedSurface()>','<com.android.server.AppOpsService$ClientRestrictionState: boolean setRestriction(int,boolean,java.lang.String[],int)>','<com.android.server.audio.AudioService$ScoClient: void decCount()>','<com.android.server.pm.dex.PackageDexUsage: void read(java.io.Reader)>','<com.android.server.power.PowerManagerService$2: void onDisplayStateChange(int)>','<com.android.server.statusbar.StatusBarManagerService$1: void appTransitionFinished()>','<com.android.server.statusbar.StatusBarManagerService: void registerStatusBar(com.android.internal.statusbar.IStatusBar,java.util.List,java.util.List,int[],java.util.List,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region access$300(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.am.BatteryStatsService: void noteWifiOff()>','<com.android.server.am.ActivityRecord: boolean isMainIntent(android.content.Intent)>','<com.android.server.EventLogTags: void writeBootProgressPmsSystemScanStart(long)>','<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>','<com.android.server.wm.WindowStateAnimator: boolean isAnimationSet()>','<com.android.server.am.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.wm.WindowContainer: void resetDragResizingChangeReported()>','<com.android.server.usb.UsbPortManager: void setPortRoles(java.lang.String,int,int,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.audio.MediaFocusControl: void setDuckingInExtPolicyAvailable(boolean)>','<com.android.server.pm.UserManagerService: void applyUserRestrictionsForAllUsersLR()>','<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int,int,boolean,boolean)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityMetricsLogger: void notifyWindowsDrawn(int,long)>','<com.android.server.audio.AudioService$ScoClient: int getCount()>','<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>','<com.android.server.TelephonyRegistry$1: void handleMessage(android.os.Message)>','<com.android.server.wm.PinnedStackWindowController: void animateResizePinnedStack(android.graphics.Rect,android.graphics.Rect,int,boolean)>','<com.android.server.pm.PackageManagerService: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void updateTimeout(android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: boolean setUpstreamParameters(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList)>','<android.hardware.configstore.V1_0.OptionalUInt64: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool startGraphicsAllocatorService()>','<com.android.server.InputMethodManagerService$LocalServiceImpl: void switchInputMethod(boolean)>','<com.android.server.pm.UserManagerService$6: void <init>(com.android.server.pm.UserManagerService,int)>','<com.android.server.power.PowerManagerService$UserSwitchedReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.SystemServiceManager: void setSafeMode(boolean)>','<com.android.server.pm.PackageManagerService: void sendPackageAddedForNewUsers(java.lang.String,boolean,int,int[])>','<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>','<com.android.server.pm.PackageInstallerService: java.io.File access$1000(com.android.server.pm.PackageInstallerService,int)>','<android.net.INetd$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.InputMonitor,android.os.Looper,java.lang.String,android.view.InputEventReceiver$Factory)>','<com.android.server.power.Notifier$1: void <init>(com.android.server.power.Notifier,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.pm.PackageManagerService: boolean updateIntentVerificationStatus(java.lang.String,int,int)>','<com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>','<com.android.server.usb.descriptors.UsbACSelectorUnit: byte[] getSourceIDs()>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void <init>()>','<com.android.server.wm.DisplayContent: com.android.server.wm.Task findTaskForResizePoint(int,int)>','<com.android.server.connectivity.Vpn: int access$000(com.android.server.connectivity.Vpn)>','<com.android.server.wm.WindowState: boolean setReportResizeHints()>','<com.android.server.AlarmManagerService$BatchTimeOrder: int compare(com.android.server.AlarmManagerService$Batch,com.android.server.AlarmManagerService$Batch)>','<com.android.server.power.PowerManagerService$LocalService: void setDeviceIdleWhitelist(int[])>','<com.android.server.wm.WindowSurfaceController: boolean setSizeInTransaction(int,int,boolean)>','<com.android.server.usb.UsbHostManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ActivityManagerService,android.content.pm.ProviderInfo,android.content.pm.ApplicationInfo,android.content.ComponentName,boolean)>','<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistAppInternal(java.lang.String)>','<com.android.server.pm.Settings: void setInstallerPackageName(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStack: boolean isAssistantStack()>','<com.android.server.am.UserController: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>','<com.android.server.wm.DisplayContent: android.view.Display getDisplay()>','<com.android.server.pm.PermissionsState$PermissionState: boolean isGranted()>','<com.android.server.pm.PackageManagerService$InstallParams: java.lang.String toString()>','<com.android.server.am.ActiveServices$1: void <init>(com.android.server.am.ActiveServices)>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityLaunchOnSecondaryDisplayFailed()>','<com.android.server.am.TaskChangeNotificationController: void notifyPinnedStackAnimationEnded()>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbProfileGroupSettingsManager access$1000(com.android.server.usb.UsbDeviceManager)>','<android.hardware.usb.V1_0.PortRole: void <init>()>','<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getConfigIndex()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long,int,int)>','<com.android.server.am.ActivityManagerService: android.os.Bundle getAssistContextExtras(int)>','<com.android.server.wm.WindowState: void access$200(com.android.server.wm.WindowState,boolean)>','<com.android.server.DeviceIdleController: void resetLightIdleManagementLocked()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setMatrix(float,float,float,float)>','<com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>','<com.android.server.audio.AudioService: int access$4800(com.android.server.audio.AudioService,int,int,int)>','<com.android.server.am.UserController: void <init>(com.android.server.am.UserController$Injector)>','<com.android.server.am.ActivityMetricsLogger: void notifyVisibilityChanged(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.EventLogTags: void writePowerScreenState(int,int,long,int,int)>','<com.android.server.wm.PinnedStackWindowController: android.graphics.Rect getPictureInPictureBounds(float,android.graphics.Rect)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityDisplay getChildAt(int)>','<com.android.server.statusbar.StatusBarManagerService$5: void run()>','<com.android.server.wm.AppTransition: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>','<com.android.server.wm.WindowState: void setForceHideNonSystemOverlayWindowIfNeeded(boolean)>','<com.android.server.TelephonyRegistry$Record: void <init>(com.android.server.TelephonyRegistry$1)>','<com.android.server.am.AppErrorDialog: void onStop()>','<com.android.server.wm.WindowManagerService: boolean viewServerListWindows(java.net.Socket)>','<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void addInstrumentationResultsLocked(com.android.server.am.ProcessRecord,android.os.Bundle)>','<com.android.server.am.ActivityStack: void sendActivityResultLocked(int,com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<com.android.server.wm.SnapshotStartingData: android.view.WindowManagerPolicy$StartingSurface createStartingSurface(com.android.server.wm.AppWindowToken)>','<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getVpnConfig()>','<com.android.server.wm.AppTransition: android.view.animation.Animation loadAnimationAttr(android.view.WindowManager$LayoutParams,int)>','<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>','<android.os.IInstalld$Stub$Proxy: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])>','<com.android.server.audio.AudioService$4: void <init>(com.android.server.audio.AudioService)>','<com.android.server.wm.TaskSnapshotPersister: void start()>','<com.android.server.connectivity.NetworkDiagnostics$DnsUdpCheck: void run()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$SchemesIterGenerator: java.util.Iterator generate(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.wm.animation.ClipRectLRAnimation: void <init>(int,int,int,int)>','<com.android.server.wm.ViewServer: boolean isRunning()>','<com.android.server.audio.AudioService: boolean isStreamAffectedByMute(int)>','<com.android.server.InputMethodManagerService$Lifecycle: void onBootPhase(int)>','<com.android.server.location.FusedProxy: com.android.server.location.FusedLocationHardwareSecure access$000(com.android.server.location.FusedProxy)>','<com.android.server.pm.PackageManagerService: int updateFlagsForResolve(int,int,android.content.Intent,int,boolean,boolean)>','<com.android.server.input.InputManagerService: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>','<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)>','<com.android.server.audio.AudioService$AudioServiceBroadcastReceiver: void <init>(com.android.server.audio.AudioService,com.android.server.audio.AudioService$1)>','<com.android.server.am.UriPermission: void initPersistedModes(int,long)>','<com.android.server.wm.TaskSnapshotPersister: void <init>(com.android.server.wm.TaskSnapshotPersister$DirectoryResolver)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void notifySyspropsChanged()>','<com.android.server.am.ActivityManagerService: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>','<com.android.server.NsdService: boolean access$2900(com.android.server.NsdService,int)>','<com.android.server.wm.BoundsAnimationController$AppTransitionNotifier: void <init>(com.android.server.wm.BoundsAnimationController,com.android.server.wm.BoundsAnimationController$1)>','<com.android.server.wm.AppWindowToken: void stopUsingSavedSurfaceLocked()>','<com.android.server.wm.WindowState: boolean canReceiveTouchInput()>','<com.android.server.pm.PackageManagerService$29: void <init>(com.android.server.pm.PackageManagerService,java.lang.String)>','<com.android.server.wm.WindowStateAnimator: boolean applyAnimationLocked(int,boolean)>','<com.android.server.wm.WindowState: float translateToWindowX(float)>','<com.android.server.net.NetworkStatsService: void forceUpdateIfaces()>','<com.android.server.pm.PackageDexOptimizer: void dumpDexoptState(com.android.internal.util.IndentingPrintWriter,android.content.pm.PackageParser$Package)>','<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle mergeAll(android.util.SparseArray)>','<com.android.server.DeviceIdleController: void stepLightIdleStateLocked(java.lang.String)>','<com.android.server.wm.DisplayContent: java.lang.String toString()>','<android.os.IInstalld$Stub$Proxy: long[] getExternalSize(java.lang.String,int,int,int[])>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setAlpha(float)>','<android.hardware.usb.V1_0.PortRole: java.lang.String toString()>','<com.android.server.audio.AudioService: boolean access$5100(com.android.server.audio.AudioService)>','<com.android.server.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>','<com.android.server.location.GnssStatusListenerHelper: void <init>(android.os.Handler)>','<com.android.server.net.NetworkPolicyManagerService$NotificationId: int getId()>','<android.hidl.base.V1_0.IBase$Proxy: java.lang.String toString()>','<android.net.util.SharedLog: void e(java.lang.String)>','<com.android.server.am.ActivityManagerService$LocalService: void setVr2dDisplayId(int)>','<com.android.server.am.ActivityManagerService$ProcessInfoService: void <init>(com.android.server.am.ActivityManagerService)>','<android.hidl.base.V1_0.IBase$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.power.PowerManagerService: void onStart()>','<com.android.server.wm.WindowManagerThreadPriorityBooster: void <init>()>','<com.android.server.NetworkManagementService: void shutdown()>','<com.android.server.am.ActivityManagerService: void showLockTaskEscapeMessage(android.os.IBinder)>','<com.android.server.wm.AppWindowContainerController: boolean keyDispatchingTimedOut(java.lang.String,int)>','<com.android.server.wm.DisplayContent: boolean isRemovalDeferred()>','<com.android.server.statusbar.StatusBarManagerService: void setSystemUiVisibility(int,int,java.lang.String)>','<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void setUpstreamParameters(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,android.hardware.tetheroffload.control.V1_0.IOffloadControl$setUpstreamParametersCallback)>','<com.android.server.am.ActivityManagerService: void <init>(com.android.server.am.ActivityManagerService$Injector)>','<com.android.server.pm.dex.DexManager: boolean dexoptSecondaryDex(java.lang.String,java.lang.String,boolean)>','<com.android.server.connectivity.tethering.SimChangeListener: boolean access$200(com.android.server.connectivity.tethering.SimChangeListener,java.lang.String)>','<com.android.server.power.Notifier: void onWakeLockChanging(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String,int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>','<com.android.server.LocationManagerService$Receiver: void clearPendingBroadcastsLocked()>','<android.hardware.usb.V1_1.PortMode_1_1: java.lang.String dumpBitfield(int)>','<com.android.server.audio.RotationHelper$AudioDisplayListener: void onDisplayAdded(int)>','<com.android.server.am.ActivityManagerShellCommand$1: boolean handleOption(java.lang.String,android.os.ShellCommand)>','<com.android.server.InputMethodManagerService$5: void onClick(android.content.DialogInterface,int)>','<com.android.server.usb.UsbMidiDevice: java.io.FileInputStream[] access$600(com.android.server.usb.UsbMidiDevice)>','<com.android.server.wm.AppTransition: void registerListenerLocked(android.view.WindowManagerInternal$AppTransitionListener)>','<android.net.ip.RouterAdvertisementDaemon: void stop()>','<com.android.server.wm.WindowSurfaceController: void reparentChildrenInTransaction(com.android.server.wm.WindowSurfaceController)>','<com.android.server.am.TaskChangeNotificationController: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStackSupervisor,android.os.Handler)>','<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.wm.DimLayer: void hide()>','<com.android.server.wm.WindowStateAnimator: void detachChildren()>','<com.android.server.am.ActivityManagerShellCommand: int runIsUserStopped(java.io.PrintWriter)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void deviceAttached(android.hardware.usb.UsbDevice)>','<com.android.server.am.ActivityStackSupervisor$WaitInfo: boolean matches(android.content.ComponentName)>','<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>','<com.android.server.connectivity.Vpn$Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.RescueParty: void <clinit>()>','<com.android.server.am.ActivityManagerService$GrantUri: boolean equals(java.lang.Object)>','<com.android.server.wm.WindowStateAnimator: boolean isAnimationStarting()>','<com.android.server.am.BatteryStatsService: void noteDeviceIdleMode(int,java.lang.String,int)>','<com.android.server.am.BroadcastStats: boolean dumpStats(java.io.PrintWriter,java.lang.String,java.lang.String)>','<android.net.util.IpUtils: java.lang.String addressAndPortToString(java.net.InetAddress,int)>','<com.android.server.am.ActivityManagerService: boolean matchesProvider(android.net.Uri,android.content.pm.ProviderInfo)>','<com.android.server.pm.Installer: void invalidateMounts()>','<com.android.server.pm.IntentFilterVerificationState: void <init>(int,int,java.lang.String)>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>','<com.android.server.connectivity.tethering.OffloadController: java.util.HashMap access$500(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.am.PreBootBroadcaster: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getMfgIndex()>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean access$200(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,boolean)>','<com.android.server.PinnerService$BinderService: void <init>(com.android.server.PinnerService,com.android.server.PinnerService$1)>','<android.hidl.base.V1_0.IBase$Stub: java.util.ArrayList getHashChain()>','<com.android.server.pm.PackageManagerService$23: void run()>','<com.android.server.statusbar.StatusBarManagerService$1: void cancelPreloadRecentApps()>','<com.android.server.pm.PackageInstallerSession: void <init>(com.android.server.pm.PackageInstallerService$InternalCallback,android.content.Context,com.android.server.pm.PackageManagerService,android.os.Looper,int,int,java.lang.String,int,android.content.pm.PackageInstaller$SessionParams,long,java.io.File,java.lang.String,boolean,boolean)>','<com.android.server.am.ProcessList: void remove(int)>','<com.android.server.pm.PackageManagerService: java.util.List access$6702(com.android.server.pm.PackageManagerService,java.util.List)>','<com.android.server.am.BatteryStatsService: void noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputLocked(int,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int)>','<com.android.server.am.EventLogTags: void writeAmBroadcastDiscardApp(int,int,java.lang.String,int,java.lang.String)>','<com.android.server.am.TaskRecord: boolean supportsSplitScreen()>','<com.android.server.power.PowerManagerService: boolean access$5200(com.android.server.power.PowerManagerService)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionSubClass()>','<com.android.server.am.UriPermissionOwner: android.os.Binder getExternalTokenLocked()>','<com.android.server.NetworkManagementService: boolean isTetheringStarted()>','<com.android.server.power.WirelessChargerDetector$1: void onAccuracyChanged(android.hardware.Sensor,int)>','<com.android.server.location.LocationRequestStatistics: void stopRequesting(java.lang.String,java.lang.String)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getAlternateSetting()>','<com.android.server.usb.descriptors.UsbConfigDescriptor: void <init>(int,byte)>','<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,boolean)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: boolean access$1100(android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.audio.AudioService: int access$10608(com.android.server.audio.AudioService)>','<com.android.server.wm.WindowManagerService: boolean canDispatchPointerEvents()>','<com.android.server.am.ActivityManagerService: void finishRunningVoiceLocked()>','<com.android.server.location.FusedLocationHardwareSecure: void updateBatchingOptions(int,android.location.FusedBatchOptions)>','<com.android.server.power.PowerManagerService: int access$1100(com.android.server.power.PowerManagerService)>','<android.net.util.NetdService: void run(android.net.util.NetdService$NetdCommand)>','<com.android.server.am.ActivityManagerService$ProcessInfoService: void getProcessStatesFromPids(int[],int[])>','<com.android.server.am.ActivityStackSupervisor: boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.am.ActivityManagerShellCommand: int runSetInactive(java.io.PrintWriter)>','<com.android.server.am.TaskRecord: boolean reparent(int,boolean,int,boolean,boolean,java.lang.String)>','<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>','<com.android.server.am.ActivityMetricsLogger: void <clinit>()>','<com.android.server.pm.PackageManagerService$PackageParserCallback: java.lang.String[] getOverlayPaths(java.lang.String,java.lang.String)>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: int access$000(com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem)>','<com.android.server.am.ActivityManagerService$FontScaleSettingObserver: void onChange(boolean,android.net.Uri,int)>','<com.android.server.am.ActivityManagerService: void setUserIsMonkey(boolean)>','<com.android.server.power.PowerManagerService$Constants: void start(android.content.ContentResolver)>','<com.android.server.pm.Settings$RestoredPermissionGrant: void <init>(com.android.server.pm.Settings,java.lang.String,boolean,int)>','<com.android.server.am.TaskPersister: android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)>','<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager,android.net.metrics.IpConnectivityLog)>','<com.android.server.input.PersistentDataStore: boolean setCurrentKeyboardLayout(java.lang.String,java.lang.String)>','<com.android.server.pm.Policy$PolicyBuilder: com.android.server.pm.Policy$PolicyBuilder setGlobalSeinfoOrThrow(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: void <init>(com.android.server.net.NetworkPolicyManagerService,com.android.server.net.NetworkPolicyManagerService$1)>','<com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo: void <init>(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>','<com.android.server.am.ActivityRecord: void clearVoiceSessionLocked()>','<com.android.server.EventLogTags: void writeBatteryDischarge(long,int,int)>','<com.android.server.wm.BlackFrame: void clearMatrix()>','<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void checkEmbeddedAllowedInner(int,android.content.Intent,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean requestVisibleBehind(android.os.IBinder,boolean)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void killGdbLocked()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>','<com.android.server.net.LockdownVpnTracker$1: void <init>(com.android.server.net.LockdownVpnTracker)>','<com.android.server.net.NetworkIdentitySet: int compareTo(java.lang.Object)>','<com.android.server.wm.DisplayContent: java.lang.String getName()>','<android.hardware.usb.V1_0.IUsb$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.net.NetworkStatsService$2: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.AppOpsService$UidState: boolean isDefault()>','<com.android.server.AlarmManagerService: void recordWakeupAlarms(java.util.ArrayList,long,long)>','<com.android.server.wm.StackWindowController: void prepareFreezingTaskBounds()>','<com.android.server.DeviceIdleController: void onAnyMotionResult(int)>','<com.android.server.am.ContentProviderRecord: java.lang.String toString()>','<com.android.server.wm.TaskStack: boolean lastAnimatingBoundsWasToFullscreen()>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor getOuter()>','<com.android.server.am.ActivityStack: boolean isHomeOrRecentsStack()>','<com.android.server.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>','<com.android.server.wm.WindowState: boolean waitingForReplacement()>','<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>','<com.android.server.firewall.IntentFirewall: com.android.server.firewall.Filter parseFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.wm.TaskTapPointerEventListener: void onPointerEvent(android.view.MotionEvent)>','<com.android.server.am.CompatModePackages: void setPackageNotifyUnsupportedZoomLocked(java.lang.String,boolean)>','<com.android.server.power.PowerManagerService$BinderService: void crash(java.lang.String)>','<com.android.server.wm.WindowState: boolean isVisibleNow()>','<com.android.server.am.ActivityManagerService: void moveTaskToStack(int,int,boolean)>','<com.android.server.connectivity.DataConnectionStats: android.telephony.SignalStrength access$002(com.android.server.connectivity.DataConnectionStats,android.telephony.SignalStrength)>','<com.android.server.NetworkManagementService: android.util.SparseIntArray access$2700(com.android.server.NetworkManagementService,int)>','<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String[],boolean,boolean)>','<com.android.server.input.InputManagerService: void access$1900(long,int)>','<com.android.server.wm.TaskSnapshotController: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.power.PowerManagerService$BinderService: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>','<com.android.server.AnyMotionDetector: com.android.server.AnyMotionDetector$RunningSignalStats access$100(com.android.server.AnyMotionDetector)>','<com.android.server.wm.WindowState: boolean isOnScreen()>','<com.android.server.wm.AppWindowToken: void clearAllDrawn()>','<com.android.server.pm.PackageManagerService$4: void <init>()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$6: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void scheduleReadDefaultPermissionExceptions()>','<com.android.server.am.ActivityManagerService: void unhandledBack()>','<com.android.server.location.GeofenceProxy: void access$300(com.android.server.location.GeofenceProxy)>','<com.android.server.am.FactoryErrorDialog: void <init>(android.content.Context,java.lang.CharSequence)>','<com.android.server.pm.UserManagerService: boolean isInitialized(int)>','<com.android.server.pm.UserManagerService$Shell: void <init>(com.android.server.pm.UserManagerService,com.android.server.pm.UserManagerService$1)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider$GnssMetricsProvider getGnssMetricsProvider()>','<com.android.server.am.ActivityManagerService$IntentFirewallInterface: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.DisplayContent: void moveStackToDisplay(com.android.server.wm.TaskStack,boolean)>','<com.android.server.pm.PackageInstallerSession: com.android.server.pm.PackageManagerService access$000(com.android.server.pm.PackageInstallerSession)>','<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()>','<com.android.server.pm.Installer$InstallerException: void <init>(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList getStacks()>','<com.android.server.wm.WindowManagerService$LocalService: void setMagnificationCallbacks(android.view.WindowManagerInternal$MagnificationCallbacks)>','<com.android.server.net.NetworkPolicyManagerService: void access$2600(com.android.server.net.NetworkPolicyManagerService,int)>','<com.android.server.am.VrController: int access$200(com.android.server.am.VrController)>','<com.android.server.wm.TaskPositioner: void access$700(com.android.server.wm.TaskPositioner)>','<com.android.server.wm.AppWindowContainerController: void removeContainer()>','<com.android.server.wm.TaskPositioner: void startDrag(com.android.server.wm.WindowState,boolean,boolean,float,float)>','<com.android.server.audio.AudioService: boolean access$9500(com.android.server.audio.AudioService)>','<com.android.server.location.GnssLocationProvider: boolean access$1900()>','<com.android.server.power.BatterySaverPolicy: void updateConstants(java.lang.String)>','<com.android.server.am.ActivityStack: void findTaskLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityStackSupervisor$FindTaskResult)>','<com.android.server.am.ActivityStackSupervisor: void setFocusStackUnchecked(java.lang.String,com.android.server.am.ActivityStack)>','<com.android.server.DeviceIdleController: void becomeInactiveIfAppropriateLocked()>','<com.android.server.am.ActivityManagerService$6: void onRemoveCompleted(java.lang.String,boolean)>','<com.android.server.IoThread: android.os.Handler getHandler()>','<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>','<com.android.server.am.UserController: boolean shouldConfirmCredentials(int)>','<com.android.server.location.RemoteListenerHelper$1$1: void <init>(com.android.server.location.RemoteListenerHelper$1)>','<com.android.server.location.GnssLocationProvider: void access$800(com.android.server.location.GnssLocationProvider,boolean)>','<com.android.server.input.InputManagerService: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>','<com.android.server.am.EventLogTags: void writeAmPreBoot(int,java.lang.String)>','<com.android.server.wm.WindowManagerService: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback)>','<com.android.server.connectivity.NetworkMonitor: java.lang.String access$2200(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.wm.ScreenRotationAnimation: android.view.animation.Transformation getEnterTransformation()>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationClear(java.lang.String,java.lang.String,int,int)>','<com.android.server.am.ActivityStackSupervisor: void moveRecentsStackToFront(java.lang.String)>','<com.android.server.audio.AudioService: void onSystemReady()>','<com.android.server.DisplayThread: com.android.server.DisplayThread get()>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionClass()>','<com.android.server.EventLogTags: void writeWatchdogScheduledReboot(long,int,int,int,java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean isShowingDream()>','<com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>','<com.android.server.wm.DragState: android.view.InputChannel getInputChannel()>','<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>','<com.android.server.LocationManagerService$2: void onOpChanged(int,java.lang.String)>','<com.android.server.wm.Task: void removeImmediately()>','<com.android.server.firewall.SenderFilter$2: void <init>()>','<android.hidl.base.V1_0.DebugInfo: void readFromParcel(android.os.HwParcel)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$7: void onValues(boolean,java.lang.String)>','<com.android.server.IntentResolver: void removeFilterInternal(android.content.IntentFilter)>','<com.android.server.wm.WindowManagerService: void notifyAppRelaunching(android.os.IBinder)>','<com.android.server.am.ActivityRecord: boolean isRecentsActivity()>','<com.android.server.NsdService$NativeResponseCode: void <init>()>','<com.android.server.net.LockdownVpnTracker: boolean isEnabled()>','<com.android.server.NetworkManagementService: void disableNat(java.lang.String,java.lang.String)>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: long getDurationMs()>','<android.net.ip.RouterAdvertisementDaemon: boolean start()>','<com.android.server.pm.PackageInstallerService$1: boolean accept(java.io.File,java.lang.String)>','<com.android.server.audio.AudioService$VolumeStreamState: android.util.SparseIntArray access$1500(com.android.server.audio.AudioService$VolumeStreamState)>','<com.android.server.am.ActivityManagerShellCommand: int runDisplay(java.io.PrintWriter)>','<com.android.server.pm.Installer: void setAppQuota(java.lang.String,int,int,long)>','<com.android.server.InputMethodManagerService$Lifecycle: void onStart()>','<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>','<com.android.server.ConnectivityService: boolean avoidBadWifi()>','<com.android.server.EventLogTags: void writeNotificationCancelAll(int,int,java.lang.String,int,int,int,int,java.lang.String)>','<android.net.util.PrefixUtils: java.util.Set localPrefixesFrom(android.net.LinkProperties)>','<com.android.server.pm.PolicyComparator: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.TelephonyRegistry: void notifyCallStateForPhoneId(int,int,int,java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.EventLogTags: void writePowerSleepRequested(int)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$TypeStatePair: void <init>(com.android.server.connectivity.tethering.UpstreamNetworkMonitor$1)>','<com.android.server.wm.WindowSurfaceController: void setTransparentRegionHint(android.graphics.Region)>','<com.android.server.connectivity.PacManager: java.lang.String access$100(android.net.Uri)>','<com.android.server.am.ActivityRecord: void setTaskDescription(android.app.ActivityManager$TaskDescription)>','<com.android.server.firewall.SenderFilter$3: void <init>()>','<com.android.server.pm.PackageInstallerService$Callbacks: void access$500(com.android.server.pm.PackageInstallerService$Callbacks,int,int)>','<com.android.server.EventLogTags: void writeNotificationEnqueue(int,int,java.lang.String,int,java.lang.String,int,java.lang.String,int)>','<android.hardware.configstore.V1_0.OptionalUInt64: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getDescrIndex()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissions(int)>','<com.android.server.input.InputManagerService: void tryPointerSpeed(int)>','<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo access$7800(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int)>','<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)>','<com.android.server.am.ActivityRecord: java.lang.String toString()>','<com.android.server.audio.AudioService$VolumeController: boolean suppressAdjustment(int,int,boolean)>','<com.android.server.am.ActivityStackSupervisor: void handleNonResizableTaskIfNeeded(com.android.server.am.TaskRecord,int,int,int)>','<com.android.server.wm.DisplayContent: boolean destroyLeakedSurfaces()>','<com.android.server.wm.WindowStateAnimator: void seamlesslyRotateWindow(int,int)>','<com.android.server.power.PowerManagerService: void access$2700(com.android.server.power.PowerManagerService)>','<com.android.server.connectivity.PacManager$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.location.GnssLocationProvider$4: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver: void <init>(com.android.server.wm.TaskPositioner,android.view.InputChannel,android.os.Looper,android.view.Choreographer)>','<com.android.server.InputMethodManagerService$StartInputInfo: void <init>(android.os.IBinder,java.lang.String,int,boolean,android.os.IBinder,android.view.inputmethod.EditorInfo,int,int)>','<com.android.server.pm.Settings: void readBlockUninstallPackagesLPw(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.net.NetworkStatsCollection: int[] getRelevantUids(int,int)>','<com.android.server.wm.Task: boolean isDragResizing()>','<com.android.server.am.ActivityManagerService: void notifyActivityDrawn(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>','<com.android.server.am.ActivityManagerShellCommand: int runGetCurrentUser(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService: float fixScale(float)>','<com.android.server.am.EventLogTags: void writeAmMemFactor(int,int)>','<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>','<com.android.server.wm.TaskStack: boolean isAttachedToDisplay()>','<com.android.server.audio.PlaybackActivityMonitor: void playerAttributes(int,android.media.AudioAttributes,int)>','<com.android.server.AppOpsService$1: void run()>','<com.android.server.statusbar.StatusBarManagerService: void onGlobalActionsShown()>','<com.android.server.wm.WindowManagerService: void setScreenCaptureDisabled(int,boolean)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setOpaque(boolean)>','<com.android.server.LocationManagerService$8: void <init>(com.android.server.LocationManagerService)>','<com.android.server.am.ProcessList: boolean procStatesDifferForMem(int,int)>','<com.android.server.connectivity.MockableSystemProperties: void set(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: void filterResults(java.util.List)>','<com.android.server.wm.WindowManagerService$MousePositionTracker: float access$1800(com.android.server.wm.WindowManagerService$MousePositionTracker)>','<com.android.server.AlarmManagerService: boolean access$002(com.android.server.AlarmManagerService,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void updateNotificationsNL()>','<com.android.server.usb.UsbDeviceManager: boolean access$1800(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.ActivityManagerService$Association: void <init>(int,java.lang.String,int,android.content.ComponentName,java.lang.String)>','<com.android.server.audio.AudioService$SetModeDeathHandler: void setMode(int)>','<com.android.server.usb.UsbService: void clearUsbDebuggingKeys()>','<com.android.server.input.InputManagerService$TabletModeChangedListenerRecord: void <init>(com.android.server.input.InputManagerService,int,android.hardware.input.ITabletModeChangedListener)>','<com.android.server.wm.WindowState: boolean onSetAppExiting()>','<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData readUserLP(int,java.io.InputStream)>','<com.android.server.am.ActivityRecord: void onWindowsDrawn(long)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void showMagnificationBoundsIfNeeded()>','<com.android.server.am.ActivityManagerService$AppTaskImpl: void moveToFront()>','<com.android.server.am.UserController: android.content.pm.UserInfo getCurrentUser()>','<com.android.server.pm.UserManagerService$LocalService$1: void <init>(com.android.server.pm.UserManagerService$LocalService)>','<com.android.server.am.ActivityStackSupervisor: void updateActivityApplicationInfoLocked(android.content.pm.ApplicationInfo)>','<com.android.server.wm.DragState: boolean notifyDropLw(float,float)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<com.android.server.usb.UsbPortManager$HALCallback: void notifyPortStatusChange_1_1(java.util.ArrayList,int)>','<com.android.server.wm.WindowState: void setWindowScale(int,int)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.AppOpsService: int noteProxyOperation(int,java.lang.String,int,java.lang.String)>','<com.android.server.audio.AudioService: int access$2900(com.android.server.audio.AudioService)>','<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>','<com.android.server.am.DumpHeapProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>','<com.android.server.statusbar.StatusBarManagerService: void access$800(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void <init>(android.app.IActivityManager,java.io.PrintWriter,java.io.InputStream,java.lang.String,boolean)>','<com.android.server.wm.WindowState: android.graphics.Rect getContentFrameLw()>','<com.android.server.statusbar.StatusBarManagerService$1: void startAssist(android.os.Bundle)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1900(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.IntentResolver: boolean isFilterVerified(android.content.IntentFilter)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssMeasurementsProvider access$4100(com.android.server.location.GnssLocationProvider)>','<com.android.server.NetworkManagementService: void createPhysicalNetwork(int,java.lang.String)>','<com.android.server.connectivity.Vpn: java.lang.String getAlwaysOnPackage()>','<com.android.server.wm.TaskSnapshotSurface$Window: void setOuter(com.android.server.wm.TaskSnapshotSurface)>','<android.net.util.SharedLog: android.net.util.SharedLog forSubComponent(java.lang.String)>','<com.android.server.am.TaskRecord: int getStackId()>','<com.android.server.TelephonyRegistry: void access$300(com.android.server.TelephonyRegistry)>','<com.android.server.am.ActivityManagerService: void killPackageDependents(java.lang.String,int)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalState: void exit()>','<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: boolean isOnDeviceIdleWhitelistLocked(int)>','<com.android.server.DeviceIdleController$LocalService: void addPowerSaveTempWhitelistApp(int,java.lang.String,long,int,boolean,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$15: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.ActivityStackSupervisor: boolean pauseBackStacks(boolean,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.ConnectivityService: void access$3800(com.android.server.ConnectivityService,android.net.Network)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void exit()>','<com.android.server.pm.PackageManagerService: void verifyIntentFilter(int,int,java.util.List)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.InputMethodManagerService: boolean showCurrentInputLocked(int,android.os.ResultReceiver)>','<com.android.server.wm.WindowContainer: void onDescendantOverrideConfigurationChanged()>','<com.android.server.wm.WindowManagerService: void executeAppTransition()>','<com.android.server.wm.WindowLayersController: void assignWindowLayers(com.android.server.wm.DisplayContent)>','<com.android.server.wm.AppTransition: int getThumbnailTransitionState(boolean)>','<com.android.server.am.ServiceRecord: void resetRestartCounter()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.content.Context access$000(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.pm.PackageInstallerSession$3: boolean handleMessage(android.os.Message)>','<android.net.INetd$Stub$Proxy: int ipSecAddSecurityAssociation(int,int,int,java.lang.String,java.lang.String,long,int,java.lang.String,byte[],int,java.lang.String,byte[],int,int,int,int)>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>','<com.android.server.ConnectivityService$NetworkRequestInfo: void binderDied()>','<com.android.server.pm.PackageManagerService: java.lang.String arrayToString(int[])>','<com.android.server.wm.AppWindowToken: void onFirstWindowDrawn(com.android.server.wm.WindowState,com.android.server.wm.WindowStateAnimator)>','<com.android.server.pm.PackageManagerService$DumpState: boolean onTitlePrinted()>','<com.android.server.wm.WindowManagerService: boolean isScreenCaptureDisabledLocked(int)>','<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>','<com.android.server.pm.UserRestrictionsUtils: void merge(android.os.Bundle,android.os.Bundle)>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName)>','<com.android.server.power.PowerManagerService$BinderService: void rebootSafeMode(boolean,boolean)>','<com.android.server.wm.TaskPositioner: com.android.server.wm.Task access$400(com.android.server.wm.TaskPositioner)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: int hashCode()>','<com.android.server.RescueParty$AppThreshold: void <init>(int)>','<com.android.server.lights.LightsManager: void <init>()>','<com.android.server.firewall.SenderFilter: void <init>()>','<com.android.server.am.ActivityManagerService: void onWakefulnessChanged(int)>','<com.android.server.net.NetworkStatsObservers: void access$100(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,int)>','<com.android.server.net.NetworkIdentitySet: boolean isAnyMemberRoaming()>','<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlay()>','<com.android.server.am.ActivityStack: void stopActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService: boolean addPermissionLocked(android.content.pm.PermissionInfo,boolean)>','<android.os.IInstalld$Stub$Proxy: void dexopt(java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.audio.AudioService$1: void onError(int)>','<android.hidl.base.V1_0.DebugInfo: void writeToParcel(android.os.HwParcel)>','<com.android.server.am.LockTaskNotify: void handleShowToast(int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>','<com.android.server.audio.AudioService: void access$7200(com.android.server.audio.AudioService,int)>','<com.android.server.location.MockProvider: void disable()>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowed(java.lang.String,int,int,java.lang.String[])>','<com.android.server.firewall.StringFilter$RegexFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.am.TaskRecord: int getChildCount()>','<com.android.server.EventLogTags: void writeIdleMaintenanceWindowStart(long,long,int,int)>','<com.android.server.pm.IntentFilterVerificationState: void <clinit>()>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.power.PowerManagerService$LocalService: void updateUidProcState(int,int)>','<com.android.server.am.ActivityManagerShellCommand: int runStackInfo(java.io.PrintWriter)>','<com.android.server.pm.PersistentPreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PersistentPreferredActivity)>','<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect calculateSnapshotFrame(android.graphics.Rect)>','<com.android.server.location.GeofenceManager$GeofenceHandler: void <init>(com.android.server.location.GeofenceManager)>','<android.hidl.base.V1_0.IBase$Stub: android.os.IHwBinder asBinder()>','<com.android.server.wm.InputMonitor: boolean access$400(com.android.server.wm.InputMonitor)>','<com.android.server.wm.WindowManagerService: void statusBarVisibilityChanged(int)>','<com.android.server.am.TaskRecord: void setResizeMode(int)>','<com.android.server.am.BroadcastFilter: void dumpInReceiverList(java.io.PrintWriter,android.util.Printer,java.lang.String)>','<com.android.server.connectivity.NetworkMonitor$MaybeNotifyState$1: void appResponse(int)>','<com.android.server.pm.Settings: void insertPackageSettingLPw(com.android.server.pm.PackageSetting,android.content.pm.PackageParser$Package)>','<com.android.server.power.PowerManagerService: void access$5600(com.android.server.power.PowerManagerService,int,int)>','<com.android.server.wm.TaskSnapshotCache$CacheEntry: void <init>(android.app.ActivityManager$TaskSnapshot,com.android.server.wm.AppWindowToken)>','<com.android.server.audio.AudioService: void access$6500(com.android.server.audio.AudioService,android.bluetooth.BluetoothDevice,int)>','<com.android.server.am.ActivityManagerService: void unregisterReceiver(android.content.IIntentReceiver)>','<com.android.server.usb.UsbProfileGroupSettingsManager: android.content.Intent access$600(android.hardware.usb.UsbDevice)>','<com.android.server.connectivity.tethering.TetheringConfiguration: void dump(java.io.PrintWriter)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getLastStack()>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageAppeared(java.lang.String,int)>','<com.android.server.AppOpsService: void setMode(int,int,java.lang.String,int)>','<com.android.server.am.ActivityStack: void moveToFront(java.lang.String)>','<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>','<com.android.server.wm.WindowManagerService$H: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.input.InputManagerService: void onVibratorTokenDied(com.android.server.input.InputManagerService$VibratorToken)>','<com.android.server.LocationManagerService: java.lang.String getNetworkProviderPackage()>','<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler getHealthStatsForUidLocked(int)>','<com.android.server.am.BatteryStatsService: void noteBluetoothControllerActivity(android.bluetooth.BluetoothActivityEnergyInfo)>','<com.android.server.wm.DragState: void reset()>','<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void activityIdleInternal(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.am.CoreSettingsObserver: android.os.Bundle getCoreSettingsLocked()>','<com.android.server.input.InputManagerService: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>','<com.android.server.wm.WindowManagerService: void onKeyguardOccludedChanged(boolean)>','<com.android.server.AlarmManagerService: void rebatchAllAlarms()>','<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>','<android.hardware.usb.V1_0.PortRole: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserAsyncLPr(int)>','<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void postWindowRemoveCleanupLocked(com.android.server.wm.WindowState)>','<com.android.server.wm.SurfaceControlWithBackground: void deferTransactionUntil(android.view.Surface,long)>','<com.android.server.firewall.StringFilter$7: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.wm.StackWindowController: void positionChildAtBottom(com.android.server.wm.TaskWindowContainerController)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$7: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>','<com.android.server.wm.WindowManagerService: void notifyAppRelaunchesCleared(android.os.IBinder)>','<com.android.server.audio.RecordingActivityMonitor: void <init>()>','<com.android.server.audio.FocusRequester: void dump(java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: int getMoveStatus(int)>','<com.android.server.net.NetworkStatsRecorder: void <init>()>','<com.android.server.pm.BasePermission: java.lang.String toString()>','<com.android.server.firewall.FilterFactory: java.lang.String getTagName()>','<com.android.server.pm.PackageManagerService: void access$7400(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,int,boolean)>','<android.os.IInstalld$Stub$Proxy: void clearAppProfiles(java.lang.String)>','<com.android.server.LocationManagerService: boolean addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>','<com.android.server.pm.Installer: void linkFile(java.lang.String,java.lang.String,java.lang.String)>','<android.net.util.MultinetworkPolicyTracker: void reevaluate()>','<com.android.server.net.NetworkPolicyManagerService: int[] getUidsWithPolicy(int)>','<com.android.server.wm.SurfaceControlWithBackground: void setAlpha(float)>','<com.android.server.connectivity.Vpn$Connection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: void userStopped(int)>','<com.android.server.audio.AudioService: boolean access$1402(com.android.server.audio.AudioService,boolean)>','<com.android.server.firewall.StringFilter$StartsWithFilter: boolean matchesValue(java.lang.String)>','<com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getCompilerFilterForReason(int)>','<com.android.server.InputMethodManagerService$StartInputHistory: void addEntry(com.android.server.InputMethodManagerService$StartInputInfo)>','<com.android.server.wm.PinnedStackController: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$010(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<com.android.server.InputMethodManagerService: void clearLastInputMethodWindowForTransition(android.os.IBinder)>','<com.android.server.am.ActivityStarter: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>','<com.android.server.location.GnssLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void setSurface(android.view.Surface)>','<com.android.server.pm.Policy: java.util.Map getInnerPackages()>','<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>','<com.android.server.NetworkManagementService: void systemReady()>','<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>','<com.android.server.am.ActivityManagerService: void attachAgent(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService$16: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.AppTransition: android.graphics.GraphicBuffer getAppTransitionThumbnailHeader(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isEligibleForNewTasks()>','<com.android.server.am.ServiceRecord: java.lang.String toString()>','<com.android.server.audio.PlaybackActivityMonitor: void playerDeath(int)>','<com.android.server.pm.EphemeralResolverConnection: android.app.IInstantAppResolver access$302(com.android.server.pm.EphemeralResolverConnection,android.app.IInstantAppResolver)>','<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>','<com.android.server.pm.Settings: void writeCrossProfileIntentFiltersLPr(org.xmlpull.v1.XmlSerializer,int)>','<com.android.server.wm.InputMonitor: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.connectivity.tethering.TetheringConfiguration: java.lang.String toString()>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getInterfaceCount()>','<com.android.server.location.LocationFudger: void <init>(android.content.Context,android.os.Handler)>','<com.android.server.wm.WindowContainer: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.server.AnyMotionDetector$Vector3: com.android.server.AnyMotionDetector$Vector3 times(float)>','<com.android.server.wm.DockedStackDividerController: void setResizing(boolean)>','<com.android.server.am.ConfigurationContainer: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.server.NetworkManagementService: void setUidCleartextNetworkPolicy(int,int)>','<com.android.server.am.ActivityManagerService: void setTestPssMode(boolean)>','<com.android.server.input.InputManagerService$3: void <init>(com.android.server.input.InputManagerService)>','<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState access$1400(com.android.server.NsdService$NsdStateMachine)>','<com.android.server.am.ActivityManagerService$LocalService: void updatePersistentConfigurationForUser(android.content.res.Configuration,int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.am.StrictModeViolationDialog$1: void handleMessage(android.os.Message)>','<com.android.server.DeviceIdleController$6: void onDisplayChanged(int)>','<com.android.server.PinnerService$1: void onReceive(android.content.Context,android.content.Intent)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void writeToParcel(android.os.HwParcel)>','<com.android.server.power.WirelessChargerDetector: void access$100(com.android.server.power.WirelessChargerDetector,float,float,float)>','<com.android.server.am.ActivityManagerService: boolean access$300(com.android.server.am.ActivityManagerService)>','<com.android.server.location.PassiveProvider: com.android.internal.location.ProviderProperties getProperties()>','<com.android.server.am.ActivityManagerService: void addProcessToGcListLocked(com.android.server.am.ProcessRecord)>','<com.android.server.audio.AudioService$AudioServiceUserRestrictionsListener: void onUserRestrictionsChanged(int,android.os.Bundle,android.os.Bundle)>','<com.android.server.usb.UsbService: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>','<com.android.server.am.ActivityStackSupervisor: android.content.pm.UserInfo getUserInfo(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: boolean isUidPresent(int)>','<com.android.server.connectivity.Vpn: boolean access$1200(com.android.server.connectivity.Vpn)>','<com.android.server.ConnectivityService$SettingsObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.am.TaskChangeNotificationController: void notifyPinnedStackAnimationStarted()>','<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyInfo)>','<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>','<com.android.server.am.ActivityManagerService: long inputDispatchingTimedOut(int,boolean,java.lang.String)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getSyncAddress()>','<com.android.server.pm.PackageManagerService$2: void <init>(com.android.server.pm.PackageManagerService,int,int)>','<com.android.server.EventLogTags: void writePmCriticalInfo(java.lang.String)>','<com.android.server.net.NetworkStatsCollection: void <init>(long)>','<com.android.server.am.UidRecord$ChangeItem: void <init>()>','<com.android.server.AlarmManagerService$Constants: void <init>(com.android.server.AlarmManagerService,android.os.Handler)>','<com.android.server.wm.InputMonitor: void setInputFocusLw(com.android.server.wm.WindowState,boolean)>','<com.android.server.pm.PackageManagerService: int performDexOptWithStatus(java.lang.String,boolean,int,boolean,boolean)>','<com.android.server.am.BatteryStatsService: void noteProcessCrash(java.lang.String,int)>','<com.android.server.pm.PackageUsage: void writeInternal(java.util.Map)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>','<com.android.server.ConnectivityService: void access$3600(com.android.server.ConnectivityService,android.net.NetworkRequest,int)>','<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>','<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>','<com.android.server.net.NetworkPolicyManagerService$18: boolean handleMessage(android.os.Message)>','<com.android.server.am.ReceiverList: void dumpLocal(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.WindowState: int getAnimLayerAdjustment()>','<com.android.server.ConnectivityService: android.os.INetworkManagementService access$1300(com.android.server.ConnectivityService)>','<com.android.server.NativeDaemonEvent: int getCmdNumber()>','<com.android.server.DeviceIdleController$Constants: void dump(java.io.PrintWriter)>','<com.android.server.usb.descriptors.UsbMSMidiOutputJack: void <init>(int,byte,byte,byte)>','<com.android.server.am.StrictModeViolationDialog: com.android.server.am.ProcessRecord access$100(com.android.server.am.StrictModeViolationDialog)>','<com.android.server.am.ActivityManagerService: boolean requestAutofillData(com.android.internal.os.IResultReceiver,android.os.Bundle,android.os.IBinder,int)>','<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getNumPins()>','<com.android.server.am.EventLogTags: void writeAmCreateService(int,int,java.lang.String,int,int)>','<com.android.server.pm.PackageSettingBase: android.content.pm.PackageUserState modifyUserStateComponents(int,boolean,boolean)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getXtConfig()>','<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>','<com.android.server.am.AppTimeTracker: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService$PackageHandler: void doHandleMessage(android.os.Message)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$008(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>','<com.android.server.pm.PackageManagerService$27: void onStatusChanged(int,int,long)>','<android.net.util.MultinetworkPolicyTracker: void <clinit>()>','<com.android.server.audio.AudioService: void access$5400(com.android.server.audio.AudioService)>','<com.android.server.pm.UserManagerService: int[] getProfileIds(int,boolean)>','<android.net.ip.RouterAdvertisementDaemon: java.net.InetSocketAddress access$800(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.am.ProcessStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.power.PowerManagerService: void access$4000(com.android.server.power.PowerManagerService,long,java.lang.String,int,java.lang.String,int)>','<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder,int)>','<com.android.server.usb.UsbAudioDevice: java.lang.String getDeviceName()>','<com.android.server.pm.PackageManagerShellCommand: void onHelp()>','<com.android.server.wm.StackWindowController: void removeContainer()>','<com.android.server.wm.DimLayerController: boolean isDimming()>','<com.android.server.wm.WindowSurfaceController: boolean getShown()>','<com.android.server.am.ActivityStackSupervisor: void closeSystemDialogsLocked()>','<com.android.server.wm.AppWindowAnimator: void endProlongedAnimation()>','<com.android.server.ConnectivityService: void access$3100(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.WindowManagerService: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,int,boolean)>','<com.android.server.am.UnsupportedDisplaySizeDialog: void dismiss()>','<com.android.server.connectivity.Vpn: int getNetId()>','<com.android.server.am.TaskRecord: void updateOverrideConfigurationForStack(com.android.server.am.ActivityStack)>','<com.android.server.am.ActivityStack: void moveHomeStackTaskToTop()>','<com.android.server.wm.WindowManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.power.PowerManagerService$BinderService: void nap(long)>','<com.android.server.firewall.IntentFirewall: boolean checkBroadcast(android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.wm.RootWindowContainer: java.lang.String getName()>','<com.android.server.usb.UsbPortManager$RawPortInfo$1: void <init>()>','<com.android.server.location.GnssLocationProvider: android.location.IGnssStatusProvider getGnssStatusProvider()>','<com.android.server.connectivity.tethering.OffloadController: boolean access$200(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.wm.WindowState: void reportResized()>','<com.android.server.usb.UsbDeviceManager: void systemReady()>','<com.android.server.AnyMotionDetector$2: void <init>(com.android.server.AnyMotionDetector)>','<com.android.server.am.TaskRecord: void addActivityAtIndex(int,com.android.server.am.ActivityRecord)>','<com.android.server.location.GnssLocationProvider$GpsRequest: void <init>(com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.am.ActivityManagerService: boolean startBinderTracking()>','<com.android.server.wm.WindowManagerService: void notifyTaskRemovedFromRecents(int,int)>','<android.net.util.IpUtils: short udpChecksum(java.nio.ByteBuffer,int,int)>','<com.android.server.RescueParty$AppThreshold: void setCount(int)>','<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>','<com.android.server.pm.Policy$PolicyBuilder: java.util.Set access$100(com.android.server.pm.Policy$PolicyBuilder)>','<com.android.server.audio.MediaFocusControl: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester)>','<com.android.server.pm.Settings: void writePersistentPreferredActivitiesLPr(org.xmlpull.v1.XmlSerializer,int)>','<com.android.server.am.ActivityStack: void getDisplaySize(android.graphics.Point)>','<com.android.server.am.ActivityManagerService$15: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmProcessStartTimeout(int,int,int,java.lang.String)>','<com.android.server.connectivity.Vpn$3: void interfaceStatusChanged(java.lang.String,boolean)>','<com.android.server.wm.WindowState: boolean mightAffectAllDrawn(boolean)>','<com.android.server.pm.SettingBase: void <init>(com.android.server.pm.SettingBase)>','<com.android.server.audio.AudioService: void access$2600(com.android.server.audio.AudioService)>','<com.android.server.net.NetworkStatsCollection: void recordCollection(com.android.server.net.NetworkStatsCollection)>','<com.android.server.wm.Task: void clearPreserveNonFloatingState()>','<com.android.server.LockGuard$LockInfo: void <init>(com.android.server.LockGuard$1)>','<com.android.server.am.ActivityStack$1: void <clinit>()>','<com.android.server.am.ProcessStatsService$1: void <init>(com.android.server.am.ProcessStatsService)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.connectivity.tethering.OffloadController: void setLocalPrefixes(java.util.Set)>','<com.android.server.am.ActivityManagerService$1: boolean isPackageForFilter(java.lang.String,com.android.server.am.BroadcastFilter)>','<com.android.server.audio.AudioService: boolean isStreamMute(int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<com.android.server.wm.TaskSnapshotPersister: java.io.File getProtoFile(int,int)>','<com.android.server.wm.WindowManagerService: float access$900(com.android.server.wm.WindowManagerService)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getDevSubClass()>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: void <init>(android.hardware.usb.UsbDevice)>','<com.android.server.pm.ParallelPackageParser: android.content.pm.PackageParser$Package parsePackage(android.content.pm.PackageParser,java.io.File,int)>','<com.android.server.am.ActivityManagerService: java.util.List getAppTasks(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int)>','<com.android.server.am.ActivityManagerShellCommand: int runStackRemove(java.io.PrintWriter)>','<com.android.server.am.ActivityStack: int shouldBeVisible(com.android.server.am.ActivityRecord)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: android.content.pm.AuxiliaryResolveInfo[] newArray(int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean setKeyboardLayout(com.android.internal.inputmethod.InputMethodSubtypeHandle,java.lang.String)>','<com.android.server.net.NetworkStatsService$1: int[] getRelevantUids()>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void <init>(com.android.server.net.NetworkStatsService,com.android.server.net.NetworkStatsService$1)>','<com.android.server.DeviceIdleController: void handleWriteConfigFile()>','<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>','<com.android.server.pm.PackageManagerService: byte[] getPermissionGrantBackup(int)>','<com.android.server.power.WirelessChargerDetector: void writeToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.NsdService: void access$100(com.android.server.NsdService,boolean)>','<com.android.server.wm.DisplayContent: void setTouchExcludeRegion(com.android.server.wm.Task)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<com.android.server.connectivity.Tethering: com.android.server.connectivity.tethering.UpstreamNetworkMonitor access$1400(com.android.server.connectivity.Tethering)>','<com.android.server.wm.WindowManagerService: void displayReady()>','<com.android.server.audio.FocusRequester: boolean hasSameDispatcher(android.media.IAudioFocusDispatcher)>','<com.android.server.am.ActivityManagerService: void scheduleApplicationInfoChanged(java.util.List,int)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void ping()>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void dumpAllSurfaces(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)>','<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: java.lang.IllegalArgumentException rethrowAsParcelableException()>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: boolean isSuccessful()>','<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>','<com.android.server.pm.PackageManagerService: int[] access$4700(com.android.server.pm.PackageManagerService,java.lang.String,int[])>','<com.android.server.ConnectivityService: boolean updateLockdownVpn()>','<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[],int)>','<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onPackageDeleted(java.lang.String,int,java.lang.String)>','<com.android.server.wm.WindowManagerService: boolean access$1500(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.CrossProfileIntentFilter: java.lang.String toString()>','<com.android.server.wm.WindowManagerService: boolean updateFocusedWindowLocked(int,boolean)>','<com.android.server.power.Notifier$2: void <init>(com.android.server.power.Notifier)>','<com.android.server.wm.WindowManagerService: void setDockedStackDividerTouchRegion(android.graphics.Rect)>','<com.android.server.RescueParty$AppThreshold: int getCount()>','<com.android.server.pm.PackageManagerService: android.content.pm.ChangedPackages getChangedPackages(int,int)>','<com.android.server.DeviceIdleController: android.hardware.SensorManager access$300(com.android.server.DeviceIdleController)>','<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement()>','<com.android.server.TelephonyRegistry: void notifyCarrierNetworkChange(boolean)>','<com.android.server.NsdService: android.os.Messenger getMessenger()>','<com.android.server.wm.WindowState: boolean clearAnimatingFlags()>','<com.android.server.location.GnssLocationProvider$16: boolean start(long,boolean)>','<com.android.server.connectivity.Tethering: void untetherAll()>','<com.android.server.pm.KeySetHandle: void setRefCountLPw(int)>','<com.android.server.ConnectivityService$InternalHandler: void <init>(com.android.server.ConnectivityService,android.os.Looper)>','<com.android.server.audio.AudioService$AudioHandler: void <init>(com.android.server.audio.AudioService,com.android.server.audio.AudioService$1)>','<com.android.server.connectivity.KeepalivePacketData: com.android.server.connectivity.KeepalivePacketData nattKeepalivePacket(java.net.InetAddress,int,java.net.InetAddress,int)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.am.ActivityStackSupervisor$FindTaskResult: void <init>()>','<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File,android.os.Handler)>','<com.android.server.PinnerService: void <init>(android.content.Context)>','<com.android.server.am.AppTimeTracker: void <init>(android.app.PendingIntent)>','<com.android.server.pm.PackageManagerService$8: boolean accept(java.io.File,java.lang.String)>','<com.android.server.am.ActivityRecord: void removeWindowContainer()>','<com.android.server.am.ProcessRecord: java.lang.String makeAdjReason()>','<com.android.server.am.UserController$5: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.location.GeofenceProxy$1: void run()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: java.lang.String toString()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: java.lang.String interfaceDescriptor()>','<android.hardware.usb.V1_0.IUsb$Proxy: void setCallback(android.hardware.usb.V1_0.IUsbCallback)>','<android.hidl.base.V1_0.DebugInfo: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.EventLogTags: void writeCameraGestureTriggered(long,long,long,int)>','<com.android.server.wm.WindowState: void registerFocusObserver(android.view.IWindowFocusObserver)>','<com.android.server.wm.AppTransition: int getTransitFlags()>','<com.android.server.AppOpsService: void access$200(com.android.server.AppOpsService,int)>','<com.android.server.power.PowerManagerService$BinderService: boolean isScreenBrightnessBoosted()>','<com.android.server.NsdService: com.android.server.NsdService$DaemonConnection access$600(com.android.server.NsdService)>','<com.android.server.am.ActivityRecord$Token: com.android.server.am.ActivityRecord access$000(com.android.server.am.ActivityRecord$Token)>','<com.android.server.statusbar.StatusBarManagerService$5: void <init>(com.android.server.statusbar.StatusBarManagerService,int,int,int,int,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.LocationManagerService: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>','<com.android.server.am.ActivityManagerService$6: void <init>(com.android.server.am.ActivityManagerService,int,int,android.content.pm.IPackageDataObserver)>','<com.android.server.audio.AudioService: void access$8000(com.android.server.audio.AudioService,android.content.ContentResolver)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPersistentApplications(int)>','<com.android.server.LocationManagerService: java.lang.Object access$100(com.android.server.LocationManagerService)>','<com.android.server.wm.WindowManagerService$DragInputEventReceiver: void <init>(com.android.server.wm.WindowManagerService,android.view.InputChannel,android.os.Looper)>','<com.android.server.am.ReceiverList: java.lang.String toString()>','<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats access$200(com.android.server.AlarmManagerService,int,java.lang.String)>','<com.android.server.usb.descriptors.UsbACOutputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState valueOf(java.lang.String)>','<com.android.server.wm.AppWindowContainerController: void reparent(com.android.server.wm.TaskWindowContainerController,int)>','<com.android.server.am.ActiveServices: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int,boolean,java.lang.String,int)>','<com.android.server.wm.TaskSnapshotSurface: void setFrames(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.wm.WindowState: void getMergedConfiguration(android.util.MergedConfiguration)>','<com.android.server.power.BatterySaverPolicy: void <init>(android.os.Handler)>','<com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config: void <init>(long,long,long)>','<com.android.server.DeviceIdleController: void updateDisplayLocked()>','<com.android.server.wm.StackWindowController: java.lang.String toString()>','<com.android.server.AlarmManagerService$2: void remove(android.app.PendingIntent,android.app.IAlarmListener)>','<com.android.server.wm.DimLayerController: boolean hasSharedFullScreenDimLayer()>','<com.android.server.location.GnssLocationProvider$1: void registerGnssStatusCallback(android.location.IGnssStatusListener)>','<com.android.server.am.ActivityStackSupervisor: void scheduleUpdatePictureInPictureModeIfNeeded(com.android.server.am.TaskRecord,com.android.server.am.ActivityStack)>','<com.android.server.wm.RemoteSurfaceTrace: void setPosition(float,float)>','<com.android.server.pm.PackageManagerService: void forceDexOpt(java.lang.String)>','<com.android.server.am.BroadcastQueue: boolean isIdle()>','<com.android.server.usb.MtpNotificationManager: com.android.server.usb.MtpNotificationManager$OnOpenInAppListener access$100(com.android.server.usb.MtpNotificationManager)>','<com.android.server.input.InputManagerService: void requestPointerCapture(android.os.IBinder,boolean)>','<com.android.server.pm.KeySetManagerService: void addDefinedKeySetsToPackageLPw(com.android.server.pm.PackageSetting,android.util.ArrayMap)>','<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>','<com.android.server.pm.Settings: void writeRuntimePermissionsForUserLPr(int,boolean)>','<com.android.server.pm.Settings: void readInstallPermissionsLPr(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PermissionsState)>','<com.android.server.NetworkManagementService: void stopTethering()>','<com.android.server.audio.AudioService: void unregisterAudioFocusClient(java.lang.String)>','<com.android.server.LocationManagerService: boolean access$400(int)>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: void writeToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.wm.TaskWindowContainerController: void resize(android.graphics.Rect,android.content.res.Configuration,boolean,boolean)>','<com.android.server.am.ActivityManagerService$LocalService: java.lang.String checkContentProviderAccess(java.lang.String,int)>','<com.android.server.wm.WindowManagerService: int relayoutWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.util.MergedConfiguration,android.view.Surface)>','<com.android.server.connectivity.Tethering: int tether(java.lang.String)>','<com.android.server.wm.Task: boolean shouldDeferRemoval()>','<com.android.server.location.GnssLocationProvider$13: void run()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onRotationChangedLocked(com.android.server.wm.DisplayContent)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack getStack()>','<com.android.server.am.BatteryStatsService: void noteVibratorOn(int,long)>','<com.android.server.DeviceIdleController$8: void onLocationChanged(android.location.Location)>','<com.android.server.EventLogTags: void writeLockdownVpnConnecting(int)>','<com.android.server.audio.MediaFocusControl: void addFocusFollower(android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.InputMethodManagerService: void onSessionCreated(com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession,android.view.InputChannel)>','<com.android.server.location.GnssLocationProvider: void access$5100(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.PackageInstallerSession: java.lang.Object access$100(com.android.server.pm.PackageInstallerSession)>','<com.android.server.AlarmManagerService$Alarm: com.android.server.AlarmManagerService$WakeupEvent makeWakeupEvent(long)>','<com.android.server.am.ActivityManagerShellCommand: int runHang(java.io.PrintWriter)>','<com.android.server.am.EventLogTags: void writeAmUidStopped(int)>','<com.android.server.location.GnssStatusListenerHelper$1: void execute(android.os.IInterface)>','<android.net.util.MultinetworkPolicyTracker: void <init>(android.content.Context,android.os.Handler)>','<com.android.server.wm.WindowSurfaceController: boolean prepareToShowInTransaction(float,float,float,float,float,boolean)>','<com.android.server.NetworkManagementService$LocalService: void <init>(com.android.server.NetworkManagementService)>','<com.android.server.input.InputManagerService$14: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.location.GnssLocationProvider: boolean access$3800(int)>','<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)>','<com.android.server.connectivity.NetworkNotificationManager: void showToast(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.am.ActivityRecord: boolean isInterestingToUserLocked()>','<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)>','<com.android.server.pm.PermissionsState$PermissionData: void <init>(com.android.server.pm.PermissionsState$PermissionData)>','<com.android.server.wm.WindowManagerService: boolean registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>','<com.android.server.am.ActivityManagerShellCommand: int runStackStart(java.io.PrintWriter)>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void <init>(com.android.server.net.NetworkStatsCollection)>','<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean,int)>','<com.android.server.pm.PackageManagerService: void access$4300(com.android.server.pm.PackageManagerService,java.util.List,java.lang.String[])>','<com.android.server.statusbar.StatusBarManagerService: com.android.server.statusbar.StatusBarManagerInternal$GlobalActionsListener access$602(com.android.server.statusbar.StatusBarManagerService,com.android.server.statusbar.StatusBarManagerInternal$GlobalActionsListener)>','<com.android.server.am.UserController$7: void <init>(com.android.server.am.UserController)>','<com.android.server.wm.WindowState: long getInputDispatchingTimeoutNanos()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void <clinit>()>','<com.android.server.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<com.android.server.am.ActivityManagerShellCommand: int runRestart(java.io.PrintWriter)>','<com.android.server.location.GnssLocationProvider: int access$300(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.ActivityManagerService: void exitFreeformMode(android.os.IBinder)>','<com.android.server.am.ActiveInstrumentation: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.AppWindowContainerController: void reportStartingWindowDrawn()>','<com.android.server.wm.WindowManagerService$MousePositionTracker: void updatePosition(float,float)>','<com.android.server.firewall.IntentFirewall$Rule: com.android.server.firewall.IntentFirewall$Rule readFromXml(org.xmlpull.v1.XmlPullParser)>','<com.android.server.wm.TaskSnapshotCache: void onAppDied(com.android.server.wm.AppWindowToken)>','<com.android.server.wm.TaskStack: void getFinalAnimationBounds(android.graphics.Rect)>','<com.android.server.input.InputManagerService: void setWiredAccessoryCallbacks(com.android.server.input.InputManagerService$WiredAccessoryCallbacks)>','<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>','<com.android.server.usb.UsbProfileGroupSettingsManager$UserPackage: boolean equals(java.lang.Object)>','<com.android.server.ConnectivityService: void setAirplaneMode(boolean)>','<com.android.server.am.ActivityRecord: boolean hasShowWhenLockedWindows()>','<com.android.server.am.ActivityManagerService: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>','<com.android.server.audio.AudioService$SoundPoolCallback: void setSamples(int[])>','<com.android.server.ConnectivityService: android.net.Network getActiveNetworkForUid(int,boolean)>','<com.android.server.pm.PreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>','<android.os.IInstalld$Stub$Proxy: boolean mergeProfiles(int,java.lang.String)>','<com.android.server.am.ActivityRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,int,java.lang.String,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.res.Configuration,com.android.server.am.ActivityRecord,java.lang.String,int,boolean,boolean,com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityStackSupervisor$ActivityContainer,android.app.ActivityOptions,com.android.server.am.ActivityRecord)>','<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>','<com.android.server.wm.ScreenRotationAnimation: void createRotationMatrix(int,int,int,android.graphics.Matrix)>','<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>','<com.android.server.wm.DisplayContent: void enableSurfaceTrace(java.io.FileDescriptor)>','<com.android.server.power.Notifier: void onWirelessChargingStarted()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats$PackageStats getCompilerPackageStats(java.lang.String)>','<com.android.server.wm.RootWindowContainer: void disableSurfaceTrace()>','<com.android.server.pm.SettingBase: void setPrivateFlags(int)>','<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord)>','<com.android.server.pm.dex.DexManager: void reconcileSecondaryDexFiles(java.lang.String)>','<com.android.server.pm.EphemeralResolverConnection$1: void sendResult(android.os.Bundle)>','<com.android.server.firewall.StringFilter$IsNullFilter: boolean matchesValue(java.lang.String)>','<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.wm.WindowContainer: void switchUser()>','<com.android.server.audio.MediaFocusControl: boolean access$500(com.android.server.audio.MediaFocusControl)>','<com.android.server.wm.WindowManagerService: void switchInputMethod(boolean)>','<com.android.server.pm.PackageManagerService: int getPrivateFlagsForUid(int)>','<com.android.server.audio.MediaFocusControl: boolean notifyExtFocusPolicyFocusRequest_syncAf(android.media.AudioFocusInfo,int,android.media.IAudioFocusDispatcher,android.os.IBinder)>','<com.android.server.firewall.StringFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.wm.DisplayContent: void removeIfPossible()>','<com.android.server.wm.Task: boolean inPinnedWorkspace()>','<com.android.server.wm.WindowState: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.Session,android.view.IWindow,com.android.server.wm.WindowToken,com.android.server.wm.WindowState,int,int,android.view.WindowManager$LayoutParams,int,int,boolean)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int startActivity(android.content.Intent)>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityForcedResizable(int,int,java.lang.String)>','<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])>','<com.android.server.am.AppNotRespondingDialog$1: void handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService$19: boolean hasExternalStorage(int,java.lang.String)>','<com.android.server.am.NativeCrashListener: void run()>','<com.android.server.pm.PreferredActivity: void <init>(org.xmlpull.v1.XmlPullParser)>','<com.android.server.pm.Settings: void writeUserRestrictionsLPw(com.android.server.pm.PackageSetting,com.android.server.pm.PackageSetting)>','<com.android.server.AnyMotionDetector$RunningSignalStats: void <init>()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: java.lang.String interfaceName()>','<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>','<com.android.server.power.PowerManagerService: void setDeviceIdleTempWhitelistInternal(int[])>','<android.net.util.SharedLog$Category: android.net.util.SharedLog$Category[] values()>','<com.android.server.ConnectivityService: android.util.SparseIntArray access$4900(com.android.server.ConnectivityService)>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbSettingsManager access$1100(com.android.server.usb.UsbDeviceManager)>','<com.android.server.location.GnssStatusListenerHelper: void onNmeaReceived(long,java.lang.String)>','<com.android.server.location.LocationProviderProxy$1: void <init>(com.android.server.location.LocationProviderProxy)>','<com.android.server.NsdService: void access$800(com.android.server.NsdService,android.os.Message,int,int)>','<com.android.server.am.ActivityStack: void addToStopping(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void <init>(com.android.server.am.ActivityStackSupervisor,int,com.android.server.am.ActivityStackSupervisor$ActivityDisplay,boolean)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.wm.WindowState: com.android.server.wm.WindowState getWindow(java.util.function.Predicate)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte getNumInputs()>','<com.android.server.audio.AudioService$1: void <init>(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageSettingBase: java.lang.String[] getOverlayPaths(int)>','<com.android.server.pm.Settings: void pruneSharedUsersLPw()>','<com.android.server.usb.UsbPortManager: void connectSimulatedPort(java.lang.String,int,boolean,int,boolean,int,boolean,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.net.NetworkStatsObservers: void access$000(com.android.server.net.NetworkStatsObservers,com.android.server.net.NetworkStatsObservers$RequestInfo)>','<com.android.server.am.ActivityStackSupervisor: android.util.SparseArray access$1300(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.ActivityStackSupervisor: android.content.res.Configuration getDisplayOverrideConfiguration(int)>','<com.android.server.location.GnssLocationProvider: android.telephony.SubscriptionManager$OnSubscriptionsChangedListener access$6200(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.WindowContainerController: void setContainer(com.android.server.wm.WindowContainer)>','<com.android.server.firewall.StringFilter: void <clinit>()>','<com.android.server.am.ActivityManagerService: void killUid(int,int,java.lang.String)>','<com.android.server.am.ActivityRecord: void applyOptionsLocked()>','<com.android.server.power.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>','<com.android.server.pm.Settings: void writeDisabledSysPackageLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageSetting)>','<com.android.server.NsdService: int access$1500(com.android.server.NsdService)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$UpstreamNetworkCallback: void onAvailable(android.net.Network)>','<com.android.server.wm.DisplayContent: boolean hasSecureWindowOnScreen()>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendSystemPackageAppearedBroadcasts()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ProviderIntentInfo)>','<com.android.server.AnyMotionDetector$Vector3: com.android.server.AnyMotionDetector$Vector3 plus(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.net.NetworkStatsService$7: void limitReached(java.lang.String,java.lang.String)>','<com.android.server.wm.WindowState: boolean canBeImeTarget()>','<com.android.server.wm.WallpaperVisibilityListeners: void registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>','<com.android.server.am.PinnedActivityStack: boolean deferScheduleMultiWindowModeChanged()>','<com.android.server.am.ActivityRecord: void setLastReportedGlobalConfiguration(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>','<com.android.server.am.ActivityManagerService: void dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean,boolean)>','<com.android.server.pm.Policy$PolicyBuilder: com.android.server.pm.Policy$PolicyBuilder addInnerPackageMapOrThrow(java.lang.String,java.lang.String)>','<com.android.server.EventLogTags: void writeBackupTransportFailure(java.lang.String)>','<com.android.server.am.ActivityStack: java.util.ArrayList getAllTasks()>','<com.android.server.am.ActivityManagerShellCommand: int runStackPositionTask(java.io.PrintWriter)>','<android.net.util.SharedLog: void i(java.lang.String)>','<com.android.server.pm.PermissionsState$PermissionState: int access$100(com.android.server.pm.PermissionsState$PermissionState)>','<com.android.server.am.ActivityManagerService: void idleUids()>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>','<com.android.server.am.ActivityStack: boolean dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,boolean,java.lang.String,boolean,java.lang.String)>','<com.android.server.wm.WindowManagerService: void stopUsingSavedSurfaceLocked()>','<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountName()>','<com.android.server.connectivity.DataConnectionStats: void access$200(com.android.server.connectivity.DataConnectionStats)>','<com.android.server.audio.PlaybackActivityMonitor: void disableAudioForUid(boolean,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setSyncAdapterPackagesProviderLPw(android.content.pm.PackageManagerInternal$SyncAdapterPackagesProvider)>','<com.android.server.pm.PackageManagerShellCommand$InstallParams: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>','<com.android.server.audio.FocusRequester: void <init>(android.media.AudioAttributes,int,int,android.media.IAudioFocusDispatcher,android.os.IBinder,java.lang.String,com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler,java.lang.String,int,com.android.server.audio.MediaFocusControl,int)>','<com.android.server.input.PersistentDataStore: boolean removeUninstalledKeyboardLayouts(java.util.Set)>','<com.android.server.am.ActivityManagerService$ItemMatcher: int build(java.lang.String[],int)>','<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isImmersive(android.os.IBinder)>','<com.android.server.AlarmManagerService: void dumpImpl(java.io.PrintWriter)>','<com.android.server.location.LocationBasedCountryDetector: boolean isAcceptableProvider(java.lang.String)>','<com.android.server.pm.PackageInstallerSession$1: void <init>()>','<android.net.util.Stopwatch: android.net.util.Stopwatch start()>','<com.android.server.net.NetworkPolicyManagerService: void updateNetworkEnabledNL()>','<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>','<android.net.ip.RouterAdvertisementDaemon: byte access$500()>','<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<com.android.server.connectivity.Tethering: void access$200(com.android.server.connectivity.Tethering,int)>','<com.android.server.pm.PackageManagerService: java.lang.String deriveCodePathName(java.lang.String)>','<com.android.server.firewall.FilterList: com.android.server.firewall.FilterList readFromXml(org.xmlpull.v1.XmlPullParser)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: android.os.IBinder asBinder()>','<com.android.server.pm.PackageManagerService: int getIntentVerificationStatus(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor: void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>','<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.connectivity.tethering.OffloadController$OffloadTetheringStatsProvider: android.net.NetworkStats getTetherStats()>','<com.android.server.pm.BasePermission: void setGids(int[],boolean)>','<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>','<com.android.server.InputMethodManagerService$MethodCallback: void <init>(com.android.server.InputMethodManagerService,com.android.internal.view.IInputMethod,android.view.InputChannel)>','<com.android.server.pm.Settings: void writeAllUsersPackageRestrictionsLPr()>','<com.android.server.pm.PackageManagerService$DumpState: boolean isOptionEnabled(int)>','<com.android.server.wm.WindowContainer: boolean isVisible()>','<com.android.server.am.ActivityManagerShellCommand: int runUnlockUser(java.io.PrintWriter)>','<com.android.server.wm.WindowState: int getSurfaceLayer()>','<com.android.server.wm.StrictModeFlash: void positionSurface(int,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.am.NativeCrashListener: int unpackInt(byte[],int)>','<com.android.server.am.ActivityStack: boolean isATopFinishingTask(com.android.server.am.TaskRecord)>','<com.android.server.pm.Settings: int updateSharedUserPermsLPw(com.android.server.pm.PackageSetting,int)>','<com.android.server.am.ActivityManagerService: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>','<com.android.server.am.UserController$Injector: void updateUserConfigurationLocked()>','<com.android.server.wm.RootWindowContainer: void enableSurfaceTrace(android.os.ParcelFileDescriptor)>','<com.android.server.pm.PackageSettingBase: int[] queryInstalledUsers(int[],boolean)>','<com.android.server.location.FusedLocationHardwareSecure: void <init>(android.hardware.location.IFusedLocationHardware,android.content.Context,java.lang.String)>','<com.android.server.am.DumpHeapProvider: java.lang.String getType(android.net.Uri)>','<com.android.server.wm.WindowState: boolean getGivenInsetsPendingLw()>','<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting addSharedUserLPw(java.lang.String,int,int,int)>','<com.android.server.wm.PinnedStackController: int access$600(com.android.server.wm.PinnedStackController)>','<com.android.server.ConnectivityService: void access$2700(com.android.server.ConnectivityService)>','<com.android.server.wm.TaskWindowContainerController: void reportSnapshotChanged(android.app.ActivityManager$TaskSnapshot)>','<com.android.server.DeviceIdleController: void receivedGenericLocationLocked(android.location.Location)>','<com.android.server.am.BroadcastStats$ActionEntry: void <init>(java.lang.String)>','<com.android.server.usb.UsbDebuggingManager: android.os.Handler access$000(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadCompleteLocked()>','<com.android.server.wm.PinnedStackController: android.view.IPinnedStackListener access$902(com.android.server.wm.PinnedStackController,android.view.IPinnedStackListener)>','<com.android.server.am.AppErrorResult: int get()>','<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String,int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: void access$100(com.android.server.input.PersistentDataStore$InputDeviceState,java.io.PrintWriter,java.lang.String)>','<com.android.server.am.TaskRecord: com.android.server.am.ConfigurationContainer getChildAt(int)>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread: void stopListening()>','<com.android.server.pm.PackageManagerService: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>','<android.hidl.base.V1_0.IBase$Stub: void registerAsService(java.lang.String)>','<com.android.server.wm.WindowState: com.android.server.wm.Task getTask()>','<com.android.server.am.ActivityManagerService: boolean decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType$Holder: void <clinit>()>','<com.android.server.wm.WindowManagerService: void freezeRotation(int)>','<com.android.server.location.LocationRequestStatistics: void <init>()>','<com.android.server.am.ActivityManagerService: void dumpAssociationsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<com.android.server.am.KeyguardController: boolean canShowActivityWhileKeyguardShowing(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.pm.InstantAppRegistry: boolean isInstantAccessGranted(int,int,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$1: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.PinnerService: java.util.ArrayList access$200(com.android.server.PinnerService)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean wasPackageEverLaunched(java.lang.String,int)>','<com.android.server.InputContentUriTokenHandler: void <init>(android.net.Uri,int,java.lang.String,int,int)>','<com.android.server.connectivity.Vpn: java.lang.String access$402(com.android.server.connectivity.Vpn,java.lang.String)>','<com.android.server.location.LocationProviderProxy: void <clinit>()>','<com.android.server.wm.WindowContainer: boolean fillsParent()>','<com.android.server.am.ActivityManagerService$MemBinder: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerService: boolean canShowErrorDialogs()>','<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: void <init>(int,byte,byte)>','<com.android.server.am.ActivityManagerShellCommand: int runUpdateApplicationInfo(java.io.PrintWriter)>','<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getDescriptors(byte)>','<com.android.server.am.RecentTasks: android.graphics.Bitmap getImageFromWriteQueue(java.lang.String)>','<com.android.server.pm.BackgroundDexOptService$1: void run()>','<com.android.server.wm.WindowState: void setOrientationChanging(boolean)>','<com.android.server.am.ActivityManagerService: void enableScreenAfterBoot()>','<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.pm.DefaultPermissionGrantPolicy: com.android.server.pm.PackageManagerService access$000(com.android.server.pm.DefaultPermissionGrantPolicy)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: android.content.pm.ResolveInfo newResult(android.content.pm.PackageParser$ProviderIntentInfo,int,int)>','<com.android.server.pm.PackageManagerService: void clearPackagePreferredActivities(java.lang.String)>','<com.android.server.NsdService: void access$900(com.android.server.NsdService,boolean)>','<com.android.server.wm.WindowStateAnimator: void prepareSurfaceLocked(boolean)>','<com.android.server.DeviceIdleController: void onBootPhase(int)>','<com.android.server.am.ActivityManagerService: void <clinit>()>','<com.android.server.ConnectivityService$NetworkStateTrackerHandler: void handleMessage(android.os.Message)>','<com.android.server.connectivity.Tethering: void access$1500(com.android.server.connectivity.Tethering,com.android.internal.util.State,int)>','<com.android.server.am.ActivityManagerService: void setPersistentVrThread(int)>','<com.android.server.power.ShutdownThread$3: void <init>(com.android.server.power.ShutdownThread)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getVendorID()>','<com.android.server.am.ActivityRecord: android.graphics.Rect getBounds()>','<com.android.server.wm.Session: void windowAddedLocked(java.lang.String)>','<com.android.server.EventLogTags: void writeBackupReset(java.lang.String)>','<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusGrant_syncAf(android.media.AudioFocusInfo,int)>','<com.android.server.pm.PackageManagerService: void notifyDexLoad(java.lang.String,java.util.List,java.lang.String)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$200(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver: android.app.PendingIntent getPendingIntent()>','<com.android.server.wm.RootWindowContainer: void dumpDisplayContents(java.io.PrintWriter)>','<android.hardware.usb.V1_0.PortRole: void readFromParcel(android.os.HwParcel)>','<com.android.server.am.BroadcastRecord: void dump(java.io.PrintWriter,java.lang.String,java.text.SimpleDateFormat)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setFinalCrop(android.graphics.Rect)>','<com.android.server.usb.UsbService: void denyUsbDebugging()>','<com.android.server.connectivity.NetworkAgentInfo: void <init>(android.os.Messenger,com.android.internal.util.AsyncChannel,android.net.Network,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.content.Context,android.os.Handler,android.net.NetworkMisc,android.net.NetworkRequest,com.android.server.ConnectivityService)>','<com.android.server.ConnectivityService: void setAcceptUnvalidated(android.net.Network,boolean,boolean)>','<com.android.server.pm.PackageSettingBase: void setCeDataInode(long,int)>','<com.android.server.am.ActivityManagerService: void pushTempWhitelist()>','<com.android.server.audio.AudioService$VolumeStreamState: int getStreamType()>','<com.android.server.net.NetworkPolicyManagerService: void access$1900(com.android.server.net.NetworkPolicyManagerService,android.net.INetworkPolicyListener,boolean)>','<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig access$800(com.android.server.connectivity.Vpn)>','<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>','<com.android.server.NsdService: void <init>(android.content.Context,com.android.server.NsdService$NsdSettings,android.os.Handler,com.android.server.NsdService$DaemonConnectionSupplier)>','<com.android.server.wm.WindowState: boolean usesRelativeZOrdering()>','<com.android.server.EventLogTags: void writeWmStackRemoved(int)>','<com.android.server.pm.dex.PackageDexUsage: void write(java.io.Writer)>','<com.android.server.InputMethodManagerService: android.content.pm.IPackageManager access$600(com.android.server.InputMethodManagerService)>','<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int,int)>','<com.android.server.connectivity.NetworkAgentInfo: boolean isBackgroundNetwork()>','<com.android.server.wm.WindowManagerService: boolean requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>','<com.android.server.connectivity.Vpn: void onUserAdded(int)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver$1: void <init>(com.android.server.NetworkManagementService$NetdCallbackReceiver)>','<com.android.server.am.ActivityRecord: boolean shouldBeVisibleIgnoringKeyguard(boolean,boolean,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.location.LocationBlacklist: void <init>(android.content.Context,android.os.Handler)>','<com.android.server.wm.TaskStack: void resetAdjustedForIme(boolean)>','<com.android.server.wm.DisplayContent: void getContentRect(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>','<com.android.server.wm.SurfaceControlWithBackground: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int,int,int,com.android.server.wm.WindowSurfaceController)>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>','<com.android.server.am.BatteryStatsService: void noteProcessFinish(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void requestTelephonyBugReport(java.lang.String,java.lang.String)>','<com.android.server.LocationManagerService$Identity: void <init>(int,int,java.lang.String)>','<com.android.server.wm.DisplayContent: boolean animateDimLayers()>','<com.android.server.wm.Task: java.lang.String getName()>','<com.android.server.wm.Session: void reportDropResult(android.view.IWindow,boolean)>','<com.android.server.am.ProcessRecord: void unlinkDeathRecipient()>','<com.android.server.am.ActiveServices: android.content.ComponentName startServiceInnerLocked(com.android.server.am.ActiveServices$ServiceMap,android.content.Intent,com.android.server.am.ServiceRecord,boolean,boolean)>','<com.android.server.am.ProcessRecord: void toShortString(java.lang.StringBuilder)>','<com.android.server.connectivity.tethering.OffloadController: void <clinit>()>','<com.android.server.am.RecentTasks: int trimForTaskLocked(com.android.server.am.TaskRecord,boolean)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int size()>','<com.android.server.audio.MediaFocusControl: void removeFocusFollower(android.media.audiopolicy.IAudioPolicyCallback)>','<android.hardware.usb.V1_1.PortStatus_1_1: boolean equals(java.lang.Object)>','<com.android.server.wm.Session: boolean performDrag(android.view.IWindow,android.os.IBinder,int,float,float,float,float,android.content.ClipData)>','<com.android.server.statusbar.StatusBarManagerService$4: void <init>(com.android.server.statusbar.StatusBarManagerService,android.os.IBinder,int,int,boolean)>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionPrepared(com.android.server.pm.PackageInstallerSession)>','<com.android.server.usb.UsbDebuggingManager: void <init>(android.content.Context)>','<com.android.server.location.LocationBasedCountryDetector$1: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<com.android.server.AlarmManagerService: void setDeviceIdleUserWhitelistImpl(int[])>','<com.android.server.am.UserState: void setState(int)>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getPackageLPr(java.lang.String)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean switchKeyboardLayout(com.android.internal.inputmethod.InputMethodSubtypeHandle)>','<com.android.server.am.ActivityStackSupervisor: void activityRelaunchedLocked(android.os.IBinder)>','<com.android.server.net.NetworkPolicyManagerService: void access$900(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.TaskRecord: com.android.server.am.ConfigurationContainer getParent()>','<com.android.server.RescueParty: void onSettingsProviderPublished(android.content.Context)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabled(int)>','<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState getTouchableWinAtPointLocked(float,float)>','<com.android.server.connectivity.NetworkMonitor: int access$1700(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$ValidationStage,com.android.server.connectivity.NetworkMonitor$EvaluationResult)>','<com.android.server.wm.WindowState: boolean getNeedsMenuLw(android.view.WindowManagerPolicy$WindowState)>','<com.android.server.am.ActivityStack: void getTasksLocked(java.util.List,int,boolean)>','<com.android.server.firewall.PortFilter: void <init>(int,int,com.android.server.firewall.PortFilter$1)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner,int)>','<com.android.server.audio.AudioService$DeviceListSpec: void <init>(com.android.server.audio.AudioService,int,java.lang.String,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$7: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.connectivity.Tethering: boolean access$902(com.android.server.connectivity.Tethering,boolean)>','<com.android.server.am.ActivityStackSupervisor: void onDisplayChanged(int)>','<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(int)>','<com.android.server.wm.TaskSnapshotLoader: void <init>(com.android.server.wm.TaskSnapshotPersister)>','<com.android.server.wm.WindowState$WindowId: void registerFocusObserver(android.view.IWindowFocusObserver)>','<com.android.server.am.UserState: void <init>(android.os.UserHandle)>','<com.android.server.wm.DisplayContent$TaskStackContainers: void removeStackFromDisplay(com.android.server.wm.TaskStack)>','<com.android.server.wm.AppWindowContainerController: void removeContainer(int)>','<com.android.server.input.InputManagerService$12: void <init>(com.android.server.input.InputManagerService,android.os.Handler)>','<com.android.server.am.ActivityStack: void getBoundsForNewConfiguration(android.graphics.Rect)>','<com.android.server.am.EventLogTags: void writeAmRestartActivity(int,int,int,java.lang.String)>','<com.android.server.AlarmManagerService$AlarmHandler: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.wm.AppWindowToken: void stepAppWindowsAnimation(long)>','<com.android.server.pm.UserManagerService: void onBeforeStartUser(int)>','<com.android.server.am.ServiceRecord$1: void <init>(com.android.server.am.ServiceRecord,android.app.Notification,java.lang.String,int,int,int)>','<com.android.server.am.UserController$3: void <init>(com.android.server.am.UserController,boolean)>','<com.android.server.LockGuard: java.lang.Object guard(java.lang.Object)>','<com.android.server.pm.Settings: boolean setPackageStoppedStateLPw(com.android.server.pm.PackageManagerService,java.lang.String,boolean,boolean,int,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void handleMessage(android.os.Message)>','<com.android.server.AppOpsService$2: void <init>(com.android.server.AppOpsService)>','<com.android.server.AlarmManagerService$LocalService: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.power.PowerManagerService: void access$5300(com.android.server.power.PowerManagerService,java.io.FileDescriptor)>','<com.android.server.wm.WindowSurfacePlacer: boolean isLayoutDeferred()>','<com.android.server.am.ActiveServices$ActiveForegroundApp: void <init>()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats$PackageStats getOrCreateCompilerPackageStats(java.lang.String)>','<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.DeviceIdleController$8: void onProviderEnabled(java.lang.String)>','<android.net.INetd$Stub$Proxy: boolean firewallReplaceUidChain(java.lang.String,boolean,int[])>','<com.android.server.wm.WindowSurfaceController: android.os.IBinder getHandle()>','<com.android.server.InputMethodManagerService: void access$200(com.android.server.InputMethodManagerService,java.lang.String)>','<com.android.server.am.ActivityManagerService$AppTaskImpl: android.app.ActivityManager$RecentTaskInfo getTaskInfo()>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>','<com.android.server.pm.PackageManagerService$InstallParams: void handleReturnCode()>','<com.android.server.InputContentUriTokenHandler: void take()>','<com.android.server.pm.PackageManagerService$PackageFreezer: void close()>','<com.android.server.EventLogTags: void writeWmBootAnimationDone(long)>','<com.android.server.LocationManagerService: android.util.ArrayMap access$1000(com.android.server.LocationManagerService)>','<com.android.server.statusbar.StatusBarManagerService: com.android.server.notification.NotificationDelegate access$002(com.android.server.statusbar.StatusBarManagerService,com.android.server.notification.NotificationDelegate)>','<com.android.server.usb.UsbDebuggingManager: void access$700(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getWindowTokenDisplay(com.android.server.wm.WindowToken)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$CategoriesIterGenerator: java.util.Iterator generate(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.am.BatteryStatsService: void noteSyncStart(java.lang.String,int)>','<com.android.server.NetworkManagementService: void registerTetheringStatsProvider(android.net.ITetheringStatsProvider,java.lang.String)>','<com.android.server.AnyMotionDetector: boolean access$802(com.android.server.AnyMotionDetector,boolean)>','<com.android.server.wm.AppWindowToken: void <init>(com.android.server.wm.WindowManagerService,android.view.IApplicationToken,boolean,com.android.server.wm.DisplayContent,boolean,android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.usb.descriptors.ByteStream: void resetReadCount()>','<com.android.server.usb.UsbMidiDevice: java.lang.Object access$000(com.android.server.usb.UsbMidiDevice)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void notifyInputDevicesChanged(int[])>','<com.android.server.connectivity.NetworkDiagnostics$Measurement: boolean checkSucceeded()>','<com.android.server.am.ActivityManagerService: boolean isIntentSenderAnActivity(android.content.IIntentSender)>','<com.android.server.connectivity.Tethering: com.android.server.connectivity.tethering.OffloadController access$1300(com.android.server.connectivity.Tethering)>','<com.android.server.audio.AudioService: java.util.HashMap access$10700(com.android.server.audio.AudioService)>','<com.android.server.am.ActivityManagerService: boolean isShuttingDownLocked()>','<com.android.server.usb.UsbAlsaManager: void setAccessoryAudioState(boolean,int,int)>','<com.android.server.am.UserController: void continueUserSwitch(com.android.server.am.UserState,int,int)>','<com.android.server.wm.WallpaperWindowToken: void hideWallpaperToken(boolean,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: int runGetConfig(java.io.PrintWriter)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void notifyRoleSwitchStatus(java.lang.String,android.hardware.usb.V1_0.PortRole,int)>','<com.android.server.wm.WindowManagerService$LocalService: void waitForAllWindowsDrawn(java.lang.Runnable,long)>','<com.android.server.am.BatteryStatsService: void noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>','<com.android.server.wm.WindowManagerService: void removeObsoleteTaskFiles(android.util.ArraySet,int[])>','<com.android.server.pm.Settings: void processRestoredPermissionGrantLPr(java.lang.String,java.lang.String,boolean,int,int)>','<com.android.server.am.ActivityManagerService: android.graphics.Rect getTaskBounds(int)>','<com.android.server.wm.PinnedStackController: float getAspectRatio()>','<com.android.server.DeviceIdleController$LocalService: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.wm.RootWindowContainer: void dumpWindowsNoHeader(java.io.PrintWriter,boolean,java.util.ArrayList)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.pm.PackageParser$ServiceIntentInfo)>','<com.android.server.wm.WindowState: boolean isDimming()>','<com.android.server.am.ActivityManagerService$Identity: void <init>(com.android.server.am.ActivityManagerService,android.os.IBinder,int,int)>','<com.android.server.location.FusedLocationHardwareSecure: void requestBatchOfLocations(int)>','<com.android.server.location.LocationBasedCountryDetector$1: void <init>(com.android.server.location.LocationBasedCountryDetector)>','<com.android.server.pm.UserManagerService: void evictCredentialEncryptionKey(int)>','<com.android.server.wm.DragAndDropPermissionsHandler: void <init>(android.content.ClipData,int,java.lang.String,int,int,int)>','<com.android.server.NetworkManagementService: void unregisterTetheringStatsProvider(android.net.ITetheringStatsProvider)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.KeyguardDisableHandler access$000(com.android.server.wm.WindowManagerService)>','<com.android.server.am.ActivityStackSupervisor: void onDisplayRemoved(int)>','<com.android.server.pm.Settings: void <init>(java.io.File,java.lang.Object)>','<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType: com.android.server.connectivity.NetworkNotificationManager$NotificationType getFromId(int)>','<com.android.server.wm.InputMonitor: boolean access$602(com.android.server.wm.InputMonitor,boolean)>','<com.android.server.wm.DisplayContent: int getOrientation()>','<com.android.server.net.NetworkPolicyManagerService$AppIdleStateChangeListener: void onParoleStateChanged(boolean)>','<com.android.server.net.NetworkStatsRecorder: void importLegacyUidLocked(java.io.File)>','<com.android.server.location.GnssLocationProvider$NetworkLocationListener: void onLocationChanged(android.location.Location)>','<com.android.server.wm.WindowState: void resetDragResizingChangeReported()>','<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>','<com.android.server.wm.AccessibilityController: void onRectangleOnScreenRequestedLocked(android.graphics.Rect)>','<com.android.server.wm.RootWindowContainer: void dumpTokens(java.io.PrintWriter,boolean)>','<com.android.server.connectivity.Tethering$1: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<android.net.util.PrefixUtils: void addNonForwardablePrefixes(java.util.Set)>','<com.android.server.pm.Settings: java.lang.String getInstallerPackageNameLPr(java.lang.String)>','<com.android.server.EventLogTags: void writeLockdownVpnError(int)>','<com.android.server.pm.PackageSettingBase: long getCeDataInode(int)>','<com.android.server.connectivity.Vpn: void access$1100(com.android.server.connectivity.Vpn)>','<com.android.server.usb.UsbUserSettingsManager: void checkPermission(android.hardware.usb.UsbAccessory)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$700(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.input.InputWindowHandle: void finalize()>','<com.android.server.AnyMotionDetector$Vector3: com.android.server.AnyMotionDetector$Vector3 normalized()>','<com.android.server.EventLogTags: void writeDeviceIdleOnComplete()>','<android.net.util.Stopwatch: void <init>()>','<com.android.server.input.InputManagerService: void access$100(com.android.server.input.InputManagerService)>','<com.android.server.PinnerService$PinnerHandler: void <init>(com.android.server.PinnerService,android.os.Looper)>','<com.android.server.am.TaskRecord: void <init>(com.android.server.am.ActivityManagerService,int,android.content.pm.ActivityInfo,android.content.Intent,android.app.ActivityManager$TaskDescription,android.app.ActivityManager$TaskThumbnailInfo)>','<com.android.server.pm.PackageManagerService: boolean setRequiredForSystemUser(java.lang.String,boolean)>','<com.android.server.RescueParty: void noteBoot(android.content.Context)>','<com.android.server.power.PowerManagerService: void access$1200(com.android.server.power.PowerManagerService)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getNextValidLaunchStackLocked(com.android.server.am.ActivityRecord,int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool useVrFlinger()>','<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppDirectInternal(int,int,long,boolean,java.lang.String)>','<com.android.server.am.ActivityRecord: void makeVisibleIfNeeded(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$AuthoritiesIterGenerator: void <init>(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.wm.WindowState: boolean hasAppShownWindows()>','<com.android.server.net.NetworkStatsCollection$Key: int hashCode()>','<com.android.server.am.InstrumentationReporter: void reportFinished(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>','<com.android.server.am.BatteryStatsService: boolean isOnBattery()>','<com.android.server.NetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setVoiceInteractionPackagesProviderLPw(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.am.BatteryStatsService: void noteBleScanResults(android.os.WorkSource,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy$1: void <init>(com.android.server.pm.DefaultPermissionGrantPolicy,android.os.Looper)>','<android.net.util.MultinetworkPolicyTracker$SettingObserver: void <init>(android.net.util.MultinetworkPolicyTracker)>','<com.android.server.input.PersistentDataStore: java.lang.String[] getKeyboardLayouts(java.lang.String)>','<com.android.server.DeviceIdleController: android.content.BroadcastReceiver access$1200(com.android.server.DeviceIdleController)>','<com.android.server.am.ActivityStack: boolean deferScheduleMultiWindowModeChanged()>','<com.android.server.am.HealthStatsBatteryStatsWriter: void writePkg(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pkg)>','<com.android.server.connectivity.PermissionMonitor: void access$000(com.android.server.connectivity.PermissionMonitor,int)>','<com.android.server.audio.AudioService$AudioServiceUserRestrictionsListener: void <init>(com.android.server.audio.AudioService,com.android.server.audio.AudioService$1)>','<com.android.server.wm.WindowManagerService$7: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder)>','<com.android.server.pm.UserManagerService: int[] getUserIds()>','<com.android.server.ConnectivityService: void reportInetCondition(int,int)>','<com.android.server.pm.PackageUsage: boolean isHistoricalPackageUsageAvailable()>','<com.android.server.pm.UserManagerService: boolean isUserUnlockingOrUnlocked(int)>','<android.hardware.configstore.V1_0.OptionalUInt64: int hashCode()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void requestInstantAppResolutionPhaseTwo(android.content.pm.AuxiliaryResolveInfo,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,int)>','<com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)>','<com.android.server.am.BroadcastRecord: java.lang.String toString()>','<com.android.server.wm.AppWindowToken: void updateReportedVisibilityLocked()>','<com.android.server.pm.UserRestrictionsUtils: boolean canDeviceOwnerChange(java.lang.String)>','<com.android.server.am.ActivityManagerService$28: void run()>','<com.android.server.pm.PermissionsState$PermissionState: int access$102(com.android.server.pm.PermissionsState$PermissionState,int)>','<com.android.server.wm.AppWindowToken: void removeIfPossible()>','<com.android.server.pm.UserManagerService: java.util.ArrayList access$400(com.android.server.pm.UserManagerService)>','<com.android.server.am.ActivityManagerService: void moveTaskToFrontLocked(int,int,android.os.Bundle,boolean)>','<com.android.server.pm.PackageManagerService: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>','<com.android.server.wm.ViewServer$ViewServerWorker: void run()>','<com.android.server.pm.PackageManagerService$DumpState: void setDump(int)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivitiesAsUser(java.util.List,int)>','<com.android.server.usb.UsbDebuggingManager: void clearUsbDebuggingKeys()>','<com.android.server.usb.UsbAudioDevice: java.lang.String toString()>','<com.android.server.connectivity.PacManager: void access$600(com.android.server.connectivity.PacManager)>','<com.android.server.am.LaunchingTaskPositioner: void configure(android.graphics.Rect)>','<com.android.server.wm.WindowManagerService: void onSystemUiStarted()>','<com.android.server.location.GnssLocationProvider: boolean access$3700(int,double,double,double,int,int,int,int)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void <init>(com.android.server.ConnectivityService)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.audio.AudioService: int access$8300(com.android.server.audio.AudioService)>','<com.android.server.wm.BlackFrame$BlackSurface: void <init>(com.android.server.wm.BlackFrame,android.view.SurfaceSession,int,int,int,int,int,int)>','<com.android.server.pm.PackageInstallerSession: void close()>','<com.android.server.LocationManagerService: android.content.Context access$000(com.android.server.LocationManagerService)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$800(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.am.ActivityManagerService: void cancelIntentSender(android.content.IIntentSender)>','<com.android.server.pm.PackageManagerService: void deletePackageAsUser(java.lang.String,int,android.content.pm.IPackageDeleteObserver,int,int)>','<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void onDequeuedLocked()>','<com.android.server.pm.PackageInstallerService: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>','<com.android.server.location.LocationFudger: void <clinit>()>','<com.android.server.audio.AudioService: android.media.AudioManagerInternal$RingerModeDelegate access$10002(com.android.server.audio.AudioService,android.media.AudioManagerInternal$RingerModeDelegate)>','<com.android.server.net.NetworkStatsService: android.content.Context access$1300(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void setInsets(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.location.GpsXtraDownloader: void <clinit>()>','<com.android.server.wm.AccessibilityController: void setMagnificationSpecLocked(android.view.MagnificationSpec)>','<com.android.server.usb.UsbDeviceManager: int access$1700(com.android.server.usb.UsbDeviceManager)>','<com.android.server.power.WirelessChargerDetector: java.lang.Object access$000(com.android.server.power.WirelessChargerDetector)>','<com.android.server.location.GnssStatusListenerHelper: void onFirstFix(int)>','<com.android.server.wm.Task: void removeChild(com.android.server.wm.AppWindowToken)>','<com.android.server.wm.WallpaperVisibilityListeners: void <init>()>','<com.android.server.pm.PackageManagerService$12: void run()>','<com.android.server.wm.WindowManagerService: void setHoldScreenLocked(com.android.server.wm.Session)>','<com.android.server.pm.dex.DexManager: void load(java.util.Map)>','<com.android.server.wm.TaskStack: boolean isAnimatingBounds()>','<com.android.server.am.AppErrors: void stopReportingCrashesLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: android.content.pm.PackageParser$ProviderIntentInfo[] newArray(int)>','<com.android.server.pm.UserManagerService: int getUserRestrictionSource(java.lang.String,int)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>','<com.android.server.net.NetworkStatsService: void advisePersistThreshold(long)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: java.lang.String toString()>','<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory,com.android.server.usb.UsbUserSettingsManager)>','<com.android.server.usb.UsbPortManager: void <init>(android.content.Context)>','<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>','<com.android.server.wm.AppTransition: android.view.animation.Animation prepareThumbnailAnimation(android.view.animation.Animation,int,int,int)>','<com.android.server.location.GeofenceManager: void access$200(com.android.server.location.GeofenceManager)>','<com.android.server.usb.UsbProfileGroupSettingsManager: android.os.UserHandle access$100(com.android.server.usb.UsbProfileGroupSettingsManager)>','<com.android.server.wm.DisplayContent: boolean hasAccess(int)>','<com.android.server.NativeDaemonConnector$ResponseQueue: void add(int,com.android.server.NativeDaemonEvent)>','<com.android.server.connectivity.Vpn: void onUserRemoved(int)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void readFromParcel(android.os.HwParcel)>','<com.android.server.location.GnssLocationProvider: int access$302(com.android.server.location.GnssLocationProvider,int)>','<com.android.server.wm.TaskPositioner: android.graphics.Rect access$300(com.android.server.wm.TaskPositioner)>','<com.android.server.pm.CompilerStats: void writeInternal(java.lang.Void)>','<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(byte)>','<com.android.server.wm.WindowSurfaceController: float getHeight()>','<com.android.server.wm.AppTransition: android.view.animation.Animation createAspectScaledThumbnailEnterExitAnimationLocked(int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,int)>','<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State access$600(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.wm.TaskStack: boolean updateBoundsAfterConfigChange()>','<com.android.server.wm.Session: android.view.IWindowId getWindowId(android.os.IBinder)>','<android.hardware.configstore.V1_0.OptionalBool: int hashCode()>','<com.android.server.usb.UsbPortManager: boolean access$000(com.android.server.usb.UsbPortManager)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void checkDuck(android.media.AudioPlaybackConfiguration)>','<com.android.server.EventLogTags: void writeWmStackCreated(int)>','<com.android.server.AnimationThread: android.os.Handler getHandler()>','<com.android.server.am.ActivityStackSupervisor: void getTasksLocked(int,java.util.List,int,boolean)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getDevClass()>','<com.android.server.location.LocationProviderProxy: android.os.WorkSource access$400(com.android.server.location.LocationProviderProxy)>','<com.android.server.location.GnssLocationProvider: void access$1100(com.android.server.location.GnssLocationProvider,android.content.Context)>','<com.android.server.audio.FocusRequester: void handleFocusGainFromRequest(int)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,android.os.UserHandle)>','<com.android.server.pm.PackageSettingBase: void addEnabledComponent(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$WaitInfo: android.app.WaitResult getResult()>','<com.android.server.pm.PackageInstallerService$InternalCallback$1: void <init>(com.android.server.pm.PackageInstallerService$InternalCallback,com.android.server.pm.PackageInstallerSession)>','<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting)>','<com.android.server.net.NetworkIdentitySet: int compareTo(com.android.server.net.NetworkIdentitySet)>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void read(java.io.InputStream)>','<com.android.server.RescueParty$BootThreshold: long getStart()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.view.WindowManagerInternal$MagnificationCallbacks access$1400(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.audio.AudioService: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: boolean init()>','<com.android.server.am.BatteryStatsService: byte[] getStatistics()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$TetheredState: boolean processMessage(android.os.Message)>','<com.android.server.wm.DisplayContent: boolean getAltOrientation()>','<com.android.server.am.ProcessRecord: java.lang.String[] getPackageList()>','<com.android.server.usb.UsbDeviceManager: java.lang.String getPersistProp(boolean)>','<com.android.server.location.RemoteListenerHelper$HandlerRunnable: void run()>','<com.android.server.wm.WindowManagerService: void disableNonVrUi(boolean)>','<com.android.server.am.TaskRecord: android.graphics.Rect validateBounds(android.graphics.Rect)>','<com.android.server.am.ActivityManagerShellCommand: int runDumpHeap(java.io.PrintWriter)>','<com.android.server.wm.AlertWindowNotification: void post()>','<com.android.server.usb.UsbHostManager: void access$000(com.android.server.usb.UsbHostManager)>','<com.android.server.wm.TaskSnapshotPersister$1: void run()>','<com.android.server.NativeDaemonConnector: void <init>(com.android.server.INativeDaemonConnectorCallbacks,java.lang.String,int,java.lang.String,int,android.os.PowerManager$WakeLock)>','<com.android.server.wm.DockedStackDividerController: int getImeHeightAdjustedFor()>','<com.android.server.location.GnssLocationProvider$16: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.TaskRecord: boolean reparent(int,int,int,boolean,boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void removeProvider(android.content.pm.PackageParser$Provider)>','<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>','<com.android.server.am.UserController: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>','<com.android.server.am.ActivityManagerService: void incrementProcStateSeqAndNotifyAppsLocked()>','<com.android.server.am.ActivityManagerService: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)>','<com.android.server.wm.TaskSnapshotSurface: boolean access$100(com.android.server.wm.TaskSnapshotSurface)>','<com.android.server.connectivity.NetworkMonitor: void <init>(android.content.Context,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkRequest)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool hasWideColorDisplay()>','<com.android.server.usb.descriptors.UsbACOutputTerminal: void <init>(int,byte,byte,byte)>','<com.android.server.pm.IntentFilterVerificationState: void setPendingState()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int copyApk(com.android.internal.app.IMediaContainerService,boolean)>','<com.android.server.am.TaskRecord: void addActivityToTop(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowState: void removeImmediately()>','<com.android.server.NsdService$ClientInfo: android.net.nsd.NsdServiceInfo access$2202(com.android.server.NsdService$ClientInfo,android.net.nsd.NsdServiceInfo)>','<com.android.server.am.UserController$2: void <init>(com.android.server.am.UserController,int)>','<com.android.server.pm.PermissionsState$PermissionState: boolean isDefault()>','<com.android.server.wm.PointerEventDispatcher: void <init>(android.view.InputChannel)>','<com.android.server.AlarmManagerService$Batch: boolean remove(java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmCreateTask(int,int)>','<com.android.server.pm.PackageManagerService: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)>','<com.android.server.RescueParty: boolean isAttemptingFactoryReset()>','<com.android.server.NetworkManagementService$Injector: void setUidOnMeteredNetworkList(boolean,int,boolean)>','<com.android.server.am.ActivityManagerService: void access$000(com.android.server.am.ActivityManagerService,int)>','<com.android.server.pm.Installer: void setWarnIfHeld(java.lang.Object)>','<com.android.server.wm.Task: boolean inFreeformWorkspace()>','<com.android.server.InputMethodManagerService: void resetCurrentMethodAndClient(int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void addActivity(android.content.pm.PackageParser$Activity,java.lang.String)>','<com.android.server.connectivity.Vpn: android.net.NetworkInfo access$1800(com.android.server.connectivity.Vpn)>','<com.android.server.wm.WindowState$DeadWindowEventReceiver: void onInputEvent(android.view.InputEvent,int)>','<com.android.server.usb.UsbService: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>','<com.android.server.am.ActiveServices: void serviceDoneExecutingLocked(com.android.server.am.ServiceRecord,int,int,int)>','<android.hardware.configstore.V1_0.OptionalInt64: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityStackSupervisor: boolean allPausedActivitiesComplete()>','<com.android.server.statusbar.StatusBarManagerService: void access$300(com.android.server.statusbar.StatusBarManagerService,int,int,int,int,android.graphics.Rect,android.graphics.Rect,java.lang.String)>','<com.android.server.wm.WindowSurfacePlacer: int handleAppTransitionReadyLocked()>','<com.android.server.wm.WindowContainer: int compareTo(com.android.server.wm.WindowContainer)>','<com.android.server.location.GnssLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.audio.MediaFocusControl: void access$300(com.android.server.audio.MediaFocusControl,android.os.IBinder)>','<com.android.server.net.NetworkPolicyManagerService: void handleNetworkPoliciesUpdateAL(boolean)>','<com.android.server.wm.TaskSnapshotCache: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.TaskSnapshotLoader)>','<com.android.server.power.PowerManagerService$2: void releaseSuspendBlocker()>','<com.android.server.wm.WindowStateAnimator: java.lang.String drawStateToString()>','<com.android.server.firewall.StringFilter$ValueProvider: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.pm.BackgroundDexOptService: void schedule(android.content.Context)>','<com.android.server.am.TaskRecord: void getLastThumbnail(android.app.ActivityManager$TaskThumbnail)>','<com.android.server.wm.RootWindowContainer: void performSurfacePlacement(boolean)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>','<com.android.server.am.ActivityRecord: void setDeferHidingClient(boolean)>','<com.android.server.am.ActivityRecord: void activityResumedLocked(android.os.IBinder)>','<com.android.server.audio.RotationHelper: void disable()>','<com.android.server.am.BackupRecord: void <init>(com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.pm.ApplicationInfo,int)>','<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState access$1000(com.android.server.NsdService$NsdStateMachine)>','<com.android.server.wm.WindowState$WindowId: void unregisterFocusObserver(android.view.IWindowFocusObserver)>','<com.android.server.NetworkManagementService: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>','<com.android.server.wm.WindowManagerService$RotationWatcher: void <init>(com.android.server.wm.WindowManagerService,android.view.IRotationWatcher,android.os.IBinder$DeathRecipient,int)>','<com.android.server.pm.PackageManagerService: void grantRuntimePermission(java.lang.String,java.lang.String,int)>','<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.ParallelPackageParser$ParseResult: void <init>()>','<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable,android.util.BootTimingsTraceLog)>','<com.android.server.am.ActivityStackSupervisor: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>','<com.android.server.am.ActivityStack: boolean moveTaskToBackLocked(int)>','<com.android.server.wm.WindowManagerService: void unregisterAppFreezeListener(com.android.server.wm.WindowManagerService$AppFreezeListener)>','<com.android.server.ConnectivityService$UnneededFor: void <clinit>()>','<com.android.server.wm.TaskStack: int getMinimizeDistance()>','<com.android.server.audio.AudioService$RmtSbmxFullVolDeathHandler: void binderDied()>','<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>','<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>()>','<com.android.server.am.IntentBindRecord: int collectFlags()>','<com.android.server.am.ActivityManagerService$1: boolean allowFilterResult(com.android.server.am.BroadcastFilter,java.util.List)>','<android.net.INetd$Stub$Proxy: void setMetricsReportingLevel(int)>','<com.android.server.am.BatteryStatsService: void notePhoneState(int)>','<com.android.server.pm.dex.PackageDexUsage: com.android.server.pm.dex.PackageDexUsage$PackageUseInfo getPackageUseInfo(java.lang.String)>','<com.android.server.net.NetworkStatsService: android.net.NetworkStatsHistory access$600(com.android.server.net.NetworkStatsService,android.net.NetworkTemplate,int,int)>','<com.android.server.am.ActivityStack: boolean layoutTaskInStack(com.android.server.am.TaskRecord,android.content.pm.ActivityInfo$WindowLayout)>','<com.android.server.am.RecentTasks: com.android.server.am.TaskRecord taskForIdLocked(int)>','<com.android.server.DeviceIdleController$BinderService: java.lang.String[] getFullPowerWhitelist()>','<com.android.server.pm.Settings: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationLPr(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord getHomeActivity()>','<com.android.server.location.GnssLocationProvider: void access$900(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.WindowState: android.graphics.Rect getFrameLw()>','<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>','<android.hardware.usb.V1_1.PortStatus_1_1: java.lang.String toString()>','<com.android.server.InputMethodManagerService$SettingsObserver: void <init>(com.android.server.InputMethodManagerService,android.os.Handler)>','<com.android.server.am.AppErrorDialog: void onClick(android.view.View)>','<com.android.server.wm.WindowManagerService: void setSwitchingUser(boolean)>','<com.android.server.wm.WindowManagerService: float access$702(com.android.server.wm.WindowManagerService,float)>','<com.android.server.AppOpsService$Callback: void binderDied()>','<com.android.server.am.UidRecord: void <init>(int)>','<com.android.server.pm.PackageManagerService: void createNewUser(int,java.lang.String[])>','<com.android.server.NsdService$ClientInfo: int access$2400(com.android.server.NsdService$ClientInfo,int)>','<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: java.util.concurrent.SynchronousQueue access$200(com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver)>','<com.android.server.firewall.StringFilter$EqualsFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.wm.DockedStackDividerController: void positionDockedStackedDivider(android.graphics.Rect)>','<com.android.server.wm.WindowManagerService: void setWindowOpaque(android.os.IBinder,boolean)>','<com.android.server.ConnectivityService: void factoryReset()>','<com.android.server.pm.PackageSettingBase: int[] getNotInstalledUserIds()>','<com.android.server.location.RemoteListenerHelper: boolean access$000(com.android.server.location.RemoteListenerHelper)>','<com.android.server.am.ActivityManagerService$LocalService: void saveANRState(java.lang.String)>','<com.android.server.pm.PackageManagerService: void access$5900(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionProgressChanged(com.android.server.pm.PackageInstallerSession,float)>','<com.android.server.am.PendingIntentRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.PendingIntentRecord$Key,int)>','<android.hardware.usb.V1_0.PortMode: void <init>()>','<com.android.server.wm.Session: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>','<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte getNumJacks()>','<com.android.server.LocationManagerService$1: java.lang.String[] getPackages(int)>','<com.android.server.RescueParty$Threshold: void <init>(int,int,long)>','<com.android.server.am.ActiveServices$ServiceMap: void ensureNotStartingBackgroundLocked(com.android.server.am.ServiceRecord)>','<com.android.server.am.ActivityManagerShellCommand: void onHelp()>','<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>','<com.android.server.wm.Task: void positionChildAt(int,com.android.server.wm.AppWindowToken,boolean)>','<com.android.server.firewall.StringFilter$7: void <init>(java.lang.String)>','<com.android.server.wm.Session: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>','<com.android.server.wm.WindowManagerService$MousePositionTracker: void onPointerEvent(android.view.MotionEvent)>','<com.android.server.DeviceIdleController: void exitMaintenanceEarlyIfNeededLocked()>','<com.android.server.power.PowerManagerService: boolean isLightDeviceIdleModeInternal()>','<com.android.server.am.AppWaitingForDebuggerDialog$1: void <init>(com.android.server.am.AppWaitingForDebuggerDialog)>','<com.android.server.wm.DisplaySettings: void <init>()>','<com.android.server.AlarmManagerService$InteractiveStateReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$InitialState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ActivityManagerService: boolean convertFromTranslucent(android.os.IBinder)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void <clinit>()>','<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState findMainWindow()>','<com.android.server.pm.UserManagerService: void clearSeedAccountData()>','<com.android.server.usb.UsbDebuggingManager: boolean access$100(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.connectivity.DataConnectionStats: void startMonitoring()>','<com.android.server.NetworkManagementService: void setUidMeteredNetworkBlacklist(int,boolean)>','<com.android.server.am.ActivityStack: boolean resumeTopActivityUncheckedLocked(com.android.server.am.ActivityRecord,android.app.ActivityOptions)>','<com.android.server.connectivity.Tethering: com.android.server.connectivity.tethering.TetheringConfiguration access$1900(com.android.server.connectivity.Tethering)>','<com.android.server.AlarmManagerService: long convertToElapsed(long,int)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void onRotationChangedLocked()>','<com.android.server.pm.Installer: void restoreconAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isKeyguardLocked()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>','<com.android.server.LocationManagerService: void access$1600(com.android.server.LocationManagerService)>','<com.android.server.am.ActivityManagerService$CpuBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.audio.AudioService: void disconnectA2dpSink()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doRename(int,android.content.pm.PackageParser$Package,java.lang.String)>','<com.android.server.am.TaskPersister$LazyTaskWriterThread: void <init>(com.android.server.am.TaskPersister,java.lang.String)>','<com.android.server.wm.TaskStack: boolean deferScheduleMultiWindowModeChanged()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setSimCallManagerPackagesProviderLPw(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)>','<com.android.server.pm.UserManagerService: boolean canAddMoreManagedProfiles(int,boolean)>','<com.android.server.audio.AudioService$SoundPoolListenerThread: void run()>','<com.android.server.pm.PackageManagerService: void registerDexModule(java.lang.String,java.lang.String,boolean,android.content.pm.IDexModuleRegisterCallback)>','<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int,int,int)>','<com.android.server.pm.PackageManagerService$29: void run()>','<com.android.server.connectivity.NetworkAgentInfo: void updateLingerTimer()>','<com.android.server.am.BatteryStatsService: void notePackageInstalled(java.lang.String,int)>','<com.android.server.pm.UserManagerService: void finishRemoveUser(int)>','<com.android.server.am.ActivityStack$ActivityState: void <clinit>()>','<com.android.server.connectivity.tethering.TetheringConfiguration: boolean isWifi(java.lang.String)>','<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>','<com.android.server.power.PowerManagerService: void access$2200(com.android.server.power.PowerManagerService)>','<com.android.server.wm.WindowState: void addWinAnimatorToList(java.util.ArrayList)>','<com.android.server.am.ActivityStackSupervisor: void deleteActivityContainerRecord(int)>','<com.android.server.wm.InputConsumerImpl: void disposeChannelsLw()>','<com.android.server.pm.PackageManagerService: void querySyncProviders(java.util.List,java.util.List)>','<com.android.server.pm.UserManagerService: android.os.Bundle getDefaultGuestRestrictions()>','<com.android.server.am.ActivityRecord: int getChildCount()>','<com.android.server.usb.descriptors.UsbACInputTerminal: byte getTerminal()>','<com.android.server.audio.AudioService: boolean access$8702(com.android.server.audio.AudioService,boolean)>','<com.android.server.connectivity.PacManager: android.net.Uri access$000(com.android.server.connectivity.PacManager)>','<android.net.ip.RouterAdvertisementDaemon: void <clinit>()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.ActivityStackSupervisor access$100(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.pm.PackageManagerServiceUtils: java.lang.String packagesToString(java.util.Collection)>','<com.android.server.input.InputManagerService: int isInTabletMode()>','<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>','<com.android.server.audio.AudioService: int getVibrateSetting(int)>','<com.android.server.pm.PackageManagerService: java.util.List access$7200(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,int,boolean)>','<com.android.server.input.InputManagerService: void cancelVibrate(int,android.os.IBinder)>','<com.android.server.usb.UsbPortManager: android.hardware.usb.V1_0.IUsb access$402(com.android.server.usb.UsbPortManager,android.hardware.usb.V1_0.IUsb)>','<com.android.server.EventLogTags: void writeIfwIntentMatched(int,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.audio.AudioService: void setBluetoothScoOn(boolean)>','<com.android.server.audio.AudioService: boolean checkAudioSettingsPermission(java.lang.String)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.audio.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmProcDied(int,int,java.lang.String,int,int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: void <init>(int,byte)>','<com.android.server.connectivity.PacManager: android.os.Handler access$1000(com.android.server.connectivity.PacManager)>','<com.android.server.connectivity.Vpn: void access$1700(com.android.server.connectivity.Vpn)>','<com.android.server.pm.UserManagerService: int getMaxManagedProfiles()>','<com.android.server.am.UserController: void dispatchUserSwitch(com.android.server.am.UserState,int,int)>','<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>','<com.android.server.input.PersistentDataStore: android.hardware.input.TouchCalibration getTouchCalibration(java.lang.String,int)>','<com.android.server.wm.TaskStack: boolean shouldIgnoreInput()>','<com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$5: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void <init>()>','<com.android.server.am.TaskRecord: java.lang.String toString()>','<com.android.server.input.InputManagerService$1: void <init>(com.android.server.input.InputManagerService)>','<com.android.server.DeviceIdleController: android.hardware.Sensor access$200(com.android.server.DeviceIdleController)>','<com.android.server.wm.WindowManagerService: void removeRotationWatcher(android.view.IRotationWatcher)>','<com.android.server.am.ServiceRecord$3: void run()>','<com.android.server.am.ActivityManagerService: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>','<com.android.server.pm.Settings: void writeLPr()>','<com.android.server.pm.InstructionSets: java.lang.String getDexCodeInstructionSet(java.lang.String)>','<com.android.server.pm.Settings: void writeChildPackagesLPw(org.xmlpull.v1.XmlSerializer,java.util.List)>','<com.android.server.am.ActivityManagerService: void scheduleAppGcLocked(com.android.server.am.ProcessRecord)>','<com.android.server.LocationManagerService$Receiver: boolean isListener()>','<com.android.server.am.TaskPersister: java.io.StringWriter access$700(com.android.server.am.TaskPersister,com.android.server.am.TaskRecord)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void chooseUpstreamType(boolean)>','<com.android.server.location.RemoteListenerHelper$2: void <init>(com.android.server.location.RemoteListenerHelper)>','<com.android.server.pm.PackageManagerService$ParallelPackageParserCallback: java.lang.String[] getStaticOverlayPaths(java.lang.String,java.lang.String)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getRefresh()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonOverlayTaskActivity()>','<com.android.server.am.ActivityManagerService: void access$1300(com.android.server.am.ActivityManagerService,boolean)>','<com.android.server.pm.PolicyComparator: void <init>()>','<com.android.server.EventLogTags: void writeNotificationPanelHidden()>','<com.android.server.NetworkManagementService: void <clinit>()>','<com.android.server.am.ProviderMap: void putProviderByName(java.lang.String,com.android.server.am.ContentProviderRecord)>','<com.android.server.wm.WallpaperController: void clearLastWallpaperTimeoutTime()>','<com.android.server.audio.AudioService: boolean isMasterMute()>','<com.android.server.AnyMotionDetector$RunningSignalStats: void reset()>','<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>','<com.android.server.wm.WindowSurfaceController: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>','<com.android.server.power.PowerManagerService: boolean access$4400(com.android.server.power.PowerManagerService)>','<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.PackageSettingBase: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.util.List,java.lang.String[],int[])>','<com.android.server.am.BatteryStatsService: void noteResetFlashlight()>','<com.android.server.wm.AppWindowToken: boolean hasBounds()>','<com.android.server.wm.DisplayContent: void addChild(com.android.server.wm.WindowContainer,java.util.Comparator)>','<com.android.server.NativeDaemonConnector$ResponseQueue: void <init>(int)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: int getRefCountLPr()>','<com.android.server.am.ActivityStarter: boolean clearPendingActivityLaunchesLocked(java.lang.String)>','<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>','<com.android.server.wm.WindowStateAnimator: boolean stepAnimationLocked(long)>','<com.android.server.location.GeofenceManager$GeofenceHandler: void handleMessage(android.os.Message)>','<com.android.server.InputMethodManagerService$4: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<com.android.server.input.InputManagerService: boolean hasKeys(int,int,int[],boolean[])>','<com.android.server.pm.InstantAppRegistry: void deleteInstantApplicationMetadataLPw(java.lang.String,int)>','<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>','<com.android.server.net.NetworkPolicyManagerService: boolean access$1200(com.android.server.net.NetworkPolicyManagerService,int)>','<com.android.server.audio.AudioService: void access$10300(com.android.server.audio.AudioService,int,int,int,java.lang.String,java.lang.String,int)>','<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)>','<com.android.server.pm.PackageManagerService: void access$900(com.android.server.pm.PackageManagerService,java.util.Set)>','<com.android.server.am.CompatModePackages: void handlePackageDataClearedLocked(java.lang.String)>','<com.android.server.pm.UserManagerService$4: void <init>(com.android.server.pm.UserManagerService)>','<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.net.INetworkStatsService,android.os.INetworkManagementService,android.content.pm.IPackageManager,android.util.TrustedTime,java.io.File,boolean)>','<com.android.server.AppOpsService$ClientRestrictionState: void <init>(com.android.server.AppOpsService,android.os.IBinder)>','<com.android.server.am.ActivityManagerService: android.graphics.Point getAppTaskThumbnailSize()>','<com.android.server.am.BatteryStatsService: void noteSyncFinish(java.lang.String,int)>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setSmsAppPackagesProvider(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.wm.WindowState: int getSystemUiVisibility()>','<com.android.server.net.NetworkPolicyManagerService: void writePolicyAL()>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void notifyMessenger(int,int)>','<com.android.server.pm.PackageManagerService$13: void <init>(com.android.server.pm.PackageManagerService,android.content.pm.PackageParser$Package,int,int,int,java.lang.String,android.content.pm.IPackageDataObserver)>','<com.android.server.AlarmManagerService$Batch: boolean remove(android.app.PendingIntent,android.app.IAlarmListener)>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: int access$100(com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageModified(java.lang.String)>','<com.android.server.input.InputManagerService$6: void <init>(com.android.server.input.InputManagerService,java.util.ArrayList)>','<com.android.server.firewall.StringFilter$6: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void registerAsService(java.lang.String)>','<com.android.server.power.PowerManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.connectivity.NetworkAgentInfo: int compareTo(java.lang.Object)>','<com.android.server.AlarmManagerService: void access$800(com.android.server.AlarmManagerService)>','<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int)>','<com.android.server.AnyMotionDetector$4: void <init>(com.android.server.AnyMotionDetector)>','<com.android.server.AnyMotionDetector: void access$900(com.android.server.AnyMotionDetector)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void ping()>','<com.android.server.usb.descriptors.UsbACHeader: byte getControls()>','<com.android.server.pm.KeySetHandle: long getId()>','<com.android.server.wm.DisplayContent: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>','<com.android.server.net.NetworkPolicyManagerService$12: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.wm.ScreenRotationAnimation: void <init>(android.content.Context,com.android.server.wm.DisplayContent,android.view.SurfaceSession,boolean,boolean,boolean,com.android.server.wm.WindowManagerService)>','<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int,int,int)>','<com.android.server.net.NetworkStatsService: android.net.NetworkStats access$500(com.android.server.net.NetworkStatsService,android.net.NetworkTemplate,long,long,int)>','<com.android.server.wm.DisplayContent: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setReturnCode(int)>','<com.android.server.wm.WindowManagerService: boolean containsDismissKeyguardWindow(android.os.IBinder)>','<com.android.server.audio.FocusRequester: void release()>','<android.net.util.NetdService: android.net.INetd get(long)>','<com.android.server.pm.PackageInstallerService: void abandonSession(int)>','<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>','<com.android.server.pm.PackageManagerService: void access$5400(com.android.server.pm.PackageManagerService,android.content.pm.PackageParser$Package,int,int)>','<com.android.server.pm.dex.PackageDexUsage: java.lang.String dump()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$000(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int)>','<com.android.server.wm.InputMonitor: void pauseDispatchingLw(com.android.server.wm.WindowToken)>','<com.android.server.audio.AudioService$ForceControlStreamClient: void binderDied()>','<com.android.server.connectivity.NetworkMonitor$EvaluationResult: void <clinit>()>','<com.android.server.NetworkManagementService: void addIdleTimer(java.lang.String,int,int)>','<com.android.server.audio.AudioService$AudioHandler$1: void onCompletion(android.media.MediaPlayer)>','<com.android.server.pm.PackageManagerShellCommand$1: void <init>(com.android.server.pm.PackageManagerShellCommand)>','<com.android.server.DeviceIdleController: void writeConfigFileLocked()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void notifyDownstreamsOfNewUpstreamIface(java.lang.String)>','<com.android.server.am.ActivityStack: boolean topActivityOccludesKeyguard()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1300(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.InputMethodManagerService$StartInputInfo: void <clinit>()>','<com.android.server.am.EventLogTags: void writeAmDestroyService(int,int,int)>','<com.android.server.pm.PackageInstallerSession: void abandon()>','<com.android.server.audio.PlaybackActivityMonitor: android.media.VolumeShaper$Configuration access$400()>','<com.android.server.am.ActivityStackSupervisor: void scheduleUpdatePictureInPictureModeIfNeeded(com.android.server.am.TaskRecord,android.graphics.Rect,boolean)>','<com.android.server.DeviceIdleController: void setJobsActive(boolean)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$TetheredState: void exit()>','<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode[] values()>','<com.android.server.input.InputManagerService$8: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region access$500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.pm.PackageManagerService$10: void run()>','<com.android.server.ConnectivityService$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WindowState: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype[])>','<com.android.server.wm.DisplayContent: void updateWallpaperForAnimator(com.android.server.wm.WindowAnimator)>','<com.android.server.wm.WindowManagerService: void onDisplayAdded(int)>','<com.android.server.wm.WindowManagerService: android.util.SparseArray access$100(com.android.server.wm.WindowManagerService)>','<com.android.server.LockGuard: void guard(int)>','<com.android.server.wm.KeyguardDisableHandler: int access$002(com.android.server.wm.KeyguardDisableHandler,int)>','<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>','<com.android.server.net.NetworkPolicyManagerService$5: void run()>','<com.android.server.pm.Settings: void <clinit>()>','<com.android.server.wm.RootWindowContainer: void dumpLayoutNeededDisplayIds(java.io.PrintWriter)>','<com.android.server.am.BatteryStatsService: void noteWifiRadioPowerState(int,long,int)>','<com.android.server.audio.AudioService$VolumeStreamState: boolean adjustIndex(int,int,java.lang.String)>','<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService$Injector getInjector()>','<com.android.server.am.TaskRecord: void setPrevAffiliate(com.android.server.am.TaskRecord)>','<com.android.server.am.ActivityStarter: int startActivityMayWait(android.app.IApplicationThread,int,java.lang.String,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.app.WaitResult,android.content.res.Configuration,android.os.Bundle,boolean,int,android.app.IActivityContainer,com.android.server.am.TaskRecord,java.lang.String)>','<com.android.server.power.PowerManagerService$BinderService: void boostScreenBrightness(long)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: void putPrefixes(java.util.Set)>','<com.android.server.net.NetworkStatsCollection: void readLegacyNetwork(java.io.File)>','<com.android.server.am.ActivityManagerShellCommand: int runTaskDragTaskTest(java.io.PrintWriter)>','<android.net.util.Stopwatch: boolean isStarted()>','<com.android.server.AnyMotionDetector: int access$300(com.android.server.AnyMotionDetector)>','<com.android.server.usb.UsbMidiDevice: boolean access$100(com.android.server.usb.UsbMidiDevice)>','<android.os.IInstalld$Stub$Proxy: void restoreconAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String)>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: void finalize()>','<com.android.server.NativeDaemonConnector: void run()>','<com.android.server.InputMethodManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.NetworkManagementService: boolean isClatdStarted(java.lang.String)>','<com.android.server.am.KeyguardController: void setWindowManager(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.WindowSurfacePlacer: void debugLayoutRepeats(java.lang.String,int)>','<com.android.server.pm.UserDataPreparer: java.io.File getDataUserDeDirectory(java.lang.String,int)>','<com.android.server.am.TaskRecord: boolean isHomeTask()>','<com.android.server.TelephonyRegistry: void notifySimActivationStateChangedForPhoneId(int,int,int,int)>','<com.android.server.ConnectivityService: void releaseNetworkRequest(android.net.NetworkRequest)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void ping()>','<com.android.server.pm.Settings: void dumpRuntimePermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,java.util.List,boolean)>','<com.android.server.am.ActivityManagerService$LocalService: void setDeviceIdleWhitelist(int[])>','<com.android.server.ConnectivityService: int getMultipathPreference(android.net.Network)>','<com.android.server.wm.AppWindowToken: com.android.server.wm.TaskStack getStack()>','<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>','<com.android.server.pm.PermissionsState$PermissionData: void <init>(com.android.server.pm.BasePermission)>','<com.android.server.wm.InputMonitor: android.graphics.Rect access$500(com.android.server.wm.InputMonitor)>','<com.android.server.AnyMotionDetector$Vector3: void <init>(long,float,float,float)>','<com.android.server.AlarmManagerService$3: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.ProcessStatsService: void performWriteState()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<com.android.server.pm.InstructionSets: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>','<com.android.server.pm.ProtectedPackages: boolean isPackageDataProtected(int,java.lang.String)>','<com.android.server.wm.WindowContainerController: boolean checkCallingPermission(java.lang.String,java.lang.String)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void addSupportedType(int)>','<com.android.server.am.ConnectionRecord: void <init>(com.android.server.am.AppBindRecord,com.android.server.am.ActivityRecord,android.app.IServiceConnection,int,int,android.app.PendingIntent)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: void <init>(com.android.server.pm.KeySetManagerService,long,java.security.PublicKey)>','<com.android.server.input.PersistentDataStore: boolean removeKeyboardLayout(java.lang.String,java.lang.String)>','<com.android.server.wm.AppWindowToken: void <init>(com.android.server.wm.WindowManagerService,android.view.IApplicationToken,boolean,com.android.server.wm.DisplayContent,long,boolean,boolean,int,int,int,int,boolean,boolean,com.android.server.wm.AppWindowContainerController,android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.pm.SharedUserSetting: void addPackage(com.android.server.pm.PackageSetting)>','<com.android.server.pm.PackageSignatures: void readXml(org.xmlpull.v1.XmlPullParser,java.util.ArrayList)>','<com.android.server.ConnectivityService: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>','<com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$100()>','<com.android.server.am.TaskPersister: void <init>(java.io.File,com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityManagerService,com.android.server.am.RecentTasks)>','<com.android.server.audio.AudioService$StreamVolumeCommand: void <init>(com.android.server.audio.AudioService,int,int,int,int)>','<com.android.server.am.ReceiverList: boolean equals(java.lang.Object)>','<com.android.server.am.NativeCrashListener$NativeCrashReporter: void <init>(com.android.server.am.NativeCrashListener,com.android.server.am.ProcessRecord,int,java.lang.String)>','<com.android.server.pm.PackageManagerService: int calculateCurrentPermissionFootprintLocked(com.android.server.pm.BasePermission)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void setBounds(android.graphics.Region)>','<com.android.server.wm.WindowManagerService$MousePositionTracker: float access$1900(com.android.server.wm.WindowManagerService$MousePositionTracker)>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String toString()>','<com.android.server.am.ActivityManagerShellCommand: int runSetWatchHeap(java.io.PrintWriter)>','<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>','<com.android.server.firewall.OrFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateHostState(android.hardware.usb.UsbPort,android.hardware.usb.UsbPortStatus)>','<com.android.server.wm.WindowManagerService: void executeEmptyAnimationTransaction()>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void addComponentFilter(android.content.ComponentName,com.android.server.firewall.IntentFirewall$Rule)>','<com.android.server.wm.WindowState: boolean onStopFreezingScreen()>','<com.android.server.pm.PackageInstallerService: android.util.SparseArray access$000(com.android.server.pm.PackageInstallerService)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void setHALInstrumentation()>','<com.android.server.am.BatteryStatsService: void noteStopVideo(int)>','<com.android.server.am.StrictModeViolationDialog: com.android.server.am.ActivityManagerService access$000(com.android.server.am.StrictModeViolationDialog)>','<com.android.server.pm.PackageUsage: void writeInternal(java.lang.Object)>','<com.android.server.connectivity.tethering.OffloadController$1: void onNatTimeoutUpdate(int,java.lang.String,int,java.lang.String,int)>','<com.android.server.wm.Session: java.lang.String toString()>','<com.android.server.am.ActivityRecord: boolean isNoHistory()>','<com.android.server.wm.WindowManagerService: boolean viewServerGetFocusedWindow(java.net.Socket)>','<com.android.server.ConnectivityService$2: void onRestrictBackgroundChanged(boolean)>','<com.android.server.wm.WindowSurfaceController: void setOpaque(boolean)>','<com.android.server.usb.descriptors.ByteStream: byte getByte()>','<com.android.server.connectivity.NetworkAgentInfo: void <clinit>()>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack access$302(com.android.server.wm.DisplayContent,com.android.server.wm.TaskStack)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setTransparentRegionHint(android.graphics.Region)>','<com.android.server.am.FactoryErrorDialog$1: void <init>(com.android.server.am.FactoryErrorDialog)>','<com.android.server.pm.dex.DexManager$DexSearchResult: int access$000(com.android.server.pm.dex.DexManager$DexSearchResult)>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>','<com.android.server.pm.Installer$1: void <init>(com.android.server.pm.Installer)>','<com.android.server.wm.WindowManagerService: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>','<com.android.server.am.CompatModeDialog$2: void <init>(com.android.server.am.CompatModeDialog)>','<com.android.server.pm.Settings: boolean readLPw(java.util.List)>','<com.android.server.net.NetworkStatsObservers: void access$200(com.android.server.net.NetworkStatsObservers,com.android.server.net.NetworkStatsObservers$StatsContext)>','<com.android.server.wm.DockedStackDividerController: void onConfigurationChanged()>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$UpstreamNetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>','<android.net.INetd$Stub$Proxy: void socketDestroy(android.net.UidRange[],int[])>','<com.android.server.LocationManagerService: com.android.server.LocationManagerService$LocationWorkerHandler access$2200(com.android.server.LocationManagerService)>','<com.android.server.am.ActivityManagerService: boolean scheduleAsRegularPriority(int,boolean)>','<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State access$2700(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void grantDefaultPermissionsToDefaultSmsApp(java.lang.String,int)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: boolean equals(java.lang.Object)>','<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>','<com.android.server.am.ActivityManagerShellCommand: int runWaitForBroadcastIdle(java.io.PrintWriter)>','<com.android.server.usb.descriptors.UsbDescriptorParser: int getParsingSpec()>','<com.android.server.connectivity.Vpn: boolean prepare(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$18: void onChange(boolean)>','<com.android.server.pm.CrossProfileIntentFilter: int getIntFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>','<com.android.server.location.PassiveProvider: void <init>(android.location.ILocationManager)>','<com.android.server.connectivity.NetworkMonitor: boolean access$1100(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.am.PinnedActivityStack: android.graphics.Rect getDefaultPictureInPictureBounds(float)>','<com.android.server.wm.AppWindowToken: void startFreezingScreen()>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void onAnimationEnd(android.animation.Animator)>','<com.android.server.am.ActivityManagerConstants: void start(android.content.ContentResolver)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setLayer(int)>','<com.android.server.wm.TaskStack: int getDockSide()>','<com.android.server.wm.WindowSurfaceController: int getLayer()>','<com.android.server.location.ActivityRecognitionProxy$1: void <init>(com.android.server.location.ActivityRecognitionProxy)>','<com.android.server.EventLogTags: void writeDeviceIdleOffPhase(java.lang.String)>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: long getTimeSinceFirstRequestMs()>','<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>','<com.android.server.net.NetworkStatsCollection: long getFirstAtomicBucketMillis()>','<com.android.server.am.ActivityManagerService: void notifyCleartextNetwork(int,byte[])>','<com.android.server.pm.PackageManagerService$HandlerParams: com.android.server.pm.PackageManagerService$HandlerParams setTraceCookie(int)>','<com.android.server.location.PassiveProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkRequest requestAt(int)>','<com.android.server.LocationManagerService: void flushGnssBatch(java.lang.String)>','<com.android.server.AttributeCache$Package: void <init>(android.content.Context)>','<com.android.server.wm.Session: void dragRecipientExited(android.view.IWindow)>','<com.android.server.wm.WindowManagerService$LocalService: void showGlobalActions()>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int,int,int)>','<com.android.server.ConnectivityService$UnneededFor: com.android.server.ConnectivityService$UnneededFor valueOf(java.lang.String)>','<com.android.server.am.ActivityStack: boolean isFocusable()>','<com.android.server.am.ActivityManagerConstants: void setOverrideMaxCachedProcesses(int)>','<com.android.server.wm.WindowManagerService: int getDefaultDisplayRotation()>','<com.android.server.location.GeofenceManager: void removeFence(java.lang.String)>','<com.android.server.am.UserController: boolean exists(int)>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: int searchDex(java.lang.String,int)>','<com.android.server.wm.DisplayContent: int access$500(com.android.server.wm.DisplayContent)>','<com.android.server.location.GnssLocationProvider$8: boolean isGpsEnabled()>','<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy$WindowState getInputMethodWindowLw()>','<com.android.server.location.GeofenceManager: void access$100(com.android.server.location.GeofenceManager)>','<com.android.server.power.PowerManagerService$DreamReceiver: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.am.BatteryStatsService: void noteInteractive(boolean)>','<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>','<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.wm.Task: com.android.server.wm.WindowState getTopVisibleAppMainWindow()>','<com.android.server.am.ActivityManagerService: void applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityRecord: void onOverrideConfigurationChanged(android.content.res.Configuration)>','<com.android.server.connectivity.Vpn: boolean setPackageAuthorization(java.lang.String,boolean)>','<com.android.server.ConnectivityService$ReapUnvalidatedNetworks: com.android.server.ConnectivityService$ReapUnvalidatedNetworks[] values()>','<com.android.server.pm.KeySetHandle: void <init>(long,int)>','<com.android.server.wm.AppWindowToken: void startRelaunching()>','<com.android.server.am.ActivityManagerService: void appNotRespondingViaProvider(android.os.IBinder)>','<com.android.server.usb.UsbDeviceManager: void denyUsbDebugging()>','<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>','<com.android.server.am.ActivityStack: boolean isPinnedStack()>','<com.android.server.am.TaskRecord: void getAllRunningVisibleActivitiesLocked(java.util.ArrayList)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setDialerAppPackagesProvider(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.pm.PackageManagerService: android.util.ArraySet access$1000(com.android.server.pm.PackageManagerService)>','<com.android.server.am.ActivityStack: void ensureVisibleActivitiesConfigurationLocked(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.input.InputManagerService: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>','<com.android.server.location.GnssLocationProvider: void enable()>','<com.android.server.am.ActivityManagerService$LocalService: android.app.ActivityManagerInternal$SleepToken acquireSleepToken(java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteWifiOn()>','<com.android.server.pm.Settings: boolean getBlockUninstallLPr(int,java.lang.String)>','<com.android.server.DeviceIdleController: void setAlarmsActive(boolean)>','<com.android.server.net.NetworkPolicyManagerService: int getUidPolicy(int)>','<com.android.server.audio.AudioService$VolumeController: void setLayoutDirection(int)>','<com.android.server.pm.InstructionSets: void <init>()>','<com.android.server.am.ActivityResult: void <init>(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<com.android.server.wm.WindowManagerService: boolean isRotationFrozen()>','<com.android.server.am.ActivityManagerService$LocalService: void grantUriPermissionFromIntent(int,java.lang.String,android.content.Intent,int)>','<com.android.server.am.UserController: void startProfilesLocked()>','<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: void <init>()>','<com.android.server.ConnectivityService: void stopTethering(int,java.lang.String)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.net.NetworkStatsService: android.os.Handler access$1400(com.android.server.net.NetworkStatsService)>','<com.android.server.usb.UsbSettingsManager: com.android.server.usb.UsbUserSettingsManager getSettingsForUser(int)>','<com.android.server.wm.WindowStateAnimator: void enableSurfaceTrace(java.io.FileDescriptor)>','<com.android.server.am.ActivityManagerService: void dispatchUidsChanged()>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult access$2100(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.pm.PackageManagerService: void reconcileSecondaryDexFiles(java.lang.String)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: int access$200(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.wm.InputMonitor: void layoutInputConsumers(int,int)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getDeviceSummaryForNetwork(android.net.NetworkTemplate,long,long)>','<com.android.server.wm.TaskSnapshotController: void removeObsoleteTaskFiles(android.util.ArraySet,int[])>','<com.android.server.DeviceIdleController: android.os.PowerManager$WakeLock access$1100(com.android.server.DeviceIdleController)>','<com.android.server.power.PowerManagerService$BinderService: int getLastShutdownReason()>','<com.android.server.audio.AudioService$VolumeStreamState: int getMinIndex()>','<com.android.server.am.ServiceRecord: void <init>(com.android.server.am.ActivityManagerService,com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv,android.content.ComponentName,android.content.Intent$FilterComparison,android.content.pm.ServiceInfo,boolean,java.lang.Runnable)>','<android.hardware.usb.V1_0.PortRole: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.Watchdog$HandlerChecker: java.lang.Thread getThread()>','<com.android.server.pm.BasePermission: boolean isDevelopment()>','<com.android.server.usb.UsbService: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void onEvent(int)>','<com.android.server.am.ActivityManagerService$LocalService: void killForegroundAppsForUser(int)>','<com.android.server.power.PowerManagerService: void access$3600(com.android.server.power.PowerManagerService,android.os.IBinder,android.os.WorkSource,java.lang.String,int)>','<com.android.server.pm.PermissionsState$PermissionData: boolean isGranted(int)>','<com.android.server.wm.WindowContainer: void onDisplayChanged(com.android.server.wm.DisplayContent)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.am.ActivityManagerService: void setHasTopUi(boolean)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getProtocol()>','<com.android.server.am.ActivityManagerService$24: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.statusbar.StatusBarManagerService$1: boolean showShutdownUi(boolean,java.lang.String)>','<com.android.server.IntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.am.ActivityManagerService: void revokeUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager: boolean hasDefaults(java.lang.String,android.os.UserHandle)>','<android.os.IInstalld$Stub$Proxy: void linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.ConnectivityService$NetworkStateTrackerHandler: void <init>(com.android.server.ConnectivityService,android.os.Looper)>','<com.android.server.audio.AudioService: android.util.ArrayMap access$3400(com.android.server.audio.AudioService)>','<com.android.server.pm.AbstractStatsBase: void read(java.lang.Object)>','<com.android.server.connectivity.Vpn: void onUserStopped()>','<com.android.server.wm.WindowState: boolean isInMultiWindowMode()>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskStackChanged()>','<com.android.server.InputMethodManagerService: void executeOrSendMessage(android.os.IInterface,android.os.Message)>','<android.hardware.usb.V1_0.IUsb$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.usb.descriptors.UsbACTerminal: byte getAssocTerminal()>','<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>','<com.android.server.firewall.SenderFilter: boolean isPrivilegedApp(int,int)>','<com.android.server.am.ActivityManagerService: boolean removeTask(int)>','<com.android.server.wm.WindowAnimator: void addDisplayLocked(int)>','<com.android.server.pm.PackageManagerService: boolean isInstantApp(java.lang.String,int)>','<com.android.server.wm.WindowStateAnimator: void resetDrawState()>','<com.android.server.usb.UsbUserSettingsManager: void requestPermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>','<com.android.server.am.ActivityManagerService$LocalService: java.util.List getTopVisibleActivities()>','<com.android.server.LocationManagerService$9: void onPackageDisappeared(java.lang.String,int)>','<com.android.server.wm.WindowManagerService$LocalService: void addWindowToken(android.os.IBinder,int,int)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean removeKeyboardLayout(java.lang.String)>','<com.android.server.wm.AppWindowAnimator: void clearThumbnail()>','<com.android.server.wm.WindowManagerService: void thawRotation()>','<com.android.server.wm.WindowManagerService: float getWindowAnimationScaleLocked()>','<com.android.server.usb.UsbAudioDevice: java.lang.String toShortString()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackageForDelete(java.lang.String,int,java.lang.String)>','<android.hardware.configstore.V1_0.OptionalUInt64: void <init>()>','<com.android.server.wm.TaskSnapshotSurface: void access$200(com.android.server.wm.TaskSnapshotSurface)>','<com.android.server.wm.AppWindowContainerController: void scheduleAddStartingWindow()>','<com.android.server.wm.AppWindowToken: boolean checkCompleteDeferredRemoval()>','<com.android.server.pm.UserDataPreparer: void enforceSerialNumber(java.io.File,int)>','<com.android.server.pm.PackageInstallerService: com.android.server.pm.PackageInstallerService$Callbacks access$400(com.android.server.pm.PackageInstallerService)>','<com.android.server.wm.WindowToken: com.android.server.wm.AppWindowToken asAppWindowToken()>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskProfileLocked(int,int)>','<com.android.server.connectivity.Vpn: boolean isBlockingUid(int)>','<com.android.server.connectivity.NetworkMonitor: boolean access$1102(com.android.server.connectivity.NetworkMonitor,boolean)>','<com.android.server.wm.Session: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.firewall.StringFilter$1: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: void updateNetworkRulesNL()>','<com.android.server.am.BroadcastQueue$BroadcastHandler: void handleMessage(android.os.Message)>','<com.android.server.AlarmManagerService$ClockReceiver: void scheduleTimeTickEvent()>','<com.android.server.wm.WindowManagerService: void registerPinnedStackListener(int,android.view.IPinnedStackListener)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo access$2400(com.android.server.pm.UserManagerService,java.lang.String,int,int,java.lang.String[])>','<com.android.server.power.PowerManagerService$DockReceiver: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.wm.TaskWindowContainerController: void cancelWindowTransition()>','<com.android.server.pm.PackageInstallerService: void setPermissionsResult(int,boolean)>','<com.android.server.wm.WindowManagerService: float access$700(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.DockedStackDividerController: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.EventLogTags: void writeRestoreAgentFailure(java.lang.String,java.lang.String)>','<com.android.server.IntentResolver: void filterResults(java.util.List)>','<com.android.server.am.BatteryStatsService: long computeBatteryTimeRemaining()>','<com.android.server.location.LocationProviderProxy: boolean isEnabled()>','<com.android.server.LocationManagerService$3: void onPermissionsChanged(int)>','<com.android.server.wm.RemoteSurfaceTrace: void hide()>','<com.android.server.pm.Settings: com.android.server.pm.CrossProfileIntentResolver editCrossProfileIntentResolverLPw(int)>','<com.android.server.pm.dex.PackageDexUsage: void syncData(java.util.Map)>','<com.android.server.am.ActivityStackSupervisor: void access$900(com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityRecord)>','<android.hidl.base.V1_0.IBase$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.location.GnssNavigationMessageProvider: void onGpsEnabledChanged()>','<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: void close()>','<com.android.server.wm.WindowManagerService$5: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType: com.android.server.connectivity.NetworkNotificationManager$NotificationType[] values()>','<com.android.server.connectivity.NetworkAgentInfo: boolean isSatisfyingRequest(int)>','<com.android.server.am.UriPermissionOwner: void addReadPermission(com.android.server.am.UriPermission)>','<com.android.server.wm.RemoteSurfaceTrace: void setMatrix(float,float,float,float)>','<com.android.server.wm.TaskWindowContainerController: com.android.server.wm.Task createTask(int,com.android.server.wm.TaskStack,int,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,android.app.ActivityManager$TaskDescription)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void drawWindowIfNeededLocked()>','<com.android.server.audio.AudioService$AudioServiceInternal: void setRingerModeInternal(int,java.lang.String)>','<com.android.server.NetworkManagementService: void clearPermission(int[])>','<com.android.server.wm.WindowStateAnimator: void disableSurfaceTrace()>','<com.android.server.wm.WindowManagerService: boolean inKeyguardRestrictedInputMode()>','<com.android.server.am.ActivityManagerService$GrantUri: com.android.server.am.ActivityManagerService$GrantUri resolve(int,android.net.Uri)>','<com.android.server.connectivity.Nat464Xlat: void fixupLinkProperties(android.net.LinkProperties)>','<com.android.server.net.NetworkStatsCollection$Key: int compareTo(com.android.server.net.NetworkStatsCollection$Key)>','<com.android.server.firewall.StringFilter$EqualsFilter: boolean matchesValue(java.lang.String)>','<com.android.server.ThreadPriorityBooster$1: void <init>(com.android.server.ThreadPriorityBooster)>','<com.android.server.connectivity.PermissionMonitor: void startMonitoring()>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionActiveChanged(com.android.server.pm.PackageInstallerSession,boolean)>','<com.android.server.pm.UserManagerService$5: void userStopped(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isAttachedLocked()>','<com.android.server.power.PowerManagerService: void systemReady(com.android.internal.app.IAppOpsService)>','<com.android.server.ConnectivityService: int tether(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: java.lang.String getTagForIntentSenderLocked(com.android.server.am.PendingIntentRecord,java.lang.String)>','<com.android.server.ConnectivityService: void stopKeepalive(android.net.Network,int)>','<com.android.server.am.ActivityStackSupervisor: boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.HealthStatsBatteryStatsWriter: void writeUid(android.os.health.HealthStatsWriter,android.os.BatteryStats,android.os.BatteryStats$Uid)>','<com.android.server.usb.UsbPortManager: android.content.Context access$600(com.android.server.usb.UsbPortManager)>','<com.android.server.net.LockdownVpnTracker: void reset()>','<com.android.server.pm.Installer: void rmdex(java.lang.String,java.lang.String)>','<com.android.server.location.GnssLocationProvider$17: java.lang.String getGnssMetricsAsProtoString()>','<com.android.server.wm.WindowState: boolean hideLw(boolean)>','<com.android.server.pm.UserManagerService: void writeUserLP(com.android.server.pm.UserManagerService$UserData,java.io.OutputStream)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: long access$900(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.pm.PackageSettingBase: android.util.ArraySet getDisabledComponents(int)>','<com.android.server.connectivity.NetworkNotificationManager: void <clinit>()>','<com.android.server.am.ActivityManagerService: boolean getPackageAskScreenCompat(java.lang.String)>','<com.android.server.audio.AudioService$ScoClient: int getPid()>','<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>','<com.android.server.am.TaskRecord: boolean isLockTaskWhitelistedLocked()>','<com.android.server.statusbar.StatusBarManagerService$1: void hideRecentApps(boolean,boolean)>','<com.android.server.Watchdog$RebootRequestReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.AlarmManagerService: void onStart()>','<com.android.server.am.ActivityManagerService: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>','<com.android.server.am.ActivityManagerService$MainHandler: void handleMessage(android.os.Message)>','<com.android.server.power.PowerManagerService$LocalService: void setDeviceIdleTempWhitelist(int[])>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.InputMethodManagerService: int getInputMethodWindowVisibleHeight()>','<com.android.server.LocationManagerService$5: void onChange(boolean)>','<com.android.server.pm.PackageManagerService$27: void onCreated(int,android.os.Bundle)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: java.lang.String toString()>','<com.android.server.wm.WindowManagerService: void scheduleWindowReplacementTimeouts(com.android.server.wm.AppWindowToken)>','<android.hardware.usb.V1_1.PortStatus_1_1: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.am.ActivityRecord: void setSizeConfigurations(int[],int[],int[])>','<com.android.server.am.ActivityManagerService: void batteryPowerChanged(boolean)>','<com.android.server.NsdService: boolean access$1600(com.android.server.NsdService,int,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmActivityFullyDrawnTime(int,int,java.lang.String,long)>','<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware access$202(com.android.server.location.GeofenceProxy,android.hardware.location.IGeofenceHardware)>','<com.android.server.net.NetworkStatsService: void access$1100(com.android.server.net.NetworkStatsService,int)>','<com.android.server.pm.CrossProfileIntentFilter: void <init>(org.xmlpull.v1.XmlPullParser)>','<com.android.server.EventLogTags: void writeFullBackupCancelled(java.lang.String,java.lang.String)>','<com.android.server.am.UriPermission: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmFocusedStack(int,int,int,java.lang.String)>','<com.android.server.am.ActivityRecord: void saveToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.server.pm.PackageInstallerSession: java.lang.String[] getNames()>','<com.android.server.usb.descriptors.UsbASGeneral: byte getDelay()>','<android.net.util.Stopwatch: boolean isStopped()>','<android.net.INetd$Stub: void <init>()>','<com.android.server.AppOpsService$ClientState: void binderDied()>','<android.hardware.usb.V1_0.IUsb$Proxy: java.lang.String toString()>','<com.android.server.wm.TaskStack: void applyAdjustForImeIfNeeded(com.android.server.wm.Task)>','<com.android.server.wm.WindowState: boolean isDragResizing()>','<com.android.server.net.NetworkPolicyManagerService: void unregisterListener(android.net.INetworkPolicyListener)>','<com.android.server.audio.AudioService: void access$2700(com.android.server.audio.AudioService,int)>','<com.android.server.pm.PackageInstallerService$Callbacks: void register(android.content.pm.IPackageInstallerCallback,int)>','<com.android.server.wm.InputMonitor: void setEventDispatchingLw(boolean)>','<com.android.server.pm.IntentFilterVerificationState: boolean setVerifierResponse(int,int)>','<com.android.server.AlarmManagerService: boolean addBatchLocked(java.util.ArrayList,com.android.server.AlarmManagerService$Batch)>','<com.android.server.audio.AudioService: int access$4900(com.android.server.audio.AudioService,int)>','<com.android.server.wm.WindowManagerService: android.os.IBinder prepareDragSurface(android.view.IWindow,android.view.SurfaceSession,int,int,int,android.view.Surface)>','<com.android.server.pm.Settings: void removeCrossProfileIntentFiltersLPw(int)>','<com.android.server.am.ProcessList: void <init>()>','<android.hardware.usb.V1_0.PortPowerRole: void <init>()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1700(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.location.GnssLocationProvider: void access$5400(com.android.server.location.GnssLocationProvider,java.net.InetAddress)>','<com.android.server.DeviceIdleController: com.android.internal.app.IBatteryStats access$800(com.android.server.DeviceIdleController)>','<com.android.server.LocationManagerService$Receiver: java.lang.String toString()>','<com.android.server.wm.WindowManagerService: void dispatchNewAnimatorScaleLocked(com.android.server.wm.Session)>','<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>','<com.android.server.am.ActivityManagerService: void makePackageIdle(java.lang.String,int)>','<com.android.server.wm.WindowManagerService: void setCurrentUser(int,int[])>','<com.android.server.wm.WindowSurfacePlacer: void destroyPendingSurfaces()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setSmsAppPackagesProviderLPw(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.audio.AudioService: int getRingerModeExternal()>','<com.android.server.connectivity.MockableSystemProperties: int getInt(java.lang.String,int)>','<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,byte)>','<com.android.server.audio.FocusRequester: boolean hasSameClient(java.lang.String)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void getMagnificationRegionLocked(android.graphics.Region)>','<com.android.server.net.NetworkStatsService: int access$400(com.android.server.net.NetworkStatsService,java.lang.String)>','<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void setWallpaperTarget(com.android.server.wm.WindowState)>','<com.android.server.wm.Session: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>','<com.android.server.am.AppErrorResult: void <init>()>','<com.android.server.usb.MtpNotificationManager: boolean shouldShowNotification(android.content.pm.PackageManager,android.hardware.usb.UsbDevice)>','<com.android.server.wm.InputMonitor: boolean waitForInputDevicesReady(long)>','<com.android.server.wm.WindowState: void applyGravityAndUpdateFrame(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.am.RecentTasks: void cleanupLocked(int)>','<com.android.server.wm.WindowManagerService: void access$1000(com.android.server.wm.WindowManagerService)>','<com.android.server.location.LocationProviderProxy$1: void run()>','<com.android.server.am.UriPermission: java.lang.String toString()>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.am.ActivityManagerService: int startActivitiesInPackage(int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>','<com.android.server.pm.PackageManagerService: android.os.Bundle extrasForInstallResult(com.android.server.pm.PackageManagerService$PackageInstalledInfo)>','<com.android.server.am.ActivityManagerService$ProcessInfoService: void getProcessStatesAndOomScoresFromPids(int[],int[],int[])>','<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistAppInternal(java.lang.String)>','<com.android.server.am.ActivityRecord: boolean isInHistory()>','<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void access$400(com.android.server.connectivity.tethering.UpstreamNetworkMonitor,int,android.net.Network)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int)>','<com.android.server.am.UserController$Injector: boolean isFirstBootOrUpgrade()>','<com.android.server.audio.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>','<com.android.server.LocationManagerService: int access$1700(com.android.server.LocationManagerService,int,int)>','<com.android.server.power.PowerManagerService: boolean access$4500(com.android.server.power.PowerManagerService,boolean)>','<com.android.server.am.ActivityManagerService$13: void run()>','<com.android.server.power.PowerManagerService: void access$5700(com.android.server.power.PowerManagerService)>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionThumb(android.graphics.GraphicBuffer,int,int,android.os.IRemoteCallback,boolean)>','<com.android.server.am.UserController: int unsafeConvertIncomingUserLocked(int)>','<com.android.server.power.PowerManagerService: java.lang.Object access$000(com.android.server.power.PowerManagerService)>','<com.android.server.usb.UsbService$Lifecycle: void onBootPhase(int)>','<com.android.server.wm.PinnedStackController: android.graphics.Rect transformBoundsToAspectRatio(android.graphics.Rect,float,boolean)>','<com.android.server.power.PowerManagerService$2: void onProximityNegative()>','<com.android.server.wm.WindowAnimator: void setScreenRotationAnimationLocked(int,com.android.server.wm.ScreenRotationAnimation)>','<com.android.server.am.AppBindRecord: void <init>(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,com.android.server.am.ProcessRecord)>','<com.android.server.am.UserController$4: void <init>(com.android.server.am.UserController,android.app.IStopUserCallback,int)>','<com.android.server.wm.WindowContainer: void setParent(com.android.server.wm.WindowContainer)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>','<com.android.server.am.ActivityStackSupervisor: void scheduleUpdateMultiWindowMode(com.android.server.am.TaskRecord)>','<com.android.server.input.InputManagerService$LocalService: void onInputMethodSubtypeChanged(int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>','<com.android.server.am.ActivityManagerService: void showUnsupportedZoomDialogIfNeededLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityManagerShellCommand: boolean access$502(com.android.server.am.ActivityManagerShellCommand,boolean)>','<com.android.server.am.ActivityStackSupervisor: android.app.admin.IDevicePolicyManager access$800(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.ActivityManagerShellCommand: int runClearWatchHeap(java.io.PrintWriter)>','<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: boolean isUidRestrictedOnMeteredNetworks(int)>','<com.android.server.connectivity.NetworkAgentInfo: int numNetworkRequests()>','<com.android.server.pm.PackageManagerService: java.lang.String getDefaultBrowserPackageName(int)>','<com.android.server.input.PersistentDataStore: boolean setTouchCalibration(java.lang.String,int,android.hardware.input.TouchCalibration)>','<com.android.server.am.ServiceRecord: void cancelNotification()>','<com.android.server.am.ActivityManagerService: boolean isAppForeground(int)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set access$600(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>','<com.android.server.am.ActivityManagerService$18: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>','<com.android.server.am.ActivityManagerService: void unregisterUidObserver(android.app.IUidObserver)>','<android.hidl.base.V1_0.IBase$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService$4: void run()>','<com.android.server.power.PowerManagerService: void setStayOnSettingInternal(int)>','<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>','<com.android.server.am.ActivityManagerService: void handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>','<com.android.server.net.NetworkPolicyManagerService$NotificationId: int hashCode()>','<android.hidl.base.V1_0.IBase$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.wm.WindowStateAnimator: void setOpaqueLocked(boolean)>','<com.android.server.power.PowerManagerService$WakeLock: void binderDied()>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$CbResults: void <init>(com.android.server.connectivity.tethering.OffloadHardwareInterface$1)>','<com.android.server.wm.WindowManagerService: void access$1200(com.android.server.wm.WindowManagerService,int,int)>','<com.android.server.wm.TaskPositioner: void resizeDrag(float,float)>','<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>','<com.android.server.input.PersistentDataStore$InputDeviceState: void loadFromXml(org.xmlpull.v1.XmlPullParser)>','<com.android.server.AlarmManagerService$BatchTimeOrder: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.input.InputManagerService$InputFilterHost: void <init>(com.android.server.input.InputManagerService,com.android.server.input.InputManagerService$1)>','<com.android.server.audio.MediaFocusControl: void unsetFocusPolicy(android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[],java.util.List)>','<com.android.server.usb.UsbPortManager$DeathRecipient: void serviceDied(long)>','<com.android.server.wm.DragState: void endDragLw()>','<com.android.server.wm.DisplayContent: void removeExistingTokensIfPossible()>','<com.android.server.net.NetworkPolicyManagerService: void snoozeLimit(android.net.NetworkTemplate)>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void reset()>','<com.android.server.connectivity.tethering.SimChangeListener: void <clinit>()>','<com.android.server.wm.DisplayContent: void waitForAllWindowsDrawn()>','<com.android.server.wm.TaskTapPointerEventListener: void onPointerEvent(android.view.MotionEvent,int)>','<com.android.server.Watchdog: void addThread(android.os.Handler)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean isPackageEphemeral(int,java.lang.String)>','<com.android.server.audio.RotationHelper: void enable()>','<com.android.server.wm.WindowStateAnimator: void getContainerRect(android.graphics.Rect)>','<com.android.server.am.ActivityStackSupervisor: void showLockTaskEscapeMessageLocked(com.android.server.am.TaskRecord)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport access$1500(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.am.ActivityManagerService: boolean willActivityBeVisible(android.os.IBinder)>','<com.android.server.audio.AudioService: void access$7800(com.android.server.audio.AudioService,int,boolean)>','<com.android.server.wm.WindowManagerService: boolean isKeyguardShowingAndNotOccluded()>','<com.android.server.am.ActivityRecord: boolean supportsSplitScreen()>','<com.android.server.pm.PackageInstallerService: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>','<com.android.server.wm.RemoteSurfaceTrace: void setWindowCrop(android.graphics.Rect)>','<com.android.server.power.ShutdownThread: void access$500(com.android.server.power.ShutdownThread,int,java.lang.CharSequence)>','<com.android.server.power.PowerManagerService$DreamReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.EventLogTags: void writeAmSetResumedActivity(int,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: void cancelTaskThumbnailTransition(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: boolean access$1100(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.power.WirelessChargerDetector: void dump(java.io.PrintWriter)>','<com.android.server.pm.PackageSettingBase: android.content.pm.PackageUserState readUserState(int)>','<com.android.server.wm.TaskStack: boolean isAdjustedForIme()>','<com.android.server.net.NetworkStatsRecorder$CombiningRewriter: void write(java.io.OutputStream)>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: void mergeAppDataDirs(java.lang.String,int)>','<com.android.server.connectivity.Vpn$1: void <init>(com.android.server.connectivity.Vpn)>','<com.android.server.am.ActiveServices: com.android.server.am.ActiveServices$ServiceDumper newServiceDumperLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.audio.AudioService: void access$7400(com.android.server.audio.AudioService,int,int)>','<com.android.server.pm.PackageManagerService: void systemReady()>','<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>','<android.net.ip.RouterAdvertisementDaemon: boolean access$300(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.am.ActivityManagerShellCommand$2: void <init>(com.android.server.am.ActivityManagerShellCommand,android.util.ArrayMap)>','<com.android.server.usb.UsbProfileGroupSettingsManager$MyPackageMonitor: void onPackageAdded(java.lang.String,int)>','<com.android.server.wm.WindowContainer: void removeChild(com.android.server.wm.WindowContainer)>','<com.android.server.wm.WindowManagerService$LocalService: boolean isStackVisible(int)>','<com.android.server.usb.UsbMidiDevice$2: void <init>(com.android.server.usb.UsbMidiDevice,java.lang.String,android.media.midi.MidiReceiver[])>','<com.android.server.am.RecentTasks: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>','<com.android.server.location.GeofenceProxy: android.hardware.location.IGeofenceHardware access$200(com.android.server.location.GeofenceProxy)>','<com.android.server.location.GnssLocationProvider$6: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.lights.Light: void <init>()>','<com.android.server.audio.FocusRequester: void handleFocusLoss(int,com.android.server.audio.FocusRequester)>','<com.android.server.am.ActivityStackSupervisor: void setWindowManager(com.android.server.wm.WindowManagerService)>','<com.android.server.net.NetworkStatsRecorder: void writeToProtoLocked(android.util.proto.ProtoOutputStream,long)>','<com.android.server.am.ConfigurationContainer: void onParentChanged()>','<com.android.server.am.ActivityManagerShellCommand: int runGetInactive(java.io.PrintWriter)>','<com.android.server.location.GnssLocationProvider$12: boolean isHardwareGeofenceSupported()>','<com.android.server.am.ActivityRecord$Token: void <init>(com.android.server.am.ActivityRecord)>','<com.android.server.location.GnssLocationProvider: int getStatus(android.os.Bundle)>','<android.net.util.MultinetworkPolicyTracker: boolean shouldNotifyWifiUnvalidated()>','<com.android.server.pm.UserDataPreparer: int getSerialNumber(java.io.File)>','<com.android.server.wm.AppWindowToken: void removeDeadWindows()>','<com.android.server.am.TaskRecord: boolean okToShowLocked()>','<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>','<com.android.server.wm.WindowManagerService: void setWillReplaceWindow(android.os.IBinder,boolean)>','<com.android.server.wm.DragState: android.graphics.Point access$000(com.android.server.wm.DragState)>','<com.android.server.audio.AudioService: boolean isValidRingerMode(int)>','<com.android.server.pm.PackageManagerService: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,int)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setDrawn()>','<com.android.server.audio.AudioService: void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)>','<com.android.server.net.NetworkStatsService$HandlerCallback: boolean handleMessage(android.os.Message)>','<com.android.server.pm.PackageSettingBase: void setDisabledComponents(android.util.ArraySet,int)>','<com.android.server.pm.PackageManagerService: void access$7500(com.android.server.pm.PackageManagerService,android.content.pm.AuxiliaryResolveInfo,android.content.Intent,java.lang.String,java.lang.String,android.os.Bundle,int)>','<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>','<com.android.server.LocationManagerService: boolean geocoderIsPresent()>','<com.android.server.Watchdog: void init(android.content.Context,com.android.server.am.ActivityManagerService)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void check(java.lang.String)>','<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>','<com.android.server.NsdService$ClientInfo: android.util.SparseIntArray access$1200(com.android.server.NsdService$ClientInfo)>','<com.android.server.wm.WindowState: void transformClipRectFromScreenToSurfaceSpace(android.graphics.Rect)>','<com.android.server.am.ProviderMap: void removeProviderByName(java.lang.String,int)>','<com.android.server.location.GnssLocationProvider$18: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.DockedStackDividerController: void notifyDockSideChanged(int)>','<com.android.server.TelephonyRegistry: int access$500(com.android.server.TelephonyRegistry)>','<com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller: void access$700(com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller,java.lang.Object,int)>','<com.android.server.Watchdog$HandlerChecker: void scheduleCheckLocked()>','<com.android.server.wm.WindowState: void onResize()>','<com.android.server.am.ActivityManagerService: void dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.wm.InputConsumerImpl: void <init>(com.android.server.wm.WindowManagerService,java.lang.String,android.view.InputChannel)>','<com.android.server.location.FusedLocationHardwareSecure: int getSupportedBatchSize()>','<com.android.server.pm.AbstractStatsBase: java.util.concurrent.atomic.AtomicLong access$100(com.android.server.pm.AbstractStatsBase)>','<com.android.server.am.ContentProviderRecord: java.lang.String toShortString()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(java.lang.String,java.lang.Object[])>','<com.android.server.audio.AudioService: boolean access$9600(com.android.server.audio.AudioService)>','<com.android.server.AlarmManagerService: long currentNonWakeupFuzzLocked(long)>','<com.android.server.am.ProcessList: long getCachedRestoreThresholdKb()>','<com.android.server.location.GnssLocationProvider$NetworkLocationListener: void <init>(com.android.server.location.GnssLocationProvider,com.android.server.location.GnssLocationProvider$1)>','<com.android.server.am.UserController: void dispatchForegroundProfileChanged(int)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.wm.Task: com.android.server.wm.TaskWindowContainerController getController()>','<com.android.server.usb.descriptors.UsbDescriptorParser: float getInputHeadsetProbability()>','<com.android.server.statusbar.StatusBarShellCommand: void onHelp()>','<com.android.server.pm.Installer: void fixupAppData(java.lang.String,int)>','<com.android.server.location.GnssLocationProvider$10: void run()>','<com.android.server.am.ActivityManagerService: void installSystemProviders()>','<com.android.server.LocationManagerService: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>','<com.android.server.audio.AudioService: void access$8900(com.android.server.audio.AudioService,boolean)>','<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog$Monitor)>','<com.android.server.usb.descriptors.UsbACTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.am.ActivityManagerService: void requestActivityRelaunch(android.os.IBinder)>','<com.android.server.pm.UserManagerService$5: void userStopAborted(int)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppResolverSettingsComponent()>','<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties getProperties()>','<com.android.server.audio.AudioService: int access$8302(com.android.server.audio.AudioService,int)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord isInAnyStackLocked(android.os.IBinder)>','<com.android.server.location.FusedLocationHardwareSecure: void flushBatchedLocations()>','<com.android.server.usb.UsbService: void bootCompleted()>','<com.android.server.SystemService: boolean isSafeMode()>','<com.android.server.pm.UserManagerService: boolean access$2500(com.android.server.pm.UserManagerService,int)>','<com.android.server.LocationManagerService: java.util.List getAllProviders()>','<com.android.server.am.ActivityManagerService$IntentFirewallInterface: java.lang.Object getAMSLock()>','<com.android.server.am.ActivityManagerService: int getActivityDisplayId(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void applyUpdateVrModeLocked(com.android.server.am.ActivityRecord)>','<com.android.server.usb.UsbService$Lifecycle: void onStart()>','<com.android.server.pm.UserManagerService: boolean access$1300(com.android.server.pm.UserManagerService,int,android.os.Bundle,android.util.SparseArray)>','<android.hardware.configstore.V1_0.OptionalBool: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityManagerService$MainHandler$1: void <init>(com.android.server.am.ActivityManagerService$MainHandler,java.util.ArrayList)>','<com.android.server.wm.DockedStackDividerController: com.android.server.wm.WindowState getWindow()>','<com.android.server.am.ActiveServices: android.os.IBinder peekServiceLocked(android.content.Intent,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getStack(int,boolean,boolean)>','<com.android.server.EventLogTags: void writeNotificationAlert(java.lang.String,int,int,int)>','<com.android.server.EventLogTags: void writeRescueFailure(int,java.lang.String)>','<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long,int)>','<com.android.server.net.NetworkPolicyManagerService: void access$2300(com.android.server.net.NetworkPolicyManagerService,java.lang.String,long)>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: void release()>','<android.net.util.MultinetworkPolicyTracker: java.lang.String getAvoidBadWifiSetting()>','<com.android.server.am.ActivityManagerService: void access$500(com.android.server.am.ActivityManagerService,int,int)>','<com.android.server.statusbar.StatusBarManagerService$6: void <init>(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.am.ActivityManagerService: java.lang.StringBuilder access$1600(com.android.server.am.ActivityManagerService)>','<com.android.server.audio.FocusRequester: void finalize()>','<com.android.server.connectivity.Vpn: boolean removeAddress(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void startObservingNativeCrashes()>','<com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndBind(android.content.Context,java.lang.String,java.lang.String,int,int,int,android.os.Handler)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()>','<android.net.util.MultinetworkPolicyTracker$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityManagerService$KillHandler: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>','<com.android.server.wm.WindowManagerThreadPriorityBooster: void reset()>','<com.android.server.pm.PackageManagerService: void removeCodePathLI(java.io.File)>','<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>','<com.android.server.am.ActivityRecord: boolean checkEnterPictureInPictureState(java.lang.String,boolean,boolean)>','<com.android.server.wm.WindowState: com.android.server.wm.TaskStack getStack()>','<com.android.server.am.ActivityManagerService$GraphicsBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.RecentTasks$1: void <init>()>','<com.android.server.am.ContentProviderRecord: boolean canRunHere(com.android.server.am.ProcessRecord)>','<com.android.server.am.EventLogTags: void writeBootProgressEnableScreen(long)>','<com.android.server.pm.UserManagerService: long getUserCreationTime(int)>','<com.android.server.pm.PackageManagerService: void reconcileAppsData(int,int,boolean)>','<com.android.server.location.GnssLocationProvider: com.android.internal.location.gnssmetrics.GnssMetrics access$4800(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.PackageManagerService: void notifyFirstLaunch(java.lang.String,java.lang.String,int)>','<com.android.server.power.PowerManagerService$BinderService: void setAttentionLight(boolean,int)>','<com.android.server.pm.AbstractStatsBase$1: void run()>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.pm.AuxiliaryResolveInfo)>','<com.android.server.AppOpsService: void setUserRestriction(int,boolean,android.os.IBinder,int,java.lang.String[])>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: android.net.LinkProperties linkProperties()>','<com.android.server.usb.UsbSettingsManager: void usbAccessoryRemoved(android.hardware.usb.UsbAccessory)>','<com.android.server.location.LocationBlacklist: void dump(java.io.PrintWriter)>','<com.android.server.pm.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>','<com.android.server.usb.UsbMidiDevice$3: void run()>','<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>','<com.android.server.firewall.IntentFirewall: void <clinit>()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$402(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,boolean)>','<com.android.server.wm.WindowManagerService: void updateTokenInPlaceLocked(com.android.server.wm.AppWindowToken,int)>','<com.android.server.ConnectivityService: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>','<com.android.server.am.ActivityManagerService$13: void <init>(com.android.server.am.ActivityManagerService,android.content.Intent,android.os.UserHandle)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$1400(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.pm.PackageManagerService$3: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.AppOpsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.EventLogTags: void writeFullBackupSuccess(java.lang.String)>','<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean,boolean)>','<android.hardware.usb.V1_0.PortStatus: void writeToParcel(android.os.HwParcel)>','<com.android.server.connectivity.NetworkAgentInfo: long getLingerExpiry()>','<com.android.server.am.ActivityStack: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>','<com.android.server.am.InstrumentationReporter$MyThread: void <init>(com.android.server.am.InstrumentationReporter)>','<com.android.server.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager$MyPackageMonitor: void onPackageRemoved(java.lang.String,int)>','<com.android.server.location.PassiveProvider: void enable()>','<com.android.server.LocationManagerService$UpdateRecord: java.lang.String toString()>','<com.android.server.location.LocationBasedCountryDetector$1: void onProviderDisabled(java.lang.String)>','<com.android.server.connectivity.PermissionMonitor$1: void <init>(com.android.server.connectivity.PermissionMonitor)>','<com.android.server.am.ActivityStackSupervisor: void scheduleSleepTimeout()>','<com.android.server.am.ActivityStartInterceptor: void setStates(int,int,int,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>','<com.android.server.AnyMotionDetector: int getStationaryStatus()>','<com.android.server.power.ShutdownThread$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>','<com.android.server.pm.PermissionsState: boolean hasInstallPermission(java.lang.String)>','<com.android.server.wm.AppWindowToken: void clearRelaunching()>','<com.android.server.pm.PackageManagerService$InstallArgs: boolean isEphemeral()>','<com.android.server.am.ServiceRecord: com.android.server.am.AppBindRecord retrieveAppBindingLocked(android.content.Intent,com.android.server.am.ProcessRecord)>','<com.android.server.location.GeofenceProxy: com.android.server.location.GeofenceProxy createAndBind(android.content.Context,int,int,int,android.os.Handler,android.location.IGpsGeofenceHardware,android.location.IFusedGeofenceHardware)>','<com.android.server.NetworkManagementService: void access$400(com.android.server.NetworkManagementService)>','<com.android.server.am.ActivityManagerService$PendingTempWhitelist: void <init>(int,long,java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageParserCallback: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.wm.RootWindowContainer: boolean copyAnimToLayoutParams()>','<com.android.server.AlarmManagerService: void removeForStoppedLocked(int)>','<com.android.server.audio.AudioService: void setBluetoothA2dpOn(boolean)>','<com.android.server.firewall.StringFilter$9: void <init>(java.lang.String)>','<com.android.server.pm.CompilerStats: void writeNow()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord handleApplicationWtfInner(int,int,android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>','<com.android.server.am.ActivityStackSupervisor: void moveActivityToPinnedStackLocked(com.android.server.am.ActivityRecord,android.graphics.Rect,float,boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService$21: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.wm.WindowManagerThreadPriorityBooster: void setBoundsAnimationRunning(boolean)>','<com.android.server.wm.WindowAnimator: boolean isAnimationScheduled()>','<com.android.server.am.UserSwitchingDialog: void onWindowShown()>','<com.android.server.audio.AudioService$AudioServiceInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>','<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>','<com.android.server.wm.WindowState$1: int compare(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>','<com.android.server.am.ActivityManagerService: void access$600(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<com.android.server.location.GnssLocationProvider$18: boolean sendNiResponse(int,int)>','<com.android.server.pm.PackageManagerServiceCompilerMapping: void <clinit>()>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<com.android.server.wm.WindowState: boolean isDockedResizing()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void scheduleComputeChangedWindowsLocked()>','<com.android.server.am.ActivityManagerService$1: com.android.server.am.BroadcastFilter[] newArray(int)>','<com.android.server.net.NetworkPolicyManagerService: void access$2200(com.android.server.net.NetworkPolicyManagerService,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityDisplay access$1100(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.pm.PackageManagerService: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<com.android.server.pm.PermissionsState$PermissionState: void <init>(java.lang.String)>','<com.android.server.am.ActivityManagerService$5: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityRecord: void notifyAppResumed(boolean)>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.connectivity.DataConnectionStats$1: void onSignalStrengthsChanged(android.telephony.SignalStrength)>','<com.android.server.wm.DragState: void cancelDragLw()>','<com.android.server.am.BaseErrorDialog: void <init>(android.content.Context)>','<com.android.server.Watchdog: void addThread(android.os.Handler,long)>','<com.android.server.connectivity.tethering.OffloadController$1: void onStoppedUnsupported()>','<com.android.server.ConnectivityService: boolean isTetheringSupported()>','<com.android.server.wm.WindowState: android.graphics.Rect getStableFrameLw()>','<com.android.server.location.GeofenceProxy: void access$500(com.android.server.location.GeofenceProxy)>','<android.hardware.tetheroffload.control.V1_0.NetworkProtocol: java.lang.String dumpBitfield(int)>','<com.android.server.am.ProcessRecord: boolean isInterestingToUserLocked()>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void binderDied()>','<com.android.server.ConnectivityService: void access$2800(com.android.server.ConnectivityService,android.net.ProxyInfo)>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionBadgingChanged(com.android.server.pm.PackageInstallerSession)>','<com.android.server.EventLogTags: void writeNotificationClicked(java.lang.String,int,int,int)>','<com.android.server.audio.AudioService: void setBluetoothA2dpOnInt(boolean)>','<com.android.server.am.EventLogTags: void writeAmLowMemory(int)>','<com.android.server.wm.Task: void addChild(com.android.server.wm.WindowContainer,int)>','<com.android.server.AnyMotionDetector$Vector3: float dotProduct(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.wm.AppTransition: void freeze()>','<com.android.server.wm.AppTransition: void clear()>','<com.android.server.ConnectivityService$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.NetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>','<com.android.server.net.NetworkStatsRecorder: void <init>(com.android.internal.util.FileRotator,android.net.NetworkStats$NonMonotonicObserver,android.os.DropBoxManager,java.lang.String,long,boolean)>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver$1: void send(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$ForceControlStreamClient access$1202(com.android.server.audio.AudioService,com.android.server.audio.AudioService$ForceControlStreamClient)>','<com.android.server.am.ActivityManagerService$PermissionController: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.EventLogTags: void writeAmScheduleServiceRestart(int,java.lang.String,long)>','<com.android.server.pm.Settings: void onVolumeForgotten(java.lang.String)>','<com.android.server.location.PassiveProvider: int getStatus(android.os.Bundle)>','<com.android.server.statusbar.StatusBarManagerService$1: void showScreenPinningRequest(int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$4: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.LockGuard: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.input.PersistentDataStore: java.lang.String getCurrentKeyboardLayout(java.lang.String)>','<com.android.server.am.ActivityMetricsLogger: void logWindowState()>','<com.android.server.pm.UserManagerService: void <clinit>()>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: java.util.Set getLoaderIsas()>','<com.android.server.am.ActivityManagerService: void access$900(com.android.server.am.ActivityManagerService,int)>','<com.android.server.am.ActivityRecord: void completeResumeLocked()>','<com.android.server.NativeDaemonEvent: boolean isClassContinue()>','<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>','<com.android.server.power.PowerManagerService$BinderService: boolean isDeviceIdleMode()>','<com.android.server.am.TaskRecord: boolean removeActivity(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityManagerService: void activityRelaunched(android.os.IBinder)>','<com.android.server.am.ActivityStackSupervisor$WaitInfo: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.DisplayContent: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.pm.PackageManagerService: boolean access$2600(com.android.server.pm.PackageManagerService)>','<com.android.server.ThreadPriorityBooster: void reset()>','<com.android.server.am.TaskRecord: void setTaskDockedResizing(boolean)>','<com.android.server.audio.FocusRequester: int getGrantFlags()>','<com.android.server.am.TaskRecord: android.graphics.Rect getLaunchBounds()>','<com.android.server.ServiceWatcher$2: boolean onPackageChanged(java.lang.String,int,java.lang.String[])>','<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.hardware.usb.V1_0.PortStatus: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.wm.AppTransition: android.view.animation.Animation loadAnimationRes(android.view.WindowManager$LayoutParams,int)>','<com.android.server.wm.WindowManagerService$3: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(boolean,int)>','<com.android.server.wm.Task: android.app.ActivityManager$TaskDescription getTaskDescription()>','<com.android.server.connectivity.Tethering: com.android.server.connectivity.tethering.TetheringConfiguration getTetheringConfiguration()>','<com.android.server.connectivity.NetworkMonitor$MaybeNotifyState: void exit()>','<com.android.server.pm.BackgroundDexOptService: boolean runIdleOptimizationsNow(com.android.server.pm.PackageManagerService,android.content.Context)>','<com.android.server.am.ActiveServices$ServiceLookupResult: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,java.lang.String)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.statusbar.StatusBarManagerService$1: void appTransitionPending()>','<com.android.server.wm.TaskWindowContainerController: void cancelThumbnailTransition()>','<com.android.server.wm.Session: boolean performHapticFeedback(android.view.IWindow,int,boolean)>','<com.android.server.ConnectivityService: boolean setUnderlyingNetworksForVpn(android.net.Network[])>','<com.android.server.connectivity.KeepaliveTracker: void handleStartKeepalive(android.os.Message)>','<com.android.server.wm.AppWindowToken: void restoreSavedSurfaceForInterestingWindows()>','<com.android.server.power.PowerManagerService$BinderService: android.os.PowerSaveState getPowerSaveState(int)>','<com.android.server.wm.WindowManagerService$H: void handleMessage(android.os.Message)>','<com.android.server.connectivity.Tethering: java.lang.String access$2300(com.android.server.connectivity.Tethering)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.audio.AudioService: boolean shouldVibrate(int)>','<com.android.server.am.ActivityManagerService$UpdateConfigurationResult: void <init>(com.android.server.am.ActivityManagerService$1)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void notifyPortStatusChange(java.util.ArrayList,int)>','<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int userIdAt(int)>','<com.android.server.audio.AudioService: void access$6600(com.android.server.audio.AudioService,android.bluetooth.BluetoothDevice,int)>','<com.android.server.am.UserController$2: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.wm.WindowManagerService$LocalService: void getMagnificationRegion(android.graphics.Region)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: android.os.IHwBinder asBinder()>','<com.android.server.am.ActivityManagerService: java.lang.String getStartedUserState(int)>','<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.AnyMotionDetector$RunningSignalStats: java.lang.String toString()>','<com.android.server.pm.PackageManagerShellCommand$4: boolean handleOption(java.lang.String,android.os.ShellCommand)>','<com.android.server.audio.AudioService$VolumeStreamState: void mute(boolean)>','<com.android.server.wm.AppTransition: android.view.animation.Animation createThumbnailScaleAnimationLocked(int,int,int,android.graphics.GraphicBuffer)>','<com.android.server.pm.UserDataPreparer: void prepareUserData(int,int,int)>','<com.android.server.net.NetworkPolicyManagerService$4: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.DeviceIdleController: int[] getAppIdUserWhitelistInternal()>','<com.android.server.wm.WindowAnimator: void removeDisplayLocked(int)>','<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo findOrCreateVersion(java.lang.String)>','<com.android.server.NetworkManagementService: void setFirewallEnabled(boolean)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int,int)>','<com.android.server.pm.PackageSettingBase: void setUpdateAvailable(boolean)>','<com.android.server.wm.WindowManagerService: boolean okToDisplay()>','<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(com.android.server.connectivity.NetworkAgentInfo,boolean)>','<com.android.server.am.ActivityStack: void removeActivitiesFromLRUListLocked(com.android.server.am.TaskRecord)>','<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>','<com.android.server.statusbar.StatusBarManagerService$1: void setCurrentUser(int)>','<com.android.server.connectivity.Vpn: void startLegacyVpn(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>','<com.android.server.EventLogTags: void writePowerPartialWakeState(int,java.lang.String)>','<com.android.server.AlarmManagerService$Batch: void <init>(com.android.server.AlarmManagerService,com.android.server.AlarmManagerService$Alarm)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>','<android.net.ip.RouterAdvertisementDaemon: java.lang.Object access$900(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.wm.AppWindowToken: void onOverrideConfigurationChanged(android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.pm.IntentFilterVerificationResponse: void <init>(int,int,java.util.List)>','<com.android.server.InputMethodManagerService: void buildInputMethodListLocked(boolean)>','<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityManagerService: android.content.Intent verifyBroadcastLocked(android.content.Intent)>','<com.android.server.pm.UserManagerService: android.util.SparseIntArray access$2600(com.android.server.pm.UserManagerService)>','<com.android.server.wm.WindowSurfaceController: void forceScaleableInTransaction(boolean)>','<com.android.server.audio.AudioService$SoundPoolCallback: int status()>','<com.android.server.am.UidRecord: void updateHasInternetPermission()>','<com.android.server.pm.PackageSettingBase: boolean getInstalled(int)>','<com.android.server.am.ActivityManagerService$11: void binderDied()>','<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>','<com.android.server.power.PowerManagerService: void access$2800(com.android.server.power.PowerManagerService)>','<com.android.server.am.AppErrors: void resetProcessCrashTimeLocked(android.content.pm.ApplicationInfo)>','<com.android.server.wm.DimLayer: void printTo(java.lang.String,java.io.PrintWriter)>','<com.android.server.audio.PlaybackActivityMonitor: void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher,boolean)>','<com.android.server.location.FusedLocationHardwareSecure: void stopBatching(int)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setSecure(boolean)>','<com.android.server.wm.TaskStack: boolean updateAdjustForIme(float,float,boolean)>','<com.android.server.pm.PackageSignatures: void <init>(com.android.server.pm.PackageSignatures)>','<com.android.server.TelephonyRegistry: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>','<com.android.server.NativeDaemonEvent: void checkCode(int)>','<com.android.server.pm.PackageManagerServiceUtils: void <init>()>','<com.android.server.am.ActivityManagerService: void unregisterIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>','<com.android.server.pm.UserManagerService: int getCredentialOwnerProfile(int)>','<com.android.server.pm.Settings: void readPackageRestrictionsLPr(int)>','<com.android.server.usb.UsbUserSettingsManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: boolean contains(com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter)>','<com.android.server.NsdService$NativeCallbackReceiver: void onDaemonConnected()>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void <init>(java.util.HashMap,int)>','<com.android.server.wm.DisplayContent: android.util.DisplayMetrics getDisplayMetrics()>','<com.android.server.wm.AppTransition: void getNextAppTransitionStartRect(int,android.graphics.Rect)>','<com.android.server.audio.AudioService: int getStreamVolume(int)>','<com.android.server.usb.UsbHostManager$1: void run()>','<com.android.server.audio.RotationHelper$AudioDisplayListener: void onDisplayRemoved(int)>','<com.android.server.LocationManagerService$LocationWorkerHandler: void <init>(com.android.server.LocationManagerService,android.os.Looper)>','<com.android.server.location.PassiveProvider: void disable()>','<com.android.server.ConnectivityService: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.server.am.TaskRecord: void addActivityAtBottom(com.android.server.am.ActivityRecord)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskForReuseLocked(com.android.server.am.ActivityRecord,int)>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>','<com.android.server.pm.PermissionsState: int getPermissionFlags(java.lang.String,int)>','<com.android.server.pm.BasePermission: int[] computeGids(int)>','<com.android.server.wm.WindowState$DeadWindowEventReceiver: void <init>(com.android.server.wm.WindowState,android.view.InputChannel)>','<com.android.server.am.ActivityManagerService: void startTimeTrackingFocusedActivityLocked()>','<com.android.server.InputMethodManagerService: void updateCurrentProfileIds()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void setShown(boolean,boolean)>','<com.android.server.ConnectivityService: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>','<com.android.server.pm.EphemeralResolverConnection: boolean access$402(com.android.server.pm.EphemeralResolverConnection,boolean)>','<com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>','<com.android.server.audio.AudioService$LoadSoundEffectReply: void <init>(com.android.server.audio.AudioService)>','<com.android.server.connectivity.NetworkAgentInfo: void clearLingerState()>','<com.android.server.wm.WindowState: int getBaseType()>','<com.android.server.input.InputManagerService: void setWindowManagerCallbacks(com.android.server.input.InputManagerService$WindowManagerCallbacks)>','<com.android.server.wm.WindowState: boolean isRtl()>','<com.android.server.wm.WindowStateAnimator: void endDelayingAnimationStart()>','<com.android.server.am.ActivityManagerService: void recordPssSampleLocked(com.android.server.am.ProcessRecord,int,long,long,long,long)>','<com.android.server.audio.AudioService$VolumeStreamState: void applyDeviceVolume_syncVSS(int)>','<com.android.server.wm.WindowSurfacePlacer: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.pm.BasePermission: boolean isRuntimeOnly()>','<com.android.server.connectivity.NetworkMonitor$EvaluationResult: com.android.server.connectivity.NetworkMonitor$EvaluationResult valueOf(java.lang.String)>','<com.android.server.location.GnssLocationProvider$7: void <init>(com.android.server.location.GnssLocationProvider,android.os.Handler)>','<com.android.server.wm.DimLayer: boolean isAnimating()>','<com.android.server.power.ShutdownThread$2: void <init>()>','<com.android.server.am.AppErrorDialog: void <clinit>()>','<com.android.server.wm.AppTransition: android.view.animation.Interpolator access$100(com.android.server.wm.AppTransition)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$TetheredState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<android.net.ip.RouterAdvertisementDaemon$RaParams: void <init>()>','<com.android.server.am.ActivityManagerShellCommand: int access$402(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.NativeDaemonConnector: void waitForCallbacks()>','<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void enter()>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionThumb(android.graphics.GraphicBuffer,int,int,android.os.IRemoteCallback,boolean)>','<com.android.server.am.UserController$Injector: android.app.KeyguardManager getKeyguardManager()>','<com.android.server.firewall.StringFilter$8: void <init>(java.lang.String)>','<com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$600(com.android.server.wm.TaskSnapshotPersister)>','<com.android.server.am.UriPermissionOwner: void removeReadPermission(com.android.server.am.UriPermission)>','<com.android.server.am.EventLogTags: void writeAmResumeActivity(int,int,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>','<com.android.server.audio.AudioService$AudioHandler: void access$5900(com.android.server.audio.AudioService$AudioHandler,android.media.MediaPlayer)>','<com.android.server.am.ActivityManagerService: boolean isAppStartModeDisabled(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean access$3400()>','<com.android.server.LocationManagerService$LinkedCallback: void <init>(com.android.server.LocationManagerService,android.location.IBatchedLocationCallback)>','<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context)>','<com.android.server.wm.PinnedStackController: void onDisplayInfoChanged()>','<com.android.server.wm.WindowManagerService: void shutdown(boolean)>','<com.android.server.pm.PackageManagerService: boolean isOrphaned(java.lang.String)>','<com.android.server.wm.AppWindowToken: boolean windowsAreFocusable()>','<com.android.server.am.UserController$Injector: int checkCallingPermission(java.lang.String)>','<com.android.server.wm.AppWindowToken: void clearAnimatingFlags()>','<com.android.server.am.ActiveServices: boolean stopServiceTokenLocked(android.content.ComponentName,android.os.IBinder,int)>','<com.android.server.wm.WindowStateAnimator: void setWallpaperOffset(android.graphics.Point)>','<com.android.server.LocationManagerService$LinkedCallback: void binderDied()>','<com.android.server.DeviceIdleController$MotionListener: void unregisterLocked()>','<com.android.server.wm.TaskSnapshotLoader: android.app.ActivityManager$TaskSnapshot loadTask(int,int,boolean)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void onAnimationRepeat(android.animation.Animator)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier,android.os.Looper)>','<com.android.server.pm.UserManagerService$MainHandler: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService$MemItem: void <init>(java.lang.String,java.lang.String,long,long,int,boolean)>','<com.android.server.power.BatterySaverPolicy: void onChange(boolean,android.net.Uri)>','<com.android.server.wm.TaskStack: int getOrientation()>','<com.android.server.wm.DockedStackDividerController: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent)>','<com.android.server.wm.WindowManagerService$LocalService: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.WindowManagerService$1)>','<com.android.server.wm.Task: void <init>(int,com.android.server.wm.TaskStack,int,com.android.server.wm.WindowManagerService,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,android.app.ActivityManager$TaskDescription,com.android.server.wm.TaskWindowContainerController)>','<com.android.server.pm.Settings: com.android.server.pm.SharedUserSetting getSharedUserLPw(java.lang.String,int,int,boolean)>','<com.android.server.usb.UsbSettingsManager: void remove(android.os.UserHandle)>','<com.android.server.usb.UsbDeviceManager: void access$200(com.android.server.usb.UsbDeviceManager)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$AudioHandler access$002(com.android.server.audio.AudioService,com.android.server.audio.AudioService$AudioHandler)>','<com.android.server.location.MockProvider: long getStatusUpdateTime()>','<com.android.server.am.ActivityManagerService: void removeContentProvider(android.os.IBinder,boolean)>','<com.android.server.wm.Task: void setResizeable(int)>','<com.android.server.Watchdog$HandlerChecker: java.lang.String describeBlockedStateLocked()>','<com.android.server.pm.PackageSettingBase: void addDisabledComponent(java.lang.String,int)>','<com.android.server.am.ActivityManagerService$AppTaskImpl: void <init>(com.android.server.am.ActivityManagerService,int,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>','<com.android.server.wm.TaskPositioner: boolean access$002(com.android.server.wm.TaskPositioner,boolean)>','<com.android.server.location.MockProvider: java.lang.String getName()>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void <init>(long,int[])>','<com.android.server.ServiceWatcher: java.lang.String access$100(com.android.server.ServiceWatcher)>','<com.android.server.am.ActivityManagerService: boolean switchUser(int)>','<com.android.server.usb.UsbAudioDevice: void setDeviceNameAndDescription(java.lang.String,java.lang.String)>','<com.android.server.wm.DisplayContent$TaskStackContainers: void setExitingTokensHasVisible(boolean)>','<android.hardware.usb.V1_0.PortStatus: void readFromParcel(android.os.HwParcel)>','<com.android.server.am.ActivityManagerService$GrantUri: void <init>(int,android.net.Uri,boolean)>','<com.android.server.SystemServiceManager: boolean isRuntimeRestarted()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doPostDeleteLI(boolean)>','<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.app.ActivityOptions)>','<com.android.server.am.TaskRecord: void freeLastThumbnail()>','<com.android.server.net.NetworkStatsCollection$Key: int compareTo(java.lang.Object)>','<com.android.server.pm.Policy$PolicyBuilder: java.util.Map access$200(com.android.server.pm.Policy$PolicyBuilder)>','<com.android.server.am.ActivityManagerShellCommand: int runScreenCompat(java.io.PrintWriter)>','<com.android.server.am.ActivityStack: void onActivityRemovedFromStack(com.android.server.am.ActivityRecord)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$UpstreamNetworkCallback: void <init>(com.android.server.connectivity.tethering.UpstreamNetworkMonitor,int)>','<com.android.server.wm.WindowState: boolean setReplacementWindowIfNeeded(com.android.server.wm.WindowState)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void cleanUpResourcesLI()>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: java.lang.String interfaceDescriptor()>','<com.android.server.wm.WindowContainer: void onMovedByResize()>','<com.android.server.usb.UsbAlsaManager: com.android.server.usb.UsbAudioDevice selectDefaultDevice()>','<com.android.server.wm.InputMonitor: int interceptMotionBeforeQueueingNonInteractive(long,int)>','<com.android.server.am.ActivityManagerService: void setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,android.app.ProfilerInfo)>','<com.android.server.pm.PackageManagerService: boolean access$2800(com.android.server.pm.PackageManagerService,int)>','<com.android.server.am.ActivityRecord: void updatePictureInPictureMode(android.graphics.Rect)>','<com.android.server.wm.Task: void setTempInsetBounds(android.graphics.Rect)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: boolean shouldWrite()>','<com.android.server.AlarmManagerService: void rebatchAllAlarmsLocked(boolean)>','<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>','<com.android.server.wm.SplashScreenStartingData: void <init>(com.android.server.wm.WindowManagerService,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.content.res.Configuration)>','<com.android.server.am.VrController: java.lang.Object access$000(com.android.server.am.VrController)>','<com.android.server.wm.WindowState: int getHighestAnimLayer()>','<com.android.server.am.AppErrors: void scheduleAppCrashLocked(int,int,java.lang.String,int,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: boolean access$600(com.android.server.net.NetworkPolicyManagerService,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.wm.WindowStateAnimator: void setTransparentRegionHintLocked(android.graphics.Region)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getResourcePath()>','<com.android.server.audio.AudioService: void access$4200(com.android.server.audio.AudioService,android.content.Intent)>','<com.android.server.am.ActiveServices: void serviceForegroundTimeout(com.android.server.am.ServiceRecord)>','<com.android.server.power.Notifier: void access$500(com.android.server.power.Notifier)>','<com.android.server.am.ActivityManagerService$ImportanceToken: void <init>(com.android.server.am.ActivityManagerService,int,android.os.IBinder,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String,boolean,int,boolean,boolean)>','<com.android.server.am.ActivityManagerShellCommand: int runStackMoveTask(java.io.PrintWriter)>','<com.android.server.TelephonyRegistry: void notifyCellInfo(java.util.List)>','<com.android.server.wm.WindowState: void setReportedConfiguration(android.util.MergedConfiguration)>','<com.android.server.net.NetworkPolicyManagerService: android.net.INetworkStatsService access$1800(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.RescueParty: void <init>()>','<com.android.server.connectivity.KeepaliveTracker: void <init>(android.os.Handler)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$VolumeController access$9900(com.android.server.audio.AudioService)>','<com.android.server.am.ActivityRecord: void onStartingWindowDrawn(long)>','<com.android.server.wm.WindowStateAnimator: void computeShownFrameLocked()>','<com.android.server.am.PendingIntentRecord$Key: java.lang.String toString()>','<com.android.server.pm.EphemeralResolverConnection$ConnectionException: void <init>(int)>','<com.android.server.pm.Installer: void idmap(java.lang.String,java.lang.String,int)>','<com.android.server.net.NetworkStatsCollection: long getTotalBytes()>','<com.android.server.location.RemoteListenerHelper: void access$200(com.android.server.location.RemoteListenerHelper,com.android.server.location.RemoteListenerHelper$ListenerOperation)>','<android.hardware.usb.V1_0.PortDataRole: java.lang.String dumpBitfield(int)>','<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toString()>','<com.android.server.location.GnssStatusListenerHelper: void onStatusChanged(boolean)>','<com.android.server.pm.PackageManagerService: void clearDefaultBrowserIfNeeded(java.lang.String)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.usb.UsbPortManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: int lastError()>','<com.android.server.ConnectivityService: java.lang.String[] getTetheredDhcpRanges()>','<com.android.server.power.PowerManagerService: boolean setDeviceIdleModeInternal(boolean)>','<com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller$1: void sendResult(android.os.Bundle)>','<com.android.server.wm.AccessibilityController: void getMagnificationRegionLocked(android.graphics.Region)>','<com.android.server.audio.PlaybackActivityMonitor: void <init>()>','<com.android.server.am.ActivityManagerService: void clearGrantedUriPermissions(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int startActivityIntentSender(android.content.IIntentSender)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setPosition(float,float)>','<com.android.server.DeviceIdleController: void motionLocked()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$702(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,int)>','<com.android.server.wm.WindowManagerService: void getWindowDisplayFrame(com.android.server.wm.Session,android.view.IWindow,android.graphics.Rect)>','<com.android.server.location.GnssMeasurementsProvider: void <init>(android.os.Handler)>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskMovedToFront(int)>','<com.android.server.usb.descriptors.UsbACHeader: int getADCRelease()>','<com.android.server.am.ActivityManagerShellCommand: int runTaskLock(java.io.PrintWriter)>','<android.net.util.NetdService: void <init>()>','<com.android.server.wm.TaskSnapshotPersister: void waitForQueueEmpty()>','<com.android.server.wm.WindowManagerService: void showRecentApps(boolean)>','<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>','<com.android.server.wm.WindowManagerService: android.view.IWindowId getWindowId(android.os.IBinder)>','<com.android.server.am.ContentProviderConnection: java.lang.String toClientString()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void ping()>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getSubclass()>','<com.android.server.pm.UserManagerService$LocalService: void setDevicePolicyUserRestrictions(int,android.os.Bundle,boolean,int)>','<com.android.server.ConnectivityService: void setVpnPackageAuthorization(java.lang.String,int,boolean)>','<com.android.server.usb.UsbService: void setUsbDeviceConnectionHandler(android.content.ComponentName)>','<com.android.server.wm.DockedStackDividerController: void getTouchRegion(android.graphics.Rect)>','<com.android.server.am.ActivityManagerService: void setDisablePreviewScreenshots(android.os.IBinder,boolean)>','<com.android.server.wm.DisplayContent$TaskForResizePointSearchResult: void <init>()>','<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>','<com.android.server.wm.AppWindowToken: void checkAppWindowsReadyToShow()>','<com.android.server.EventLogTags: void writeNotificationVisibility(java.lang.String,int,int,int,int,int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStackSupervisor createStackSupervisor()>','<com.android.server.am.BroadcastQueue: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler,java.lang.String,long,boolean)>','<com.android.server.audio.AudioService: java.lang.Object access$1100(com.android.server.audio.AudioService)>','<com.android.server.location.GeofenceManager$1: void <init>(com.android.server.location.GeofenceManager,android.os.Handler)>','<com.android.server.am.ActivityManagerService: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: void updateUserConfigurationLocked()>','<com.android.server.wm.DisplayContent: boolean isReady()>','<com.android.server.AlarmManagerService: long getNextWakeFromIdleTimeImpl()>','<com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo: void recordSample(com.android.server.net.NetworkStatsObservers$StatsContext)>','<com.android.server.AppOpsService: void packageRemoved(int,java.lang.String)>','<android.hardware.usb.V1_0.IUsb$Stub: java.lang.String toString()>','<com.android.server.usb.UsbPortManager$ServiceNotification: void onRegistration(java.lang.String,java.lang.String,boolean)>','<com.android.server.location.GnssLocationProvider: void disable()>','<com.android.server.pm.PackageDexOptimizer: void systemReady()>','<com.android.server.connectivity.Tethering$2: void onReceiveResult(int,android.os.Bundle)>','<com.android.server.am.ActivityRecord: void onOverrideConfigurationSent()>','<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int,int)>','<com.android.server.AlarmManagerService: int fuzzForDuration(long)>','<com.android.server.am.ActivityRecord: void reparent(com.android.server.am.TaskRecord,int,java.lang.String)>','<com.android.server.pm.UserManagerService: boolean isUserNameSet(int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<com.android.server.AttributeCache$Package: android.util.SparseArray access$000(com.android.server.AttributeCache$Package)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: void <init>(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService: int getInstallReason(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$8: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.am.ActivityManagerService$11: void <init>(com.android.server.am.ActivityManagerService,int,android.os.IBinder,java.lang.String)>','<com.android.server.audio.MediaFocusControl$1: void run()>','<com.android.server.am.ServiceRecord$3: void <init>(com.android.server.am.ServiceRecord,java.lang.String,int,int)>','<com.android.server.am.ServiceRecord$1: void run()>','<com.android.server.location.GnssLocationProvider$9: void <init>(com.android.server.location.GnssLocationProvider,android.os.Handler)>','<com.android.server.wm.DockedStackDividerController: void registerDockedStackListener(android.view.IDockedStackListener)>','<com.android.server.am.UserController: boolean hasUserRestriction(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void setFocusedStack(int)>','<com.android.server.power.PowerManagerService: void access$1800(com.android.server.power.PowerManagerService,boolean)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getNumEndpoints()>','<com.android.server.firewall.StringFilter$4: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.input.InputManagerService$InputManagerHandler: void handleMessage(android.os.Message)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.net.NetworkStatsService: void <init>(android.content.Context,android.os.INetworkManagementService,android.app.AlarmManager,android.os.PowerManager$WakeLock,android.util.TrustedTime,android.telephony.TelephonyManager,com.android.server.net.NetworkStatsService$NetworkStatsSettings,com.android.server.net.NetworkStatsObservers,java.io.File,java.io.File)>','<com.android.server.pm.PackageManagerServiceCompilerMapping: void <init>()>','<com.android.server.pm.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>','<com.android.server.LocationManagerService: boolean reportLocationAccessNoThrow(int,int,java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void moveToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay,boolean)>','<com.android.server.audio.AudioService: void access$9100(com.android.server.audio.AudioService,android.content.Context,android.content.Intent)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onStarted()>','<com.android.server.connectivity.Tethering$TetherMasterSM: boolean turnOnMasterTetherSettings()>','<com.android.server.wm.Task: com.android.server.wm.AppWindowToken getTopVisibleAppToken()>','<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: void <init>(android.media.IPlaybackConfigDispatcher,boolean)>','<com.android.server.NsdService$NativeResponseCode: void <clinit>()>','<com.android.server.net.NetworkPolicyManagerService$2: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte)>','<com.android.server.am.ServiceRecord$StartItem: void removeUriPermissionsLocked()>','<com.android.server.power.PowerManagerService$BinderService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.wm.WindowStateAnimator: void destroyPreservedSurfaceLocked()>','<com.android.server.am.ActivityManagerService: void backgroundServicesFinishedLocked(int)>','<com.android.server.am.ActivityStackSupervisor: boolean resumeFocusedStackTopActivityLocked()>','<com.android.server.am.ActivityManagerShellCommand: int access$1002(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.am.TaskRecord: boolean isResizeable()>','<android.hardware.usb.V1_0.PortStatus: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<android.os.IInstalld$Stub$Proxy: void linkFile(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.ConnectivityService: android.net.ProxyInfo getGlobalProxy()>','<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>','<com.android.server.am.TaskRecord: int getTaskToReturnTo()>','<com.android.server.usb.UsbDeviceManager: boolean access$2100(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.TaskSnapshotCache: void onAppRemoved(com.android.server.wm.AppWindowToken)>','<com.android.server.wm.Task: boolean isFullscreen()>','<com.android.server.net.NetworkStatsService: void incrementOperationCount(int,int,int)>','<com.android.server.am.ActivityStackSupervisor: void reportTaskToFrontNoLaunch(com.android.server.am.ActivityRecord)>','<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getAttribs()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController: void handleMessage(android.os.Message)>','<com.android.server.audio.PlaybackActivityMonitor: void playerEvent(int,int,int)>','<com.android.server.location.GnssLocationProvider: boolean access$2200()>','<com.android.server.IntentResolver: boolean dumpMap(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,android.util.ArrayMap,java.lang.String,boolean,boolean)>','<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>','<com.android.server.am.ActivityStack: void reparent(com.android.server.am.ActivityStackSupervisor$ActivityDisplay,boolean)>','<com.android.server.NsdService: boolean access$1800(com.android.server.NsdService,int)>','<com.android.server.pm.PackageSetting: boolean isSystem()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void setHALInstrumentation()>','<com.android.server.usb.UsbDeviceManager: boolean access$1802(com.android.server.usb.UsbDeviceManager,boolean)>','<com.android.server.pm.Installer: void dexopt(java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isUserRunning(int,int)>','<com.android.server.pm.PackageInstallerService: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>','<com.android.server.net.NetworkStatsObservers: void unregister(android.net.DataUsageRequest,int)>','<com.android.server.power.PowerManagerService: void setMaximumScreenOffTimeoutFromDeviceAdminInternal(int)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getUidTagConfig()>','<com.android.server.am.TaskRecord: boolean removeActivity(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.connectivity.Vpn$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.connectivity.Tethering: void access$400(com.android.server.connectivity.Tethering)>','<com.android.server.net.NetworkStatsService$1: void close()>','<com.android.server.am.AppNotRespondingDialog$1: void <init>(com.android.server.am.AppNotRespondingDialog)>','<com.android.server.usb.UsbProfileGroupSettingsManager$UserPackage: java.lang.String toString()>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: java.lang.String toString()>','<com.android.server.power.Notifier: com.android.server.power.SuspendBlocker access$200(com.android.server.power.Notifier)>','<com.android.server.AppOpsService: void writeState()>','<com.android.server.audio.AudioService: void setVolumePolicy(android.media.VolumePolicy)>','<com.android.server.NetworkManagementService: void access$900(com.android.server.NetworkManagementService,java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isFilterStopped(android.content.pm.PackageParser$ActivityIntentInfo,int)>','<com.android.server.DeviceIdleController: void stopMonitoringMotionLocked()>','<com.android.server.wm.WindowState$UpdateReportedVisibilityResults: void <init>()>','<com.android.server.AppOpsService: void readPackage(org.xmlpull.v1.XmlPullParser)>','<com.android.server.audio.AudioService: void access$6900(com.android.server.audio.AudioService,java.lang.String)>','<com.android.server.AppOpsService$ClientRestrictionState: void removeUser(int)>','<com.android.server.am.ActivityStack: void setLaunchTime(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowManagerService: void notifyAppResumedFinished(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$26: void run()>','<com.android.server.am.ActivityManagerService: void setTaskResizeable(int,int)>','<com.android.server.audio.AudioService$SoundPoolListenerThread: void <init>(com.android.server.audio.AudioService)>','<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getSubtype()>','<com.android.server.EventLogTags: void writePmPackageStats(long,long,long,long,long,long)>','<com.android.server.pm.PackageManagerService$22: void <init>(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<com.android.server.am.ActivityManagerService: void noteAlarmStart(android.content.IIntentSender,int,java.lang.String)>','<com.android.server.wm.WindowState: boolean isWinVisibleLw()>','<com.android.server.audio.AudioService$VolumeStreamState: int access$500(com.android.server.audio.AudioService$VolumeStreamState)>','<android.hidl.base.V1_0.IBase$Proxy: void notifySyspropsChanged()>','<com.android.server.pm.PackageManagerService: int getPermissionFlags(java.lang.String,java.lang.String,int)>','<com.android.server.pm.PackageDexOptimizer: int dexOptSecondaryDexPath(android.content.pm.ApplicationInfo,java.lang.String,java.util.Set,java.lang.String,boolean)>','<com.android.server.location.GnssNavigationMessageProvider: void onNavigationMessageAvailable(android.location.GnssNavigationMessage)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void <init>(com.android.server.connectivity.Vpn,com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>','<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)>','<com.android.server.wm.RemoteEventTrace: void openSurfaceTransaction()>','<com.android.server.pm.PackageSettingBase: void setVolumeUuid(java.lang.String)>','<com.android.server.input.InputManagerService$10: void <init>(com.android.server.input.InputManagerService,android.os.Handler)>','<com.android.server.EventLogTags: void writeBackupPackage(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)>','<com.android.server.wm.DimLayerController: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.audio.AudioService: void access$9200(com.android.server.audio.AudioService,boolean,int)>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDebuggingManager access$500(com.android.server.usb.UsbDeviceManager)>','<com.android.server.EventLogTags: void writeConnectivityStateChanged(int,int,int)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>','<com.android.server.ServiceWatcher: boolean access$200(com.android.server.ServiceWatcher,java.lang.String,boolean)>','<com.android.server.connectivity.MockableSystemProperties: boolean getBoolean(java.lang.String,boolean)>','<com.android.server.net.NetworkPolicyManagerService: long getLimitBytesFromCarrierConfig(android.os.PersistableBundle,long)>','<com.android.server.pm.PackageDexOptimizer$ForcedUpdatePackageDexOptimizer: void <init>(com.android.server.pm.Installer,java.lang.Object,android.content.Context,java.lang.String)>','<com.android.server.ConnectivityService: void access$300(com.android.server.ConnectivityService,int,boolean,long)>','<com.android.server.usb.descriptors.UsbACEndpoint: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,int,byte)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: boolean initOffloadControl(com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback)>','<com.android.server.location.GnssLocationProvider: boolean access$1500(int)>','<com.android.server.am.RecentTasks: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>','<com.android.server.wm.WindowState: boolean isClosing()>','<com.android.server.wm.WindowState: int getDisplayId()>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: void takePersistableUriPermission(android.net.Uri,int,int)>','<com.android.server.wm.WindowAnimator: void setPendingLayoutChanges(int,int)>','<com.android.server.am.ActivityManagerService: void dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.am.ActivityRecord: boolean isDestroyable()>','<com.android.server.wm.AppWindowToken: boolean isRelaunching()>','<com.android.server.wm.WindowStateAnimator: boolean getShown()>','<com.android.server.am.ActivityManagerService$10: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.am.TaskPersister: java.io.File getUserImagesDir(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: com.android.server.am.ConfigurationContainer getParent()>','<com.android.server.am.ServiceRecord: void makeRestarting(int,long)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: int access$700(com.android.server.wm.BoundsAnimationController$BoundsAnimator)>','<com.android.server.am.ActivityManagerService: boolean enterPictureInPictureMode(android.os.IBinder,android.app.PictureInPictureParams)>','<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>','<com.android.server.pm.KeySetManagerService: java.lang.String encodePublicKey(java.security.PublicKey)>','<com.android.server.wm.AppWindowToken: void getBounds(android.graphics.Rect)>','<com.android.server.EventLogTags: void writeWatchdogPssStats(int,int,int,int,int,int,int,int,int,int,int)>','<com.android.server.audio.AudioService: void access$7000(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.dex.DexManager getDexManager()>','<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>','<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: boolean isUidNetworkingBlocked(int,java.lang.String)>','<com.android.server.pm.PermissionsState: int revokeRuntimePermission(com.android.server.pm.BasePermission,int)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void deleteUserRuntimePermissionsFile(int)>','<com.android.server.wm.TaskSnapshotController: void notifyTaskRemovedFromRecents(int,int)>','<com.android.server.am.ActivityStackSupervisor: boolean finishDisabledPackageActivitiesLocked(java.lang.String,java.util.Set,boolean,boolean,int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void <init>()>','<com.android.server.net.NetworkStatsCollection: void readLegacyUid(java.io.File,boolean)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int)>','<com.android.server.am.UserController$1: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.pm.PackageManagerService$13: void run()>','<com.android.server.location.LocationBasedCountryDetector$2: void <init>(com.android.server.location.LocationBasedCountryDetector)>','<com.android.server.pm.PackageManagerService: boolean setDefaultBrowserPackageName(java.lang.String,int)>','<com.android.server.am.ProcessRecord: boolean addPackage(java.lang.String,int,com.android.server.am.ProcessStatsService)>','<com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList access$3000(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.net.NetworkStatsRecorder: void importLegacyNetworkLocked(java.io.File)>','<com.android.server.wm.Session: void pokeDrawLock(android.os.IBinder)>','<com.android.server.power.PowerManagerService: void access$4700(com.android.server.power.PowerManagerService,java.lang.String)>','<com.android.server.wm.DimLayer: boolean isDimming()>','<com.android.server.am.ActivityManagerService$PermissionController: boolean isRuntimePermission(java.lang.String)>','<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>','<com.android.server.AnyMotionDetector$1: void onAccuracyChanged(android.hardware.Sensor,int)>','<com.android.server.pm.PackageManagerService: android.util.ArraySet getOptimizablePackages()>','<com.android.server.usb.UsbPortManager$HALCallback: void notifyPortStatusChange(java.util.ArrayList,int)>','<com.android.server.connectivity.NetworkDiagnostics: void waitForMeasurements()>','<com.android.server.audio.AudioService: void access$8600(com.android.server.audio.AudioService,android.content.Context)>','<com.android.server.am.ActivityManagerService: void notifyEnterAnimationComplete(android.os.IBinder)>','<com.android.server.pm.PackageManagerService: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>','<com.android.server.wm.CircularDisplayMask: void positionSurface(int,int,int)>','<com.android.server.wm.WindowState: void setHasSurface(boolean)>','<com.android.server.wm.DisplayContent: void setAltOrientation(boolean)>','<com.android.server.power.PowerManagerService$WakeLock: void updateWorkSource(android.os.WorkSource)>','<com.android.server.usb.UsbPortManager: void removeSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.AppOpsService$1$1: java.lang.Void doInBackground(java.lang.Void[])>','<com.android.server.am.ActivityStackSupervisor: boolean isLockTaskModeViolation(com.android.server.am.TaskRecord)>','<com.android.server.wm.TaskStack: java.lang.String getName()>','<com.android.server.wm.StackWindowController: void requestResize(android.graphics.Rect)>','<com.android.server.location.FlpHardwareProvider: void <clinit>()>','<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>','<com.android.server.am.ActivityStack: boolean shouldUpRecreateTaskLocked(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.firewall.FilterList: void readChild(org.xmlpull.v1.XmlPullParser)>','<com.android.server.am.CompatModePackages: void saveCompatModes()>','<com.android.server.pm.Policy$PolicyBuilder: com.android.server.pm.Policy build()>','<com.android.server.power.PowerManagerService$LocalService: void setUserActivityTimeoutOverrideFromWindowManager(long)>','<com.android.server.pm.UserManagerService: boolean canHaveRestrictedProfile(int)>','<com.android.server.usb.descriptors.UsbDescriptorParser: float getOutputHeadsetProbability()>','<com.android.server.audio.AudioService: void setMode(int,android.os.IBinder,java.lang.String)>','<com.android.server.pm.UserManagerService: boolean isRestricted()>','<com.android.server.DeviceIdleController: void unregisterMaintenanceActivityListener(android.os.IMaintenanceActivityListener)>','<com.android.server.am.ActiveServices$3: void onResult(android.os.Bundle)>','<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>','<com.android.server.wm.DisplayContent: com.android.server.wm.DockedStackDividerController getDockedDividerController()>','<com.android.server.am.UserController$8: void sendResult(android.os.Bundle)>','<com.android.server.pm.UserManagerService: void onUserLoggedIn(int)>','<com.android.server.EventLogTags: void writeRestoreStart(java.lang.String,long)>','<com.android.server.ConnectivityService: boolean prepareVpn(java.lang.String,java.lang.String,int)>','<com.android.server.ConnectivityService$LegacyTypeTracker: boolean isTypeSupported(int)>','<com.android.server.am.ActivityStack: void remove()>','<android.hardware.usb.V1_1.PortStatus_1_1: void writeToParcel(android.os.HwParcel)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void deviceAttachedForFixedHandler(android.hardware.usb.UsbDevice,android.content.ComponentName)>','<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>','<com.android.server.am.ActivityManagerService: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>','<com.android.server.usb.UsbService: void setPortRoles(java.lang.String,int,int)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: java.lang.String toString()>','<com.android.server.DeviceIdleController: boolean removePowerSaveWhitelistAppInternal(java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: int runTask(java.io.PrintWriter)>','<android.os.IInstalld$Stub$Proxy: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>','<com.android.server.am.ActivityManagerService: void dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.wm.TaskSnapshotController: void onAppDied(com.android.server.wm.AppWindowToken)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: boolean access$800(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ActiveServices: int stopServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>','<com.android.server.ConnectivityService: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>','<com.android.server.EventLogTags: void writeAutoBrightnessAdj(float,float,float,float,float,float,float,float)>','<com.android.server.power.PowerManagerService: boolean setLightDeviceIdleModeInternal(boolean)>','<com.android.server.audio.AudioService$VolumeStreamState: void setAllIndexes(com.android.server.audio.AudioService$VolumeStreamState,java.lang.String)>','<com.android.server.am.BroadcastQueue: boolean cleanupDisabledPackageReceiversLocked(java.lang.String,java.util.Set,int,boolean)>','<com.android.server.statusbar.StatusBarManagerService: void remTile(android.content.ComponentName)>','<com.android.server.wm.DragResizeMode: boolean isModeAllowedForStack(int,int)>','<com.android.server.am.ProcessRecord: void kill(java.lang.String,boolean)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setSurface(android.view.Surface,int,int,int)>','<com.android.server.am.PreBootBroadcaster$1: void <init>(com.android.server.am.PreBootBroadcaster,android.os.Looper,android.os.Handler$Callback,boolean)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: java.util.ArrayList getHashChain()>','<com.android.server.am.UserController$6$1: void run()>','<android.hardware.usb.V1_0.PortStatus: boolean equals(java.lang.Object)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: com.android.server.connectivity.tethering.OffloadHardwareInterface$ForwardedStats getForwardedStats(java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.wm.PinnedStackController: void onConfigurationChanged()>','<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>','<com.android.server.am.UserController$6: void <init>(com.android.server.am.UserController,com.android.server.am.UserState)>','<com.android.server.input.InputManagerService$4: void <init>(com.android.server.input.InputManagerService,android.view.InputDevice,java.util.Locale,java.util.List)>','<com.android.server.am.InstrumentationReporter$MyThread: void run()>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: boolean writeBuffer()>','<com.android.server.net.NetworkStatsService: void forceUpdate()>','<com.android.server.pm.Settings: boolean wasPackageEverLaunchedLPr(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void onTaskListEmptyLocked()>','<com.android.server.pm.PackageManagerService$PackageFreezer: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.pm.PermissionsState: boolean hasPermission(java.lang.String,int)>','<com.android.server.location.GnssMeasurementsProvider: void onCapabilitiesUpdated(boolean)>','<com.android.server.usb.descriptors.UsbConfigDescriptor: int getTotalLength()>','<com.android.server.usb.UsbUserSettingsManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>','<com.android.server.audio.MediaFocusControl: void unregisterAudioFocusClient(java.lang.String)>','<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>','<com.android.server.location.GnssLocationProvider$11: void run()>','<com.android.server.am.ActivityManagerService: void makeIntentSenderCanceledLocked(com.android.server.am.PendingIntentRecord)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void getMagnifiedFrameInContentCoordsLocked(android.graphics.Rect)>','<com.android.server.pm.PackageSettingBase: void setInstantApp(boolean,int)>','<com.android.server.Watchdog$HandlerChecker: boolean isOverdueLocked()>','<com.android.server.firewall.IntentFirewall$Rule: int getComponentFilterCount()>','<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>','<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getNameIndex()>','<com.android.server.am.EventLogTags: void writeAmStopIdleService(int,java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.content.pm.ResolveInfo newResult(android.content.pm.PackageParser$ActivityIntentInfo,int,int)>','<com.android.server.wm.WindowSurfaceController: boolean hasSurface()>','<com.android.server.am.ProcessList: long minTimeFromStateChange(boolean)>','<com.android.server.wm.WindowState: boolean inFreeformWorkspace()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void setUpstreamNetwork(android.net.NetworkState)>','<com.android.server.net.NetworkPolicyManagerService: void access$300(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.pm.PackageInstallerSession$2: void <init>()>','<com.android.server.pm.BackgroundDexOptService$1: void <init>(com.android.server.pm.BackgroundDexOptService,java.lang.String,android.app.job.JobParameters,com.android.server.pm.PackageManagerService,android.util.ArraySet)>','<com.android.server.power.PowerManagerService: java.util.ArrayList access$900(com.android.server.power.PowerManagerService)>','<com.android.server.am.ActivityManagerService: boolean isPendingBroadcastProcessLocked(int)>','<com.android.server.am.TaskRecord: com.android.server.am.TaskRecord restoreFromXml(org.xmlpull.v1.XmlPullParser,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.AppNotRespondingDialog: com.android.server.am.ProcessRecord access$000(com.android.server.am.AppNotRespondingDialog)>','<com.android.server.usb.UsbAlsaManager: void systemReady()>','<com.android.server.pm.PackageManagerService: boolean isOnlyCoreApps()>','<com.android.server.pm.PackageSettingBase: boolean getInstantApp(int)>','<com.android.server.TelephonyRegistry$1: void <init>(com.android.server.TelephonyRegistry)>','<com.android.server.input.InputManagerService$LocalService: boolean injectInputEvent(android.view.InputEvent,int,int)>','<com.android.server.am.ActivityStack: boolean finishDisabledPackageActivitiesLocked(java.lang.String,java.util.Set,boolean,boolean,int)>','<com.android.server.am.ActivityStackSupervisor: boolean isFocusedStack(com.android.server.am.ActivityStack)>','<com.android.server.wm.PinnedStackWindowController: boolean deferScheduleMultiWindowModeChanged()>','<com.android.server.location.GnssLocationProvider: boolean access$1800(int)>','<com.android.server.wm.RootWindowContainer: boolean hasPendingLayoutChanges(com.android.server.wm.WindowAnimator)>','<com.android.server.am.ActivityRecord: android.app.ActivityOptions takeOptionsLocked()>','<com.android.server.pm.Settings: void writeDefaultAppsLPr(org.xmlpull.v1.XmlSerializer,int)>','<com.android.server.pm.InstantAppRegistry: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.AlarmManagerService: boolean checkAllowNonWakeupDelayLocked(long)>','<com.android.server.wm.WindowSurfaceController: void setSecure(boolean)>','<com.android.server.am.BroadcastStats$ViolationEntry: void <init>()>','<android.net.util.SharedLog: void e(java.lang.Exception)>','<com.android.server.ConnectivityService: void reportNetworkConnectivity(android.net.Network,boolean)>','<com.android.server.pm.AbstractStatsBase: void <init>(java.lang.String,java.lang.String,boolean)>','<com.android.server.wm.WindowState: boolean isAlive()>','<com.android.server.connectivity.Vpn: void interfaceStatusChanged(java.lang.String,boolean)>','<com.android.server.wm.Session: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>','<com.android.server.InputMethodManagerService$ClientState: void <init>(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>','<com.android.server.am.TaskRecord: void onParentChanged()>','<com.android.server.pm.PackageManagerService: int deletePackageX(java.lang.String,int,int,int)>','<com.android.server.wm.SurfaceControlWithBackground: void hide()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getXtPersistBytes(long)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void updateMagnificationSpecLocked(android.view.MagnificationSpec)>','<com.android.server.wm.WindowState$WindowId: void <init>(com.android.server.wm.WindowState,com.android.server.wm.WindowState$1)>','<com.android.server.pm.UserManagerService$LocalService: void setDeviceManaged(boolean)>','<com.android.server.AlarmManagerService$IdleDispatchEntry: void <init>()>','<com.android.server.am.BroadcastQueue: void broadcastTimeoutLocked(boolean)>','<com.android.server.wm.Watermark: void positionSurface(int,int)>','<com.android.server.ConnectivityService: void notifyNetworkAvailable(com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService$NetworkRequestInfo)>','<com.android.server.connectivity.NetworkDiagnostics: java.util.concurrent.CountDownLatch access$000(com.android.server.connectivity.NetworkDiagnostics)>','<com.android.server.connectivity.KeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.net.NetworkPolicyManagerService$3: void onUidGone(int,boolean)>','<com.android.server.connectivity.tethering.IControlsTethering: void updateLinkProperties(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,android.net.LinkProperties)>','<com.android.server.wm.WindowSurfaceController: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int,com.android.server.wm.WindowStateAnimator,int,int)>','<com.android.server.AnyMotionDetector: void <init>(android.os.PowerManager,android.os.Handler,android.hardware.SensorManager,com.android.server.AnyMotionDetector$DeviceIdleCallback,float)>','<com.android.server.am.RecentTasks: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.power.PowerManagerService$LocalService: void powerHint(int,int)>','<com.android.server.wm.WindowContainer: void onParentSet()>','<com.android.server.wm.StartingData: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.WindowSurfaceController: void setFinalCropInTransaction(android.graphics.Rect)>','<com.android.server.am.ActivityManagerService$LocalService: void notifyNetworkPolicyRulesUpdated(int,long)>','<com.android.server.am.ConfigurationContainer: void <init>()>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.am.CoreSettingsObserver: void onChange(boolean)>','<com.android.server.AlarmManagerService$Alarm: java.lang.String toString()>','<com.android.server.wm.WindowState: boolean isLaidOut()>','<com.android.server.NetworkManagementService: boolean access$2402(com.android.server.NetworkManagementService,boolean)>','<com.android.server.am.TaskRecord: boolean reparent(int,int,int,boolean,boolean,boolean,java.lang.String)>','<com.android.server.pm.Settings: boolean areDefaultRuntimePermissionsGrantedLPr(int)>','<com.android.server.pm.PermissionsState: int[] computeGids(int[])>','<com.android.server.power.PowerManagerService$BinderService: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.AppOpsService$1: void <init>(com.android.server.AppOpsService)>','<com.android.server.firewall.OrFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.audio.AudioService: int getLastAudibleStreamVolume(int)>','<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void access$100(com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer,boolean)>','<com.android.server.audio.PlaybackActivityMonitor: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>','<com.android.server.LocationManagerService: boolean access$600(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Identity)>','<com.android.server.pm.KeySetHandle: void incrRefCountLPw()>','<com.android.server.pm.PackageSettingBase: void clearDomainVerificationStatusForUser(int)>','<com.android.server.usb.UsbUserSettingsManager: boolean hasPermission(android.hardware.usb.UsbDevice)>','<com.android.server.location.GnssLocationProvider: android.util.NtpTrustedTime access$2500(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.Installer: void clearAppProfiles(java.lang.String)>','<com.android.server.am.AppErrors: void <init>(android.content.Context,com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerService: void updateDeviceOwner(java.lang.String)>','<com.android.server.wm.WindowSurfacePlacer: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.PackageManagerService$4: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void setResizeDimLayer(boolean,int,float)>','<com.android.server.pm.PackageKeySetData: boolean isUsingDefinedKeySets()>','<com.android.server.wm.SurfaceControlWithBackground: void release()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int,int)>','<com.android.server.pm.PermissionsState: boolean isPermissionReviewRequired(int)>','<com.android.server.NetworkManagementService$LocalService: boolean isNetworkRestrictedForUid(int)>','<com.android.server.wm.Task: void addChild(com.android.server.wm.AppWindowToken,int)>','<com.android.server.statusbar.StatusBarManagerService: void clickTile(android.content.ComponentName)>','<com.android.server.am.EventLogTags: void writeAmRelaunchResumeActivity(int,int,int,java.lang.String)>','<com.android.server.usb.UsbDeviceManager: boolean access$1502(com.android.server.usb.UsbDeviceManager,boolean)>','<com.android.server.NetworkManagementService: void detachPppd(java.lang.String)>','<com.android.server.AppOpsService$Shell: void onHelp()>','<com.android.server.location.GnssMeasurementsProvider: void onMeasurementsAvailable(android.location.GnssMeasurementsEvent)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.lang.String getCodePath()>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.input.InputManagerService: void updateAccessibilityLargePointerFromSettings()>','<com.android.server.am.ActivityMetricsLogger: void notifyActivityLaunched(int,com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$400(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.wm.WindowManagerService$LocalService: void setForceShowMagnifiableBounds(boolean)>','<com.android.server.power.PowerManagerService: void access$3000(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$WakeLock)>','<com.android.server.wm.WindowManagerService$2: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.power.ShutdownThread$4: void <init>(com.android.server.power.ShutdownThread)>','<com.android.server.connectivity.PacManager: int access$1202(com.android.server.connectivity.PacManager,int)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: void removePrefixes(java.util.Set)>','<com.android.server.pm.Settings: void updatePackageSetting(com.android.server.pm.PackageSetting,com.android.server.pm.PackageSetting,com.android.server.pm.SharedUserSetting,java.io.File,java.lang.String,java.lang.String,java.lang.String,int,int,java.util.List,com.android.server.pm.UserManagerService,java.lang.String[],int[])>','<com.android.server.connectivity.NetworkAgentInfo: boolean addRequest(android.net.NetworkRequest)>','<com.android.server.AlarmManagerService$ClockReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.EphemeralResolverConnection: void <clinit>()>','<com.android.server.pm.IntentFilterVerificationState: boolean isVerificationComplete()>','<com.android.server.am.ActivityRecord: com.android.server.wm.AppWindowContainerController getWindowContainerController()>','<com.android.server.am.ActiveServices$ServiceRestarter: void run()>','<com.android.server.am.ActivityManagerService: void enqueueUidChangeLocked(com.android.server.am.UidRecord,int,int)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void detachStack(com.android.server.am.ActivityStack)>','<com.android.server.audio.MediaFocusControl: void notifyExtPolicyFocusLoss_syncAf(android.media.AudioFocusInfo,boolean)>','<com.android.server.usb.UsbPortManager: void access$700(com.android.server.usb.UsbPortManager,com.android.internal.util.IndentingPrintWriter,java.util.ArrayList)>','<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String getKeyboardLayout(com.android.internal.inputmethod.InputMethodSubtypeHandle)>','<com.android.server.usb.descriptors.UsbACTerminal: void <init>(int,byte,byte,byte)>','<com.android.server.wm.WindowManagerService: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>','<com.android.server.am.ActivityManagerService: void setResumedActivityUncheckLocked(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.audio.AudioService$WiredDeviceConnectionState: void <init>(com.android.server.audio.AudioService,int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.KeyguardController: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.AppOpsService$Ops: void <init>(java.lang.String,com.android.server.AppOpsService$UidState,boolean)>','<com.android.server.wm.WindowSurfaceController: void setGeometryAppliesWithResizeInTransaction(boolean)>','<com.android.server.pm.UserManagerService: void removeUserInfo(int)>','<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>','<com.android.server.ConnectivityService: void access$4700(com.android.server.ConnectivityService,int)>','<com.android.server.am.ActivityManagerService: void killApplication(java.lang.String,int,int,java.lang.String)>','<com.android.server.audio.AudioService: void access$9300(com.android.server.audio.AudioService,boolean,int,int)>','<com.android.server.pm.InstantAppResolver: android.content.Intent buildEphemeralInstallerIntent(java.lang.String,android.content.Intent,android.content.Intent,java.lang.String,android.os.Bundle,java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void removeUidPolicy(int,int)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult attachNewInputLocked(int,boolean)>','<com.android.server.pm.Settings: void writeAllDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,int)>','<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>','<com.android.server.LocationManagerService: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>','<com.android.server.firewall.StringFilter$RegexFilter: boolean matchesValue(java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$3: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()>','<com.android.server.SystemService: java.lang.Object getLocalService(java.lang.Class)>','<com.android.server.pm.PackageInstallerService: android.content.pm.IPackageInstallerSession openSession(int)>','<com.android.server.wm.WindowManagerService: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager$DuckedApp: void dump(java.io.PrintWriter)>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: void <init>()>','<com.android.server.pm.PermissionsState: int grantRuntimePermission(com.android.server.pm.BasePermission,int)>','<com.android.server.IntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<com.android.server.wm.WindowManagerService$MousePositionTracker: void <init>(com.android.server.wm.WindowManagerService$1)>','<com.android.server.usb.UsbDeviceManager: boolean access$302(com.android.server.usb.UsbDeviceManager,boolean)>','<com.android.server.audio.MediaFocusControl: void discardAudioFocusOwner()>','<com.android.server.DeviceIdleController: boolean isAppOnWhitelistInternal(int)>','<com.android.server.pm.PackageManagerService: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,int)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte getUnitID()>','<com.android.server.wm.WallpaperController: void hideDeferredWallpapersIfNeeded()>','<com.android.server.location.GnssMeasurementsProvider: com.android.server.location.RemoteListenerHelper$ListenerOperation getHandlerOperation(int)>','<com.android.server.wm.WindowManagerService: void getInitialDisplaySize(int,android.graphics.Point)>','<com.android.server.wm.DisplaySettings: void setOverscanLocked(java.lang.String,java.lang.String,int,int,int,int)>','<com.android.server.NsdService$ClientInfo: com.android.internal.util.AsyncChannel access$2500(com.android.server.NsdService$ClientInfo)>','<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScoreAsValidated()>','<com.android.server.connectivity.Tethering: void access$1100(com.android.server.connectivity.Tethering,java.lang.String,int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: java.lang.String access$1700(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.net.LockdownVpnTracker: void onNetworkInfoChanged()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean isFilterStopped(android.content.pm.PackageParser$ProviderIntentInfo,int)>','<com.android.server.NativeDaemonConnector$ResponseQueue$PendingCmd: void <init>(int,java.lang.String)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void <init>(com.android.server.wm.BoundsAnimationController,com.android.server.wm.BoundsAnimationTarget,android.graphics.Rect,android.graphics.Rect,int,boolean,boolean,boolean)>','<com.android.server.AnimationThread: com.android.server.AnimationThread get()>','<com.android.server.firewall.StringFilter$PatternStringFilter: boolean matchesValue(java.lang.String)>','<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>','<com.android.server.NetworkManagementService: com.android.server.NativeDaemonConnector access$1600(com.android.server.NetworkManagementService)>','<com.android.server.TelephonyRegistry: void notifyCallForwardingChangedForSubscriber(int,boolean)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: java.lang.String toString()>','<com.android.server.net.NetworkPolicyManagerService: void updateRuleForRestrictPowerUL(int)>','<com.android.server.pm.AbstractStatsBase: void access$000(com.android.server.pm.AbstractStatsBase,java.lang.Object)>','<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getMaxPower()>','<com.android.server.net.NetworkStatsObservers$RequestInfo: void access$300(com.android.server.net.NetworkStatsObservers$RequestInfo)>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>','<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig access$802(com.android.server.connectivity.Vpn,com.android.internal.net.VpnConfig)>','<com.android.server.am.UserController: void dispatchLockedBootComplete(int)>','<com.android.server.pm.PackageManagerService$IntentVerifierProxy: boolean addOneIntentFilterVerification(int,int,int,android.content.pm.PackageParser$ActivityIntentInfo,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>','<com.android.server.SystemService: android.content.Context getUiContext()>','<com.android.server.NetworkManagementService$2: void run()>','<com.android.server.pm.UserManagerService$LifeCycle: void onStart()>','<com.android.server.am.ActivityManagerService: void showSafeModeOverlay()>','<com.android.server.wm.AppWindowToken: void destroySavedSurfaces()>','<com.android.server.AppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>','<com.android.server.wm.Session: void finishDrawing(android.view.IWindow)>','<com.android.server.wm.DisplayContent: int deltaRotation(int,int)>','<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>','<com.android.server.am.AppErrors: void crashApplicationInner(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo,int,int)>','<com.android.server.pm.PackageSignatures: void assignSignatures(android.content.pm.Signature[])>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ConfigurationContainer getParent()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSimCallManagerLPr(java.lang.String,int)>','<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>','<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String[],java.lang.Runnable)>','<com.android.server.NetworkManagementService: void <init>()>','<com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2000(com.android.server.connectivity.Tethering)>','<com.android.server.pm.Settings: java.lang.String getRenamedPackageLPr(java.lang.String)>','<com.android.server.pm.dex.DexManager: void notifyDexLoad(android.content.pm.ApplicationInfo,java.util.List,java.lang.String,int)>','<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>','<com.android.server.am.TaskPersister: void <init>(java.io.File)>','<com.android.server.wm.TaskSnapshotController: void systemReady()>','<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void drawDecors(android.graphics.Canvas,android.graphics.Rect)>','<com.android.server.wm.RemoteSurfaceTrace: void show()>','<com.android.server.am.ActivityManagerShellCommand: int runStartUser(java.io.PrintWriter)>','<com.android.server.wm.AccessibilityController: void onRotationChangedLocked(com.android.server.wm.DisplayContent)>','<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>','<com.android.server.wm.DisplayContent: void layoutAndAssignWindowLayersIfNeeded()>','<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>','<com.android.server.wm.WindowManagerService: boolean isCurrentProfileLocked(int)>','<com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>','<com.android.server.wm.AccessibilityController: void onSomeWindowResizedOrMovedLocked()>','<com.android.server.connectivity.PermissionMonitor: void <clinit>()>','<com.android.server.connectivity.Tethering$3: void updateInterfaceState(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int,int)>','<com.android.server.pm.UserManagerService: android.os.ParcelFileDescriptor getUserIcon(int)>','<com.android.server.usb.descriptors.ByteStream: void advance(int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$Association startAssociationLocked(int,java.lang.String,int,int,android.content.ComponentName,java.lang.String)>','<com.android.server.connectivity.tethering.SimChangeListener$SimChangeBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.TelephonyRegistry: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>','<com.android.server.statusbar.StatusBarManagerService: void disable2(int,android.os.IBinder,java.lang.String)>','<com.android.server.pm.PackageInstallerService: java.io.File allocateStageDirLegacy(java.lang.String,boolean)>','<com.android.server.firewall.IntentFirewall: boolean checkComponentPermission(java.lang.String,int,int,int,boolean)>','<com.android.server.am.BatteryStatsService: void noteResetCamera()>','<com.android.server.wm.WindowSurfaceController: void detachChildren()>','<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.view.WindowManager access$1100(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>','<com.android.server.wm.WindowManagerService: void destroyPreservedSurfaceLocked()>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: void <init>(com.android.server.pm.PackageManagerShellCommand$1)>','<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent$Callbacks,org.xmlpull.v1.XmlPullParser)>','<com.android.server.wm.WindowManagerService: void setWillReplaceWindows(android.os.IBinder,boolean)>','<com.android.server.wm.Session: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>','<com.android.server.am.ActivityManagerService$19: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.StringBuilder,android.os.DropBoxManager,java.lang.String)>','<com.android.server.location.GnssLocationProvider$12: boolean removeHardwareGeofence(int)>','<com.android.server.location.LocationRequestStatistics$PackageProviderKey: int hashCode()>','<com.android.server.location.FusedLocationHardwareSecure: int getVersion()>','<com.android.server.wm.TaskSnapshotPersister: java.util.ArrayDeque access$300(com.android.server.wm.TaskSnapshotPersister)>','<com.android.server.wm.TaskPositioner: android.graphics.Rect getWindowDragBounds()>','<com.android.server.location.GnssLocationProvider: android.os.PowerManager$WakeLock access$3500(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver: void <init>(com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>','<com.android.server.am.ActivityManagerService: int getMaxNumPictureInPictureActions(android.os.IBinder)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>','<android.hardware.usb.V1_0.PortMode: java.lang.String toString(int)>','<com.android.server.am.BroadcastStats$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.TaskRecord: void performClearTaskAtIndexLocked(int,boolean)>','<com.android.server.pm.IntentFilterVerificationState: java.lang.String getHostsString()>','<com.android.server.wm.AppWindowContainerController: boolean addStartingWindow(java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean,boolean,boolean,boolean,boolean,boolean)>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: boolean matches(android.hardware.usb.UsbDevice)>','<com.android.server.connectivity.tethering.OffloadController: void setUpstreamLinkProperties(android.net.LinkProperties)>','<com.android.server.net.NetworkPolicyManagerService$3: void onUidIdle(int,boolean)>','<com.android.server.location.RemoteListenerHelper$1: void <init>(com.android.server.location.RemoteListenerHelper)>','<com.android.server.am.TaskRecord: boolean isRecentsTask()>','<com.android.server.connectivity.Tethering: void interfaceStatusChanged(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService: void logAppProcessStartIfNeeded(java.lang.String,int,java.lang.String,java.lang.String,int)>','<com.android.server.InputMethodManagerService$ImmsBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: java.lang.String toString()>','<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData access$900(com.android.server.pm.UserManagerService,int)>','<com.android.server.am.ProcessStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.power.PowerManagerService$3: void run()>','<com.android.server.pm.UserManagerService: void access$600(com.android.server.pm.UserManagerService,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void createStack(int,boolean)>','<com.android.server.am.TaskRecord: long getInactiveDuration()>','<com.android.server.wm.WindowStateAnimator: boolean isDummyAnimation()>','<com.android.server.pm.SharedUserSetting: java.lang.String toString()>','<com.android.server.power.PowerManagerService: void access$3900(com.android.server.power.PowerManagerService,long,int,int,int)>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityDismissingDockedStack()>','<com.android.server.firewall.IntentFirewall: boolean signaturesMatch(int,int)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: void <init>(int)>','<com.android.server.InputMethodManagerService: void clearCurMethodLocked()>','<com.android.server.pm.PackageInstallerService: void prepareStageDir(java.io.File)>','<com.android.server.wm.TaskSnapshotCache: android.app.ActivityManager$TaskSnapshot getSnapshot(int,int,boolean,boolean)>','<com.android.server.wm.WindowSurfaceController: boolean clearWindowContentFrameStats()>','<com.android.server.NetworkManagementService: void removeIdleTimer(java.lang.String)>','<com.android.server.net.NetworkStatsCollection: void read(java.io.DataInputStream)>','<com.android.server.input.InputManagerService$VibratorToken: void binderDied()>','<com.android.server.wm.WindowSurfaceController: void disconnectInTransaction()>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbAlsaManager access$1400(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.DragAndDropPermissionsHandler: void takeTransient(android.os.IBinder)>','<com.android.server.am.ProcessList: void setOomAdj(int,int,int)>','<com.android.server.power.PowerManagerService: android.os.WorkSource access$2900(android.os.WorkSource)>','<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder)>','<com.android.server.wm.EmulatorDisplayOverlay: void positionSurface(int,int,int)>','<com.android.server.EventLogTags: void writeWatchdogRequestedReboot(int,int,int,int,int,int,int)>','<com.android.server.wm.WindowManagerService: void hideBootMessagesLocked()>','<android.os.IInstalld$Stub$Proxy: void createOatDir(java.lang.String,java.lang.String)>','<com.android.server.am.ProcessList: long computeNextPssTime(int,boolean,boolean,boolean,long)>','<com.android.server.pm.KeySetManagerService: void assertScannedPackageValid(android.content.pm.PackageParser$Package)>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: void <init>(android.content.pm.ApplicationInfo,int)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.pm.PackageManagerService: void enforceShellRestriction(java.lang.String,int,int)>','<com.android.server.pm.PackageInstallerService$2: void <init>(com.android.server.pm.PackageInstallerService)>','<com.android.server.usb.descriptors.ByteStream: byte peekByte()>','<com.android.server.AlarmManagerService: void removeImpl(android.app.PendingIntent)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: void <init>(java.util.ArrayList,android.net.util.SharedLog)>','<com.android.server.audio.AudioService: void startBluetoothScoInt(android.os.IBinder,int)>','<com.android.server.location.GnssLocationProvider$17: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: void write()>','<android.os.IInstalld$Stub: android.os.IInstalld asInterface(android.os.IBinder)>','<com.android.server.Watchdog$BinderThreadMonitor: void monitor()>','<android.hardware.configstore.V1_0.OptionalInt64: int hashCode()>','<com.android.server.wm.TaskStack: boolean isAdjustedForMinimizedDockedStack()>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.power.PowerManagerService$BatteryReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityManagerService$15: void run()>','<com.android.server.am.UserController: android.content.pm.UserInfo getCurrentUserLocked()>','<com.android.server.pm.Settings: void writePermissionLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.BasePermission)>','<com.android.server.pm.PackageManagerService$FileInstallArgs$1: void <init>(com.android.server.pm.PackageManagerService$FileInstallArgs)>','<com.android.server.am.EventLogTags: void writeCpu(int,int,int,int,int,int)>','<com.android.server.am.ActivityStackSupervisor: void access$200(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.wm.DisplayContent$TaskStackContainers: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult access$2102(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult)>','<com.android.server.statusbar.StatusBarManagerService$2: void run()>','<com.android.server.wm.TaskWindowContainerController: void setResizeable(int)>','<com.android.server.am.ActivityStack: void finishAllActivitiesLocked(boolean)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void <init>(com.android.server.firewall.IntentFirewall$1)>','<com.android.server.am.ActivityManagerService: void setInstaller(com.android.server.pm.Installer)>','<com.android.server.am.ActivityManagerService: int getActivityStackId(android.os.IBinder)>','<com.android.server.wm.Task: boolean resizeLocked(android.graphics.Rect,android.content.res.Configuration,boolean)>','<com.android.server.power.ShutdownThread$1: void <init>(android.content.Context)>','<com.android.server.pm.Settings: java.lang.String getDefaultBrowserPackageNameLPw(int)>','<com.android.server.wm.DragResizeMode: void <init>()>','<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>','<com.android.server.pm.UserRestrictionsUtils: boolean areEqual(android.os.Bundle,android.os.Bundle)>','<com.android.server.wm.BlackFrame$BlackSurface: void clearMatrix()>','<com.android.server.DeviceIdleController$Shell: void onHelp()>','<com.android.server.TelephonyRegistry$2: void <init>(com.android.server.TelephonyRegistry)>','<com.android.server.am.ActivityManagerService: void activityResumed(android.os.IBinder)>','<com.android.server.AlarmManagerService: void reAddAlarmLocked(com.android.server.AlarmManagerService$Alarm,long,boolean)>','<com.android.server.pm.PackageManagerService: void updateExternalMediaStatus(boolean,boolean)>','<com.android.server.connectivity.tethering.IControlsTethering: void <init>()>','<com.android.server.pm.PackageManagerShellCommand: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleased(int)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$1800(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<android.os.IInstalld$Stub$Proxy: void markBootComplete(java.lang.String)>','<com.android.server.pm.PackageSettingBase: boolean getSuspended(int)>','<com.android.server.pm.PermissionsState: void <init>(com.android.server.pm.PermissionsState)>','<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setSize(int,int)>','<com.android.server.AppOpsService: void readUid(org.xmlpull.v1.XmlPullParser,java.lang.String)>','<com.android.server.location.GeofenceManager$1: void onChange(boolean)>','<com.android.server.wm.DockedStackDividerController: boolean animate(long)>','<com.android.server.wm.DisplayContent: int getStackCount()>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)>','<com.android.server.SystemServiceManager: void cleanupUser(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$UnavailableState: void enter()>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$SoundPoolListenerThread access$5502(com.android.server.audio.AudioService,com.android.server.audio.AudioService$SoundPoolListenerThread)>','<com.android.server.wm.DragState: void sendDragStartedIfNeededLw(com.android.server.wm.WindowState)>','<com.android.server.DeviceIdleController: int onShellCommand(com.android.server.DeviceIdleController$Shell,java.lang.String)>','<com.android.server.am.ActivityStack: boolean isHomeStack()>','<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowToken asAppWindowToken()>','<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord taskForIdLocked(int)>','<com.android.server.wm.WindowStateAnimator: boolean isWaitingForOpening()>','<com.android.server.am.EventLogTags: void writeAmPauseActivity(int,int,java.lang.String)>','<com.android.server.wm.AppTransition: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.firewall.SenderPermissionFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.connectivity.KeepaliveTracker: void handleEventPacketKeepalive(com.android.server.connectivity.NetworkAgentInfo,android.os.Message)>','<com.android.server.wm.Task: void setSendingToBottom(boolean)>','<com.android.server.statusbar.StatusBarManagerService$1: void setGlobalActionsListener(com.android.server.statusbar.StatusBarManagerInternal$GlobalActionsListener)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void ping()>','<com.android.server.NetworkManagementService: void setFirewallChainEnabled(int,boolean)>','<com.android.server.wm.WindowToken: int getHighestAnimLayer()>','<com.android.server.firewall.IntentFirewall$FirewallIntentFilter: void <init>(com.android.server.firewall.IntentFirewall$Rule)>','<android.net.INetd$Stub$Proxy: boolean tetherApplyDnsInterfaces()>','<com.android.server.AlarmManagerService$Batch: boolean add(com.android.server.AlarmManagerService$Alarm)>','<com.android.server.wm.WindowContainer: void removeIfPossible()>','<android.net.util.Stopwatch: long stop()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.InputMethodManagerService: boolean switchToNextInputMethod(android.os.IBinder,boolean)>','<com.android.server.am.UserState: boolean setState(int,int)>','<com.android.server.pm.KeySetHandle: void <init>(long)>','<com.android.server.usb.UsbSettingsManager: com.android.server.usb.UsbProfileGroupSettingsManager getSettingsForProfileGroup(android.os.UserHandle)>','<com.android.server.am.UserController: void stopRunningUsersLocked(int)>','<com.android.server.am.UserController$Injector: void enforceShellRestriction(java.lang.String,int)>','<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<com.android.server.am.ActivityRecord: void removeUriPermissionsLocked()>','<com.android.server.wm.Session: void <init>(com.android.server.wm.WindowManagerService,android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>','<com.android.server.audio.AudioService: void onAccessibilityServicesStateChanged(android.view.accessibility.AccessibilityManager)>','<com.android.server.statusbar.StatusBarManagerService: void reboot(boolean)>','<com.android.server.NetworkManagementService: void access$700(com.android.server.NetworkManagementService,java.lang.String)>','<com.android.server.connectivity.tethering.TetheringDependencies: com.android.server.connectivity.tethering.OffloadHardwareInterface getOffloadHardwareInterface(android.os.Handler,android.net.util.SharedLog)>','<com.android.server.net.NetworkStatsService: android.net.DataUsageRequest registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>','<com.android.server.NetworkManagementService: void setUidMeteredNetworkWhitelist(int,boolean)>','<com.android.server.connectivity.NetworkNotificationManager$1: void <clinit>()>','<com.android.server.ConnectivityService: void access$3200(com.android.server.ConnectivityService,com.android.server.ConnectivityService$NetworkRequestInfo)>','<com.android.server.usb.UsbDeviceManager: android.content.Context access$800(com.android.server.usb.UsbDeviceManager)>','<com.android.server.audio.AudioService$VolumeStreamState: int observeDevicesForStream_syncVSS(boolean)>','<com.android.server.audio.AudioService: boolean isStreamAffectedByRingerMode(int)>','<com.android.server.wm.StackWindowController: void <init>(int,com.android.server.wm.StackWindowListener,int,boolean,android.graphics.Rect)>','<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent,java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void put(int,java.lang.String,java.util.ArrayList)>','<com.android.server.net.NetworkPolicyManagerService$3: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.ActivityManagerService: void importanceTokenDied(com.android.server.am.ActivityManagerService$ImportanceToken)>','<com.android.server.DeviceIdleController$7: void onLocationChanged(android.location.Location)>','<com.android.server.am.BatteryStatsService: void noteStartGps(int)>','<com.android.server.firewall.IntentFirewall$FirewallIntentFilter: com.android.server.firewall.IntentFirewall$Rule access$200(com.android.server.firewall.IntentFirewall$FirewallIntentFilter)>','<com.android.server.wm.KeyguardDisableHandler$KeyguardTokenWatcher: void acquired()>','<com.android.server.am.EventLogTags: void writeAmStopActivity(int,int,java.lang.String)>','<com.android.server.pm.Settings: void writeUpgradeKeySetsLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>','<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void finishBooting()>','<com.android.server.pm.Policy: java.util.Map access$600(com.android.server.pm.Policy)>','<com.android.server.wm.WindowToken: void removeImmediately()>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void resume()>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$CbResults: java.lang.String toString()>','<com.android.server.location.GnssLocationProvider$8: void <init>(com.android.server.location.GnssLocationProvider,android.os.Handler)>','<com.android.server.AnyMotionDetector$Vector3: float norm()>','<com.android.server.wm.Session: boolean getInTouchMode()>','<com.android.server.wm.DisplayContent: void onAppTransitionDone()>','<com.android.server.wm.WindowState: boolean wouldBeVisibleIfPolicyIgnored()>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord findActivityInHistoryLocked(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService: void access$5700(com.android.server.pm.PackageManagerService,boolean,boolean,boolean)>','<com.android.server.am.ActivityManagerShellCommand: int runClearDebugApp(java.io.PrintWriter)>','<com.android.server.wm.TaskStack: boolean setBounds(android.graphics.Rect,android.util.SparseArray,android.util.SparseArray,android.util.SparseArray)>','<com.android.server.am.ActivityManagerService: boolean dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)>','<com.android.server.pm.dex.PackageDexUsage: void readInternal(java.lang.Void)>','<com.android.server.wm.WindowState: boolean isIdentityMatrix(float,float,float,float)>','<com.android.server.wm.WindowManagerService$SettingsObserver: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>','<com.android.server.AttributeCache: void removePackage(java.lang.String)>','<com.android.server.connectivity.NetworkDiagnostics: android.net.Network access$300(com.android.server.connectivity.NetworkDiagnostics)>','<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,int,java.lang.String)>','<com.android.server.am.ActivityRecord: int getRequestedOrientation()>','<com.android.server.wm.DockedStackDividerController: void setWindow(com.android.server.wm.WindowState)>','<com.android.server.usb.descriptors.UsbMSMidiHeader: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.pm.UserDataPreparer: boolean isFileEncryptedEmulatedOnly()>','<com.android.server.am.ActivityManagerShellCommand: int runPackageImportance(java.io.PrintWriter)>','<com.android.server.audio.AudioService: java.lang.Object access$7600(com.android.server.audio.AudioService)>','<com.android.server.connectivity.Vpn: android.net.Network[] getUnderlyingNetworks()>','<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>','<com.android.server.location.GnssLocationProvider$15: int getGnssYearOfHardware()>','<com.android.server.statusbar.StatusBarManagerService: void handleSystemKey(int)>','<com.android.server.wm.StackWindowController: void positionChildAtTop(com.android.server.wm.TaskWindowContainerController,boolean)>','<com.android.server.pm.UserManagerService$1: void <init>(com.android.server.pm.UserManagerService)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: void <init>(com.android.server.pm.KeySetManagerService,long,int,java.security.PublicKey,com.android.server.pm.KeySetManagerService$1)>','<com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>','<com.android.server.wm.WindowStateAnimator: void applyEnterAnimationLocked()>','<com.android.server.pm.Settings: void dumpGidsLPr(java.io.PrintWriter,java.lang.String,int[])>','<com.android.server.ConnectivityService: void access$4400(com.android.server.ConnectivityService,int)>','<com.android.server.net.NetworkPolicyManagerService$10: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.wm.TaskSnapshotPersister: boolean access$402(com.android.server.wm.TaskSnapshotPersister,boolean)>','<com.android.server.audio.MediaFocusControl: void unmutePlayersForCall()>','<com.android.server.DeviceIdleController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityManagerService: boolean access$1700(com.android.server.am.ActivityManagerService,android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean,int,boolean)>','<com.android.server.am.BatteryStatsService: void updateExternalStatsSync(java.lang.String,int)>','<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>','<com.android.server.pm.PackageSetting: java.lang.String toString()>','<com.android.server.AlarmManagerService$Batch: boolean hasPackage(java.lang.String)>','<com.android.server.am.ActivityManagerService$1: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.AppTransition: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>','<com.android.server.am.AppErrors: void startAppProblemLocked(com.android.server.am.ProcessRecord)>','<com.android.server.wm.AppTransition: java.lang.String toString()>','<com.android.server.SystemServiceManager: void startUser(int)>','<com.android.server.audio.AudioService: void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.wm.CircularDisplayMask: void <init>(android.view.Display,android.view.SurfaceSession,int,int,int)>','<com.android.server.ConnectivityService: com.android.server.connectivity.NetworkAgentInfo access$4100(com.android.server.ConnectivityService,android.net.Network)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$MoveCallbacks access$6200(com.android.server.pm.PackageManagerService)>','<android.net.util.Stopwatch: long lap()>','<com.android.server.pm.UserManagerService: void onBeforeUnlockUser(int)>','<com.android.server.wm.WindowState: void hideWallpaperWindow(boolean,java.lang.String)>','<com.android.server.ThreadPriorityBooster$1: com.android.server.ThreadPriorityBooster$PriorityState initialValue()>','<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityStackSupervisor: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>','<com.android.server.EventLogTags: void writeConfigInstallFailed(java.lang.String)>','<com.android.server.pm.PackageManagerService: int checkUidSignatures(int,int)>','<com.android.server.wm.Session: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: java.lang.String toString()>','<com.android.server.LocationManagerService$7: void onChange(boolean)>','<com.android.server.wm.WindowManagerService: boolean isSecureLocked(com.android.server.wm.WindowState)>','<com.android.server.connectivity.PermissionMonitor: void <init>(android.content.Context,android.os.INetworkManagementService)>','<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController,boolean)>','<com.android.server.power.PowerManagerService$BatteryReceiver: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>','<com.android.server.firewall.StringFilter$3: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.wm.WindowState: boolean showLw(boolean,boolean)>','<com.android.server.wm.BoundsAnimationController: boolean access$000(com.android.server.wm.BoundsAnimationController)>','<com.android.server.DeviceIdleController: void startMonitoringMotionLocked()>','<com.android.server.wm.AlertWindowNotification: void <clinit>()>','<com.android.server.am.ServiceRecord: int makeNextStartId()>','<com.android.server.wm.WindowSurfaceController: boolean showRobustlyInTransaction()>','<com.android.server.am.ActivityStackSupervisor$WaitInfo: android.content.ComponentName getComponent()>','<com.android.server.wm.RootWindowContainer: void <clinit>()>','<com.android.server.am.InstrumentationReporter$Report: void <init>(com.android.server.am.InstrumentationReporter,int,android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>','<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: void <init>(com.android.server.wm.PinnedStackController,com.android.server.wm.PinnedStackController$1)>','<com.android.server.wm.WindowState: void setRequestedSize(int,int)>','<com.android.server.input.InputManagerService: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>','<com.android.server.am.ActivityManagerService$26: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int doPreInstall(int)>','<com.android.server.am.ActivityManagerShellCommand: void dumpHelp(java.io.PrintWriter,boolean)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: void putDnses(java.util.Set)>','<com.android.server.connectivity.NetworkAgentInfo$1: void <clinit>()>','<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.AlarmManagerService: long maxTriggerTime(long,long,long)>','<com.android.server.AppOpsService: void setUidMode(int,int,int)>','<com.android.server.connectivity.Vpn: void setEnableTeardown(boolean)>','<com.android.server.connectivity.DataConnectionStats: void <init>(android.content.Context)>','<com.android.server.pm.SettingBase: void setFlags(int)>','<com.android.server.wm.WindowState: boolean shouldBeReplacedWithChildren()>','<com.android.server.wm.PinnedStackController: com.android.server.wm.WindowManagerService access$300(com.android.server.wm.PinnedStackController)>','<com.android.server.power.PowerManagerService$WakeLock: void writeToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.wm.WindowState: boolean getDrawnStateEvaluated()>','<com.android.server.pm.EphemeralResolverConnection$1: void <init>(com.android.server.pm.EphemeralResolverConnection,android.os.Handler,com.android.server.pm.EphemeralResolverConnection$PhaseTwoCallback,long)>','<com.android.server.NativeDaemonEvent: java.lang.String toString()>','<com.android.server.am.ActivityStackSupervisor: int nextTaskIdForUser(int,int)>','<com.android.server.wm.WindowState: int getTouchableRegion(android.graphics.Region,int)>','<com.android.server.pm.Settings: void <init>(java.lang.Object)>','<com.android.server.statusbar.StatusBarManagerService$1: void showPictureInPictureMenu()>','<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.os.IInstalld$Stub$Proxy: void fixupAppData(java.lang.String,int)>','<com.android.server.location.GnssLocationProvider: void access$1000(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.BatteryStatsService: void notePhoneOff()>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void drawNavigationBarBackground(android.graphics.Canvas)>','<com.android.server.location.GnssLocationProvider$3: void onAvailable(android.net.Network)>','<com.android.server.LocationManagerService: boolean stopGnssBatch()>','<com.android.server.connectivity.NetworkMonitor: int access$2008(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.am.ActivityManagerShellCommand: void <init>(com.android.server.am.ActivityManagerService,boolean)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getPrimaryUser()>','<com.android.server.audio.AudioService$SetModeDeathHandler: int getPid()>','<com.android.server.audio.AudioService: int[] access$10502(com.android.server.audio.AudioService,int[])>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: android.os.IHwBinder asBinder()>','<com.android.server.connectivity.LingerMonitor: void noteDisconnect(com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>','<com.android.server.pm.PackageManagerService: java.util.Set access$2500()>','<com.android.server.firewall.NotFilter: void <clinit>()>','<com.android.server.am.ActivityRecord: void relaunchActivityLocked(boolean,boolean)>','<com.android.server.wm.WindowStateAnimator: void setAnimation(android.view.animation.Animation,long,int)>','<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>','<com.android.server.am.ActivityRecord: void reportFullyDrawnLocked()>','<com.android.server.location.GnssLocationProvider: void access$5800(com.android.server.location.GnssLocationProvider,android.location.Location)>','<com.android.server.usb.UsbPortManager: void resetSimulation(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.pm.UserRestrictionsUtils: java.util.Set getDefaultEnabledForManagedProfiles()>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map getDexUseInfoMap()>','<com.android.server.pm.IntentFilterVerificationState: int getState()>','<com.android.server.am.ActivityManagerService: int getBlockStateForUid(com.android.server.am.UidRecord)>','<com.android.server.pm.PackageManagerService$IntentVerifierProxy: boolean addOneIntentFilterVerification(int,int,int,android.content.IntentFilter,java.lang.String)>','<com.android.server.wm.WindowSurfaceController: float getY()>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: java.security.PublicKey getKey()>','<com.android.server.wm.Task: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.input.InputManagerService: void enableInputDevice(int)>','<com.android.server.pm.Settings: boolean setDefaultDialerPackageNameLPw(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromUntrustedFile(java.io.File)>','<com.android.server.wm.WindowAnimator: void requestRemovalOfReplacedWindows(com.android.server.wm.WindowState)>','<com.android.server.wm.WindowManagerService: void setSupportsPictureInPicture(boolean)>','<com.android.server.pm.UserManagerService: void access$1000(com.android.server.pm.UserManagerService,com.android.server.pm.UserManagerService$UserData)>','<com.android.server.pm.Settings: boolean removeIntentFilterVerificationLPw(java.lang.String,int[])>','<com.android.server.wm.AppWindowContainerController: void reportWindowsVisible()>','<com.android.server.location.MockProvider: void <init>(java.lang.String,android.location.ILocationManager,com.android.internal.location.ProviderProperties)>','<android.net.ip.RouterAdvertisementDaemon$UnicastResponder: void run()>','<com.android.server.EventLogTags: void writeFullBackupPackage(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord getLockedTaskLocked()>','<android.net.util.Stopwatch: boolean isRunning()>','<com.android.server.wm.DisplayContent$TaskStackContainers: int getOrientation()>','<com.android.server.connectivity.PacManager: boolean setCurrentProxyScriptUrl(android.net.ProxyInfo)>','<com.android.server.location.FlpHardwareProvider: android.location.IFusedGeofenceHardware getGeofenceHardware()>','<com.android.server.pm.PackageInstallerService: void access$900(com.android.server.pm.PackageInstallerService,com.android.server.pm.PackageInstallerSession)>','<android.hardware.usb.V1_1.PortStatus_1_1: void readFromParcel(android.os.HwParcel)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: boolean isAnimatingTo(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService$InstallArgs: boolean isExternalAsec()>','<com.android.server.ConnectivityService$UnneededFor: com.android.server.ConnectivityService$UnneededFor[] values()>','<com.android.server.wm.WindowContainer: void dumpChildrenNames(java.lang.StringBuilder,java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>','<com.android.server.location.LocationProviderProxy: java.lang.String getConnectedPackageName()>','<com.android.server.power.PowerManagerService$BinderService: void powerHint(int,int)>','<com.android.server.statusbar.StatusBarManagerService: void disable(int,android.os.IBinder,java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void removeIsolatedUid(int)>','<com.android.server.pm.Settings: boolean disableSystemPackageLPw(java.lang.String,boolean)>','<com.android.server.pm.EphemeralResolverConnection: java.util.List getInstantAppResolveInfoList(int[],java.lang.String)>','<com.android.server.usb.UsbProfileGroupSettingsManager$UserPackage: void <init>(java.lang.String,android.os.UserHandle,com.android.server.usb.UsbProfileGroupSettingsManager$1)>','<com.android.server.location.LocationProviderProxy: void disable()>','<com.android.server.pm.dex.PackageDexUsage: void writeInternal(java.lang.Void)>','<com.android.server.usb.descriptors.UsbACFeatureUnit: int getNumChannels()>','<com.android.server.am.ActivityManagerShellCommand: int runAttachAgent(java.io.PrintWriter)>','<com.android.server.location.GnssLocationProvider$9: boolean isGpsEnabled()>','<com.android.server.InputMethodManagerService: void unbindCurrentMethodLocked(boolean)>','<com.android.server.audio.AudioService: void adjustStreamVolume(int,int,int,java.lang.String)>','<com.android.server.InputMethodManagerService$2: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.am.RecentTasks: void removeTasksForUserLocked(int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void grantEphemeralAccess(int,android.content.Intent,int,int)>','<com.android.server.pm.UserManagerService$LocalService: android.content.pm.UserInfo createUserEvenWhenDisallowed(java.lang.String,int)>','<com.android.server.wm.WindowState: boolean hasContentToDisplay()>','<com.android.server.am.UserController: java.lang.Object access$200(com.android.server.am.UserController)>','<com.android.server.am.ActivityStackSupervisor: com.android.internal.statusbar.IStatusBarService access$600(com.android.server.am.ActivityStackSupervisor)>','<android.hardware.usb.V1_0.PortRole: boolean equals(java.lang.Object)>','<com.android.server.wm.WindowManagerService: boolean detectSafeMode()>','<com.android.server.pm.CompilerStats: void writeInternal(java.lang.Object)>','<com.android.server.usb.UsbSettingsManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputUncheckedLocked(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int)>','<com.android.server.input.InputManagerService$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityManagerConstants: void <init>(com.android.server.am.ActivityManagerService,android.os.Handler)>','<com.android.server.wm.DragState$InputInterceptor: void tearDown()>','<com.android.server.pm.Installer: boolean isQuotaSupported(java.lang.String)>','<com.android.server.power.PowerManagerService: void startUidChangesInternal()>','<com.android.server.pm.UserManagerService: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle,boolean)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean removeUninstalledKeyboardLayouts(java.util.Set)>','<com.android.server.wm.TaskWindowContainerController: java.lang.String toString()>','<com.android.server.InputMethodManagerService: android.view.View access$900(com.android.server.InputMethodManagerService)>','<com.android.server.wm.InputMonitor: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.WindowSurfaceController: void setMatrixInTransaction(float,float,float,float,boolean)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: java.lang.String toString()>','<com.android.server.vr.VrManagerInternal: void <init>()>','<android.hardware.usb.V1_0.IUsb$Stub: void registerAsService(java.lang.String)>','<com.android.server.power.PowerManagerService$1: void <init>(com.android.server.power.PowerManagerService,boolean)>','<com.android.server.power.PowerManagerShellCommand: void <init>(android.os.IPowerManager)>','<com.android.server.net.NetworkStatsObservers$RequestInfo: void access$500(com.android.server.net.NetworkStatsObservers$RequestInfo,com.android.server.net.NetworkStatsObservers$StatsContext)>','<com.android.server.connectivity.tethering.SimChangeListener: int generationNumber()>','<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>','<com.android.server.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>','<com.android.server.net.NetworkStatsCollection$Key: boolean equals(java.lang.Object)>','<com.android.server.pm.UserManagerService$LocalService: void removeUserRestrictionsListener(android.os.UserManagerInternal$UserRestrictionsListener)>','<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void cancelInitializingActivities()>','<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>','<com.android.server.power.PowerManagerService: void uidIdleInternal(int)>','<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>','<com.android.server.location.LocationProviderProxy: java.lang.Object access$100(com.android.server.location.LocationProviderProxy)>','<com.android.server.AppOpsService: void removeUser(int)>','<com.android.server.pm.PackageManagerService$PackageParserCallback$1: void <init>(com.android.server.pm.PackageManagerService$PackageParserCallback)>','<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int)>','<com.android.server.am.UserController$Injector: com.android.server.wm.WindowManagerService getWindowManager()>','<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>','<com.android.server.wm.AppWindowToken: void onAppFreezeTimeout()>','<com.android.server.wm.DisplayContent: boolean isPrivate()>','<com.android.server.am.ActivityStackSupervisor: void setLockTaskModeLocked(com.android.server.am.TaskRecord,int,java.lang.String,boolean)>','<com.android.server.am.TaskRecord: void getWindowContainerBounds(android.graphics.Rect)>','<com.android.server.pm.CrossProfileIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.wm.WindowManagerService: boolean isKeyguardLocked()>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long,int,int)>','<com.android.server.am.TaskPersister$WriteQueueItem: void <init>(com.android.server.am.TaskPersister$1)>','<com.android.server.am.ActivityManagerService: void finishHeavyWeightApp()>','<com.android.server.wm.AppWindowToken: void onRemovedFromDisplay()>','<com.android.server.am.BatteryStatsService$BatteryStatsHandler: void <init>(com.android.server.am.BatteryStatsService,android.os.Looper)>','<com.android.server.am.ActivityManagerService$PermissionController: boolean checkPermission(java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService: void setProcessImportant(android.os.IBinder,int,boolean,java.lang.String)>','<com.android.server.connectivity.NetworkDiagnostics: void <clinit>()>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getDeviceRelease()>','<com.android.server.audio.AudioService: void access$3800(com.android.server.audio.AudioService,android.os.Handler,int,int,int,java.lang.Object,int)>','<com.android.server.connectivity.NetworkAgentInfo: boolean isLingering()>','<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>','<com.android.server.pm.dex.DexManager: int access$400()>','<com.android.server.wm.WindowState: void updateResizingWindowIfNeeded()>','<com.android.server.am.EventLogTags: void writeAmProcessCrashedTooMuch(int,java.lang.String,int)>','<com.android.server.wm.AppWindowAnimator$DummyAnimation: boolean getTransformation(long,android.view.animation.Transformation)>','<com.android.server.wm.WindowState: boolean canRestoreSurface()>','<com.android.server.usb.UsbProfileGroupSettingsManager: void access$400(com.android.server.usb.UsbProfileGroupSettingsManager,com.android.server.usb.UsbProfileGroupSettingsManager$UserPackage)>','<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>','<com.android.server.am.ActiveServices$ServiceRestarter: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ActiveServices$1)>','<com.android.server.location.LocationProviderProxy: void enable()>','<com.android.server.connectivity.tethering.OffloadController: void stop()>','<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(java.lang.String)>','<com.android.server.am.ActivityManagerService$19: void run()>','<com.android.server.am.BatteryStatsService: void noteMobileRadioPowerState(int,long,int)>','<com.android.server.firewall.StringFilter$10: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.pm.PackageInstallerSession: void access$400(com.android.server.pm.PackageInstallerSession)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.NetworkManagementService: void removeNetwork(int)>','<com.android.server.am.LockTaskNotify: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: void addPackageDependency(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void <init>(com.android.server.connectivity.Tethering,java.lang.String,android.os.Looper)>','<com.android.server.pm.PackageManagerService: int getFlagsForUid(int)>','<com.android.server.pm.ProtectedPackages: void setDeviceAndProfileOwnerPackages(int,java.lang.String,android.util.SparseArray)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void registerAsService(java.lang.String)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager$DuckedApp: void addDuck(android.media.AudioPlaybackConfiguration,boolean)>','<com.android.server.input.InputManagerService$12: void onChange(boolean)>','<com.android.server.am.BatteryStatsService: void noteBleScanStopped(android.os.WorkSource,boolean)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityContainer createVirtualActivityContainer(com.android.server.am.ActivityRecord,android.app.IActivityContainerCallback)>','<com.android.server.wm.AppWindowToken: void setWillReplaceWindows(boolean)>','<com.android.server.am.ActivityStack: void moveToFrontAndResumeStateIfNeeded(com.android.server.am.ActivityRecord,boolean,boolean,boolean,java.lang.String)>','<com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String,java.io.FileDescriptor[])>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object)>','<com.android.server.pm.PackageManagerService: void resetApplicationPreferences(int)>','<com.android.server.am.TaskRecord: void setTaskToAffiliateWith(com.android.server.am.TaskRecord)>','<com.android.server.pm.Settings: boolean isEnabledAndMatchLPr(android.content.pm.ComponentInfo,int,int)>','<com.android.server.am.ContentProviderConnection: java.lang.String toString()>','<com.android.server.EventLogTags: void writeWatchdogHardReset(java.lang.String,int,int,int)>','<com.android.server.am.ActivityManagerShellCommand: int runSupportsSplitScreenMultiwindow(java.io.PrintWriter)>','<com.android.server.wm.WindowAnimator: android.view.Choreographer getChoreographer()>','<com.android.server.net.NetworkStatsService: void unregisterUsageRequest(android.net.DataUsageRequest)>','<com.android.server.net.NetworkIdentitySet: void <init>(java.io.DataInputStream)>','<com.android.server.am.UserController$Injector: void showUserSwitchingDialog(android.content.pm.UserInfo,android.content.pm.UserInfo)>','<com.android.server.wm.AppWindowToken: void setClientHidden(boolean)>','<com.android.server.input.InputManagerService$LocalService: void toggleCapsLock(int)>','<com.android.server.wm.TaskStack: java.lang.String toShortString()>','<com.android.server.am.ActivityStackSupervisor: void resizeDockedStackLocked(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void updateRuleForDeviceIdleUL(int)>','<com.android.server.am.TaskRecord: android.graphics.Rect updateOverrideConfigurationFromLaunchBounds()>','<com.android.server.LocationManagerService: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerShellCommand: int runTaskSizeTaskTest(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>','<com.android.server.am.ActivityStarter: void sendPowerHintForLaunchEndIfNeeded()>','<com.android.server.wm.WindowState: boolean hasSavedSurface()>','<com.android.server.am.ActivityManagerService$8: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.IntentFilterVerificationState: java.lang.String getPackageName()>','<com.android.server.wm.DisplayContent$TaskStackContainers: void addStackToDisplay(com.android.server.wm.TaskStack,boolean)>','<com.android.server.am.ActivityManagerService: void runInBackgroundDisabled(int)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getInterval()>','<com.android.server.audio.AudioService: void access$10100(com.android.server.audio.AudioService,int,int,int,java.lang.String,java.lang.String,int)>','<com.android.server.wm.DisplayContent: boolean isDimming()>','<com.android.server.pm.UserManagerService$LocalService: void removeAllUsers()>','<com.android.server.audio.AudioService: int getStreamMinVolume(int)>','<com.android.server.pm.KeySetHandle: int decrRefCountLPw()>','<com.android.server.EventLogTags: void writeNotificationCanceled(java.lang.String,int,int,int,int)>','<com.android.server.pm.PackageManagerService: int access$1100(com.android.server.pm.PackageManagerService,android.os.UserHandle)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSmsAppLPr(java.lang.String,int)>','<android.hardware.configstore.V1_0.OptionalInt64: java.lang.String toString()>','<com.android.server.am.ActivityManagerService$FontScaleSettingObserver: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityStackSupervisor: void showLockTaskToast()>','<com.android.server.pm.PackageManagerService$7: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,java.lang.String)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService getInstance()>','<com.android.server.pm.Settings: android.util.SparseArray access$300(com.android.server.pm.Settings)>','<com.android.server.wm.WindowState: boolean canAffectSystemUiFlags()>','<com.android.server.AnyMotionDetector: com.android.server.AnyMotionDetector$DeviceIdleCallback access$700(com.android.server.AnyMotionDetector)>','<com.android.server.am.ActivityManagerService$27: void <init>(com.android.server.am.ActivityManagerService,java.io.File,com.android.server.am.ProcessRecord)>','<com.android.server.am.TaskPersister$1: int compare(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>','<com.android.server.wm.WindowSurfacePlacer: void requestTraversal()>','<com.android.server.am.ActivityStackSupervisor: void updatePreviousProcessLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.UriPermissionOwner: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>','<com.android.server.pm.CrossProfileIntentResolver: void <init>()>','<com.android.server.statusbar.StatusBarManagerService$3: void <init>(com.android.server.statusbar.StatusBarManagerService,boolean)>','<com.android.server.pm.EphemeralResolverConnection$MyServiceConnection: void <init>(com.android.server.pm.EphemeralResolverConnection,com.android.server.pm.EphemeralResolverConnection$1)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.AlarmManagerService: void rescheduleKernelAlarmsLocked()>','<com.android.server.ConnectivityService: void access$3700(com.android.server.ConnectivityService,android.net.Network,boolean,boolean)>','<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>','<com.android.server.am.ActivityRecord: int getTaskForActivityLocked(android.os.IBinder,boolean)>','<com.android.server.wm.DisplayContent: int getLayerForAnimationBackground(com.android.server.wm.WindowStateAnimator)>','<com.android.server.audio.FocusRequester: int getClientUid()>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: void <init>(int,byte,byte)>','<com.android.server.am.ActivityRecord: int getDisplayId()>','<android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.power.PowerManagerService: boolean access$1500(com.android.server.power.PowerManagerService)>','<com.android.server.wm.WindowManagerService: float getAnimationScale(int)>','<com.android.server.am.ActivityManagerService: int startActivity(android.content.Intent,com.android.server.am.ActivityStackSupervisor$ActivityContainer)>','<com.android.server.wm.TaskSnapshotController: void onTransitionStarting()>','<com.android.server.am.TaskRecord: boolean isAssistantTask()>','<android.net.util.MultinetworkPolicyTracker$1: void <init>(android.net.util.MultinetworkPolicyTracker)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: java.lang.String toString()>','<com.android.server.am.RecentTasks: void saveImage(android.graphics.Bitmap,java.lang.String)>','<com.android.server.pm.dex.PackageDexUsage: void maybeWriteAsync()>','<com.android.server.AppOpsService$3: void <init>(com.android.server.AppOpsService)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>','<com.android.server.Watchdog: void <clinit>()>','<com.android.server.audio.AudioService$AudioServiceInternal: void <init>(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: boolean performDexOptMode(java.lang.String,boolean,java.lang.String,boolean,boolean)>','<com.android.server.am.ActivityManagerService: void removeReceiverLocked(com.android.server.am.ReceiverList)>','<com.android.server.ConnectivityService: void access$1700(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.audio.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>','<com.android.server.am.HealthStatsBatteryStatsWriter: void writeServ(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Pkg$Serv)>','<com.android.server.AppOpsService: int permissionToOpCode(java.lang.String)>','<com.android.server.wm.RemoteEventTrace: void <clinit>()>','<com.android.server.am.EventLogTags: void writeAmSwitchUser(int)>','<com.android.server.wm.RootWindowContainer: void removeReplacedWindows()>','<com.android.server.location.GnssMeasurementsProvider$StatusChangedOperation: void <init>(int)>','<com.android.server.wm.ScreenRotationAnimation: boolean dismiss(android.view.SurfaceSession,long,float,int,int,int,int)>','<com.android.server.am.ActivityManagerService: int startActivityFromRecents(int,android.os.Bundle)>','<com.android.server.AlarmManagerService$DeliveryTracker: void deliverLocked(com.android.server.AlarmManagerService$Alarm,long,boolean)>','<com.android.server.wm.WindowContainer: void <init>()>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: int compareTo(java.lang.Object)>','<com.android.server.am.ActivityStack: void minimalResumeActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.wm.TaskWindowContainerController$H: void handleMessage(android.os.Message)>','<com.android.server.audio.AudioService: android.media.SoundPool access$2202(com.android.server.audio.AudioService,android.media.SoundPool)>','<com.android.server.pm.UserDataPreparer: void destroyUserData(int,int)>','<com.android.server.pm.PackageSettingBase: void setIntentFilterVerificationInfo(android.content.pm.IntentFilterVerificationInfo)>','<android.net.util.SharedLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)>','<com.android.server.am.ActivityStack: int getStackId()>','<com.android.server.am.ActivityManagerService: int startActivityInPackage(int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle,int,android.app.IActivityContainer,com.android.server.am.TaskRecord,java.lang.String)>','<com.android.server.wm.RemoteSurfaceTrace: void setFinalCrop(android.graphics.Rect)>','<com.android.server.wm.WindowState: void onExitAnimationDone()>','<com.android.server.am.ActivityManagerService: void updateSleepIfNeededLocked()>','<com.android.server.pm.KeySetManagerService: void readKeySetsLPw(org.xmlpull.v1.XmlPullParser,android.util.ArrayMap)>','<com.android.server.DeviceIdleController: void writeConfigFileLocked(org.xmlpull.v1.XmlSerializer)>','<com.android.server.statusbar.StatusBarManagerService$DisableRecord: void binderDied()>','<com.android.server.am.ActivityManagerService$25: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.UriPermission$PersistedTimeComparator: int compare(com.android.server.am.UriPermission,com.android.server.am.UriPermission)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte getChanNameID()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>','<com.android.server.pm.UserManagerService: void setUserEnabled(int)>','<com.android.server.wm.TaskSnapshotController: android.app.ActivityManager$TaskSnapshot getSnapshot(int,int,boolean,boolean)>','<com.android.server.audio.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.AlarmManagerService$WakeupEvent: void <init>(long,int,java.lang.String)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>','<com.android.server.am.ActivityManagerService: void setUidTempWhitelistStateLocked(int,boolean)>','<com.android.server.connectivity.PacManager: java.lang.Object access$200(com.android.server.connectivity.PacManager)>','<com.android.server.input.InputManagerService: void systemRunning()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$902(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,int)>','<com.android.server.wm.TaskStack: boolean hasMultipleTaskWithHomeTaskNotTop()>','<com.android.server.am.ActivityManagerService$DbBinder: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.am.BroadcastQueue: void performReceiveLocked(com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.connectivity.Vpn: void startLegacyVpnPrivileged(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>','<com.android.server.am.ActivityStack: void addStartingWindowsForVisibleActivities(boolean)>','<com.android.server.UiThread: com.android.server.UiThread get()>','<com.android.server.InputMethodManagerService$StartInputHistory$Entry: void <init>(com.android.server.InputMethodManagerService$StartInputInfo)>','<com.android.server.am.ActivityManagerService: void performIdleMaintenance()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: void <init>(com.android.server.am.ActivityMetricsLogger,com.android.server.am.ActivityMetricsLogger$1)>','<com.android.server.audio.PlaybackActivityMonitor: void unduckPlayers(com.android.server.audio.FocusRequester)>','<com.android.server.wm.AccessibilityController: void onAppWindowTransitionLocked(com.android.server.wm.WindowState,int)>','<com.android.server.location.MockProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$BaseServingState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: java.lang.String toString()>','<com.android.server.DeviceIdleController: int[] getPowerSaveWhitelistUserAppIds()>','<com.android.server.am.UriPermission: boolean releasePersistableModes(int)>','<com.android.server.NetworkManagementService$1: void run()>','<com.android.server.DeviceIdleController$5: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.RootWindowContainer: boolean canShowStrictModeViolation(int)>','<com.android.server.LocationManagerService$Receiver: boolean callLocationChangedLocked(android.location.Location)>','<com.android.server.pm.Installer: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>','<com.android.server.usb.descriptors.UsbACSelectorUnit: void <init>(int,byte,byte,byte)>','<com.android.server.am.ActivityRecord: void setLastReportedConfiguration(android.util.MergedConfiguration)>','<com.android.server.connectivity.tethering.SimChangeListener: java.util.concurrent.atomic.AtomicInteger access$000(com.android.server.connectivity.tethering.SimChangeListener)>','<com.android.server.NetworkManagementService: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>','<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>','<com.android.server.connectivity.LingerMonitor: void <init>(android.content.Context,com.android.server.connectivity.NetworkNotificationManager,int,long)>','<com.android.server.am.ActivityManagerService: void stopAppSwitches()>','<com.android.server.wm.DimLayer: void setBoundsForFullscreen()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.EventLogTags: void writeWmHomeStackMoved(int)>','<com.android.server.pm.PackageManagerService$17: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.am.BatteryStatsService: void noteResetAudio()>','<com.android.server.wm.AlertWindowNotification: void <init>(com.android.server.wm.WindowManagerService,java.lang.String)>','<com.android.server.wm.WindowState: boolean isVoiceInteraction()>','<com.android.server.am.AppTimeTracker: void start(java.lang.String)>','<com.android.server.connectivity.NetworkMonitor: int access$1400(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.connectivity.Tethering: boolean access$2800(com.android.server.connectivity.Tethering)>','<com.android.server.wm.WindowStateAnimator: boolean tryChangeFormatInPlaceLocked()>','<com.android.server.firewall.NotFilter: void <init>(com.android.server.firewall.Filter,com.android.server.firewall.NotFilter$1)>','<com.android.server.audio.AudioService$2: void <init>(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: long access$300(com.android.server.pm.PackageManagerService)>','<com.android.server.wm.DockedStackDividerController: int getSmallestWidthDpForBounds(android.graphics.Rect)>','<com.android.server.usb.UsbProfileGroupSettingsManager$UserPackage: int hashCode()>','<com.android.server.am.BatteryStatsService: void noteWifiScanStartedFromSource(android.os.WorkSource)>','<com.android.server.pm.UserManagerService$2: void run()>','<com.android.server.wm.WindowState: boolean isGoneForLayoutLw()>','<com.android.server.pm.dex.DexManager: java.util.Set getAllPackagesWithSecondaryDexFiles()>','<com.android.server.IntentResolver: java.util.Iterator filterIterator()>','<com.android.server.wm.InputMonitor: void access$1100(com.android.server.wm.InputMonitor)>','<com.android.server.audio.AudioService$AudioPolicyProxy: void binderDied()>','<com.android.server.pm.InstantAppRegistry: java.lang.String getInstantAppAndroidIdLPw(java.lang.String,int)>','<com.android.server.audio.AudioService: java.util.ArrayList access$1600(com.android.server.audio.AudioService)>','<com.android.server.wm.DisplayContent: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.am.ActivityManagerService: void notifyPinnedStackAnimationStarted()>','<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>','<com.android.server.am.ActivityStackSupervisor: void removeUserLocked(int)>','<com.android.server.usb.UsbPortManager$2: void handleMessage(android.os.Message)>','<com.android.server.location.GnssLocationProvider$12: boolean pauseHardwareGeofence(int)>','<com.android.server.LocationManagerService: void removeGnssBatchingCallback()>','<com.android.server.input.InputManagerService$InputFilterHost: void sendInputEvent(android.view.InputEvent,int)>','<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackageDisappeared(java.lang.String,int)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getAddress()>','<com.android.server.am.BroadcastStats: void <clinit>()>','<com.android.server.connectivity.NetworkMonitor: void <clinit>()>','<com.android.server.pm.ParallelPackageParser: void <init>(java.lang.String[],boolean,android.util.DisplayMetrics,java.io.File,android.content.pm.PackageParser$Callback)>','<com.android.server.am.ActivityManagerService: void dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)>','<com.android.server.pm.PackageSignatures: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread,boolean)>','<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>','<com.android.server.am.BaseErrorDialog: boolean access$002(com.android.server.am.BaseErrorDialog,boolean)>','<com.android.server.wm.DisplayContent: void assignWindowLayers(boolean)>','<com.android.server.wm.TaskStack: boolean hasTaskForUser(int)>','<com.android.server.am.BatteryStatsService: void noteProcessAnr(java.lang.String,int)>','<com.android.server.pm.AbstractStatsBase: void writeNow(java.lang.Object)>','<com.android.server.connectivity.DataConnectionStats: int access$302(com.android.server.connectivity.DataConnectionStats,int)>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.IntentSender getIntentSender()>','<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getUnitName()>','<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.RecentTasks access$1000(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.wm.TaskPositioner: boolean access$000(com.android.server.wm.TaskPositioner)>','<com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>','<com.android.server.AlarmManagerService$UninstallReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.DisplayContent: void initializeDisplayBaseInfo()>','<com.android.server.usb.descriptors.UsbACEndpoint: void <init>(int,byte,byte)>','<com.android.server.net.NetworkPolicyManagerService$2: int getServiceType()>','<com.android.server.AlarmManagerService$1: int compare(com.android.server.AlarmManagerService$Alarm,com.android.server.AlarmManagerService$Alarm)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.InputMethodManagerService: void restoreEnabledInputMethods(android.content.Context,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowState: void expandForSurfaceInsets(android.graphics.Rect)>','<com.android.server.wm.DisplayContent: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: void restoreIntentFilterVerification(byte[],int)>','<android.net.util.MultinetworkPolicyTracker: java.lang.String access$000()>','<com.android.server.wm.WindowSurfaceController: void getContainerRect(android.graphics.Rect)>','<com.android.server.wm.DisplayContent: void scheduleToastWindowsTimeoutIfNeededLocked(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>','<com.android.server.power.Notifier$8: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>','<com.android.server.firewall.PortFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner$1: void <init>(com.android.server.connectivity.Vpn$LegacyVpnRunner)>','<com.android.server.firewall.StringFilter$6: void <init>(java.lang.String)>','<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>','<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>','<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>','<com.android.server.ConnectivityService: int checkMobileProvisioning(int)>','<com.android.server.am.ActivityManagerService: int appRestrictedInBackgroundLocked(int,java.lang.String,int)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int,java.lang.String[])>','<com.android.server.pm.SettingBase: com.android.server.pm.PermissionsState getPermissionsState()>','<com.android.server.am.ProcessStatsService: boolean shouldWriteNowLocked(long)>','<com.android.server.TelephonyRegistry: void notifyDataConnectionFailedForSubscriber(int,java.lang.String,java.lang.String)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void access$000(com.android.server.connectivity.tethering.UpstreamNetworkMonitor,int,android.net.Network)>','<com.android.server.connectivity.KeepaliveTracker: void handleStopKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,int)>','<com.android.server.power.PowerManagerService: void lowLevelShutdown(java.lang.String)>','<com.android.server.wm.AccessibilityController: void drawMagnifiedRegionBorderIfNeededLocked()>','<com.android.server.audio.AudioService$VolumeStreamState: void setAllIndexesToMax()>','<com.android.server.pm.Settings: int removePackageLPw(java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService: void onPanelRevealed(boolean,int)>','<com.android.server.LocationManagerService$1: void <init>(com.android.server.LocationManagerService)>','<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotWallpaper()>','<com.android.server.wm.WindowState$DeathRecipient: void binderDied()>','<com.android.server.pm.PackageManagerService: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: void handleUidGone(int)>','<com.android.server.usb.UsbPortManager: void <clinit>()>','<com.android.server.pm.PackageManagerService$24: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,int,int,android.os.UserHandle)>','<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$ParcelableCrashInfo)>','<com.android.server.am.ActivityManagerService: boolean isUserStopped(int)>','<android.os.IInstalld$Stub$Proxy: void moveAb(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void access$400(com.android.server.pm.Settings$RuntimePermissionPersistence,int)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void notifySyspropsChanged()>','<com.android.server.EventLogTags: void writeNotificationCancel(int,int,java.lang.String,int,java.lang.String,int,int,int,int,java.lang.String)>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType: void <clinit>()>','<com.android.server.wm.UnknownAppVisibilityController: void notifyRelayouted(com.android.server.wm.AppWindowToken)>','<com.android.server.AttributeCache: void <clinit>()>','<com.android.server.am.ActivityManagerService: void grantEphemeralAccessLocked(int,android.content.Intent,int,int)>','<com.android.server.audio.AudioService$ScoClient: android.os.IBinder getBinder()>','<com.android.server.power.PowerManagerService: void access$2000(com.android.server.power.PowerManagerService)>','<android.net.util.PrefixUtils: void <clinit>()>','<com.android.server.NsdService: com.android.server.NsdService$NsdSettings access$200(com.android.server.NsdService)>','<com.android.server.wm.AppWindowToken: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>','<com.android.server.AppOpsService: boolean isOperationActive(int,int,java.lang.String)>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: void onQueuedLocked()>','<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)>','<com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$2300(com.android.server.NetworkManagementService)>','<com.android.server.location.GnssLocationProvider: void access$5200(com.android.server.location.GnssLocationProvider,com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.am.EventLogTags: void writeAmWtf(int,int,java.lang.String,int,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityManagerService$Injector: android.content.Context getContext()>','<com.android.server.ConnectivityService: void access$2100(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.EventLogTags: void writeDeviceIdleLightStep()>','<com.android.server.am.ActivityMetricsLogger: void notifyStartingWindowDrawn(int,long)>','<com.android.server.am.UserSwitchingDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.UserInfo,android.content.pm.UserInfo,boolean)>','<com.android.server.am.UidRecord: void reset()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$3200(com.android.server.connectivity.Tethering$TetherMasterSM,int,java.lang.Object)>','<com.android.server.power.PowerManagerService$WakeLock: void <init>(com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int,com.android.server.power.PowerManagerService$UidState)>','<com.android.server.am.ActivityStackSupervisor: boolean canPlaceEntityOnDisplay(int,boolean)>','<com.android.server.am.ActivityManagerService: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>','<com.android.server.InputMethodManagerService: void setInputMethodLocked(java.lang.String,int)>','<com.android.server.audio.AudioService: android.os.PowerManager$WakeLock access$6400(com.android.server.audio.AudioService)>','<com.android.server.NativeDaemonConnector$SensitiveArg: void <init>(java.lang.Object)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$100(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,com.android.internal.util.State,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean allowFilterResult(android.content.pm.PackageParser$ActivityIntentInfo,java.util.List)>','<com.android.server.EventLogTags: void writeNotificationVisibilityChanged(java.lang.String,java.lang.String)>','<android.hidl.base.V1_0.IBase$Stub: java.lang.String interfaceDescriptor()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.am.ActivityManagerShellCommand: void removeWallOption()>','<com.android.server.usb.UsbService: void access$000(com.android.server.usb.UsbService,int)>','<com.android.server.DeviceIdleController: int[] getAppIdWhitelistExceptIdleInternal()>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator$Downstream: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int,short)>','<com.android.server.PinnerService$BinderService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.power.Notifier: void onLongPartialWakeLockFinish(java.lang.String,int,android.os.WorkSource,java.lang.String)>','<com.android.server.pm.UserManagerService: boolean removeUser(int)>','<com.android.server.wm.TaskStack: void removeImmediately()>','<com.android.server.am.ActivityStackSupervisor: boolean removeTaskByIdLocked(int,boolean,boolean,boolean)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.wm.WindowManagerService$LocalService: void setInputFilter(android.view.IInputFilter)>','<com.android.server.am.ActivityManagerService$22: void run()>','<com.android.server.audio.AudioService: android.os.Looper access$2000(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: int doPostInstall(int,int)>','<com.android.server.wm.WindowManagerService: int getLidState()>','<com.android.server.am.ActivityManagerService: void setTrackAllocationApp(android.content.pm.ApplicationInfo,java.lang.String)>','<android.hardware.usb.V1_0.IUsb$Stub: void <init>()>','<com.android.server.AlarmManagerService$2: void setTimeZone(java.lang.String)>','<com.android.server.pm.UserManagerService: void <init>(android.content.Context)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>','<com.android.server.wm.WindowManagerService: void updateNonSystemOverlayWindowsVisibilityIfNeeded(com.android.server.wm.WindowState,boolean)>','<com.android.server.connectivity.Tethering: java.lang.Object access$700(com.android.server.connectivity.Tethering)>','<com.android.server.NsdService: void access$1900(com.android.server.NsdService,android.os.Message,int)>','<com.android.server.firewall.NotFilter$1: void <init>(java.lang.String)>','<com.android.server.TelephonyRegistry: void notifyDataActivity(int)>','<com.android.server.audio.RotationHelper: void init(android.content.Context,android.os.Handler)>','<com.android.server.am.ServiceRecord: void stripForegroundServiceFlagFromNotification()>','<com.android.server.NetworkManagementService: android.util.SparseIntArray access$1900(com.android.server.NetworkManagementService)>','<com.android.server.SystemService: void onStartUser(int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.location.MockProvider: void clearLocation()>','<com.android.server.wm.Session: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>','<com.android.server.wm.WindowState: java.lang.String getName()>','<com.android.server.LocationManagerService: void access$1300(com.android.server.LocationManagerService)>','<com.android.server.NsdService$ClientInfo: android.net.nsd.NsdServiceInfo access$2200(com.android.server.NsdService$ClientInfo)>','<com.android.server.power.PowerManagerService$4: void run()>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void enter()>','<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getConfigValue()>','<com.android.server.pm.PackageKeySetData: void removeAllUpgradeKeySets()>','<com.android.server.wm.WindowAnimator$DisplayContentsAnimator: void <init>(com.android.server.wm.WindowAnimator,com.android.server.wm.WindowAnimator$1)>','<com.android.server.wm.ScreenRotationAnimation: void kill()>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>','<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsService create(android.content.Context,android.os.INetworkManagementService)>','<com.android.server.IntentResolver$1: void <init>()>','<com.android.server.am.ActivityStack: void getPresentUIDs(android.util.IntArray)>','<com.android.server.wm.WindowToken: void onDisplayChanged(com.android.server.wm.DisplayContent)>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter read(org.xmlpull.v1.XmlPullParser)>','<com.android.server.statusbar.StatusBarManagerService: com.android.internal.statusbar.IStatusBar access$100(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: boolean init()>','<com.android.server.wm.WindowManagerService: void setInTouchMode(boolean)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.wm.BlackFrame$BlackSurface: void setAlpha(float)>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)>','<com.android.server.wm.WindowSurfaceController: void getSurface(android.view.Surface)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void ping()>','<com.android.server.wm.TaskPositioner: void startDrag(boolean,boolean,float,float,android.graphics.Rect)>','<com.android.server.wm.WindowState: boolean canAddInternalSystemWindow()>','<com.android.server.wm.DisplayContent: int access$602(com.android.server.wm.DisplayContent,int)>','<com.android.server.pm.PackageManagerService$InstallParams$1: void <init>(com.android.server.pm.PackageManagerService$InstallParams,int)>','<com.android.server.ConnectivityService: com.android.internal.net.VpnConfig getVpnConfig(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: android.net.util.SharedLog access$500(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ActiveServices$2: void <init>(com.android.server.am.ActiveServices,android.content.Intent,int)>','<com.android.server.NativeDaemonConnector: void monitor()>','<com.android.server.am.EventLogTags: void writeAmOnResumeCalled(int,java.lang.String,java.lang.String)>','<com.android.server.location.GnssNavigationMessageProvider: void <init>(android.os.Handler)>','<com.android.server.input.InputManagerService: void disableInputDevice(int)>','<com.android.server.wm.WindowToken: boolean windowsCanBeWallpaperTarget()>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>','<com.android.server.wm.TaskStack: void positionChildAt(int,com.android.server.wm.Task,boolean)>','<com.android.server.LocationManagerService$Receiver: int hashCode()>','<com.android.server.am.ActivityManagerService: void addBackgroundCheckViolationLocked(java.lang.String,java.lang.String)>','<com.android.server.audio.FocusRequester: void <init>(android.media.AudioFocusInfo,android.media.IAudioFocusDispatcher,android.os.IBinder,com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler,com.android.server.audio.MediaFocusControl)>','<com.android.server.am.UserController$4: void run()>','<com.android.server.am.AppErrors: void handleShowAppErrorUi(android.os.Message)>','<com.android.server.wm.BoundsAnimationController: android.os.Handler getHandler()>','<com.android.server.am.ActivityStack: void resize(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.am.ActivityManagerService: void resizeStack(int,android.graphics.Rect,boolean,boolean,boolean,int)>','<com.android.server.net.NetworkStatsCollection: boolean isDirty()>','<com.android.server.am.TaskRecord: void cancelWindowTransition()>','<com.android.server.am.UserController$Injector: void batteryStatsServiceNoteEvent(int,java.lang.String,int)>','<com.android.server.AlarmManagerService: void calculateDeliveryPriorities(java.util.ArrayList)>','<com.android.server.input.InputManagerService: void setCustomPointerIcon(android.view.PointerIcon)>','<com.android.server.am.ActivityManagerService: void postFinishBooting(boolean,boolean)>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>','<com.android.server.firewall.SenderPermissionFilter$1: void <init>(java.lang.String)>','<com.android.server.AppOpsService$3: int getMountMode(int,java.lang.String)>','<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlayIfNeeded()>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo access$7700(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int,boolean)>','<com.android.server.AppOpsService$3: boolean hasExternalStorage(int,java.lang.String)>','<com.android.server.pm.PreferredComponent: boolean sameSet(java.util.List)>','<com.android.server.usb.UsbDeviceManager: boolean access$1500(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.AppTransition: boolean isRunning()>','<com.android.server.pm.PackageManagerService: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>','<com.android.server.EventLogTags: void writeStorageState(java.lang.String,int,int,long,long)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: int userIdCount()>','<com.android.server.wm.WindowState: com.android.server.wm.WindowState getTopParentWindow()>','<com.android.server.wm.AppWindowToken: void reparent(com.android.server.wm.Task,int)>','<com.android.server.power.PowerManagerService$UserSwitchedReceiver: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: void <clinit>()>','<com.android.server.pm.dex.DexManager$RegisterDexModuleResult: void <init>()>','<com.android.server.power.PowerManagerService$BinderService: void setStayOnSetting(int)>','<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState findFocusedWindow()>','<com.android.server.location.GnssLocationProvider: boolean access$2800(com.android.server.location.GnssLocationProvider)>','<com.android.server.audio.MediaFocusControl: int dispatchFocusChange(android.media.AudioFocusInfo,int)>','<com.android.server.power.ShutdownThread$5: void <init>(com.android.server.power.ShutdownThread,int,java.lang.CharSequence)>','<com.android.server.pm.ProtectedPackages: boolean isPackageStateProtected(int,java.lang.String)>','<com.android.server.wm.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.firewall.StringFilter$StartsWithFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.wm.WindowManagerService: void disableSurfaceTrace()>','<com.android.server.wm.ScreenRotationAnimation: boolean hasScreenshot()>','<com.android.server.power.PowerManagerService$2: java.lang.String toString()>','<com.android.server.power.BatterySaverPolicy: void dump(java.io.PrintWriter)>','<android.hardware.configstore.V1_0.OptionalUInt64: boolean equals(java.lang.Object)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFirstInterface()>','<com.android.server.pm.PersistentPreferredActivity: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>','<android.net.INetd$Stub$Proxy: void ipSecApplyTransportModeTransform(java.io.FileDescriptor,int,int,java.lang.String,java.lang.String,int)>','<com.android.server.connectivity.PermissionMonitor: void access$300(com.android.server.connectivity.PermissionMonitor,int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getSpec()>','<com.android.server.pm.PackageInstallerService$Callbacks: void notifySessionFinished(int,int,boolean)>','<com.android.server.am.ActivityManagerService: boolean shouldDisableNonVrUiLocked()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void handleMessage(android.os.Message)>','<com.android.server.wm.TaskStack: boolean dimFullscreen()>','<com.android.server.am.ConfigurationContainer: android.content.res.Configuration getOverrideConfiguration()>','<com.android.server.am.ActivityManagerService$LocalService: void setHasOverlayUi(int,boolean)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: boolean doRename(int,android.content.pm.PackageParser$Package,java.lang.String)>','<com.android.server.pm.UserManagerService$MainHandler: void <init>(com.android.server.pm.UserManagerService)>','<com.android.server.input.InputManagerService: java.io.File access$2000(com.android.server.input.InputManagerService)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntentForPackage(android.content.Intent,java.lang.String,int,java.util.ArrayList,int)>','<com.android.server.am.RecentTasks: void onPackagesSuspendedChanged(java.lang.String[],boolean,int)>','<com.android.server.usb.UsbAlsaManager: void setPeripheralMidiState(boolean,int,int)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void writePermissionsForUserSyncLPr(int)>','<com.android.server.AppOpsService: int checkOperation(int,int,java.lang.String)>','<com.android.server.input.PersistentDataStore: void <init>()>','<com.android.server.net.NetworkPolicyManagerService: java.util.concurrent.CountDownLatch networkScoreAndNetworkManagementServiceReady()>','<com.android.server.pm.EphemeralResolverConnection: boolean access$100()>','<com.android.server.wm.AccessibilityController: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>','<android.hidl.base.V1_0.DebugInfo: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void stopOffload(android.hardware.tetheroffload.control.V1_0.IOffloadControl$stopOffloadCallback)>','<com.android.server.wm.WindowState: com.android.server.wm.WindowState getParentWindow()>','<com.android.server.pm.SettingBase: void copyFrom(com.android.server.pm.SettingBase)>','<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityUnpinned()>','<com.android.server.net.NetworkStatsRecorder: void removeUidsLocked(int[])>','<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>','<com.android.server.audio.AudioService$2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>','<com.android.server.am.UserController: int[] getCurrentProfileIdsLocked()>','<com.android.server.DeviceIdleController$LocalService: int[] getPowerSaveWhitelistUserAppIds()>','<com.android.server.am.TaskRecord: void requestResize(android.graphics.Rect,int)>','<com.android.server.pm.PermissionsState$PermissionData: int getFlags(int)>','<com.android.server.NetworkManagementService: int removeRoutesFromLocalNetwork(java.util.List)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: void <init>(android.net.ip.RouterAdvertisementDaemon$1)>','<com.android.server.am.ActivityRecord: void setDisablePreviewScreenshots(boolean)>','<com.android.server.wm.Session: void setInTouchMode(boolean)>','<android.hidl.base.V1_0.IBase$Stub: void notifySyspropsChanged()>','<com.android.server.PinnerService: void access$500(com.android.server.PinnerService)>','<com.android.server.am.ActivityStackSupervisor: boolean resumeFocusedStackTopActivityLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.app.ActivityOptions)>','<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void recomputeBoundsLocked()>','<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>','<com.android.server.am.DumpHeapProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>','<com.android.server.usb.UsbMidiDevice: void close()>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: boolean isPortal()>','<com.android.server.ConnectivityService$2: void onUidRulesChanged(int,int)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner,int)>','<com.android.server.power.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>','<com.android.server.NsdService$NsdStateMachine$EnabledState: void enter()>','<com.android.server.firewall.NotFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.wm.WindowManagerService: boolean access$300(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.UserRestrictionsUtils: boolean contains(android.os.Bundle,java.lang.String)>','<com.android.server.DeviceIdleController: void onStart()>','<com.android.server.location.GnssLocationProvider$BackOff: void reset()>','<com.android.server.AlarmManagerService: com.android.server.AlarmManagerService$BroadcastStats access$100(com.android.server.AlarmManagerService,android.app.PendingIntent)>','<com.android.server.pm.PackageManagerService: void removeInstalledPackageLI(android.content.pm.PackageParser$Package,boolean)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: com.android.server.am.ConfigurationContainer getChildAt(int)>','<com.android.server.location.LocationFudger$1: void <init>(com.android.server.location.LocationFudger,android.os.Handler)>','<com.android.server.connectivity.Vpn: void updateState(android.net.NetworkInfo$DetailedState,java.lang.String)>','<com.android.server.wm.WindowContainer: void addChild(com.android.server.wm.WindowContainer,int)>','<com.android.server.wm.PinnedStackController: android.graphics.Rect getDefaultBounds()>','<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>','<com.android.server.pm.PackageManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>','<com.android.server.audio.AudioService$VolumeStreamState: boolean access$600(com.android.server.audio.AudioService$VolumeStreamState)>','<com.android.server.usb.UsbPortManager$PortInfo: boolean setStatus(int,boolean,int,boolean,int,boolean,int)>','<com.android.server.wm.WindowManagerService: void notifyKeyguardTrustedChanged()>','<android.net.util.MultinetworkPolicyTracker: void updateMeteredMultipathPreference()>','<com.android.server.am.ActivityManagerService: boolean isUserAMonkey()>','<com.android.server.am.PendingIntentRecord: java.lang.String toString()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void initOffload(android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback,android.hardware.tetheroffload.control.V1_0.IOffloadControl$initOffloadCallback)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void clearDefaults(java.lang.String,android.os.UserHandle)>','<com.android.server.NativeDaemonConnector$1: void run()>','<com.android.server.wm.WindowManagerService: void setDockedStackCreateStateLocked(int,android.graphics.Rect)>','<com.android.server.DeviceIdleController$BinderService: boolean isPowerSaveWhitelistApp(java.lang.String)>','<com.android.server.am.UserController$Injector: android.content.Context getContext()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void handleNewUpstreamNetworkState(android.net.NetworkState)>','<com.android.server.am.ActivityRecord: boolean isFreeform()>','<com.android.server.wm.Task: void removeChild(com.android.server.wm.WindowContainer)>','<com.android.server.am.ProcessStatsService$3: void run()>','<com.android.server.wm.Session: int addToDisplay(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>','<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.DeviceIdleController$BinderService: java.lang.String[] getUserPowerWhitelist()>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$1)>','<com.android.server.usb.descriptors.UsbASGeneral: int getFormatTag()>','<com.android.server.NsdService$DaemonConnection: void start()>','<com.android.server.pm.dex.DexManager: int access$500()>','<com.android.server.connectivity.Tethering: void interfaceRemoved(java.lang.String)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: com.android.server.wm.WindowManagerService access$800(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.pm.PackageSettingBase: boolean getNotLaunched(int)>','<com.android.server.wm.TaskStack: void setAnimationFinalBounds(android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.wm.WindowState: boolean isAnimating()>','<com.android.server.wm.InputMonitor: android.view.WindowManagerPolicy$InputConsumer createInputConsumer(android.os.Looper,java.lang.String,android.view.InputEventReceiver$Factory)>','<com.android.server.pm.UserManagerService$Shell: int onCommand(java.lang.String)>','<com.android.server.pm.CompilerStats: void readInternal(java.lang.Void)>','<com.android.server.am.TaskRecord: void disposeThumbnail()>','<com.android.server.connectivity.Tethering: void <clinit>()>','<com.android.server.wm.DisplaySettings: void readSettingsLocked()>','<com.android.server.pm.Settings: void removeDisabledSystemPackageLPw(java.lang.String)>','<com.android.server.wm.WallpaperController: void startWallpaperAnimation(android.view.animation.Animation)>','<com.android.server.am.UserSwitchingDialog$1: void <init>(com.android.server.am.UserSwitchingDialog)>','<com.android.server.NsdService$NsdStateMachine$DisabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<com.android.server.pm.Settings: android.content.pm.IntentFilterVerificationInfo createIntentFilterVerificationIfNeededLPw(java.lang.String,android.util.ArraySet)>','<com.android.server.connectivity.NetworkMonitor: int access$900(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()>','<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>','<com.android.server.pm.UserManagerService$2: void <init>(com.android.server.pm.UserManagerService,android.os.Bundle,int)>','<com.android.server.pm.UserManagerService$LocalService: boolean isUserUnlocked(int)>','<com.android.server.EventLogTags: void writeFullBackupQuotaExceeded(java.lang.String)>','<com.android.server.net.NetworkIdentitySet: boolean isAnyMemberMetered()>','<com.android.server.am.ActivityRecord: boolean isPersistable()>','<com.android.server.LocationManagerService$8: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WindowManagerService: void showGlobalActions()>','<com.android.server.input.PersistentDataStore$InputDeviceState: void saveToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.server.net.NetworkStatsObservers$RequestInfo: java.lang.String toString()>','<com.android.server.pm.UserRestrictionsUtils: void moveRestriction(java.lang.String,android.util.SparseArray,android.util.SparseArray)>','<com.android.server.audio.AudioService: java.lang.Object access$2100(com.android.server.audio.AudioService)>','<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.wm.WindowState: boolean wasVisibleBeforeClientHidden()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$3500(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: int doPreInstall(int)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>','<com.android.server.InputMethodManagerService: int[] access$1200(com.android.server.InputMethodManagerService)>','<com.android.server.wm.TaskStack: void addTask(com.android.server.wm.Task,int)>','<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabled(int)>','<com.android.server.NativeDaemonConnector$ResponseQueue: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.BroadcastQueue: boolean isSignaturePerm(java.lang.String[])>','<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,android.content.pm.ResolveInfo,int,android.app.ProfilerInfo)>','<com.android.server.am.TaskRecord: void setNextAffiliate(com.android.server.am.TaskRecord)>','<com.android.server.input.InputManagerService$VibratorToken: void <init>(com.android.server.input.InputManagerService,int,android.os.IBinder,int)>','<android.net.INetd$Stub$Proxy: void getResolverInfo(int,java.lang.String[],java.lang.String[],int[],int[])>','<com.android.server.DeviceIdleController: void dumpTempWhitelistSchedule(java.io.PrintWriter,boolean)>','<com.android.server.wm.DisplayContent: void addChild(com.android.server.wm.DisplayContent$DisplayChildWindowContainer,java.util.Comparator)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: java.util.ArrayList getHashChain()>','<com.android.server.am.ActivityManagerService: void activitySlept(android.os.IBinder)>','<com.android.server.AnyMotionDetector$1: void onSensorChanged(android.hardware.SensorEvent)>','<com.android.server.pm.UserRestrictionsUtils: void <clinit>()>','<com.android.server.audio.AudioService$VolumeController: java.lang.String toString()>','<com.android.server.wm.AppTransition: int getAppStackClipMode()>','<com.android.server.pm.PackageDexOptimizer$ForcedUpdatePackageDexOptimizer: int adjustDexoptNeeded(int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: java.lang.String interfaceDescriptor()>','<com.android.server.pm.PackageManagerService: void flushPackageRestrictionsAsUser(int)>','<com.android.server.power.Notifier$4: void <init>(com.android.server.power.Notifier)>','<android.os.IInstalld$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked()>','<com.android.server.wm.WindowSurfaceController: boolean getWindowContentFrameStats(android.view.WindowContentFrameStats)>','<com.android.server.wm.AppWindowContainerController: void <init>(com.android.server.wm.TaskWindowContainerController,android.view.IApplicationToken,com.android.server.wm.AppWindowContainerListener,int,int,boolean,boolean,int,boolean,boolean,boolean,int,int,long,android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>','<com.android.server.audio.FocusRequester: java.lang.String getClientId()>','<com.android.server.connectivity.PacManager: com.android.net.IProxyService access$1102(com.android.server.connectivity.PacManager,com.android.net.IProxyService)>','<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getSigningKeySetByPackageNameLPr(java.lang.String)>','<com.android.server.LocationManagerService: void access$700(com.android.server.LocationManagerService,java.lang.String)>','<com.android.server.SystemServiceManager: void dump()>','<com.android.server.power.PowerManagerService$BinderService: void reboot(boolean,java.lang.String,boolean)>','<com.android.server.statusbar.StatusBarManagerService$3: void run()>','<com.android.server.am.BatteryStatsService: void noteUidProcessState(int,int)>','<com.android.server.pm.PackageSettingBase: java.lang.String getInstallerPackageName()>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isFilterStopped(android.content.pm.PackageParser$ServiceIntentInfo,int)>','<com.android.server.am.TaskRecord: boolean canBeLaunchedOnDisplay(int)>','<com.android.server.ConnectivityService: void access$4500(com.android.server.ConnectivityService,int)>','<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<com.android.server.usb.descriptors.UsbACInterface: byte getSubclass()>','<com.android.server.am.LaunchingTaskPositioner: void reset()>','<com.android.server.am.ActivityManagerService$14: void run()>','<com.android.server.location.RemoteListenerHelper: void <init>(android.os.Handler,java.lang.String)>','<com.android.server.pm.UserManagerService: java.lang.String getUserAccount(int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setDeviceAndProfileOwnerPackages(int,java.lang.String,android.util.SparseArray)>','<com.android.server.connectivity.NetworkMonitor: void <init>(android.content.Context,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkRequest,android.net.metrics.IpConnectivityLog)>','<com.android.server.AlarmManagerService$DeliveryTracker: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.location.GpsXtraDownloader: void <init>(java.util.Properties)>','<com.android.server.am.BatteryStatsService: void noteWifiSupplicantStateChanged(int,boolean)>','<com.android.server.connectivity.NetworkDiagnostics: java.lang.Integer access$200(com.android.server.connectivity.NetworkDiagnostics)>','<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: int getUidTargetSdkVersion(int)>','<com.android.server.NativeDaemonEvent: boolean isClassClientError()>','<com.android.server.wm.WindowContainer: void stepAppWindowsAnimation(long)>','<com.android.server.AlarmManagerService: void setTimeZoneImpl(java.lang.String)>','<com.android.server.audio.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.PackageManagerService: android.content.ComponentName access$4000(com.android.server.pm.PackageManagerService,java.lang.String,java.util.List)>','<com.android.server.location.RemoteListenerHelper: void updateResult()>','<com.android.server.am.ActivityManagerService: void rotateBroadcastStatsIfNeededLocked()>','<com.android.server.usb.UsbDebuggingManager: com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread access$202(com.android.server.usb.UsbDebuggingManager,com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread)>','<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(java.lang.String)>','<com.android.server.pm.UserRestrictionsUtils: boolean restrictionsChanged(android.os.Bundle,android.os.Bundle,java.lang.String[])>','<com.android.server.wm.DisplayContent: com.android.server.wm.AppWindowToken getAppWindowToken(android.os.IBinder)>','<com.android.server.am.ActivityManagerShellCommand: int runSendTrimMemory(java.io.PrintWriter)>','<com.android.server.pm.UserManagerService: void applyUserRestrictionsLR(int)>','<com.android.server.wm.WindowState: boolean onAppVisibilityChanged(boolean,boolean)>','<com.android.server.pm.PackageManagerService$SharedLibraryEntry: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,int)>','<com.android.server.wm.AppWindowAnimator: void setNullAnimation()>','<com.android.server.am.ActivityStarter: boolean isDocumentLaunchesIntoExisting(int)>','<com.android.server.AnyMotionDetector: boolean access$600(com.android.server.AnyMotionDetector)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$CategoriesIterGenerator: void <init>(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.wm.WindowContainer: void setOrientation(int)>','<com.android.server.am.ActivityManagerService$3: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.ConnectivityService: boolean requestBandwidthUpdate(android.net.Network)>','<com.android.server.wm.PinnedStackController: boolean access$702(com.android.server.wm.PinnedStackController,boolean)>','<com.android.server.pm.PackageVerificationState: boolean isInstallAllowed()>','<com.android.server.am.ActivityStack: boolean isDockedStack()>','<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>','<com.android.server.am.BatteryStatsService: void noteScreenState(int)>','<com.android.server.am.ProviderMap: boolean collectPackageProvidersLocked(java.lang.String,java.util.Set,boolean,boolean,int,java.util.ArrayList)>','<com.android.server.power.PowerManagerService: boolean access$1302(com.android.server.power.PowerManagerService,boolean)>','<com.android.server.connectivity.NetworkDiagnostics$DnsUdpCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>','<com.android.server.pm.PackageInstallerSession: void addClientProgress(float)>','<com.android.server.firewall.CategoryFilter: void <init>(java.lang.String,com.android.server.firewall.CategoryFilter$1)>','<com.android.server.net.NetworkStatsService: java.lang.Object access$100(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.DisplayContent: void removeAppToken(android.os.IBinder)>','<com.android.server.am.ProcessStatsService: boolean isMemFactorLowered()>','<com.android.server.am.ActivityManagerService$27: void run()>','<com.android.server.am.TaskChangeNotificationController$MainHandler: void handleMessage(android.os.Message)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: int access$202(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int)>','<com.android.server.pm.ProcessLoggingHandler: void handleMessage(android.os.Message)>','<com.android.server.am.InstrumentationReporter: void <init>()>','<com.android.server.net.NetworkStatsService$1: void <init>(com.android.server.net.NetworkStatsService,java.lang.String)>','<com.android.server.AlarmManagerService: void <init>(android.content.Context)>','<android.hardware.usb.V1_0.IUsb$Stub: void ping()>','<com.android.server.wm.AppTransition: boolean isKeyguardGoingAwayTransit(int)>','<com.android.server.audio.PlaybackActivityMonitor: android.media.VolumeShaper$Configuration access$100()>','<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3300(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void reset()>','<com.android.server.am.ActivityRecord: boolean isConfigurationCompatible(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppInstallerComponent()>','<com.android.server.AlarmManagerService: void access$400(com.android.server.AlarmManagerService,android.app.PendingIntent,android.app.IAlarmListener)>','<com.android.server.location.GnssLocationProvider: android.location.IGpsGeofenceHardware getGpsGeofenceProxy()>','<com.android.server.wm.WallpaperController: void updateWallpaperVisibility()>','<com.android.server.wm.AppWindowToken: void clearWillReplaceWindows()>','<com.android.server.am.UserController$Injector: int checkComponentPermission(java.lang.String,int,int,int,boolean)>','<com.android.server.wm.WindowManagerService: void setAnimationScales(float[])>','<com.android.server.am.ContentProviderRecord: boolean hasConnectionOrHandle()>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: boolean writeProto()>','<com.android.server.wm.DisplayContent: int access$502(com.android.server.wm.DisplayContent,int)>','<com.android.server.wm.WindowStateAnimator: void setAnimation(android.view.animation.Animation,int)>','<com.android.server.usb.descriptors.UsbACInputTerminal: byte getNrChannels()>','<com.android.server.wm.PinnedStackController: void setAspectRatio(float)>','<com.android.server.InputMethodManagerService$InputMethodFileManager: void access$500(com.android.server.InputMethodManagerService$InputMethodFileManager,java.lang.String)>','<com.android.server.connectivity.tethering.IControlsTethering: void updateInterfaceState(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int,int)>','<com.android.server.audio.RotationHelper$AudioDisplayListener: void onDisplayChanged(int)>','<com.android.server.pm.CrossProfileIntentFilter: int getTargetUserId()>','<com.android.server.am.LockTaskNotify: void show(boolean)>','<com.android.server.pm.PackageManagerService$InstallParams$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.NativeDaemonEvent: boolean isClassServerError()>','<com.android.server.NetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>','<com.android.server.AlarmManagerService$DeliveryTracker: void alarmTimedOut(android.os.IBinder)>','<com.android.server.audio.AudioService: void disableSafeMediaVolume(java.lang.String)>','<com.android.server.wm.TaskStack: void prepareFreezingTaskBounds()>','<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration(int)>','<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object,android.view.IWindow,int)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.net.NetworkStatsObservers$1: void <init>(com.android.server.net.NetworkStatsObservers)>','<com.android.server.EventLogTags: void writeDeviceIdleOnPhase(java.lang.String)>','<com.android.server.DeviceIdleController: void handleMotionDetectedLocked(long,java.lang.String)>','<com.android.server.am.ActivityManagerService$14: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<com.android.server.wm.PinnedStackWindowController: boolean isAnimatingBoundsToFullscreen()>','<com.android.server.audio.AudioService: void playSoundEffect(int)>','<com.android.server.am.ActivityManagerService$23: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.NativeDaemonConnector$ResponseQueue: com.android.server.NativeDaemonEvent remove(int,long,java.lang.String)>','<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: void setMinEdgeSize(int)>','<com.android.server.am.TaskPersister: java.util.List restoreTasksForUserLocked(int,android.util.SparseBooleanArray)>','<com.android.server.location.GnssNavigationMessageProvider$1: void <init>(com.android.server.location.GnssNavigationMessageProvider,android.location.GnssNavigationMessage)>','<com.android.server.am.ActivityManagerService$24: int compare(com.android.server.am.ActivityManagerService$MemItem,com.android.server.am.ActivityManagerService$MemItem)>','<com.android.server.am.ActivityManagerService: void performAppGcsLocked()>','<com.android.server.power.PowerManagerService$UidState: void <init>(int)>','<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.location.LocationProviderProxy: boolean access$200(com.android.server.location.LocationProviderProxy)>','<com.android.server.pm.Installer: void createUserData(java.lang.String,int,int,int)>','<com.android.server.usb.UsbMidiDevice$2: void run()>','<com.android.server.wm.WindowManagerService: void logWithStack(java.lang.String,java.lang.String)>','<com.android.server.NetworkManagementService: boolean isBandwidthControlEnabled()>','<com.android.server.wm.WindowState: boolean layoutInParentFrame()>','<com.android.server.usb.descriptors.UsbDescriptor: void <init>(int,byte)>','<com.android.server.wm.WindowState: void stopUsingSavedSurface()>','<com.android.server.am.ActivityRecord: int getStackId()>','<com.android.server.connectivity.Vpn: java.util.Set createUserAndRestrictedProfilesRanges(int,java.util.List,java.util.List)>','<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState$PermissionState getRuntimePermissionState(java.lang.String,int)>','<com.android.server.pm.PackageManagerService: void access$1800(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<android.hidl.base.V1_0.IBase$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void destroyWindow()>','<com.android.server.usb.MtpNotificationManager: void <init>(android.content.Context,com.android.server.usb.MtpNotificationManager$OnOpenInAppListener)>','<com.android.server.am.ActivityManagerService: void hang(android.os.IBinder,boolean)>','<com.android.server.EventLogTags: void writeWmNoSurfaceMemory(java.lang.String,int,java.lang.String)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte getSubtype()>','<com.android.server.audio.MediaFocusControl: java.lang.Object access$000()>','<com.android.server.wm.WindowManagerService: boolean isKeyguardTrusted()>','<com.android.server.usb.UsbDeviceManager: void bootCompleted()>','<com.android.server.net.NetworkPolicyManagerService: void access$1000(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.AppNotRespondingDialog: void onCreate(android.os.Bundle)>','<com.android.server.ConnectivityService: com.android.server.connectivity.NetworkMonitor createNetworkMonitor(android.content.Context,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkRequest)>','<com.android.server.location.GnssLocationProvider: boolean access$6300()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionMultiThumb(android.view.AppTransitionAnimationSpec[],android.os.IRemoteCallback,android.os.IRemoteCallback,boolean)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: void <clinit>()>','<com.android.server.wm.WindowToken: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityManagerService: void cancelTaskWindowTransition(int)>','<com.android.server.wm.TaskWindowContainerController$H: void <init>(java.lang.ref.WeakReference,android.os.Looper)>','<com.android.server.firewall.IntentFirewall$RuleObserver: void onEvent(int,java.lang.String)>','<com.android.server.am.ActivityStack: boolean checkKeyguardVisibility(com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.wm.WindowManagerService$4: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.net.NetworkStatsCollection: void dumpCheckin(java.io.PrintWriter,long,long)>','<com.android.server.audio.AudioService: int setHdmiSystemAudioSupported(boolean)>','<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()>','<com.android.server.am.ActivityStackSupervisor: void validateTopActivitiesLocked()>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void read(java.io.InputStream)>','<com.android.server.wm.Task: boolean showForAllUsers()>','<android.hardware.configstore.V1_0.OptionalBool: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.AnyMotionDetector$Vector3: com.android.server.AnyMotionDetector$Vector3 minus(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.am.ActivityStack: com.android.server.am.ConfigurationContainer getParent()>','<com.android.server.pm.PermissionsState: void <init>()>','<com.android.server.power.PowerManagerService: long access$3802(com.android.server.power.PowerManagerService,long)>','<com.android.server.pm.PackageInstallerSession$4: void <init>(com.android.server.pm.PackageInstallerSession)>','<com.android.server.pm.UserManagerService: boolean isSameProfileGroup(int,int)>','<com.android.server.connectivity.PacManager: java.lang.String access$300(com.android.server.connectivity.PacManager)>','<com.android.server.wm.AppTransition: int getLastClipRevealMaxTranslation()>','<com.android.server.connectivity.tethering.IControlsTethering: java.lang.String getStateString(int)>','<com.android.server.wm.CircularDisplayMask: void setVisibility(boolean)>','<com.android.server.wm.AppWindowToken: void setCanTurnScreenOn(boolean)>','<com.android.server.am.ActivityStack: void setBounds(android.graphics.Rect)>','<com.android.server.connectivity.Vpn: java.lang.String access$400(com.android.server.connectivity.Vpn)>','<com.android.server.firewall.CategoryFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.audio.AudioService: void playerEvent(int,int)>','<com.android.server.pm.PackageSettingBase: int getInstallStatus()>','<com.android.server.connectivity.Tethering$TetherState: boolean isCurrentlyServing()>','<com.android.server.connectivity.MockableSystemProperties: java.lang.String get(java.lang.String)>','<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()>','<com.android.server.wm.WindowManagerService: void intersectDisplayInsetBounds(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.os.IInstalld$Stub$Proxy: long[] getUserSize(java.lang.String,int,int,int[])>','<com.android.server.am.ActivityStackSupervisor: void setDockedStackMinimized(boolean)>','<com.android.server.pm.PackageDexOptimizer: java.io.File getOatDir(java.io.File)>','<com.android.server.am.ActivityStack: boolean updateBoundsAllowed(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.LocationManagerService$5: void <init>(com.android.server.LocationManagerService,android.os.Handler)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.pm.UserManagerService$LocalService: void removeUserState(int)>','<com.android.server.wm.InputMonitor: com.android.server.wm.WindowState access$1200(com.android.server.wm.InputMonitor)>','<com.android.server.am.ActivityManagerService: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>','<com.android.server.am.BroadcastRecord: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,com.android.server.am.ProcessRecord,java.lang.String,int,int,boolean,java.lang.String,java.lang.String[],int,android.app.BroadcastOptions,java.util.List,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,boolean,boolean,boolean,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>','<com.android.server.net.NetworkPolicyManagerService$15: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActiveServices: int bindServiceLocked(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>','<com.android.server.power.PowerManagerService: long access$3800(com.android.server.power.PowerManagerService)>','<com.android.server.wm.WindowState: boolean isDisplayedLw()>','<com.android.server.am.ActivityManagerService: void monitor()>','<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>','<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>','<com.android.server.wm.AppWindowToken: com.android.server.wm.Task getTask()>','<com.android.server.am.TaskRecord: void computeOverrideConfiguration(android.content.res.Configuration,android.graphics.Rect,android.graphics.Rect,boolean,boolean)>','<com.android.server.am.ActivityManagerService$ItemMatcher: void build(java.lang.String)>','<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>','<com.android.server.wm.AppWindowToken: boolean isLastWindow(com.android.server.wm.WindowState)>','<com.android.server.pm.UserManagerService$6: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int,int,int)>','<com.android.server.connectivity.NetworkNotificationManager: void showNotification(int,com.android.server.connectivity.NetworkNotificationManager$NotificationType,com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo,android.app.PendingIntent,boolean)>','<com.android.server.wm.WindowManagerService: int handleAnimatingStoppedAndTransitionLocked()>','<com.android.server.connectivity.NetworkMonitor: int access$902(com.android.server.connectivity.NetworkMonitor,int)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord anyTaskForIdLocked(int)>','<com.android.server.am.ActivityManagerService: boolean isSleepingLocked()>','<com.android.server.DeviceIdleController$BinderService: int[] getAppIdTempWhitelist()>','<com.android.server.pm.InstantAppRegistry: byte[] getInstantAppCookieLPw(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$8: void onValues(boolean,java.lang.String)>','<com.android.server.wm.TaskStack: void resetDockedStackToMiddle()>','<com.android.server.am.ActivityManagerShellCommand: int access$602(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.am.BatteryStatsService: void noteWifiState(int,java.lang.String)>','<com.android.server.location.LocationProviderProxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.am.TaskPersister: void saveImage(android.graphics.Bitmap,java.lang.String)>','<com.android.server.wm.WallpaperController: void setWindowWallpaperPosition(com.android.server.wm.WindowState,float,float,float,float)>','<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>','<com.android.server.wm.ViewServer$ViewServerWorker: void focusChanged()>','<com.android.server.audio.AudioService$VolumeStreamState: boolean access$602(com.android.server.audio.AudioService$VolumeStreamState,boolean)>','<com.android.server.am.ActivityManagerService: boolean isRootVoiceInteraction(android.os.IBinder)>','<com.android.server.input.InputManagerService: void access$1000(com.android.server.input.InputManagerService,int,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>','<com.android.server.location.GnssMeasurementsProvider$1: void execute(android.os.IInterface)>','<com.android.server.wm.AccessibilityController: void access$400(com.android.server.wm.WindowState,android.graphics.Matrix)>','<com.android.server.InputMethodManagerService$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>','<com.android.server.pm.PackageManagerService$OnPermissionChangeListeners: void removeListenerLocked(android.content.pm.IOnPermissionsChangeListener)>','<com.android.server.AppOpsService: int checkPackage(int,java.lang.String)>','<com.android.server.wm.AppTransition: void <clinit>()>','<com.android.server.PinnerService$1: void <init>(com.android.server.PinnerService)>','<com.android.server.input.InputManagerService$Shell: void <init>(com.android.server.input.InputManagerService,com.android.server.input.InputManagerService$1)>','<com.android.server.statusbar.StatusBarManagerService: void expandNotificationsPanel()>','<com.android.server.connectivity.tethering.SimChangeListener: java.lang.String access$100()>','<android.os.IInstalld$Stub$Proxy: void rmdex(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo generatePermissionInfo(com.android.server.pm.BasePermission,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int getDisplayId()>','<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>','<com.android.server.net.NetworkPolicyManagerService: long getWarningBytesFromCarrierConfig(android.os.PersistableBundle,long)>','<com.android.server.DeviceIdleController: void scheduleSensingTimeoutAlarmLocked(long)>','<com.android.server.pm.UserManagerService: boolean exists(int)>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: void <init>(com.android.server.location.LocationRequestStatistics$1)>','<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>','<com.android.server.NativeDaemonConnector: void <init>(com.android.server.INativeDaemonConnectorCallbacks,java.lang.String,int,java.lang.String,int,android.os.PowerManager$WakeLock,android.os.Looper)>','<com.android.server.statusbar.StatusBarManagerService$1: void showGlobalActions()>','<com.android.server.usb.UsbAlsaManager$AlsaDevice: void <init>(com.android.server.usb.UsbAlsaManager,int,int,int)>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack getStackById(int)>','<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void onUserActionRequired(android.content.Intent)>','<com.android.server.pm.BasePermission: boolean isRuntime()>','<com.android.server.NsdService: java.lang.String access$2600(com.android.server.NsdService,java.lang.String)>','<com.android.server.ConnectivityService$4: void <init>(com.android.server.ConnectivityService)>','<com.android.server.am.EventLogTags: void writeAmRelaunchActivity(int,int,int,java.lang.String)>','<android.hardware.usb.V1_0.PortRole: void writeToParcel(android.os.HwParcel)>','<com.android.server.am.BatteryStatsService: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>','<com.android.server.am.ActivityStack: boolean isRecentsStack()>','<com.android.server.location.GnssLocationProvider$5: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.LocationManagerService: com.android.server.location.GnssMeasurementsProvider access$900(com.android.server.LocationManagerService)>','<com.android.server.firewall.StringFilter$9: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void removeChildActivityContainers(com.android.server.am.ActivityRecord)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver$1: void run()>','<com.android.server.net.NetworkStatsCollection: void recordData(com.android.server.net.NetworkIdentitySet,int,int,int,long,long,android.net.NetworkStats$Entry)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void binderDied()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void <init>()>','<com.android.server.wm.AppTransition: boolean isNextThumbnailTransitionAspectScaled()>','<com.android.server.am.ActivityManagerService: int getPackageProcessState(java.lang.String,java.lang.String)>','<com.android.server.am.ProviderMap: void removeProviderByClass(android.content.ComponentName,int)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<android.net.ip.RouterAdvertisementDaemon$MulticastTransmitter: void hup()>','<com.android.server.am.ServiceRecord: com.android.server.am.ServiceRecord$StartItem findDeliveredStart(int,boolean)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ForwardedStats: void add(com.android.server.connectivity.tethering.OffloadHardwareInterface$ForwardedStats)>','<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$AuthoritiesIterGenerator: java.util.Iterator generate(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.policy.IconUtilities: void <init>(android.content.Context)>','<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.os.IBinder,android.net.Uri,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: int access$500(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.am.ActivityStack: void positionChildAt(com.android.server.am.TaskRecord,int)>','<com.android.server.wm.WallpaperController: boolean isWallpaperTarget(com.android.server.wm.WindowState)>','<com.android.server.wm.WindowState: int getSpecialWindowAnimLayerAdjustment()>','<com.android.server.am.BatteryStatsService$1: void run()>','<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>','<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>','<com.android.server.connectivity.tethering.OffloadController$1: void onStoppedError()>','<com.android.server.audio.AudioService: void setBtScoDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>','<com.android.server.connectivity.Tethering: android.net.util.SharedLog access$600(com.android.server.connectivity.Tethering)>','<com.android.server.wm.Session: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.TaskSnapshotCache: void putSnapshot(com.android.server.wm.Task,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.location.RemoteListenerHelper: void foreach(com.android.server.location.RemoteListenerHelper$ListenerOperation)>','<com.android.server.am.ActivityManagerService$MainHandler$1: void run()>','<com.android.server.am.ActivityManagerService: void reportActivityFullyDrawn(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: void dumpBroadcastStatsCheckinLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService$UserData putUserInfo(android.content.pm.UserInfo)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: android.os.IHwBinder asBinder()>','<com.android.server.wm.AppTransition$3: void onAnimationEnd(android.view.animation.Animation)>','<com.android.server.wm.TaskSnapshotSurface: void remove()>','<com.android.server.ConnectivityService$NetworkRequestInfo: void unlinkDeathRecipient()>','<com.android.server.net.NetworkStatsCollection: long getEndMillis()>','<com.android.server.usb.UsbService: com.android.server.usb.UsbDeviceManager access$200(com.android.server.usb.UsbService)>','<com.android.server.wm.WallpaperWindowToken: void updateWallpaperVisibility(boolean)>','<com.android.server.wm.TaskSnapshotController: int getSnapshotMode(com.android.server.wm.Task)>','<com.android.server.wm.DisplayContent$TaskForResizePointSearchResult: void reset()>','<com.android.server.am.VrController: int access$100(com.android.server.am.VrController,int,int,boolean)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean isPackagePersistent(java.lang.String)>','<com.android.server.NativeDaemonTimeoutException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<com.android.server.am.CompatModePackages: void handlePackageUninstalledLocked(java.lang.String)>','<com.android.server.SystemService: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>','<com.android.server.ConnectivityService: void access$1400(java.lang.String)>','<com.android.server.pm.Settings: void printFlags(java.io.PrintWriter,int,java.lang.Object[])>','<com.android.server.power.PowerManagerService$2: void onStateChanged()>','<com.android.server.wm.TaskSnapshotSurface$1: void handleMessage(android.os.Message)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean addKeyboardLayout(java.lang.String)>','<com.android.server.pm.PackageManagerService: void dumpProfiles(java.lang.String)>','<com.android.server.power.PowerManagerService$WakeLock: boolean hasSameWorkSource(android.os.WorkSource)>','<com.android.server.audio.AudioService$VolumeStreamState: int access$700(com.android.server.audio.AudioService$VolumeStreamState)>','<com.android.server.AppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>','<com.android.server.AlarmManagerService: void access$700(com.android.server.AlarmManagerService)>','<com.android.server.connectivity.NetworkAgentInfo: boolean satisfies(android.net.NetworkRequest)>','<com.android.server.firewall.SenderFilter$4: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.wm.WindowState$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.PendingIntentRecord: int sendInner(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,android.app.IActivityContainer)>','<com.android.server.wm.StackWindowController: boolean isVisible()>','<com.android.server.NativeDaemonConnector$Command: void <init>(java.lang.String,java.lang.Object[])>','<com.android.server.wm.DimLayerController: boolean isDimming(com.android.server.wm.DimLayer$DimLayerUser,com.android.server.wm.WindowStateAnimator)>','<com.android.server.am.ActivityStack: void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)>','<android.hardware.tetheroffload.control.V1_0.NetworkProtocol: java.lang.String toString(int)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createRestrictedProfile(java.lang.String,int)>','<com.android.server.location.LocationBasedCountryDetector: void unregisterListener(android.location.LocationListener)>','<com.android.server.wm.DragState: void notifyMoveLw(float,float)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean setEnabledOverlayPackages(int,java.lang.String,java.util.List)>','<com.android.server.usb.UsbDebuggingManager: java.lang.String access$402(com.android.server.usb.UsbDebuggingManager,java.lang.String)>','<com.android.server.am.ActivityStack: void deferUpdateBounds()>','<com.android.server.am.ActivityManagerShellCommand: int runStackSizeDockedStackTest(java.io.PrintWriter)>','<com.android.server.connectivity.PacManager$3: void <init>(com.android.server.connectivity.PacManager)>','<com.android.server.wm.RootWindowContainer: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionMultiThumb(android.view.AppTransitionAnimationSpec[],android.os.IRemoteCallback,android.os.IRemoteCallback,boolean)>','<com.android.server.wm.AppWindowToken: boolean containsDismissKeyguardWindow()>','<com.android.server.am.UserController: void startUserInForeground(int)>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getUsbClass()>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void <init>(com.android.server.pm.Settings,java.lang.Object)>','<com.android.server.pm.BackgroundDexOptService$2: void run()>','<com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>','<com.android.server.am.ActiveServices: void forceStopPackageLocked(java.lang.String,int)>','<com.android.server.wm.WindowState: com.android.server.wm.WindowState getReplacingWindow()>','<com.android.server.usb.descriptors.UsbASGeneral: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.wm.InputMonitor: boolean access$202(com.android.server.wm.InputMonitor,boolean)>','<com.android.server.statusbar.StatusBarManagerService$1: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect,java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$4: void onValues(long,long)>','<com.android.server.connectivity.tethering.OffloadController: void start()>','<com.android.server.statusbar.StatusBarManagerService: void expandSettingsPanel(java.lang.String)>','<com.android.server.wm.TaskStack: void getDimBounds(android.graphics.Rect)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: void <init>(android.net.NetworkRequest,long)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getNumConfigs()>','<com.android.server.wm.DockedStackDividerController: void notifyAppVisibilityChanged()>','<com.android.server.audio.AudioService$AudioServiceInternal: void updateRingerModeAffectedStreamsInternal()>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$UpstreamNetworkCallback: void onLost(android.net.Network)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: java.lang.String toString()>','<com.android.server.connectivity.tethering.OffloadController: void <init>(android.os.Handler,com.android.server.connectivity.tethering.OffloadHardwareInterface,android.content.ContentResolver,android.os.INetworkManagementService,android.net.util.SharedLog)>','<com.android.server.connectivity.Vpn: void setLockdown(boolean)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: com.android.internal.util.State access$600(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void <init>(com.android.server.am.ContentProviderRecord,android.os.IBinder)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$300(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.firewall.SenderFilter$5: void <init>()>','<com.android.server.pm.PackageManagerService: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>','<com.android.server.wm.AppWindowContainerController: void setVisibility(boolean,boolean)>','<com.android.server.power.PowerManagerService: int access$1102(com.android.server.power.PowerManagerService,int)>','<com.android.server.pm.PackageInstallerSession: android.content.pm.IPackageInstallObserver2 access$202(com.android.server.pm.PackageInstallerSession,android.content.pm.IPackageInstallObserver2)>','<com.android.server.pm.Installer: void <init>(android.content.Context,boolean)>','<com.android.server.connectivity.Tethering: void access$100(com.android.server.connectivity.Tethering,android.os.ResultReceiver,int)>','<com.android.server.EventLogTags: void writeNotificationPanelRevealed(int)>','<com.android.server.am.UserController: boolean isCurrentProfileLocked(int)>','<com.android.server.NsdService$DaemonConnection: void stop()>','<com.android.server.wm.TaskWindowContainerController: void positionChildAt(com.android.server.wm.AppWindowContainerController,int)>','<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadPartialLocked(long,long)>','<com.android.server.am.UserController: boolean isSameProfileGroup(int,int)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: com.android.server.firewall.IntentFirewall$FirewallIntentFilter[] newArray(int)>','<com.android.server.NetworkManagementService$NetdTetheringStatsProvider: void <init>(com.android.server.NetworkManagementService,com.android.server.NetworkManagementService$1)>','<com.android.server.am.UserController$Injector: void startHomeActivityLocked(int,java.lang.String)>','<com.android.server.wm.DockedStackDividerController: float getInterpolatedAnimationValue(float)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: void removeDnses(java.util.Set)>','<com.android.server.firewall.OrFilter: void <init>()>','<com.android.server.audio.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PackageManagerService$PackageParserCallback$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.am.ActivityStack: void unhandledBackLocked()>','<com.android.server.pm.PackageSettingBase: android.util.ArraySet getEnabledComponents(int)>','<com.android.server.pm.PackageDexOptimizer$ForcedUpdatePackageDexOptimizer: int adjustDexoptFlags(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$BaseServingState: void enter()>','<android.hidl.base.V1_0.DebugInfo: java.lang.String toString()>','<com.android.server.am.ActivityManagerService$12: void onDismissCancelled()>','<com.android.server.ConnectivityService: android.net.Network[] getAllNetworks()>','<com.android.server.NativeDaemonConnector: void setDebug(boolean)>','<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>','<com.android.server.wm.WindowSurfaceController: void hideInTransaction(java.lang.String)>','<com.android.server.am.TaskRecord: void removedFromRecents()>','<com.android.server.am.PendingIntentRecord: void registerCancelListenerLocked(com.android.internal.os.IResultReceiver)>','<com.android.server.am.TaskPersister: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>','<com.android.server.pm.PackageManagerService$25: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>','<com.android.server.audio.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>','<com.android.server.wm.DragState: void broadcastDragStartedLw(float,float)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: java.util.Set getLocalPrefixes()>','<com.android.server.audio.RotationHelper: void <clinit>()>','<com.android.server.am.BroadcastFilter: java.lang.String toString()>','<com.android.server.usb.UsbPortManager$RawPortInfo: void <clinit>()>','<com.android.server.firewall.IntentFirewall$FirewallHandler: void handleMessage(android.os.Message)>','<com.android.server.am.TaskPersister: void startPersisting()>','<com.android.server.audio.AudioService$ScoClient: void incCount(int)>','<com.android.server.pm.Settings: void writeKeySetAliasesLPr(org.xmlpull.v1.XmlSerializer,com.android.server.pm.PackageKeySetData)>','<com.android.server.am.ActiveServices: void publishServiceLocked(com.android.server.am.ServiceRecord,android.content.Intent,android.os.IBinder)>','<com.android.server.connectivity.Tethering$StateReceiver: void <init>(com.android.server.connectivity.Tethering,com.android.server.connectivity.Tethering$1)>','<com.android.server.AlarmManagerService: android.content.Intent access$1000(com.android.server.AlarmManagerService)>','<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: java.lang.String interfaceDescriptor()>','<com.android.server.input.PersistentDataStore$InputDeviceState: void <init>(com.android.server.input.PersistentDataStore$1)>','<com.android.server.audio.AudioService$3: void <init>(com.android.server.audio.AudioService,android.media.IVolumeController)>','<com.android.server.wm.AppWindowToken: void removeImmediately()>','<com.android.server.wm.Task: boolean isHomeTask()>','<com.android.server.NsdService$ClientInfo: java.lang.String toString()>','<com.android.server.am.TaskChangeNotificationController: void registerTaskStackListener(android.app.ITaskStackListener)>','<android.os.IInstalld$Stub$Proxy: boolean dumpProfiles(int,java.lang.String,java.lang.String)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$802(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,int)>','<com.android.server.am.UserController: void sendContinueUserSwitchLocked(com.android.server.am.UserState,int,int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setDrawn()>','<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: void waitForFinish()>','<com.android.server.NetworkManagementService: void setDefaultNetId(int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void sortResults(java.util.List)>','<com.android.server.pm.PolicyComparator: boolean foundDuplicate()>','<android.os.IInstalld$Stub$Proxy: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>','<com.android.server.am.BroadcastFilter: void dumpBrief(java.io.PrintWriter,java.lang.String)>','<com.android.server.usb.descriptors.UsbACFeatureUnit: void <init>(int,byte,byte,byte)>','<com.android.server.pm.PackageInstallerSession: boolean isSealed()>','<com.android.server.am.ActivityStackSupervisor: boolean restoreRecentTaskLocked(com.android.server.am.TaskRecord,int)>','<com.android.server.am.ActivityManagerService: int checkComponentPermission(java.lang.String,int,int,int,boolean)>','<com.android.server.am.RecentTasks: void unloadUserDataFromMemoryLocked(int)>','<com.android.server.location.GeofenceProxy$3: void handleMessage(android.os.Message)>','<com.android.server.wm.WindowState: void checkPolicyVisibilityChange()>','<com.android.server.InputMethodManagerService: void reportFullscreenMode(android.os.IBinder,boolean)>','<com.android.server.pm.PackageInstallerService: void onSecureContainersAvailable()>','<com.android.server.net.NetworkStatsObservers: android.net.DataUsageRequest register(android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.pm.PackageDexOptimizer: boolean canOptimizePackage(android.content.pm.PackageParser$Package)>','<com.android.server.am.BackupRecord: java.lang.String toString()>','<com.android.server.pm.PackageSettingBase: boolean getStopped(int)>','<com.android.server.wm.BlackFrame: void setAlpha(float)>','<com.android.server.wm.WindowContainer: void forAllTasks(java.util.function.Consumer)>','<com.android.server.pm.BackgroundDexOptService: boolean onStartJob(android.app.job.JobParameters)>','<com.android.server.location.GnssLocationProvider$1: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.ActivityManagerService: boolean startHomeActivityLocked(int,java.lang.String)>','<com.android.server.am.ServiceRecord$2: void run()>','<com.android.server.am.PendingIntentRecord$Key: int hashCode()>','<com.android.server.firewall.StringFilter$5: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.pm.PackageManagerService$IntentVerifierProxy: void <init>(com.android.server.pm.PackageManagerService,android.content.Context,android.content.ComponentName)>','<com.android.server.am.UriPermissionOwner$ExternalToken: com.android.server.am.UriPermissionOwner getOwner()>','<com.android.server.pm.PackageManagerService: byte[] getPreferredActivityBackup(int)>','<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: void <init>(com.android.server.connectivity.NetworkDiagnostics,java.net.InetAddress,com.android.server.connectivity.NetworkDiagnostics$Measurement)>','<com.android.server.wm.SurfaceControlWithBackground: void <init>(com.android.server.wm.SurfaceControlWithBackground)>','<com.android.server.am.ActiveServices: com.android.server.am.ServiceRecord getServiceByNameLocked(android.content.ComponentName,int)>','<com.android.server.connectivity.NetworkMonitor$ValidatedState: boolean processMessage(android.os.Message)>','<com.android.server.audio.AudioService$DeviceListSpec: java.lang.String toString()>','<com.android.server.pm.PermissionsState$PermissionState: int getFlags()>','<com.android.server.pm.EphemeralResolverConnection$MyServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.am.VrController$1: void onPersistentVrStateChanged(boolean)>','<com.android.server.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>','<com.android.server.am.ActivityManagerService$LocalService: boolean isSystemReady()>','<com.android.server.am.EventLogTags: void writeAmProcBad(int,int,java.lang.String)>','<com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler: void <init>(com.android.server.pm.Settings$RuntimePermissionPersistence)>','<android.hardware.usb.V1_0.PortStatus: void <init>()>','<com.android.server.am.ActivityManagerService: void scheduleStartProfilesLocked()>','<com.android.server.wm.TaskWindowContainerController: void reparent(com.android.server.wm.StackWindowController,int,boolean)>','<com.android.server.wm.Session: void updatePointerIcon(android.view.IWindow)>','<com.android.server.LocationManagerService: boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback,java.lang.String)>','<com.android.server.wm.PinnedStackController: android.os.Handler access$200(com.android.server.wm.PinnedStackController)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: android.hardware.usb.UsbAccessory getCurrentAccessory()>','<com.android.server.wm.DimLayerController: boolean animateDimLayers()>','<com.android.server.wm.RootWindowContainer: void closeSystemDialogs(java.lang.String)>','<com.android.server.NetworkManagementService: java.util.concurrent.CountDownLatch access$200(com.android.server.NetworkManagementService)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.wm.TaskStack: int getDockSideUnchecked(android.graphics.Rect,android.graphics.Rect,int)>','<com.android.server.pm.EphemeralResolverConnection$MyServiceConnection: void onServiceDisconnected(android.content.ComponentName)>','<android.hardware.usb.V1_0.IUsb$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.am.VrController: java.lang.String toString()>','<com.android.server.wm.WindowContainer: void setVisibleBeforeClientHidden()>','<com.android.server.connectivity.Vpn: com.android.internal.net.VpnInfo getVpnInfo()>','<com.android.server.location.GnssLocationProvider$16: void flush()>','<com.android.server.power.PowerManagerService: void access$5800(com.android.server.power.PowerManagerService,long)>','<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>','<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>','<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall$AMSInterface,android.os.Handler)>','<com.android.server.location.GnssNavigationMessageProvider: void onCapabilitiesUpdated(boolean)>','<android.net.INetd$Stub$Proxy: void wakeupDelInterface(java.lang.String,java.lang.String,int,int)>','<com.android.server.am.ActivityStackSupervisor: boolean switchUserLocked(int,com.android.server.am.UserState)>','<com.android.server.wm.AppWindowContainerController: void stopFreezingScreen(boolean)>','<com.android.server.wm.DisplayContent: void switchUser()>','<com.android.server.wm.DockedStackDividerController: boolean isResizing()>','<com.android.server.pm.PackageManagerService: boolean locationIsPrivileged(java.io.File)>','<com.android.server.am.ActivityManagerService: void access$1400(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerShellCommand$2: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.WindowManagerService: void stopFreezingScreen()>','<com.android.server.NetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>','<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>','<com.android.server.am.ActivityRecord: void pauseKeyDispatchingLocked()>','<com.android.server.AnyMotionDetector: boolean access$1002(com.android.server.AnyMotionDetector,boolean)>','<com.android.server.am.BroadcastQueue: void scheduleTempWhitelistLocked(int,long,com.android.server.am.BroadcastRecord)>','<android.hardware.usb.V1_0.PortStatus: java.lang.String toString()>','<com.android.server.usb.UsbPortManager$RawPortInfo$1: com.android.server.usb.UsbPortManager$RawPortInfo createFromParcel(android.os.Parcel)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void add(int,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.WindowState: boolean isDefaultDisplay()>','<com.android.server.am.UserController: void dump(java.io.PrintWriter,boolean)>','<com.android.server.am.UserController$Injector: android.os.Handler getHandler()>','<com.android.server.am.RecentTasks: int[] usersWithRecentsLoadedLocked()>','<com.android.server.wm.Session: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.wm.ScreenRotationAnimation: boolean isRotating()>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void <init>(com.android.server.am.ActivityStackSupervisor,com.android.server.am.ActivityRecord,android.app.IActivityContainerCallback)>','<com.android.server.am.ProcessRecord: void updateHasAboveClientLocked()>','<com.android.server.am.BroadcastFilter: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.TaskPositioner: boolean dimFullscreen()>','<com.android.server.power.PowerManagerService$LocalService: void uidIdle(int)>','<com.android.server.am.BatteryStatsService: void noteNetworkStatsEnabled()>','<com.android.server.ServiceWatcher: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<android.hardware.usb.V1_1.PortMode_1_1: void <init>()>','<com.android.server.pm.PackageManagerService$FileInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<com.android.server.usb.UsbPortManager$1: void <init>(com.android.server.usb.UsbPortManager,android.content.Intent)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void <init>()>','<com.android.server.am.UserController$Injector: int broadcastIntentLocked(android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int,int,int)>','<com.android.server.wm.InputMonitor: com.android.server.input.InputWindowHandle[] access$900(com.android.server.wm.InputMonitor)>','<com.android.server.am.ActiveServices: void unbindFinishedLocked(com.android.server.am.ServiceRecord,android.content.Intent,boolean)>','<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>','<com.android.server.am.ActivityManagerService$DbBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<android.hardware.usb.V1_0.IUsb$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.am.TaskPersister: void access$300(com.android.server.am.TaskPersister,android.util.ArraySet)>','<com.android.server.ConnectivityService: void access$200(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo$DetailedState,int)>','<com.android.server.pm.Settings: boolean setDefaultBrowserPackageNameLPw(java.lang.String,int)>','<com.android.server.wm.WallpaperWindowToken: void setExiting()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalInt64 vsyncSfEventPhaseOffsetNs()>','<com.android.server.am.ActivityStackSupervisor: void scheduleResumeTopActivities()>','<com.android.server.pm.InstantAppResolver: void doInstantAppResolutionPhaseTwo(android.content.Context,com.android.server.pm.EphemeralResolverConnection,android.content.pm.InstantAppRequest,android.content.pm.ActivityInfo,android.os.Handler)>','<com.android.server.audio.PlaybackActivityMonitor: void unmutePlayersForCall()>','<com.android.server.connectivity.Tethering: java.lang.String access$2600()>','<com.android.server.am.RecentTasks: void <clinit>()>','<com.android.server.DeviceIdleController$6: void onDisplayRemoved(int)>','<com.android.server.am.UserController: boolean hasStartedUserState(int)>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forTokenLocked(android.os.IBinder)>','<com.android.server.net.NetworkStatsRecorder: void dumpLocked(com.android.internal.util.IndentingPrintWriter,boolean)>','<com.android.server.location.RemoteListenerHelper: void tryUpdateRegistrationWithService()>','<com.android.server.am.ActivityManagerService$AppTaskImpl: int startActivity(android.os.IBinder,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>','<com.android.server.ConnectivityService: boolean access$100(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.WindowState: boolean restoreSavedSurface()>','<com.android.server.am.ActivityManagerConstants: int computeEmptyProcessLimit(int)>','<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>','<com.android.server.ConnectivityService$InternalHandler: void handleMessage(android.os.Message)>','<com.android.server.ConnectivityService: void access$1200(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo,int)>','<com.android.server.net.NetworkPolicyManagerInternal: void <init>()>','<com.android.server.wm.SurfaceControlWithBackground: void show()>','<com.android.server.power.PowerManagerService$DockReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WindowState: boolean isLetterboxedAppWindow()>','<com.android.server.pm.PackageSettingBase: int getCurrentEnabledStateLPr(java.lang.String,int)>','<com.android.server.location.GnssStatusListenerHelper: boolean registerWithService()>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider$BackOff access$2700(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean access$002(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo,boolean)>','<com.android.server.power.PowerManagerService$LocalService: void uidActive(int)>','<com.android.server.wm.StackWindowController: void getStackDockedModeBounds(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.wm.WindowManagerService$LocalService: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal$WindowsForAccessibilityCallback)>','<com.android.server.wm.DockedStackDividerController: int getContentWidth()>','<com.android.server.AlarmManagerService$Batch: boolean remove(int)>','<com.android.server.pm.UserManagerService$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>','<com.android.server.am.ActivityMetricsLogger: void notifyActivityLaunching()>','<com.android.server.am.EventLogTags: void writeAmOnStopCalled(int,java.lang.String,java.lang.String)>','<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>','<com.android.server.NetworkManagementService: boolean access$2400(com.android.server.NetworkManagementService)>','<com.android.server.wm.TaskSnapshotSurface: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.TaskSnapshotSurface$Window,android.view.Surface,android.app.ActivityManager$TaskSnapshot,java.lang.CharSequence,int,int,int,int,int,int,android.graphics.Rect,int)>','<com.android.server.audio.AudioService: boolean access$4300(com.android.server.audio.AudioService)>','<com.android.server.NetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>','<com.android.server.connectivity.NetworkAgentInfo: void setCurrentScore(int)>','<com.android.server.am.ActivityStackSupervisor: void findTaskToMoveToFrontLocked(com.android.server.am.TaskRecord,int,android.app.ActivityOptions,java.lang.String,boolean)>','<com.android.server.firewall.CategoryFilter$1: void <init>(java.lang.String)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.audio.AudioService: boolean access$8700(com.android.server.audio.AudioService)>','<com.android.server.connectivity.Tethering: void access$1000(com.android.server.connectivity.Tethering,int,int)>','<com.android.server.TelephonyRegistry: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>','<com.android.server.ServiceWatcher$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WindowContainer: void setController(com.android.server.wm.WindowContainerController)>','<com.android.server.net.NetworkIdentitySet: void writeToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.pm.PackageInstallerService$Callbacks: void access$800(com.android.server.pm.PackageInstallerService$Callbacks,int,int,float)>','<com.android.server.DeviceIdleController: void decActiveIdleOps()>','<com.android.server.wm.WindowManagerService$SettingsObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.power.PowerManagerService: void access$3200(java.lang.String)>','<com.android.server.wm.WindowManagerService: void <clinit>()>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider$BackOff access$3300(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.UserController: void showUserSwitchDialog(android.util.Pair)>','<com.android.server.statusbar.StatusBarManagerService: com.android.server.notification.NotificationDelegate access$000(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)>','<com.android.server.am.UserController: int stopUser(int,boolean,android.app.IStopUserCallback)>','<com.android.server.wm.Task: void cancelTaskWindowTransition()>','<com.android.server.firewall.SenderFilter: void <clinit>()>','<com.android.server.power.PowerManagerService$Constants: void dumpProto(android.util.proto.ProtoOutputStream)>','<com.android.server.audio.MediaFocusControl$2: void run()>','<com.android.server.am.ActivityManagerShellCommand: int resizeStack(int,android.graphics.Rect,int)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult sendHttpProbe(java.net.URL,int)>','<com.android.server.am.TaskRecord: boolean containsOnlyFullscreenActivities()>','<com.android.server.wm.AppWindowAnimator: void clearAnimation()>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getUsbSubclass()>','<com.android.server.am.UserController: android.os.Handler access$100(com.android.server.am.UserController)>','<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.InstantAppRegistry access$5300(com.android.server.pm.PackageManagerService)>','<com.android.server.NativeDaemonConnector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.EventLogTags: void writeUnknownSourcesEnabled(int)>','<com.android.server.am.ActivityManagerService: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>','<com.android.server.am.ActivityManagerService: void dumpDbInfo(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.SystemService: void onSwitchUser(int)>','<com.android.server.wm.TaskStack: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>','<com.android.server.connectivity.Tethering: boolean access$800(com.android.server.connectivity.Tethering)>','<com.android.server.wm.AppWindowContainerController: void removeStartingWindow()>','<com.android.server.pm.UserManagerService$LocalService: void setUserManaged(int,boolean)>','<com.android.server.pm.InstantAppRegistry: java.io.File access$000(android.content.pm.PackageParser$Package,int)>','<com.android.server.pm.PackageManagerService: void access$700(com.android.server.pm.PackageManagerService,java.lang.String,boolean,java.util.ArrayList,int)>','<com.android.server.pm.PackageManagerService$OnPermissionChangeListeners: void <init>(android.os.Looper)>','<com.android.server.am.ActivityStarter: void setWindowManager(com.android.server.wm.WindowManagerService)>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack access$300(com.android.server.wm.DisplayContent)>','<com.android.server.am.ActivityManagerService$12: void onDismissSucceeded()>','<com.android.server.wm.WindowState: android.graphics.Rect getDisplayFrameLw()>','<com.android.server.connectivity.tethering.OffloadController: void removeDownstreamInterface(java.lang.String)>','<com.android.server.LocationManagerService: void access$1200(com.android.server.LocationManagerService)>','<com.android.server.am.LockTaskNotify$H: void handleMessage(android.os.Message)>','<com.android.server.wm.PinnedStackController: void registerPinnedStackListener(android.view.IPinnedStackListener)>','<com.android.server.wm.WindowManagerService: void setOverscan(int,int,int,int,int)>','<com.android.server.wm.WindowManagerService: void enableScreenIfNeeded()>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByClass(android.content.ComponentName,int)>','<com.android.server.pm.PackageSettingBase: java.lang.String getLastDisabledAppCaller(int)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.LockTaskNotify access$402(com.android.server.am.ActivityStackSupervisor,com.android.server.am.LockTaskNotify)>','<com.android.server.pm.PackageManagerShellCommand$3: void <init>(com.android.server.pm.PackageManagerShellCommand)>','<com.android.server.pm.PackageManagerService$IFVerificationParams: void <init>(android.content.pm.PackageParser$Package,boolean,int,int)>','<com.android.server.pm.Settings: void writeDomainVerificationsLPr(org.xmlpull.v1.XmlSerializer,android.content.pm.IntentFilterVerificationInfo)>','<com.android.server.am.UserController$Injector: com.android.server.am.ActivityStackSupervisor getActivityStackSupervisor()>','<com.android.server.SystemServerInitThreadPool: void <init>()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean,java.lang.String)>','<com.android.server.wm.Session: boolean outOfMemory(android.view.IWindow)>','<com.android.server.NetworkManagementService: void setGlobalAlert(long)>','<com.android.server.pm.Installer: boolean mergeProfiles(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: java.lang.String cidFromCodePath(java.lang.String)>','<com.android.server.am.AppErrorDialog: void access$000(com.android.server.am.AppErrorDialog,int)>','<com.android.server.am.ActivityManagerService: void startLockTaskModeById(int)>','<com.android.server.am.ActivityManagerService$Lifecycle: com.android.server.am.ActivityManagerService getService()>','<com.android.server.am.ActivityStack: boolean finishActivityAffinityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService: byte[] getInstantAppCookie(java.lang.String,int)>','<com.android.server.connectivity.NetworkMonitor: android.util.LocalLog$ReadOnlyLocalLog getValidationLogs()>','<com.android.server.am.ActivityManagerService$GrantUri: java.lang.String toString()>','<com.android.server.pm.PackageInstallerService: void systemReady()>','<com.android.server.audio.AudioService: void disconnectHeadset()>','<com.android.server.NetworkManagementService: android.util.SparseBooleanArray access$2500(com.android.server.NetworkManagementService)>','<com.android.server.pm.KeySetManagerService$PublicKeyHandle: void incrRefCountLPw()>','<com.android.server.wm.DragState: void unregister()>','<com.android.server.AlarmManagerService$Batch: boolean hasWakeups()>','<com.android.server.pm.PackageUsage: void readInternal(java.lang.Object)>','<com.android.server.wm.WindowManagerService$LocalService: boolean isKeyguardLocked()>','<com.android.server.power.PowerManagerService$BinderService: boolean isLightDeviceIdleMode()>','<com.android.server.connectivity.Tethering$TetherState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.wm.AppWindowContainerController: void notifyAppResumed(boolean)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: boolean doRename(int,android.content.pm.PackageParser$Package,java.lang.String)>','<com.android.server.audio.AudioService: java.lang.Boolean access$4400(com.android.server.audio.AudioService)>','<com.android.server.pm.UserManagerService: void access$1400(com.android.server.pm.UserManagerService,int)>','<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering access$400(com.android.server.ConnectivityService)>','<com.android.server.wm.WindowManagerService: void setForceResizableTasks(boolean)>','<com.android.server.ServiceThread: void run()>','<com.android.server.pm.PackageSetting: boolean isSharedUser()>','<com.android.server.wm.UnknownAppVisibilityController: java.lang.String getDebugMessage()>','<com.android.server.InputMethodManagerService$StartInputHistory$Entry: void set(com.android.server.InputMethodManagerService$StartInputInfo)>','<com.android.server.audio.AudioService$MyDisplayStatusCallback: void <init>(com.android.server.audio.AudioService,com.android.server.audio.AudioService$1)>','<com.android.server.statusbar.StatusBarManagerService: void shutdown()>','<com.android.server.audio.AudioService: boolean access$8500(com.android.server.audio.AudioService)>','<com.android.server.wm.AppWindowToken: boolean transferStartingWindow(android.os.IBinder)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void getForwardedStats(java.lang.String,android.hardware.tetheroffload.control.V1_0.IOffloadControl$getForwardedStatsCallback)>','<com.android.server.wm.DimLayerController$DimLayerState: void <init>(com.android.server.wm.DimLayerController$1)>','<com.android.server.am.ActivityManagerService: int getUidStateLocked(int)>','<com.android.server.usb.UsbDeviceManager: java.lang.String[] access$900(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.TaskRecord finishTopRunningActivityLocked(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void <init>(com.android.server.wm.WallpaperController$1)>','<com.android.server.input.InputManagerService$7: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.location.GnssLocationProvider: boolean access$4000(int,int)>','<com.android.server.DeviceIdleController: void exitForceIdleLocked()>','<com.android.server.usb.descriptors.UsbInterfaceDescriptor: void <init>(int,byte)>','<com.android.server.pm.PackageManagerService: void access$1700(com.android.server.pm.PackageManagerService,android.os.storage.VolumeInfo)>','<com.android.server.net.NetworkPolicyManagerService: void addUidPolicy(int,int)>','<com.android.server.location.GnssLocationProvider$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord topRunningActivityLocked()>','<com.android.server.wm.RootWindowContainer: void getDisplaysInFocusOrder(android.util.SparseIntArray)>','<com.android.server.am.UserController$Injector: boolean isRuntimeRestarted()>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>','<com.android.server.pm.UserManagerService$LocalService: void setUserIcon(int,android.graphics.Bitmap)>','<com.android.server.am.ActivityRecord: boolean isFocusable()>','<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.EventLogTags: void writeAmUidActive(int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void removeService(android.content.pm.PackageParser$Service)>','<com.android.server.AnyMotionDetector$RunningSignalStats: float getEnergy()>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: long getFastestIntervalMs()>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothA2dp access$3600(com.android.server.audio.AudioService)>','<com.android.server.location.GeocoderProxy: com.android.server.location.GeocoderProxy createAndBind(android.content.Context,int,int,int,android.os.Handler)>','<com.android.server.audio.AudioService$AudioSystemThread: void <init>(com.android.server.audio.AudioService)>','<com.android.server.wm.AppWindowToken: void requestUpdateWallpaperIfNeeded()>','<com.android.server.pm.PackageManagerService$3: void <init>()>','<com.android.server.wm.WindowManagerService$4: int getServiceType()>','<com.android.server.am.ActivityManagerService: boolean refContentProvider(android.os.IBinder,int,int)>','<com.android.server.usb.UsbDeviceManager: boolean access$702(com.android.server.usb.UsbDeviceManager,boolean)>','<android.hardware.configstore.V1_0.OptionalUInt64: void writeToParcel(android.os.HwParcel)>','<com.android.server.wm.WindowState: void forceWindowsScaleableInTransaction(boolean)>','<android.hardware.configstore.V1_0.OptionalUInt64: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ContentProviderConnection incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)>','<com.android.server.wm.AppTransition: boolean isNextThumbnailTransitionScaleUp()>','<com.android.server.InputMethodManagerService: void updateInputMethodsFromSettingsLocked(boolean)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.Watchdog: void setAllowRestart(boolean)>','<com.android.server.SystemServiceManager: void startService(com.android.server.SystemService)>','<com.android.server.am.ActivityRecord: void removeResultsLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void access$200(com.android.server.connectivity.tethering.UpstreamNetworkMonitor,android.net.Network,android.net.LinkProperties)>','<com.android.server.input.InputManagerService: boolean access$400(java.util.Locale,java.util.Locale)>','<com.android.server.wm.DisplayContent: int taskIdFromPoint(int,int)>','<com.android.server.connectivity.tethering.OffloadController$1: void onSupportAvailable()>','<com.android.server.am.ActivityManagerService: void logAppTooSlow(com.android.server.am.ProcessRecord,long,java.lang.String)>','<com.android.server.location.GnssLocationProvider: android.os.Handler access$2900(com.android.server.location.GnssLocationProvider)>','<com.android.server.connectivity.NetworkAgentInfo$LingerTimer: int compareTo(com.android.server.connectivity.NetworkAgentInfo$LingerTimer)>','<com.android.server.location.GnssLocationProvider$12: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>','<com.android.server.am.ActivityStackSupervisor: void updateUserStackLocked(int,com.android.server.am.ActivityStack)>','<com.android.server.ConnectivityService: void access$4600(com.android.server.ConnectivityService,int)>','<com.android.server.wm.WindowState: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: void removeActiveDownstream(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>','<com.android.server.am.ActivityStartInterceptor: void intercept(android.content.Intent,android.content.pm.ResolveInfo,android.content.pm.ActivityInfo,java.lang.String,com.android.server.am.TaskRecord,int,int,android.app.ActivityOptions)>','<com.android.server.connectivity.NetworkMonitor: boolean access$1302(com.android.server.connectivity.NetworkMonitor,boolean)>','<com.android.server.power.PowerManagerService: void access$3100(java.lang.String)>','<com.android.server.power.PowerManagerService$LocalService: void setUserInactiveOverrideFromWindowManager()>','<com.android.server.audio.AudioService: boolean loadSoundEffects()>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: void handleMessage(android.os.Message)>','<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskThumbnail getTaskThumbnailLocked()>','<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>','<com.android.server.InputMethodManagerService: boolean hideCurrentInputLocked(int,android.os.ResultReceiver)>','<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,android.content.pm.PackageParser$PackageParserException)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void dump(java.io.PrintWriter)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int,boolean)>','<com.android.server.wm.WindowState: android.content.res.Configuration getConfiguration()>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo access$7600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting,int,int)>','<com.android.server.pm.Settings: void readDefaultAppsLPw(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.pm.dex.DexManager: void notifyPackageInstalled(android.content.pm.PackageInfo,int)>','<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement(boolean)>','<com.android.server.pm.PackageManagerService$PackageParserCallback: boolean hasFeature(java.lang.String)>','<com.android.server.am.PendingIntentRecord: void send(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>','<com.android.server.location.GnssLocationProvider: boolean isSupported()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void registerAsService(java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void ping()>','<com.android.server.NetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>','<com.android.server.NetworkManagementService: void registerNetworkActivityListener(android.os.INetworkActivityListener)>','<com.android.server.power.PowerManagerService: void access$5400(com.android.server.power.PowerManagerService,java.io.PrintWriter)>','<com.android.server.LocationManagerService: void reportLocationBatch(java.util.List)>','<android.net.ip.RouterAdvertisementDaemon$RaParams: android.net.ip.RouterAdvertisementDaemon$RaParams getDeprecatedRaParams(android.net.ip.RouterAdvertisementDaemon$RaParams,android.net.ip.RouterAdvertisementDaemon$RaParams)>','<com.android.server.connectivity.NetworkMonitor: com.android.internal.util.State access$1200(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.connectivity.Tethering: boolean hasTetherableConfiguration()>','<com.android.server.pm.KeySetHandle: int getRefCountLPr()>','<com.android.server.audio.AudioService$SetModeDeathHandler: void binderDied()>','<com.android.server.audio.AudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.wm.PinnedStackController: int access$502(com.android.server.wm.PinnedStackController,int)>','<com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver: void onInputEvent(android.view.InputEvent,int)>','<com.android.server.wm.WindowStateAnimator: void updateLayerStackInTransaction()>','<com.android.server.firewall.IntentFirewall: java.io.File getRulesDir()>','<com.android.server.AlarmManagerService: void setWakelockWorkSource(android.app.PendingIntent,android.os.WorkSource,int,java.lang.String,int,boolean)>','<com.android.server.connectivity.NetworkMonitor$DefaultState: boolean processMessage(android.os.Message)>','<com.android.server.am.UriPermission: boolean takePersistableModes(int)>','<com.android.server.am.PreBootBroadcaster$1: void handleMessage(android.os.Message)>','<com.android.server.am.CompatModeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: com.android.server.connectivity.NetworkAgentInfo getNai()>','<com.android.server.am.ActivityManagerService$UiHandler: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityManagerService: void printOomLevel(java.io.PrintWriter,java.lang.String,int)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$500(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.InputMethodManagerService: void clearClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>','<com.android.server.wm.TaskStack: boolean checkCompleteDeferredRemoval()>','<com.android.server.firewall.SenderFilter$4: void <init>()>','<com.android.server.connectivity.Tethering: com.android.internal.util.StateMachine access$500(com.android.server.connectivity.Tethering)>','<com.android.server.wm.WindowManagerService: int watchRotation(android.view.IRotationWatcher,int)>','<android.hardware.configstore.V1_0.OptionalBool: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>','<com.android.server.am.ActivityManagerShellCommand: int runCrash(java.io.PrintWriter)>','<com.android.server.am.ActivityManagerService: void killAllBackgroundProcesses()>','<com.android.server.wm.WindowManagerService: void showStrictModeViolation(boolean)>','<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>','<com.android.server.pm.PackageManagerService: boolean access$5100(com.android.server.pm.PackageManagerService,java.lang.String,int)>','<com.android.server.net.NetworkStatsService: void setUidForeground(int,boolean)>','<com.android.server.am.AppWaitingForDebuggerDialog: void onStop()>','<com.android.server.am.ActivityManagerService$LocalService: void notifyDockedStackMinimizedChanged(boolean)>','<com.android.server.am.ActiveServices$ServiceDumper: void dumpWithClient()>','<com.android.server.wm.AppWindowAnimator: int getTransitFlags()>','<com.android.server.usb.UsbMidiDevice$InputReceiverProxy: void onFlush()>','<com.android.server.connectivity.Tethering$TetherMasterSM: void setDnsForwarders(android.net.Network,android.net.LinkProperties)>','<com.android.server.NetworkManagementService: java.lang.Object access$1700(com.android.server.NetworkManagementService)>','<com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler: void <init>(com.android.server.wm.PinnedStackController,com.android.server.wm.PinnedStackController$1)>','<com.android.server.connectivity.NetworkMonitor: android.content.Context access$800(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.EventLogTags: void writeRescueSuccess(int)>','<android.net.INetd$Stub$Proxy: void setProcSysNet(int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.net.NetworkStatsService$3: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.am.ActivityStackSupervisor: void setLaunchSource(int)>','<com.android.server.connectivity.NetworkMonitor: android.os.Handler access$1500(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.pm.CrossProfileIntentResolver: void sortResults(java.util.List)>','<com.android.server.am.ActivityManagerService: void notifyPinnedStackAnimationEnded()>','<com.android.server.wm.InputMonitor: void notifyCameraLensCoverSwitchChanged(long,boolean)>','<com.android.server.am.ActivityStarter: boolean isValidLaunchStackId(int,int,com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void show()>','<com.android.server.TelephonyRegistry: void notifyDataConnectionForSubscriber(int,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>','<com.android.server.wm.TaskPositioner: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.TaskPositioner)>','<com.android.server.connectivity.Tethering: void access$3400(com.android.server.connectivity.Tethering,java.lang.String,com.android.server.connectivity.tethering.TetherInterfaceStateMachine,int,int)>','<com.android.server.pm.Installer$InstallerException: com.android.server.pm.Installer$InstallerException from(java.lang.Exception)>','<com.android.server.wm.AppWindowToken: boolean setVisibility(android.view.WindowManager$LayoutParams,boolean,int,boolean,boolean)>','<com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLP(android.os.Bundle,android.util.AtomicFile)>','<com.android.server.wm.TaskStack: void onAllWindowsDrawn()>','<android.hardware.usb.V1_0.PortRoleType: void <init>()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: void <init>(android.content.Context)>','<com.android.server.wm.DisplayContent: void dumpWindowAnimators(java.io.PrintWriter,java.lang.String)>','<com.android.server.audio.MediaFocusControl: boolean mustNotifyFocusOwnerOnDuck()>','<com.android.server.wm.PinnedStackController$PinnedStackListenerDeathHandler: void binderDied()>','<android.hidl.base.V1_0.IBase$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void setHALInstrumentation()>','<com.android.server.net.NetworkPolicyManagerService$13: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>','<com.android.server.am.UserController: int[] getUserIds()>','<com.android.server.LocationManagerService$4: void onUidImportance(int,int)>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int)>','<com.android.server.connectivity.Vpn$3: void interfaceRemoved(java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$5: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.NetworkManagementService: android.util.SparseIntArray access$2200(com.android.server.NetworkManagementService)>','<com.android.server.wm.TaskSnapshotPersister: void setPaused(boolean)>','<com.android.server.location.GeofenceProxy$3: void <init>(com.android.server.location.GeofenceProxy)>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.WindowState computeFocusedWindow()>','<com.android.server.wm.WindowState: android.graphics.Rect getGivenContentInsetsLw()>','<com.android.server.location.LocationBlacklist: void <clinit>()>','<android.os.IInstalld$Stub$Proxy: boolean isQuotaSupported(java.lang.String)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: boolean initOffloadConfig()>','<com.android.server.wm.DimLayerController: void removeDimLayerUser(com.android.server.wm.DimLayer$DimLayerUser)>','<com.android.server.pm.UserManagerService: java.lang.Object access$500(com.android.server.pm.UserManagerService)>','<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()>','<com.android.server.net.NetworkPolicyManagerService$9: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.ActivityManagerService: void performAppGcLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityManagerService$DumpStackFileObserver: void onEvent(int,java.lang.String)>','<com.android.server.wm.RootWindowContainer: boolean reclaimSomeSurfaceMemory(com.android.server.wm.WindowStateAnimator,java.lang.String,boolean)>','<com.android.server.wm.WindowManagerService: float access$902(com.android.server.wm.WindowManagerService,float)>','<com.android.server.audio.FocusRequester: void handleFocusGain(int)>','<com.android.server.am.AppErrorDialog$1: void <init>(com.android.server.am.AppErrorDialog)>','<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>','<com.android.server.ConnectivityService: android.net.Network getActiveNetwork()>','<com.android.server.wm.WindowState: boolean hasDrawnLw()>','<com.android.server.wm.DisplayContent: boolean updateRotationUnchecked(boolean)>','<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy$InputConsumer createInputConsumer(android.os.Looper,java.lang.String,android.view.InputEventReceiver$Factory)>','<com.android.server.power.ShutdownThread$1: void onClick(android.content.DialogInterface,int)>','<com.android.server.audio.AudioService$VolumeStreamState: int access$400(com.android.server.audio.AudioService$VolumeStreamState)>','<com.android.server.am.ActivityManagerService: void dumpRecentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.TelephonyRegistry$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PackageSettingBase: void writeUsersInfoToProto(android.util.proto.ProtoOutputStream,long)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void destroy()>','<com.android.server.wm.BoundsAnimationController: void animateBounds(com.android.server.wm.BoundsAnimationTarget,android.graphics.Rect,android.graphics.Rect,int,int,boolean,boolean)>','<com.android.server.wm.AppWindowAnimator: boolean stepAnimationLocked(long)>','<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService$LocalService: void onWakefulnessChanged(int)>','<com.android.server.AppOpsService$2: int getPackageTrustedToInstallApps(java.lang.String,int)>','<com.android.server.net.NetworkStatsService$4: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.WindowState: void setDrawnStateEvaluated(boolean)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: boolean allowFilterResult(com.android.server.firewall.IntentFirewall$FirewallIntentFilter,java.util.List)>','<com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>','<com.android.server.wm.WindowManagerService: void restorePointerIconLocked(com.android.server.wm.DisplayContent,float,float)>','<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>','<com.android.server.am.ActivityManagerService$Injector: android.os.Handler getUiHandler(com.android.server.am.ActivityManagerService)>','<com.android.server.am.ActivityStackSupervisor: void pauseChildStacks(com.android.server.am.ActivityRecord,boolean,boolean,com.android.server.am.ActivityRecord,boolean)>','<com.android.server.wm.WindowState: boolean isInputMethodWindow()>','<com.android.server.InputMethodManagerService: void unbindCurrentClientLocked(int)>','<com.android.server.AlarmManagerService$PriorityClass: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>','<com.android.server.connectivity.PermissionMonitor: void access$100(com.android.server.connectivity.PermissionMonitor,int)>','<com.android.server.ConnectivityService: com.android.server.connectivity.MockableSystemProperties getSystemProperties()>','<com.android.server.DeviceIdleController: int access$000(com.android.server.DeviceIdleController)>','<com.android.server.wm.DisplayContent: void computeScreenConfiguration(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>','<com.android.server.statusbar.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>','<com.android.server.usb.UsbDeviceManager: boolean access$1300(com.android.server.usb.UsbDeviceManager)>','<com.android.server.wm.TaskSnapshotPersister: android.util.ArraySet access$1000(com.android.server.wm.TaskSnapshotPersister)>','<android.os.IInstalld$Stub$Proxy: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>','<com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread: void run()>','<com.android.server.wm.DisplayContent: android.graphics.GraphicBuffer screenshotApplicationsToBuffer(android.os.IBinder,int,int,boolean,float,boolean,boolean)>','<com.android.server.usb.descriptors.UsbACOutputTerminal: byte getSourceID()>','<com.android.server.net.NetworkStatsCollection: void clearDirty()>','<android.os.IInstalld$Stub$Proxy: java.lang.String getInterfaceDescriptor()>','<com.android.server.wm.AppWindowAnimator: void setDummyAnimation()>','<com.android.server.connectivity.Vpn: com.android.server.connectivity.Vpn$LegacyVpnRunner access$300(com.android.server.connectivity.Vpn)>','<com.android.server.audio.AudioService$AudioPolicyProxy: void release()>','<com.android.server.am.ActivityStackSupervisor: boolean moveFocusableActivityStackToFrontLocked(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.am.ActivityManagerService$LocalService: int getUidProcessState(int)>','<com.android.server.am.BatteryStatsService: void noteStartVideo(int)>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: void <init>()>','<com.android.server.pm.PackageInstallerService$InternalCallback$1: void run()>','<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord)>','<com.android.server.location.GnssLocationProvider$ProviderHandler: void <init>(com.android.server.location.GnssLocationProvider,android.os.Looper)>','<com.android.server.AlarmManagerService$3: int compare(com.android.server.AlarmManagerService$FilterStats,com.android.server.AlarmManagerService$FilterStats)>','<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: void setIsMinimized(boolean)>','<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>','<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>','<com.android.server.wm.AppTransition: android.view.animation.Animation prepareThumbnailAnimationWithDuration(android.view.animation.Animation,int,int,long,android.view.animation.Interpolator)>','<com.android.server.am.ActivityManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.firewall.IntentFirewall$FirewallIntentFilter)>','<com.android.server.pm.PackageManagerService: boolean isUserRestricted(int,java.lang.String)>','<com.android.server.AlarmManagerService$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.AppWindowToken: boolean isFirstChildWindowGreaterThanSecond(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>','<com.android.server.NetworkManagementService: void access$1300(com.android.server.NetworkManagementService,java.lang.String,android.net.LinkAddress)>','<com.android.server.pm.PackageManagerService$InstallArgs: boolean isFwdLocked()>','<com.android.server.power.PowerManagerService: void access$2100(com.android.server.power.PowerManagerService)>','<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsRecorder access$200(com.android.server.net.NetworkStatsService)>','<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>','<com.android.server.wm.WindowManagerService: void markForSeamlessRotation(com.android.server.wm.WindowState,boolean)>','<com.android.server.am.ActivityManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>','<com.android.server.audio.AudioService: void disableRingtoneSync(int)>','<com.android.server.net.NetworkPolicyManagerService$16: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.UserManagerService: boolean hasBaseUserRestriction(java.lang.String,int)>','<com.android.server.wm.DisplayContent: boolean forAllImeWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.wm.WallpaperController: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$ParcelableCrashInfo)>','<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)>','<com.android.server.am.ActivityManagerService$Injector: void <init>()>','<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: int size()>','<com.android.server.usb.MtpNotificationManager: void hideNotification(int)>','<com.android.server.wm.WindowSurfaceController: void destroyInTransaction()>','<com.android.server.audio.AudioService$AudioServiceInternal: void setAccessibilityServiceUids(android.util.IntArray)>','<com.android.server.pm.dex.DexManager: void <clinit>()>','<com.android.server.am.ActivityManagerService: void notifyPackageUse(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1400(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService: void scheduleWritePackageRestrictionsLocked(android.os.UserHandle)>','<com.android.server.audio.AudioService: void setStreamVolume(int,int,int,java.lang.String)>','<com.android.server.pm.InstructionSets: void <clinit>()>','<com.android.server.TelephonyRegistry: void notifyPreciseDataConnectionFailed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void setWindowCrop(android.graphics.Rect)>','<com.android.server.pm.PackageInstallerService$2: void run()>','<com.android.server.pm.InstructionSets: java.lang.String getPreferredInstructionSet()>','<com.android.server.connectivity.NetworkAgentInfo: int numForegroundNetworkRequests()>','<com.android.server.wm.TaskPositioner: java.lang.String toShortString()>','<com.android.server.wm.DragState: com.android.server.input.InputWindowHandle getInputWindowHandle()>','<com.android.server.am.ActivityRecord: boolean handleAlreadyVisible()>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(int,java.lang.String)>','<com.android.server.pm.PackageInstallerSession: void removeSplit(java.lang.String)>','<com.android.server.wm.TaskStack: void getBoundsForNewConfiguration(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: boolean compareStrings(java.lang.CharSequence,java.lang.CharSequence)>','<com.android.server.location.GnssLocationProvider$NetworkLocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<com.android.server.am.ActivityRecord: boolean supportsFreeform()>','<com.android.server.usb.UsbDeviceManager$1: void onUEvent(android.os.UEventObserver$UEvent)>','<com.android.server.am.ActivityStack: com.android.server.wm.StackWindowController getWindowContainerController()>','<com.android.server.wm.PointerEventDispatcher: void registerInputEventListener(android.view.WindowManagerPolicy$PointerEventListener)>','<com.android.server.wm.PinnedStackController: boolean isValidPictureInPictureAspectRatio(float)>','<com.android.server.am.ActivityRecord: int getUid()>','<com.android.server.wm.DimLayer: void destroySurface()>','<com.android.server.am.UriPermissionOwner: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.connectivity.Vpn: boolean setUnderlyingNetworks(android.net.Network[])>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: void binderDied()>','<com.android.server.am.ActivityStartInterceptor: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ActivityStackSupervisor)>','<com.android.server.ConnectivityService: void startCaptivePortalApp(android.net.Network)>','<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: java.util.ArrayList getHashChain()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssNavigationMessageProvider getGnssNavigationMessageProvider()>','<com.android.server.pm.PersistentPreferredActivity: void <init>(android.content.IntentFilter,android.content.ComponentName)>','<android.os.IInstalld$Stub$Proxy: void destroyUserData(java.lang.String,int,int)>','<com.android.server.IntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>','<com.android.server.wm.DockedStackDividerController: int getContentInsets()>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void register(android.content.pm.IPackageMoveObserver)>','<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>','<com.android.server.connectivity.NetworkDiagnostics$Measurement: java.lang.String toString()>','<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getUnitID()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: java.util.ArrayList getHashChain()>','<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,int,java.lang.String,android.content.IIntentReceiver,int[])>','<com.android.server.EventLogTags: void writeDeviceIdleWakeFromIdle(int,java.lang.String)>','<com.android.server.am.ActivityManagerService: int sendIntentSender(android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>','<com.android.server.location.GnssLocationProvider$BackOff: long nextBackoffMillis()>','<android.net.INetd$Stub$Proxy: void interfaceAddAddress(java.lang.String,java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerShellCommand: int onCommand(java.lang.String)>','<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>','<com.android.server.wm.AppWindowToken: java.lang.String toString()>','<android.net.util.MultinetworkPolicyTracker: void start()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowContainer: void removeImmediately()>','<com.android.server.pm.UserManagerService$LocalService: void setUserState(int,int)>','<com.android.server.InputMethodManagerService$2: void executeMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: void updateCpuStatsNow()>','<com.android.server.location.MockProvider: void setLocation(android.location.Location)>','<com.android.server.pm.UserManagerService: int getNextAvailableId()>','<com.android.server.am.AppErrors: boolean isInterestingForBackgroundTraces(com.android.server.am.ProcessRecord)>','<com.android.server.usb.UsbMidiDevice: com.android.server.usb.UsbMidiDevice create(android.content.Context,android.os.Bundle,int,int)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte getNumOutputs()>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: void run()>','<com.android.server.usb.descriptors.UsbASFormat: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.ByteStream,int,byte,byte,byte)>','<com.android.server.pm.PackageManagerService$PostInstallData: void <init>(com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>','<com.android.server.InputMethodManagerService$1: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.connectivity.NetworkDiagnostics: void <init>(android.net.Network,android.net.LinkProperties,long)>','<com.android.server.connectivity.tethering.SimChangeListener$SimChangeBroadcastReceiver: void <init>(com.android.server.connectivity.tethering.SimChangeListener,int)>','<com.android.server.AppOpsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.NsdService$NsdStateMachine$1: void onChange(boolean)>','<com.android.server.wm.TaskStack: void <init>(com.android.server.wm.WindowManagerService,int)>','<com.android.server.am.AppErrors: boolean isBadProcessLocked(android.content.pm.ApplicationInfo)>','<com.android.server.pm.ParallelPackageParser$ParseResult: java.lang.String toString()>','<com.android.server.LocationManagerService: int getGnssYearOfHardware()>','<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>','<com.android.server.usb.UsbHostManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbSettingsManager)>','<com.android.server.am.ActivityManagerService: void moveStackToDisplay(int,int)>','<com.android.server.InputMethodManagerService$StartInputHistory: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.NsdService$NsdSettings$1: void <init>(android.content.ContentResolver)>','<com.android.server.am.ActivityManagerService$ProcessChangeItem: void <init>()>','<com.android.server.wm.WindowManagerService$LocalService: boolean isKeyguardShowingAndNotOccluded()>','<com.android.server.wm.InputMonitor: int getPointerLayer()>','<com.android.server.connectivity.Vpn: android.net.NetworkInfo getNetworkInfo()>','<com.android.server.NetworkManagementService: void startInterfaceForwarding(java.lang.String,java.lang.String)>','<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<android.hardware.usb.V1_0.IUsb$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.pm.PackageSettingBase: void setEnabledComponentsCopy(android.util.ArraySet,int)>','<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>','<com.android.server.am.TaskChangeNotificationController: void notifyActivityPinned(java.lang.String,int)>','<com.android.server.usb.descriptors.UsbACHeader: void <init>(int,byte,byte,byte)>','<com.android.server.net.NetworkPolicyManagerService: int getCycleDayFromCarrierConfig(android.os.PersistableBundle,int)>','<com.android.server.audio.AudioService: boolean isHdmiSystemAudioSupported()>','<com.android.server.SystemService: void onCleanupUser(int)>','<com.android.server.pm.UserRestrictionsUtils: boolean canProfileOwnerChange(java.lang.String,int)>','<com.android.server.am.BroadcastQueue$1: void run()>','<com.android.server.usb.UsbService: void systemReady()>','<com.android.server.wm.TaskStack: void setAnimationBackground(com.android.server.wm.WindowStateAnimator,int)>','<com.android.server.pm.Installer: void moveAb(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowState: boolean isFocused()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getDevPersistBytes(long)>','<android.hardware.configstore.V1_0.OptionalInt64: void <init>()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Rect access$600(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.am.BatteryStatsService: void noteStopGps(int)>','<com.android.server.connectivity.NetworkMonitor$ValidationStage: com.android.server.connectivity.NetworkMonitor$ValidationStage[] values()>','<com.android.server.pm.PackageManagerService: void scheduleWritePackageRestrictionsLocked(int)>','<com.android.server.pm.UserManagerService: boolean isManagedProfile(int)>','<com.android.server.am.ActivityStarter: int startActivities(android.app.IApplicationThread,int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int,java.lang.String)>','<com.android.server.AlarmManagerService$InFlight: java.lang.String toString()>','<com.android.server.am.ActivityRecord: void startLaunchTickingLocked()>','<com.android.server.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.SystemServiceManager: void setRuntimeRestarted(boolean)>','<com.android.server.power.Notifier$3: void <init>(com.android.server.power.Notifier,int)>','<com.android.server.usb.UsbPortManager: void access$500(com.android.server.usb.UsbPortManager,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.wm.WindowState: android.graphics.Rect getOverscanFrameLw()>','<com.android.server.power.ShutdownThread: void run()>','<com.android.server.wm.WindowManagerService: void setPipVisibility(boolean)>','<com.android.server.am.UserController$Injector: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>','<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>','<com.android.server.AlarmManagerService$Constants: void onChange(boolean,android.net.Uri)>','<com.android.server.connectivity.NetworkMonitor$MaybeNotifyState: boolean processMessage(android.os.Message)>','<com.android.server.power.PowerManagerService$PowerManagerHandler: void <init>(com.android.server.power.PowerManagerService,android.os.Looper)>','<com.android.server.connectivity.NetworkAgentInfo: void dumpLingerTimers(java.io.PrintWriter)>','<com.android.server.pm.PackageInstallerService: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.am.ActivityManagerService: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>','<com.android.server.power.PowerManagerService: void uidActiveInternal(int)>','<com.android.server.net.NetworkPolicyManagerService: void updatePowerSaveWhitelistUL()>','<com.android.server.net.NetworkStatsObservers: android.os.Looper getHandlerLooperLocked()>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.connectivity.NetworkMonitor$ValidatedState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(com.android.server.NativeDaemonConnector$Command)>','<com.android.server.am.ActivityManagerShellCommand: int getStepSize(int,int,int,boolean)>','<com.android.server.am.TaskRecord: boolean resize(android.graphics.Rect,int,boolean,boolean)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreCopy()>','<com.android.server.am.RecentTasks: void addLocked(com.android.server.am.TaskRecord)>','<com.android.server.wm.WindowState: void setWillReplaceWindow(boolean)>','<com.android.server.firewall.CategoryFilter: void <clinit>()>','<com.android.server.location.LocationBasedCountryDetector$1: void onProviderEnabled(java.lang.String)>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.NsdService$NsdSettings$1: boolean isEnabled()>','<com.android.server.pm.EphemeralResolverConnection$1$1: void <init>(com.android.server.pm.EphemeralResolverConnection$1,java.util.ArrayList)>','<com.android.server.location.GnssLocationProvider: java.lang.Object access$3400(com.android.server.location.GnssLocationProvider)>','<com.android.server.power.Notifier: void onWakefulnessChangeStarted(int,int)>','<com.android.server.pm.Settings: boolean hasOtherDisabledSystemPkgWithChildLPr(java.lang.String,java.lang.String)>','<com.android.server.power.PowerManagerService: boolean access$1700(com.android.server.power.PowerManagerService)>','<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle nonNull(android.os.Bundle)>','<com.android.server.am.ActivityManagerShellCommand: int runMoveTopActivityToPinnedStack(java.io.PrintWriter)>','<com.android.server.power.PowerManagerShellCommand: int onCommand(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.LockTaskNotify access$400(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.power.PowerManagerService$LocalService: void <init>(com.android.server.power.PowerManagerService,com.android.server.power.PowerManagerService$1)>','<com.android.server.am.ActivityManagerService: void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)>','<com.android.server.wm.TaskSnapshotPersister$1: void <init>(com.android.server.wm.TaskSnapshotPersister,java.lang.String)>','<com.android.server.pm.PermissionsState: int[] computeGids(int)>','<com.android.server.am.UserController: com.android.server.am.UserController$Injector access$000(com.android.server.am.UserController)>','<com.android.server.am.ActivityManagerService: boolean isProcessAliveLocked(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$200(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.util.ArrayMap access$2000(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.am.UnsupportedDisplaySizeDialog: void show()>','<android.hardware.usb.V1_1.PortStatus_1_1: void <init>()>','<com.android.server.wm.WindowState: int restoreSavedSurfaceForInterestingWindow()>','<com.android.server.input.InputManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.audio.AudioService: void setVibrateSetting(int,int)>','<com.android.server.wm.WindowState: void destroyOrSaveSurfaceUnchecked()>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: void <init>(boolean,int,java.lang.String)>','<com.android.server.connectivity.Vpn: int access$500(com.android.server.connectivity.Vpn,java.lang.String)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: java.lang.String access$1702(com.android.server.connectivity.tethering.TetherInterfaceStateMachine,java.lang.String)>','<com.android.server.TelephonyRegistry: void notifySignalStrengthForPhoneId(int,int,android.telephony.SignalStrength)>','<com.android.server.EventLogTags: void writeDeviceIdleOffComplete()>','<com.android.server.EventLogTags: void writeBackupTransportLifecycle(java.lang.String,int)>','<com.android.server.pm.PermissionsState: void <clinit>()>','<com.android.server.pm.CompilerStats: boolean read(java.io.Reader)>','<android.hardware.usb.V1_0.IUsb$Proxy: void setHALInstrumentation()>','<com.android.server.pm.InstantAppRegistry: boolean pruneInstalledInstantApps(long,long)>','<com.android.server.ConnectivityService: void access$3300(com.android.server.ConnectivityService,android.os.Message)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: java.lang.String toString()>','<com.android.server.usb.descriptors.UsbACEndpoint: byte getSubclass()>','<com.android.server.DeviceIdleController: void scheduleReportActiveLocked(java.lang.String,int)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord performClearTaskLocked(com.android.server.am.ActivityRecord,int)>','<com.android.server.ConnectivityService: void access$700(com.android.server.ConnectivityService,android.os.Message)>','<com.android.server.connectivity.NetworkMonitor$ValidatedState: void enter()>','<com.android.server.wm.WindowState: void sendAppVisibilityToClients()>','<com.android.server.am.BroadcastFilter: void <init>(android.content.IntentFilter,com.android.server.am.ReceiverList,java.lang.String,java.lang.String,int,int,boolean,boolean)>','<com.android.server.location.GnssLocationProvider: boolean access$1700(int)>','<com.android.server.wm.Session: void onWindowSurfaceVisibilityChanged(com.android.server.wm.WindowSurfaceController,boolean,int)>','<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$602(com.android.server.pm.PackageManagerService,com.android.internal.app.IMediaContainerService)>','<com.android.server.wm.WindowToken: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>','<com.android.server.wm.WindowManagerService: boolean outOfMemoryWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.server.am.ContentProviderRecord: void addExternalProcessHandleLocked(android.os.IBinder)>','<com.android.server.LocationManagerService: boolean startGnssBatch(long,boolean,java.lang.String)>','<com.android.server.LocationManagerService: int access$1500(com.android.server.LocationManagerService)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int,int)>','<com.android.server.ConnectivityService: void access$3500(com.android.server.ConnectivityService,android.app.PendingIntent,int)>','<com.android.server.AlarmManagerService$UidObserver: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.usb.UsbDeviceManager: void allowUsbDebugging(boolean,java.lang.String)>','<com.android.server.wm.ScreenRotationAnimation: boolean setRotationInTransaction(int,android.view.SurfaceSession,long,float,int,int)>','<com.android.server.EventLogTags: void writeDeviceIdle(int,java.lang.String)>','<com.android.server.am.AppErrorDialog: void onCreate(android.os.Bundle)>','<com.android.server.connectivity.Vpn: android.app.PendingIntent access$602(com.android.server.connectivity.Vpn,android.app.PendingIntent)>','<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>','<com.android.server.ConnectivityService: void access$4300(com.android.server.ConnectivityService,int)>','<com.android.server.audio.AudioService$SetModeDeathHandler: android.os.IBinder getBinder()>','<com.android.server.am.ActivityStackSupervisor: void setNextTaskIdForUserLocked(int,int)>','<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.wm.DimLayerController: void <init>(com.android.server.wm.DisplayContent)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void unduckUid(int,java.util.HashMap)>','<com.android.server.am.ActivityMetricsLogger: void <init>(com.android.server.am.ActivityStackSupervisor,android.content.Context)>','<com.android.server.am.ServiceRecord$StartItem: java.lang.String toString()>','<com.android.server.usb.UsbDebuggingManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.am.TaskRecord: void setTaskToReturnTo(com.android.server.am.ActivityRecord)>','<com.android.server.location.GnssLocationProvider: java.lang.String access$6000(com.android.server.location.GnssLocationProvider,int)>','<com.android.server.firewall.AndFilter$1: void <init>(java.lang.String)>','<com.android.server.input.InputManagerService: void access$1500(com.android.server.input.InputManagerService,android.hardware.display.DisplayViewport,android.hardware.display.DisplayViewport,java.util.List)>','<com.android.server.am.EventLogTags: void writeAmUidRunning(int)>','<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.AnyMotionDetector: void checkForAnyMotion()>','<com.android.server.pm.BackgroundDexOptService$2: void <init>(com.android.server.pm.BackgroundDexOptService,java.lang.String,com.android.server.pm.PackageManagerService,android.util.ArraySet,android.app.job.JobParameters)>','<com.android.server.wm.WindowState: boolean isVisibleOrAdding()>','<com.android.server.input.InputManagerService: boolean injectInputEvent(android.view.InputEvent,int)>','<com.android.server.statusbar.StatusBarManagerService$1: void toggleKeyboardShortcutsMenu(int)>','<com.android.server.power.PowerManagerService: void onBootPhase(int)>','<com.android.server.usb.UsbAlsaManager$1: void onEvent(int,java.lang.String)>','<com.android.server.am.IntentBindRecord: java.lang.String toString()>','<com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>','<com.android.server.pm.PackageManagerService$9: void run()>','<com.android.server.ConnectivityService: void access$3000(com.android.server.ConnectivityService,android.os.Messenger)>','<com.android.server.DeviceIdleController: java.lang.String[] getUserPowerWhitelistInternal()>','<com.android.server.am.ActivityManagerService: android.content.pm.PackageManagerInternal getPackageManagerInternalLocked()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$BaseServingState: boolean processMessage(android.os.Message)>','<com.android.server.wm.WindowHashMap: void <init>()>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void printMessageForState()>','<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>','<com.android.server.TelephonyRegistry: void notifyOemHookRawEventForSubscriber(int,byte[])>','<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager)>','<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)>','<com.android.server.ConnectivityService$LegacyTypeTracker: void update(com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.BoundsAnimationController: android.os.Handler access$100(com.android.server.wm.BoundsAnimationController)>','<com.android.server.pm.Settings: void removeUserLPw(int)>','<com.android.server.am.ActivityManagerService: void tempWhitelistUidLocked(int,long,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getReparentTargetStack(com.android.server.am.TaskRecord,int,boolean)>','<com.android.server.pm.PackageInstallerSession: void commit(android.content.IntentSender)>','<com.android.server.am.ActivityRecord: void createWindowContainer()>','<com.android.server.pm.UserDataPreparer: java.io.File getDataMiscCeDirectory(int)>','<com.android.server.statusbar.StatusBarManagerService: void disableForUser(int,android.os.IBinder,java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: void setUidPolicy(int,int)>','<com.android.server.InputMethodManagerService$ImmsBroadcastReceiver: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.wm.Task: com.android.server.wm.DisplayContent getDisplayContent()>','<com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>','<com.android.server.input.InputManagerService: int onShellCommand(com.android.server.input.InputManagerService$Shell,java.lang.String)>','<com.android.server.wm.WindowState: void updateLastInsetValues()>','<com.android.server.ConnectivityService: void access$000(java.lang.String)>','<com.android.server.wm.DisplayContent: void prepareWindowSurfaces()>','<com.android.server.ConnectivityService: void access$2900(com.android.server.ConnectivityService,com.android.server.ConnectivityService$NetworkFactoryInfo)>','<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: com.android.server.wm.WindowContainer get(int)>','<com.android.server.input.PersistentDataStore: boolean addKeyboardLayout(java.lang.String,java.lang.String)>','<com.android.server.AlarmManagerService$Constants: void start(android.content.ContentResolver)>','<com.android.server.pm.UserManagerService: android.os.IBinder access$200()>','<com.android.server.net.NetworkPolicyManagerService$17: boolean handleMessage(android.os.Message)>','<com.android.server.wm.WindowState: boolean canReceiveKeys()>','<com.android.server.input.InputManagerService: void setInputFilter(android.view.IInputFilter)>','<com.android.server.connectivity.tethering.TetheringConfiguration: boolean isBluetooth(java.lang.String)>','<com.android.server.wm.WindowState$UpdateReportedVisibilityResults: void reset()>','<com.android.server.NsdService: boolean access$000(com.android.server.NsdService)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack findStackBehind(com.android.server.am.ActivityStack)>','<com.android.server.am.ActivityManagerService: boolean isInLockTaskMode()>','<com.android.server.DeviceIdleController$BinderService: java.lang.String[] getSystemPowerWhitelist()>','<com.android.server.RescueParty$BootThreshold: void setCount(int)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void onAnimationUpdate(android.animation.ValueAnimator)>','<com.android.server.EventLogTags: void writeWatchdogVmstat(long,int,int,int,int,int)>','<com.android.server.EventLogTags: void writeWatchdogProcPss(java.lang.String,int,int)>','<com.android.server.TelephonyRegistry: void notifyVoLteServiceStateChanged(android.telephony.VoLteServiceState)>','<com.android.server.am.ActivityManagerService: boolean shutdown(int)>','<com.android.server.audio.AudioService: com.android.server.audio.MediaFocusControl access$8800(com.android.server.audio.AudioService)>','<com.android.server.wm.DisplayContent: void updateBaseDisplayMetrics(int,int,int)>','<com.android.server.pm.CrossProfileIntentResolver: com.android.server.pm.CrossProfileIntentFilter[] newArray(int)>','<com.android.server.NetworkManagementService: void createVirtualNetwork(int,boolean,boolean)>','<com.android.server.statusbar.StatusBarManagerService$1: void toggleRecentApps()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController: void onFrameShownStateChanged(boolean,boolean)>','<com.android.server.pm.PackageManagerService$ClearStorageConnection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getPacketSize()>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void duckUid(int,java.util.ArrayList)>','<com.android.server.am.ActivityManagerService$26: void run()>','<com.android.server.am.ActivityManagerService: void dumpHeapFinished(java.lang.String)>','<com.android.server.ConnectivityService: void releasePendingNetworkRequest(android.app.PendingIntent)>','<com.android.server.input.InputApplicationHandle: void finalize()>','<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService$17: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.SurfaceControlWithBackground: void destroy()>','<com.android.server.wm.Watermark: void drawIfNeeded()>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: void write(org.xmlpull.v1.XmlSerializer)>','<com.android.server.am.BatteryStatsService: void noteFlashlightOn(int)>','<com.android.server.am.TaskRecord: boolean isClearingToReuseTask()>','<com.android.server.am.ActivityStackSupervisor: android.os.IBinder access$700(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: void <init>(android.media.IRecordingConfigDispatcher)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.EventLogTags: void writeBatteryLevel(int,int,int)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>','<com.android.server.DeviceIdleController$LocalService: long getNotificationWhitelistDuration()>','<com.android.server.TelephonyRegistry: void notifyMessageWaitingChangedForPhoneId(int,int,boolean)>','<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>','<com.android.server.AlarmManagerService: boolean lookForPackageLocked(java.lang.String)>','<com.android.server.am.ActiveServices: void scheduleServiceTimeoutLocked(com.android.server.am.ProcessRecord)>','<com.android.server.audio.MediaFocusControl: void notifyExtPolicyCurrentFocusAsync(android.media.audiopolicy.IAudioPolicyCallback)>','<android.hardware.usb.V1_0.PortRole: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.pm.PackageManagerService$InstallArgs: int doPreCopy()>','<com.android.server.wm.TaskSnapshotController: void onAppRemoved(com.android.server.wm.AppWindowToken)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToEnabledImsServicesLPr(java.lang.String[],int)>','<com.android.server.am.ActivityStack: boolean isUidPresent(int)>','<com.android.server.am.BatteryStatsService: void notePackageUninstalled(java.lang.String)>','<com.android.server.connectivity.tethering.OffloadController$1: void onStoppedLimitReached()>','<com.android.server.AppOpsService: android.os.IBinder getToken(android.os.IBinder)>','<com.android.server.wm.AppWindowToken: boolean updateDrawnWindowStates(com.android.server.wm.WindowState)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void addKnownImePackageNameLocked(java.lang.String)>','<com.android.server.am.AppErrorResult: void set(int)>','<com.android.server.power.Notifier$5: void run()>','<com.android.server.DeviceIdleController: android.content.Intent access$900(com.android.server.DeviceIdleController)>','<android.os.IInstalld$Stub$Proxy: void createUserData(java.lang.String,int,int,int)>','<com.android.server.wm.WallpaperController: void hideWallpapers(com.android.server.wm.WindowState)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void <init>(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.am.ActivityStack: boolean isAttached()>','<com.android.server.firewall.IntentFirewall$RuleObserver: void <init>(com.android.server.firewall.IntentFirewall,java.io.File)>','<com.android.server.pm.PackageManagerService: void access$4900(com.android.server.pm.PackageManagerService,java.lang.String,int,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: int runStartActivity(java.io.PrintWriter)>','<com.android.server.LocationManagerService: void access$2400(com.android.server.LocationManagerService,com.android.server.LocationManagerService$Receiver)>','<com.android.server.pm.PackageDexOptimizer: void <init>(com.android.server.pm.Installer,java.lang.Object,android.content.Context,java.lang.String)>','<com.android.server.TelephonyRegistry: void notifyCellInfoForSubscriber(int,java.util.List)>','<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.pm.Policy: boolean hasInnerPackages()>','<com.android.server.usb.UsbDeviceManager: void <clinit>()>','<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>','<com.android.server.DeviceIdleController: void dumpHelp(java.io.PrintWriter)>','<com.android.server.am.LockTaskNotify$H: void <init>(com.android.server.am.LockTaskNotify,com.android.server.am.LockTaskNotify$1)>','<com.android.server.power.PowerManagerService$BinderService: boolean isPowerSaveMode()>','<com.android.server.connectivity.Nat464Xlat: boolean isStarted()>','<com.android.server.usb.UsbDeviceManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: void cleanUpResourcesLI()>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: void getMagnificationRegionLocked(android.graphics.Region)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean isPackageDataProtected(int,java.lang.String)>','<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getSourceID()>','<com.android.server.am.ActivityManagerService$Injector: com.android.server.AppOpsService getAppOpsService(java.io.File,android.os.Handler)>','<com.android.server.am.DumpHeapProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>','<com.android.server.wm.WindowState: boolean destroySurface(boolean,boolean)>','<com.android.server.location.GnssLocationProvider: void access$400(com.android.server.location.GnssLocationProvider)>','<com.android.server.location.FusedLocationHardwareSecure: boolean supportsDiagnosticDataInjection()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.am.ActivityStack: boolean hasVisibleBehindActivity()>','<com.android.server.location.GnssLocationProvider: void <init>(android.content.Context,android.location.ILocationManager,android.os.Looper)>','<com.android.server.connectivity.Tethering: void startTethering(int,android.os.ResultReceiver,boolean)>','<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackageForInstall(java.lang.String,int,java.lang.String)>','<com.android.server.wm.DisplayContent: boolean checkWaitingForWindows()>','<com.android.server.wm.WindowManagerService: void notifyShowingDreamChanged()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: android.os.IHwBinder asBinder()>','<com.android.server.am.IntentBindRecord: void dumpInService(java.io.PrintWriter,java.lang.String)>','<com.android.server.connectivity.NetworkAgentInfo: void lingerRequest(android.net.NetworkRequest,long,long)>','<com.android.server.power.PowerManagerService: void access$4900(com.android.server.power.PowerManagerService,float)>','<com.android.server.AppOpsService$UidState: void <init>(int)>','<com.android.server.wm.Task: void positionAt(int,android.graphics.Rect,android.content.res.Configuration)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionProtocol()>','<com.android.server.wm.WindowStateAnimator: void markPreservedSurfaceForDestroy()>','<com.android.server.NsdService: com.android.server.NsdService$NsdStateMachine access$3000(com.android.server.NsdService)>','<com.android.server.am.ActivityManagerService$LocalService: void setPendingIntentWhitelistDuration(android.content.IIntentSender,android.os.IBinder,long)>','<android.hidl.base.V1_0.IBase$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.AnyMotionDetector$1: void <init>(com.android.server.AnyMotionDetector)>','<android.hidl.base.V1_0.IBase$Stub: java.lang.String toString()>','<com.android.server.ConnectivityService: int getRestoreDefaultNetworkDelay(int)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.content.IntentFilter[] newArray(int)>','<com.android.server.am.ActivityStack: void logStartActivity(int,com.android.server.am.ActivityRecord,com.android.server.am.TaskRecord)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.pm.PackageManagerService: java.lang.String getEncryptKey()>','<com.android.server.location.GnssLocationProvider: int access$4400()>','<com.android.server.am.ActivityStackSupervisor: int getNextTaskIdForUserLocked(int)>','<com.android.server.NetworkManagementService$IdleTimerParams: void <init>(int,int)>','<android.net.util.NetdService: android.net.INetd get()>','<com.android.server.wm.WindowManagerService: void startFreezingDisplayLocked(boolean,int,int,com.android.server.wm.DisplayContent)>','<com.android.server.am.ActivityRecord: void addResultLocked(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>','<com.android.server.pm.PackageManagerService$OnPermissionChangeListeners: void onPermissionsChanged(int)>','<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord bottomTask()>','<com.android.server.wm.StackWindowController: void reparent(int,android.graphics.Rect,boolean)>','<com.android.server.am.ProcessList: void <clinit>()>','<com.android.server.net.NetworkStatsCollection$Key: void <init>(com.android.server.net.NetworkIdentitySet,int,int,int)>','<com.android.server.am.ActivityManagerService$17: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.DefaultPermissionGrantPolicy: android.util.ArrayMap access$102(com.android.server.pm.DefaultPermissionGrantPolicy,android.util.ArrayMap)>','<com.android.server.wm.WindowManagerService: void showCircularMask(boolean)>','<com.android.server.wm.UnknownAppVisibilityController: void clear()>','<com.android.server.net.NetworkPolicyManagerService$3: void onUidActive(int)>','<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte[] getJackIds()>','<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void onAnimationStart(android.animation.Animator)>','<com.android.server.am.ActiveServices$3: void <init>(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,android.content.Intent,boolean,android.app.IServiceConnection)>','<com.android.server.pm.PackageSettingBase: void setUserState(int,long,int,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String,android.util.ArraySet,android.util.ArraySet,int,int,int)>','<com.android.server.wm.Task: void forceWindowsScaleable(boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void setAlpha(int)>','<com.android.server.wm.WindowManagerService$LocalService: void saveLastInputMethodWindowForTransition()>','<com.android.server.wm.WallpaperController: void adjustWallpaperWindows(com.android.server.wm.DisplayContent)>','<com.android.server.InputMethodManagerService: void removeClient(com.android.internal.view.IInputMethodClient)>','<com.android.server.LocationManagerService: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>','<com.android.server.pm.PackageManagerService$4: int compare(android.content.pm.ProviderInfo,android.content.pm.ProviderInfo)>','<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>','<com.android.server.usb.descriptors.UsbDescriptor: void postParse(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.location.GeofenceState: double getDistanceToBoundary()>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean access$000(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>','<com.android.server.am.ActivityManagerShellCommand: int runTrackAssociations(java.io.PrintWriter)>','<com.android.server.wm.AppTransition: boolean isNextAppTransitionThumbnailUp()>','<com.android.server.wm.DockedStackDividerController: void reevaluateVisibility(boolean)>','<com.android.server.power.Notifier$4: void run()>','<com.android.server.audio.AudioService$VolumeController: void postVolumeChanged(int,int)>','<com.android.server.pm.PackageManagerService$InstallParams: boolean isForwardLocked()>','<com.android.server.am.ActivityManagerService: void access$700(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityRecord: void takeFromHistory()>','<com.android.server.power.ShutdownThread$6: void <init>(com.android.server.power.ShutdownThread,long,int,boolean[])>','<com.android.server.net.NetworkPolicyManagerService$8: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.Watchdog$HandlerChecker: void run()>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void stop(int)>','<android.hardware.usb.V1_0.IUsb$Stub: java.lang.String interfaceDescriptor()>','<com.android.server.wm.TaskSnapshotSurface$1: void <init>(android.os.Looper)>','<com.android.server.wm.StackWindowController$H: void handleMessage(android.os.Message)>','<com.android.server.PinnerService: java.util.ArrayList access$300(com.android.server.PinnerService)>','<android.net.INetd$Stub$Proxy: int ipSecAllocateSpi(int,int,java.lang.String,java.lang.String,int)>','<com.android.server.pm.PackageManagerService$3: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>','<com.android.server.wm.AppWindowToken: boolean hasWindowsAlive()>','<com.android.server.TelephonyRegistry: void access$200(com.android.server.TelephonyRegistry,com.android.server.TelephonyRegistry$Record,int)>','<com.android.server.am.ActivityManagerService$25: int compare(com.android.server.am.ProcessMemInfo,com.android.server.am.ProcessMemInfo)>','<com.android.server.pm.PackageManagerService: void access$5200(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.view.MagnificationSpec getMagnificationSpecLocked()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1600(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.am.UidRecord: void updateLastDispatchedProcStateSeq(int)>','<com.android.server.wm.WallpaperController: void setWindowWallpaperDisplayOffset(com.android.server.wm.WindowState,int,int)>','<com.android.server.am.ActivityManagerService$DumpStackFileObserver: void <init>(java.lang.String)>','<com.android.server.NetworkManagementService: void access$300(com.android.server.NetworkManagementService)>','<com.android.server.location.GeofenceManager: void onProviderDisabled(java.lang.String)>','<com.android.server.am.UriPermission: void <init>(java.lang.String,java.lang.String,int,com.android.server.am.ActivityManagerService$GrantUri)>','<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String,java.lang.String)>','<android.hardware.configstore.V1_0.OptionalUInt64: void readFromParcel(android.os.HwParcel)>','<com.android.server.audio.AudioService$AudioServiceInternal: void setRingerModeDelegate(android.media.AudioManagerInternal$RingerModeDelegate)>','<com.android.server.am.RecentTasks: void loadUserRecentsLocked(int)>','<com.android.server.pm.PackageManagerService$PackageParserCallback: java.lang.String[] getStaticOverlayPathsLocked(java.util.Collection,java.lang.String,java.lang.String)>','<com.android.server.pm.UserManagerService: android.os.PersistableBundle getSeedAccountOptions()>','<com.android.server.am.ActivityManagerConstants: void onChange(boolean,android.net.Uri)>','<com.android.server.power.PowerManagerService: void access$3500(com.android.server.power.PowerManagerService,android.os.IBinder,int)>','<com.android.server.am.ActivityManagerService: void setVoiceKeepAwake(android.service.voice.IVoiceInteractionSession,boolean)>','<com.android.server.net.LockdownVpnTracker: void shutdown()>','<com.android.server.pm.UserManagerService$LocalService: void <init>(com.android.server.pm.UserManagerService,com.android.server.pm.UserManagerService$1)>','<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: boolean apply(com.android.server.wm.WindowState)>','<com.android.server.pm.PackageManagerService: void access$6100(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,int,int,android.os.UserHandle)>','<com.android.server.NetworkManagementService: void untetherInterface(java.lang.String)>','<com.android.server.wm.AppWindowContainerController: java.lang.String toString()>','<com.android.server.wm.WallpaperController: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.Settings$VersionInfo: void forceCurrent()>','<com.android.server.wm.AppTransition: int goodToGo(int,com.android.server.wm.AppWindowAnimator,com.android.server.wm.AppWindowAnimator,android.util.ArraySet,android.util.ArraySet)>','<com.android.server.am.UserController: android.util.ArraySet access$300(com.android.server.am.UserController)>','<com.android.server.pm.PackageManagerService: int[] access$4800()>','<com.android.server.wm.RemoteSurfaceTrace: void setLayer(int)>','<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppChecked(java.lang.String,long,int,java.lang.String)>','<com.android.server.wm.Task: boolean preserveOrientationOnResize()>','<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: void <init>(com.android.server.wm.WindowContainer,com.android.server.wm.WindowContainer$1)>','<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>','<com.android.server.am.DumpHeapProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>','<com.android.server.audio.AudioService$VolumeStreamState: int getIndex(int)>','<com.android.server.usb.UsbPortManager$PortInfo: void <init>(java.lang.String,int)>','<com.android.server.usb.UsbDebuggingManager: void allowUsbDebugging(boolean,java.lang.String)>','<com.android.server.am.ServiceRecord: void postNotification()>','<com.android.server.wm.AppWindowToken: boolean shouldSaveSurface()>','<com.android.server.am.BaseErrorDialog: boolean dispatchKeyEvent(android.view.KeyEvent)>','<com.android.server.pm.PackageManagerService: void restorePermissionGrants(byte[],int)>','<com.android.server.AppOpsService: void resetAllModes(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean access$3300(android.content.pm.PackageParser$Package)>','<com.android.server.AlarmManagerService$2: boolean setTime(long)>','<com.android.server.connectivity.NetworkAgentInfo: int compareTo(com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.wm.Task: boolean isAttachedToDisplay()>','<com.android.server.am.ActivityManagerService: int restartUserInBackground(int)>','<com.android.server.pm.Installer: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.connectivity.KeepaliveTracker: void startNattKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String,int)>','<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void setTopWallpaper(com.android.server.wm.WindowState)>','<com.android.server.pm.PackageInstallerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService)>','<com.android.server.am.BroadcastQueue$1: void <init>(com.android.server.am.BroadcastQueue,android.content.Intent,int)>','<com.android.server.am.ActivityManagerShellCommand$IntentReceiver: void <init>(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService: boolean applyAnimationLocked(com.android.server.wm.AppWindowToken,android.view.WindowManager$LayoutParams,int,boolean,boolean)>','<com.android.server.audio.AudioService: void setSpeakerphoneOn(boolean)>','<com.android.server.usb.UsbMidiDevice$InputReceiverProxy: void setReceiver(android.media.midi.MidiReceiver)>','<com.android.server.DeviceIdleController$BinderService: int[] getAppIdWhitelist()>','<com.android.server.input.InputManagerService: void access$900(com.android.server.input.InputManagerService,long,boolean)>','<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: android.content.pm.PackageParser$ServiceIntentInfo[] newArray(int)>','<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>','<com.android.server.pm.UserDataPreparer: java.io.File getUserSystemDirectory(int)>','<com.android.server.wm.TaskStack: void getFinalAnimationSourceHintBounds(android.graphics.Rect)>','<com.android.server.am.ActivityManagerService$12: void <init>(com.android.server.am.ActivityManagerService,java.lang.Runnable)>','<com.android.server.wm.animation.ClipRectLRAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<com.android.server.audio.AudioService$ForceControlStreamClient: void release()>','<android.hardware.configstore.V1_0.OptionalInt64: void readFromParcel(android.os.HwParcel)>','<com.android.server.AlarmManagerService$UninstallReceiver: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.wm.Task: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.am.AppErrorDialog$2: void <init>(com.android.server.am.AppErrorDialog)>','<com.android.server.am.ActivityStarter: void doPendingActivityLaunchesLocked(boolean)>','<com.android.server.power.ShutdownThread$4: void onShutDownComplete(int)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void readFromParcel(android.os.HwParcel)>','<com.android.server.am.ActivityManagerService: java.util.ArrayList collectProcesses(java.io.PrintWriter,int,boolean,java.lang.String[])>','<com.android.server.pm.PermissionsState$PermissionData: boolean isDefault()>','<com.android.server.pm.InstantAppRegistry: boolean setInstantAppCookieLPw(java.lang.String,byte[],int)>','<com.android.server.usb.UsbAlsaManager: void access$100(com.android.server.usb.UsbAlsaManager,java.lang.String)>','<com.android.server.wm.DisplayContent: void removeChild(com.android.server.wm.WindowContainer)>','<com.android.server.pm.PackageSettingBase: void setEnabled(int,int,java.lang.String)>','<com.android.server.pm.Settings: void writePackageListLPr(int)>','<com.android.server.wm.WindowSurfaceController: void installRemoteTrace(java.io.FileDescriptor)>','<com.android.server.InputMethodManagerService$HardKeyboardListener: void handleHardKeyboardStatusChange(boolean)>','<com.android.server.am.KeyguardController: void setKeyguardShown(boolean)>','<com.android.server.AppOpsService: void uidRemoved(int)>','<com.android.server.am.UserController$6$1: void <init>(com.android.server.am.UserController$6)>','<com.android.server.am.PinnedActivityStack: void setPictureInPictureAspectRatio(float)>','<com.android.server.wm.InputMonitor: com.android.server.wm.WindowManagerService access$700(com.android.server.wm.InputMonitor)>','<com.android.server.pm.PackageManagerService: boolean isPackageAvailable(java.lang.String,int)>','<com.android.server.DeviceIdleController: void cancelLocatingLocked()>','<android.hidl.base.V1_0.IBase$Stub: void <init>()>','<com.android.server.connectivity.Tethering: com.android.server.connectivity.tethering.SimChangeListener access$2700(com.android.server.connectivity.Tethering)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,com.android.server.am.UriPermissionOwner)>','<com.android.server.audio.AudioService: void access$8400(com.android.server.audio.AudioService,android.content.Intent)>','<com.android.server.am.CompatModePackages$CompatHandler: void handleMessage(android.os.Message)>','<com.android.server.audio.AudioService$AudioHandler: void handleMessage(android.os.Message)>','<com.android.server.am.VrController: boolean shouldDisableNonVrUiLocked()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.am.ActivityStack$ActivityStackHandler: void handleMessage(android.os.Message)>','<com.android.server.location.GeofenceManager: void <init>(android.content.Context,com.android.server.location.LocationBlacklist)>','<com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState[] values()>','<com.android.server.AlarmManagerService$FilterStats: java.lang.String toString()>','<com.android.server.wm.AppTransition: boolean isTransitionEqual(int)>','<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>','<com.android.server.audio.AudioService$ScoClient: void binderDied()>','<com.android.server.connectivity.NetworkMonitor: void access$2600(com.android.server.connectivity.NetworkMonitor,java.lang.String)>','<com.android.server.wm.DragState: boolean stepAnimationLocked(long)>','<com.android.server.wm.WindowState: void onWindowReplacementTimeout()>','<com.android.server.location.GeofenceState: java.lang.String toString()>','<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>','<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>','<com.android.server.TelephonyRegistry: void notifyDisconnectCause(int,int)>','<com.android.server.am.ActivityStackSupervisor: boolean isDisplayAdded(int)>','<com.android.server.pm.PackageSetting: void <init>(com.android.server.pm.PackageSetting,java.lang.String)>','<com.android.server.location.GnssStatusListenerHelper$3: void execute(android.os.IInterface)>','<com.android.server.location.GnssLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>','<com.android.server.pm.BackgroundDexOptService: void access$000(com.android.server.pm.BackgroundDexOptService,android.app.job.JobParameters,com.android.server.pm.PackageManagerService,android.util.ArraySet)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredDhcpRanges()>','<com.android.server.pm.Settings: void writePackageRestrictionsLPr(int)>','<com.android.server.am.ActivityManagerService$LocalService: void onUserRemoved(int)>','<com.android.server.wm.WindowManagerService: void inSurfaceTransaction(java.lang.Runnable)>','<com.android.server.LocationManagerService$Receiver: void updateMonitoring(boolean)>','<com.android.server.ConnectivityService: android.content.Context access$2300(com.android.server.ConnectivityService)>','<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)>','<com.android.server.statusbar.StatusBarManagerService$1: void <init>(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.am.ActivityManagerService: void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)>','<com.android.server.am.ContentProviderRecord: void <init>(com.android.server.am.ContentProviderRecord)>','<com.android.server.pm.PackageManagerService$1: void onVolumeForgotten(java.lang.String)>','<com.android.server.pm.PackageSetting: void writeToProto(android.util.proto.ProtoOutputStream,long,java.util.List)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.am.ServiceRecord: void clearDeliveredStartsLocked()>','<com.android.server.am.ActivityManagerService: void setPictureInPictureParams(android.os.IBinder,android.app.PictureInPictureParams)>','<com.android.server.am.BroadcastStats: void addBackgroundCheckViolation(java.lang.String,java.lang.String)>','<com.android.server.audio.RecordingActivityMonitor: java.util.List getActiveRecordingConfigurations()>','<com.android.server.wm.WindowContainer: void positionChildAt(int,com.android.server.wm.WindowContainer,boolean)>','<com.android.server.NsdService$DaemonConnection: boolean execute(java.lang.Object[])>','<com.android.server.am.ProcessList: long getMemLevel(int)>','<com.android.server.am.ActivityStack: int releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord,android.util.ArraySet,java.lang.String)>','<com.android.server.am.ActivityStack: boolean safelyDestroyActivityLocked(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.wm.AppWindowContainerController: com.android.server.wm.AppWindowToken createAppWindow(com.android.server.wm.WindowManagerService,android.view.IApplicationToken,boolean,com.android.server.wm.DisplayContent,long,boolean,boolean,int,int,int,int,boolean,boolean,com.android.server.wm.AppWindowContainerController,android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.am.ActivityManagerService: void setSystemProcess()>','<com.android.server.wm.TaskWindowContainerController: void <init>(int,com.android.server.wm.TaskWindowContainerListener,com.android.server.wm.StackWindowController,int,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,boolean,boolean,android.app.ActivityManager$TaskDescription)>','<com.android.server.am.PendingIntentRecord$Key: boolean equals(java.lang.Object)>','<com.android.server.pm.dex.PackageDexUsage: void clear()>','<com.android.server.wm.AppWindowToken: boolean fillsParent()>','<com.android.server.net.NetworkStatsService$6: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: boolean mobileNetworkRequested()>','<android.net.INetd$Stub: android.net.INetd asInterface(android.os.IBinder)>','<com.android.server.wm.WindowManagerService$2: void onAppTransitionFinishedLocked(android.os.IBinder)>','<com.android.server.audio.AudioService: void access$4100(com.android.server.audio.AudioService,int)>','<com.android.server.am.TaskPersister: void writePersistedTaskIdsForUser(android.util.SparseBooleanArray,int)>','<com.android.server.pm.PermissionsState$PermissionState: java.lang.String getName()>','<com.android.server.pm.UserDataPreparer: java.io.File getDataMiscDeDirectory(int)>','<com.android.server.am.ActivityStack: void getStackDockedModeBounds(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.NsdService$NativeCallbackReceiver: boolean onEvent(int,java.lang.String,java.lang.String[])>','<com.android.server.AppOpsService$ClientRestrictionState: void destroy()>','<com.android.server.pm.Settings: java.io.File access$200(com.android.server.pm.Settings,int)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void reset()>','<com.android.server.wm.InputMonitor: boolean access$302(com.android.server.wm.InputMonitor,boolean)>','<com.android.server.pm.KeySetManagerService: void writeKeySetsLPr(org.xmlpull.v1.XmlSerializer)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void removeReleased(android.media.AudioPlaybackConfiguration)>','<com.android.server.pm.PackageManagerService: void access$1300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,int)>','<com.android.server.wm.WindowStateAnimator: void destroySurfaceLocked()>','<com.android.server.LocationManagerService: void updateUserProfiles(int)>','<com.android.server.EventLogTags: void writeWmTaskRemoved(int,java.lang.String)>','<com.android.server.location.GnssStatusListenerHelper: void onSvStatusChanged(int,int[],float[],float[],float[],float[])>','<com.android.server.wm.WallpaperController: boolean wallpaperTransitionReady()>','<com.android.server.pm.PackageManagerService: int permissionInfoFootprint(android.content.pm.PermissionInfo)>','<com.android.server.pm.Settings: java.lang.Object getUserIdLPr(int)>','<android.os.IInstalld$Stub$Proxy: void freeCache(java.lang.String,long,long,int)>','<com.android.server.am.ActivityRecord: void clearOptionsLocked()>','<android.hidl.base.V1_0.DebugInfo$Architecture: void <init>()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setLocationPackagesProviderLPw(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: void onAnimationCancel(android.animation.Animator)>','<com.android.server.RescueParty$AppThreshold: void setStart(long)>','<com.android.server.power.PowerManagerService: boolean access$1400(com.android.server.power.PowerManagerService,long,int,int,int)>','<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByLPr(java.lang.String,com.android.server.pm.KeySetHandle)>','<com.android.server.wm.WindowState: void clearWasVisibleBeforeClientHidden()>','<com.android.server.wm.WindowContainer: void checkAppWindowsReadyToShow()>','<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.power.WirelessChargerDetector$2: void run()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackage(java.lang.String,int,java.lang.String)>','<com.android.server.connectivity.NetworkMonitor: void access$2800(com.android.server.connectivity.NetworkMonitor,int)>','<com.android.server.wm.WindowContainer: boolean checkCompleteDeferredRemoval()>','<com.android.server.audio.AudioService$ScoClient: void clearCount(boolean)>','<com.android.server.pm.PackageInstallerService$Callbacks: void <init>(android.os.Looper)>','<com.android.server.connectivity.PacManager: boolean access$1302(com.android.server.connectivity.PacManager,boolean)>','<com.android.server.net.NetworkStatsService: void bindConnectivityManager(android.net.IConnectivityManager)>','<com.android.server.wm.animation.CurvedTranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<com.android.server.pm.Settings$VersionInfo: void <init>()>','<com.android.server.location.GnssStatusListenerHelper$2: void execute(android.os.IInterface)>','<com.android.server.wm.AppTransition: android.view.animation.Interpolator access$000(com.android.server.wm.AppTransition)>','<com.android.server.NetworkManagementService: java.lang.String[] listTtys()>','<com.android.server.connectivity.Tethering: void stopTethering(int)>','<com.android.server.pm.PackageManagerService: int updateFlagsForResolve(int,int,android.content.Intent,int)>','<com.android.server.LocationManagerService$LocationWorkerHandler: void handleMessage(android.os.Message)>','<com.android.server.connectivity.Vpn$SystemServices: int settingsSecureGetIntForUser(java.lang.String,int,int)>','<com.android.server.input.InputManagerService: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>','<com.android.server.wm.WindowManagerService: void getStableInsetsLocked(int,android.graphics.Rect)>','<com.android.server.audio.RotationHelper: void <init>()>','<com.android.server.power.Notifier: void onWakeLockAcquired(int,java.lang.String,java.lang.String,int,int,android.os.WorkSource,java.lang.String)>','<com.android.server.wm.DisplayContent: boolean isVisible()>','<com.android.server.pm.PackageSetting: int getSharedUserId()>','<com.android.server.pm.PackageInstallerService: void access$600(com.android.server.pm.PackageInstallerService)>','<com.android.server.ConnectivityService: java.lang.String access$800()>','<com.android.server.wm.UnknownAppVisibilityController: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.location.RemoteListenerHelper: void setSupported(boolean)>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver$1: void <init>(com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver)>','<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService$ParallelPackageParserCallback: void <init>(com.android.server.pm.PackageManagerService)>','<android.hidl.base.V1_0.DebugInfo: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.net.NetworkPolicyManagerService$ProcStateSeqHistory: void dumpUL(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)>','<com.android.server.wm.WindowState: void unregisterFocusObserver(android.view.IWindowFocusObserver)>','<com.android.server.am.ProcessRecord: int getSetAdjWithServices()>','<com.android.server.am.TaskRecord: boolean reparent(int,boolean,int,boolean,boolean,boolean,java.lang.String)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.connectivity.Vpn: boolean appliesToUid(int)>','<com.android.server.wm.RootWindowContainer$MyHandler: void <init>(com.android.server.wm.RootWindowContainer,android.os.Looper)>','<com.android.server.am.UserController: android.content.pm.UserInfo getUserInfo(int)>','<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>','<com.android.server.wm.DisplayContent$NonAppWindowContainers: void <init>(com.android.server.wm.DisplayContent,java.lang.String)>','<android.net.util.NetdService: void <clinit>()>','<com.android.server.pm.BackgroundDexOptService: void notifyPackageChanged(java.lang.String)>','<com.android.server.am.ActiveServices: void serviceTimeout(com.android.server.am.ProcessRecord)>','<com.android.server.net.NetworkPolicyManagerService: void updateRulesForAppIdleUL()>','<com.android.server.usb.UsbPortManager$1: void run()>','<android.hardware.configstore.V1_0.OptionalInt64: java.util.ArrayList readVectorFromParcel(android.os.HwParcel)>','<com.android.server.am.AppErrorDialog: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,com.android.server.am.AppErrorDialog$Data)>','<com.android.server.EventLogTags: void writeCacheFileDeleted(java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService: int access$502(com.android.server.statusbar.StatusBarManagerService,int)>','<com.android.server.usb.UsbService$Lifecycle: void <init>(android.content.Context)>','<com.android.server.am.ActivityManagerService: com.android.server.am.VrController access$1200(com.android.server.am.ActivityManagerService)>','<com.android.server.location.GnssMeasurementsProvider: void onGpsEnabledChanged()>','<com.android.server.am.UserController: void moveUserToForegroundLocked(com.android.server.am.UserState,int,int)>','<com.android.server.wm.WindowManagerService: void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>','<com.android.server.pm.UserManagerService: boolean removeUserEvenWhenDisallowed(int)>','<com.android.server.wm.WindowManagerService: void access$600(com.android.server.wm.WindowManagerService)>','<com.android.server.DeviceIdleController$7: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<com.android.server.power.PowerManagerService: void access$5100(com.android.server.power.PowerManagerService,long,int)>','<com.android.server.DeviceIdleController: int[] getAppIdTempWhitelistInternal()>','<com.android.server.pm.PackageManagerShellCommand$1: int compare(android.content.pm.FeatureInfo,android.content.pm.FeatureInfo)>','<com.android.server.wm.WindowSurfaceController: void setPositionInTransaction(float,float,boolean)>','<com.android.server.DeviceIdleController$8: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.location.GnssStatusListenerHelper$1: void execute(android.location.IGnssStatusListener)>','<com.android.server.wm.WindowManagerService: boolean destroyInputConsumer(java.lang.String)>','<com.android.server.pm.UserManagerService$LocalService: void setForceEphemeralUsers(boolean)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: java.util.Set getPrefixes()>','<com.android.server.pm.PackageInstallerSession: void setPermissionsResult(boolean)>','<com.android.server.audio.FocusRequester: boolean hasSameUid(int)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void start(int)>','<com.android.server.am.ContentProviderConnection: void toClientString(java.lang.StringBuilder)>','<com.android.server.EventLogTags: void writeLockdownVpnConnected(int)>','<com.android.server.input.InputManagerService$6: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<com.android.server.location.GeofenceManager: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.server.am.ActivityStack: void executeAppTransition(android.app.ActivityOptions)>','<com.android.server.wm.AccessibilityController: void onWindowTransitionLocked(com.android.server.wm.WindowState,int)>','<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)>','<com.android.server.audio.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>','<com.android.server.am.ActivityStackSupervisor: void invalidateTaskLayers()>','<com.android.server.AlarmManagerService: void removeUserLocked(int)>','<com.android.server.pm.dex.DexManager: int access$700()>','<com.android.server.firewall.StringFilter$PatternStringFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.audio.AudioService: int[][] access$5700(com.android.server.audio.AudioService)>','<com.android.server.am.EventLogTags: void writeAmCreateActivity(int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.am.ServiceRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionFinished(com.android.server.pm.PackageInstallerSession,boolean)>','<com.android.server.wm.DisplayContent: void dumpTokens(java.io.PrintWriter,boolean)>','<com.android.server.wm.WallpaperWindowToken: void sendWindowWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>','<com.android.server.pm.UserManagerService: boolean isUserRunning(int)>','<com.android.server.am.VrController: void setVrThreadLocked(int,int,com.android.server.am.ProcessRecord)>','<com.android.server.pm.PackageManagerService: boolean access$400(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.NsdService: boolean access$2100(com.android.server.NsdService,int)>','<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkState getNetworkState()>','<com.android.server.AlarmManagerService$2: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>','<com.android.server.am.EventLogTags: void writeAmTaskToFront(int,int)>','<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>','<com.android.server.pm.Settings: int getComponentEnabledSettingLPr(android.content.ComponentName,int)>','<com.android.server.InputMethodManagerService: void onUnlockUser(int)>','<com.android.server.am.BroadcastStats: void addBroadcast(java.lang.String,java.lang.String,int,int,long)>','<com.android.server.wm.Session: void remove(android.view.IWindow)>','<com.android.server.ConnectivityService: int setUsbTethering(boolean,java.lang.String)>','<com.android.server.wm.WindowManagerService: void notifyAppRelaunchingFinished(android.os.IBinder)>','<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>','<com.android.server.am.ActivityManagerService$LocalService: void updateDeviceIdleTempWhitelist(int[],int,boolean)>','<com.android.server.location.CountryDetectorBase: void notifyListener(android.location.Country)>','<com.android.server.AlarmManagerService: void onBootPhase(int)>','<com.android.server.am.BatteryStatsService: void noteWakeUp(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: android.util.ArrayMap access$2100(com.android.server.pm.PackageManagerService$ServiceIntentResolver)>','<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>','<com.android.server.am.UserController$5$1: void <init>(com.android.server.am.UserController$5)>','<com.android.server.am.ActivityManagerShellCommand: int runKill(java.io.PrintWriter)>','<com.android.server.pm.UserManagerService$5: void <init>(com.android.server.pm.UserManagerService)>','<com.android.server.DeviceIdleController$BinderService: boolean registerMaintenanceActivityListener(android.os.IMaintenanceActivityListener)>','<com.android.server.usb.UsbService: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>','<com.android.server.am.BatteryStatsService: void noteStopSensor(int,int)>','<com.android.server.am.ServiceRecord$2: void <init>(com.android.server.am.ServiceRecord,java.lang.String,int)>','<com.android.server.wm.WindowManagerService: void checkDrawnWindowsLocked()>','<com.android.server.am.ActivityManagerShellCommand: int runMonitor(java.io.PrintWriter)>','<com.android.server.usb.descriptors.UsbACHeader: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.pm.UserManagerService: java.lang.Object access$800(com.android.server.pm.UserManagerService)>','<com.android.server.am.TaskRecord: void createWindowContainer(boolean,boolean)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void notifySyspropsChanged()>','<com.android.server.SystemService: android.os.IBinder getBinderService(java.lang.String)>','<com.android.server.InputMethodManagerService: boolean access$102(com.android.server.InputMethodManagerService,boolean)>','<com.android.server.wm.WindowAnimator: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$SoundPoolCallback access$2300(com.android.server.audio.AudioService)>','<com.android.server.pm.CompilerStats: void readInternal(java.lang.Object)>','<android.net.INetd$Stub$Proxy: void ipSecRemoveTransportModeTransform(java.io.FileDescriptor)>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothDevice access$3002(com.android.server.audio.AudioService,android.bluetooth.BluetoothDevice)>','<com.android.server.net.NetworkPolicyManagerService$14: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.pm.dex.DexManager: void notifyPackageDataDestroyed(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void boostPriorityForLockedSection()>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getPacketSize()>','<com.android.server.ConnectivityService$NetworkRequestInfo: java.lang.String toString()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>','<com.android.server.pm.Settings: void writeAllRuntimePermissionsLPr()>','<com.android.server.pm.PackageSettingBase: boolean enableComponentLPw(java.lang.String,int)>','<com.android.server.AlarmManagerService$FilterStats: void <init>(com.android.server.AlarmManagerService$BroadcastStats,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: boolean access$702(com.android.server.am.ActivityManagerShellCommand,boolean)>','<com.android.server.net.NetworkStatsObservers: void <init>()>','<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPort[] getPorts()>','<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>','<com.android.server.usb.UsbMidiDevice$1: void onDeviceStatusChanged(android.media.midi.MidiDeviceServer,android.media.midi.MidiDeviceStatus)>','<com.android.server.am.NativeCrashListener: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler: void <init>(com.android.server.audio.MediaFocusControl,android.os.IBinder)>','<com.android.server.am.ActivityManagerService: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>','<com.android.server.am.TaskPersister: long access$502(com.android.server.am.TaskPersister,long)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: boolean getSampleEnabled()>','<com.android.server.wm.ViewServer$ViewServerWorker: void <init>(com.android.server.wm.ViewServer,java.net.Socket)>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.wm.AppWindowContainerController: void pauseKeyDispatching()>','<com.android.server.location.GnssLocationProvider: void access$5700(com.android.server.location.GnssLocationProvider)>','<com.android.server.DeviceIdleController$LocalService: void setNetworkPolicyTempWhitelistCallback(java.lang.Runnable)>','<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: void <init>(android.content.Context,int,java.util.List,int)>','<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getUnitID()>','<android.os.IInstalld$Stub$Proxy: boolean copySystemProfile(java.lang.String,int,java.lang.String)>','<com.android.server.audio.PlaybackActivityMonitor: android.media.VolumeShaper$Operation access$300()>','<com.android.server.connectivity.PacManager$PacRefreshIntentReceiver: void <init>(com.android.server.connectivity.PacManager)>','<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>','<com.android.server.connectivity.Tethering$TetherMasterSM: void access$3100(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.location.GnssLocationProvider: void access$600(com.android.server.location.GnssLocationProvider,int)>','<com.android.server.DeviceIdleController$BinderService: void addPowerSaveTempWhitelistApp(java.lang.String,long,int,java.lang.String)>','<com.android.server.power.PowerManagerService$LocalService: boolean setDeviceIdleMode(boolean)>','<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderRequest access$300(com.android.server.location.LocationProviderProxy)>','<com.android.server.net.NetworkStatsService: void access$700(com.android.server.net.NetworkStatsService,int)>','<com.android.server.usb.UsbDeviceManager: int access$1702(com.android.server.usb.UsbDeviceManager,int)>','<com.android.server.connectivity.KeepaliveTracker: void handleCheckKeepalivesStillValid(com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.pm.PackageManagerShellCommand$2: void <init>(com.android.server.pm.PackageManagerShellCommand)>','<com.android.server.audio.AudioService$VolumeStreamState: void applyAllVolumes()>','<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>','<com.android.server.location.GnssStatusListenerHelper: void unregisterFromService()>','<com.android.server.EventLogTags: void writeNetstatsMobileSample(long,long,long,long,long,long,long,long,long,long,long,long,long)>','<com.android.server.input.InputManagerService$LocalService: void <init>(com.android.server.input.InputManagerService,com.android.server.input.InputManagerService$1)>','<android.net.util.MultinetworkPolicyTracker: void shutdown()>','<com.android.server.am.ActivityRecord: void onWindowsVisible()>','<com.android.server.pm.Settings: void dumpPackagesLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageManagerService$DumpState,boolean)>','<com.android.server.am.ActivityManagerService: void grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)>','<com.android.server.am.ActivityStackSupervisor: android.app.ActivityManager$StackInfo getStackInfoLocked(int)>','<com.android.server.AnyMotionDetector: boolean access$1000(com.android.server.AnyMotionDetector)>','<com.android.server.wm.DisplayContent: void createRotationMatrix(int,float,float,float,float,android.graphics.Matrix)>','<com.android.server.power.PowerManagerService$LocalService: void finishUidChanges()>','<com.android.server.wm.TaskPositioner: void updateDraggedBounds(int,int,int,int,int,int)>','<com.android.server.am.TaskRecord: void saveToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.server.wm.WindowManagerService: void enableScreenIfNeededLocked()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void revokeRuntimePermission(java.lang.String,java.lang.String,int,boolean)>','<com.android.server.usb.UsbAlsaManager$AlsaDevice: boolean equals(java.lang.Object)>','<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String)>','<com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$200()>','<com.android.server.am.ActivityManagerShellCommand: boolean access$1302(com.android.server.am.ActivityManagerShellCommand,boolean)>','<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getCountryCode()>','<com.android.server.usb.UsbPortManager$HALCallback: void <init>()>','<com.android.server.TelephonyRegistry: int access$402(com.android.server.TelephonyRegistry,int)>','<android.hardware.configstore.V1_0.OptionalBool: void <init>()>','<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller$SessionInfo generateInfo()>','<com.android.server.location.GnssLocationProvider: java.util.Properties access$3100(com.android.server.location.GnssLocationProvider)>','<com.android.server.ConnectivityService: boolean isNetworkSupported(int)>','<com.android.server.pm.UserManagerService: java.util.List getUserRestrictionSources(java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: void access$2000(com.android.server.net.NetworkPolicyManagerService,android.net.INetworkPolicyListener,int,int)>','<com.android.server.pm.PermissionsState$PermissionState: boolean access$002(com.android.server.pm.PermissionsState$PermissionState,boolean)>','<com.android.server.pm.Settings: java.util.List getIntentFilterVerificationsLPr(java.lang.String)>','<com.android.server.firewall.SenderPackageFilter: void <clinit>()>','<com.android.server.EventLogTags: void writeIdleMaintenanceWindowFinish(long,long,int,int)>','<com.android.server.am.ActivityManagerService: void positionTaskInStack(int,int,int)>','<com.android.server.pm.dex.PackageDexUsage: void <init>()>','<com.android.server.am.ActivityStackSupervisor: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,boolean,boolean)>','<com.android.server.am.AppErrorDialog$Data: void <init>()>','<com.android.server.input.InputManagerService: void setPointerIconType(int)>','<com.android.server.am.TaskRecord: void touchActiveTime()>','<com.android.server.wm.WindowState: void getTouchableRegion(android.graphics.Region)>','<com.android.server.AnyMotionDetector: java.lang.Runnable access$400(com.android.server.AnyMotionDetector)>','<com.android.server.am.BatteryStatsService: void onLowPowerModeChanged(android.os.PowerSaveState)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onWindowLayersChangedLocked()>','<com.android.server.wm.BlackFrame: void <init>(android.view.SurfaceSession,android.graphics.Rect,android.graphics.Rect,int,int,boolean)>','<com.android.server.am.ActiveServices$1: void run()>','<com.android.server.pm.CompilerStats: void setPackageStats(java.lang.String,com.android.server.pm.CompilerStats$PackageStats)>','<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState getHighestAnimLayerWindow(com.android.server.wm.WindowState)>','<com.android.server.am.ActivityRecord: boolean keyDispatchingTimedOut(java.lang.String,int)>','<com.android.server.RescueParty$Threshold: void reset()>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void access$6300(com.android.server.pm.PackageManagerService$MoveCallbacks,int,int)>','<android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker: java.util.Set getDnses()>','<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>','<com.android.server.am.ActivityManagerShellCommand: int runSendBroadcast(java.io.PrintWriter)>','<com.android.server.connectivity.Tethering: void interfaceLinkStateChanged(java.lang.String,boolean)>','<com.android.server.pm.IntentFilterVerificationResponse: java.lang.String getFailedDomainsString()>','<com.android.server.am.UriPermissionOwner: void addWritePermission(com.android.server.am.UriPermission)>','<com.android.server.am.ActivityStack: void backgroundResourcesReleased()>','<com.android.server.am.ActivityRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.connectivity.NetworkMonitor: void access$1800(com.android.server.connectivity.NetworkMonitor,int)>','<com.android.server.NetworkManagementService: java.util.concurrent.CountDownLatch access$202(com.android.server.NetworkManagementService,java.util.concurrent.CountDownLatch)>','<com.android.server.wm.AppWindowToken: void setFillsParent(boolean)>','<com.android.server.pm.InstantAppRegistry$CookiePersistence: void schedulePersistLPw(int,android.content.pm.PackageParser$Package,byte[])>','<com.android.server.am.ContentProviderRecord: void access$100(com.android.server.am.ContentProviderRecord,android.os.IBinder)>','<com.android.server.NativeDaemonConnector: void makeCommand(java.lang.StringBuilder,java.lang.StringBuilder,int,java.lang.String,java.lang.Object[])>','<com.android.server.pm.PackageManagerService$14: void apply(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.usb.descriptors.UsbUnknown: void <init>(int,byte)>','<com.android.server.AppOpsService$UidState: void clear()>','<com.android.server.am.EventLogTags: void writeAmActivityLaunchTime(int,int,java.lang.String,long)>','<com.android.server.pm.PermissionsState$PermissionState: void <init>(com.android.server.pm.PermissionsState$PermissionState)>','<com.android.server.usb.UsbDeviceManager: android.app.NotificationManager access$2000(com.android.server.usb.UsbDeviceManager)>','<com.android.server.pm.AbstractStatsBase: boolean maybeWriteAsync(java.lang.Object)>','<android.hardware.configstore.V1_0.OptionalUInt64: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.wm.TaskSnapshotSurface: void <clinit>()>','<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>','<com.android.server.pm.PackageManagerService: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>','<com.android.server.NetworkManagementService: void enableIpv6(java.lang.String)>','<com.android.server.wm.WindowState: int getResizeMode()>','<com.android.server.wm.DimLayerController: void applyDimAbove(com.android.server.wm.DimLayer$DimLayerUser,com.android.server.wm.WindowStateAnimator)>','<com.android.server.ThreadPriorityBooster$PriorityState: void <init>(com.android.server.ThreadPriorityBooster$1)>','<com.android.server.location.FusedLocationHardwareSecure: void registerSink(android.hardware.location.IFusedLocationHardwareSink)>','<com.android.server.wm.BlackFrame: void printTo(java.lang.String,java.io.PrintWriter)>','<com.android.server.wm.DisplayContent: void removeChild(com.android.server.wm.DisplayContent$DisplayChildWindowContainer)>','<com.android.server.wm.DimLayerController: void applyDim(com.android.server.wm.DimLayer$DimLayerUser,com.android.server.wm.WindowStateAnimator,boolean)>','<com.android.server.DeviceIdleController: void scheduleLightAlarmLocked(long)>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>()>','<com.android.server.power.PowerManagerService$BinderService: void userActivity(long,int,int)>','<com.android.server.am.TaskRecord: int getLaunchStackId()>','<com.android.server.wm.WindowContainer: int compareTo(java.lang.Object)>','<com.android.server.am.BatteryStatsService: int access$000(java.nio.ByteBuffer)>','<com.android.server.wm.DragAndDropPermissionsHandler: void take(android.os.IBinder)>','<com.android.server.LocationManagerService$Receiver: void access$2500(com.android.server.LocationManagerService$Receiver)>','<com.android.server.am.PendingIntentRecord: void setWhitelistDurationLocked(android.os.IBinder,long)>','<android.hardware.usb.V1_0.PortDataRole: void <init>()>','<com.android.server.am.ActivityStack: void convertActivityToTranslucent(com.android.server.am.ActivityRecord)>','<com.android.server.audio.AudioService$VolumeStreamState: boolean setIndex(int,int,java.lang.String)>','<com.android.server.pm.Settings: void dumpSharedUsersLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageManagerService$DumpState,boolean)>','<com.android.server.firewall.AndFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalUInt64 maxVirtualDisplaySize()>','<com.android.server.wm.WindowToken: java.lang.String getName()>','<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int)>','<com.android.server.pm.UserManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: android.os.INetworkManagementService access$1000(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.pm.InstantAppResolver: void <init>()>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationClick(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean scheduleAsFifoPriority(int,boolean)>','<com.android.server.power.PowerManagerService$BinderService: boolean setPowerSaveMode(boolean)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.audio.AudioService$SetModeDeathHandler: int getMode()>','<com.android.server.wm.Task: void prepareFreezingBounds()>','<com.android.server.pm.PackageManagerService$HandlerParams: void serviceError()>','<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void <init>(android.content.Context,com.android.internal.util.StateMachine,android.net.util.SharedLog,int)>','<com.android.server.am.AppErrors: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService: int checkPermission(java.lang.String,java.lang.String,int)>','<com.android.server.pm.CrossProfileIntentFilter: int getFlags()>','<com.android.server.am.ActivityManagerService: void dumpGraphicsHardwareUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.firewall.StringFilter$5: void <init>(java.lang.String)>','<com.android.server.wm.WindowManagerService$LocalService: void computeWindowsForAccessibility()>','<com.android.server.location.MockProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>','<com.android.server.wm.WindowState: void onUnfreezeBounds()>','<com.android.server.pm.PackageManagerService$PackageHandler: void <init>(com.android.server.pm.PackageManagerService,android.os.Looper)>','<com.android.server.pm.SELinuxMMAC: void assignSeInfoValue(android.content.pm.PackageParser$Package)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void <init>()>','<com.android.server.power.PowerManagerService: void access$4800(com.android.server.power.PowerManagerService,int)>','<com.android.server.am.PendingIntentRecord: int sendWithResult(int,android.content.Intent,java.lang.String,android.os.IBinder,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>','<com.android.server.pm.EphemeralResolverConnection$PhaseTwoCallback: void <init>()>','<com.android.server.AlarmManagerService: void setImpl(int,long,long,long,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,int,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo,int,java.lang.String)>','<com.android.server.AnyMotionDetector$RunningSignalStats: int getSampleCount()>','<com.android.server.wm.StackWindowController: void positionChildAt(com.android.server.wm.TaskWindowContainerController,int,android.graphics.Rect,android.content.res.Configuration)>','<com.android.server.SystemService: void publishLocalService(java.lang.Class,java.lang.Object)>','<com.android.server.wm.AppWindowContainerController: android.graphics.Bitmap screenshotApplications(int,int,int,float)>','<com.android.server.am.UserController$Injector: void activityManagerForceStopPackageLocked(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: int getInstallLocation()>','<com.android.server.am.KeyguardController: boolean canDismissKeyguard()>','<com.android.server.pm.IntentFilterVerificationState: boolean isVerified()>','<com.android.server.pm.PackageInstallerSession: void setClientProgress(float)>','<com.android.server.am.ActivityManagerService$SleepTokenImpl: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>','<com.android.server.wm.DockedStackDividerController: boolean isImeHideRequested()>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: void <init>(com.android.server.power.PowerManagerService,java.lang.String)>','<com.android.server.LocationManagerService: void <clinit>()>','<com.android.server.pm.PackageVerificationState: void extendTimeout()>','<com.android.server.wm.TaskPositioner: void unregister()>','<com.android.server.wm.TaskStack: int getMinTopStackBottom(android.graphics.Rect,int)>','<com.android.server.net.NetworkPolicyManagerService: void access$1300(com.android.server.net.NetworkPolicyManagerService,int)>','<com.android.server.LocationManagerService: java.util.HashMap access$2000(com.android.server.LocationManagerService)>','<com.android.server.wm.AppWindowAnimator: void setAnimation(android.view.animation.Animation,int,int,int,int,boolean,int,int,int)>','<com.android.server.am.ActivityManagerShellCommand: int access$1102(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.DeviceIdleController: void incActiveIdleOps()>','<com.android.server.pm.PackageManagerService$ParallelPackageParserCallback: void findStaticOverlayPackages()>','<com.android.server.wm.TaskSnapshotSurface: android.os.Handler access$400()>','<com.android.server.location.GnssNavigationMessageProvider$StatusChangedOperation: void execute(android.location.IGnssNavigationMessageListener)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool useContextPriority()>','<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: void <clinit>()>','<com.android.server.am.UserController: java.util.Set getProfileIds(int)>','<com.android.server.am.ReceiverList: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStack: void onLockTaskPackagesUpdatedLocked()>','<com.android.server.usb.UsbPortManager$HALCallback: void notifyRoleSwitchStatus(java.lang.String,android.hardware.usb.V1_0.PortRole,int)>','<com.android.server.wm.WindowManagerService: boolean updateOrientationFromAppTokensLocked(boolean,int)>','<com.android.server.pm.dex.PackageDexUsage: boolean removePackage(java.lang.String)>','<com.android.server.pm.PackageManagerService: com.android.internal.app.IMediaContainerService access$600(com.android.server.pm.PackageManagerService)>','<com.android.server.pm.InstantAppRegistry: java.util.List getInstantAppsLPr(int)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryIntervalForUid(android.net.NetworkTemplate,int,int,int,int,long,long)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void notifySyspropsChanged()>','<com.android.server.pm.PackageSettingBase: void <init>(com.android.server.pm.PackageSettingBase,java.lang.String)>','<com.android.server.audio.AudioService$MyDisplayStatusCallback: void onComplete(int)>','<com.android.server.am.ActivityManagerService: void unregisterProcessObserver(android.app.IProcessObserver)>','<com.android.server.wm.InputMonitor: void thawInputDispatchingLw()>','<com.android.server.DeviceIdleController$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.DeviceIdleController: void resetPowerSaveWhitelistExceptIdleInternal()>','<com.android.server.LocationManagerService: boolean checkLocationAccess(int,int,java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: boolean isUidForeground(int)>','<com.android.server.am.BatteryStatsService: void noteBleScanStarted(android.os.WorkSource,boolean)>','<com.android.server.wm.TaskStack: void getAnimationOrCurrentBounds(android.graphics.Rect)>','<com.android.server.wm.WindowManagerService: void unregisterPointerEventListener(android.view.WindowManagerPolicy$PointerEventListener)>','<com.android.server.am.EventLogTags: void writeAmBroadcastDiscardFilter(int,int,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: void resumeController(int)>','<com.android.server.am.RecentTasks$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.TaskStack: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.wm.WallpaperController: boolean updateWallpaperOffset(com.android.server.wm.WindowState,int,int,boolean)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: java.lang.String toString()>','<com.android.server.ConnectivityService: void access$1900(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.firewall.OrFilter: void <clinit>()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(java.lang.String,java.lang.Object[])>','<com.android.server.AnyMotionDetector$Vector3: java.lang.String toString()>','<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getDescriptorType()>','<com.android.server.connectivity.NetworkNotificationManager: void <init>(android.content.Context,android.telephony.TelephonyManager,android.app.NotificationManager)>','<com.android.server.pm.Settings: void dumpInstallPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PermissionsState)>','<com.android.server.statusbar.StatusBarShellCommand: void <init>(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.policy.IconUtilities: void <clinit>()>','<com.android.server.pm.PackageSettingBase: void setNotLaunched(boolean,int)>','<com.android.server.am.ActivityManagerService: void enforceCallingPermission(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityMetricsLogger: void notifyBindApplication(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityManagerShellCommand: int access$802(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.ConnectivityService$ValidationLog: void <init>(android.net.Network,java.lang.String,android.util.LocalLog$ReadOnlyLocalLog)>','<com.android.server.usb.descriptors.UsbACInputTerminal: byte getChannelNames()>','<com.android.server.net.NetworkStatsRecorder: void dumpCheckin(java.io.PrintWriter,long,long)>','<com.android.server.DeviceIdleController$7: void onProviderEnabled(java.lang.String)>','<com.android.server.usb.descriptors.ByteStream: int available()>','<com.android.server.usb.UsbUserSettingsManager: void removeAccessoryPermissions(android.hardware.usb.UsbAccessory)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: java.util.ArrayList interfaceChain()>','<com.android.server.pm.UserManagerService: void setUserAccount(int,java.lang.String)>','<com.android.server.wm.AppTransition: boolean isReady()>','<com.android.server.audio.AudioService$SettingsObserver: void <init>(com.android.server.audio.AudioService)>','<com.android.server.wm.WindowManagerService$LocalService: void requestTraversalFromDisplayManager()>','<com.android.server.connectivity.Tethering$3: void <init>(com.android.server.connectivity.Tethering,java.lang.String)>','<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSetting)>','<com.android.server.pm.UserManagerService$LocalService: void setBaseUserRestrictionsByDpmsForMigration(int,android.os.Bundle)>','<com.android.server.power.PowerManagerService: void setDeviceIdleWhitelistInternal(int[])>','<com.android.server.audio.AudioService$VolumeController: void setController(android.media.IVolumeController)>','<com.android.server.location.LocationBlacklist: void switchUser(int)>','<android.hardware.usb.V1_0.IUsb$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.wm.InputMonitor: void createInputConsumer(java.lang.String,android.view.InputChannel)>','<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.input.InputManagerService: int access$1200(long,android.view.InputEvent,int,int,int,int,int,int)>','<com.android.server.pm.BackgroundDexOptService: int access$100(com.android.server.pm.BackgroundDexOptService,com.android.server.pm.PackageManagerService,android.util.ArraySet,android.content.Context)>','<com.android.server.am.ActivityStackSupervisor: void acquireLaunchWakelock()>','<com.android.server.am.BatteryStatsService: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>','<com.android.server.am.ProcessRecord: void scheduleCrash(java.lang.String)>','<com.android.server.am.ActivityManagerService: void backgroundWhitelistUid(int)>','<com.android.server.wm.DimLayerController: boolean hasDimLayerUser(com.android.server.wm.DimLayer$DimLayerUser)>','<com.android.server.wm.AppWindowContainerController: void resumeKeyDispatching()>','<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,com.android.server.pm.UserDataPreparer,java.lang.Object)>','<com.android.server.firewall.AndFilter: void <init>()>','<com.android.server.RescueParty$BootThreshold: void <init>()>','<com.android.server.pm.PackageSettingBase: void setInstallReason(int,int)>','<com.android.server.wm.InputMonitor: void setUpdateInputWindowsNeededLw()>','<com.android.server.am.ContentProviderRecord: android.app.ContentProviderHolder newHolder(com.android.server.am.ContentProviderConnection)>','<android.os.IInstalld$Stub$Proxy: boolean reconcileSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String,int)>','<com.android.server.wm.WindowStateAnimator: boolean commitFinishDrawingLocked()>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.util.concurrent.atomic.AtomicInteger access$1300(com.android.server.connectivity.Vpn$LegacyVpnRunner)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getEndpointAddress()>','<com.android.server.audio.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>','<com.android.server.LockGuard: java.lang.Object installNewLock(int)>','<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void <init>(com.android.server.wm.TaskSnapshotPersister,com.android.server.wm.TaskSnapshotPersister$1)>','<com.android.server.usb.UsbService: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>','<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[])>','<com.android.server.usb.UsbMidiDevice$3: void <init>(com.android.server.usb.UsbMidiDevice,java.lang.String,com.android.internal.midi.MidiEventScheduler,java.io.FileOutputStream,int)>','<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean startUserInBackground(int)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void setHALInstrumentation()>','<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getSinceBoot()>','<com.android.server.TelephonyRegistry: android.os.Handler access$600(com.android.server.TelephonyRegistry)>','<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord getResumedActivityLocked()>','<android.hidl.base.V1_0.IBase$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>','<com.android.server.wm.SurfaceControlWithBackground: void setWindowCrop(android.graphics.Rect)>','<com.android.server.input.InputManagerService$7: void <init>(com.android.server.input.InputManagerService,java.lang.String[],java.util.ArrayList,android.hardware.input.InputDeviceIdentifier,java.util.ArrayList)>','<com.android.server.wm.DimLayerController: void stopDimmingIfNeeded()>','<com.android.server.wm.Session: void dragRecipientEntered(android.view.IWindow)>','<com.android.server.SystemService: void onBootPhase(int)>','<com.android.server.am.ActivityStackSupervisor: void updateUIDsPresentOnDisplay()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void grantRuntimePermission(java.lang.String,java.lang.String,int,boolean)>','<com.android.server.am.ActivityManagerShellCommand: int runMakeIdle(java.io.PrintWriter)>','<com.android.server.am.EventLogTags: void writeAmDestroyActivity(int,int,int,java.lang.String,java.lang.String)>','<com.android.server.wm.InputMonitor: com.android.server.input.InputWindowHandle access$1000(com.android.server.wm.InputMonitor)>','<com.android.server.wm.WindowStateAnimator: void setSecureLocked(boolean)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor$UpstreamNetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>','<com.android.server.am.ActivityManagerService$22: void <init>(com.android.server.am.ActivityManagerService,java.lang.String,java.lang.String,java.lang.StringBuilder,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo,android.os.DropBoxManager)>','<com.android.server.wm.DimLayer: float getTargetAlpha()>','<com.android.server.pm.PackageManagerService$18: void <init>(com.android.server.pm.PackageManagerService,android.os.Handler,android.content.ContentResolver)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: com.android.internal.util.State access$400(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.UserController: void finishUserStopping(int,com.android.server.am.UserState)>','<com.android.server.wm.animation.ClipRectTBAnimation: void applyTransformation(float,android.view.animation.Transformation)>','<com.android.server.wm.TaskStack: void setTouchExcludeRegion(com.android.server.wm.Task,int,android.graphics.Region,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.usb.descriptors.UsbDescriptor: java.lang.String getStatusString()>','<com.android.server.ServiceWatcher$2: void onPackageRemoved(java.lang.String,int)>','<com.android.server.wm.TaskTapPointerEventListener: void setTouchExcludeRegion(android.graphics.Region)>','<com.android.server.DeviceIdleController$LocalService: void setAlarmsActive(boolean)>','<com.android.server.power.Notifier: void access$600(com.android.server.power.Notifier)>','<com.android.server.am.ActiveServices: android.app.ActivityManager$RunningServiceInfo makeRunningServiceInfoLocked(com.android.server.am.ServiceRecord)>','<com.android.server.am.ActiveServices: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,android.content.ComponentName,android.content.Intent)>','<com.android.server.LocationManagerService$6: void <init>(com.android.server.LocationManagerService,android.os.Handler)>','<com.android.server.am.ActivityManagerShellCommand: int runSetDebugApp(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService: void registerAppFreezeListener(com.android.server.wm.WindowManagerService$AppFreezeListener)>','<com.android.server.NsdService$NsdStateMachine$DisabledState: boolean processMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>','<com.android.server.am.ActivityStack: boolean isInStackLocked(com.android.server.am.TaskRecord)>','<com.android.server.am.ActivityManagerShellCommand: int runTraceIpcStop(java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>','<com.android.server.pm.PackageManagerService: void access$3200(android.content.pm.PackageParser$Package,android.content.pm.PackageInfoLite)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void <init>(android.content.Context,android.os.UserHandle,com.android.server.usb.UsbSettingsManager)>','<com.android.server.wm.RemoteSurfaceTrace: void setSize(int,int)>','<com.android.server.power.PowerManagerService: void updateUidProcStateInternal(int,int)>','<com.android.server.pm.PackageManagerService: java.lang.String access$4500(java.lang.String,com.android.server.pm.PackageSetting)>','<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>','<com.android.server.NsdService: boolean access$2700(com.android.server.NsdService,int)>','<com.android.server.wm.WindowManagerService$3: void run()>','<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()>','<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>','<com.android.server.audio.FocusRequester: int dispatchFocusChange(int)>','<com.android.server.am.ActivityStackSupervisor: void comeOutOfSleepIfNeededLocked()>','<com.android.server.am.ActivityStackSupervisor: void activityRelaunchingLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: boolean areDefaultRuntimPermissionsGrantedLPr(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void removeLocked()>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.AppWindowToken getAppWindowToken(android.os.IBinder)>','<com.android.server.wm.DragAndDropPermissionsHandler: void binderDied()>','<com.android.server.firewall.StringFilter$IsNullFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,java.lang.String)>','<com.android.server.power.PowerManagerService$PowerManagerHandler: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityStackSupervisor$WaitInfo: void <init>(android.content.ComponentName,android.app.WaitResult)>','<com.android.server.NetworkManagementService: android.net.INetd getNetdService()>','<com.android.server.pm.dex.DexManager: void <init>(android.content.pm.IPackageManager,com.android.server.pm.PackageDexOptimizer,com.android.server.pm.Installer,java.lang.Object)>','<com.android.server.am.ActivityRecord$Token: java.lang.String toString()>','<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForType(int)>','<com.android.server.AlarmManagerService: void interactiveStateChangedLocked(boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void drawMagnifiedRegionBorderIfNeededLocked()>','<com.android.server.audio.AudioService: void onIndicateSystemReady()>','<com.android.server.pm.Policy: java.lang.String access$500(com.android.server.pm.Policy)>','<com.android.server.am.DumpHeapProvider: java.io.File getJavaFile()>','<com.android.server.wm.InputMonitor: boolean destroyInputConsumer(java.lang.String)>','<com.android.server.NetworkManagementService: boolean setDataSaverModeEnabled(boolean)>','<com.android.server.connectivity.NetworkMonitor$MaybeNotifyState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackageForInstall(java.lang.String,int,int,java.lang.String)>','<com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException from(android.content.pm.PackageParser$PackageParserException)>','<android.hidl.base.V1_0.DebugInfo: int hashCode()>','<com.android.server.pm.PackageInstallerSession$3: void <init>(com.android.server.pm.PackageInstallerSession)>','<com.android.server.ConnectivityService: int registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>','<com.android.server.LocationManagerService: java.lang.String access$2300(com.android.server.LocationManagerService,int)>','<com.android.server.power.PowerManagerService: android.content.Context access$800(com.android.server.power.PowerManagerService)>','<com.android.server.usb.UsbService$Lifecycle: void onSwitchUser(int)>','<com.android.server.NetworkManagementService: boolean isFirewallEnabled()>','<com.android.server.usb.descriptors.UsbACMixerUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.am.TaskPersister: boolean access$600(java.lang.String)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: boolean contains(com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter)>','<com.android.server.am.ActivityManagerShellCommand: int access$1202(com.android.server.am.ActivityManagerShellCommand,int)>','<com.android.server.am.ActivityManagerService: boolean isInPictureInPictureMode(android.os.IBinder)>','<com.android.server.am.ActivityManagerService: com.android.server.am.BroadcastQueue broadcastQueueForIntent(android.content.Intent)>','<com.android.server.am.EventLogTags: void writeAmMeminfo(long,long,long,long,long)>','<com.android.server.wm.WindowSurfaceController: void clearCropInTransaction(boolean)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getValidLaunchStackOnDisplay(int,com.android.server.am.ActivityRecord)>','<com.android.server.InputMethodManagerService: boolean setInputMethodEnabledLocked(java.lang.String,boolean)>','<com.android.server.audio.AudioService$Lifecycle: void onStart()>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: void write(org.xmlpull.v1.XmlSerializer)>','<com.android.server.wm.WindowManagerService: boolean clearWindowContentFrameStats(android.os.IBinder)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.wm.WindowState: android.view.IApplicationToken getAppToken()>','<com.android.server.audio.AudioService: void access$8100(com.android.server.audio.AudioService,int)>','<com.android.server.usb.UsbDeviceManager: com.android.server.usb.UsbDeviceManager$UsbHandler access$100(com.android.server.usb.UsbDeviceManager)>','<com.android.server.EventLogTags: void writeRestoreSuccess(int,int)>','<com.android.server.am.ActivityManagerService: void trimApplications()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void sortResults(java.util.List)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1200(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.power.WirelessChargerDetector$1: void <init>(com.android.server.power.WirelessChargerDetector)>','<com.android.server.am.ActivityManagerService: void reportSizeConfigurations(android.os.IBinder,int[],int[],int[])>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskRemoved(int)>','<com.android.server.wm.TaskStack: void beginImeAdjustAnimation()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.am.UriPermissionOwner: void removeUriPermissionLocked(com.android.server.am.ActivityManagerService$GrantUri,int)>','<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>','<com.android.server.power.ShutdownThread$8: void <init>(com.android.server.power.ShutdownThread,android.os.RecoverySystem$ProgressListener,boolean[])>','<android.hardware.usb.V1_0.PortPowerRole: java.lang.String dumpBitfield(int)>','<com.android.server.wm.TaskStack: void onAnimationStart(boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void updateSize()>','<com.android.server.wm.DisplayContent: void performLayout(boolean,boolean)>','<com.android.server.am.UserController: int restartUser(int,boolean)>','<com.android.server.wm.WindowState: boolean isAnimatingLw()>','<com.android.server.pm.dex.PackageDexUsage: boolean removeUserPackage(java.lang.String,int)>','<com.android.server.power.PowerManagerService$LocalService: void uidGone(int)>','<com.android.server.wm.WindowContainer: void forceWindowsScaleableInTransaction(boolean)>','<com.android.server.AlarmManagerService$AlarmHandler: void handleMessage(android.os.Message)>','<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>','<com.android.server.audio.RecordingActivityMonitor: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>','<com.android.server.wm.AppTransition: boolean prepareAppTransitionLocked(int,boolean,int,boolean)>','<com.android.server.NsdService$NativeCallbackReceiver: void <init>(com.android.server.NsdService)>','<com.android.server.wm.TaskSnapshotController: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.am.TaskPersister: com.android.server.am.RecentTasks access$200(com.android.server.am.TaskPersister)>','<com.android.server.wm.DisplayContent: void positionChildAt(int,com.android.server.wm.DisplayContent$DisplayChildWindowContainer,boolean)>','<com.android.server.wm.WindowManagerService: boolean hasWideColorGamutSupport()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$1)>','<com.android.server.input.PersistentDataStore: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.audio.MediaFocusControl: int getCurrentAudioFocus()>','<com.android.server.wm.Task: void alignToAdjustedBounds(android.graphics.Rect,android.graphics.Rect,boolean)>','<com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller$1: void <init>(com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller)>','<com.android.server.pm.PackageVerificationState: void <init>(int,com.android.server.pm.PackageManagerService$InstallArgs)>','<com.android.server.location.GnssLocationProvider$7: boolean isAvailableInPlatform()>','<com.android.server.input.InputManagerService: void access$800(com.android.server.input.InputManagerService)>','<com.android.server.pm.PackageInstallerService: android.app.Notification access$300(android.content.Context,java.lang.String,java.lang.String,int)>','<com.android.server.TelephonyRegistry: boolean idMatch(int,int,int)>','<com.android.server.am.ActivityRecord: void updateThumbnailLocked(android.graphics.Bitmap,java.lang.CharSequence)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: int getOwnerUserId()>','<com.android.server.am.UriPermission: int getStrength(int)>','<com.android.server.pm.PackageInstallerService: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)>','<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>','<com.android.server.pm.PackageManagerService: byte[] getIntentFilterVerificationBackup(int)>','<com.android.server.pm.KeySetManagerService: void addSigningKeySetToPackageLPw(com.android.server.pm.PackageSetting,android.util.ArraySet)>','<com.android.server.am.ActivityRecord: void showStartingWindow(com.android.server.am.ActivityRecord,boolean,boolean,boolean)>','<com.android.server.ConnectivityService: void access$3900(com.android.server.ConnectivityService,android.net.Network)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onStoppedUnsupported()>','<com.android.server.wm.WindowManagerService: boolean startViewServer(int)>','<com.android.server.am.VrController: void <init>(java.lang.Object)>','<com.android.server.input.InputManagerService: com.android.server.input.InputManagerService$InputManagerHandler access$1800(com.android.server.input.InputManagerService)>','<com.android.server.wm.Session: void prepareToReplaceWindows(android.os.IBinder,boolean)>','<com.android.server.input.InputManagerService$InputFilterHost: void disconnectLocked()>','<com.android.server.wm.StrictModeFlash: void <init>(android.view.Display,android.view.SurfaceSession)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: com.android.server.am.ActivityRecord access$000(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskStack getImeFocusStackLocked()>','<com.android.server.connectivity.Nat464Xlat: boolean requiresClat(com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.pm.Settings: void writeKernelMappingLPr()>','<com.android.server.pm.Settings: void readAllDomainVerificationsLPr(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.am.ServiceRecord$StartItem: void <init>(com.android.server.am.ServiceRecord,boolean,int,android.content.Intent,com.android.server.am.ActivityManagerService$NeededUriGrants,int)>','<com.android.server.location.GeofenceManager: void <clinit>()>','<com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl: void resetUserState(int)>','<com.android.server.DeviceIdleController: void updateConnectivityState(android.content.Intent)>','<com.android.server.pm.PackageSettingBase: boolean isUpdateAvailable()>','<com.android.server.wm.TaskSnapshotPersister$StoreWriteQueueItem: void onDequeuedLocked()>','<com.android.server.ConnectivityService$NetworkRequestInfo: void <init>(com.android.server.ConnectivityService,android.net.NetworkRequest,android.app.PendingIntent)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setLocationPackagesProvider(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.connectivity.PermissionMonitor: void access$200(com.android.server.connectivity.PermissionMonitor,java.lang.String,int)>','<com.android.server.wm.AccessibilityController: void <clinit>()>','<com.android.server.wm.AppWindowToken: void notifyAppStopped()>','<com.android.server.am.ActivityManagerService: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>','<com.android.server.wm.WindowStateAnimator: boolean finishDrawingLocked()>','<com.android.server.pm.IntentFilterVerificationState: void addFilter(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.DeviceIdleController$MotionListener: void onSensorChanged(android.hardware.SensorEvent)>','<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>','<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.wm.AppWindowAnimator: void startProlongAnimation(int)>','<com.android.server.wm.WindowManagerService: int dipToPixel(int,android.util.DisplayMetrics)>','<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager,android.os.Looper,com.android.server.connectivity.MockableSystemProperties,com.android.server.connectivity.tethering.TetheringDependencies)>','<com.android.server.pm.InstantAppResolver$1: void onPhaseTwoResolved(java.util.List,long)>','<com.android.server.am.UserController: boolean maybeUnlockUser(int)>','<com.android.server.am.PendingIntentRecord$Key: void <init>(int,java.lang.String,com.android.server.am.ActivityRecord,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>','<com.android.server.wm.WindowManagerService: void continueSurfaceLayout()>','<com.android.server.am.ActivityManagerService: void onCoreSettingsChange(android.os.Bundle)>','<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>','<com.android.server.am.EventLogTags: void writeAmProviderLostProcess(int,java.lang.String,int,java.lang.String)>','<com.android.server.DeviceIdleController$MotionListener: boolean registerLocked()>','<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>','<com.android.server.am.UserSwitchingDialog: void startUser()>','<com.android.server.EventLogTags: void writeBackupAgentFailure(java.lang.String,java.lang.String)>','<com.android.server.power.PowerManagerService$SuspendBlockerImpl: void acquire()>','<com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo: void recordSample(com.android.server.net.NetworkStatsObservers$StatsContext)>','<com.android.server.pm.PackageManagerService: void access$1600(com.android.server.pm.PackageManagerService,java.lang.String)>','<com.android.server.audio.AudioService$VolumeStreamState: void checkFixedVolumeDevices()>','<com.android.server.DeviceIdleController$BinderService: java.lang.String[] getSystemPowerWhitelistExceptIdle()>','<com.android.server.pm.UserManagerService: void access$1900(com.android.server.pm.UserManagerService,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck: void setupSocket(int,int,long,long,int)>','<com.android.server.audio.AudioService$VolumeStreamState: boolean hasIndexForDevice(int)>','<com.android.server.AlarmManagerService: void <clinit>()>','<com.android.server.location.GnssLocationProvider$5: void onSubscriptionsChanged()>','<com.android.server.AlarmManagerService: int access$900(com.android.server.AlarmManagerService,long,int)>','<com.android.server.usb.MtpNotificationManager: void showNotification(android.hardware.usb.UsbDevice)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord getHomeActivityForUser(int)>','<com.android.server.wm.WindowManagerService: void reenableKeyguard(android.os.IBinder)>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: android.content.pm.AuxiliaryResolveInfo newResult(android.content.pm.AuxiliaryResolveInfo,int,int)>','<com.android.server.am.ActivityManagerService$MainHandler: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>','<com.android.server.pm.PackageManagerService$25: void <init>(com.android.server.pm.PackageManagerService,java.util.concurrent.CountDownLatch,com.android.server.pm.PackageManagerService$PackageFreezer,int)>','<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>','<com.android.server.input.InputManagerService$TabletModeChangedListenerRecord: void binderDied()>','<com.android.server.wm.AppTransition$2: float getInterpolation(float)>','<com.android.server.NsdService$NativeEvent: void <init>(com.android.server.NsdService,int,java.lang.String,java.lang.String[])>','<com.android.server.AlarmManagerService$AlarmThread: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.wm.InputMonitor: void notifyInputChannelBroken(com.android.server.input.InputWindowHandle)>','<com.android.server.wm.DockedStackDividerController: int getContentWidthInactive()>','<com.android.server.wm.WallpaperController: boolean processWallpaperDrawPendingTimeout()>','<com.android.server.DeviceIdleController: void <init>(android.content.Context)>','<com.android.server.pm.Settings: void applyPendingPermissionGrantsLPw(java.lang.String,int)>','<com.android.server.usb.UsbAlsaManager$1: void <init>(com.android.server.usb.UsbAlsaManager,java.lang.String,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void grantDefaultPermissionsToDefaultDialerApp(java.lang.String,int)>','<com.android.server.NetworkManagementService: boolean access$1800(com.android.server.NetworkManagementService,int)>','<com.android.server.Watchdog: void processStarted(java.lang.String,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.wm.KeyguardDisableHandler: void handleMessage(android.os.Message)>','<com.android.server.NetworkManagementService: void setNetworkPermission(int,java.lang.String)>','<com.android.server.location.GnssStatusListenerHelper$2: void execute(android.location.IGnssStatusListener)>','<com.android.server.pm.EphemeralResolverConnection: void getInstantAppIntentFilterList(int[],java.lang.String,java.lang.String,com.android.server.pm.EphemeralResolverConnection$PhaseTwoCallback,android.os.Handler,long)>','<com.android.server.wm.WindowContainer: void onResize()>','<com.android.server.AlarmManagerService$2: long getNextWakeFromIdleTime()>','<com.android.server.EventLogTags: void writeFullBackupAgentFailure(java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void clear()>','<com.android.server.am.ActivityStarter: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.usb.descriptors.UsbACTerminal: byte getTerminalID()>','<com.android.server.wm.WindowStateAnimator: void destroyDeferredSurfaceLocked()>','<com.android.server.wm.UnknownAppVisibilityController: void notifyAppResumedFinished(com.android.server.wm.AppWindowToken)>','<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>','<com.android.server.net.NetworkPolicyManagerService: void factoryReset(java.lang.String)>','<com.android.server.connectivity.DataConnectionStats$1: void onDataConnectionStateChanged(int,int)>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void populateUsers(int[],com.android.server.pm.PackageSetting)>','<com.android.server.am.EventLogTags: void writeAmFinishActivity(int,int,int,java.lang.String,java.lang.String)>','<com.android.server.wm.AppTransition$3: void <init>(com.android.server.wm.AppTransition,android.os.IRemoteCallback)>','<com.android.server.audio.AudioService: void onTouchExplorationStateChanged(boolean)>','<com.android.server.wm.TaskWindowContainerController: void removeContainer()>','<android.hardware.usb.V1_0.PortRoleType: java.lang.String toString(int)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>','<com.android.server.am.ActivityRecord: void setRequestedOrientation(int)>','<com.android.server.am.ActivityManagerService: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>','<com.android.server.am.ActivityStack: boolean willActivityBeVisibleLocked(android.os.IBinder)>','<com.android.server.am.ActivityManagerShellCommand: int runTaskResize(java.io.PrintWriter)>','<com.android.server.wm.DragState: int getDragLayerLw()>','<com.android.server.audio.AudioService: android.media.AudioManagerInternal$RingerModeDelegate access$10000(com.android.server.audio.AudioService)>','<com.android.server.pm.Settings: void writePackageListLPr()>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: java.lang.String access$200(com.android.server.pm.dex.DexManager$PackageCodeLocations)>','<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getNumDescriptors()>','<com.android.server.pm.PackageSettingBase: void setStopped(boolean,int)>','<com.android.server.audio.AudioService$AudioHandler$2: boolean onError(android.media.MediaPlayer,int,int)>','<com.android.server.am.ActivityManagerService$UidObserverRegistration: void <init>(int,java.lang.String,int,int)>','<com.android.server.location.GnssLocationProvider: void access$3200(com.android.server.location.GnssLocationProvider,byte[],int)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: void ping()>','<com.android.server.net.NetworkPolicyManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>','<com.android.server.am.TaskRecord: android.content.res.Configuration computeNewOverrideConfigurationForBounds(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.pm.PackageManagerService$5: void <init>(com.android.server.pm.PackageManagerService,int[],java.lang.String,java.lang.String,android.os.Bundle,java.lang.String,int,android.content.IIntentReceiver)>','<com.android.server.am.ActivityManagerService$LocalService: void notifyAppTransitionFinished()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: int getAlpha()>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy newWifiPolicy(android.net.NetworkTemplate,boolean)>','<com.android.server.am.UserController: void finishUserStopped(com.android.server.am.UserState)>','<com.android.server.location.GnssLocationProvider: boolean access$2400(com.android.server.location.GnssLocationProvider)>','<com.android.server.InputMethodManagerService$LocalServiceImpl: void hideCurrentInputMethod()>','<com.android.server.firewall.IntentFirewall$Rule: boolean getLog()>','<com.android.server.AlarmManagerService$Alarm: java.lang.String makeTag(android.app.PendingIntent,java.lang.String,int)>','<com.android.server.am.ActivityManagerShellCommand: int runGetStartedUserState(java.io.PrintWriter)>','<com.android.server.audio.AudioService: int access$1700(com.android.server.audio.AudioService,int,android.os.IBinder,int,java.lang.String)>','<com.android.server.am.UserController$Injector: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.AnyMotionDetector$RunningSignalStats: void accumulate(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.NativeDaemonConnector: void setWarnIfHeld(java.lang.Object)>','<com.android.server.wm.WindowState: void clearWillReplaceWindow()>','<com.android.server.wm.TaskSnapshotPersister: void access$900(com.android.server.wm.TaskSnapshotPersister,int,int)>','<com.android.server.location.GnssStatusListenerHelper$1: void <init>(com.android.server.location.GnssStatusListenerHelper)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getCodePath()>','<com.android.server.pm.dex.DexManager$DexSearchResult: java.lang.String access$100(com.android.server.pm.dex.DexManager$DexSearchResult)>','<android.net.util.MultinetworkPolicyTracker$SettingObserver: void onChange(boolean,android.net.Uri)>','<com.android.server.wm.Task: int getDragResizeMode()>','<com.android.server.am.ActivityManagerService: boolean access$1102(com.android.server.am.ActivityManagerService,boolean)>','<com.android.server.am.EventLogTags: void writeAmAnr(int,int,java.lang.String,int,java.lang.String)>','<com.android.server.pm.UserManagerService: boolean isDemoUser(int)>','<com.android.server.am.ActivityRecord: void activityStoppedLocked(android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>','<com.android.server.net.NetworkPolicyManagerService$1: void onLowPowerModeChanged(android.os.PowerSaveState)>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void <init>(int,int,int,int,int)>','<android.net.util.MultinetworkPolicyTracker: int getMeteredMultipathPreference()>','<com.android.server.pm.PackageSettingBase: android.content.pm.IntentFilterVerificationInfo getIntentFilterVerificationInfo()>','<com.android.server.DeviceIdleController: com.android.server.DeviceIdleController$Constants access$100(com.android.server.DeviceIdleController)>','<com.android.server.am.ActivityStack: void onParentChanged()>','<com.android.server.wm.WindowState: float translateToWindowY(float)>','<com.android.server.am.ActivityManagerService: void setNativeDebuggingAppLocked(android.content.pm.ApplicationInfo,java.lang.String)>','<com.android.server.am.ActivityManagerConstants: int getOverrideMaxCachedProcesses()>','<com.android.server.wm.TaskStack: int taskIdFromPoint(int,int)>','<com.android.server.am.EventLogTags: void writeAmKill(int,int,java.lang.String,int,java.lang.String)>','<com.android.server.firewall.SenderFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.DeviceIdleController$8: void onProviderDisabled(java.lang.String)>','<com.android.server.DeviceIdleController: boolean getPowerSaveWhitelistExceptIdleInternal(java.lang.String)>','<com.android.server.location.GnssLocationProvider$NetworkLocationListener: void onProviderDisabled(java.lang.String)>','<com.android.server.AppOpsService$Shell: int onCommand(java.lang.String)>','<com.android.server.audio.AudioService: void access$6700(com.android.server.audio.AudioService,android.bluetooth.BluetoothDevice)>','<com.android.server.EventLogTags: void writeBootProgressPmsDataScanStart(long)>','<com.android.server.wm.WindowState$2: void <init>(com.android.server.wm.WindowState,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.util.MergedConfiguration,boolean,int)>','<com.android.server.pm.PackageManagerService: void setUpdateAvailable(java.lang.String,boolean)>','<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.DeviceIdleController$MotionListener: void onAccuracyChanged(android.hardware.Sensor,int)>','<com.android.server.am.ActivityManagerService$AppTaskImpl: void finishAndRemoveTask()>','<com.android.server.audio.AudioService$VolumeController: void setVisible(boolean)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.firewall.StringFilter$8: java.lang.String getValue(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.EventLogTags: void writeBackupDataChanged(java.lang.String)>','<com.android.server.am.BroadcastRecord: boolean cleanupDisabledPackageReceiversLocked(java.lang.String,java.util.Set,int,boolean)>','<com.android.server.am.ActivityManagerService: android.content.res.Configuration getGlobalConfiguration()>','<com.android.server.wm.AppWindowAnimator: int getStackClip()>','<com.android.server.am.ProcessStatsService: void writeStateAsyncLocked()>','<com.android.server.usb.descriptors.UsbDescriptor: int getStatus()>','<com.android.server.wm.WindowSurfaceController: void setLayerStackInTransaction(int)>','<com.android.server.location.FlpHardwareProvider: void cleanup()>','<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)>','<com.android.server.am.ActivityStackSupervisor: boolean shutdownLocked(int)>','<com.android.server.pm.PackageInstallerSession$4: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>','<com.android.server.wm.WindowStateAnimator: void hide(java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: int runNoHomeScreen(java.io.PrintWriter)>','<com.android.server.wm.TaskSnapshotController: void getClosingTasks(android.util.ArraySet,android.util.ArraySet)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean,android.view.WindowManagerPolicy)>','<com.android.server.am.ActivityManagerService: java.lang.String getLaunchedFromPackage(android.os.IBinder)>','<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>','<com.android.server.am.ActivityManagerShellCommand: int onCommand(java.lang.String)>','<com.android.server.pm.SharedUserSetting: void removePackage(com.android.server.pm.PackageSetting)>','<com.android.server.audio.AudioService: com.android.server.audio.PlaybackActivityMonitor access$6800(com.android.server.audio.AudioService)>','<com.android.server.wm.DimLayer: boolean stepAnimation()>','<com.android.server.audio.AudioService: void setMicrophoneMute(boolean,java.lang.String,int)>','<com.android.server.am.BatteryStatsService: void noteResetBleScan()>','<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)>','<com.android.server.am.BatteryStatsService: boolean isCharging()>','<com.android.server.power.ShutdownThread$6: void run()>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver access$702(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver)>','<com.android.server.am.ActivityStack: void cancelInitializingActivities()>','<com.android.server.net.NetworkPolicyManagerService$9: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.TaskStack: void onAnimationEnd(boolean,android.graphics.Rect,boolean)>','<com.android.server.location.GnssNavigationMessageProvider$1: void execute(android.location.IGnssNavigationMessageListener)>','<com.android.server.am.ActivityStackSupervisor: void goingToSleepLocked()>','<com.android.server.NetworkManagementService: void access$1100(com.android.server.NetworkManagementService,int,int,long,int,boolean)>','<com.android.server.pm.PreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PreferredActivity)>','<com.android.server.am.LaunchWarningWindow: void <init>(android.content.Context,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>','<com.android.server.usb.UsbPortManager$RawPortInfo: int describeContents()>','<com.android.server.wm.AppWindowToken: int getLowestAnimLayer()>','<com.android.server.AlarmManagerService$2: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.TaskRecord: void setStack(com.android.server.am.ActivityStack)>','<com.android.server.RescueParty$Threshold: int access$000(com.android.server.RescueParty$Threshold)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onBeginPackageChanges()>','<com.android.server.connectivity.tethering.SimChangeListener: void <init>(android.content.Context,android.os.Handler,java.lang.Runnable)>','<com.android.server.net.LockdownVpnTracker: void onVpnStateChanged(android.net.NetworkInfo)>','<com.android.server.AlarmManagerService$BroadcastStats: void <init>(int,java.lang.String)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$1300(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.NsdService: boolean access$2300(com.android.server.NsdService,int,android.net.nsd.NsdServiceInfo)>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo access$6900(com.android.server.pm.PackageManagerService,java.lang.String,int,int,int,int)>','<com.android.server.am.ActivityManagerService: void updateLockTaskPackages(int,java.lang.String[])>','<com.android.server.DeviceIdleController$6: void onDisplayAdded(int)>','<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>','<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.usb.UsbAlsaManager: void <init>(android.content.Context)>','<com.android.server.am.ActivityStackSupervisor: boolean resumeHomeStackTask(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.wm.DisplayContent: void updateWindowsForAnimator(com.android.server.wm.WindowAnimator)>','<com.android.server.audio.AudioService: android.hardware.hdmi.HdmiControlManager access$9400(com.android.server.audio.AudioService)>','<com.android.server.power.Notifier: android.app.ActivityManagerInternal access$000(com.android.server.power.Notifier)>','<com.android.server.pm.PackageManagerService: boolean isProtectedBroadcast(java.lang.String)>','<com.android.server.audio.AudioService: java.util.List access$5600()>','<com.android.server.AppOpsService: java.util.List getUidOps(int,int[])>','<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>','<com.android.server.am.ActivityManagerService: void appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)>','<com.android.server.UiThread: android.os.Handler getHandler()>','<com.android.server.am.ActivityManagerShellCommand: int runSuppressResizeConfigChanges(java.io.PrintWriter)>','<com.android.server.am.ActivityManagerService: int getFocusedStackId()>','<com.android.server.wm.WindowState: void setDisplayLayoutNeeded()>','<com.android.server.location.LocationBasedCountryDetector: void access$000(com.android.server.location.LocationBasedCountryDetector,android.location.Location)>','<com.android.server.am.BatteryStatsService: void noteWifiScanStoppedFromSource(android.os.WorkSource)>','<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>','<com.android.server.am.ActivityStack: boolean isVisible()>','<com.android.server.wm.WindowList: void addFirst(java.lang.Object)>','<com.android.server.wm.SurfaceControlWithBackground: void setTransparentRegionHint(android.graphics.Region)>','<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>','<com.android.server.wm.WallpaperWindowToken: void updateWallpaperWindows(boolean,int)>','<com.android.server.am.ActivityStackSupervisor: void scheduleDestroyAllActivities(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.pm.PackageManagerService$22: void run()>','<com.android.server.am.UserController: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.am.BatteryStatsService: void noteStartSensor(int,int)>','<com.android.server.usb.UsbDebuggingManager: boolean access$102(com.android.server.usb.UsbDebuggingManager,boolean)>','<com.android.server.am.UriPermissionOwner: com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findNextTranslucentActivity(com.android.server.am.ActivityRecord)>','<com.android.server.location.LocationProviderProxy: boolean access$000()>','<com.android.server.location.GeofenceProxy: void access$400(com.android.server.location.GeofenceProxy)>','<com.android.server.connectivity.Tethering: java.util.HashSet access$2400(com.android.server.connectivity.Tethering)>','<com.android.server.DeviceIdleController$7: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.NetworkManagementService: void setFirewallUidRules(int,int[],int[])>','<com.android.server.EventLogTags: void writeFullRestorePackage(java.lang.String)>','<com.android.server.pm.PackageManagerService: void deletePreloadsFileCache()>','<com.android.server.am.TaskPersister$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.pm.PreferredIntentResolver: void <init>()>','<com.android.server.am.ActivityManagerService: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void clearKnownImePackageNamesLocked()>','<com.android.server.connectivity.NetworkMonitor$DefaultState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>','<com.android.server.am.ContentProviderRecord: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.pm.UserManagerService$UserData: void <init>()>','<com.android.server.wm.WindowManagerService$2: void onAppTransitionCancelledLocked(int)>','<com.android.server.wm.AppWindowToken: void checkKeyguardFlagsChanged()>','<com.android.server.power.PowerManagerService$BinderService: void releaseWakeLock(android.os.IBinder,int)>','<com.android.server.am.PendingIntentRecord: android.os.RemoteCallbackList detachCancelListenersLocked()>','<com.android.server.pm.PackageSettingBase: boolean isAnyInstalled(int[])>','<com.android.server.wm.UnknownAppVisibilityController: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.SystemServiceManager: void startBootPhase(int)>','<com.android.server.wm.TaskSnapshotSurface$Window: void <init>()>','<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>','<com.android.server.wm.BoundsAnimationController$AppTransitionNotifier: void onAppTransitionFinishedLocked(android.os.IBinder)>','<com.android.server.wm.WindowToken: com.android.server.wm.WindowState getReplacingWindow()>','<com.android.server.wm.AppWindowAnimator: boolean isAnimating()>','<com.android.server.am.TaskPersister: void wakeup(com.android.server.am.TaskRecord,boolean)>','<com.android.server.am.ActivityManagerService$KillHandler: void handleMessage(android.os.Message)>','<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsRecorder access$300(com.android.server.net.NetworkStatsService)>','<com.android.server.usb.UsbSettingsManager: void usbDeviceRemoved(android.hardware.usb.UsbDevice)>','<com.android.server.LocationManagerService: android.app.AppOpsManager access$2100(com.android.server.LocationManagerService)>','<com.android.server.pm.PackageManagerService: int movePackage(java.lang.String,java.lang.String)>','<com.android.server.wm.KeyguardDisableHandler: void <init>(android.content.Context,android.view.WindowManagerPolicy)>','<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>','<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>','<com.android.server.pm.Policy$PolicyBuilder: void <init>()>','<com.android.server.EventLogTags: void writePowerScreenBroadcastDone(int,long,int)>','<com.android.server.pm.PackageInstallerService$Callbacks: void access$200(com.android.server.pm.PackageInstallerService$Callbacks,int,int)>','<com.android.server.power.PowerManagerService: void access$3400(com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService$12: void onDismissError()>','<com.android.server.pm.PackageManagerService: void scheduleWriteSettingsLocked()>','<com.android.server.usb.UsbDeviceManager$5: void <init>(com.android.server.usb.UsbDeviceManager)>','<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)>','<com.android.server.pm.Settings: void createNewUserLI(com.android.server.pm.PackageManagerService,com.android.server.pm.Installer,int,java.lang.String[])>','<com.android.server.wm.WindowManagerService: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>','<com.android.server.audio.MediaFocusControl: boolean notifyExtFocusPolicyFocusAbandon_syncAf(android.media.AudioFocusInfo)>','<com.android.server.input.PersistentDataStore$InputDeviceState: boolean setTouchCalibration(int,android.hardware.input.TouchCalibration)>','<com.android.server.am.ActivityStack: int getChildCount()>','<com.android.server.am.UserController$Injector: com.android.server.pm.UserManagerService getUserManager()>','<com.android.server.input.InputManagerService$LocalService: void setDisplayViewports(android.hardware.display.DisplayViewport,android.hardware.display.DisplayViewport,java.util.List)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void setKeepUninstalledPackages(java.util.List)>','<com.android.server.wm.TaskStack: boolean fillsParent()>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.am.ActivityManagerShellCommand: int runIdleMaintenance(java.io.PrintWriter)>','<com.android.server.usb.descriptors.UsbMSMidiOutputJack: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: java.lang.Object filterToLabel(android.content.pm.PackageParser$ProviderIntentInfo)>','<com.android.server.wm.WindowManagerService: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>','<com.android.server.pm.InstantAppResolver: android.content.pm.AuxiliaryResolveInfo doInstantAppResolutionPhaseOne(android.content.Context,com.android.server.pm.EphemeralResolverConnection,android.content.pm.InstantAppRequest)>','<com.android.server.usb.descriptors.UsbASGeneral: void <init>(int,byte,byte,byte)>','<android.hidl.base.V1_0.IBase$Proxy: void setHALInstrumentation()>','<com.android.server.firewall.OrFilter$1: void <init>(java.lang.String)>','<com.android.server.power.Notifier$3: void run()>','<com.android.server.wm.AppWindowToken: boolean shouldFreezeBounds()>','<com.android.server.am.ActivityManagerService: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.audio.AudioService: void stopBluetoothSco(android.os.IBinder)>','<com.android.server.DeviceIdleController$BinderService: java.lang.String[] getFullPowerWhitelistExceptIdle()>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: void access$200(com.android.server.location.LocationRequestStatistics$PackageStatistics)>','<com.android.server.am.ActivityManagerService: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>','<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>','<com.android.server.wm.WindowManagerService: void access$1100(com.android.server.wm.WindowManagerService)>','<com.android.server.audio.AudioService$2: void onServiceDisconnected(int)>','<com.android.server.wm.WindowSurfaceController: java.lang.String toString()>','<com.android.server.am.UserController$8: void <init>(com.android.server.am.UserController,long,java.lang.String,android.util.ArraySet,java.util.concurrent.atomic.AtomicInteger,com.android.server.am.UserState,int,int)>','<com.android.server.usb.descriptors.UsbACHeader: int getTotalLength()>','<com.android.server.am.ActiveServices: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>','<com.android.server.pm.PackageSetting: boolean isForwardLocked()>','<com.android.server.NsdService: void setEnabled(boolean)>','<com.android.server.wm.WindowStateAnimator: void setAnimation(android.view.animation.Animation)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: void notifySyspropsChanged()>','<com.android.server.am.ActivityRecord: boolean okToShowLocked()>','<com.android.server.wm.WindowState: boolean isPotentialDragTarget()>','<com.android.server.pm.DefaultPermissionGrantPolicy$1: void handleMessage(android.os.Message)>','<com.android.server.TelephonyRegistry: boolean access$700(com.android.server.TelephonyRegistry,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>','<com.android.server.wm.DisplayContent$TaskStackContainers: void <init>(com.android.server.wm.DisplayContent,com.android.server.wm.DisplayContent$1)>','<com.android.server.audio.PlaybackActivityMonitor$DuckingManager: void <init>(com.android.server.audio.PlaybackActivityMonitor$1)>','<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String getCurrentKeyboardLayout()>','<com.android.server.pm.PackageManagerService: boolean canRequestPackageInstalls(java.lang.String,int)>','<com.android.server.PinnerService: void onStart()>','<com.android.server.net.NetworkStatsAccess: boolean isAccessibleToUser(int,int,int)>','<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>','<com.android.server.audio.PlaybackActivityMonitor$PlayMonitorClient: void release()>','<com.android.server.net.NetworkStatsCollection: void removeUids(int[])>','<com.android.server.connectivity.KeepaliveTracker: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>','<com.android.server.pm.PackageInstallerSession$1: boolean accept(java.io.File)>','<com.android.server.location.GnssLocationProvider$2: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: java.util.ArrayList getHashChain()>','<com.android.server.LocationManagerService$Receiver: boolean equals(java.lang.Object)>','<com.android.server.wm.StackWindowController: void getBounds(android.graphics.Rect)>','<com.android.server.am.ActivityManagerService$GrantUri: java.lang.String toSafeString()>','<com.android.server.am.ActivityStackSupervisor: void waitActivityVisible(android.content.ComponentName,android.app.WaitResult)>','<com.android.server.connectivity.NetworkMonitor$EvaluatingState: boolean processMessage(android.os.Message)>','<com.android.server.NetworkManagementService: void access$1200(com.android.server.NetworkManagementService,java.lang.String,android.net.LinkAddress)>','<com.android.server.pm.PackageInstallerSession: void access$300(com.android.server.pm.PackageInstallerSession,android.content.pm.PackageInfo,android.content.pm.ApplicationInfo)>','<com.android.server.am.ActivityStackSupervisor: void sendWaitingVisibleReportLocked(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void cleanUpResourcesLI()>','<com.android.server.AnyMotionDetector$Vector3: com.android.server.AnyMotionDetector$Vector3 cross(com.android.server.AnyMotionDetector$Vector3)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$StackInfo getStackInfo(int)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void createCopyFile()>','<com.android.server.am.NativeCrashListener: void consumeNativeCrashData(java.io.FileDescriptor)>','<com.android.server.am.ActivityManagerService: void updateProcessForegroundLocked(com.android.server.am.ProcessRecord,boolean,boolean)>','<com.android.server.am.ActivityStackSupervisor: void notifyAppTransitionDone()>','<com.android.server.am.ActivityManagerService: void killProcessGroup(int,int)>','<com.android.server.statusbar.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1800(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.util.List getTargetPackageNames(int)>','<com.android.server.ConnectivityService: java.util.HashMap access$600(com.android.server.ConnectivityService)>','<com.android.server.pm.PermissionsState$PermissionData: boolean revoke(int)>','<com.android.server.wm.WindowState: void setWaitingForDrawnIfResizingChanged()>','<com.android.server.usb.UsbDeviceManager: boolean access$700(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.IntentBindRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void scheduleLaunchTaskBehindComplete(android.os.IBinder)>','<com.android.server.wm.StackWindowController: void adjustConfigurationForBounds(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,float,android.content.res.Configuration,android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: byte[] getDefaultAppsBackup(int)>','<com.android.server.ConnectivityService: android.util.SparseArray access$1600(com.android.server.ConnectivityService)>','<com.android.server.wm.AppWindowAnimator: boolean isAnimationStarting()>','<com.android.server.am.ActivityStackSupervisor: void initPowerManagement()>','<com.android.server.power.PowerManagerService$BinderService: boolean isInteractive()>','<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>','<com.android.server.AlarmManagerService: void restorePendingWhileIdleAlarmsLocked()>','<com.android.server.power.ShutdownThread$7: void onProgress(int)>','<com.android.server.am.ActivityManagerService: void stopLocalVoiceInteraction(android.os.IBinder)>','<com.android.server.pm.KeySetManagerService: void addScannedPackageLPw(android.content.pm.PackageParser$Package)>','<com.android.server.DeviceIdleController$BinderService: boolean isPowerSaveWhitelistExceptIdleApp(java.lang.String)>','<com.android.server.am.ServiceRecord: com.android.internal.app.procstats.ServiceState getTracker()>','<com.android.server.wm.AppTransition: int getAppTransition()>','<com.android.server.NetworkManagementService: void removeInterfaceQuota(java.lang.String)>','<com.android.server.wm.RootWindowContainer: void onConfigurationChanged(android.content.res.Configuration)>','<com.android.server.usb.UsbDebuggingManager: void access$600(com.android.server.usb.UsbDebuggingManager,java.lang.String,java.lang.String)>','<com.android.server.wm.Session: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>','<com.android.server.InputMethodManagerService$MethodCallback: void sessionCreated(com.android.internal.view.IInputMethodSession)>','<com.android.server.statusbar.StatusBarManagerService: void access$400(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.power.PowerManagerService$5: void <init>(com.android.server.power.PowerManagerService)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onAppWindowTransitionLocked(com.android.server.wm.WindowState,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$5: void onValues(boolean,java.lang.String)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostCopy(int)>','<com.android.server.NetworkManagementService: void stopInterfaceForwarding(java.lang.String,java.lang.String)>','<com.android.server.pm.UserManagerService$6$1: void <init>(com.android.server.pm.UserManagerService$6)>','<com.android.server.AlarmManagerService: void removeLocked(java.lang.String)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ForwardedStats: java.lang.String toString()>','<com.android.server.connectivity.NetworkDiagnostics: long access$400(com.android.server.connectivity.NetworkDiagnostics)>','<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getControlSize()>','<com.android.server.power.ShutdownThread: void actionDone()>','<com.android.server.usb.descriptors.UsbACMixerUnit: int getChannelConfig()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPostInstall(int,int)>','<com.android.server.am.ActivityStackSupervisor: void addStartingWindowsForVisibleActivities(boolean)>','<com.android.server.am.ActivityManagerService$9: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.UserManagerService$LocalService: boolean isUserUnlockingOrUnlocked(int)>','<com.android.server.usb.UsbPortManager: void addSimulatedPort(java.lang.String,int,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)>','<com.android.server.wm.DisplayContent: com.android.server.wm.WindowToken removeWindowToken(android.os.IBinder)>','<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationExpansionChanged(java.lang.String,boolean,boolean)>','<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(java.lang.String,int,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void addIsolatedUid(int,int)>','<com.android.server.power.PowerManagerService$LocalService: void setDozeOverrideFromDreamManager(int,int)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback: void onNatTimeoutUpdate(int,java.lang.String,int,java.lang.String,int)>','<com.android.server.wm.DisplayContent: int access$400(com.android.server.wm.DisplayContent)>','<com.android.server.am.BroadcastFilter: void dumpBroadcastFilterState(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.StackWindowController: boolean resize(android.graphics.Rect,android.util.SparseArray,android.util.SparseArray,android.util.SparseArray)>','<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()>','<com.android.server.pm.PackageDexOptimizer: int performDexOpt(android.content.pm.PackageParser$Package,java.lang.String[],java.lang.String[],boolean,java.lang.String,com.android.server.pm.CompilerStats$PackageStats,boolean,boolean)>','<com.android.server.InputMethodManagerService: void onSwitchUser(int)>','<com.android.server.NetworkManagementService: void access$800(com.android.server.NetworkManagementService,java.lang.String,boolean)>','<com.android.server.connectivity.Vpn: void <init>(android.os.Looper,android.content.Context,android.os.INetworkManagementService,int)>','<com.android.server.connectivity.NetworkAgentInfo: boolean satisfiesImmutableCapabilitiesOf(android.net.NetworkRequest)>','<com.android.server.wm.WindowManagerService: int getDragLayerLocked()>','<com.android.server.wm.EmulatorDisplayOverlay: void setVisibility(boolean)>','<android.net.ip.RouterAdvertisementDaemon: java.io.FileDescriptor access$400(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.input.InputManagerService$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityStack: void <init>(com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.RecentTasks,boolean)>','<com.android.server.wm.PointerEventDispatcher: void unregisterInputEventListener(android.view.WindowManagerPolicy$PointerEventListener)>','<com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver: void <init>(com.android.server.connectivity.NetworkMonitor,java.lang.String,int,int)>','<com.android.server.wm.DimLayerController: void close()>','<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void <init>(com.android.server.usb.UsbDeviceManager)>','<com.android.server.NetworkManagementService: void access$1000(com.android.server.NetworkManagementService,java.lang.String,java.lang.String)>','<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>','<com.android.server.wm.DisplayContent$ApplySurfaceChangesTransactionState: void <init>(com.android.server.wm.DisplayContent$1)>','<com.android.server.usb.UsbDeviceManager: int access$1602(com.android.server.usb.UsbDeviceManager,int)>','<com.android.server.pm.AbstractStatsBase: java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.pm.AbstractStatsBase)>','<com.android.server.ServiceWatcher$2: void <init>(com.android.server.ServiceWatcher)>','<com.android.server.AlarmManagerService$BatchTimeOrder: void <init>()>','<com.android.server.wm.AppTransition$3: void onAnimationRepeat(android.view.animation.Animation)>','<com.android.server.am.ActivityManagerService: int broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.AppOpsService$Shell: void <init>(com.android.internal.app.IAppOpsService,com.android.server.AppOpsService)>','<com.android.server.NetworkManagementService$Injector: void setDataSaverMode(boolean)>','<com.android.server.wm.TaskStack: boolean setPinnedStackSize(android.graphics.Rect,android.graphics.Rect)>','<android.os.IInstalld$Stub$Proxy: void migrateAppData(java.lang.String,java.lang.String,int,int)>','<com.android.server.power.Notifier: void onWakeUp(java.lang.String,int,java.lang.String,int)>','<com.android.server.wm.TaskSnapshotSurface: android.graphics.Rect calculateSnapshotCrop()>','<com.android.server.power.PowerManagerService$BinderService: boolean isWakeLockLevelSupported(int)>','<com.android.server.pm.PackageManagerService: boolean clearPackagePreferredActivitiesLPw(java.lang.String,int)>','<com.android.server.pm.Installer: boolean dumpProfiles(int,java.lang.String,java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService: void onGlobalActionsHidden()>','<com.android.server.FgThread: com.android.server.FgThread get()>','<com.android.server.TelephonyRegistry: void notifyPreciseCallState(int,int,int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: com.android.internal.util.State access$300(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.net.NetworkPolicyManagerService$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.AppOpsService: void readUidOps(org.xmlpull.v1.XmlPullParser)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$8: void <init>(android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub,android.os.HwParcel)>','<com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,java.lang.String)>','<com.android.server.pm.PackageManagerService: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>','<com.android.server.usb.UsbDeviceManager: boolean access$1302(com.android.server.usb.UsbDeviceManager,boolean)>','<com.android.server.wm.SurfaceControlWithBackground: void setOpaque(boolean)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getResourcePath()>','<com.android.server.usb.UsbAlsaManager: void access$000(com.android.server.usb.UsbAlsaManager,java.lang.String)>','<com.android.server.am.ActivityManagerService: void onLocalVoiceInteractionStartedLocked(android.os.IBinder,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>','<com.android.server.usb.UsbDeviceManager: void clearUsbDebuggingKeys()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void setForceShowMagnifiableBoundsLocked(boolean)>','<com.android.server.am.ActivityStack: void scheduleDestroyActivities(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.am.BatteryStatsService$BatteryStatsHandler: void handleMessage(android.os.Message)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport: android.graphics.Point access$1000(com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultDialerAppLPr(java.lang.String,int)>','<com.android.server.wm.AppTransition$2: void <init>(com.android.server.wm.AppTransition)>','<com.android.server.pm.Settings: boolean isDisabledSystemPackageLPr(java.lang.String)>','<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: boolean access$500(com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>','<com.android.server.net.NetworkStatsRecorder: void setPersistThreshold(long)>','<com.android.server.wm.WindowState: void prepareWindowToDisplayDuringRelayout(boolean)>','<com.android.server.pm.PackageManagerServiceUtils: java.lang.String realpath(java.io.File)>','<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: void <init>(int,byte)>','<android.net.util.PrefixUtils: void <init>()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$202(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,boolean)>','<com.android.server.pm.PackageManagerService: void checkPackageStartable(java.lang.String,int)>','<com.android.server.pm.UserManagerService: boolean markGuestForDeletion(int)>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskCreated(int,android.content.ComponentName)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getUidTagPersistBytes(long)>','<com.android.server.EventLogTags: void writeNotificationAutogrouped(java.lang.String)>','<com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo: boolean checkStats()>','<com.android.server.EventLogTags: void writeBackupRequested(int,int,int)>','<com.android.server.pm.PackageSettingBase: void setInstallerPackageName(java.lang.String)>','<com.android.server.power.PowerManagerService: int access$2300(com.android.server.power.PowerManagerService)>','<com.android.server.am.UriPermission: boolean revokeModes(int,boolean)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>','<com.android.server.audio.AudioService$VolumeStreamState: int getMaxIndex()>','<com.android.server.InputMethodManagerService$LocalServiceImpl: void <init>(android.os.Handler)>','<com.android.server.NetworkManagementService: void access$1400(com.android.server.NetworkManagementService,java.lang.String,long,java.lang.String[])>','<com.android.server.pm.PackageManagerService: java.util.List findSharedNonSystemLibraries(android.content.pm.PackageParser$Package)>','<com.android.server.EventLogTags: void writeFstrimFinish(long)>','<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord getTask()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$ActionIterGenerator: java.util.Iterator generate(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.net.NetworkStatsObservers$RequestInfo: void access$400(com.android.server.net.NetworkStatsObservers$RequestInfo,int)>','<com.android.server.pm.Installer: void access$000(com.android.server.pm.Installer)>','<com.android.server.audio.AudioService: java.lang.String access$8200(com.android.server.audio.AudioService,int,java.lang.String)>','<com.android.server.am.ActivityManagerService$GraphicsBinder: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.audio.AudioService: int getCurrentAudioFocus()>','<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>','<com.android.server.location.MockProvider: void enable()>','<com.android.server.AlarmManagerService$AlarmThread: void run()>','<com.android.server.wm.DisplayContent: int getDisplayId()>','<com.android.server.wm.SurfaceControlWithBackground: void setFinalCrop(android.graphics.Rect)>','<com.android.server.am.UserController$Injector: android.os.UserManagerInternal getUserManagerInternal()>','<com.android.server.firewall.SenderFilter$5: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.wm.DisplayContent$TaskStackContainers: boolean isOnTop()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void setHALInstrumentation()>','<android.hardware.usb.V1_0.IUsb$Stub: void notifySyspropsChanged()>','<com.android.server.LocationManagerService: int getGnssBatchSize(java.lang.String)>','<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType$Holder: android.util.SparseArray access$000()>','<com.android.server.power.Notifier: void onScreenBrightnessBoostChanged()>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssMeasurementsProvider getGnssMeasurementsProvider()>','<com.android.server.wm.AppWindowContainerController$H: void <init>(com.android.server.wm.AppWindowContainerController,android.os.Looper)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getAttribs()>','<com.android.server.am.ActivityStackSupervisor: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowManagerService: void monitor()>','<com.android.server.am.ActivityManagerService: void removeLruProcessLocked(com.android.server.am.ProcessRecord)>','<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>','<com.android.server.wm.AppWindowToken: void markSavedSurfaceExiting()>','<com.android.server.statusbar.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.power.PowerManagerService: void access$5500(com.android.server.power.PowerManagerService,int)>','<com.android.server.wm.AppTransition: void setLastAppTransition(int,com.android.server.wm.AppWindowToken,com.android.server.wm.AppWindowToken)>','<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>','<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>','<com.android.server.am.TaskRecord: void <init>(com.android.server.am.ActivityManagerService,int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int)>','<android.os.IInstalld$Stub$Proxy: void setAppQuota(java.lang.String,int,int,long)>','<com.android.server.am.ActivityManagerService: int getProcessLimit()>','<com.android.server.NetworkManagementService: void setAllowOnlyVpnForUids(boolean,android.net.UidRange[])>','<com.android.server.AlarmManagerService$UidObserver: void onUidGone(int,boolean)>','<com.android.server.connectivity.NetworkMonitor$1ProbeThread: void run()>','<com.android.server.wm.WindowState: void onMovedByResize()>','<com.android.server.pm.PackageManagerService$7: void run()>','<com.android.server.wm.WindowState: void applyAdjustForImeIfNeeded()>','<com.android.server.location.GnssLocationProvider$2: void onAvailable(android.net.Network)>','<com.android.server.am.HealthStatsBatteryStatsWriter: void writeProc(android.os.health.HealthStatsWriter,android.os.BatteryStats$Uid$Proc)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: int doPreInstall(int)>','<com.android.server.pm.CompilerStats$PackageStats: java.lang.String getPackageName()>','<com.android.server.LocationManagerService$LinkedCallback: android.location.IBatchedLocationCallback getUnderlyingListener()>','<com.android.server.EventLogTags: void writeDeviceIdleLight(int,java.lang.String)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: void onDaemonConnected()>','<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>','<com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromExistingFile(java.io.File)>','<com.android.server.pm.Settings: void dumpReadMessagesLPr(java.io.PrintWriter,com.android.server.pm.PackageManagerService$DumpState)>','<com.android.server.net.NetworkPolicyManagerService: boolean access$2700(int,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean isInstantAppInstallerComponent(android.content.ComponentName)>','<com.android.server.pm.Installer: boolean copySystemProfile(java.lang.String,int,java.lang.String)>','<com.android.server.am.ActivityManagerService: void dismissKeyguard(android.os.IBinder,com.android.internal.policy.IKeyguardDismissCallback)>','<com.android.server.connectivity.KeepaliveTracker: android.os.Handler access$000(com.android.server.connectivity.KeepaliveTracker)>','<com.android.server.usb.descriptors.UsbHIDDescriptor: void <init>(int,byte)>','<com.android.server.pm.Settings: boolean updateIntentFilterVerificationStatusLPw(java.lang.String,int,int)>','<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int getMaxPacketSize()>','<com.android.server.NsdService: boolean access$2800(com.android.server.NsdService,int,java.lang.String)>','<com.android.server.pm.PackageManagerService$12: void <init>(com.android.server.pm.PackageManagerService,int,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>','<com.android.server.wm.AppWindowContainerController: void <init>(com.android.server.wm.TaskWindowContainerController,android.view.IApplicationToken,com.android.server.wm.AppWindowContainerListener,int,int,boolean,boolean,int,boolean,boolean,boolean,int,int,long,com.android.server.wm.WindowManagerService,android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.net.NetworkStatsObservers$RequestInfo: void binderDied()>','<com.android.server.pm.PackageManagerService$MoveInfo: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>','<com.android.server.location.GnssLocationProvider: void access$6100(com.android.server.location.GnssLocationProvider,android.content.Context,java.util.Properties)>','<com.android.server.AlarmManagerService$Batch: com.android.server.AlarmManagerService$Alarm get(int)>','<com.android.server.pm.dex.PackageDexUsage: void writeInternal(java.lang.Object)>','<com.android.server.am.ProcessStatsService$2: void <init>(com.android.server.am.ProcessStatsService)>','<com.android.server.power.PowerManagerService$2: void onProximityPositive()>','<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>','<com.android.server.am.UserController$3: void userStopAborted(int)>','<com.android.server.am.UserState: java.lang.String stateToString(int)>','<com.android.server.pm.PackageSetting: void <init>(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,java.util.List,int,java.lang.String[],int[])>','<com.android.server.usb.UsbPortManager$PortInfo: java.lang.String toString()>','<com.android.server.wm.WallpaperController: android.os.Bundle sendWindowWallpaperCommand(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)>','<android.net.ip.RouterAdvertisementDaemon$RaParams: void <init>(android.net.ip.RouterAdvertisementDaemon$RaParams)>','<com.android.server.wm.WindowManagerService: void setTransparentRegionWindow(com.android.server.wm.Session,android.view.IWindow,android.graphics.Region)>','<com.android.server.pm.PackageManagerService$26: void <init>(com.android.server.pm.PackageManagerService,java.util.concurrent.CountDownLatch,long,java.io.File,long,int)>','<com.android.server.AppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>','<com.android.server.wm.TaskStack: boolean setAdjustedForMinimizedDock(float)>','<com.android.server.wm.WindowSurfacePlacer: void destroyAfterTransaction(android.view.SurfaceControl)>','<com.android.server.am.ActivityStackSupervisor: void onLockTaskPackagesUpdatedLocked()>','<com.android.server.statusbar.StatusBarManagerService: void onClearAllNotifications(int)>','<com.android.server.am.ActivityManagerService: void sendIdleJobTrigger()>','<com.android.server.wm.WindowManagerService$LocalService: boolean isHardKeyboardAvailable()>','<com.android.server.am.ActivityRecord: void removeOrphanedStartingWindow(boolean)>','<com.android.server.net.NetworkStatsService$5: void <init>(com.android.server.net.NetworkStatsService)>','<com.android.server.am.ActivityManagerService: void stopSystemLockTaskMode()>','<com.android.server.am.LaunchingTaskPositioner: void setDisplay(android.view.Display)>','<com.android.server.AppOpsService$Callback: void unlinkToDeath()>','<com.android.server.location.ActivityRecognitionProxy: com.android.server.location.ActivityRecognitionProxy createAndBind(android.content.Context,android.os.Handler,boolean,android.hardware.location.ActivityRecognitionHardware,int,int,int)>','<com.android.server.firewall.IntentFirewall$FirewallHandler: void <init>(com.android.server.firewall.IntentFirewall,android.os.Looper)>','<android.hidl.base.V1_0.DebugInfo: void <init>()>','<com.android.server.pm.Settings: void dumpSharedUsersProto(android.util.proto.ProtoOutputStream)>','<com.android.server.wm.WindowContainer$ForAllWindowsConsumerWrapper: boolean apply(java.lang.Object)>','<android.net.util.SharedLog: void <init>(java.lang.String)>','<com.android.server.AlarmManagerService: long access$602(com.android.server.AlarmManagerService,long)>','<com.android.server.net.NetworkPolicyManagerService$ProcStateSeqHistory: void <init>(int)>','<com.android.server.pm.PackageManagerService: java.util.Collection getPackages()>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$TetheringOffloadCallback: void onEvent(int)>','<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure()>','<com.android.server.am.ActivityManagerService: void dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],boolean,java.io.PrintWriter)>','<com.android.server.wm.UnknownAppVisibilityController: void appRemovedOrHidden(com.android.server.wm.AppWindowToken)>','<com.android.server.am.ActivityManagerService: boolean checkAppSwitchAllowedLocked(int,int,int,int,java.lang.String)>','<com.android.server.NetworkManagementService: void addVpnUidRanges(int,android.net.UidRange[])>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack createStackOnDisplay(int,int,boolean)>','<com.android.server.am.ActivityManagerService: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>','<com.android.server.pm.IntentFilterVerificationState: void setState(int)>','<com.android.server.am.ActivityManagerService: void access$1000(com.android.server.am.ActivityManagerService,int)>','<com.android.server.input.InputManagerService$InputManagerHandler: void <init>(com.android.server.input.InputManagerService,android.os.Looper)>','<com.android.server.audio.AudioService: void access$6200(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: java.util.List access$2700(com.android.server.pm.PackageManagerService)>','<com.android.server.am.ActiveServices$ServiceMap: void <init>(com.android.server.am.ActiveServices,android.os.Looper,int)>','<com.android.server.connectivity.NetworkDiagnostics$IcmpCheck: void run()>','<com.android.server.pm.PackageSignatures: void writeXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.ArrayList)>','<com.android.server.power.PowerManagerService$BinderService: void setTemporaryScreenBrightnessSettingOverride(int)>','<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbSettingsManager)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$RecentTaskInfo access$1900(com.android.server.am.ActivityManagerService,com.android.server.am.TaskRecord)>','<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>','<com.android.server.location.LocationFudger: void access$100(com.android.server.location.LocationFudger,float)>','<com.android.server.am.EventLogTags: void writeAmProcBound(int,int,java.lang.String)>','<com.android.server.NetworkManagementService: android.util.SparseIntArray access$2100(com.android.server.NetworkManagementService)>','<com.android.server.am.ActivityStarter: android.graphics.Rect getOverrideBounds(com.android.server.am.ActivityRecord,android.app.ActivityOptions,com.android.server.am.TaskRecord)>','<com.android.server.wm.BlackFrame: void kill()>','<com.android.server.wm.WindowManagerService: void endProlongedAnimations()>','<com.android.server.power.ShutdownThread$8: void run()>','<com.android.server.am.ActivityManagerService: boolean isTopOfTask(android.os.IBinder)>','<com.android.server.am.ActiveInstrumentation: void removeProcess(com.android.server.am.ProcessRecord)>','<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean isEligibleForNewTasks()>','<com.android.server.am.ActivityStackSupervisor: void clearOtherAppTimeTrackers(com.android.server.am.AppTimeTracker)>','<com.android.server.wm.WindowState: void hidePermanentlyLw()>','<com.android.server.net.NetworkPolicyManagerService: void access$1500(com.android.server.net.NetworkPolicyManagerService,android.net.INetworkPolicyListener,int,int)>','<com.android.server.IntentResolver$IteratorWrapper: boolean hasNext()>','<com.android.server.ConnectivityService: com.android.server.connectivity.KeepaliveTracker access$1500(com.android.server.ConnectivityService)>','<android.hardware.configstore.V1_0.OptionalBool: void readFromParcel(android.os.HwParcel)>','<com.android.server.am.ActivityManagerShellCommand: int runStackResizeDocked(java.io.PrintWriter)>','<com.android.server.wm.AppWindowAnimator: void <init>(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowManagerService)>','<com.android.server.wm.AccessibilityController: void onWindowFocusChangedNotLocked()>','<com.android.server.pm.PermissionsState: java.util.List getRuntimePermissionStates(int)>','<com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller: void <init>()>','<com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller: java.util.List getEphemeralResolveInfoList(android.app.IInstantAppResolver,int[],java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService$1: void toggleSplitScreen()>','<com.android.server.InputMethodManagerService$ClientState: java.lang.String toString()>','<com.android.server.wm.TaskStack: void resetAnimationBackgroundAnimator()>','<com.android.server.am.ActivityManagerService: void access$800(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: boolean isForceShowingMagnifiableBoundsLocked()>','<com.android.server.pm.PackageManagerService$11: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,android.content.pm.IPackageDataObserver)>','<com.android.server.power.ShutdownThread: void access$000(android.content.Context)>','<com.android.server.location.GnssLocationProvider$NetworkLocationListener: void onProviderEnabled(java.lang.String)>','<com.android.server.pm.Policy$PolicyBuilder: java.lang.String access$000(com.android.server.pm.Policy$PolicyBuilder)>','<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getRootActivity()>','<com.android.server.am.ProcessRecord: void makeActive(android.app.IApplicationThread,com.android.server.am.ProcessStatsService)>','<com.android.server.pm.PackageManagerService: void clearPackagePersistentPreferredActivities(java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: android.content.Context access$800(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.input.InputManagerService$KeyboardLayoutDescriptor: java.lang.String format(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.TaskStack: boolean pinnedStackResizeDisallowed()>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getNextFocusableStackLocked(com.android.server.am.ActivityStack)>','<com.android.server.statusbar.StatusBarShellCommand: int onCommand(java.lang.String)>','<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void enter()>','<com.android.server.usb.UsbPortManager$2: void <init>(com.android.server.usb.UsbPortManager,android.os.Looper)>','<com.android.server.DeviceIdleController: void receivedGpsLocationLocked(android.location.Location)>','<com.android.server.wm.TaskStack: int compareTo(com.android.server.wm.WindowContainer)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.wm.WindowState: android.graphics.Rect getBackdropFrame(android.graphics.Rect)>','<com.android.server.am.ActivityStack: void getWindowContainerBounds(android.graphics.Rect)>','<com.android.server.pm.Settings: void dumpPackagesProto(android.util.proto.ProtoOutputStream)>','<com.android.server.am.ActivityManagerShellCommand: int runTaskResizeable(java.io.PrintWriter)>','<com.android.server.am.BatteryStatsService$BatteryStatsHandler: void scheduleCpuSyncDueToRemovedUid(int)>','<com.android.server.usb.UsbDeviceManager: android.content.Intent access$1200(com.android.server.usb.UsbDeviceManager)>','<com.android.server.connectivity.DataConnectionStats$1: void onServiceStateChanged(android.telephony.ServiceState)>','<com.android.server.am.PinnedActivityStack: void animateResizePinnedStack(android.graphics.Rect,android.graphics.Rect,int,boolean)>','<com.android.server.AppOpsService$1$1: java.lang.Object doInBackground(java.lang.Object[])>','<com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode: com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode valueOf(java.lang.String)>','<com.android.server.am.UserController: void onSystemReady()>','<com.android.server.connectivity.PacManager: boolean access$400(com.android.server.connectivity.PacManager,java.lang.String)>','<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowSurfaceController createSurfaceLocked(int,int)>','<com.android.server.usb.UsbDebuggingManager: void denyUsbDebugging()>','<com.android.server.pm.PackageManagerService$5: void run()>','<com.android.server.pm.PackageManagerService: void access$5500(com.android.server.pm.PackageManagerService,org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.wm.WindowContainer: void sendAppVisibilityToClients()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getTopDismissingKeyguardActivity()>','<com.android.server.power.Notifier$1: void run()>','<com.android.server.power.PowerManagerService: com.android.server.power.SuspendBlocker access$1900(com.android.server.power.PowerManagerService)>','<com.android.server.location.GeofenceProxy$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>','<com.android.server.am.VrController: int access$202(com.android.server.am.VrController,int)>','<com.android.server.pm.Settings: com.android.server.pm.Settings$VersionInfo getExternalVersion()>','<com.android.server.input.InputManagerService$11: void onChange(boolean)>','<com.android.server.wm.WindowManagerService: void pokeDrawLock(com.android.server.wm.Session,android.os.IBinder)>','<com.android.server.wm.WindowSurfaceController: void deferTransactionUntil(android.os.IBinder,long)>','<com.android.server.DeviceIdleController: void stepIdleStateLocked(java.lang.String)>','<com.android.server.wm.AppTransition: android.view.animation.Animation createThumbnailAspectScaleAnimationLocked(android.graphics.Rect,android.graphics.Rect,android.graphics.GraphicBuffer,int,int,int)>','<com.android.server.pm.AbstractStatsBase: android.util.AtomicFile getFile()>','<com.android.server.am.ActivityManagerShellCommand: int runDisplayMoveStack(java.io.PrintWriter)>','<com.android.server.am.UserController: boolean unlockUserCleared(int,byte[],byte[],android.os.IProgressListener)>','<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.os.IBinder,boolean)>','<com.android.server.UiThread: void run()>','<com.android.server.am.ActivityStack: void startActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,boolean,android.app.ActivityOptions)>','<com.android.server.LocationManagerService: boolean access$1900(com.android.server.LocationManagerService,java.lang.String)>','<com.android.server.power.PowerManagerService: boolean access$700(com.android.server.power.PowerManagerService)>','<com.android.server.pm.PackageManagerService: boolean runBackgroundDexoptJob()>','<com.android.server.AppOpsService$Restriction: void <clinit>()>','<com.android.server.am.ActivityManagerService: boolean isBackgroundVisibleBehind(android.os.IBinder)>','<com.android.server.wm.WindowManagerService: int[] setNewDisplayOverrideConfiguration(android.content.res.Configuration,int)>','<com.android.server.am.ActivityStackSupervisor: java.util.List getTopVisibleActivities()>','<com.android.server.wm.WindowState: boolean isInteresting()>','<com.android.server.net.NetworkPolicyManagerService: void registerListener(android.net.INetworkPolicyListener)>','<com.android.server.am.BaseErrorDialog: void onStart()>','<com.android.server.NativeDaemonConnector$SensitiveArg: java.lang.String toString()>','<com.android.server.am.ActiveServices: void updateScreenStateLocked(boolean)>','<com.android.server.pm.PackageManagerService$10: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSetting)>','<com.android.server.am.AppErrors: void loadAppsNotReportingCrashesFromConfigLocked(java.lang.String)>','<com.android.server.pm.PackageManagerService: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: int access$502(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,int)>','<com.android.server.audio.AudioService: void access$7500(com.android.server.audio.AudioService,java.lang.String,int)>','<android.hardware.usb.V1_0.IUsb$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.wm.DisplayContent: void updateSystemUiVisibility(int,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void <clinit>()>','<com.android.server.audio.FocusRequester: boolean isLockedFocusOwner()>','<com.android.server.pm.UserManagerService$3: void run()>','<com.android.server.pm.BackgroundDexOptService: void <clinit>()>','<com.android.server.am.ActivityManagerService$1: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.wm.DisplayContent$NonAppWindowContainers: java.lang.String getName()>','<com.android.server.am.ActivityManagerService$PendingAssistExtras: void run()>','<com.android.server.InputMethodManagerService$1: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.pm.Policy: java.util.Set access$400(com.android.server.pm.Policy)>','<com.android.server.connectivity.Tethering: boolean access$900(com.android.server.connectivity.Tethering)>','<com.android.server.audio.RecordingActivityMonitor: void onRecordingConfigurationChanged(int,int,int,int[])>','<com.android.server.pm.PackageManagerService: boolean performDexOptSecondary(java.lang.String,int,boolean)>','<com.android.server.connectivity.Tethering: void access$1200(com.android.server.connectivity.Tethering,java.lang.String,int)>','<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>','<com.android.server.power.Notifier: void access$700(com.android.server.power.Notifier)>','<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getDescriptors()>','<com.android.server.wm.WallpaperVisibilityListeners: void notifyWallpaperVisibilityChanged(com.android.server.wm.DisplayContent)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: android.net.INetworkStatsService access$1800(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.connectivity.tethering.SimChangeListener: java.lang.Runnable access$300(com.android.server.connectivity.tethering.SimChangeListener)>','<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall$FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.am.ActivityManagerService$SleepTokenImpl: void release()>','<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>','<com.android.server.wm.WindowManagerService$6: void <init>(com.android.server.wm.WindowManagerService,android.view.IOnKeyguardExitResult)>','<com.android.server.wm.WindowManagerService: void notifyKeyguardFlagsChanged(java.lang.Runnable)>','<com.android.server.NetworkManagementService$Injector: void setFirewallChainState(int,boolean)>','<com.android.server.am.ActivityManagerService: void startLockTaskModeByToken(android.os.IBinder)>','<com.android.server.net.NetworkStatsObservers$1: boolean handleMessage(android.os.Message)>','<com.android.server.wm.DimLayerController: void startDimmingIfNeeded(com.android.server.wm.DimLayer$DimLayerUser,com.android.server.wm.WindowStateAnimator,boolean)>','<com.android.server.pm.PackageManagerService$PackageParserCallback: java.lang.String[] getStaticOverlayPaths(java.lang.String,java.lang.String)>','<com.android.server.LocationManagerService$Receiver: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>','<com.android.server.wm.SurfaceControlWithBackground: void setPosition(float,float)>','<android.hardware.usb.V1_0.IUsb$Stub: void setHALInstrumentation()>','<com.android.server.am.ActivityManagerService: boolean finishActivityAffinity(android.os.IBinder)>','<com.android.server.pm.EphemeralResolverConnection: void binderDied()>','<com.android.server.audio.AudioService$VolumeController: void loadSettings(android.content.ContentResolver)>','<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean)>','<com.android.server.wm.TaskStack: void switchUser()>','<com.android.server.am.UriPermission: void grantModes(int,com.android.server.am.UriPermissionOwner)>','<com.android.server.pm.Settings: void addUserToSettingLPw(com.android.server.pm.PackageSetting)>','<com.android.server.ConnectivityService: boolean access$2000(int)>','<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent$Callbacks,int,android.content.ComponentName[],android.content.ComponentName,boolean)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void setLocalPrefixes(java.util.ArrayList,android.hardware.tetheroffload.control.V1_0.IOffloadControl$setLocalPrefixesCallback)>','<com.android.server.EventLogTags: void writePowerScreenBroadcastStop(int,int)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: boolean isUsedByOtherApps()>','<com.android.server.am.ActivityRecord: boolean isAlwaysFocusable()>','<com.android.server.ConnectivityService$2: void onMeteredIfacesChanged(java.lang.String[])>','<com.android.server.power.PowerManagerService$5: void onVrStateChanged(boolean)>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void notify(int)>','<com.android.server.wm.WindowManagerService: void logSurface(android.view.SurfaceControl,java.lang.String,java.lang.String)>','<com.android.server.am.TaskRecord: boolean autoRemoveFromRecents()>','<com.android.server.am.ActivityStackSupervisor: void deferUpdateBounds(int)>','<com.android.server.am.ActiveServices: boolean attachApplicationLocked(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.wm.DimLayerController: void applyDimBehind(com.android.server.wm.DimLayer$DimLayerUser,com.android.server.wm.WindowStateAnimator)>','<com.android.server.am.ActivityManagerShellCommand: int resizeStackUnchecked(int,android.graphics.Rect,int,boolean)>','<com.android.server.am.ActivityStackSupervisor: android.content.pm.ActivityInfo resolveActivity(android.content.Intent,java.lang.String,int,android.app.ProfilerInfo,int)>','<com.android.server.firewall.StringFilter$10: void <init>(java.lang.String)>','<com.android.server.wm.DisplayContent: void setLayoutNeeded()>','<com.android.server.am.BatteryStatsService: void scheduleWriteToDisk()>','<com.android.server.pm.PreferredIntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>','<com.android.server.am.BatteryStatsService: void noteWifiScanStopped(int)>','<com.android.server.am.ActivityManagerService: com.android.server.am.KeyguardController access$1800(com.android.server.am.ActivityManagerService)>','<com.android.server.wm.WindowState: boolean fillsDisplay()>','<com.android.server.pm.PackageInstallerService$InternalCallback: void <init>(com.android.server.pm.PackageInstallerService)>','<com.android.server.input.InputManagerService: boolean isInputDeviceEnabled(int)>','<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void enter()>','<com.android.server.input.InputManagerService$5: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: java.lang.String interfaceDescriptor()>','<com.android.server.InputMethodManagerService: void hideInputMethodMenuLocked()>','<com.android.server.NsdService: java.util.HashMap access$400(com.android.server.NsdService)>','<com.android.server.ConnectivityService: void access$4800(com.android.server.ConnectivityService,android.net.NetworkRequest)>','<com.android.server.usb.descriptors.UsbACEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.location.GnssLocationProvider: void access$200(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: void updateCodeLocation(java.lang.String,java.lang.String[])>','<com.android.server.wm.WindowManagerService: void requestTraversal()>','<com.android.server.wm.TaskWindowContainerController: void setTaskDescription(android.app.ActivityManager$TaskDescription)>','<android.hardware.usb.V1_0.IUsb$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.wm.AppWindowToken: void setAppLayoutChanges(int,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService: void access$2500(com.android.server.net.NetworkPolicyManagerService,int,boolean)>','<com.android.server.NetworkManagementService: void setIPv6AddrGenMode(java.lang.String,int)>','<com.android.server.SystemServiceManager: boolean isSafeMode()>','<com.android.server.am.AppErrors: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.android.server.am.AppErrorDialog$Data)>','<com.android.server.am.ActivityManagerService$7: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>','<com.android.server.wm.DisplayContent$NonAppWindowContainers: int getOrientation()>','<com.android.server.usb.UsbDeviceManager: android.content.ContentResolver access$000(com.android.server.usb.UsbDeviceManager)>','<com.android.server.DeviceIdleController: void cancelSensingTimeoutAlarmLocked()>','<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>','<com.android.server.NetworkManagementService$NetdCallbackReceiver: void <init>(com.android.server.NetworkManagementService,com.android.server.NetworkManagementService$1)>','<com.android.server.TelephonyRegistry: int access$400(com.android.server.TelephonyRegistry)>','<com.android.server.pm.UserManagerService$LocalService: void onEphemeralUserStop(int)>','<android.hardware.usb.V1_0.PortRole: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: void onTransact(int,android.os.HwParcel,android.os.HwParcel,int)>','<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>','<com.android.server.am.TaskChangeNotificationController: void notifyPinnedActivityRestartAttempt(boolean)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord,int)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void addProvider(android.content.pm.PackageParser$Provider)>','<com.android.server.am.ActivityStack: void moveTaskToFrontLocked(com.android.server.am.TaskRecord,boolean,android.app.ActivityOptions,com.android.server.am.AppTimeTracker,java.lang.String)>','<com.android.server.wm.DimLayer: int getLayer()>','<com.android.server.am.ActivityMetricsLogger: void notifyTransitionStarting(android.util.SparseIntArray,long)>','<com.android.server.am.TaskRecord: void resizeWindowContainer()>','<com.android.server.am.ActivityManagerService$1: com.android.server.am.BroadcastFilter newResult(com.android.server.am.BroadcastFilter,int,int)>','<com.android.server.am.ServiceRecord: void updateWhitelistManager()>','<com.android.server.policy.IconUtilities: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable)>','<com.android.server.pm.PermissionsState$PermissionData: boolean isInstallPermissionKey(int)>','<com.android.server.NetworkManagementService: void access$1500(com.android.server.NetworkManagementService,java.lang.String,android.net.RouteInfo)>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String)>','<com.android.server.pm.PackageManagerService$20: void run()>','<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int)>','<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createVirtualActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>','<com.android.server.am.ActivityManagerService: void updateCpuStats()>','<com.android.server.location.GpsXtraDownloader: byte[] doDownload(java.lang.String)>','<com.android.server.am.ProviderMap: com.android.server.am.ContentProviderRecord getProviderByName(java.lang.String,int)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskSnapshot getTaskSnapshot(int,boolean)>','<com.android.server.am.UserController: boolean isUserStoppingOrShuttingDownLocked(int)>','<com.android.server.am.PendingIntentRecord$Key: java.lang.String typeName()>','<com.android.server.pm.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToEnabledCarrierAppsLPr(java.lang.String[],int)>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void handleMessage(android.os.Message)>','<com.android.server.am.ActiveServices: void serviceForegroundCrash(com.android.server.am.ProcessRecord)>','<com.android.server.am.TaskPersister: com.android.server.am.ActivityManagerService access$100(com.android.server.am.TaskPersister)>','<com.android.server.am.ActivityManagerService: void showBootMessage(java.lang.CharSequence,boolean)>','<android.net.INetd$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>','<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)>','<com.android.server.location.GnssLocationProvider: android.os.PowerManager$WakeLock access$3000(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.PermissionsState: void setGlobalGids(int[])>','<com.android.server.connectivity.Vpn: boolean addAddress(java.lang.String,int)>','<com.android.server.pm.CrossProfileIntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>','<com.android.server.wm.AppWindowToken: boolean containsShowWhenLockedWindow()>','<com.android.server.pm.Settings: void dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,android.util.ArraySet,com.android.server.pm.PackageManagerService$DumpState)>','<com.android.server.am.BroadcastStats: void <init>()>','<com.android.server.pm.PackageManagerService$InstallParams: void handleStartCopy()>','<com.android.server.input.InputManagerService: void access$600(com.android.server.input.InputManagerService,android.view.InputDevice[])>','<com.android.server.IntentResolver$IteratorWrapper: void <init>(com.android.server.IntentResolver,java.util.Iterator)>','<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>','<com.android.server.wm.PinnedStackWindowController: boolean pinnedStackResizeDisallowed()>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void queryByComponent(android.content.ComponentName,java.util.List)>','<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>','<com.android.server.audio.AudioService$RmtSbmxFullVolDeathHandler: void <init>(com.android.server.audio.AudioService,android.os.IBinder)>','<com.android.server.NativeDaemonConnector: boolean handleMessage(android.os.Message)>','<com.android.server.pm.PackageManagerService: void removePackageLI(com.android.server.pm.PackageSetting,boolean)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>','<com.android.server.audio.AudioService$VolumeController: void <init>()>','<com.android.server.audio.AudioService$RmtSbmxFullVolDeathHandler: void forget()>','<com.android.server.wm.WindowState: boolean isChildWindow()>','<com.android.server.location.GnssLocationProvider$9: boolean isAvailableInPlatform()>','<com.android.server.wm.DisplayContent: void setExitingTokensHasVisible(boolean)>','<com.android.server.wm.DockedStackDividerController: void getHomeStackBoundsInDockedMode(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: void access$7300(com.android.server.pm.PackageManagerService,java.lang.String,java.lang.String,int,boolean)>','<com.android.server.location.GnssLocationProvider: void access$500(com.android.server.location.GnssLocationProvider,int,int,java.lang.Object)>','<com.android.server.connectivity.tethering.OffloadController: void notifyDownstreamLinkProperties(android.net.LinkProperties)>','<com.android.server.am.ActivityStack: void finishSubActivityLocked(com.android.server.am.ActivityRecord,java.lang.String,int)>','<com.android.server.connectivity.NetworkAgentInfo: int numRequestNetworkRequests()>','<com.android.server.Watchdog$HandlerChecker: java.lang.String getName()>','<com.android.server.am.CoreSettingsObserver: void populateSettings(android.os.Bundle,java.util.Map)>','<com.android.server.wm.WindowContainer: void forAllWindows(java.util.function.Consumer,boolean)>','<com.android.server.usb.UsbPortManager$RawPortInfo$1: com.android.server.usb.UsbPortManager$RawPortInfo[] newArray(int)>','<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState$PermissionState getInstallPermissionState(java.lang.String)>','<com.android.server.pm.EphemeralResolverConnection: void <init>(android.content.Context,android.content.ComponentName,java.lang.String)>','<com.android.server.am.TaskRecord: java.lang.String lockTaskAuthToString()>','<com.android.server.pm.PackageManagerService: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>','<com.android.server.wm.AppWindowToken: void removeChild(com.android.server.wm.WindowState)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean canAccessInstantApps(int,int)>','<com.android.server.usb.UsbMidiDevice$1: void <init>(com.android.server.usb.UsbMidiDevice)>','<com.android.server.am.ActivityManagerService: void startInPlaceAnimationOnFrontMostApplication(android.os.Bundle)>','<com.android.server.wm.WindowState: void clearHasSavedSurface()>','<com.android.server.pm.PackageManagerShellCommand$4: void <init>(com.android.server.pm.PackageManagerShellCommand)>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionAspectScaledThumb(android.graphics.GraphicBuffer,int,int,int,int,android.os.IRemoteCallback,boolean)>','<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getAttributes()>','<com.android.server.pm.Policy: java.lang.String getMatchedSeInfo(android.content.pm.PackageParser$Package)>','<com.android.server.am.ActivityStackSupervisor: void logStackState()>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void enter()>','<com.android.server.am.TaskPersister$1: void <init>(com.android.server.am.TaskPersister)>','<com.android.server.am.BatteryStatsService: void shutdown()>','<com.android.server.am.AppErrorDialog$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.audio.AudioService: int access$1302(com.android.server.audio.AudioService,int)>','<com.android.server.SystemServiceManager: boolean isBootCompleted()>','<com.android.server.pm.PackageDexOptimizer: int adjustDexoptNeeded(int)>','<com.android.server.wm.WindowState: void prelayout()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>','<com.android.server.connectivity.PacManager$2: void <init>(com.android.server.connectivity.PacManager)>','<com.android.server.pm.PackageManagerService$2: void run()>','<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: byte getSubtype()>','<com.android.server.am.UserController: int setTargetUserIdLocked(int)>','<com.android.server.pm.PackageManagerService$PackageFreezer: void finalize()>','<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>','<com.android.server.ConnectivityService$SettingsObserver: void observe(android.net.Uri,int)>','<com.android.server.am.CompatModePackages$CompatHandler: void <init>(com.android.server.am.CompatModePackages,android.os.Looper)>','<com.android.server.InputMethodManagerService$SettingsObserver: void registerContentObserverLocked(int)>','<com.android.server.wm.BoundsAnimationController: void onAllWindowsDrawn()>','<com.android.server.pm.CompilerStats: com.android.server.pm.CompilerStats$PackageStats getOrCreatePackageStats(java.lang.String)>','<com.android.server.connectivity.tethering.OffloadController$1: void onStarted()>','<com.android.server.am.ActivityManagerService: int getLastResumedActivityUserId()>','<com.android.server.wm.WindowManagerService: void setInsetsWindow(com.android.server.wm.Session,android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>','<com.android.server.am.ProcessStatsService$3: void <init>(com.android.server.am.ProcessStatsService,java.lang.String,android.os.ParcelFileDescriptor[],byte[])>','<com.android.server.am.TaskPersister: android.graphics.Bitmap restoreImage(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>','<com.android.server.wm.WindowManagerService: void getBaseDisplaySize(int,android.graphics.Point)>','<com.android.server.am.ActivityManagerService: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String,java.lang.String)>','<com.android.server.wm.PinnedStackController: boolean onTaskStackBoundsChanged(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.am.BatteryStatsService: void noteFlashlightOff(int)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>','<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>','<com.android.server.pm.CompilerStats$PackageStats: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.InputMethodManagerService$SessionState: void <init>(com.android.server.InputMethodManagerService$ClientState,com.android.internal.view.IInputMethod,com.android.internal.view.IInputMethodSession,android.view.InputChannel)>','<com.android.server.wm.TaskSnapshotCache: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.wm.TaskStack: void onRemovedFromDisplay()>','<com.android.server.wm.AppWindowToken: void onAppTransitionDone()>','<com.android.server.am.ActivityManagerService: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>','<com.android.server.location.GnssLocationProvider: boolean access$700()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$InitialState: boolean processMessage(android.os.Message)>','<com.android.server.wm.AppWindowAnimator$DummyAnimation: void <init>()>','<com.android.server.am.BatteryStatsService: void initPowerManagement()>','<com.android.server.pm.PackageInstallerSession: void open()>','<com.android.server.pm.PackageManagerService$PackageParserCallback: java.lang.String[] getOverlayApks(java.lang.String)>','<android.hidl.base.V1_0.IBase$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.pm.PackageVerificationState: boolean timeoutExtended()>','<com.android.server.wm.AppWindowToken: boolean forAllWindowsUnchecked(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.location.LocationBlacklist: void init()>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>','<com.android.server.NetworkManagementService: void denyProtect(int)>','<com.android.server.Watchdog$1: void run()>','<com.android.server.usb.UsbDeviceManager: java.util.Set access$1900()>','<com.android.server.wm.TaskWindowContainerController: void <init>(int,com.android.server.wm.TaskWindowContainerListener,com.android.server.wm.StackWindowController,int,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,boolean,boolean,android.app.ActivityManager$TaskDescription,com.android.server.wm.WindowManagerService)>','<com.android.server.wm.WallpaperWindowToken: boolean hasVisibleNotDrawnWallpaper()>','<com.android.server.pm.PackageSetting: boolean isMatch(int)>','<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: void onUserActionRequired(android.content.Intent)>','<com.android.server.pm.InstantAppRegistry$CookiePersistence: void cancelPendingPersistLPw(android.content.pm.PackageParser$Package,int)>','<com.android.server.wm.InputMonitor$EventReceiverInputConsumer: void dismiss()>','<com.android.server.pm.PackageManagerService: void restorePreferredActivities(byte[],int)>','<com.android.server.am.BatteryStatsService: void noteProcessStart(java.lang.String,int)>','<com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException from(com.android.server.pm.Installer$InstallerException)>','<com.android.server.audio.AudioService$AudioServiceInternal: void setStreamVolumeForUid(int,int,int,java.lang.String,int)>','<com.android.server.TelephonyRegistry: void notifyDataActivityForSubscriber(int,int)>','<com.android.server.am.ActivityManagerService: void resizeTask(int,android.graphics.Rect,int)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$ForceControlStreamClient access$1200(com.android.server.audio.AudioService)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.net.NetworkPolicyManagerService: int getRestrictBackgroundByCaller()>','<com.android.server.AlarmManagerService$InFlight: void <init>(com.android.server.AlarmManagerService,android.app.PendingIntent,android.app.IAlarmListener,android.os.WorkSource,int,java.lang.String,int,java.lang.String,long)>','<com.android.server.wm.WallpaperController: com.android.server.wm.WindowState getWallpaperTarget()>','<com.android.server.usb.descriptors.UsbACSelectorUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.am.ActivityStack: void setResumedActivityLocked(com.android.server.am.ActivityRecord,java.lang.String)>','<com.android.server.am.TaskRecord: com.android.server.wm.TaskWindowContainerController getWindowContainerController()>','<com.android.server.firewall.IntentFirewall$Rule: void readChild(org.xmlpull.v1.XmlPullParser)>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter read(org.xmlpull.v1.XmlPullParser)>','<com.android.server.wm.TaskSnapshotPersister: void removeObsoleteFiles(android.util.ArraySet,int[])>','<com.android.server.wm.DragState: void register(android.view.Display)>','<com.android.server.am.ActivityManagerShellCommand: java.lang.String access$202(com.android.server.am.ActivityManagerShellCommand,java.lang.String)>','<com.android.server.pm.PackageSettingBase: int getEnabled(int)>','<com.android.server.am.ActivityStackSupervisor: void resizeDockedStackLocked(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord topRunningActivityWithStartingWindowLocked()>','<com.android.server.wm.WindowStateAnimator: void setSurfaceBoundariesLocked(boolean)>','<com.android.server.pm.PackageSettingBase: long getDomainVerificationStatusForUser(int)>','<com.android.server.wm.TaskStack: void addTask(com.android.server.wm.Task,int,boolean,boolean)>','<com.android.server.wm.AppWindowToken: void setDisablePreviewScreenshots(boolean)>','<com.android.server.EventLogTags: void writePowerSoftSleepRequested(long)>','<com.android.server.location.GnssNavigationMessageProvider: com.android.server.location.RemoteListenerHelper$ListenerOperation getHandlerOperation(int)>','<com.android.server.usb.UsbUserSettingsManager: void checkPermission(android.hardware.usb.UsbDevice)>','<com.android.server.wm.WindowState: int getOwningUid()>','<com.android.server.pm.Policy: boolean hasGlobalSeinfo()>','<com.android.server.statusbar.StatusBarManagerService$1: void appTransitionCancelled()>','<com.android.server.audio.AudioService: java.util.List getActivePlaybackConfigurations()>','<com.android.server.pm.Installer: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>','<com.android.server.AppOpsService: int noteOperation(int,int,java.lang.String)>','<com.android.server.wm.DisplayContent: com.android.server.wm.TaskStack addStackToDisplay(int,boolean)>','<com.android.server.pm.KeySetManagerService: boolean isIdValidKeySetId(long)>','<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy buildDefaultMobilePolicy(int,java.lang.String)>','<com.android.server.wm.TaskWindowContainerController: void getBounds(android.graphics.Rect)>','<com.android.server.pm.PackageManagerService: void access$3000(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>','<com.android.server.firewall.StringFilter$ValueProvider: void <init>(java.lang.String)>','<com.android.server.wm.BoundsAnimationController: android.util.ArrayMap access$200(com.android.server.wm.BoundsAnimationController)>','<com.android.server.location.GeofenceProxy$2: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void access$100(com.android.server.pm.Settings$RuntimePermissionPersistence,int)>','<com.android.server.am.ActivityStack: void goToSleep()>','<com.android.server.AppOpsService: android.util.ArrayMap access$100(com.android.server.AppOpsService)>','<com.android.server.pm.PackageManagerService$16: void apply(org.xmlpull.v1.XmlPullParser,int)>','<android.net.util.NetdService: android.net.INetd getInstance()>','<com.android.server.firewall.StringFilter$3: void <init>(java.lang.String)>','<com.android.server.net.NetworkStatsCollection: int[] getRelevantUids(int)>','<com.android.server.input.InputManagerService: void access$700(com.android.server.input.InputManagerService,android.hardware.input.InputDeviceIdentifier,com.android.internal.inputmethod.InputMethodSubtypeHandle)>','<com.android.server.net.NetworkPolicyManagerService$7: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void destroyLocked()>','<com.android.server.ConnectivityService: int reserveNetId()>','<com.android.server.audio.AudioService$SoundPoolCallback: void <init>(com.android.server.audio.AudioService,com.android.server.audio.AudioService$1)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void notifySyspropsChanged()>','<com.android.server.power.PowerManagerShellCommand: void onHelp()>','<com.android.server.pm.Settings: int getApplicationEnabledSettingLPr(java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService$17: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.connectivity.Tethering: boolean isTetherProvisioningRequired()>','<com.android.server.am.BatteryStatsService: void noteWifiRunning(android.os.WorkSource)>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>','<com.android.server.NsdService$NsdStateMachine: java.lang.String getWhatToString(int)>','<com.android.server.am.BatteryStatsService: long computeChargeTimeRemaining()>','<com.android.server.wm.WindowManagerService$LocalService: void removeWindowToken(android.os.IBinder,boolean,int)>','<com.android.server.statusbar.StatusBarManagerService: void addTile(android.content.ComponentName)>','<com.android.server.wm.WallpaperController: boolean isWallpaperTargetAnimating()>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: void <init>(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>','<com.android.server.audio.AudioService: void access$7900(com.android.server.audio.AudioService,android.content.ContentResolver)>','<com.android.server.firewall.AndFilter: void <clinit>()>','<com.android.server.usb.UsbUserSettingsManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>','<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()>','<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createStackOnDisplay(int)>','<com.android.server.am.ActivityManagerService: boolean isVrModePackageEnabled(android.content.ComponentName)>','<com.android.server.net.NetworkPolicyManagerService: void access$2100(com.android.server.net.NetworkPolicyManagerService,int,java.lang.Boolean)>','<com.android.server.am.ActivityManagerService: boolean updateDisplayOverrideConfiguration(android.content.res.Configuration,int)>','<com.android.server.wm.AppWindowToken: int getOrientationIgnoreVisibility()>','<com.android.server.am.ActivityManagerService: int setVrMode(android.os.IBinder,boolean,android.content.ComponentName)>','<com.android.server.am.UnsupportedDisplaySizeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>','<com.android.server.net.NetworkPolicyManagerShellCommand: void onHelp()>','<com.android.server.pm.PackageManagerService$14: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.pm.PackageManagerService$OriginInfo: com.android.server.pm.PackageManagerService$OriginInfo fromStagedContainer(java.lang.String)>','<com.android.server.pm.ParallelPackageParser: com.android.server.pm.ParallelPackageParser$ParseResult take()>','<com.android.server.AlarmManagerService: int access$300(com.android.server.AlarmManagerService,long,long)>','<com.android.server.usb.descriptors.ByteStream: int unpackUsbWord()>','<com.android.server.PinnerService: void access$400(com.android.server.PinnerService,int)>','<com.android.server.audio.AudioService: void reloadAudioSettings()>','<com.android.server.wm.DisplayContent: void addChild(com.android.server.wm.WindowContainer,int)>','<com.android.server.usb.UsbMidiDevice$1: void onClose()>','<com.android.server.pm.UserDataPreparer: void <init>(com.android.server.pm.Installer,java.lang.Object,android.content.Context,boolean)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.firewall.IntentFirewall$Rule: int getIntentFilterCount()>','<com.android.server.ConnectivityService$NetworkFactoryInfo: void <init>(java.lang.String,android.os.Messenger,com.android.internal.util.AsyncChannel)>','<com.android.server.pm.ProcessLoggingHandler: void <init>()>','<com.android.server.am.HealthStatsBatteryStatsWriter: void <init>()>','<com.android.server.wm.TaskStack: void updateDisplayInfo(android.graphics.Rect)>','<com.android.server.am.ActivityManagerShellCommand: int runStackResize(java.io.PrintWriter)>','<com.android.server.wm.WindowState: java.lang.String toString()>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient)>','<com.android.server.wm.WindowToken: boolean isFirstChildWindowGreaterThanSecond(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>','<com.android.server.pm.PackageDexOptimizer: int adjustDexoptFlags(int)>','<com.android.server.location.GnssLocationProvider$11: void <init>(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.PinnedStackWindowController: void updatePictureInPictureModeForPinnedStackAnimation(android.graphics.Rect)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: int waitControllerLocked(int,int)>','<com.android.server.input.InputManagerService: void <init>(android.content.Context)>','<com.android.server.pm.PackageDexOptimizer$ForcedUpdatePackageDexOptimizer: void <init>(com.android.server.pm.PackageDexOptimizer)>','<com.android.server.location.GnssMeasurementsProvider$StatusChangedOperation: void execute(android.os.IInterface)>','<com.android.server.connectivity.tethering.OffloadController$OffloadTetheringStatsProvider: void <init>(com.android.server.connectivity.tethering.OffloadController,com.android.server.connectivity.tethering.OffloadController$1)>','<com.android.server.connectivity.Vpn: void stopLegacyVpnPrivileged()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>','<com.android.server.statusbar.StatusBarManagerService: void clearNotificationEffects()>','<com.android.server.wm.Task: void forAllTasks(java.util.function.Consumer)>','<com.android.server.wm.AppWindowAnimator: int getTransit()>','<com.android.server.InputMethodManagerService$Lifecycle: void onSwitchUser(int)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>','<com.android.server.am.ContentProviderConnection: void toShortString(java.lang.StringBuilder)>','<android.os.IInstalld$Stub$Proxy: void idmap(java.lang.String,java.lang.String,int)>','<com.android.server.NetworkManagementService: android.os.Handler access$500(com.android.server.NetworkManagementService)>','<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>','<com.android.server.wm.DisplayContent: boolean getNeedsMenu(com.android.server.wm.WindowState,android.view.WindowManagerPolicy$WindowState)>','<com.android.server.input.PersistentDataStore$InputDeviceState: java.lang.String[] getKeyboardLayouts()>','<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordFailure(java.lang.String)>','<com.android.server.EventLogTags: void writeBootProgressPmsReady(long)>','<com.android.server.PinnerService: android.content.Context access$100(com.android.server.PinnerService)>','<com.android.server.usb.UsbPortManager$RawPortInfo: void <init>(java.lang.String,int,int,boolean,int,boolean,int,boolean)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void onWindowTransitionLocked(com.android.server.wm.WindowState,int)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: void <init>(int,java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService: java.util.List access$3700(com.android.server.pm.PackageManagerService,android.content.Intent,java.lang.String,int,int)>','<com.android.server.location.GnssNavigationMessageProvider$1: void execute(android.os.IInterface)>','<com.android.server.NetworkManagementService$Injector: void setFirewallRule(int,int,int)>','<com.android.server.usb.descriptors.UsbACInputTerminal: int getChannelConfig()>','<com.android.server.pm.Settings: void writePermissionsLPr(org.xmlpull.v1.XmlSerializer,java.util.List)>','<com.android.server.pm.PackageInstallerSession: boolean isPrepared()>','<com.android.server.am.ActivityManagerShellCommand: int moveTask(int,android.graphics.Rect,android.graphics.Rect,int,int,boolean,boolean,int)>','<com.android.server.connectivity.Vpn: java.util.Set access$702(com.android.server.connectivity.Vpn,java.util.Set)>','<com.android.server.AppOpsService$Shell: int strModeToMode(java.lang.String,java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: boolean isStorageLow()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: java.lang.String toString()>','<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>','<com.android.server.wm.TaskSnapshotCache: void onTaskRemoved(int)>','<com.android.server.am.BatteryStatsService: void notePhoneSignalStrength(android.telephony.SignalStrength)>','<android.hardware.usb.V1_0.PortMode: java.lang.String dumpBitfield(int)>','<com.android.server.wm.TaskPositioner: void <init>(com.android.server.wm.WindowManagerService)>','<android.hidl.base.V1_0.IBase$Stub: void ping()>','<com.android.server.pm.Installer: void destroyAppProfiles(java.lang.String)>','<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>','<com.android.server.am.ActivityManagerShellCommand: int runSwitchUser(java.io.PrintWriter)>','<com.android.server.am.ConfigurationContainer: android.content.res.Configuration getConfiguration()>','<com.android.server.location.FusedLocationHardwareSecure: boolean supportsDeviceContextInjection()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void access$1200(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.LocationManagerService$2: void <init>(com.android.server.LocationManagerService)>','<com.android.server.usb.descriptors.ByteStream: int getReadCount()>','<com.android.server.wm.TaskStack: void getBounds(android.graphics.Rect)>','<com.android.server.power.PowerManagerService$BinderService: void wakeUp(long,java.lang.String,java.lang.String)>','<com.android.server.audio.AudioService$AudioHandler$1: void <init>(com.android.server.audio.AudioService$AudioHandler)>','<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>','<com.android.server.am.ActivityManagerService$LocalService: void notifyAppTransitionCancelled()>','<com.android.server.usb.UsbHostManager: void systemReady()>','<com.android.server.power.Notifier: android.view.WindowManagerPolicy access$100(com.android.server.power.Notifier)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface: void <clinit>()>','<com.android.server.power.Notifier: void <init>(android.os.Looper,android.content.Context,com.android.internal.app.IBatteryStats,com.android.internal.app.IAppOpsService,com.android.server.power.SuspendBlocker,android.view.WindowManagerPolicy)>','<com.android.server.location.ActivityRecognitionProxy: void access$000(com.android.server.location.ActivityRecognitionProxy)>','<com.android.server.am.ActivityStack: void releaseBackgroundResources(com.android.server.am.ActivityRecord)>','<com.android.server.pm.PackageSettingBase: void init(java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.wm.Task: void getBounds(android.graphics.Rect)>','<com.android.server.InputMethodManagerService: void notifyUserAction(int)>','<com.android.server.am.BroadcastStats$1: int compare(com.android.server.am.BroadcastStats$ActionEntry,com.android.server.am.BroadcastStats$ActionEntry)>','<com.android.server.wm.RemoteSurfaceTrace: void setAlpha(float)>','<com.android.server.pm.PackageManagerService: java.lang.String access$4600(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.pm.PackageManagerService$FileInstallArgs$1: android.os.ParcelFileDescriptor open(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor: boolean isStoppingNoHistoryActivity()>','<com.android.server.net.NetworkPolicyManagerService: android.os.RemoteCallbackList access$1400(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>','<com.android.server.am.ActivityManagerService$MemBinder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.UserController$7: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.power.WirelessChargerDetector: void <clinit>()>','<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: java.lang.String access$900(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityStack getFocusedStack()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow: void releaseSurface()>','<com.android.server.am.ActivityManagerShellCommand$IntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.pm.PackageManagerService: int checkUidPermission(java.lang.String,int)>','<com.android.server.AlarmManagerService: void finalize()>','<com.android.server.am.ActivityManagerService: void startSetupActivityLocked()>','<com.android.server.net.NetworkPolicyManagerService: void access$100(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getProtocol()>','<com.android.server.wm.ViewServer: void run()>','<com.android.server.ServiceWatcher: void onServiceDisconnected(android.content.ComponentName)>','<com.android.server.am.ActivityManagerShellCommand: java.lang.String access$902(com.android.server.am.ActivityManagerShellCommand,java.lang.String)>','<com.android.server.am.AppErrors: void killAppAtUserRequestLocked(com.android.server.am.ProcessRecord,android.app.Dialog)>','<com.android.server.wm.TaskStack: void onDisplayChanged(com.android.server.wm.DisplayContent)>','<com.android.server.am.ActivityStackSupervisor: boolean isCurrentProfileLocked(int)>','<com.android.server.power.PowerManagerService: void checkForLongWakeLocks()>','<com.android.server.am.ActivityManagerShellCommand: int runWrite(java.io.PrintWriter)>','<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)>','<com.android.server.location.PassiveProvider: boolean isEnabled()>','<com.android.server.wm.Task: void setTaskDescription(android.app.ActivityManager$TaskDescription)>','<com.android.server.audio.RecordingActivityMonitor: void registerRecordingCallback(android.media.IRecordingConfigDispatcher)>','<android.hardware.usb.V1_0.IUsb$Proxy: void notifySyspropsChanged()>','<com.android.server.am.ServiceRecord: void dumpStartList(java.io.PrintWriter,java.lang.String,java.util.List,long)>','<com.android.server.InputMethodManagerService$Lifecycle: void onUnlockUser(int)>','<com.android.server.pm.CompilerStats: void read()>','<com.android.server.net.NetworkPolicyManagerService: void access$1600(com.android.server.net.NetworkPolicyManagerService,android.net.INetworkPolicyListener,java.lang.String[])>','<com.android.server.pm.PermissionsState: boolean hasRuntimePermission(java.lang.String,int)>','<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: void <init>(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,int,com.android.server.am.ActivityStack,com.android.server.am.ProcessRecord)>','<com.android.server.am.AppBindRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ProviderMap: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>','<com.android.server.connectivity.Tethering: android.net.wifi.WifiManager access$2500(com.android.server.connectivity.Tethering)>','<com.android.server.am.TaskRecord: void performClearTaskLocked()>','<com.android.server.pm.KeySetManagerService: void readKeysLPw(org.xmlpull.v1.XmlPullParser)>','<com.android.server.pm.CompilerStats: void deletePackageStats(java.lang.String)>','<com.android.server.DeviceIdleController$LocalService: void setJobsActive(boolean)>','<com.android.server.pm.UserManagerService: boolean someUserHasSeedAccount(java.lang.String,java.lang.String)>','<com.android.server.pm.dex.DexManager: java.lang.Object access$300(java.util.Map,java.lang.Object,java.lang.Object)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config getDevConfig()>','<com.android.server.firewall.SenderPackageFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.pm.PackageManagerService: void clearIntentFilterVerificationsLPw(java.lang.String,int)>','<com.android.server.location.PassiveProvider: void updateLocation(android.location.Location)>','<com.android.server.pm.PackageKeySetData: void <init>()>','<com.android.server.wm.WindowStateAnimator: boolean isForceScaled()>','<com.android.server.AppOpsService$ChangeRec: void <init>(int,int,java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteWifiRssiChanged(int)>','<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesComplete()>','<android.net.util.SharedLog: void w(java.lang.String)>','<com.android.server.location.GnssLocationProvider: void reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int)>','<com.android.server.pm.AbstractStatsBase$1: void <init>(com.android.server.pm.AbstractStatsBase,java.lang.String,java.lang.Object)>','<com.android.server.wm.DisplayContent: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,boolean,float,android.graphics.Bitmap$Config,boolean,boolean)>','<com.android.server.pm.UserManagerService: android.content.pm.UserInfo access$2300(com.android.server.pm.UserManagerService,int)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$TetheringOffloadCallback: void <init>(android.os.Handler,com.android.server.connectivity.tethering.OffloadHardwareInterface$ControlCallback,android.net.util.SharedLog)>','<com.android.server.InputMethodManagerService: boolean switchToLastInputMethod(android.os.IBinder)>','<com.android.server.pm.PackageManagerService: java.lang.String getInstantAppAndroidId(java.lang.String,int)>','<com.android.server.location.GnssStatusListenerHelper$4: void <init>(com.android.server.location.GnssStatusListenerHelper,int,int[],float[],float[],float[],float[])>','<com.android.server.wm.AppTransition: com.android.server.wm.WindowManagerService access$200(com.android.server.wm.AppTransition)>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: android.util.ArrayMap access$2200(com.android.server.pm.PackageManagerService$ProviderIntentResolver)>','<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>','<com.android.server.usb.UsbDeviceManager: int access$1600(com.android.server.usb.UsbDeviceManager)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void remove(int,java.lang.String)>','<com.android.server.am.TaskRecord: void removeWindowContainer()>','<com.android.server.am.ActivityStackSupervisor: void resizeStackLocked(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,boolean)>','<com.android.server.ServiceWatcher: java.lang.Object access$000(com.android.server.ServiceWatcher)>','<com.android.server.net.NetworkPolicyManagerService$10: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.input.InputWindowHandle: java.lang.String toString()>','<com.android.server.NsdService$NsdSettings$1: void putEnabledStatus(boolean)>','<com.android.server.usb.UsbService: void access$100(com.android.server.usb.UsbService,android.os.UserHandle)>','<com.android.server.wm.WindowManagerService: void setCurrentProfileIds(int[])>','<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>','<com.android.server.audio.AudioService$VolumeController: void setA11yMode(int)>','<com.android.server.am.TaskRecord: void cancelThumbnailTransition()>','<com.android.server.am.ActivityManagerShellCommand: int runBugReport(java.io.PrintWriter)>','<com.android.server.EventLogTags: void writeNotificationUnautogrouped(java.lang.String)>','<com.android.server.InputMethodManagerService: void onActionLocaleChanged()>','<com.android.server.connectivity.NetworkNotificationManager$NotificationType: com.android.server.connectivity.NetworkNotificationManager$NotificationType valueOf(java.lang.String)>','<com.android.server.pm.PackageManagerService: void clearCrossProfileIntentFilters(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: void clearApplicationProfileData(java.lang.String)>','<com.android.server.connectivity.Tethering: java.lang.String access$2302(com.android.server.connectivity.Tethering,java.lang.String)>','<com.android.server.am.BroadcastStats$PackageEntry: void <init>()>','<com.android.server.ConnectivityService: java.lang.String getCaptivePortalServerUrl()>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: boolean access$600(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo)>','<com.android.server.location.RemoteListenerHelper$HandlerRunnable: void <init>(com.android.server.location.RemoteListenerHelper,android.os.IInterface,com.android.server.location.RemoteListenerHelper$ListenerOperation)>','<com.android.server.statusbar.StatusBarManagerService$1: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>','<com.android.server.wm.TaskSnapshotPersister: java.io.File access$800(com.android.server.wm.TaskSnapshotPersister,int)>','<com.android.server.am.TaskRecord: void updateEffectiveIntent()>','<android.hardware.configstore.V1_0.OptionalInt64: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.wm.BlackFrame: void hide()>','<com.android.server.audio.AudioService: void setRingerModeExternal(int,java.lang.String)>','<com.android.server.pm.PackageManagerService$IntentVerifierProxy: void startVerifications(int)>','<com.android.server.AnyMotionDetector$RunningSignalStats: com.android.server.AnyMotionDetector$Vector3 getRunningAverage()>','<com.android.server.usb.descriptors.UsbASFormat: byte getFormatType()>','<com.android.server.wm.AppWindowToken: boolean isClientHidden()>','<com.android.server.EventLogTags: void writePowerScreenBroadcastSend(int)>','<com.android.server.NetworkManagementService: void removeVpnUidRanges(int,android.net.UidRange[])>','<com.android.server.am.ActivityStackSupervisor: void <init>(com.android.server.am.ActivityManagerService,android.os.Looper)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long)>','<com.android.server.power.PowerManagerService$LocalService: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>','<com.android.server.audio.AudioService$SetModeDeathHandler: int access$1900(com.android.server.audio.AudioService$SetModeDeathHandler)>','<com.android.server.connectivity.KeepaliveTracker: void handleStopAllKeepalives(com.android.server.connectivity.NetworkAgentInfo,int)>','<com.android.server.wm.Task: boolean isResizeable()>','<com.android.server.pm.UserManagerService: com.android.internal.app.IAppOpsService access$300(com.android.server.pm.UserManagerService)>','<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>','<com.android.server.pm.PackageManagerService: java.util.List access$6700(com.android.server.pm.PackageManagerService)>','<com.android.server.pm.PermissionsState$PermissionState: boolean access$000(com.android.server.pm.PermissionsState$PermissionState)>','<com.android.server.audio.AudioService$AudioPolicyProxy: java.lang.String getRegistrationId()>','<com.android.server.net.NetworkPolicyManagerService: boolean removeUserStateUL(int,boolean)>','<com.android.server.audio.AudioService: boolean isBluetoothA2dpOn()>','<com.android.server.wm.WindowManagerService: void createWatermarkInTransaction()>','<com.android.server.location.LocationProviderProxy: com.android.internal.location.ILocationProvider access$500(com.android.server.location.LocationProviderProxy)>','<com.android.server.pm.Settings: java.lang.String getDefaultDialerPackageNameLPw(int)>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendPackageRemovedBroadcasts(boolean)>','<com.android.server.location.GnssLocationProvider: boolean access$1600(int)>','<com.android.server.DeviceIdleController: void updateChargingLocked(boolean)>','<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean,java.lang.String)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$UnavailableState: void <init>(com.android.server.connectivity.tethering.TetherInterfaceStateMachine)>','<com.android.server.NsdService$DaemonConnection: void <init>(com.android.server.NsdService$NativeCallbackReceiver)>','<com.android.server.am.ActivityManagerService$LocalService: void notifyKeyguardTrustedChanged()>','<com.android.server.wm.WindowManagerService: void registerDockedStackListener(android.view.IDockedStackListener)>','<com.android.server.wm.InputMonitor: void access$800(com.android.server.wm.InputMonitor,com.android.server.input.InputWindowHandle)>','<com.android.server.usb.descriptors.UsbHIDDescriptor: int getRelease()>','<com.android.server.AppOpsService$Op: void <init>(int,java.lang.String,int)>','<com.android.server.wm.AccessibilityController: void performComputeChangedWindowsNotLocked()>','<com.android.server.am.UserController$Injector: void systemServiceManagerStopUser(int)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void notifyPortStatusChange(java.util.ArrayList,int)>','<com.android.server.am.PinnedActivityStack: void updatePictureInPictureModeForPinnedStackAnimation(android.graphics.Rect)>','<com.android.server.pm.dex.DexManager$PackageCodeLocations: void <init>(java.lang.String,java.lang.String,java.lang.String[])>','<com.android.server.pm.Settings: java.lang.String addRenamedPackageLPw(java.lang.String,java.lang.String)>','<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>','<com.android.server.DeviceIdleController$2: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.wm.SurfaceControlWithBackground: void setLayer(int)>','<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistInternal()>','<com.android.server.connectivity.NetworkMonitor$EvaluatingState: void exit()>','<com.android.server.usb.UsbDeviceManager$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.EventLogTags: void writeDeviceIdleStep()>','<com.android.server.wm.PinnedStackController: void setActions(java.util.List)>','<com.android.server.am.ActivityManagerService: int getUidProcessState(int,java.lang.String)>','<android.hardware.usb.V1_0.IUsbCallback$Proxy: android.os.IHwBinder asBinder()>','<com.android.server.connectivity.NetworkNotificationManager: java.lang.String nameOf(int)>','<com.android.server.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>','<com.android.server.am.ActivityManagerShellCommand: int runStackList(java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: int installExistingPackageAsUser(java.lang.String,int,int,int)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$SoundPoolListenerThread access$5500(com.android.server.audio.AudioService)>','<com.android.server.wm.WindowState: boolean isResizedWhileNotDragResizing()>','<com.android.server.pm.ParallelPackageParser: void close()>','<com.android.server.pm.PackageSetting: boolean isPrivileged()>','<com.android.server.am.ActivityManagerService: void resetPriorityAfterLockedSection()>','<com.android.server.am.TaskRecord: boolean setLastThumbnailLocked(android.graphics.Bitmap)>','<com.android.server.location.LocationBlacklist: void onChange(boolean)>','<com.android.server.am.ActivityManagerService$CpuBinder: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.IntentResolver$IteratorWrapper: void remove()>','<com.android.server.location.GnssLocationProvider$8: boolean registerWithService()>','<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>','<com.android.server.location.FusedLocationHardwareSecure: void injectDiagnosticData(java.lang.String)>','<com.android.server.ConnectivityService: com.android.server.connectivity.NetworkNotificationManager access$2200(com.android.server.ConnectivityService)>','<com.android.server.wm.WindowSurfacePlacer$LayerAndToken: void <init>(com.android.server.wm.WindowSurfacePlacer$1)>','<com.android.server.DeviceIdleController$3: void onAlarm()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$DefaultContainerConnection access$500(com.android.server.pm.PackageManagerService)>','<com.android.server.am.UserController: void finishUserSwitch(com.android.server.am.UserState)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int)>','<com.android.server.wm.WindowState$DeathRecipient: void <init>(com.android.server.wm.WindowState,com.android.server.wm.WindowState$1)>','<com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter: void <init>(android.content.Context,android.content.IntentSender,java.lang.String,boolean,int)>','<com.android.server.DeviceIdleController$BinderService: long addPowerSaveTempWhitelistAppForMms(java.lang.String,int,java.lang.String)>','<com.android.server.audio.AudioService: int access$3700(com.android.server.audio.AudioService,int,int,int)>','<com.android.server.pm.PackageSettingBase: void setOverlayPaths(java.util.List,int)>','<com.android.server.LocationManagerService$Receiver: void binderDied()>','<com.android.server.am.UriPermissionOwner: void removeWritePermission(com.android.server.am.UriPermission)>','<com.android.server.am.ActivityManagerShellCommand: int runStartService(java.io.PrintWriter,boolean)>','<android.hardware.tetheroffload.control.V1_0.IPv4AddrPortPair: int hashCode()>','<com.android.server.wm.AppWindowContainerController: void reportWindowsDrawn()>','<com.android.server.wm.Task: int getLayerForDim(com.android.server.wm.WindowStateAnimator,int,int)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getProductIndex()>','<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>','<com.android.server.wm.WindowList: java.lang.Object peekLast()>','<com.android.server.usb.UsbMidiDevice: boolean access$200(com.android.server.usb.UsbMidiDevice)>','<com.android.server.audio.AudioService: java.util.ArrayList access$2500(com.android.server.audio.AudioService)>','<com.android.server.EventLogTags: void writeBootProgressPmsScanEnd(long)>','<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.statusbar.StatusBarManagerService: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>','<com.android.server.am.ActivityManagerService$NeededUriGrants: void <init>(java.lang.String,int,int)>','<com.android.server.wm.InputMonitor: boolean access$600(com.android.server.wm.InputMonitor)>','<com.android.server.pm.Settings: void dumpRestoredPermissionGrantsLPr(java.io.PrintWriter,com.android.server.pm.PackageManagerService$DumpState)>','<com.android.server.wm.TaskStack: void getRawBounds(android.graphics.Rect)>','<com.android.server.wm.WindowManagerService$6: void onKeyguardExitResult(boolean)>','<com.android.server.connectivity.Nat464Xlat: void start()>','<com.android.server.net.NetworkStatsCollection: long getStartMillis()>','<com.android.server.usb.UsbService: boolean isFunctionEnabled(java.lang.String)>','<com.android.server.firewall.StringFilter$ContainsFilter: boolean matchesValue(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: boolean isFrontStackOnDisplay(com.android.server.am.ActivityStack)>','<com.android.server.am.ActivityStackSupervisor: boolean checkStartAnyActivityPermission(android.content.Intent,android.content.pm.ActivityInfo,java.lang.String,int,int,int,java.lang.String,boolean,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityStack,android.app.ActivityOptions)>','<com.android.server.pm.PackageManagerService$6: void <init>(com.android.server.pm.PackageManagerService,int,com.android.server.pm.PackageManagerService$InstallArgs)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackagesUnsuspended(java.lang.String[])>','<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>','<com.android.server.am.TaskRecord: void setWindowContainerController(com.android.server.wm.TaskWindowContainerController)>','<com.android.server.am.AppErrors: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,boolean,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesIdle()>','<com.android.server.am.ActivityManagerService: boolean releaseActivityInstance(android.os.IBinder)>','<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void accept(com.android.server.wm.WindowState)>','<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder)>','<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void accept(java.lang.Object)>','<com.android.server.pm.PackageManagerService: void logCriticalInfo(int,java.lang.String)>','<android.hardware.usb.V1_0.IUsb$Stub: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.am.TaskRecord: boolean updateOverrideConfiguration(android.graphics.Rect,android.graphics.Rect)>','<com.android.server.location.FlpHardwareProvider: boolean isSupported()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void addNetworkPolicyAL(android.net.NetworkPolicy)>','<com.android.server.usb.UsbPortManager: void access$100(int,com.android.internal.util.IndentingPrintWriter,java.lang.String)>','<com.android.server.wm.AppWindowToken: void onWindowReplacementTimeout()>','<com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.pm.SharedUserSetting: void <init>(java.lang.String,int,int)>','<com.android.server.NativeDaemonEvent: java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[],int)>','<com.android.server.am.StrictModeViolationDialog: void <init>(android.content.Context,com.android.server.am.ActivityManagerService,com.android.server.am.AppErrorResult,com.android.server.am.ProcessRecord)>','<com.android.server.InputMethodManagerService$Lifecycle: void <init>(android.content.Context)>','<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)>','<com.android.server.pm.UserManagerService: void reconcileUsers(java.lang.String)>','<com.android.server.am.ActivityRecord: boolean supportsPictureInPicture()>','<com.android.server.connectivity.tethering.OffloadController: android.net.util.SharedLog access$100(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.RescueParty$Threshold: boolean incrementAndTest()>','<com.android.server.pm.UserDataPreparer: java.io.File getDataSystemDeDirectory(int)>','<com.android.server.TelephonyRegistry$Record: boolean matchPhoneStateListenerEvent(int)>','<com.android.server.pm.PackageInstallerService$Callbacks: void unregister(android.content.pm.IPackageInstallerCallback)>','<com.android.server.audio.AudioService$VolumeController: boolean isSameBinder(android.media.IVolumeController)>','<com.android.server.wm.InputMonitor: void notifyConfigurationChanged()>','<com.android.server.am.ActivityManagerService$8: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.AlarmManagerService: int attemptCoalesceLocked(long,long)>','<android.net.util.PrefixUtils: android.net.IpPrefix asIpPrefix(android.net.LinkAddress)>','<com.android.server.am.ActivityStack: java.lang.String toString()>','<com.android.server.audio.AudioService: void access$1800(com.android.server.audio.AudioService,int)>','<com.android.server.audio.AudioService$VolumeStreamState: void readSettings()>','<com.android.server.connectivity.PacManager: com.android.net.IProxyService access$1100(com.android.server.connectivity.PacManager)>','<com.android.server.connectivity.NetworkMonitor: int access$2404(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.am.VrController$1: void <init>(com.android.server.am.VrController)>','<com.android.server.am.ActivityStack: com.android.server.wm.StackWindowController createStackWindowController(int,boolean,android.graphics.Rect)>','<com.android.server.pm.dex.DexManager$DexSearchResult: java.lang.String toString()>','<android.net.INetd$Stub$Proxy: void setIPv6AddrGenMode(java.lang.String,int)>','<com.android.server.power.Notifier: void onUserActivity(int,int)>','<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: java.lang.String interfaceDescriptor()>','<com.android.server.wm.AppWindowContainerController: void onOverrideConfigurationChanged(android.content.res.Configuration,android.graphics.Rect)>','<com.android.server.am.PinnedActivityStack: com.android.server.wm.PinnedStackWindowController createStackWindowController(int,boolean,android.graphics.Rect)>','<com.android.server.am.BatteryStatsService: void noteJobFinish(java.lang.String,int)>','<com.android.server.power.PowerManagerService$Constants: void dump(java.io.PrintWriter)>','<com.android.server.wm.WindowManagerService: int getBaseDisplayDensity(int)>','<com.android.server.pm.PackageManagerService$PackageHandler: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityManagerService: boolean isInMultiWindowMode(android.os.IBinder)>','<com.android.server.pm.SELinuxMMAC: boolean readInstallPolicy()>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: java.lang.String toString()>','<com.android.server.usb.descriptors.UsbACOutputTerminal: byte getTerminal()>','<com.android.server.wm.DisplayContent: void onDescendantOverrideConfigurationChanged()>','<com.android.server.firewall.AndFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.am.UserController$Injector: java.lang.Object getLock()>','<com.android.server.DeviceIdleController$BinderService: void exitIdle(java.lang.String)>','<com.android.server.ConnectivityService$NetworkRequestInfo: void <init>(com.android.server.ConnectivityService,android.os.Messenger,android.net.NetworkRequest,android.os.IBinder)>','<com.android.server.am.ActivityManagerShellCommand$StopUserCallback: void userStopAborted(int)>','<com.android.server.am.BatteryStatsService: void noteNetworkInterfaceType(java.lang.String,int)>','<com.android.server.wm.WindowState: void setAppOpVisibilityLw(boolean)>','<android.net.util.SharedLog: void mark(java.lang.String)>','<com.android.server.am.ActivityStack: void prepareFreezingTaskBounds()>','<com.android.server.ConnectivityService$ReapUnvalidatedNetworks: com.android.server.ConnectivityService$ReapUnvalidatedNetworks valueOf(java.lang.String)>','<com.android.server.am.ActivityRecord: void makeFinishingLocked()>','<android.hardware.configstore.V1_0.OptionalBool: void writeToParcel(android.os.HwParcel)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>','<com.android.server.am.ActivityManagerService$SleepTokenImpl: java.lang.String toString()>','<com.android.server.LocationManagerService: java.util.HashMap access$500(com.android.server.LocationManagerService)>','<com.android.server.wm.TaskStack: void removeIfPossible()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void setDataLimit(java.lang.String,long,android.hardware.tetheroffload.control.V1_0.IOffloadControl$setDataLimitCallback)>','<com.android.server.location.GnssLocationProvider: void access$5500(com.android.server.location.GnssLocationProvider,int)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void registerMobileNetworkRequest()>','<com.android.server.pm.SELinuxMMAC: void <init>()>','<com.android.server.connectivity.Vpn$LegacyVpnRunner: java.lang.String access$1400(com.android.server.connectivity.Vpn$LegacyVpnRunner)>','<com.android.server.wm.TaskStack: boolean isAnimatingForIme()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$IterGenerator: java.util.Iterator generate(android.content.pm.PackageParser$ActivityIntentInfo)>','<com.android.server.wm.InputMonitor: boolean access$402(com.android.server.wm.InputMonitor,boolean)>','<com.android.server.wm.TaskSnapshotPersister$DeleteWriteQueueItem: void write()>','<com.android.server.am.ActivityManagerService: void dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.wm.WindowLayersController: void <init>(com.android.server.wm.WindowManagerService)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void registerAsService(java.lang.String)>','<com.android.server.am.NativeCrashListener: int readExactly(java.io.FileDescriptor,byte[],int,int)>','<com.android.server.wm.WindowState: void switchUser()>','<com.android.server.wm.WindowSurfacePlacer: boolean isInLayout()>','<com.android.server.wm.WindowManagerService: void reconfigureDisplayLocked(com.android.server.wm.DisplayContent)>','<com.android.server.wm.WindowManagerService: void configureDisplayPolicyLocked(com.android.server.wm.DisplayContent)>','<com.android.server.audio.AudioService: void <init>(android.content.Context)>','<com.android.server.pm.Installer: void deleteOdex(java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.WindowManagerService: void access$200(com.android.server.wm.WindowManagerService)>','<com.android.server.location.GnssLocationProvider: void access$5600(com.android.server.location.GnssLocationProvider)>','<com.android.server.wm.WindowAnimator: void orAnimating(boolean)>','<com.android.server.location.GnssLocationProvider: android.content.Context access$5900(com.android.server.location.GnssLocationProvider)>','<com.android.server.pm.EphemeralResolverConnection$1$1: void run()>','<com.android.server.connectivity.NetworkMonitor: android.net.util.Stopwatch access$2300(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.usb.UsbService$1: void <init>(com.android.server.usb.UsbService)>','<com.android.server.NetworkManagementService: void disableIpv6(java.lang.String)>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: void <init>()>','<com.android.server.pm.InstantAppRegistry$CookiePersistence: void handleMessage(android.os.Message)>','<com.android.server.wm.WindowState: boolean performShowLocked()>','<com.android.server.am.UriPermission: android.content.UriPermission buildPersistedPublicApiObject()>','<com.android.server.AnyMotionDetector$4: void run()>','<com.android.server.wm.TaskPositioner: void getDimBounds(android.graphics.Rect)>','<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>','<com.android.server.wm.WindowManagerService: void lockDeviceNow()>','<com.android.server.am.ActivityManagerService: void unregisterTaskStackListener(android.app.ITaskStackListener)>','<com.android.server.am.ActivityStackSupervisor: void dumpDisplayConfigs(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.PreBootBroadcaster: void sendNext()>','<com.android.server.net.NetworkPolicyManagerService$6: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.Session: int relayout(android.view.IWindow,int,android.view.WindowManager$LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.util.MergedConfiguration,android.view.Surface)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void rememberRestoredUserGrantLPr(java.lang.String,java.lang.String,boolean,int,int)>','<com.android.server.pm.dex.PackageDexUsage$DexUseInfo: boolean access$400(com.android.server.pm.dex.PackageDexUsage$DexUseInfo,com.android.server.pm.dex.PackageDexUsage$DexUseInfo)>','<com.android.server.connectivity.Vpn: void <init>(android.os.Looper,android.content.Context,android.os.INetworkManagementService,int,com.android.server.connectivity.Vpn$SystemServices)>','<com.android.server.wm.WindowManagerService$LocalService: int getInputMethodWindowVisibleHeight()>','<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>','<com.android.server.connectivity.Vpn$Connection: void <init>(com.android.server.connectivity.Vpn,com.android.server.connectivity.Vpn$1)>','<com.android.server.am.ProviderMap: boolean dumpProvidersLocked(java.io.PrintWriter,boolean,java.lang.String)>','<com.android.server.InputMethodManagerService$5: void <init>(com.android.server.InputMethodManagerService,com.android.server.InputMethodManagerService$ImeSubtypeListAdapter)>','<com.android.server.am.BatteryStatsService: void noteConnectivityChanged(int,java.lang.String)>','<com.android.server.pm.PackageManagerService: void enterSafeMode()>','<com.android.server.wm.WindowState: android.view.WindowInfo getWindowInfo()>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>','<com.android.server.AppOpsService: void publish(android.content.Context)>','<com.android.server.wm.WindowState: boolean isParentWindowHidden()>','<com.android.server.usb.descriptors.UsbHIDDescriptor: int getDescriptorLen()>','<com.android.server.pm.PackageManagerService: void resetRuntimePermissions()>','<com.android.server.AnyMotionDetector: void stop()>','<com.android.server.AlarmManagerService: int access$500(com.android.server.AlarmManagerService,long)>','<com.android.server.NetworkManagementService: void allowProtect(int)>','<com.android.server.am.BatteryStatsService: void noteModemControllerActivity(android.telephony.ModemActivityInfo)>','<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent,android.content.pm.ActivityInfo,boolean)>','<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>','<com.android.server.am.ActivityRecord: com.android.server.am.ConfigurationContainer getParent()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalInt64 presentTimeOffsetFromVSyncNs()>','<com.android.server.connectivity.PacManager: void <init>(android.content.Context,android.os.Handler,int)>','<com.android.server.audio.AudioService: android.os.Looper access$2002(com.android.server.audio.AudioService,android.os.Looper)>','<com.android.server.audio.FocusRequester: void handleExternalFocusGain(int,com.android.server.audio.FocusRequester)>','<android.net.util.SharedLog$Category: android.net.util.SharedLog$Category valueOf(java.lang.String)>','<com.android.server.connectivity.tethering.OffloadController: void access$400(com.android.server.connectivity.tethering.OffloadController)>','<com.android.server.ConnectivityService: void access$1100(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo)>','<com.android.server.pm.dex.PackageDexUsage: java.util.Set getAllPackagesWithSecondaryDexFiles()>','<com.android.server.NativeDaemonConnector$1: void <init>(com.android.server.NativeDaemonConnector,java.util.concurrent.CountDownLatch)>','<com.android.server.wm.WindowManagerService: int getDockedStackSide()>','<com.android.server.wm.WindowManagerService: boolean stopViewServer()>','<com.android.server.am.BroadcastQueue$AppNotResponding: void run()>','<com.android.server.statusbar.StatusBarManagerService$6: void binderDied()>','<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>','<com.android.server.wm.WindowContainer: int getOrientation()>','<com.android.server.am.ActivityManagerService: boolean moveTopActivityToPinnedStack(int,android.graphics.Rect)>','<com.android.server.ConnectivityService$3: void <init>(com.android.server.ConnectivityService)>','<com.android.server.am.VrController: void onTopProcChangedLocked(com.android.server.am.ProcessRecord)>','<com.android.server.audio.AudioService$VolumeStreamState: void access$900(com.android.server.audio.AudioService$VolumeStreamState,java.io.PrintWriter)>','<android.net.ip.RouterAdvertisementDaemon$UnicastResponder: void <init>(android.net.ip.RouterAdvertisementDaemon,android.net.ip.RouterAdvertisementDaemon$1)>','<com.android.server.pm.PackageSettingBase: void <clinit>()>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord restartPackage(java.lang.String)>','<com.android.server.usb.UsbDeviceManager$3: void <init>(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.ActivityManagerService: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)>','<com.android.server.am.KeyguardController: boolean canShowWhileOccluded(boolean,boolean)>','<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByExactlyLPr(java.lang.String,com.android.server.pm.KeySetHandle)>','<com.android.server.NsdService$NsdStateMachine$1: void <init>(com.android.server.NsdService$NsdStateMachine,android.os.Handler)>','<com.android.server.wm.WindowManagerService: void performBootTimeout()>','<com.android.server.LocationManagerService: void systemRunning()>','<com.android.server.NetworkManagementService$Injector: void reset()>','<com.android.server.power.PowerManagerService: void <init>(android.content.Context)>','<com.android.server.net.NetworkStatsService: void access$1500(com.android.server.net.NetworkStatsService)>','<com.android.server.wm.DisplayContent$TaskStackContainers: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.pm.ProtectedPackages: void <init>(android.content.Context)>','<com.android.server.am.PendingIntentRecord: void completeFinalize()>','<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,int)>','<com.android.server.wm.InputMonitor: void addInputWindowHandle(com.android.server.input.InputWindowHandle,com.android.server.wm.WindowState,int,int,boolean,boolean,boolean)>','<com.android.server.pm.PackageSignatures: void <init>()>','<com.android.server.statusbar.StatusBarManagerService: void removeIcon(java.lang.String)>','<com.android.server.pm.UserManagerService: android.util.SparseArray access$1200(com.android.server.pm.UserManagerService)>','<com.android.server.wm.RootWindowContainer$MyHandler: void handleMessage(android.os.Message)>','<com.android.server.location.GnssLocationProvider$3: void onLost(android.net.Network)>','<com.android.server.connectivity.Tethering: boolean access$2200(com.android.server.connectivity.Tethering,android.net.NetworkState)>','<com.android.server.am.ActivityStackSupervisor: boolean isLockedTask(com.android.server.am.TaskRecord)>','<com.android.server.firewall.IntentFirewall$Rule: com.android.server.firewall.IntentFirewall$FirewallIntentFilter getIntentFilter(int)>','<com.android.server.am.ActivityManagerService$5$1: void <init>(com.android.server.am.ActivityManagerService$5,android.app.Dialog)>','<com.android.server.am.ActiveServices: boolean foregroundAppShownEnoughLocked(com.android.server.am.ActiveServices$ActiveForegroundApp,long)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void release()>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int getChildCount()>','<com.android.server.wm.Task: com.android.server.wm.AppWindowToken getTopFullscreenAppToken()>','<com.android.server.audio.AudioService: void access$6300(com.android.server.audio.AudioService,int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.am.BatteryStatsService: void removeUid(int)>','<com.android.server.power.Notifier$6: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.UserState: void dump(java.lang.String,java.io.PrintWriter)>','<com.android.server.pm.UserRestrictionsUtils: java.util.Set getDefaultEnabledForDeviceOwner()>','<com.android.server.pm.CrossProfileIntentFilter: boolean equalsIgnoreFilter(com.android.server.pm.CrossProfileIntentFilter)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult isCaptivePortal()>','<com.android.server.NetworkManagementService: void tetherInterface(java.lang.String)>','<com.android.server.NativeDaemonConnector$Command: com.android.server.NativeDaemonConnector$Command appendArg(java.lang.Object)>','<com.android.server.AlarmManagerService$Batch: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.usb.UsbMidiDevice: android.system.StructPollfd[] access$500(com.android.server.usb.UsbMidiDevice)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalState: void enter()>','<com.android.server.wm.WindowState: boolean isDrawFinishedLw()>','<com.android.server.pm.PackageManagerService: com.android.server.DeviceIdleController$LocalService access$200(com.android.server.pm.PackageManagerService)>','<com.android.server.am.ActivityStackSupervisor: void setDisplayOverrideConfiguration(android.content.res.Configuration,int)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String getSetupWizardPackageName()>','<com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$000()>','<com.android.server.pm.PackageManagerService$19: int getMountMode(int,java.lang.String)>','<com.android.server.wm.BoundsAnimationController$AppTransitionNotifier: void run()>','<com.android.server.wm.WindowManagerService: boolean checkCallingPermission(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: void releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.LocationManagerService$Receiver: boolean callProviderEnabledLocked(java.lang.String,boolean)>','<com.android.server.wm.DockedStackDividerController: void resetImeHideRequested()>','<com.android.server.connectivity.Vpn: void access$1600(com.android.server.connectivity.Vpn)>','<com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord: void <init>(com.android.server.input.InputManagerService,int,android.hardware.input.IInputDevicesChangedListener)>','<com.android.server.NetworkManagementService: boolean isNetworkActive()>','<com.android.server.pm.PackageSettingBase: boolean restoreComponentLPw(java.lang.String,int)>','<com.android.server.power.PowerManagerService: com.android.server.power.BatterySaverPolicy access$1000(com.android.server.power.PowerManagerService)>','<com.android.server.location.GnssLocationProvider: boolean access$3600()>','<com.android.server.wm.ViewServer: boolean stop()>','<com.android.server.DeviceIdleController: android.os.RemoteCallbackList access$1300(com.android.server.DeviceIdleController)>','<com.android.server.am.ActivityMetricsLogger$StackTransitionInfo: com.android.server.am.ActivityRecord access$002(com.android.server.am.ActivityMetricsLogger$StackTransitionInfo,com.android.server.am.ActivityRecord)>','<com.android.server.NetworkManagementService: void setPermission(java.lang.String,int[])>','<com.android.server.NetworkManagementService: void startClatd(java.lang.String)>','<com.android.server.DeviceIdleController: void cancelLightAlarmLocked()>','<com.android.server.pm.PackageManagerService: void setInstantAppForUser(com.android.server.pm.PackageSetting,int,boolean,boolean)>','<com.android.server.pm.PersistentPreferredActivity: java.lang.String toString()>','<android.net.ip.RouterAdvertisementDaemon$MulticastTransmitter: void <init>(android.net.ip.RouterAdvertisementDaemon,android.net.ip.RouterAdvertisementDaemon$1)>','<com.android.server.am.ActivityManagerService: android.os.Bundle getActivityOptions(android.os.IBinder)>','<com.android.server.am.ActivityManagerService$18: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>','<com.android.server.am.ConfigurationContainer: android.content.res.Configuration getMergedOverrideConfiguration()>','<com.android.server.pm.PackageManagerService$VerificationInfo: void <init>(android.net.Uri,android.net.Uri,int,int)>','<com.android.server.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>','<com.android.server.wm.RootWindowContainer: void getWindowsByName(java.util.ArrayList,java.lang.String)>','<com.android.server.am.ActivityManagerService$DumpStackFileObserver: long dumpWithTimeout(int,long)>','<com.android.server.pm.PackageInstallerService$1: void <init>()>','<com.android.server.DeviceIdleController: void scheduleAlarmLocked(long,boolean)>','<com.android.server.wm.WindowList: void <init>()>','<com.android.server.AnyMotionDetector: int access$200(com.android.server.AnyMotionDetector)>','<com.android.server.am.ActivityManagerService: boolean dumpUids(java.io.PrintWriter,java.lang.String,android.util.SparseArray,java.lang.String,boolean)>','<com.android.server.wm.WindowState: boolean hideNonSystemOverlayWindowsWhenVisible()>','<com.android.server.usb.UsbDeviceManager$2: void <init>(com.android.server.usb.UsbDeviceManager)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: void notifySyspropsChanged()>','<com.android.server.pm.InstructionSets: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>','<com.android.server.am.ActivityManagerService$20: void run()>','<com.android.server.am.ContentProviderRecord: boolean removeExternalProcessHandleLocked(android.os.IBinder)>','<com.android.server.location.GeofenceManager: void onProviderEnabled(java.lang.String)>','<com.android.server.connectivity.Vpn: android.content.Context access$1000(com.android.server.connectivity.Vpn)>','<com.android.server.am.EventLogTags: void writeBootProgressAmsReady(long)>','<com.android.server.AnyMotionDetector: boolean access$800(com.android.server.AnyMotionDetector)>','<com.android.server.connectivity.Vpn$SystemServices: void <init>(android.content.Context)>','<com.android.server.am.BroadcastQueue: boolean dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String,boolean)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController: boolean activityResuming(java.lang.String)>','<com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>','<com.android.server.net.NetworkPolicyManagerService$ProcStateSeqHistory: java.lang.String getString(int,long)>','<com.android.server.pm.PackageSetting: com.android.server.pm.PermissionsState getPermissionsState()>','<com.android.server.pm.PackageManagerService$25: void onUserActionRequired(android.content.Intent)>','<com.android.server.wm.WindowToken: void addWindow(com.android.server.wm.WindowState)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController$1: void <init>(com.android.server.am.ActivityManagerShellCommand$MyActivityController,java.io.InputStreamReader)>','<com.android.server.EventLogTags: void writeNotificationExpansion(java.lang.String,int,int,int,int,int)>','<com.android.server.wm.DimLayer: void hide(long)>','<com.android.server.power.PowerManagerService: void finishUidChangesInternal()>','<com.android.server.wm.WindowState: void onParentSet()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler: void handleMessage(android.os.Message)>','<android.net.INetd$Stub$Proxy: void ipSecDeleteSecurityAssociation(int,int,java.lang.String,java.lang.String,int)>','<com.android.server.location.GnssNavigationMessageProvider$StatusChangedOperation: void <init>(int)>','<com.android.server.pm.PermissionsState: boolean equals(java.lang.Object)>','<com.android.server.connectivity.Nat464Xlat: void stop()>','<com.android.server.wm.TaskSnapshotPersister$RemoveObsoleteFilesQueueItem: void <init>(com.android.server.wm.TaskSnapshotPersister,android.util.ArraySet,int[])>','<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>','<com.android.server.am.ActivityManagerService: void startLockTaskModeLocked(com.android.server.am.TaskRecord)>','<com.android.server.am.UserController$Injector: void activityManagerOnUserStopped(int)>','<com.android.server.audio.AudioService: void access$10200(com.android.server.audio.AudioService,int,int,int,java.lang.String,java.lang.String,int)>','<android.net.ip.RouterAdvertisementDaemon: int access$1300(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.location.GnssLocationProvider$2: void onLost(android.net.Network)>','<com.android.server.usb.UsbAlsaManager: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.wm.DisplayContent: boolean isLayoutNeeded()>','<com.android.server.pm.dex.PackageDexUsage: boolean record(java.lang.String,java.lang.String,int,java.lang.String,boolean,boolean)>','<com.android.server.pm.UserManagerService$Shell: void onHelp()>','<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>','<com.android.server.pm.Settings: void addPackageToCleanLPw(android.content.pm.PackageCleanItem)>','<com.android.server.am.UserController: int getCurrentOrTargetUserIdLocked()>','<com.android.server.wm.PinnedStackController: void setAdjustedForIme(boolean,int)>','<com.android.server.audio.AudioService: int getRingerModeInternal()>','<com.android.server.connectivity.PacManager$1: void run()>','<com.android.server.EventLogTags: void writeBootProgressPmsStart(long)>','<com.android.server.wm.TaskSnapshotSurface$SystemBarBackgroundPainter: void drawStatusBarBackground(android.graphics.Canvas,android.graphics.Rect,int)>','<com.android.server.wm.WindowManagerService: void setRecentsVisibility(boolean)>','<com.android.server.pm.Settings: void readPreferredActivitiesLPw(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.net.NetworkStatsService$4: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PreferredActivity: java.lang.String toString()>','<com.android.server.TelephonyRegistry: int access$502(com.android.server.TelephonyRegistry,int)>','<com.android.server.audio.AudioService: java.util.List getActiveRecordingConfigurations()>','<com.android.server.am.TaskRecord: void setIntent(com.android.server.am.ActivityRecord)>','<com.android.server.DeviceIdleController$Constants: void onChange(boolean,android.net.Uri)>','<com.android.server.usb.descriptors.UsbMSMidiInputJack: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.wm.DisplayContent$NonAppWindowContainers: void addChild(com.android.server.wm.WindowToken)>','<com.android.server.pm.PackageManagerService: void access$2300(com.android.server.pm.PackageManagerService,int,int,java.lang.String)>','<com.android.server.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,android.os.IBinder,int,int)>','<com.android.server.firewall.IntentFirewall$Rule: android.content.ComponentName getComponentFilter(int)>','<com.android.server.usb.UsbHostManager: void setCurrentUserSettings(com.android.server.usb.UsbProfileGroupSettingsManager)>','<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long,int)>','<com.android.server.wm.WindowState: void orientationChangeTimedOut()>','<com.android.server.power.PowerManagerService: boolean access$4300(com.android.server.power.PowerManagerService)>','<com.android.server.am.ProcessRecord: void makeInactive(com.android.server.am.ProcessStatsService)>','<com.android.server.am.ProviderMap: java.util.HashMap getProvidersByClass(int)>','<com.android.server.pm.Installer: void linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.power.Notifier$8: void <init>(com.android.server.power.Notifier)>','<com.android.server.input.InputManagerService$10: void onChange(boolean)>','<com.android.server.wm.TaskPositioner: int access$800(com.android.server.wm.TaskPositioner)>','<com.android.server.pm.PackageManagerService: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>','<com.android.server.wm.TaskSnapshotController: void screenTurningOff(android.view.WindowManagerPolicy$ScreenOffListener)>','<com.android.server.connectivity.tethering.IPv6TetheringCoordinator: void updateUpstreamNetworkState(android.net.NetworkState)>','<com.android.server.wm.WindowState: void attach()>','<com.android.server.wm.AppWindowToken: void notifyAppResumed(boolean)>','<com.android.server.net.NetworkPolicyManagerService: void updateRestrictBackgroundByLowPowerModeUL(android.os.PowerSaveState)>','<android.hardware.usb.V1_0.PortStatus: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.am.ActivityStack: int rankTaskLayers(int)>','<com.android.server.AppOpsService: void <init>(java.io.File,android.os.Handler)>','<com.android.server.pm.InstantAppResolver: void <clinit>()>','<android.hardware.usb.V1_0.IUsb$Proxy: java.util.ArrayList getHashChain()>','<com.android.server.usb.descriptors.UsbACHeader: byte getNumInterfaces()>','<com.android.server.am.ActivityManagerService: void batterySendBroadcast(android.content.Intent)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.util.List queryIntentActivities(android.content.Intent,int,int,int)>','<com.android.server.location.GnssLocationProvider$ProviderHandler: void handleMessage(android.os.Message)>','<com.android.server.ServiceWatcher: void switchUser(int)>','<com.android.server.am.ActivityManagerService: void registerTaskStackListener(android.app.ITaskStackListener)>','<com.android.server.audio.AudioService$VolumeStreamState: java.lang.String access$1002(com.android.server.audio.AudioService$VolumeStreamState,java.lang.String)>','<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskDescription getTaskDescription(int)>','<com.android.server.location.PassiveProvider: java.lang.String getName()>','<com.android.server.wm.TaskSnapshotPersister$WriteQueueItem: void onQueuedLocked()>','<com.android.server.wm.WindowState: boolean surfaceInsetsChanging()>','<com.android.server.net.LockdownVpnTracker: void augmentNetworkInfo(android.net.NetworkInfo)>','<com.android.server.am.ActiveServices$4: void run()>','<com.android.server.wm.TaskSnapshotPersister$RemoveObsoleteFilesQueueItem: int getTaskId(java.lang.String)>','<com.android.server.pm.ParallelPackageParser: void submit(java.io.File,int)>','<com.android.server.EventLogTags: void writeWmTaskMoved(int,int,int)>','<com.android.server.NsdService$NsdSettings$1: void registerContentObserver(android.net.Uri,android.database.ContentObserver)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: java.lang.String toString()>','<com.android.server.pm.PackageInstallerService: android.os.Handler access$1100(com.android.server.pm.PackageInstallerService)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.DisplayThread: android.os.Handler getHandler()>','<com.android.server.pm.PackageManagerService$PackageInstalledInfo: void setError(java.lang.String,com.android.server.pm.PackageManagerException)>','<com.android.server.wm.WindowManagerService: float access$800(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.PackageManagerService$DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>','<com.android.server.pm.PackageInstallerService: android.util.ArraySet newArraySet(java.lang.Object[])>','<com.android.server.am.ActivityManagerService: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>','<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>','<com.android.server.NsdService$NativeCallbackReceiver: boolean onCheckHoldWakeLock(int)>','<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>','<com.android.server.am.ActivityStack: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>','<com.android.server.LocationManagerService$UpdateRecord: void <init>(com.android.server.LocationManagerService,java.lang.String,android.location.LocationRequest,com.android.server.LocationManagerService$Receiver)>','<com.android.server.InputMethodManagerService: void requestClientSessionLocked(com.android.server.InputMethodManagerService$ClientState)>','<com.android.server.am.AppErrors: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>','<android.os.IInstalld$Stub$Proxy: void <init>(android.os.IBinder)>','<com.android.server.wm.WindowManagerService: void clearForcedDisplayDensityForUser(int,int)>','<com.android.server.connectivity.Tethering$StateReceiver: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PreferredIntentResolver: com.android.server.pm.PreferredActivity[] newArray(int)>','<com.android.server.wm.RemoteEventTrace: void <init>(com.android.server.wm.WindowManagerService,java.io.FileDescriptor)>','<com.android.server.pm.EphemeralResolverConnection: java.lang.Object access$200(com.android.server.pm.EphemeralResolverConnection)>','<com.android.server.wm.Session: void wallpaperOffsetsComplete(android.os.IBinder)>','<com.android.server.am.BatteryStatsService$1: void <init>(com.android.server.am.BatteryStatsService,int,int,int,int,int,int,int,int)>','<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>','<com.android.server.pm.PackageManagerService: void cleanUpUser(com.android.server.pm.UserManagerService,int)>','<com.android.server.am.ActivityManagerService: void enforceNotIsolatedCaller(java.lang.String)>','<com.android.server.wm.animation.ClipRectTBAnimation: void <init>(int,int,int,int,int,int,android.view.animation.Interpolator)>','<com.android.server.power.PowerManagerService$WakeLock: boolean hasSameProperties(int,java.lang.String,android.os.WorkSource,int,int)>','<com.android.server.NsdService: android.content.Context access$700(com.android.server.NsdService)>','<com.android.server.ConnectivityService$SettingsObserver: void onChange(boolean)>','<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getProductID()>','<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()>','<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesVisible()>','<com.android.server.pm.PackageSettingBase: boolean getHidden(int)>','<com.android.server.pm.UserManagerService$LocalService: int[] getUserIds()>','<com.android.server.am.ActiveServices: void foregroundServiceProcStateChangedLocked(com.android.server.am.UidRecord)>','<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,boolean,int,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: void <init>(com.android.server.wm.WindowManagerService,android.view.WindowManagerInternal$MagnificationCallbacks)>','<com.android.server.pm.PackageManagerService: void scheduleWritePackageListLocked(int)>','<com.android.server.pm.PackageManagerService: void enforcePermissionCapLocked(android.content.pm.PermissionInfo,com.android.server.pm.BasePermission)>','<com.android.server.pm.PackageUsage: void readInternal(java.util.Map)>','<com.android.server.AppOpsService$ClientRestrictionState: boolean hasRestriction(int,java.lang.String,int)>','<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>','<com.android.server.wm.DisplayContent: boolean applySurfaceChangesTransaction(boolean)>','<com.android.server.am.ActivityManagerService: void checkExcessivePowerUsageLocked(boolean)>','<com.android.server.wm.Task: boolean dimFullscreen()>','<com.android.server.wm.StackWindowController$H: void <init>(java.lang.ref.WeakReference,android.os.Looper)>','<com.android.server.wm.DockedStackDividerController: boolean isAttachedToDisplay()>','<com.android.server.statusbar.StatusBarManagerService$1: void showRecentApps(boolean,boolean)>','<com.android.server.pm.PackageManagerService: void restoreDefaultApps(byte[],int)>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent execute(long,java.lang.String,java.lang.Object[])>','<com.android.server.connectivity.NetworkDiagnostics$Measurement: void recordSuccess(java.lang.String)>','<com.android.server.wm.DockedStackDividerController: boolean dimFullscreen()>','<com.android.server.am.RecentTasks: boolean taskIdTakenForUserLocked(int,int)>','<com.android.server.net.NetworkPolicyManagerService: void access$2400(com.android.server.net.NetworkPolicyManagerService,int,android.util.SparseIntArray)>','<com.android.server.location.GnssLocationProvider: boolean isEnabled()>','<com.android.server.wm.WindowManagerService: void getDisplaysInFocusOrder(android.util.SparseIntArray)>','<com.android.server.connectivity.Tethering: void access$3500(com.android.server.connectivity.Tethering,java.lang.String,com.android.server.connectivity.tethering.TetherInterfaceStateMachine,android.net.LinkProperties)>','<com.android.server.ConnectivityService: void access$1800(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.am.ActivityManagerService: void setLockScreenShown(boolean)>','<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack getStack()>','<com.android.server.location.RemoteListenerHelper: void removeListener(android.os.IInterface)>','<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasHIDDescriptor()>','<com.android.server.am.BatteryStatsService: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>','<com.android.server.am.ActivityManagerService$AppTaskImpl: void setExcludeFromRecents(boolean)>','<com.android.server.am.ActivityManagerShellCommand: int getUidState(java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: boolean comparePermissionInfos(android.content.pm.PermissionInfo,android.content.pm.PermissionInfo)>','<com.android.server.power.PowerManagerService$Constants: void <init>(com.android.server.power.PowerManagerService,android.os.Handler)>','<com.android.server.am.BaseErrorDialog$1: void <init>(com.android.server.am.BaseErrorDialog)>','<com.android.server.wm.AppTransition: long getLastClipRevealTransitionDuration()>','<com.android.server.net.NetworkPolicyManagerService: void updateRulesForPowerSaveUL()>','<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>','<com.android.server.wm.WindowManagerService$LocalService: boolean isKeyguardGoingAway()>','<com.android.server.am.BaseErrorDialog: void access$100(com.android.server.am.BaseErrorDialog,boolean)>','<com.android.server.pm.PreferredActivity: void <init>(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,boolean)>','<com.android.server.pm.PackageManagerService: boolean access$3600(com.android.server.pm.PackageManagerService,int,int,int)>','<com.android.server.audio.AudioService: void clearAllScoClients(int,boolean)>','<com.android.server.am.ActivityManagerService: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>','<com.android.server.pm.InstantAppResolver: void access$100(int,long,java.lang.String,int)>','<com.android.server.InputMethodManagerService: void setEnabledSessionInMainThread(com.android.server.InputMethodManagerService$SessionState)>','<com.android.server.connectivity.Vpn$LegacyVpnRunner$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.PinnedStackWindowController: void setPictureInPictureActions(java.util.List)>','<com.android.server.am.ActivityStack: void activityDestroyedLocked(android.os.IBinder,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDownLocked()>','<com.android.server.am.BatteryStatsService: java.lang.String getPlatformLowPowerStats()>','<com.android.server.pm.PackageSettingBase: boolean disableComponentLPw(java.lang.String,int)>','<com.android.server.usb.UsbAudioDevice: void <init>(int,int,boolean,boolean,int)>','<com.android.server.am.ActivityStackSupervisor: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int,boolean)>','<com.android.server.AlarmManagerService$LocalService: void setDeviceIdleUserWhitelist(int[])>','<com.android.server.audio.MediaFocusControl: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService: void backgroundResourcesReleased(android.os.IBinder)>','<com.android.server.AlarmManagerService$Batch: boolean canHold(long,long)>','<com.android.server.am.ActivityManagerService$LocalService: android.content.ComponentName getHomeActivityForUser(int)>','<com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter: void <init>(android.content.Context,android.content.IntentSender,int,boolean,int)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.am.ReceiverList: int hashCode()>','<com.android.server.wm.BoundsAnimationController$AppTransitionNotifier: void onAppTransitionCancelledLocked()>','<com.android.server.wm.DisplayContent: void setMaxUiWidth(int)>','<com.android.server.connectivity.PacManager: boolean access$502(com.android.server.connectivity.PacManager,boolean)>','<com.android.server.power.PowerManagerService$WakeLock: void updateProperties(int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>','<com.android.server.am.ActivityManagerService$9: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.location.GnssStatusListenerHelper$5: void <init>(com.android.server.location.GnssStatusListenerHelper,long,java.lang.String)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.ActivityManagerService access$000(com.android.server.am.TaskChangeNotificationController)>','<android.hardware.usb.V1_1.PortStatus_1_1: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.am.ActivityRecord: boolean canBeLaunchedOnDisplay(int)>','<com.android.server.DeviceIdleController$Shell: int onCommand(java.lang.String)>','<com.android.server.location.GnssLocationProvider: boolean access$3900(int)>','<com.android.server.wm.WindowManagerService: void getStackBounds(int,android.graphics.Rect)>','<com.android.server.am.TaskRecord: boolean isApplicationTask()>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: java.util.Map access$100(com.android.server.pm.dex.PackageDexUsage$PackageUseInfo)>','<com.android.server.am.ActivityManagerService: void batteryNeedsCpuUpdate()>','<com.android.server.DeviceIdleController$4: void onAlarm()>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,java.lang.Object,boolean)>','<com.android.server.wm.WindowList: java.lang.Object peekFirst()>','<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>','<com.android.server.pm.UserManagerService$3: void <init>(com.android.server.pm.UserManagerService,int,android.os.Bundle,android.os.Bundle)>','<com.android.server.usb.UsbUserSettingsManager: void requestPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void removeAllDefaultsForUser(android.os.UserHandle)>','<com.android.server.am.ActiveServices$ServiceDumper: void <init>(com.android.server.am.ActiveServices,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)>','<com.android.server.pm.dex.DexManager: int access$600()>','<com.android.server.NativeDaemonConnector$NativeDaemonArgumentException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>','<com.android.server.pm.Settings: boolean isOrphaned(java.lang.String)>','<com.android.server.usb.UsbDeviceManager$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void removeDownstream(java.lang.String,java.lang.String,android.hardware.tetheroffload.control.V1_0.IOffloadControl$removeDownstreamCallback)>','<com.android.server.location.RemoteListenerHelper$1: void run()>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void setHALInstrumentation()>','<com.android.server.pm.PackageManagerService$OnPermissionChangeListeners: void addListenerLocked(android.content.pm.IOnPermissionsChangeListener)>','<com.android.server.am.AppErrors: void resetProcessCrashTimeLocked(boolean,int,int)>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackageForDelete(java.lang.String,int,int,java.lang.String)>','<com.android.server.location.GnssLocationProvider: int access$102(com.android.server.location.GnssLocationProvider,int)>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContentOrCreate(int)>','<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>','<com.android.server.am.ActivityManagerService: void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription)>','<com.android.server.connectivity.tethering.SimChangeListener: void startListening()>','<android.os.IInstalld$Stub: android.os.IBinder asBinder()>','<com.android.server.pm.PackageManagerService$17: void apply(org.xmlpull.v1.XmlPullParser,int)>','<com.android.server.am.ActivityManagerService$24: void <init>()>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkAgentInfo access$1900(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.usb.UsbDebuggingManager: com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread access$200(com.android.server.usb.UsbDebuggingManager)>','<com.android.server.pm.PackageManagerService$InstallParams: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$OriginInfo,com.android.server.pm.PackageManagerService$MoveInfo,android.content.pm.IPackageInstallObserver2,int,java.lang.String,java.lang.String,com.android.server.pm.PackageManagerService$VerificationInfo,android.os.UserHandle,java.lang.String,java.lang.String[],java.security.cert.Certificate[][],int)>','<com.android.server.usb.descriptors.UsbInterfaceAssoc: void <init>(int,byte)>','<com.android.server.audio.PlaybackActivityMonitor: android.media.VolumeShaper$Operation access$200()>','<com.android.server.AlarmManagerService$2: void <init>(com.android.server.AlarmManagerService)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalBool useHwcForRGBtoYUV()>','<com.android.server.input.InputManagerService$LocalService: void setPulseGestureEnabled(boolean)>','<com.android.server.firewall.StringFilter$2: void <init>(java.lang.String)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.util.List getOverlayPackages(int)>','<com.android.server.wm.WindowStateAnimator: void dump(java.io.PrintWriter,java.lang.String,boolean)>','<com.android.server.am.ActivityManagerService: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>','<com.android.server.am.TaskRecord: android.app.ActivityManager$TaskSnapshot getSnapshot(boolean)>','<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>','<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowContainerController getController()>','<com.android.server.usb.descriptors.UsbDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.wm.AppTransition: boolean isTransitionSet()>','<com.android.server.pm.PackageManagerService$PendingPackageBroadcasts: android.util.ArrayMap packagesForUserId(int)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: int interfaceType()>','<com.android.server.am.ActivityRecord: boolean continueLaunchTickingLocked()>','<com.android.server.net.NetworkStatsAccess: int checkAccessLevel(android.content.Context,int,java.lang.String)>','<com.android.server.pm.PreferredComponent: boolean sameSet(android.content.ComponentName[])>','<com.android.server.net.NetworkPolicyManagerService: void handleUidChanged(int,int,long)>','<com.android.server.wm.RootWindowContainer: com.android.server.wm.TaskStack getStackById(int)>','<com.android.server.usb.descriptors.UsbACInputTerminal: void <init>(int,byte,byte,byte)>','<com.android.server.wm.DisplayContent: void onWindowFreezeTimeout()>','<com.android.server.usb.UsbProfileGroupSettingsManager: void accessoryAttached(android.hardware.usb.UsbAccessory)>','<com.android.server.am.ActivityManagerService: void updateApplicationInfoLocked(java.util.List,int)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topActivity()>','<com.android.server.am.ServiceRecord: void forceClearTracker()>','<com.android.server.pm.PackageManagerService: java.lang.String getSharedSystemSharedLibraryPackageName()>','<android.hardware.usb.V1_0.IUsbCallback$Stub: void ping()>','<com.android.server.pm.dex.DexManager$RegisterDexModuleResult: void <init>(boolean,java.lang.String)>','<com.android.server.am.ActivityManagerService: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>','<com.android.server.pm.InstantAppRegistry$CookiePersistence: void <init>(com.android.server.pm.InstantAppRegistry,android.os.Looper)>','<com.android.server.audio.AudioService$AudioServiceInternal: void adjustStreamVolumeForUid(int,int,int,java.lang.String,int)>','<com.android.server.am.IntentBindRecord: void <init>(com.android.server.am.ServiceRecord,android.content.Intent$FilterComparison)>','<com.android.server.am.ActivityManagerShellCommand$2: int compare(android.content.res.Configuration,android.content.res.Configuration)>','<com.android.server.am.TaskRecord: void onSnapshotChanged(android.app.ActivityManager$TaskSnapshot)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$3: void onValues(boolean,java.lang.String)>','<com.android.server.NetworkManagementService: void addRoute(int,android.net.RouteInfo)>','<android.hardware.configstore.V1_0.OptionalBool: void writeVectorToParcel(android.os.HwParcel,java.util.ArrayList)>','<com.android.server.net.NetworkStatsService: void setHandler(android.os.Handler,android.os.Handler$Callback)>','<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>','<com.android.server.usb.descriptors.ByteStream: int unpackUsbTriple()>','<com.android.server.pm.PackageManagerService: void removePermission(java.lang.String)>','<com.android.server.pm.UserRestrictionsUtils: void sortToGlobalAndLocal(android.os.Bundle,boolean,int,android.os.Bundle,android.os.Bundle)>','<com.android.server.audio.MediaFocusControl: void mutePlayersForCall(int[])>','<com.android.server.LocationManagerService: java.util.HashMap access$200(com.android.server.LocationManagerService)>','<com.android.server.wm.TaskSnapshotPersister$DeleteWriteQueueItem: void <init>(com.android.server.wm.TaskSnapshotPersister,int,int)>','<com.android.server.am.ActivityRecord: boolean hasDismissKeyguardWindows()>','<com.android.server.wm.TaskStack: void removeChild(com.android.server.wm.WindowContainer)>','<com.android.server.firewall.SenderFilter$3: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.pm.EphemeralResolverConnection: void access$500(com.android.server.pm.EphemeralResolverConnection)>','<com.android.server.wm.WindowStateAnimator: void startDelayingAnimationStart()>','<com.android.server.pm.UserManagerService$4: void run()>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionAspectScaledThumb(android.graphics.GraphicBuffer,int,int,int,int,android.os.IRemoteCallback,boolean)>','<com.android.server.connectivity.LingerMonitor: void <clinit>()>','<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>','<com.android.server.pm.Settings: void dumpVersionLPr(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.am.ActivityManagerService: void swapDockedAndFullscreenStack()>','<com.android.server.ConnectivityService: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>','<com.android.server.wm.WindowManagerService$LocalService: void setVr2dDisplayId(int)>','<com.android.server.am.ProcessRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: boolean shouldDestroyContentOnRemove()>','<com.android.server.wm.WindowState: void requestUpdateWallpaperIfNeeded()>','<com.android.server.am.PreBootBroadcaster: com.android.server.am.ActivityManagerService access$000(com.android.server.am.PreBootBroadcaster)>','<com.android.server.location.FlpHardwareProvider: com.android.server.location.FlpHardwareProvider getInstance(android.content.Context)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>','<com.android.server.connectivity.NetworkDiagnostics: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.connectivity.tethering.TetheringConfiguration: boolean isUsb(java.lang.String)>','<com.android.server.audio.FocusRequester: boolean hasSamePackage(java.lang.String)>','<com.android.server.connectivity.PacManager$3$1: void setProxyPort(int)>','<com.android.server.audio.AudioService: android.media.SoundPool access$2200(com.android.server.audio.AudioService)>','<com.android.server.pm.PackageManagerService: void access$1200(com.android.server.pm.PackageManagerService,int,android.net.Uri,int,android.os.UserHandle)>','<com.android.server.statusbar.StatusBarManagerService: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>','<com.android.server.wm.TaskPositioner: void register(android.view.Display)>','<com.android.server.NsdService$NativeResponseCode: java.lang.String nameOf(int)>','<com.android.server.am.ActivityStackSupervisor: int getNextStackId()>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void hide()>','<com.android.server.input.InputManagerService: boolean access$1600(com.android.server.input.InputManagerService,android.view.InputEvent,int,int)>','<com.android.server.wm.WindowManagerService: void setKeyguardGoingAway(boolean)>','<com.android.server.am.ActivityManagerService: int checkGrantUriPermissionLocked(int,java.lang.String,com.android.server.am.ActivityManagerService$GrantUri,int,int)>','<com.android.server.AppOpsService: int onShellCommand(com.android.server.AppOpsService$Shell,java.lang.String)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$IterGenerator: void <init>(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.DeviceIdleController$3: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.am.BroadcastQueue: void logBroadcastReceiverDiscardLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.am.AppErrorDialog$1: void handleMessage(android.os.Message)>','<com.android.server.wm.TaskStack: void stepAppWindowsAnimation(long)>','<com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$300()>','<com.android.server.wm.WindowManagerService: void removeWindowToken(android.os.IBinder,int)>','<com.android.server.AppOpsService$Restriction: void <init>(com.android.server.AppOpsService$1)>','<com.android.server.pm.PackageManagerShellCommand$3: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.power.ShutdownThread: void rebootOrShutdown(android.content.Context,boolean,java.lang.String)>','<com.android.server.pm.UserManagerService$6$1: void run()>','<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>','<com.android.server.connectivity.Tethering: int untether(java.lang.String)>','<com.android.server.wm.AppTransition: void postAnimationCallback()>','<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String,java.lang.String)>','<com.android.server.location.LocationBasedCountryDetector$1: void onLocationChanged(android.location.Location)>','<com.android.server.am.ActivityManagerService: java.util.List getAllStackInfos()>','<com.android.server.pm.PackageManagerService$ProviderIntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>','<com.android.server.wm.WindowState: int getStackId()>','<com.android.server.wm.WallpaperController: boolean isBelowWallpaperTarget(com.android.server.wm.WindowState)>','<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.PackageManagerService: void performFstrimIfNeeded()>','<com.android.server.wm.Task: boolean isFloating()>','<com.android.server.am.BatteryStatsService$BatteryStatsHandler: void scheduleSync(java.lang.String,int)>','<com.android.server.audio.AudioService: boolean isSpeakerphoneOn()>','<com.android.server.NsdService$NsdStateMachine$DisabledState: void enter()>','<com.android.server.SystemServiceManager: void switchUser(int)>','<com.android.server.pm.PackageSettingBase: void setHidden(boolean,int)>','<com.android.server.NsdService: android.util.SparseArray access$1300(com.android.server.NsdService)>','<com.android.server.wm.WindowManagerService: void getStableInsets(int,android.graphics.Rect)>','<com.android.server.wm.AppTransition: void setTimeout()>','<com.android.server.wm.DockedStackDividerController: void <clinit>()>','<com.android.server.wm.AppWindowToken: boolean canTurnScreenOn()>','<com.android.server.wm.Task: void onParentSet()>','<com.android.server.location.GeofenceManager: void onStatusChanged(java.lang.String,int,android.os.Bundle)>','<android.hardware.usb.V1_0.IUsb$Proxy: android.hidl.base.V1_0.DebugInfo getDebugInfo()>','<com.android.server.DeviceIdleController: android.content.Intent access$1000(com.android.server.DeviceIdleController)>','<com.android.server.audio.AudioService: int[] access$3900()>','<com.android.server.pm.UserManagerService: java.lang.Object access$1500(com.android.server.pm.UserManagerService)>','<com.android.server.wm.WindowManagerService$LocalService: boolean isDockedDividerResizing()>','<com.android.server.ConnectivityService: void access$900(com.android.server.ConnectivityService,int,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkCapabilities)>','<com.android.server.usb.descriptors.UsbACFeatureUnit: int[] getControls()>','<com.android.server.wm.WindowManagerThreadPriorityBooster: void boost()>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceInPackage(int,android.content.Intent,java.lang.String,boolean,java.lang.String,int)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$TetheringOffloadCallback: void updateTimeout(android.hardware.tetheroffload.control.V1_0.NatTimeoutUpdate)>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>','<com.android.server.net.NetworkPolicyManagerService: void performSnooze(android.net.NetworkTemplate,int)>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void unregister(android.content.pm.IPackageMoveObserver)>','<com.android.server.am.ProcessList: void appendRamKb(java.lang.StringBuilder,long)>','<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>','<com.android.server.wm.DisplayContent: boolean clearImeAdjustAnimation()>','<com.android.server.am.CompatModeDialog$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<com.android.server.statusbar.StatusBarManagerService$1: void showAssistDisclosure()>','<com.android.server.am.ActivityManagerService$3: void opChanged(int,int,java.lang.String)>','<com.android.server.pm.PackageManagerService: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>','<com.android.server.pm.Installer: void freeCache(java.lang.String,long,long,int)>','<com.android.server.am.ActivityStack$ActivityStackHandler: void <init>(com.android.server.am.ActivityStack,android.os.Looper)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: int doPostInstall(int,int)>','<com.android.server.audio.AudioService: int getStreamMaxVolume(int)>','<android.net.ip.RouterAdvertisementDaemon: android.net.ip.RouterAdvertisementDaemon$DeprecatedInfoTracker access$1000(android.net.ip.RouterAdvertisementDaemon)>','<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)>','<com.android.server.am.AppErrorDialog: void dismiss()>','<com.android.server.pm.Settings$KernelPackageState: void <init>(com.android.server.pm.Settings$1)>','<com.android.server.DeviceIdleController$BinderService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.BatteryStatsService: void addIsolatedUid(int,int)>','<com.android.server.wm.WindowSurfaceController$SurfaceTrace: void release()>','<com.android.server.am.ActivityManagerService: void doStopUidLocked(int,com.android.server.am.UidRecord)>','<com.android.server.pm.PackageManagerService$PackageFreezer: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,java.lang.String)>','<com.android.server.wm.TaskPositioner: android.view.DisplayInfo getDisplayInfo()>','<com.android.server.wm.WallpaperController$FindWallpaperTargetResult: void setUseTopWallpaperAsTarget(boolean)>','<com.android.server.wm.WindowManagerService: boolean excludeWindowTypeFromTapOutTask(int)>','<com.android.server.am.ProcessRecord: void setPid(int)>','<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider$GnssBatchingProvider getGnssBatchingProvider()>','<com.android.server.wm.AccessibilityController: android.view.MagnificationSpec getMagnificationSpecForWindowLocked(com.android.server.wm.WindowState)>','<com.android.server.usb.UsbDeviceManager: void updateUserRestrictions()>','<com.android.server.wm.Task: boolean fillsParent()>','<com.android.server.am.UserController: boolean isUserRunningLocked(int,int)>','<com.android.server.wm.TaskSnapshotPersister: void persistSnapshot(int,int,android.app.ActivityManager$TaskSnapshot)>','<com.android.server.audio.AudioService: void disconnectA2dp()>','<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: java.lang.String getResourcePath()>','<com.android.server.AnyMotionDetector: android.os.Handler access$500(com.android.server.AnyMotionDetector)>','<com.android.server.am.ActivityManagerService: int procStateToImportance(int,int,android.app.ActivityManager$RunningAppProcessInfo,int)>','<com.android.server.pm.PackageManagerService$DumpState: void setOptionEnabled(int)>','<com.android.server.am.ActivityManagerService: boolean access$200(com.android.server.am.ActivityManagerService)>','<com.android.server.LocationManagerService$3: void <init>(com.android.server.LocationManagerService)>','<com.android.server.InputMethodManagerService$4: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.wm.WindowContainer: android.content.res.Configuration getOverrideConfiguration()>','<com.android.server.net.NetworkPolicyManagerService$11: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.PackageManagerService: boolean addPermissionAsync(android.content.pm.PermissionInfo)>','<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAccess(java.lang.String,int)>','<com.android.server.audio.AudioService: void access$100(android.os.Handler,int,int,int,int,java.lang.Object,int)>','<com.android.server.wm.Task: void cancelTaskThumbnailTransition()>','<com.android.server.am.EventLogTags: void writeAmCrash(int,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int)>','<com.android.server.wm.WindowManagerService$LocalService: android.os.IBinder getFocusedWindowToken()>','<com.android.server.wm.InputMonitor: boolean access$300(com.android.server.wm.InputMonitor)>','<com.android.server.wm.WindowContainer: java.lang.String getName()>','<com.android.server.connectivity.NetworkAgentInfo: void removeRequest(int)>','<com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo: boolean checkStats()>','<com.android.server.pm.PackageInstallerService$InternalCallback: void onSessionSealedBlocking(com.android.server.pm.PackageInstallerSession)>','<com.android.server.am.ActivityManagerService: void notifyLockedProfile(int)>','<com.android.server.am.BatteryStatsService: android.os.ParcelFileDescriptor getStatisticsStream()>','<com.android.server.am.ActivityManagerService: boolean updateConfiguration(android.content.res.Configuration)>','<com.android.server.usb.UsbProfileGroupSettingsManager: android.os.UserManager access$200(com.android.server.usb.UsbProfileGroupSettingsManager)>','<com.android.server.wm.AppWindowToken: boolean forAllWindows(com.android.internal.util.ToBooleanFunction,boolean)>','<com.android.server.wm.WindowStateAnimator: void clearAnimation()>','<com.android.server.am.TaskChangeNotificationController: void unregisterTaskStackListener(android.app.ITaskStackListener)>','<com.android.server.SystemServerInitThreadPool: com.android.server.SystemServerInitThreadPool get()>','<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionScaleUp(int,int,int,int)>','<com.android.server.wm.TaskPositioner: boolean isAttachedToDisplay()>','<com.android.server.wm.ScreenRotationAnimation: boolean isAnimating()>','<com.android.server.wm.WindowManagerService: void sendNewConfiguration(int)>','<com.android.server.wm.WindowState: void <clinit>()>','<com.android.server.power.ShutdownThread$5: void run()>','<com.android.server.statusbar.StatusBarManagerService$1: void setWindowState(int,int)>','<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>','<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: void write(java.io.OutputStream)>','<com.android.server.am.ActivityManagerService$AppDeathRecipient: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>','<com.android.server.wm.WindowState: int getRotationAnimationHint()>','<com.android.server.audio.AudioService: void access$6100(com.android.server.audio.AudioService,java.lang.String)>','<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int,boolean)>','<com.android.server.pm.PermissionsState: java.util.Set getPermissions(int)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$ValidationStage access$1600(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.net.NetworkPolicyManagerService$18: void <init>(com.android.server.net.NetworkPolicyManagerService)>','<com.android.server.am.ActiveServices: java.lang.String access$000(com.android.server.am.ActiveServices,com.android.server.am.ServiceRecord,int,boolean,boolean,boolean)>','<com.android.server.AnyMotionDetector: boolean access$602(com.android.server.AnyMotionDetector,boolean)>','<com.android.server.input.InputManagerService: void start()>','<com.android.server.wm.DimLayer: void setBounds(android.graphics.Rect)>','<com.android.server.net.NetworkStatsService: android.os.PowerManager$WakeLock access$900(com.android.server.net.NetworkStatsService)>','<com.android.server.am.BatteryStatsService: void noteScreenBrightness(int)>','<com.android.server.power.Notifier$7: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.wm.WindowManagerService: void onDisplayChanged(int)>','<com.android.server.power.PowerManagerService: boolean access$3300(com.android.server.power.PowerManagerService)>','<com.android.server.AttributeCache$Entry: void <init>(android.content.Context,android.content.res.TypedArray)>','<com.android.server.wm.SurfaceControlWithBackground: void setSecure(boolean)>','<com.android.server.wm.AlertWindowNotification: void cancel()>','<com.android.server.ConnectivityService: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>','<com.android.server.DeviceIdleController$7: void onProviderDisabled(java.lang.String)>','<com.android.server.LocationManagerService$Receiver: boolean isPendingIntent()>','<com.android.server.wm.WindowManagerService: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>','<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>','<com.android.server.location.MockProvider: void clearStatus()>','<com.android.server.net.NetworkPolicyManagerService: void purgePowerSaveTempWhitelistUL()>','<com.android.server.am.ActivityManagerService$21: void run()>','<com.android.server.am.BatteryStatsService: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>','<com.android.server.power.PowerManagerService: void access$2400(com.android.server.power.PowerManagerService,int,int)>','<com.android.server.LockGuard: void <init>()>','<com.android.server.wm.WindowState: boolean isConfigChanged()>','<com.android.server.location.GnssLocationProvider: void access$4600()>','<com.android.server.pm.dex.PackageDexUsage: void read()>','<com.android.server.connectivity.tethering.TetheringConfiguration: int checkDunRequired(android.content.Context)>','<com.android.server.am.BatteryStatsService: int getServiceType()>','<com.android.server.pm.PackageManagerShellCommand$1: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.ConnectivityService: android.net.util.MultinetworkPolicyTracker createMultinetworkPolicyTracker(android.content.Context,android.os.Handler,java.lang.Runnable)>','<com.android.server.ConnectivityService: void access$500(com.android.server.ConnectivityService,android.os.Message)>','<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean processMessage(android.os.Message)>','<com.android.server.audio.RecordingActivityMonitor: void initMonitor()>','<com.android.server.wm.TaskStack: void setAdjustedForIme(com.android.server.wm.WindowState,boolean)>','<com.android.server.firewall.StringFilter: void <init>(com.android.server.firewall.StringFilter$ValueProvider,com.android.server.firewall.StringFilter$1)>','<com.android.server.pm.PackageManagerService$1: void onVolumeStateChanged(android.os.storage.VolumeInfo,int,int)>','<com.android.server.wm.WindowManagerService$5: void onOpChanged(int,java.lang.String)>','<com.android.server.am.ConnectionRecord: java.lang.String toString()>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$900(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.connectivity.PacManager: void access$800(com.android.server.connectivity.PacManager)>','<com.android.server.pm.UserRestrictionsUtils: boolean isEmpty(android.os.Bundle)>','<com.android.server.location.LocationBasedCountryDetector$3: void <init>(com.android.server.location.LocationBasedCountryDetector,android.location.Location)>','<com.android.server.am.ActivityManagerService: void onUserStoppedLocked(int)>','<com.android.server.usb.UsbDeviceManager$UsbHandler: void sendMessage(int,boolean)>','<com.android.server.pm.PackageManagerService$27: void <init>(com.android.server.pm.PackageManagerService,int)>','<com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>','<com.android.server.pm.PackageManagerServiceUtils: boolean checkISA(java.lang.String)>','<com.android.server.audio.MediaFocusControl: android.media.audiopolicy.IAudioPolicyCallback access$100(com.android.server.audio.MediaFocusControl)>','<com.android.server.wm.WindowManagerService$LocalService: void setOnHardKeyboardStatusChangeListener(android.view.WindowManagerInternal$OnHardKeyboardStatusChangeListener)>','<com.android.server.audio.AudioService: void startBluetoothSco(android.os.IBinder,int)>','<com.android.server.connectivity.NetworkMonitor: void access$500(com.android.server.connectivity.NetworkMonitor,int)>','<com.android.server.connectivity.PacManager$3$1: void <init>(com.android.server.connectivity.PacManager$3)>','<com.android.server.am.ActivityManagerShellCommand: int runTaskFocus(java.io.PrintWriter)>','<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>','<com.android.server.pm.PackageSettingBase: void setInstalled(boolean,int)>','<com.android.server.wm.AppWindowContainerController: void notifyUnknownVisibilityLaunched()>','<com.android.server.wm.WindowManagerService$LocalService: android.view.MagnificationSpec getCompatibleMagnificationSpecForWindow(android.os.IBinder)>','<com.android.server.wm.WindowManagerService: void scheduleClearWillReplaceWindows(android.os.IBinder,boolean)>','<com.android.server.wm.WindowState: void onStartFreezingScreen()>','<com.android.server.wm.WindowState: boolean isObscuringDisplay()>','<android.hardware.usb.V1_0.IUsb$Stub: android.os.IHwBinder asBinder()>','<com.android.server.wm.WindowState: boolean isAnimatingWithSavedSurface()>','<com.android.server.pm.InstantAppRegistry: void pruneInstantApps()>','<com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$LocalHotspotState: void enter()>','<com.android.server.am.ActivityStackSupervisor: boolean attachApplicationLocked(com.android.server.am.ProcessRecord)>','<com.android.server.audio.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>','<com.android.server.wm.TaskWindowContainerController: void setTaskDockedResizing(boolean)>','<com.android.server.pm.IntentFilterVerificationState: int getUserId()>','<com.android.server.am.ActivityManagerShellCommand: int runTraceIpc(java.io.PrintWriter)>','<com.android.server.wm.ScreenRotationAnimation: void printTo(java.lang.String,java.io.PrintWriter)>','<com.android.server.pm.PackageManagerService: void access$6000(com.android.server.pm.PackageManagerService,java.lang.String,int,int,java.lang.String)>','<com.android.server.wm.WindowManagerService: void stopFreezingDisplayLocked()>','<com.android.server.NativeDaemonConnector: com.android.server.NativeDaemonEvent[] executeForList(com.android.server.NativeDaemonConnector$Command)>','<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>','<com.android.server.NativeDaemonConnector$Command: java.lang.String access$000(com.android.server.NativeDaemonConnector$Command)>','<com.android.server.pm.InstantAppRegistry: void grantInstantAccessLPw(int,android.content.Intent,int,int)>','<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>','<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)>','<com.android.server.pm.PackageManagerService$InstallArgs: void <init>(com.android.server.pm.PackageManagerService$OriginInfo,com.android.server.pm.PackageManagerService$MoveInfo,android.content.pm.IPackageInstallObserver2,int,java.lang.String,java.lang.String,android.os.UserHandle,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.security.cert.Certificate[][],int)>','<com.android.server.pm.PackageManagerService$EphemeralIntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>','<com.android.server.Watchdog$BinderThreadMonitor: void <init>(com.android.server.Watchdog$1)>','<com.android.server.NetworkManagementService: void stopClatd(java.lang.String)>','<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstantApps(int)>','<com.android.server.pm.dex.DexManager: void notifyPackageUpdated(java.lang.String,java.lang.String,java.lang.String[])>','<com.android.server.DeviceIdleController: android.net.INetworkPolicyManager access$700(com.android.server.DeviceIdleController)>','<com.android.server.wm.WindowManagerService: void setDockedStackCreateState(int,android.graphics.Rect)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int getStackId()>','<com.android.server.pm.PackageManagerService$MoveCallbacks: android.util.SparseIntArray access$6600(com.android.server.pm.PackageManagerService$MoveCallbacks)>','<com.android.server.NsdService$NsdStateMachine$DefaultState: void <init>(com.android.server.NsdService$NsdStateMachine)>','<com.android.server.am.ActivityStarter: void removePendingActivityLaunchesLocked(com.android.server.am.ActivityStack)>','<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>','<com.android.server.net.NetworkPolicyManagerService$NotificationId: java.lang.String getTag()>','<com.android.server.am.AppWaitingForDebuggerDialog$1: void handleMessage(android.os.Message)>','<com.android.server.am.ActivityStackSupervisor: boolean reportResumedActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.am.ActivityStackSupervisor: void handleAppCrashLocked(com.android.server.am.ProcessRecord)>','<com.android.server.firewall.StringFilter$1: void <init>(java.lang.String)>','<com.android.server.am.ActivityManagerService: int getAppStartModeLocked(int,java.lang.String,int,int,boolean,boolean)>','<com.android.server.audio.AudioService: void <clinit>()>','<com.android.server.pm.PackageManagerService$9: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int,boolean,boolean,int,int,int,int[],android.content.pm.IPackageDeleteObserver2,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: int getLockTaskModeState()>','<com.android.server.wm.WindowManagerService: void registerPointerEventListener(android.view.WindowManagerPolicy$PointerEventListener)>','<android.net.ip.RouterAdvertisementDaemon: void access$700(android.net.ip.RouterAdvertisementDaemon,java.net.InetSocketAddress)>','<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>','<com.android.server.am.ActivityManagerService$4: void run()>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: boolean equals(java.lang.Object)>','<com.android.server.am.UserController: void finishUserUnlocked(com.android.server.am.UserState)>','<com.android.server.am.ActivityManagerService: boolean isTopActivityImmersive()>','<com.android.server.wm.WallpaperWindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,boolean,com.android.server.wm.DisplayContent,boolean)>','<com.android.server.wm.WindowManagerService: float access$802(com.android.server.wm.WindowManagerService,float)>','<com.android.server.connectivity.Tethering: boolean access$802(com.android.server.connectivity.Tethering,boolean)>','<com.android.server.pm.CrossProfileIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.CrossProfileIntentFilter)>','<com.android.server.am.ActivityManagerService$LocalService: void <init>(com.android.server.am.ActivityManagerService)>','<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>','<com.android.server.power.ShutdownThread$CloseDialogReceiver: void <init>(android.content.Context)>','<com.android.server.wm.DisplayContent: void getLogicalDisplayRect(android.graphics.Rect)>','<com.android.server.location.FusedProxy: com.android.server.location.FusedProxy createAndBind(android.content.Context,android.os.Handler,android.hardware.location.IFusedLocationHardware,int,int,int)>','<com.android.server.location.GnssStatusListenerHelper$4: void execute(android.location.IGnssStatusListener)>','<com.android.server.NetworkManagementService: void removeInterfaceFromLocalNetwork(java.lang.String)>','<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>','<com.android.server.DeviceIdleController$5: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.net.NetworkStatsObservers$StatsContext: void <init>(android.net.NetworkStats,android.net.NetworkStats,android.util.ArrayMap,android.util.ArrayMap,com.android.internal.net.VpnInfo[],long)>','<com.android.server.am.ActivityStackSupervisor: void activitySleptLocked(com.android.server.am.ActivityRecord)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: void setHALInstrumentation()>','<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.procstats.ProcessStats,android.util.AtomicFile)>','<com.android.server.ConnectivityService: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>','<com.android.server.am.AppBindRecord: void dumpInIntentBind(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked()>','<com.android.server.am.ActivityManagerService$ImportanceToken: java.lang.String toString()>','<android.net.util.MultinetworkPolicyTracker$SettingObserver: void onChange(boolean)>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver$SchemesIterGenerator: void <init>(com.android.server.pm.PackageManagerService$ActivityIntentResolver)>','<com.android.server.firewall.SenderFilter$2: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>','<com.android.server.location.FusedLocationHardwareSecure: void unregisterSink(android.hardware.location.IFusedLocationHardwareSink)>','<com.android.server.pm.Installer: long[] getExternalSize(java.lang.String,int,int,int[])>','<com.android.server.AppOpsService: void dumpCommandHelp(java.io.PrintWriter)>','<com.android.server.pm.UserDataPreparer: java.io.File getDataSystemCeDirectory(int)>','<com.android.server.AppOpsService: void readState()>','<com.android.server.am.ActivityRecord: void setSleeping(boolean,boolean)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: java.util.ArrayList interfaceChain()>','<com.android.server.usb.descriptors.UsbDescriptor: void <clinit>()>','<com.android.server.location.GnssLocationProvider$8: boolean isAvailableInPlatform()>','<com.android.server.wm.DragState$InputInterceptor: void <init>(com.android.server.wm.DragState,android.view.Display)>','<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>','<com.android.server.pm.PermissionsState: int revokeInstallPermission(com.android.server.pm.BasePermission)>','<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistExceptIdleInternal()>','<com.android.server.am.ActivityManagerService: void registerProcessObserver(android.app.IProcessObserver)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>','<com.android.server.power.WirelessChargerDetector$2: void <init>(com.android.server.power.WirelessChargerDetector)>','<com.android.server.location.GeofenceManager: java.lang.Object access$000(com.android.server.location.GeofenceManager)>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getGlobalAlertBytes(long)>','<com.android.server.pm.PackageManagerService: java.util.List access$3900(com.android.server.pm.PackageManagerService,android.content.pm.PackageInfoLite,java.util.List,com.android.server.pm.PackageVerificationState)>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothA2dp access$3602(com.android.server.audio.AudioService,android.bluetooth.BluetoothA2dp)>','<com.android.server.am.ActivityManagerService: void killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>','<android.hardware.usb.V1_0.IUsb$Proxy: void switchRole(java.lang.String,android.hardware.usb.V1_0.PortRole)>','<com.android.server.net.NetworkStatsService$3: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.LocationManagerService: com.android.server.location.GnssNavigationMessageProvider access$1100(com.android.server.LocationManagerService)>','<com.android.server.am.ActivityStackSupervisor: void moveTasksToFullscreenStackLocked(int,boolean)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: void pruneInstantApps()>','<com.android.server.EventLogTags: void writeBackupQuotaExceeded(java.lang.String)>','<com.android.server.power.ShutdownThread: android.app.ProgressDialog access$100(com.android.server.power.ShutdownThread)>','<com.android.server.am.ActivityStackSupervisor: int getChildCount()>','<com.android.server.wm.DimLayerController: void resetDimming()>','<com.android.server.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>','<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>','<android.net.util.MultinetworkPolicyTracker: void <init>(android.content.Context,android.os.Handler,java.lang.Runnable)>','<com.android.server.pm.PackageManagerService$MoveInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<com.android.server.am.ActivityManagerShellCommand: int runStack(java.io.PrintWriter)>','<com.android.server.connectivity.NetworkMonitor: java.lang.String getCaptivePortalServerHttpUrl(android.content.Context)>','<com.android.server.pm.PackageSettingBase: android.util.SparseArray getUserState()>','<com.android.server.wm.SurfaceControlWithBackground: void setSize(int,int)>','<com.android.server.am.ActivityManagerService: int getUidState(int)>','<com.android.server.wm.WallpaperController: void wallpaperOffsetsComplete(android.os.IBinder)>','<com.android.server.power.WirelessChargerDetector: boolean update(boolean,int,int)>','<com.android.server.pm.PackageSettingBase: void setDisabledComponentsCopy(android.util.ArraySet,int)>','<com.android.server.wm.AppTransition: void overridePendingAppTransitionScaleUp(int,int,int,int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Proxy: void addDownstream(java.lang.String,java.lang.String,android.hardware.tetheroffload.control.V1_0.IOffloadControl$addDownstreamCallback)>','<com.android.server.ConnectivityService: void access$2600(com.android.server.ConnectivityService,int)>','<com.android.server.net.NetworkPolicyManagerService: boolean access$1100(com.android.server.net.NetworkPolicyManagerService,int,java.lang.String)>','<com.android.server.usb.UsbMidiDevice$InputReceiverProxy: void onSend(byte[],int,int,long)>','<com.android.server.am.ActivityStackSupervisor: boolean canUseActivityOptionsLaunchBounds(android.app.ActivityOptions,int)>','<com.android.server.audio.AudioService: boolean access$4500(com.android.server.audio.AudioService)>','<com.android.server.PinnerService$PinnedFile: void <init>(long,long,java.lang.String)>','<com.android.server.pm.InstantAppRegistry$UninstalledInstantAppState: void <init>(android.content.pm.InstantAppInfo,long)>','<com.android.server.am.BatteryStatsService: void noteStartCamera(int)>','<com.android.server.usb.UsbUserSettingsManager: void removeDevicePermissions(android.hardware.usb.UsbDevice)>','<com.android.server.pm.Installer: boolean reconcileSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String,int)>','<com.android.server.am.BatteryStatsService: void noteStopCamera(int)>','<com.android.server.wm.AppWindowToken: void addWindow(com.android.server.wm.WindowState)>','<com.android.server.wm.WindowManagerService: void setAnimationScale(int,float)>','<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>','<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>','<android.hardware.usb.V1_1.PortStatus_1_1: void readEmbeddedFromParcel(android.os.HwParcel,android.os.HwBlob,long)>','<com.android.server.ThreadPriorityBooster: void setBoostToPriority(int)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$600(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.NsdService$NsdStateMachine$EnabledState: boolean processMessage(android.os.Message)>','<com.android.server.location.LocationRequestStatistics$PackageStatistics: void access$100(com.android.server.location.LocationRequestStatistics$PackageStatistics,long)>','<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>','<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.util.ArrayList)>','<com.android.server.wm.WindowState: void destroySavedSurface()>','<com.android.server.pm.PackageManagerService: void onNewUserCreated(int)>','<com.android.server.wm.WindowSurfaceController: void removeRemoteTrace()>','<com.android.server.power.ShutdownThread$CloseDialogReceiver: void onDismiss(android.content.DialogInterface)>','<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>','<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.String)>','<com.android.server.firewall.SenderPackageFilter$1: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>','<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>','<com.android.server.am.ContentProviderRecord$ExternalProcessHandle: int access$000(com.android.server.am.ContentProviderRecord$ExternalProcessHandle)>','<com.android.server.pm.UserManagerService$UserData: void clearSeedAccountData()>','<com.android.server.NetworkManagementInternal: void <init>()>','<com.android.server.DeviceIdleController$BinderService: void unregisterMaintenanceActivityListener(android.os.IMaintenanceActivityListener)>','<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Stub: android.os.IHwBinder asBinder()>','<com.android.server.input.InputManagerService: long access$1100(com.android.server.input.InputManagerService)>','<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>','<com.android.server.power.WirelessChargerDetector: void access$200(com.android.server.power.WirelessChargerDetector)>','<com.android.server.pm.Settings: boolean isAdbInstallDisallowed(com.android.server.pm.UserManagerService,int)>','<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>','<android.hardware.usb.V1_1.IUsbCallback$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.pm.InstantAppRegistry: void access$100(com.android.server.pm.InstantAppRegistry,byte[],java.lang.String,java.io.File,int)>','<com.android.server.audio.MediaFocusControl: void unduckPlayers(com.android.server.audio.FocusRequester)>','<com.android.server.wm.WindowManagerService: void prolongAnimationsFromSpecs(android.view.AppTransitionAnimationSpec[],boolean)>','<com.android.server.wm.DisplayContent: void removeImmediately()>','<com.android.server.wm.TaskStack: void findTaskForResizePoint(int,int,int,com.android.server.wm.DisplayContent$TaskForResizePointSearchResult)>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$AudioHandler access$000(com.android.server.audio.AudioService)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult: boolean isFailed()>','<com.android.server.am.TaskRecord: void addStartingWindowsForVisibleActivities(boolean)>','<com.android.server.AppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>','<com.android.server.AlarmManagerService$Batch: int size()>','<com.android.server.wm.TaskStack: java.lang.String toString()>','<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)>','<com.android.server.wm.TaskSnapshotSurface: void drawBackgroundAndBars(android.graphics.Canvas,android.graphics.Rect)>','<com.android.server.input.InputManagerService: void access$1700(long,boolean)>','<com.android.server.usb.UsbAlsaManager: void <clinit>()>','<com.android.server.am.ActivityManagerShellCommand$1: void <init>(com.android.server.am.ActivityManagerShellCommand)>','<com.android.server.audio.AudioService: java.lang.Object access$3500(com.android.server.audio.AudioService)>','<com.android.server.audio.MediaFocusControl: void setFocusPolicy(android.media.audiopolicy.IAudioPolicyCallback)>','<com.android.server.usb.UsbUserSettingsManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>','<com.android.server.wm.WindowState: void getVisibleBounds(android.graphics.Rect)>','<com.android.server.am.ActivityManagerService: void stopLockTaskMode()>','<com.android.server.pm.PackageManagerService: void setHomeActivity(android.content.ComponentName,int)>','<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo access$7000(com.android.server.pm.PackageManagerService,java.lang.String,int,int,int)>','<com.android.server.usb.descriptors.UsbMSMidiInputJack: void <init>(int,byte,byte,byte)>','<com.android.server.pm.CrossProfileIntentFilter: java.lang.String getOwnerPackage()>','<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictions(java.lang.String)>','<com.android.server.SystemServerInitThreadPool: void shutdown()>','<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>','<com.android.server.pm.dex.PackageDexUsage$PackageUseInfo: boolean isUsedByOtherApps()>','<com.android.server.pm.Installer: void getUserSize(java.lang.String,int,int,int[],android.content.pm.PackageStats)>','<com.android.server.LocationManagerService: com.android.server.location.LocationRequestStatistics access$2700(com.android.server.LocationManagerService)>','<com.android.server.AlarmManagerService$IncreasingTimeOrder: int compare(com.android.server.AlarmManagerService$Alarm,com.android.server.AlarmManagerService$Alarm)>','<com.android.server.wm.DisplayContent: void rotateBounds(int,int,android.graphics.Rect)>','<com.android.server.audio.RecordingActivityMonitor$RecMonitorClient: void binderDied()>','<com.android.server.am.ActivityManagerService$Lifecycle: void <init>(android.content.Context)>','<android.net.INetd$Stub$Proxy: android.os.IBinder asBinder()>','<com.android.server.power.PowerManagerService: void <init>(android.content.Context,com.android.server.power.BatterySaverPolicy)>','<com.android.server.wm.AccessibilityController: void <init>(com.android.server.wm.WindowManagerService)>','<com.android.server.am.TaskPersister: java.io.File getUserTasksDir(int)>','<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>','<com.android.server.am.ActivityStack$ScheduleDestroyArgs: void <init>(com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.power.Notifier$7: void <init>(com.android.server.power.Notifier)>','<com.android.server.LocationManagerService$7: void <init>(com.android.server.LocationManagerService,android.os.Handler)>','<com.android.server.am.ActivityManagerService: void setImmersive(android.os.IBinder,boolean)>','<com.android.server.am.ActivityManagerService$LocalService: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: android.net.NetworkState selectPreferredUpstreamType(java.lang.Iterable)>','<com.android.server.EventLogTags: void writeNotificationActionClicked(java.lang.String,int,int,int,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy: void setDialerAppPackagesProviderLPw(android.content.pm.PackageManagerInternal$PackagesProvider)>','<com.android.server.audio.PlaybackActivityMonitor: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>','<com.android.server.am.TaskRecord: boolean updateOverrideConfiguration(android.graphics.Rect)>','<com.android.server.ThreadPriorityBooster: void <init>(int,int)>','<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>','<com.android.server.pm.PackageInstallerService$Callbacks: void access$700(com.android.server.pm.PackageInstallerService$Callbacks,int,int,boolean)>','<com.android.server.audio.AudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>','<com.android.server.pm.PackageSignatures: void <init>(android.content.pm.Signature[])>','<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>','<com.android.server.InputMethodManagerService$MyPackageMonitor: void onPackagesSuspended(java.lang.String[])>','<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,int,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager: void <clinit>()>','<com.android.server.connectivity.Vpn: boolean setAlwaysOnPackage(java.lang.String,boolean)>','<com.android.server.am.ActivityStarter: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.content.pm.ResolveInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.app.ActivityOptions,boolean,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord,java.lang.String)>','<com.android.server.am.BatteryStatsService: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>','<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquired(int)>','<com.android.server.am.ActivityRecord: void updateMultiWindowMode()>','<com.android.server.am.ActivityManagerService$PermissionController: java.lang.String[] getPackagesForUid(int)>','<com.android.server.wm.DisplayContent: boolean canAddToastWindowForUid(int)>','<com.android.server.connectivity.DataConnectionStats: android.telephony.ServiceState access$102(com.android.server.connectivity.DataConnectionStats,android.telephony.ServiceState)>','<com.android.server.pm.UserManagerService: void access$1100(com.android.server.pm.UserManagerService,int,android.os.Bundle,boolean,int)>','<com.android.server.wm.WindowContainer: int getOrientation(int)>','<com.android.server.am.ActivityStackSupervisor: android.hardware.input.InputManagerInternal access$1200(com.android.server.am.ActivityStackSupervisor)>','<com.android.server.wm.TaskSnapshotSurface: int access$300(com.android.server.wm.TaskSnapshotSurface)>','<com.android.server.wm.WindowSurfacePlacer: void deferLayout()>','<com.android.server.location.GnssLocationProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<android.net.ip.RouterAdvertisementDaemon: void <init>(java.lang.String,int,byte[])>','<com.android.server.am.ActivityManagerShellCommand: int access$000(com.android.server.am.ActivityManagerShellCommand)>','<com.android.server.am.UserController: int[] getStartedUserArrayLocked()>','<android.net.util.MultinetworkPolicyTracker: boolean configRestrictsAvoidBadWifi()>','<com.android.server.location.LocationBasedCountryDetector$3: void run()>','<com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver$MyHandler: void <init>(com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver,android.os.Looper)>','<com.android.server.am.EventLogTags: void writeAmServiceCrashedTooMuch(int,int,java.lang.String,int)>','<com.android.server.power.PowerManagerService: void access$4100(com.android.server.power.PowerManagerService,long,int,int,int)>','<com.android.server.am.ActiveServices: void performServiceRestartLocked(com.android.server.am.ServiceRecord)>','<com.android.server.pm.PackageManagerService: void <clinit>()>','<com.android.server.statusbar.StatusBarManagerService$1: void preloadRecentApps()>','<com.android.server.audio.MediaFocusControl: com.android.server.audio.PlayerFocusEnforcer access$700(com.android.server.audio.MediaFocusControl)>','<com.android.server.connectivity.tethering.OffloadHardwareInterface$ForwardedStats: void <init>()>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: boolean isPermissionsReviewRequired(java.lang.String,int)>','<com.android.server.DeviceIdleController$MotionListener: void <init>(com.android.server.DeviceIdleController,com.android.server.DeviceIdleController$1)>','<com.android.server.am.UriPermission: void removeWriteOwner(com.android.server.am.UriPermissionOwner)>','<com.android.server.usb.UsbDeviceManager$1: void <init>(com.android.server.usb.UsbDeviceManager)>','<com.android.server.am.PinnedActivityStack: void setPictureInPictureActions(java.util.List)>','<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.am.ActivityStack: void moveToFront(java.lang.String,com.android.server.am.TaskRecord)>','<com.android.server.wm.DockedStackDividerController: void setResizeDimLayer(boolean,int,float)>','<com.android.server.pm.CompilerStats: boolean maybeWriteAsync()>','<com.android.server.am.ActivityManagerService: android.content.Intent getHomeIntent()>','<com.android.server.wm.WindowManagerService: void saveANRStateLocked(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowState,java.lang.String)>','<com.android.server.pm.PackageInstallerSession: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.pm.Settings: void setInstallStatus(java.lang.String,int)>','<com.android.server.location.FusedLocationHardwareSecure: void startBatching(int,android.location.FusedBatchOptions)>','<com.android.server.pm.PackageManagerService$FileInstallArgs: java.io.File access$4100(com.android.server.pm.PackageManagerService$FileInstallArgs)>','<com.android.server.wm.WindowState$WindowId: boolean isFocused()>','<com.android.server.wm.InputMonitor: void setFocusedAppLw(com.android.server.wm.AppWindowToken)>','<com.android.server.EventLogTags: void writeWatchdog(java.lang.String)>','<com.android.server.InputMethodManagerService$3: void <init>(com.android.server.InputMethodManagerService)>','<com.android.server.am.CompatModeDialog: void updateControls()>','<com.android.server.net.NetworkStatsObservers$RequestInfo: void <init>(com.android.server.net.NetworkStatsObservers,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder,int,int)>','<com.android.server.net.NetworkPolicyManagerService: void updatePowerSaveTempWhitelistUL()>','<com.android.server.wm.Session: void setShowingAlertWindowNotificationAllowed(boolean)>','<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>','<com.android.server.DeviceIdleController$BinderService: long addPowerSaveTempWhitelistAppForSms(java.lang.String,int,java.lang.String)>','<com.android.server.connectivity.NetworkMonitor: com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver access$700(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.wm.AppTransition$3: void onAnimationStart(android.view.animation.Animation)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void access$100(com.android.server.connectivity.tethering.UpstreamNetworkMonitor,android.net.Network,android.net.NetworkCapabilities)>','<com.android.server.pm.BackgroundDexOptService: void <init>()>','<com.android.server.DeviceIdleController$4: void <init>(com.android.server.DeviceIdleController)>','<com.android.server.wm.RootWindowContainer: boolean handleNotObscuredLocked(com.android.server.wm.WindowState,boolean,boolean)>','<com.android.server.wm.ViewServer: boolean start()>','<com.android.server.AlarmManagerService$Constants: void dump(java.io.PrintWriter)>','<com.android.server.am.ActivityManagerService: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>','<com.android.server.pm.PackageInstallerSession: void <clinit>()>','<com.android.server.am.ActivityStackSupervisor: void removeLockedTaskLocked(com.android.server.am.TaskRecord)>','<com.android.server.usb.UsbDeviceManager: android.content.Intent access$1202(com.android.server.usb.UsbDeviceManager,android.content.Intent)>','<com.android.server.wm.DisplayContent: void reParentWindowToken(com.android.server.wm.WindowToken)>','<com.android.server.usb.descriptors.UsbACInterface: void <init>(int,byte,byte,byte)>','<com.android.server.wm.WindowContainer: android.util.Pools$SynchronizedPool access$100(com.android.server.wm.WindowContainer)>','<com.android.server.wm.DisplayContent$TaskStackContainers: void positionChildAt(int,com.android.server.wm.TaskStack,boolean)>','<com.android.server.ConnectivityService$ReapUnvalidatedNetworks: void <clinit>()>','<android.hardware.usb.V1_0.PortRole: int hashCode()>','<com.android.server.audio.AudioService: com.android.server.audio.AudioService$SoundPoolCallback access$2302(com.android.server.audio.AudioService,com.android.server.audio.AudioService$SoundPoolCallback)>','<com.android.server.net.NetworkStatsService: android.net.INetworkStatsSession openSessionForUsageStats(java.lang.String)>','<com.android.server.am.KeyguardController: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[],com.android.server.input.InputWindowHandle)>','<com.android.server.wm.WindowState: boolean isVisibleLw()>','<com.android.server.power.PowerManagerService: int getLastShutdownReasonInternal(java.io.File)>','<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>','<com.android.server.pm.UserManagerService: int getUserHandle(int)>','<com.android.server.am.EventLogTags: void writeAmProcGood(int,int,java.lang.String)>','<com.android.server.am.KeyguardController: boolean isKeyguardLocked()>','<com.android.server.ConnectivityService: void <clinit>()>','<android.hardware.usb.V1_0.IUsb$Stub: java.util.ArrayList getHashChain()>','<com.android.server.pm.PackageManagerService: int access$7900(com.android.server.pm.PackageManagerService,int)>','<com.android.server.pm.PackageManagerService: boolean performDexOptSecondary(java.lang.String,java.lang.String,boolean)>','<com.android.server.InputMethodManagerService$3: void onCancel(android.content.DialogInterface)>','<com.android.server.wm.Task: void removeIfPossible()>','<com.android.server.location.LocationBasedCountryDetector$2: void run()>','<com.android.server.wm.KeyguardDisableHandler$KeyguardTokenWatcher: void updateAllowState()>','<com.android.server.wm.WindowManagerService$LocalService: void getWindowFrame(android.os.IBinder,android.graphics.Rect)>','<com.android.server.pm.UserManagerService$LocalService: boolean isUserRunning(int)>','<com.android.server.am.NativeCrashListener$NativeCrashReporter: void run()>','<com.android.server.pm.UserManagerService: void systemReady()>','<com.android.server.audio.AudioService: int getMode()>','<com.android.server.policy.IconUtilities: android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)>','<com.android.server.am.VrController: int access$300(com.android.server.am.VrController,int,boolean)>','<com.android.server.NsdService: void access$1700(com.android.server.NsdService,android.os.Message,int,java.lang.Object)>','<com.android.server.ThreadPriorityBooster: void boost()>','<com.android.server.wm.PinnedStackController$PinnedStackControllerCallback: int getDisplayRotation()>','<com.android.server.LocationManagerService$4: void <init>(com.android.server.LocationManagerService)>','<com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter readFromXml(com.android.server.firewall.StringFilter$ValueProvider,org.xmlpull.v1.XmlPullParser)>','<com.android.server.AlarmManagerService: boolean triggerAlarmsLocked(java.util.ArrayList,long,long)>','<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: boolean processMessage(android.os.Message)>','<com.android.server.am.CompatModeDialog$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine: void unwanted()>','<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$NeededUriGrants checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants,int)>','<com.android.server.am.ActiveServices: void scheduleServiceForegroundTransitionTimeoutLocked(com.android.server.am.ServiceRecord)>','<com.android.server.am.TaskRecord: void updateTaskDescription()>','<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(java.lang.String)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setSurface(android.view.Surface,int,int,int)>','<com.android.server.audio.MediaFocusControl$2: void <init>(com.android.server.audio.MediaFocusControl,boolean)>','<com.android.server.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>','<com.android.server.am.TaskChangeNotificationController: void notifyTaskRemovalStarted(int)>','<com.android.server.audio.AudioService: void unloadSoundEffects()>','<com.android.server.wm.WindowContainer: android.content.res.Configuration getMergedOverrideConfiguration()>','<com.android.server.location.FusedLocationHardwareSecure: void injectDeviceContext(int)>','<com.android.server.power.BatterySaverPolicy: android.os.PowerSaveState getBatterySaverPolicy(int,boolean)>','<com.android.server.am.BatteryStatsService: void noteStopAudio(int)>','<com.android.server.wm.WindowManagerService: float[] getAnimationScales()>','<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$PackageFreezer freezePackage(java.lang.String,java.lang.String)>','<com.android.server.pm.DefaultPermissionGrantPolicy$DefaultPermissionGrant: void <init>(java.lang.String,boolean)>','<android.net.INetd$Stub$Proxy: int getMetricsReportingLevel()>','<com.android.server.net.NetworkPolicyManagerService: boolean addDefaultRestrictBackgroundWhitelistUidsUL()>','<com.android.server.AlarmManagerService$2: android.app.AlarmManager$AlarmClockInfo getNextAlarmClock(int)>','<com.android.server.net.NetworkStatsService$2: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.pm.Settings$RuntimePermissionPersistence: void readStateForUserSyncLPr(int)>','<com.android.server.am.ServiceRecord: int getLastStartId()>','<com.android.server.pm.Settings: void writeUsesStaticLibLPw(org.xmlpull.v1.XmlSerializer,java.lang.String[],int[])>','<com.android.server.DeviceIdleController: void setNetworkPolicyTempWhitelistCallbackInternal(java.lang.Runnable)>','<com.android.server.wm.PinnedStackWindowController: void <init>(int,com.android.server.wm.PinnedStackWindowListener,int,boolean,android.graphics.Rect)>','<com.android.server.audio.MediaFocusControl: void access$200(com.android.server.audio.MediaFocusControl,android.os.IBinder)>','<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties access$702(com.android.server.location.LocationProviderProxy,com.android.internal.location.ProviderProperties)>','<com.android.server.pm.PackageManagerService: boolean isPackageSuspendedForUser(java.lang.String,int)>','<com.android.server.ConnectivityService$5: void <clinit>()>','<com.android.server.pm.CrossProfileIntentFilter: void <init>(android.content.IntentFilter,java.lang.String,int,int)>','<com.android.server.net.NetworkStatsCollection: void read(java.io.InputStream)>','<com.android.server.power.PowerManagerService: void access$4200(com.android.server.power.PowerManagerService,long,int)>','<com.android.server.usb.UsbProfileGroupSettingsManager$DeviceFilter: void <init>(int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String)>','<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState computeImeTarget(boolean)>','<com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo: void <init>(com.android.server.connectivity.KeepaliveTracker,android.os.Messenger,android.os.IBinder,com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.KeepalivePacketData,int)>','<com.android.server.ServiceWatcher$2: void onPackageUpdateFinished(java.lang.String,int)>','<com.android.server.pm.PackageManagerService$28: void <init>(com.android.server.pm.PackageManagerService,java.lang.String,int)>','<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: void <init>()>','<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getTimeCacheMaxAge()>','<com.android.server.pm.PackageSettingBase: void copyFrom(com.android.server.pm.PackageSettingBase)>','<com.android.server.location.FusedProxy: void access$100(com.android.server.location.FusedProxy,android.hardware.location.IFusedLocationHardware)>','<com.android.server.ConnectivityService: com.android.internal.util.WakeupMessage makeWakeupMessage(android.content.Context,android.os.Handler,java.lang.String,int,java.lang.Object)>','<com.android.server.pm.PackageManagerService: boolean addPermission(android.content.pm.PermissionInfo)>','<com.android.server.usb.UsbDeviceManager$4: void onReceive(android.content.Context,android.content.Intent)>','<android.hardware.configstore.V1_0.ISurfaceFlingerConfigs$Proxy: android.hardware.configstore.V1_0.OptionalInt64 vsyncEventPhaseOffsetNs()>','<com.android.server.AlarmManagerService$3: void <init>(com.android.server.AlarmManagerService)>','<com.android.server.ConnectivityService: void startTethering(int,android.os.ResultReceiver,boolean,java.lang.String)>','<com.android.server.am.ActivityManagerShellCommand: boolean access$302(com.android.server.am.ActivityManagerShellCommand,boolean)>','<com.android.server.usb.descriptors.UsbACMixerUnit: byte[] getInputIDs()>','<com.android.server.wm.AppWindowToken: void postWindowRemoveStartingWindowCleanup(com.android.server.wm.WindowState)>','<com.android.server.usb.UsbMidiDevice$InputReceiverProxy: void <init>(com.android.server.usb.UsbMidiDevice,com.android.server.usb.UsbMidiDevice$1)>','<com.android.server.wm.WindowManagerService: boolean rotationNeedsUpdateLocked()>','<com.android.server.am.ActivityManagerService: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>','<com.android.server.wm.WindowManagerService: void removeWindow(com.android.server.wm.Session,android.view.IWindow)>','<com.android.server.NetworkManagementService: void removeRoute(int,android.net.RouteInfo)>','<com.android.server.location.LocationBasedCountryDetector: void stop()>','<com.android.server.am.BroadcastQueue$AppNotResponding: void <init>(com.android.server.am.BroadcastQueue,com.android.server.am.ProcessRecord,java.lang.String)>','<com.android.server.location.GpsXtraDownloader: byte[] downloadXtraData()>','<com.android.server.am.ActivityStackSupervisor: void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)>','<com.android.server.wm.WindowManagerService$LocalService: void registerAppTransitionListener(android.view.WindowManagerInternal$AppTransitionListener)>','<com.android.server.am.UserController: int handleIncomingUser(int,int,int,boolean,int,java.lang.String,java.lang.String)>','<com.android.server.wm.AppTransition$1: void <init>(com.android.server.wm.AppTransition)>','<com.android.server.net.NetworkStatsService$7: void <init>(com.android.server.net.NetworkStatsService)>','<android.net.ip.RouterAdvertisementDaemon$MulticastTransmitter: void run()>','<com.android.server.pm.Settings: com.android.server.pm.PackageSetting addPackageLPw(java.lang.String,java.lang.String,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,java.lang.String,java.util.List,java.lang.String[],int[])>','<com.android.server.wm.WallpaperController: void addWallpaperToken(com.android.server.wm.WallpaperWindowToken)>','<com.android.server.power.PowerManagerService: boolean isDeviceIdleModeInternal()>','<com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.Object)>','<com.android.server.am.ActivityManagerService: void serviceDoneExecuting(android.os.IBinder,int,int,int)>','<com.android.server.am.TaskChangeNotificationController: com.android.server.am.TaskChangeNotificationController$TaskStackConsumer access$1500(com.android.server.am.TaskChangeNotificationController)>','<com.android.server.ConnectivityService$2: void <init>(com.android.server.ConnectivityService)>','<com.android.server.LocationManagerService: android.util.ArrayMap access$800(com.android.server.LocationManagerService)>','<com.android.server.pm.PackageManagerService$PackageManagerInternalImpl: java.lang.String getNameForUid(int)>','<com.android.server.wm.WindowManagerService: void access$1300(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent,int,int)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: boolean allowFilterResult(android.content.pm.PackageParser$ServiceIntentInfo,java.util.List)>','<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>','<com.android.server.am.ActivityStack: void positionChildWindowContainerAtTop(com.android.server.am.TaskRecord)>','<com.android.server.wm.DisplayContent: void onSeamlessRotationTimeout()>','<com.android.server.am.UriPermission$PersistedTimeComparator: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.pm.ProcessLoggingHandler: void invalidateProcessLoggingBaseApkHash(java.lang.String)>','<com.android.server.wm.BoundsAnimationController$BoundsAnimator: android.animation.AnimationHandler getAnimationHandler()>','<com.android.server.location.GnssLocationProvider$14: void <init>(com.android.server.location.GnssLocationProvider,android.location.GnssNavigationMessage)>','<com.android.server.location.GnssLocationProvider: com.android.internal.location.ProviderProperties getProperties()>','<com.android.server.DeviceIdleController$BinderService: int[] getAppIdWhitelistExceptIdle()>','<com.android.server.ConnectivityService: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean)>','<com.android.server.net.NetworkPolicyManagerService: void setDeviceIdleMode(boolean)>','<com.android.server.am.KeyguardController: void endActivityVisibilityUpdate()>','<com.android.server.ConnectivityService: void updateMobileDataAlwaysOn()>','<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodInfo[] access$1100(com.android.server.InputMethodManagerService)>','<com.android.server.pm.PackageManagerService$PackageRemovedInfo: void sendSystemPackageUpdatedBroadcasts()>','<com.android.server.am.ActivityStack: int numActivities()>','<com.android.server.net.NetworkStatsService: android.net.INetworkStatsSession openSession()>','<com.android.server.wm.WindowManagerService: android.graphics.Region getCurrentImeTouchRegion()>','<com.android.server.ConnectivityService: int untether(java.lang.String,java.lang.String)>','<com.android.server.am.ActivityStackSupervisor: boolean realStartActivityLocked(com.android.server.am.ActivityRecord,com.android.server.am.ProcessRecord,boolean,boolean)>','<com.android.server.wm.WallpaperController: void removeWallpaperToken(com.android.server.wm.WallpaperWindowToken)>','<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>','<com.android.server.wm.SplashScreenStartingData: android.view.WindowManagerPolicy$StartingSurface createStartingSurface(com.android.server.wm.AppWindowToken)>','<com.android.server.wm.WindowManagerService: void createInputConsumer(java.lang.String,android.view.InputChannel)>','<com.android.server.connectivity.PermissionMonitor$1: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.net.NetworkPolicyManagerService: void maybeRefreshTrustedTime()>','<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>','<com.android.server.pm.BasePermission: boolean isInstant()>','<com.android.server.am.ActivityManagerService: void finishSubActivity(android.os.IBinder,java.lang.String,int)>','<com.android.server.am.ActivityManagerService: void registerIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>','<com.android.server.NetworkManagementService$1: void <init>(com.android.server.NetworkManagementService,int)>','<com.android.server.wm.ViewServer: void <init>(com.android.server.wm.WindowManagerService,int)>','<com.android.server.wm.TaskStack: void endImeAdjustAnimation()>','<com.android.server.pm.PackageUsage: void <init>()>','<com.android.server.am.ProcessList: java.lang.String makeProcStateString(int)>','<com.android.server.audio.AudioService: boolean access$9502(com.android.server.audio.AudioService,boolean)>','<com.android.server.am.ProcessRecord: void stopFreezingAllLocked()>','<com.android.server.wm.AppWindowContainerController: void reportWindowsGone()>','<com.android.server.pm.PackageManagerService: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>','<com.android.server.am.ActivityManagerService: boolean convertToTranslucent(android.os.IBinder,android.os.Bundle)>','<com.android.server.AppOpsService: void finishOperationLocked(com.android.server.AppOpsService$Op)>','<com.android.server.usb.UsbDebuggingManager: java.lang.String access$300(com.android.server.usb.UsbDebuggingManager,java.lang.String)>','<com.android.server.pm.PackageSettingBase: void removeUser(int)>','<com.android.server.SystemServerInitThreadPool: void <clinit>()>','<com.android.server.wm.WindowState: android.graphics.Rect getVisibleFrameLw()>','<com.android.server.pm.PackageManagerService: boolean access$8000(com.android.server.pm.PackageManagerService,int,int)>','<com.android.server.am.ActivityStack: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>','<com.android.server.location.GnssLocationProvider: void access$5000(com.android.server.location.GnssLocationProvider)>','<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>','<com.android.server.wm.DisplayContent$DisplayChildWindowContainer: boolean fillsParent()>','<android.net.INetd$Stub$Proxy: boolean isAlive()>','<android.hardware.usb.V1_1.IUsbCallback$Stub: java.lang.String toString()>','<com.android.server.connectivity.NetworkMonitor$1ProbeThread: com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult result()>','<com.android.server.wm.PinnedStackController: android.view.DisplayInfo access$400(com.android.server.wm.PinnedStackController)>','<com.android.server.net.NetworkStatsRecorder: void recordSnapshotLocked(android.net.NetworkStats,java.util.Map,com.android.internal.net.VpnInfo[],long)>','<com.android.server.pm.Installer: void getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[],android.content.pm.PackageStats)>','<com.android.server.am.ActivityManagerService$4: void <init>(com.android.server.am.ActivityManagerService,java.lang.String)>','<com.android.server.statusbar.StatusBarManagerService$2: void <init>(com.android.server.statusbar.StatusBarManagerService,int)>','<com.android.server.NativeDaemonEvent: int getCode()>','<com.android.server.wm.WindowContainer: com.android.server.wm.WindowContainer getTopChild()>','<com.android.server.pm.PackageManagerService: int updateFlagsForResolve(int,int,android.content.Intent,int,boolean)>','<com.android.server.audio.MediaFocusControl: java.util.Stack access$400(com.android.server.audio.MediaFocusControl)>','<com.android.server.connectivity.NetworkMonitor$CaptivePortalState: void <init>(com.android.server.connectivity.NetworkMonitor,com.android.server.connectivity.NetworkMonitor$1)>','<com.android.server.usb.UsbPortManager: void disconnectSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.wm.WindowAnimator: com.android.server.wm.ScreenRotationAnimation getScreenRotationAnimationLocked(int)>','<com.android.server.power.PowerManagerService: void uidGoneInternal(int)>','<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>','<com.android.server.wm.AccessibilityController$DisplayMagnifier: android.graphics.Region access$700(com.android.server.wm.AccessibilityController$DisplayMagnifier)>','<com.android.server.audio.AudioService$AudioPolicyProxy: void <init>(com.android.server.audio.AudioService,android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean)>','<com.android.server.usb.UsbDeviceManager$AdbSettingsObserver: void onChange(boolean)>','<com.android.server.wm.InputMonitor$UpdateInputForAllWindowsConsumer: void <init>(com.android.server.wm.InputMonitor,com.android.server.wm.InputMonitor$1)>','<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>','<com.android.server.am.ActivityManagerService: void startRunningVoiceLocked(android.service.voice.IVoiceInteractionSession,int)>','<com.android.server.wm.WindowManagerService: int getInitialDisplayDensity(int)>','<com.android.server.wm.TaskSnapshotController: void setPersisterPaused(boolean)>','<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>','<com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver: android.content.Intent getResult()>','<com.android.server.wm.DisplaySettings: void writeSettingsLocked()>','<com.android.server.usb.descriptors.UsbACInputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void sortResults(java.util.List)>','<com.android.server.connectivity.tethering.TetherInterfaceStateMachine$BaseServingState: void exit()>','<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>','<com.android.server.pm.Settings: java.util.Collection getAllSharedUsersLPw()>','<com.android.server.InputMethodManagerService: void access$700(com.android.server.InputMethodManagerService,android.os.IBinder,int,int)>','<com.android.server.AttributeCache: void <init>(android.content.Context)>','<com.android.server.am.BatteryStatsService: void noteStartAudio(int)>','<android.hardware.usb.V1_0.PortStatus: void writeEmbeddedToBlob(android.os.HwBlob,long)>','<com.android.server.wm.WindowStateAnimator: boolean isWindowAnimationSet()>','<com.android.server.InputMethodManagerService: void <init>(android.content.Context)>','<com.android.server.wm.DockedStackDividerController: void getDimBounds(android.graphics.Rect)>','<com.android.server.firewall.SenderPermissionFilter: void <clinit>()>','<com.android.server.audio.AudioService$VolumeStreamState: boolean access$5200(com.android.server.audio.AudioService$VolumeStreamState)>','<com.android.server.connectivity.NetworkDiagnostics: long access$100()>','<com.android.server.wm.DisplayContent$ScreenshotApplicationState: void <init>(com.android.server.wm.DisplayContent$1)>','<com.android.server.connectivity.NetworkMonitor: boolean access$1300(com.android.server.connectivity.NetworkMonitor)>','<com.android.server.wm.RemoteSurfaceTrace: void setGeometryAppliesWithResize()>','<com.android.server.am.ProviderMap: void putProviderByClass(android.content.ComponentName,com.android.server.am.ContentProviderRecord)>','<com.android.server.wm.DockedStackDividerController: float getInterpolatedDividerValue(float)>','<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)>','<com.android.server.wm.WindowManagerService: void updatePointerIcon(android.view.IWindow)>','<com.android.server.AnyMotionDetector$3: void run()>','<com.android.server.connectivity.NetworkAgentInfo: void unlinger()>','<com.android.server.am.ActivityManagerService$5: void run()>','<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>','<com.android.server.power.Notifier: void onWakefulnessChangeFinished()>','<com.android.server.pm.KeySetManagerService: void readKeySetListLPw(org.xmlpull.v1.XmlPullParser)>','<com.android.server.net.NetworkStatsCollection: void dump(com.android.internal.util.IndentingPrintWriter)>','<com.android.server.location.GnssStatusListenerHelper$5: void execute(android.location.IGnssStatusListener)>','<com.android.server.audio.AudioService$ForceControlStreamClient: void <init>(com.android.server.audio.AudioService,android.os.IBinder)>','<com.android.server.pm.CrossProfileIntentFilter: java.lang.String getStringFromXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>','<com.android.server.InputMethodManagerService$LocalServiceImpl: void setInteractive(boolean)>','<com.android.server.pm.Installer: void removeIdmap(java.lang.String)>','<com.android.server.pm.PackageVerificationState: void addSufficientVerifier(int)>','<com.android.server.pm.UserDataPreparer: void reconcileUsers(java.lang.String,java.util.List,java.util.List)>','<com.android.server.am.ActivityManagerService: void requestBugReport(int)>','<com.android.server.wm.DisplayContent: boolean checkCompleteDeferredRemoval()>','<com.android.server.am.UserController: void sendBootCompletedLocked(android.content.IIntentReceiver)>','<com.android.server.pm.PackageManagerService$MoveCallbacks: void <init>(android.os.Looper)>','<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering()>','<com.android.server.usb.UsbProfileGroupSettingsManager$AccessoryFilter: int hashCode()>','<com.android.server.pm.PackageManagerService$AsecInstallArgs: void <init>(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>','<com.android.server.ServiceWatcher$1: void <init>(com.android.server.ServiceWatcher)>','<com.android.server.DeviceIdleController: void cancelAlarmLocked()>','<com.android.server.input.InputManagerService: void access$200(com.android.server.input.InputManagerService)>','<com.android.server.am.ActivityRecord: boolean isNonResizableOrForcedResizable()>','<com.android.server.wm.DisplayContent: int getLastOrientation()>','<com.android.server.am.UriPermission: com.android.server.am.UriPermission$Snapshot snapshot()>','<com.android.server.am.UserSwitchingDialog$1: void handleMessage(android.os.Message)>','<com.android.server.am.AppErrorDialog: void onStart()>','<com.android.server.net.NetworkPolicyManagerService$12: void onReceive(android.content.Context,android.content.Intent)>','<com.android.server.audio.AudioService: android.bluetooth.BluetoothHeadset access$3200(com.android.server.audio.AudioService)>','<com.android.server.net.NetworkPolicyManagerService$NotificationId: boolean equals(java.lang.Object)>','<com.android.server.wm.AppWindowContainerController: void startFreezingScreen(int)>','<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void addToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)>','<com.android.server.wm.WindowManagerService: void clearForcedDisplaySize(int)>','<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)>','<com.android.server.connectivity.tethering.UpstreamNetworkMonitor: void updateMobileRequiresDun(boolean)>','<com.android.server.am.ConnectionRecord: void dump(java.io.PrintWriter,java.lang.String)>','<com.android.server.am.ProcessStatsService$2: void run()>','<com.android.server.wm.WallpaperController: boolean isWallpaperVisible()>','<com.android.server.location.GnssLocationProvider: android.net.ConnectivityManager access$6600(com.android.server.location.GnssLocationProvider)>','<android.hardware.usb.V1_1.IUsbCallback$Stub: void <init>()>','<com.android.server.pm.PackageSettingBase: void setSuspended(boolean,int)>','<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: byte getSubclass()>','<com.android.server.DeviceIdleController: boolean isOpsInactiveLocked()>','<com.android.server.pm.Installer: void destroyUserData(java.lang.String,int,int)>','<com.android.server.wm.WindowState: void setVisibleBeforeClientHidden()>','<com.android.server.location.GnssLocationProvider$9: boolean registerWithService()>','<com.android.server.pm.Installer: void <init>(android.content.Context)>','<com.android.server.net.NetworkStatsService: void access$1200(com.android.server.net.NetworkStatsService)>','<com.android.server.EventLogTags: void writeStreamDevicesChanged(int,int,int)>','<android.hardware.usb.V1_0.IUsb$Proxy: void queryPortStatus()>','<android.net.ip.RouterAdvertisementDaemon: java.lang.String access$600()>','<com.android.server.usb.descriptors.UsbDescriptor: void setStatus(int)>','<com.android.server.EventLogTags: void writeDeviceIdleOnStart()>','<com.android.server.am.ActivityManagerService: int stopUser(int,boolean,android.app.IStopUserCallback)>','<com.android.server.wm.TaskSnapshotSurface: com.android.server.wm.WindowManagerService access$000(com.android.server.wm.TaskSnapshotSurface)>','<com.android.server.am.TaskRecord: void setLockTaskAuth()>','<com.android.server.TelephonyRegistry: void notifySubscriptionInfoChanged()>','<com.android.server.pm.InstantAppRegistry: android.graphics.Bitmap getInstantAppIconLPw(java.lang.String,int)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Proxy: void <init>(android.os.IHwBinder)>','<com.android.server.pm.PackageManagerService$21: void <init>(com.android.server.pm.PackageManagerService,boolean,java.util.Set)>','<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>','<com.android.server.pm.Installer$1: void binderDied()>','<com.android.server.usb.UsbSettingsManager: void <clinit>()>','<com.android.server.pm.InstructionSets: java.util.List getAllInstructionSets()>','<com.android.server.usb.UsbPortManager$DeathRecipient: void <init>(com.android.server.usb.UsbPortManager,com.android.internal.util.IndentingPrintWriter)>','<com.android.server.pm.PackageManagerService: java.util.Comparator access$2900()>','<com.android.server.wm.TaskPositioner: boolean access$200(com.android.server.wm.TaskPositioner,float,float)>','<com.android.server.am.ActivityManagerShellCommand$MyActivityController$1: void run()>','<com.android.server.pm.PackageManagerService$DumpState: void <init>()>','<com.android.server.am.BatteryStatsService: void noteAlarmFinish(java.lang.String,int)>','<com.android.server.pm.PackageManagerService: boolean isUpgrade()>','<com.android.server.wm.AccessibilityController: boolean hasCallbacksLocked()>','<com.android.server.audio.AudioService: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>','<com.android.server.location.RemoteListenerHelper: boolean access$002(com.android.server.location.RemoteListenerHelper,boolean)>','<com.android.server.pm.PackageManagerService: boolean isUidPrivileged(int)>','<com.android.server.am.UserController$3: void userStopped(int)>','<com.android.server.net.NetworkPolicyManagerService$1: int getServiceType()>','<com.android.server.am.ActivityManagerService: boolean updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean)>','<com.android.server.usb.descriptors.UsbConfigDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>','<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>','<com.android.server.wm.WindowState: void access$300(com.android.server.wm.WindowState,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.util.MergedConfiguration,boolean,int)>','<com.android.server.pm.DefaultPermissionGrantPolicy: android.util.ArrayMap access$200(com.android.server.pm.DefaultPermissionGrantPolicy)>','<com.android.server.am.UserController: void dispatchUserSwitchComplete(int)>','<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean,int,boolean)>','<com.android.server.wm.WindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,int,boolean,com.android.server.wm.DisplayContent,boolean)>','<com.android.server.ConnectivityService: void access$2500(com.android.server.ConnectivityService,com.android.server.connectivity.NetworkAgentInfo)>','<com.android.server.am.ActivityStackSupervisor: void <clinit>()>','<com.android.server.am.ActivityRecord: boolean isAssistantActivity()>','<com.android.server.pm.PackageManagerService$ActivityIntentResolver: java.lang.Object filterToLabel(android.content.pm.PackageParser$ActivityIntentInfo)>','<android.hardware.usb.V1_0.IUsbCallback$Stub: java.lang.String interfaceDescriptor()>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub$2: void onValues(boolean,java.lang.String)>','<com.android.server.pm.PackageManagerShellCommand$2: int compare(java.lang.Object,java.lang.Object)>','<com.android.server.wm.WindowStateAnimator: void setMoveAnimation(int,int)>','<com.android.server.pm.UserManagerService$LocalService: boolean removeUserEvenWhenDisallowed(int)>','<android.hardware.tetheroffload.control.V1_0.IOffloadControl$Stub: android.os.IHwInterface queryLocalInterface(java.lang.String)>','<com.android.server.am.PinnedActivityStack: void <init>(com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.RecentTasks,boolean)>','<com.android.server.pm.PackageManagerService$DefaultContainerConnection: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch: void sendErrorResult(java.lang.String)>','<com.android.server.location.PassiveProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>','<com.android.server.am.BroadcastQueue: java.lang.String toString()>','<com.android.server.input.InputManagerService$KeyboardLayoutDescriptor: com.android.server.input.InputManagerService$KeyboardLayoutDescriptor parse(java.lang.String)>','<android.hardware.tetheroffload.control.V1_0.ITetheringOffloadCallback$Stub: void notifySyspropsChanged()>','<com.android.server.usb.descriptors.UsbASGeneral: byte getTerminalLink()>','<com.android.server.pm.PackageManagerService$16: void <init>(com.android.server.pm.PackageManagerService)>','<com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int)>','<com.android.server.InputMethodManagerService: android.app.AlertDialog access$800(com.android.server.InputMethodManagerService)>','<com.android.server.NetworkManagementService: void setDnsConfigurationForNetwork(int,java.lang.String[],java.lang.String)>','<com.android.server.pm.PackageManagerService$ServiceIntentResolver: android.content.pm.ResolveInfo newResult(android.content.pm.PackageParser$ServiceIntentInfo,int,int)>'}

@data
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.usb.UsbService: void <init>(android.content.Context)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.location.PassiveProvider: com.android.internal.location.ProviderProperties getProperties()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings: long getPollInterval()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,true,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.pm.PackageManagerService$ActivityIntentResolver: android.content.IntentFilter[] newArray(int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,true,false,true,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,true,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.LocationManagerService$Receiver: boolean callStatusChangedLocked(java.lang.String,int,android.os.Bundle)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.NsdService$NsdStateMachine$DisabledState: void enter()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,sink,'<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,source,'<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>'
false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,neithernor,'<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>'
